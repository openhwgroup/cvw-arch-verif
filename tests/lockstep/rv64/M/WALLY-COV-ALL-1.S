//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    

// ******************
// Tests from: WALLY-COV-mulw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x6bac973893baec53 # initialize rs1
li x24, 0x2b1c1174f7be0be9 # initialize rs2
mulw x28, x0, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xb4740966d8f6eb67 # initialize rs1
li x17, 0x49ece0217d8134ae # initialize rs2
mulw x22, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xe066bf0c26611cda # initialize rs1
li x17, 0xe0b544ce0fe2984a # initialize rs2
mulw x8, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xbbb0fde1bf5b14f0 # initialize rs1
li x8, 0xf99e1b1aebe5a2ee # initialize rs2
mulw x15, x3, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8343de21703419bc # initialize rs1
li x27, 0x57c4cb8d1314d719 # initialize rs2
mulw x8, x4, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x10c91afd7827ee2e # initialize rs1
li x19, 0xa5603715ba64c6dd # initialize rs2
mulw x21, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9dc12d210b2a1e5b # initialize rs1
li x12, 0xc597ed46fed3e8ea # initialize rs2
mulw x24, x6, x12 # perform operation
RVTEST_SIGUPD(x7, x0, x24, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc52d4fd735b762aa # initialize rs1
li x9, 0x7d1e9dc28a13a54a # initialize rs2
mulw x5, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x6c1463cfd7af408a # initialize rs1
li x16, 0x8616c36571e17332 # initialize rs2
mulw x1, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xc9a0caeb170baa8b # initialize rs1
li x28, 0xa8a195df95dfc8c3 # initialize rs2
mulw x3, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xbf3876502b8a79e3 # initialize rs1
li x7, 0xd14825a6f85ed9e8 # initialize rs2
mulw x17, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xcda9fa88cb3d026a # initialize rs1
li x24, 0xc8c65474cf3cff36 # initialize rs2
mulw x29, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xa566490fc40d0e3d # initialize rs1
li x9, 0xee2f690451e4167a # initialize rs2
mulw x22, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xfc281dc672d8bc46 # initialize rs1
li x30, 0x6a6990f3cb7fee14 # initialize rs2
mulw x28, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xb14e667f144e645f # initialize rs1
li x31, 0xdfa9cff8802e663c # initialize rs2
mulw x23, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x1dd1a34915100d5d # initialize rs1
li x29, 0x43e6bb3059dd3e0f # initialize rs2
mulw x20, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xbdb04634539e8367 # initialize rs1
li x27, 0x29ce91fe44e74e9e # initialize rs2
mulw x2, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x14fea2d6bb646cbd # initialize rs1
li x15, 0x1bc33bb747e6d101 # initialize rs2
mulw x16, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x7089ce8dd7431a96 # initialize rs1
li x13, 0x630ff6c4fbed1924 # initialize rs2
mulw x26, x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xce0eebba18d29010 # initialize rs1
li x22, 0x7c198280d59b3970 # initialize rs2
mulw x17, x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xc1dece80a2ad068c # initialize rs1
li x24, 0xbdf580d68619f2cd # initialize rs2
mulw x21, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x7311ddcb3bcf7d20 # initialize rs1
li x28, 0x3767d270e9d94a6f # initialize rs2
mulw x2, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x13aa4ed89a2e2141 # initialize rs1
li x3, 0xbf63cfa2382dc316 # initialize rs2
mulw x16, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb1191290e4938d84 # initialize rs1
li x8, 0x9fb2690d38b38754 # initialize rs2
mulw x25, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x8647bd80500ff3bf # initialize rs1
li x17, 0xbc9d29092e518f69 # initialize rs2
mulw x3, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x3778f4b3a7bc2940 # initialize rs1
li x29, 0x8fb097b17090cd0e # initialize rs2
mulw x18, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x8d7a7bb998e67f55 # initialize rs1
li x22, 0xd9c2f2d8afa0c322 # initialize rs2
mulw x5, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x17214f984f164595 # initialize rs1
li x17, 0x061ca906725a77ee # initialize rs2
mulw x11, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x46f50cd8f7d521be # initialize rs1
li x6, 0xbc4d6023eac73140 # initialize rs2
mulw x20, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xf61cf261e792459e # initialize rs1
li x12, 0x6ce9b4bdc4c4c1ce # initialize rs2
mulw x27, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xe93566ff15e6fd85 # initialize rs1
li x28, 0x8eac71152a7ad4bc # initialize rs2
mulw x11, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xf89326bc2b8ed9fa # initialize rs1
li x9, 0xcc9fd2c4334bf11a # initialize rs2
mulw x29, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x3, 0x5123643c2f8fd936 # initialize rs1
li x0, 0x46f22ef2975c2eba # initialize rs2
mulw x25, x3, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x25, 0x3ce748b8f93a5d29 # initialize rs1
li x1, 0x01f6ffa04080b315 # initialize rs2
mulw x29, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x16, 0xfebc208882327113 # initialize rs1
li x2, 0x83daa1518a80e8b1 # initialize rs2
mulw x10, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x22, 0x5aed7a9f24d2cd1c # initialize rs1
li x3, 0xe1fd28db09cc8fc3 # initialize rs2
mulw x20, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x28, 0x7c5f7d062f12a6f4 # initialize rs1
li x4, 0x837bf7ca023d72e9 # initialize rs2
mulw x7, x28, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0x3500bed264a42e2c # initialize rs1
li x5, 0x6c503f29c0c96086 # initialize rs2
mulw x11, x3, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x21, 0xc13dd2c96ce9b779 # initialize rs1
li x6, 0xde3c8779d21ef49a # initialize rs2
mulw x13, x21, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x18, 0x4ded6404ba962041 # initialize rs1
li x7, 0x4fb96f3cc475fae1 # initialize rs2
mulw x27, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x23, 0xe4d9f455c07a1eb7 # initialize rs1
li x8, 0x1c28627da101295f # initialize rs2
mulw x31, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x24, 0x936873fc0c50cc7b # initialize rs1
li x9, 0x1de566687032e20a # initialize rs2
mulw x16, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x15, 0x728034f523534733 # initialize rs1
li x10, 0x5538c213212ae5a0 # initialize rs2
mulw x6, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x17, 0xd01d480fb70ec8c4 # initialize rs1
li x11, 0x0aa2fcf82b12a239 # initialize rs2
mulw x20, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x13, 0x854bf8a9f971f8de # initialize rs1
li x12, 0x8857617aacc81ce9 # initialize rs2
mulw x18, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x11, 0x8228cd335b5aaa26 # initialize rs1
li x13, 0xfde511085682c1ba # initialize rs2
mulw x24, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x20, 0xcf50ebb8b8806863 # initialize rs1
li x14, 0x807faa55e247bfcf # initialize rs2
mulw x25, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x8, 0x1fe03b038d6d0ab5 # initialize rs1
li x15, 0x65b082ab1a5bcafa # initialize rs2
mulw x25, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x3, 0x1e43aa8799874769 # initialize rs1
li x16, 0x3fbba894f29e0091 # initialize rs2
mulw x11, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x30, 0xb2f61fc799216a87 # initialize rs1
li x17, 0x5aeafd01c10f1288 # initialize rs2
mulw x13, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x12, 0xc99e6a5eef798885 # initialize rs1
li x18, 0x8d32d956aa57e0a3 # initialize rs2
mulw x21, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x1, 0x9fb002b70ca98498 # initialize rs1
li x19, 0x77c3351f1e600afc # initialize rs2
mulw x16, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x5, 0x7505ef9f84138719 # initialize rs1
li x20, 0xf4953a74e28fd643 # initialize rs2
mulw x9, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x28, 0xfb243d26cfdd2a7c # initialize rs1
li x21, 0x8a0572c847d107d2 # initialize rs2
mulw x3, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x9, 0xe04e61e443f8c308 # initialize rs1
li x22, 0x618ad5501415874c # initialize rs2
mulw x21, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x29, 0xc52d92cace5bc067 # initialize rs1
li x23, 0x56d7269a47133063 # initialize rs2
mulw x1, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x19, 0x376506f5569805ca # initialize rs1
li x24, 0xb5fe0f1a30e2b782 # initialize rs2
mulw x2, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x7, 0xb255463ca3e691d0 # initialize rs1
li x25, 0x3c08716d2457f781 # initialize rs2
mulw x3, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x27, 0xae140f71dfba14a2 # initialize rs1
li x26, 0x09c7381e1b3c8861 # initialize rs2
mulw x9, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x22, 0x27fc6636570e69f7 # initialize rs1
li x27, 0x4fa056c36836895e # initialize rs2
mulw x14, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x27, 0xdb748a343ef70a65 # initialize rs1
li x28, 0xa9008f2212b5feeb # initialize rs2
mulw x16, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x13, 0x246c489efec35931 # initialize rs1
li x29, 0x123a6f516588d865 # initialize rs2
mulw x26, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x3, 0xb8d9e6a8ac392dc5 # initialize rs1
li x30, 0x5d63e7194b872029 # initialize rs2
mulw x1, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x17, 0xc8c2971ab47cbbc6 # initialize rs1
li x31, 0x7356ec8eb3bdbf0d # initialize rs2
mulw x10, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 504)

# Testcase cp_rd (Test destination rd = x0)
li x18, 0xe071305c2e30a22b # initialize rs1
li x31, 0x65b467b180ff3ab8 # initialize rs2
mulw x0, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x17, 0x43e9cb9e176509ad # initialize rs1
li x29, 0xf6b40275abe38d76 # initialize rs2
mulw x1, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x13, 0x5ca17c652fe7c1f8 # initialize rs1
li x2, 0xe0397239f226de88 # initialize rs2
mulw x2, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x15, 0xe6edad250f59c5dd # initialize rs1
li x2, 0xfd608bb6ebb14fef # initialize rs2
mulw x3, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x1, 0xd5ddf178c88ea932 # initialize rs1
li x27, 0x63697213bbfe6b17 # initialize rs2
mulw x4, x1, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x30, 0x0a6ac6a6a6a0ad2a # initialize rs1
li x27, 0xc35b6cb1e0464ba8 # initialize rs2
mulw x5, x30, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x18, 0x57b7204e5f88ef9e # initialize rs1
li x9, 0x335bc3ed74bb131a # initialize rs2
mulw x6, x18, x9 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0x4bbbae29fc748fa6 # initialize rs1
li x14, 0x12a070ac066e63e0 # initialize rs2
mulw x7, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x26, 0x56269ffad6efc841 # initialize rs1
li x22, 0x6b25cf4fe5cba286 # initialize rs2
mulw x8, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x31, 0x35808190ee2a5628 # initialize rs1
li x23, 0xe261b3b6572468dc # initialize rs2
mulw x9, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x25, 0x32f193df3f24936c # initialize rs1
li x18, 0xd9727ffdf3c895c9 # initialize rs2
mulw x10, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x2, 0xc0e48c315532be2d # initialize rs1
li x29, 0x4ae15e189d629101 # initialize rs2
mulw x11, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x23, 0x18481d66c7dea846 # initialize rs1
li x20, 0x1c5feb25707cc4eb # initialize rs2
mulw x12, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x6, 0xae69dc5bce944052 # initialize rs1
li x29, 0xce7bec5e2c551639 # initialize rs2
mulw x13, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x3, 0xfd0127f639f9d488 # initialize rs1
li x29, 0x7ce507bc937540bd # initialize rs2
mulw x14, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x16, 0xf6203d5af4787ab4 # initialize rs1
li x18, 0xda08cf682e5f9f4c # initialize rs2
mulw x15, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x31, 0xfce252b9c37aa925 # initialize rs1
li x20, 0x501bde579033c0ee # initialize rs2
mulw x16, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x8, 0xd3c2b43492e10249 # initialize rs1
li x6, 0x1cb185bcdd4998a0 # initialize rs2
mulw x17, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x19, 0x4605a5b647ab869d # initialize rs1
li x8, 0x3a4829f6d8918b20 # initialize rs2
mulw x18, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x14, 0x715917721acf7bc9 # initialize rs1
li x16, 0x1a3e63d0bb5b640e # initialize rs2
mulw x19, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x16, 0x601d2c8824c79890 # initialize rs1
li x27, 0x759213dc092bfe5b # initialize rs2
mulw x20, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x24, 0x8391edb7adb6d669 # initialize rs1
li x31, 0x3866590b3d7b6c52 # initialize rs2
mulw x21, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x10, 0x4ef6f967f835b033 # initialize rs1
li x19, 0x7822603e682e895d # initialize rs2
mulw x22, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x6, 0x5defba0500d01128 # initialize rs1
li x29, 0xd0e54a405f7e0b06 # initialize rs2
mulw x23, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x19, 0xb04d2cd9fa41fd50 # initialize rs1
li x16, 0xde58f83d242c8197 # initialize rs2
mulw x24, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x28, 0x16d36564e2325f34 # initialize rs1
li x14, 0x2dd5dde80ce309e2 # initialize rs2
mulw x25, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x21, 0x522800b8aa0675c3 # initialize rs1
li x12, 0x87df25d168f4ef1c # initialize rs2
mulw x26, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x20, 0xec37ca04c7d9fd4c # initialize rs1
li x18, 0x5551e136affbf23c # initialize rs2
mulw x27, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x18, 0x7c4860c6caeb8692 # initialize rs1
li x14, 0xa1fa1c171653e957 # initialize rs2
mulw x28, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x31, 0x17a74fe436e04aa8 # initialize rs1
li x30, 0x90d2caa54b727aa1 # initialize rs2
mulw x29, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x17, 0x0ff25d922012fd9f # initialize rs1
li x20, 0x581db71288d0a560 # initialize rs2
mulw x30, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x10, 0x685028187126df7f # initialize rs1
li x13, 0xaf2612711537e129 # initialize rs2
mulw x31, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x6, 0x0000000000000000 # initialize rs1
li x5, 0x905e6abd8404e4ed # initialize rs2
mulw x19, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x13, 0x0000000000000001 # initialize rs1
li x20, 0xf86b2266b4eee4a8 # initialize rs2
mulw x12, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x24, 0x0000000000000002 # initialize rs1
li x28, 0xb8a57aa9de018f6a # initialize rs2
mulw x3, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x28, 0x8000000000000000 # initialize rs1
li x7, 0x3440995aa17b57ef # initialize rs2
mulw x21, x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x3, 0x8000000000000001 # initialize rs1
li x29, 0x8d73aef36c550f88 # initialize rs2
mulw x6, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x13, 0x7fffffffffffffff # initialize rs1
li x17, 0x0f2785a0214ab660 # initialize rs2
mulw x24, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
li x3, 0xcd5dda4c516856b9 # initialize rs2
mulw x17, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x8, 0xffffffffffffffff # initialize rs1
li x25, 0x832cdf4ce0832f92 # initialize rs2
mulw x7, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x7, 0xede5adcdf660e03e # initialize rs2
mulw x28, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x78c8636abd77eab9 # initialize rs2
mulw x16, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0xbf81b5270fe303b3 # initialize rs2
mulw x29, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
li x7, 0x80330aeae6f5f397 # initialize rs2
mulw x12, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x22, 0x00000000ffffffff # initialize rs1
li x21, 0xc8b49abe98b0c624 # initialize rs2
mulw x29, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x30, 0x00000000fffffffe # initialize rs1
li x18, 0xbf7ce10674a0fd7c # initialize rs2
mulw x5, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x7, 0x0000000100000000 # initialize rs1
li x14, 0x328095e7d26490ea # initialize rs2
mulw x20, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x26, 0x0000000100000001 # initialize rs1
li x17, 0x1de9bd36813927d4 # initialize rs2
mulw x15, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x17, 0xf2ea950ee9247037 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
mulw x27, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x26, 0xd142473823ab8d5d # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
mulw x20, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x6, 0xb3a29f5d06262f62 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
mulw x30, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x20, 0xde9b5f3b8b4584ee # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
mulw x19, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x15, 0x6ed14978757d7062 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
mulw x13, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x28, 0x481b28681d219b15 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
mulw x26, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x23, 0x4e13fa06b2dfbeb9 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mulw x29, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x18, 0x58a79046d1f7ac11 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
mulw x17, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x13, 0x7b7e0d5b2e7ac079 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
mulw x31, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x20, 0xe8141d38777e0cc3 # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
mulw x18, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x5, 0x5ff3c5aaa679ed57 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x13, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x29, 0xb27e138c60e4b844 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mulw x3, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x24, 0xce088cf5dc01ca01 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
mulw x8, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x17, 0x813fd379fa2fba91 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
mulw x14, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x9, 0x53755d216c14121a # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
mulw x25, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x13, 0xa091ebba9b559790 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
mulw x30, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x25, 0x0000000000000000 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
mulw x31, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x17, 0x0000000000000000 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
mulw x29, x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x15, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
mulw x28, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x2, 0x0000000000000000 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
mulw x31, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x17, 0x0000000000000000 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
mulw x31, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000000000000 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
mulw x19, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000000000000 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mulw x24, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x11, 0x0000000000000000 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
mulw x22, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
mulw x20, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x20, 0x0000000000000000 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
mulw x22, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x0000000000000000 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x18, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x2, 0x0000000000000000 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
mulw x29, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x29, 0x0000000000000000 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
mulw x23, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x3, 0x0000000000000000 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mulw x15, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x29, 0x0000000000000000 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
mulw x22, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x23, 0x0000000000000000 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
mulw x17, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x5, 0x0000000000000001 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
mulw x15, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x31, 0x0000000000000001 # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
mulw x11, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x17, 0x0000000000000001 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
mulw x10, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x7, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
mulw x18, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x15, 0x0000000000000001 # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
mulw x5, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x3, 0x0000000000000001 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
mulw x24, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x9, 0x0000000000000001 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
mulw x28, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x28, 0x0000000000000001 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
mulw x13, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x22, 0x0000000000000001 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
mulw x12, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x18, 0x0000000000000001 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
mulw x29, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x0000000000000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x24, x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x17, 0x0000000000000001 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
mulw x27, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x12, 0x0000000000000001 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
mulw x23, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x21, 0x0000000000000001 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
mulw x12, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x16, 0x0000000000000001 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
mulw x20, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x5, 0x0000000000000001 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
mulw x19, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x17, 0x0000000000000002 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
mulw x31, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x27, 0x0000000000000002 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mulw x26, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
mulw x20, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x1, 0x0000000000000002 # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
mulw x27, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x7, 0x0000000000000002 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
mulw x10, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x9, 0x0000000000000002 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
mulw x31, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000000000002 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
mulw x11, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x9, 0x0000000000000002 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulw x30, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000000000002 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
mulw x1, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x8, 0x0000000000000002 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulw x18, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x0000000000000002 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x24, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x30, 0x0000000000000002 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulw x16, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x18, 0x0000000000000002 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
mulw x16, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x8, 0x0000000000000002 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
mulw x5, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x13, 0x0000000000000002 # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
mulw x21, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x5, 0x0000000000000002 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
mulw x12, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x7, 0x8000000000000000 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mulw x5, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x17, 0x8000000000000000 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
mulw x19, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x31, 0x8000000000000000 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mulw x22, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x2, 0x8000000000000000 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mulw x7, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x22, 0x8000000000000000 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulw x10, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x16, 0x8000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
mulw x6, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x28, 0x8000000000000000 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
mulw x17, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x29, 0x8000000000000000 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mulw x8, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x21, 0x8000000000000000 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
mulw x10, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x15, 0x8000000000000000 # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
mulw x7, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x8000000000000000 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x22, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x16, 0x8000000000000000 # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
mulw x11, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x9, 0x8000000000000000 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
mulw x30, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x12, 0x8000000000000000 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
mulw x28, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x11, 0x8000000000000000 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
mulw x31, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x27, 0x8000000000000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
mulw x5, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x27, 0x8000000000000001 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
mulw x28, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x27, 0x8000000000000001 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
mulw x1, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x24, 0x8000000000000001 # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
mulw x21, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x27, 0x8000000000000001 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
mulw x26, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x21, 0x8000000000000001 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
mulw x12, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x14, 0x8000000000000001 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
mulw x19, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mulw x5, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x14, 0x8000000000000001 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mulw x1, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x22, 0x8000000000000001 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
mulw x25, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x21, 0x8000000000000001 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
mulw x25, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x8000000000000001 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x30, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x14, 0x8000000000000001 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
mulw x5, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x19, 0x8000000000000001 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
mulw x13, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x29, 0x8000000000000001 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
mulw x1, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x6, 0x8000000000000001 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
mulw x7, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x10, 0x8000000000000001 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
mulw x19, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x30, 0x7fffffffffffffff # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mulw x17, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x15, 0x7fffffffffffffff # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
mulw x24, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x11, 0x7fffffffffffffff # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
mulw x28, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x17, 0x7fffffffffffffff # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
mulw x6, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x25, 0x7fffffffffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
mulw x6, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
mulw x21, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x24, 0x7fffffffffffffff # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mulw x28, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x21, 0x7fffffffffffffff # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
mulw x1, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x24, 0x7fffffffffffffff # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
mulw x12, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x17, 0x7fffffffffffffff # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
mulw x16, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x7fffffffffffffff # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x18, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x6, 0x7fffffffffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
mulw x30, x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x12, 0x7fffffffffffffff # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
mulw x20, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x23, 0x7fffffffffffffff # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
mulw x16, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x6, 0x7fffffffffffffff # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
mulw x1, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x29, 0x7fffffffffffffff # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
mulw x20, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x5, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
mulw x13, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x27, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
mulw x8, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x23, 0x7ffffffffffffffe # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mulw x31, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x6, 0x7ffffffffffffffe # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
mulw x28, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x22, 0x7ffffffffffffffe # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
mulw x6, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x26, 0x7ffffffffffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
mulw x25, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x3, 0x7ffffffffffffffe # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
mulw x10, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x21, 0x7ffffffffffffffe # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
mulw x23, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
mulw x1, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x28, 0x7ffffffffffffffe # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
mulw x13, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x7ffffffffffffffe # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x29, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0x7ffffffffffffffe # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
mulw x10, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x14, 0x7ffffffffffffffe # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
mulw x13, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x14, 0x7ffffffffffffffe # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
mulw x8, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
mulw x27, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x30, 0x7ffffffffffffffe # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
mulw x25, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x20, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
mulw x6, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x17, 0xffffffffffffffff # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
mulw x30, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x24, 0xffffffffffffffff # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
mulw x1, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x6, 0xffffffffffffffff # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
mulw x14, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x14, 0xffffffffffffffff # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
mulw x16, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x2, 0xffffffffffffffff # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
mulw x23, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x15, 0xffffffffffffffff # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
mulw x5, x15, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x25, 0xffffffffffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulw x19, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x20, 0xffffffffffffffff # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
mulw x18, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x1, 0xffffffffffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
mulw x3, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0xffffffffffffffff # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x17, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x20, 0xffffffffffffffff # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
mulw x14, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x8, 0xffffffffffffffff # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
mulw x19, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
mulw x16, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x24, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
mulw x31, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x18, 0xffffffffffffffff # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
mulw x10, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x15, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
mulw x20, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x24, 0xfffffffffffffffe # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
mulw x21, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x12, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
mulw x26, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x21, 0xfffffffffffffffe # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
mulw x24, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x23, 0xfffffffffffffffe # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
mulw x27, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x25, 0xfffffffffffffffe # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulw x10, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x30, 0xfffffffffffffffe # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
mulw x25, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x29, 0xfffffffffffffffe # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
mulw x14, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
mulw x9, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x8, 0xfffffffffffffffe # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
mulw x24, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0xfffffffffffffffe # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x13, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x23, 0xfffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mulw x5, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x22, 0xfffffffffffffffe # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
mulw x23, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x30, 0xfffffffffffffffe # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
mulw x13, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x25, 0xfffffffffffffffe # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
mulw x24, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x21, 0xfffffffffffffffe # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
mulw x20, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
mulw x30, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
mulw x7, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
mulw x24, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
mulw x9, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
mulw x29, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
mulw x20, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mulw x22, x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
mulw x13, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
mulw x7, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
mulw x14, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x24, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
mulw x21, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mulw x15, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
mulw x3, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
mulw x26, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
mulw x17, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
mulw x27, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mulw x10, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
mulw x11, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
mulw x2, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
mulw x12, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
mulw x25, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
mulw x2, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulw x8, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
mulw x25, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
mulw x7, x12, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x30, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
mulw x5, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
mulw x12, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
mulw x17, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
mulw x15, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
mulw x1, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x7, 0x5555555555555555 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
mulw x2, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x8, 0x5555555555555555 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
mulw x3, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x5, 0x5555555555555555 # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
mulw x20, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x15, 0x5555555555555555 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
mulw x20, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x19, 0x5555555555555555 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
mulw x11, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
mulw x1, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x5, 0x5555555555555555 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
mulw x3, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x26, 0x5555555555555555 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulw x19, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x7, 0x5555555555555555 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
mulw x13, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x13, 0x5555555555555555 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
mulw x22, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x5555555555555555 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x11, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x2, 0x5555555555555555 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mulw x15, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x6, 0x5555555555555555 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
mulw x10, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x29, 0x5555555555555555 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mulw x13, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x12, 0x5555555555555555 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
mulw x29, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x1, 0x5555555555555555 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
mulw x16, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x18, 0x00000000ffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
mulw x1, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x11, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
mulw x7, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x21, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
mulw x25, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x28, 0x00000000ffffffff # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
mulw x14, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x29, 0x00000000ffffffff # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mulw x9, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x10, 0x00000000ffffffff # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
mulw x5, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x6, 0x00000000ffffffff # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
mulw x26, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x9, 0x00000000ffffffff # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulw x29, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x19, 0x00000000ffffffff # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
mulw x10, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x26, 0x00000000ffffffff # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
mulw x3, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x00000000ffffffff # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x18, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x5, 0x00000000ffffffff # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulw x20, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x31, 0x00000000ffffffff # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
mulw x11, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x20, 0x00000000ffffffff # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
mulw x3, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x29, 0x00000000ffffffff # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
mulw x12, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x22, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
mulw x10, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x1, 0x00000000fffffffe # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
mulw x12, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x8, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
mulw x9, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x14, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
mulw x9, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x7, 0x00000000fffffffe # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
mulw x11, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x5, 0x00000000fffffffe # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
mulw x18, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x27, 0x00000000fffffffe # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
mulw x15, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x8, 0x00000000fffffffe # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
mulw x18, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mulw x1, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x3, 0x00000000fffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
mulw x24, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x9, 0x00000000fffffffe # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
mulw x12, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x00000000fffffffe # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x31, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x16, 0x00000000fffffffe # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mulw x10, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mulw x9, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x8, 0x00000000fffffffe # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
mulw x13, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x6, 0x00000000fffffffe # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
mulw x5, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x10, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
mulw x29, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x3, 0x0000000100000000 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
mulw x5, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x7, 0x0000000100000000 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
mulw x19, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x23, 0x0000000100000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
mulw x21, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x23, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
mulw x26, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x29, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mulw x2, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x18, 0x0000000100000000 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
mulw x7, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x27, 0x0000000100000000 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mulw x20, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
mulw x7, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x30, 0x0000000100000000 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
mulw x20, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000100000000 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
mulw x18, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x0000000100000000 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x16, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x18, 0x0000000100000000 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
mulw x1, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x8, 0x0000000100000000 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
mulw x21, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
mulw x16, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x1, 0x0000000100000000 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
mulw x31, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x12, 0x0000000100000000 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
mulw x11, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x7, 0x0000000100000001 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
mulw x24, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x1, 0x0000000100000001 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
mulw x29, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x31, 0x0000000100000001 # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
mulw x15, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x10, 0x0000000100000001 # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
mulw x8, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x19, 0x0000000100000001 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulw x11, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
mulw x22, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000100000001 # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
mulw x14, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x8, 0x0000000100000001 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
mulw x15, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x5, 0x0000000100000001 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
mulw x10, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x27, 0x0000000100000001 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
mulw x3, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x0000000100000001 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulw x22, x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x9, 0x0000000100000001 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
mulw x19, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
mulw x26, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x23, 0x0000000100000001 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
mulw x6, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x23, 0x0000000100000001 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
mulw x18, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x15, 0x0000000100000001 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
mulw x13, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xb00838e616ab8745 # initialize rs1
li x0, 0x9c7f13cd2c2c7021 # initialize rs2
mulw x3, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xd1c32600ded8af1b # initialize rs1
li x1, 0xa34f01b1c27f9f3e # initialize rs2
mulw x6, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x8b33e44b615e5c90 # initialize rs1
li x2, 0xc1f90922b4ede064 # initialize rs2
mulw x5, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xcde69ae277de0d01 # initialize rs1
li x3, 0xefbb77070d186e0f # initialize rs2
mulw x5, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc4df3e2b8ab339e1 # initialize rs1
li x4, 0xd7aaafc88f0b0f5b # initialize rs2
mulw x8, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x04cd8461a615e1e1 # initialize rs1
li x5, 0x12b80149679cd2e3 # initialize rs2
mulw x10, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2dd192faf79e9718 # initialize rs1
li x6, 0xf8a4db58a0684a39 # initialize rs2
mulw x25, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x25, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x1ec9e66604156dbd # initialize rs1
li x7, 0x06493a663fdf5dd7 # initialize rs2
mulw x5, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xf14c05d2715c9757 # initialize rs1
li x8, 0xaf12bf7ae2098fa2 # initialize rs2
mulw x10, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xc66ccc49858fdfb7 # initialize rs1
li x9, 0x260dfd60749cf0c7 # initialize rs2
mulw x10, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xd705b1e8e15bffe5 # initialize rs1
li x10, 0x5d844351dc6156d0 # initialize rs2
mulw x25, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xb4a891a901e8b290 # initialize rs1
li x11, 0x57533af6ef68b0bc # initialize rs2
mulw x12, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xc3ad456bcaa139ec # initialize rs1
li x12, 0x54aa5b7ef10188a6 # initialize rs2
mulw x2, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xfa37196c3f196599 # initialize rs1
li x13, 0xb37878139ab90607 # initialize rs2
mulw x17, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x9c2f5edd0c52417c # initialize rs1
li x14, 0xec95cb32837cafc0 # initialize rs2
mulw x22, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x2018b40363674dac # initialize rs1
li x15, 0xea5a2dfdf55d9912 # initialize rs2
mulw x14, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xc6238ebda86b9310 # initialize rs1
li x16, 0xc4a229c7c704f316 # initialize rs2
mulw x7, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x48a48a8d2f679aa3 # initialize rs1
li x17, 0x51c8d59fa1375f64 # initialize rs2
mulw x16, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x49752a1b4f244b22 # initialize rs1
li x18, 0xff4e4a1a18918f35 # initialize rs2
mulw x19, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xe5860229621dc9a1 # initialize rs1
li x19, 0x7ce98a4e69697c5a # initialize rs2
mulw x10, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x427620673f986753 # initialize rs1
li x20, 0x44294a7b6d798874 # initialize rs2
mulw x13, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x4efb5916b808c589 # initialize rs1
li x21, 0xd579b878245e5871 # initialize rs2
mulw x25, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x92b634e9351ca84b # initialize rs1
li x22, 0x5bd54608f9c17176 # initialize rs2
mulw x2, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xeb258bd280c787ad # initialize rs1
li x23, 0x21bf0dec413c3232 # initialize rs2
mulw x24, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x48bf44d8260c5016 # initialize rs1
li x24, 0x139e50665a05780f # initialize rs2
mulw x1, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x197b8a6a0014e67f # initialize rs1
li x25, 0xeb0971880abb0207 # initialize rs2
mulw x30, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x2e8c31f05d04dd30 # initialize rs1
li x26, 0xfee272076d9121e8 # initialize rs2
mulw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x2002887081ce5ec5 # initialize rs1
li x27, 0x72cad7590aad81a7 # initialize rs2
mulw x9, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xf45ad30731b5b71b # initialize rs1
li x28, 0x7547710ae53082f8 # initialize rs2
mulw x5, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x24e31b589a7894a4 # initialize rs1
li x29, 0x3c985ce38905340c # initialize rs2
mulw x2, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x68bf3d9bfe3b6faf # initialize rs1
li x30, 0xe00beff7c3cf82c5 # initialize rs2
mulw x12, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x771d17f0697bf5b4 # initialize rs1
li x31, 0xa7afa6a9ae0be111 # initialize rs2
mulw x14, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x0859f8724c33e6a3 # initialize rs1
li x5, 0xd7cfaa80442877c1 # initialize rs2
mulw x0, x0, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x43cc3c1c22b8b6ce # initialize rs1
li x30, 0x4fedba158ad73c39 # initialize rs2
mulw x1, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x65773e34fe4fa095 # initialize rs1
li x31, 0x7fb0f0baf6a6c2d8 # initialize rs2
mulw x2, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x1d0920b480a67b08 # initialize rs1
li x10, 0x88ee81207d0e38a4 # initialize rs2
mulw x3, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x4f623847ff531dce # initialize rs1
li x3, 0x2428bb4319ebf1b5 # initialize rs2
mulw x4, x4, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x219752190a2c6b35 # initialize rs1
li x13, 0x41534437790d26f6 # initialize rs2
mulw x5, x5, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb734a4fb13aa091c # initialize rs1
li x1, 0x06754e251ae2293f # initialize rs2
mulw x6, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x1d984887d964d10e # initialize rs1
li x9, 0xa23a1b39009a543f # initialize rs2
mulw x7, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x9661f9de5259bcef # initialize rs1
li x18, 0x28d892d38f79a361 # initialize rs2
mulw x8, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xa2215a3c356953bb # initialize rs1
li x31, 0x2365c42b1e0e8dc2 # initialize rs2
mulw x9, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xb66c0c7864c00ee4 # initialize rs1
li x17, 0xe707a1604e08b911 # initialize rs2
mulw x10, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x52707365d507aeb5 # initialize rs1
li x2, 0x67e6ea70f0473583 # initialize rs2
mulw x11, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x664962452913c7c8 # initialize rs1
li x15, 0x599a7250b0f7de5d # initialize rs2
mulw x12, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x41cf916a54386a50 # initialize rs1
li x19, 0xd731097c0d4ac309 # initialize rs2
mulw x13, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x682f011a846baebb # initialize rs1
li x3, 0x0d44c6136013df61 # initialize rs2
mulw x14, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x68b35f47130b3509 # initialize rs1
li x21, 0xa310aece8d067392 # initialize rs2
mulw x15, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x6e3101de7c3fd4a4 # initialize rs1
li x27, 0x015baca2983e467a # initialize rs2
mulw x16, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x60cdefe168bf4e18 # initialize rs1
li x9, 0x0c14927d75dac13e # initialize rs2
mulw x17, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5d7b71546d92983f # initialize rs1
li x20, 0xe59c84a77c8f6529 # initialize rs2
mulw x18, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x266a5c2e33753406 # initialize rs1
li x1, 0x03e4856ea9d4b182 # initialize rs2
mulw x19, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xe40b5bf5ebd96cec # initialize rs1
li x6, 0xe6a690ebceb9de55 # initialize rs2
mulw x20, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xf4f0487ef7b904b4 # initialize rs1
li x13, 0xc527537be61ecb17 # initialize rs2
mulw x21, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xcc05e3622aeb8d58 # initialize rs1
li x12, 0x652f2d6bdb194f8c # initialize rs2
mulw x22, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xd269b4730309f8c0 # initialize rs1
li x5, 0xf66aec05cf1b259f # initialize rs2
mulw x23, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x9d20ec4bccf46d22 # initialize rs1
li x15, 0xae1fb6c6d5ae960c # initialize rs2
mulw x24, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x6c98a63c5c3cf387 # initialize rs1
li x17, 0x945464e52ac83acd # initialize rs2
mulw x25, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x5705f84d0f314e12 # initialize rs1
li x21, 0xf89dc6d4d71eb6af # initialize rs2
mulw x26, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x78540ff21d96dbb5 # initialize rs1
li x5, 0xd5d46f3b8567d9ea # initialize rs2
mulw x27, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x9ad51d9663e58227 # initialize rs1
li x23, 0xf00be9e4170d8bea # initialize rs2
mulw x28, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x168846ade73a249c # initialize rs1
li x27, 0x5d4434db1310114e # initialize rs2
mulw x29, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x2c499a9a3aed3fa7 # initialize rs1
li x19, 0x7c3954b2b2de4300 # initialize rs2
mulw x30, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xcff3a526ec5c673f # initialize rs1
li x26, 0x644a5a7d4929230e # initialize rs2
mulw x31, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x8, 0x5ef7506f0b614f61 # initialize rs1
li x0, 0x8e50754113914ffd # initialize rs2
mulw x0, x8, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x12, 0x2d893d7924d80495 # initialize rs1
li x1, 0x5b65f55ba83ec3dc # initialize rs2
mulw x1, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xa8d6d753ad0baf20 # initialize rs1
li x2, 0x4df084284519a8ee # initialize rs2
mulw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x12, 0x531f80b54762b7ef # initialize rs1
li x3, 0x23e7d293f16561ee # initialize rs2
mulw x3, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x9, 0xa54e4f25b18fb8bf # initialize rs1
li x4, 0xd06410354c2b8128 # initialize rs2
mulw x4, x9, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x8, 0x5cdd0ede73edc097 # initialize rs1
li x5, 0x5b1bcbe6829d08fa # initialize rs2
mulw x5, x8, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0x93141bfab56b552d # initialize rs1
li x6, 0xe67e9b28860cf2c6 # initialize rs2
mulw x6, x29, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0xa30715dc2ad6fa88 # initialize rs1
li x7, 0x61acab3acd954b03 # initialize rs2
mulw x7, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x22, 0x2b88f847fb6f9fa3 # initialize rs1
li x8, 0x09bace913ba56e0a # initialize rs2
mulw x8, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x29, 0xf1a7171fb3a7dbbc # initialize rs1
li x9, 0x86d0fd1ecb74e72a # initialize rs2
mulw x9, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xc438bdd5cb4e97e0 # initialize rs1
li x10, 0x0d88a8ce2ce8315a # initialize rs2
mulw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x1, 0x59f2e73b26ae6b2c # initialize rs1
li x11, 0x330b8a2603378b14 # initialize rs2
mulw x11, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x30, 0x272ef96f615d7f8c # initialize rs1
li x12, 0x42c4261d5795193f # initialize rs2
mulw x12, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x25, 0xe886fe0df77525e6 # initialize rs1
li x13, 0x164ce25972bd1f4e # initialize rs2
mulw x13, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x28, 0x677a8cdfaffb8374 # initialize rs1
li x14, 0x1d31831cd213690c # initialize rs2
mulw x14, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x22, 0x715dc289e6f3bb45 # initialize rs1
li x15, 0x8491efd3e2098f42 # initialize rs2
mulw x15, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x14, 0x61a0813943633f43 # initialize rs1
li x16, 0xe2a0897d21d9ecda # initialize rs2
mulw x16, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x24, 0xaad1489b0104b040 # initialize rs1
li x17, 0x7884339b1d5a94c3 # initialize rs2
mulw x17, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x31, 0xc401ca22124e86e7 # initialize rs1
li x18, 0xb3895354881a3244 # initialize rs2
mulw x18, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x2, 0x80b36d1d39e57480 # initialize rs1
li x19, 0x45688e8062bd6427 # initialize rs2
mulw x19, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x25, 0xfd849e2c0c97acab # initialize rs1
li x20, 0x250ca705bb34666e # initialize rs2
mulw x20, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x25, 0x312ffeadff4952d6 # initialize rs1
li x21, 0x8513ae9cf95b0661 # initialize rs2
mulw x21, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x19, 0xdbd35cae3c1bbe69 # initialize rs1
li x22, 0x82fbec89f5701f85 # initialize rs2
mulw x22, x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x6, 0x740077f6e9a29bf4 # initialize rs1
li x23, 0x5a3ed71dbfd9cafa # initialize rs2
mulw x23, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x29, 0x2a73fb97546fde61 # initialize rs1
li x24, 0xf3d244fd5ca8d7b9 # initialize rs2
mulw x24, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x26, 0x2b0091b682704978 # initialize rs1
li x25, 0x5d5d3a74b45c0ddc # initialize rs2
mulw x25, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x27, 0x8138ae5878d30951 # initialize rs1
li x26, 0x70833554ca01fc00 # initialize rs2
mulw x26, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x29, 0x1cddeb9c22b398eb # initialize rs1
li x27, 0x6cf5fbf8b54199f6 # initialize rs2
mulw x27, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x1, 0x2f7e19abd52e0e77 # initialize rs1
li x28, 0xf00d17e1c0cd402f # initialize rs2
mulw x28, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x21, 0x1c7394587c785b5b # initialize rs1
li x29, 0xdb1436717324e985 # initialize rs2
mulw x29, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x10, 0x41011de4eb377d9e # initialize rs1
li x30, 0xfb5c9d79b7adb63c # initialize rs2
mulw x30, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x76e3063605879976 # initialize rs1
li x31, 0x5776f0c9e51ef439 # initialize rs2
mulw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x7df4825755c3ed36 # initialize rs1
li x0, 0xe1fed6699a54a8db # initialize rs2
mulw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x10375133725eebd9 # initialize rs1
li x1, 0xb507ef4807826026 # initialize rs2
mulw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x6a508b2ad97abd35 # initialize rs1
li x2, 0xed539a2b6096be95 # initialize rs2
mulw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xd33f879f163a2d3d # initialize rs1
li x3, 0xc26f0866969928fa # initialize rs2
mulw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x84a8e9407a3b9346 # initialize rs1
li x4, 0x19ec1b10d9c5768f # initialize rs2
mulw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1af22b071ac4bfa3 # initialize rs1
li x5, 0x1ad492625cf1a57b # initialize rs2
mulw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x79ebf8fda93cb743 # initialize rs1
li x6, 0xf4a8bbea7d8359cc # initialize rs2
mulw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xdf80edcf59407c8d # initialize rs1
li x7, 0xb22843058b947fcb # initialize rs2
mulw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x96eedcb5b949fc7e # initialize rs1
li x8, 0xbc0ac5388b564ef4 # initialize rs2
mulw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x78d37788bff43375 # initialize rs1
li x9, 0xf3fe721701c2f62c # initialize rs2
mulw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x72cc4b4ccc505a07 # initialize rs1
li x10, 0x6018fc09f9d5d2fa # initialize rs2
mulw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x9d93bc821c056e10 # initialize rs1
li x11, 0x575087300dbeb659 # initialize rs2
mulw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x224b2feadd9f7579 # initialize rs1
li x12, 0x8c0c2737d908a9df # initialize rs2
mulw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xc111735e92630f68 # initialize rs1
li x13, 0xac8426b606cbaa0d # initialize rs2
mulw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x191fe435d6e17141 # initialize rs1
li x14, 0xf1cec3049e954a6a # initialize rs2
mulw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xbc1bff045c18cab8 # initialize rs1
li x15, 0xed1eac221b429a6c # initialize rs2
mulw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x8a9d1c2cf72c189a # initialize rs1
li x16, 0xf14056c363bb35da # initialize rs2
mulw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xcb4b0d500af27fcd # initialize rs1
li x17, 0x49732cb0b280cc39 # initialize rs2
mulw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x81f5f497d1e243a8 # initialize rs1
li x18, 0x7dc936c89dfc434f # initialize rs2
mulw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x554091f9bd4ac34f # initialize rs1
li x19, 0x7704beafba6f3f3d # initialize rs2
mulw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xd50784c037c9efc0 # initialize rs1
li x20, 0x9243297f537f6556 # initialize rs2
mulw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xd0213b515f7d600d # initialize rs1
li x21, 0xc2ad5f212d11e82e # initialize rs2
mulw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xbfbc6713efd500d2 # initialize rs1
li x22, 0xf23477b0ba4a1ab0 # initialize rs2
mulw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x31f533e2108cd658 # initialize rs1
li x23, 0x245462eeb398788a # initialize rs2
mulw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x91c25774610c8144 # initialize rs1
li x24, 0x028e0fc8f4d6cf39 # initialize rs2
mulw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x8bcdd25508db1266 # initialize rs1
li x25, 0x41e8019ccbeb4500 # initialize rs2
mulw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x554a1e2f591af345 # initialize rs1
li x26, 0x0c522b5e9d5c8aa2 # initialize rs2
mulw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x63f3a488b75d50ab # initialize rs1
li x27, 0x2ebfa0c20be017ab # initialize rs2
mulw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x4e7995cf576781b8 # initialize rs1
li x28, 0x2ce5ecc474ca7f5a # initialize rs2
mulw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x88ec70eb61f2fcbf # initialize rs1
li x29, 0x4a53a7c2443e87db # initialize rs2
mulw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xa7981d6a27c02422 # initialize rs1
li x30, 0x9dff3309943765c0 # initialize rs2
mulw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xd356acbdb1c3b7f0 # initialize rs1
li x31, 0x5852fce2bb8d044b # initialize rs2
mulw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x16, x1 # perform first operation
mulw x18, x22, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x3, x23 # perform first operation
mulw x15, x16, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x21, x14, x9 # perform first operation
mulw x26, x28, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x6, x3, x25 # perform first operation
mulw x6, x6, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x2, x28 # perform first operation
mulw x2, x7, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x5, x14 # perform first operation
mulw x14, x28, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x24, x9, x13 # perform first operation
mulw x24, x3, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x15, x28, x3 # perform first operation
mulw x15, x12, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x18, x15 # perform first operation
mulw x27, x10, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x15, x18, x16 # perform first operation
mulw x18, x10, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x2, x22 # perform first operation
mulw x22, x23, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x17, x12, x24 # perform first operation
mulw x27, x2, x1 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-mulhsu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x2394b9a66befd711 # initialize rs1
li x27, 0xe687a9d924713451 # initialize rs2
mulhsu x6, x0, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x688f9d2fb4c60b46 # initialize rs1
li x24, 0x1acc276f7e31cdb4 # initialize rs2
mulhsu x8, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x1fed5abd18f16933 # initialize rs1
li x31, 0xcb899e33ac623845 # initialize rs2
mulhsu x16, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb408a095b364a465 # initialize rs1
li x19, 0x3b81feddc1cf75eb # initialize rs2
mulhsu x29, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x24a3f0d40e082baa # initialize rs1
li x9, 0xc8c512e4843b0d26 # initialize rs2
mulhsu x12, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xfd5786855ba9ee09 # initialize rs1
li x19, 0xe300f4101c185784 # initialize rs2
mulhsu x14, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf017e28aab21802a # initialize rs1
li x29, 0xca01c60c5f44e09f # initialize rs2
mulhsu x4, x6, x29 # perform operation
RVTEST_SIGUPD(x7, x0, x4, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc0154cd082e60ff9 # initialize rs1
li x6, 0xc6526dc18e168f28 # initialize rs2
mulhsu x18, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x570a0e1376f41190 # initialize rs1
li x25, 0xe474725ee5f78e7e # initialize rs2
mulhsu x31, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x74f0ecf47626172a # initialize rs1
li x1, 0xa9e8e5f232af0d45 # initialize rs2
mulhsu x7, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xf7aac818219a7f26 # initialize rs1
li x12, 0x4dc270cbedc2c8c9 # initialize rs2
mulhsu x15, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xb6a4d4372a79a856 # initialize rs1
li x24, 0x133ead405a517d34 # initialize rs2
mulhsu x1, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xe15e1a8fe1d4cdb7 # initialize rs1
li x21, 0x41c28fddfa9b1b80 # initialize rs2
mulhsu x2, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x12916c265a334470 # initialize rs1
li x9, 0xaa315876d8ee6847 # initialize rs2
mulhsu x30, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xc75a7ed441a02048 # initialize rs1
li x12, 0xc2d2bd6eed809bb2 # initialize rs2
mulhsu x28, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xfe2f904f6f83daef # initialize rs1
li x22, 0xcedede41f2853372 # initialize rs2
mulhsu x16, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xce0a01c4e6859b0b # initialize rs1
li x31, 0x7987ee5e275d83fe # initialize rs2
mulhsu x30, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xf1cb5125f046de1c # initialize rs1
li x27, 0xec3770ed95a3863b # initialize rs2
mulhsu x6, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x45579eed97a17375 # initialize rs1
li x30, 0x1f6d3d0eed1d1cdb # initialize rs2
mulhsu x20, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x01395b2784adc3d4 # initialize rs1
li x20, 0x855ca9c75c066218 # initialize rs2
mulhsu x16, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xf83d8f7ddb3761ce # initialize rs1
li x29, 0xcfe5e0db5285f9cc # initialize rs2
mulhsu x19, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x291447dc67e8c0a6 # initialize rs1
li x23, 0x1ba78f69c4295bfa # initialize rs2
mulhsu x12, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x7b7fcc015894a7f4 # initialize rs1
li x6, 0x95d0f53ad340684a # initialize rs2
mulhsu x18, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xf72ca7ac81e13168 # initialize rs1
li x28, 0x2a4ba9c4df198ea2 # initialize rs2
mulhsu x2, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x363140139b30545a # initialize rs1
li x5, 0x46d7ab4a753ae52d # initialize rs2
mulhsu x8, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xf659df5001d46aa0 # initialize rs1
li x18, 0x3b5585dda5e8cf7d # initialize rs2
mulhsu x15, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xe373b063a55e8411 # initialize rs1
li x22, 0xf65be2ee3380a221 # initialize rs2
mulhsu x25, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xc1c28a2ba72e70d3 # initialize rs1
li x21, 0x1bf6b2cfae8a7d43 # initialize rs2
mulhsu x19, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x0f026b29e716a972 # initialize rs1
li x22, 0x28b5aa27efffa459 # initialize rs2
mulhsu x7, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x0b16deecf0cc3fbd # initialize rs1
li x14, 0xcc140a0bb0e4d790 # initialize rs2
mulhsu x31, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xb7d09385f9cf2785 # initialize rs1
li x27, 0x57ae5c29068385b5 # initialize rs2
mulhsu x14, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x295b5ae37d4168a9 # initialize rs1
li x2, 0x757759f46f4246c6 # initialize rs2
mulhsu x28, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x22, 0xad3b5939b525b465 # initialize rs1
li x0, 0x0fc47b58374ae309 # initialize rs2
mulhsu x23, x22, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x6, 0xcad8fb21ae8a4132 # initialize rs1
li x1, 0xe76dab14869b1d9b # initialize rs2
mulhsu x8, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x11, 0xf7769cd3d8b64be1 # initialize rs1
li x2, 0x607ceb17374af94e # initialize rs2
mulhsu x29, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x21, 0x84ba565b6433f712 # initialize rs1
li x3, 0xcb5c37a53d8aff8b # initialize rs2
mulhsu x2, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0x0f4397ac8ea12164 # initialize rs1
li x4, 0xa6c8820c5d31ef0c # initialize rs2
mulhsu x11, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
li x26, 0x118c1f67e8070dbe # initialize rs1
li x5, 0xdedb88ba118b8764 # initialize rs2
mulhsu x25, x26, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x18, 0x1e2cd48aca710364 # initialize rs1
li x6, 0xfe65b3db1f9edfab # initialize rs2
mulhsu x24, x18, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x24, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x13, 0xdf6e0e0fb5f942e3 # initialize rs1
li x7, 0x7703609db255b190 # initialize rs2
mulhsu x6, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x31, 0x747e38797d2a8892 # initialize rs1
li x8, 0xa9406cad9333dcc6 # initialize rs2
mulhsu x5, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x29, 0x718f92fa34b14f79 # initialize rs1
li x9, 0x41a61a95e34165d4 # initialize rs2
mulhsu x12, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x6, 0x5f7150ea117b7ad8 # initialize rs1
li x10, 0xf8c3d6aa0febe795 # initialize rs2
mulhsu x13, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x17, 0x22c9c25382815a56 # initialize rs1
li x11, 0x5381fd262209fdbe # initialize rs2
mulhsu x9, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x11, 0xaa44a86eae3196fd # initialize rs1
li x12, 0xf393ca81b7629e1a # initialize rs2
mulhsu x24, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x8, 0x3ad86db76fc27e41 # initialize rs1
li x13, 0x003eee34b7751eb8 # initialize rs2
mulhsu x22, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x11, 0x0f77c99511caed7a # initialize rs1
li x14, 0x3743c15610d18c2a # initialize rs2
mulhsu x20, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x23, 0x9b75198db677b240 # initialize rs1
li x15, 0x6958c8311bf85170 # initialize rs2
mulhsu x27, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x15, 0xb435303e9e6dd2f0 # initialize rs1
li x16, 0x662eeb462dcc622e # initialize rs2
mulhsu x30, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x31, 0x13adf0f556cfe2cc # initialize rs1
li x17, 0xbb80f64ced913f59 # initialize rs2
mulhsu x29, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x9, 0xe3f7f54db84f5d04 # initialize rs1
li x18, 0x144fbaaaa676ea69 # initialize rs2
mulhsu x6, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x13, 0x74f695f44b269834 # initialize rs1
li x19, 0x9f689eaa5d11fc32 # initialize rs2
mulhsu x6, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x13, 0xdda5015b1d73965e # initialize rs1
li x20, 0x64449092a263c849 # initialize rs2
mulhsu x17, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x24, 0xd88b747b5f4bc843 # initialize rs1
li x21, 0x361a5c712f0ff28b # initialize rs2
mulhsu x1, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x7, 0x0e41552a1aaaf834 # initialize rs1
li x22, 0x2baf8d2cac03b8cf # initialize rs2
mulhsu x19, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x17, 0xc88a7f7f935dc276 # initialize rs1
li x23, 0x9771762920dc9863 # initialize rs2
mulhsu x19, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x10, 0x286d6d01b05f557e # initialize rs1
li x24, 0xd59fb6b25ed610e4 # initialize rs2
mulhsu x9, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x29, 0xe44fa77619f27711 # initialize rs1
li x25, 0x7e2363e4857eabca # initialize rs2
mulhsu x17, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x6, 0xa6c47c93f9714173 # initialize rs1
li x26, 0x2749cb82cc18a459 # initialize rs2
mulhsu x25, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x7, 0xe9ef55ae40d90726 # initialize rs1
li x27, 0xc41e1200b19a669b # initialize rs2
mulhsu x3, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x27, 0x1ffb20fdb1d9bc6d # initialize rs1
li x28, 0xba9c5e661617d53a # initialize rs2
mulhsu x24, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x2, 0xfcc11bd88f14ab7b # initialize rs1
li x29, 0x159455d38c171cd2 # initialize rs2
mulhsu x7, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x22, 0x467da0795ed9e2d0 # initialize rs1
li x30, 0x5c78883ceb7b9a2c # initialize rs2
mulhsu x14, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x1, 0xa87fb6c1b2a8f677 # initialize rs1
li x31, 0x0635fe7ace5b0120 # initialize rs2
mulhsu x16, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 504)

# Testcase cp_rd (Test destination rd = x0)
li x12, 0xe31c7d575a1a484a # initialize rs1
li x16, 0x1bc472a014741c2c # initialize rs2
mulhsu x0, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x27, 0x747a9f739e03886a # initialize rs1
li x24, 0x17cc4bdc00b43d85 # initialize rs2
mulhsu x1, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x11, 0x734aac3816561cbc # initialize rs1
li x28, 0x9fd97f652ce58b49 # initialize rs2
mulhsu x2, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x1, 0x3b8b6948496b610a # initialize rs1
li x14, 0x5f824428803c8bb6 # initialize rs2
mulhsu x3, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x2, 0xe6046828637689a4 # initialize rs1
li x24, 0x43cbc32b6f1ea489 # initialize rs2
mulhsu x4, x2, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x1, 0xe3a5aa034876e23a # initialize rs1
li x19, 0x34413ab5b5e3809c # initialize rs2
mulhsu x5, x1, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x3, 0xc8bc3243c75e299a # initialize rs1
li x31, 0xd27bf97689ab8121 # initialize rs2
mulhsu x6, x3, x31 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x5, 0x36b865ba54cd4514 # initialize rs1
li x17, 0x3420c710187bda19 # initialize rs2
mulhsu x7, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x20, 0x55d3f004df9273e0 # initialize rs1
li x15, 0x03e96f18ef4dba4a # initialize rs2
mulhsu x8, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x9, 0x6811011baea6efc1 # initialize rs1
li x1, 0x1fff19609fdde1fb # initialize rs2
mulhsu x9, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x21, 0x1706c43a479463c5 # initialize rs1
li x3, 0xc32489a8a1a5dc30 # initialize rs2
mulhsu x10, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x11, 0xcf8c026b89a56dc8 # initialize rs1
li x27, 0x1722b6353df8cbda # initialize rs2
mulhsu x11, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x5, 0x7cc059513a516f57 # initialize rs1
li x17, 0xbefa1395c31f8b09 # initialize rs2
mulhsu x12, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x18, 0x21027c86b47d6741 # initialize rs1
li x16, 0x939f585dafdf0d9a # initialize rs2
mulhsu x13, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x17, 0xe7ab56882fa013bb # initialize rs1
li x25, 0x85e492dc0441d11b # initialize rs2
mulhsu x14, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x30, 0xa67082d6d1e85b0b # initialize rs1
li x28, 0x13afd089b9ecce82 # initialize rs2
mulhsu x15, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x28, 0x1193d7f847cea601 # initialize rs1
li x3, 0x7d8269ca4e1f3717 # initialize rs2
mulhsu x16, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x13, 0x2601fe9dca681d69 # initialize rs1
li x2, 0xac0df8d0e09256e2 # initialize rs2
mulhsu x17, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x29, 0xb0f254240836ceaa # initialize rs1
li x15, 0xb73b984d32bb070c # initialize rs2
mulhsu x18, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x7, 0xf0d12d555ca7f59f # initialize rs1
li x27, 0x4f678113d5ebcb54 # initialize rs2
mulhsu x19, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x19, 0x752590505076b693 # initialize rs1
li x5, 0xa4eea1777c23bf97 # initialize rs2
mulhsu x20, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x7, 0xf7262773495ca1a4 # initialize rs1
li x6, 0x82aa94ff5b253c69 # initialize rs2
mulhsu x21, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x14, 0x9ff5cc26ea5cffb8 # initialize rs1
li x2, 0x18b121ffe80a86a6 # initialize rs2
mulhsu x22, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x16, 0xfd01d1054d3ba14a # initialize rs1
li x13, 0x4e9ac764eab85972 # initialize rs2
mulhsu x23, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x5, 0xb85f6605c17b4f47 # initialize rs1
li x9, 0xd3b057204651a92b # initialize rs2
mulhsu x24, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x15, 0x0aa1f680c0ec8ba0 # initialize rs1
li x10, 0xf013562388a7668a # initialize rs2
mulhsu x25, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x24, 0xc571928f3c825fc9 # initialize rs1
li x30, 0x23832ea8a259468d # initialize rs2
mulhsu x26, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x11, 0xed0c02675d44359e # initialize rs1
li x17, 0x02ea7d806683297a # initialize rs2
mulhsu x27, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x16, 0xebc673c3d28921f8 # initialize rs1
li x7, 0x6190c4fada565d31 # initialize rs2
mulhsu x28, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x9, 0x666d6bb484ae8942 # initialize rs1
li x5, 0x21bed446fa79b42d # initialize rs2
mulhsu x29, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x12, 0x886f3b11279d44bd # initialize rs1
li x22, 0xa0ea5f9e2aad98f8 # initialize rs2
mulhsu x30, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x11, 0xe25bb025bdb6489f # initialize rs1
li x22, 0x7acb532b17499f58 # initialize rs2
mulhsu x31, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x6, 0x0000000000000000 # initialize rs1
li x18, 0x322387ee9ecbdc81 # initialize rs2
mulhsu x30, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x11, 0x0000000000000001 # initialize rs1
li x28, 0x6918c988632139c1 # initialize rs2
mulhsu x10, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x30, 0x0000000000000002 # initialize rs1
li x24, 0xffed5d8b30a1585e # initialize rs2
mulhsu x13, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x14, 0x8000000000000000 # initialize rs1
li x26, 0xab1cd70d9dfbd902 # initialize rs2
mulhsu x2, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x26, 0x8000000000000001 # initialize rs1
li x6, 0x68a9847abbaac491 # initialize rs2
mulhsu x5, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x7, 0x7fffffffffffffff # initialize rs1
li x20, 0xe64ed7d408fd2dec # initialize rs2
mulhsu x31, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x19, 0x1e72c88fbea94f82 # initialize rs2
mulhsu x21, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x18, 0x3e46745f5046fc59 # initialize rs2
mulhsu x2, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x23, 0xfffffffffffffffe # initialize rs1
li x16, 0xe449442ec4f19a41 # initialize rs2
mulhsu x21, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x890bd27c09a19105 # initialize rs2
mulhsu x19, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x9a5d835d07c2302d # initialize rs2
mulhsu x17, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x10, 0x5555555555555555 # initialize rs1
li x7, 0xe4ae460ecd67dc0b # initialize rs2
mulhsu x11, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x20, 0x00000000ffffffff # initialize rs1
li x18, 0xf8e9e2cd2615391d # initialize rs2
mulhsu x9, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x27, 0x00000000fffffffe # initialize rs1
li x22, 0x29faf3db99b94b2d # initialize rs2
mulhsu x3, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x9, 0x0000000100000000 # initialize rs1
li x20, 0x99387f13d0a4575b # initialize rs2
mulhsu x21, x9, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x22, 0x0000000100000001 # initialize rs1
li x30, 0x665350cca315b8a5 # initialize rs2
mulhsu x29, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x22, 0xcaae3d5ec0f8046a # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
mulhsu x16, x22, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x18, 0xc04812f79e608770 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
mulhsu x28, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x20, 0x43c3580b6fb91438 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
mulhsu x17, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x3, 0x6da9091528d0b855 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
mulhsu x8, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x2, 0xa540472f352859bb # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
mulhsu x18, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x19, 0x62a6518f1d4e5fd1 # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
mulhsu x14, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x22, 0x1a8658e7743cb2e6 # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
mulhsu x5, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x15, 0xb5202d1763c01cd0 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
mulhsu x29, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x23, 0x4587de98b738be9a # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
mulhsu x7, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x28, 0x5e9cf397b6651598 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x13, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x21, 0x36e102337a676f51 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x5, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x27, 0x5d46fadb401cc47d # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulhsu x31, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x24, 0xe03ebd37e3debe25 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulhsu x16, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x26, 0x562ca00150960735 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
mulhsu x31, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x13, 0xdce6a12fcc50b7f4 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
mulhsu x30, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x18, 0x80588984aef97d32 # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
mulhsu x23, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x3, 0x0000000000000000 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mulhsu x8, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x31, 0x0000000000000000 # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
mulhsu x15, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x9, 0x0000000000000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
mulhsu x19, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x19, 0x0000000000000000 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
mulhsu x28, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x29, 0x0000000000000000 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mulhsu x15, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000000 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
mulhsu x22, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x16, 0x0000000000000000 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
mulhsu x19, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x5, 0x0000000000000000 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulhsu x13, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x31, 0x0000000000000000 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
mulhsu x30, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000000000000 # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x2, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x0000000000000000 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x29, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x25, 0x0000000000000000 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
mulhsu x26, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x7, 0x0000000000000000 # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
mulhsu x25, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x27, 0x0000000000000000 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
mulhsu x21, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x31, 0x0000000000000000 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mulhsu x26, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x10, 0x0000000000000000 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
mulhsu x7, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x17, 0x0000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
mulhsu x27, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x20, 0x0000000000000001 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
mulhsu x17, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x22, 0x0000000000000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
mulhsu x29, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x29, 0x0000000000000001 # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
mulhsu x12, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x21, 0x0000000000000001 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
mulhsu x11, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000001 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
mulhsu x22, x11, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
mulhsu x23, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x6, 0x0000000000000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulhsu x16, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhsu x22, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000000000001 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x20, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000000000001 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x24, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x23, 0x0000000000000001 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
mulhsu x24, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
mulhsu x7, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x10, 0x0000000000000001 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mulhsu x12, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x13, 0x0000000000000001 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
mulhsu x22, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x5, 0x0000000000000001 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
mulhsu x6, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x22, 0x0000000000000002 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
mulhsu x6, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x16, 0x0000000000000002 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
mulhsu x24, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x27, 0x0000000000000002 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
mulhsu x30, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x29, 0x0000000000000002 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
mulhsu x5, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x1, 0x0000000000000002 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
mulhsu x18, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x21, 0x0000000000000002 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
mulhsu x13, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x26, 0x0000000000000002 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
mulhsu x3, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x16, 0x0000000000000002 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulhsu x13, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x18, 0x0000000000000002 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
mulhsu x3, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000000000002 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x5, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x0000000000000002 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x20, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x20, 0x0000000000000002 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
mulhsu x28, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
mulhsu x18, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x12, 0x0000000000000002 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
mulhsu x2, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x15, 0x0000000000000002 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
mulhsu x2, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x27, 0x0000000000000002 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulhsu x21, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x31, 0x8000000000000000 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
mulhsu x19, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x5, 0x8000000000000000 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
mulhsu x11, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x2, 0x8000000000000000 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
mulhsu x23, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x5, 0x8000000000000000 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mulhsu x30, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x31, 0x8000000000000000 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
mulhsu x12, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x23, 0x8000000000000000 # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulhsu x8, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x11, 0x8000000000000000 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
mulhsu x2, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x5, 0x8000000000000000 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulhsu x9, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x6, 0x8000000000000000 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
mulhsu x11, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x20, 0x8000000000000000 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x24, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x8000000000000000 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x27, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x10, 0x8000000000000000 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
mulhsu x27, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x13, 0x8000000000000000 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
mulhsu x3, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x28, 0x8000000000000000 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
mulhsu x15, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x26, 0x8000000000000000 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
mulhsu x30, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x10, 0x8000000000000000 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
mulhsu x7, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x9, 0x8000000000000001 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
mulhsu x8, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x20, 0x8000000000000001 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
mulhsu x13, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x6, 0x8000000000000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
mulhsu x26, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x19, 0x8000000000000001 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
mulhsu x8, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x10, 0x8000000000000001 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
mulhsu x23, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x17, 0x8000000000000001 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
mulhsu x11, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x11, 0x8000000000000001 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
mulhsu x17, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x14, 0x8000000000000001 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
mulhsu x13, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x21, 0x8000000000000001 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
mulhsu x7, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x16, 0x8000000000000001 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x3, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x8000000000000001 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x14, x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x27, 0x8000000000000001 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
mulhsu x5, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x16, 0x8000000000000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
mulhsu x26, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x1, 0x8000000000000001 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
mulhsu x11, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x26, 0x8000000000000001 # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
mulhsu x16, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x7, 0x8000000000000001 # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
mulhsu x25, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x1, 0x7fffffffffffffff # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
mulhsu x5, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x14, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
mulhsu x20, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x19, 0x7fffffffffffffff # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
mulhsu x20, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x12, 0x7fffffffffffffff # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
mulhsu x2, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x5, 0x7fffffffffffffff # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mulhsu x30, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
mulhsu x7, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x11, 0x7fffffffffffffff # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
mulhsu x22, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x6, 0x7fffffffffffffff # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
mulhsu x23, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x30, 0x7fffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
mulhsu x18, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x6, 0x7fffffffffffffff # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x25, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x7fffffffffffffff # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x20, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x28, 0x7fffffffffffffff # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mulhsu x9, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
mulhsu x27, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x17, 0x7fffffffffffffff # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
mulhsu x27, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x24, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
mulhsu x21, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x14, 0x7fffffffffffffff # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
mulhsu x29, x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x21, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
mulhsu x29, x21, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x6, 0x7ffffffffffffffe # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
mulhsu x29, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x12, 0x7ffffffffffffffe # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
mulhsu x5, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
mulhsu x14, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x19, 0x7ffffffffffffffe # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
mulhsu x22, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x18, 0x7ffffffffffffffe # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
mulhsu x23, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
mulhsu x11, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x24, 0x7ffffffffffffffe # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
mulhsu x23, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhsu x20, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x9, 0x7ffffffffffffffe # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x24, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x7ffffffffffffffe # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x30, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x24, 0x7ffffffffffffffe # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
mulhsu x13, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x1, 0x7ffffffffffffffe # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulhsu x16, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x9, 0x7ffffffffffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
mulhsu x19, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x7, 0x7ffffffffffffffe # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
mulhsu x15, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x30, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
mulhsu x14, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x31, 0xffffffffffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
mulhsu x9, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x5, 0xffffffffffffffff # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
mulhsu x12, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x3, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
mulhsu x25, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x16, 0xffffffffffffffff # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
mulhsu x28, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x29, 0xffffffffffffffff # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
mulhsu x3, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x1, 0xffffffffffffffff # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulhsu x9, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
mulhsu x6, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x21, 0xffffffffffffffff # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
mulhsu x26, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
mulhsu x17, x23, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x13, 0xffffffffffffffff # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x11, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0xffffffffffffffff # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x17, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x9, 0xffffffffffffffff # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
mulhsu x19, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x28, 0xffffffffffffffff # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
mulhsu x8, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
mulhsu x8, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x15, 0xffffffffffffffff # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
mulhsu x6, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x5, 0xffffffffffffffff # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
mulhsu x9, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x23, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
mulhsu x1, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x17, 0xfffffffffffffffe # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
mulhsu x3, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x11, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mulhsu x29, x11, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x19, 0xfffffffffffffffe # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
mulhsu x20, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x26, 0xfffffffffffffffe # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mulhsu x24, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
mulhsu x9, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
mulhsu x31, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x30, 0xfffffffffffffffe # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
mulhsu x1, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
mulhsu x11, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x23, 0xfffffffffffffffe # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x30, x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0xfffffffffffffffe # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x6, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x12, 0xfffffffffffffffe # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
mulhsu x14, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
mulhsu x3, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x23, 0xfffffffffffffffe # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
mulhsu x5, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x1, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
mulhsu x27, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x6, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
mulhsu x15, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
mulhsu x22, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
mulhsu x7, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
mulhsu x28, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
mulhsu x7, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mulhsu x15, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
mulhsu x12, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
mulhsu x23, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
mulhsu x29, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
mulhsu x23, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x10, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x14, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mulhsu x7, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
mulhsu x31, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
mulhsu x29, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
mulhsu x17, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
mulhsu x25, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
mulhsu x27, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
mulhsu x24, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
mulhsu x21, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
mulhsu x7, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
mulhsu x8, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
mulhsu x24, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
mulhsu x17, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
mulhsu x10, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
mulhsu x27, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x6, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x31, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
mulhsu x18, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
mulhsu x19, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
mulhsu x30, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
mulhsu x14, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
mulhsu x10, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x23, 0x5555555555555555 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
mulhsu x18, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x29, 0x5555555555555555 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
mulhsu x1, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x22, 0x5555555555555555 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
mulhsu x19, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x31, 0x5555555555555555 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
mulhsu x25, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x24, 0x5555555555555555 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
mulhsu x6, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x23, 0x5555555555555555 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
mulhsu x13, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x25, 0x5555555555555555 # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
mulhsu x19, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x18, 0x5555555555555555 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
mulhsu x30, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x24, 0x5555555555555555 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
mulhsu x30, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x21, 0x5555555555555555 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x10, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x5555555555555555 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x3, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x23, 0x5555555555555555 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
mulhsu x13, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x29, 0x5555555555555555 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
mulhsu x14, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x14, 0x5555555555555555 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
mulhsu x3, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x24, 0x5555555555555555 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
mulhsu x28, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x30, 0x5555555555555555 # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
mulhsu x8, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x10, 0x00000000ffffffff # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
mulhsu x7, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x7, 0x00000000ffffffff # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
mulhsu x29, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x3, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
mulhsu x9, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x12, 0x00000000ffffffff # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
mulhsu x18, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x26, 0x00000000ffffffff # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
mulhsu x25, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x11, 0x00000000ffffffff # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
mulhsu x14, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x12, 0x00000000ffffffff # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
mulhsu x27, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x8, 0x00000000ffffffff # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mulhsu x12, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x11, 0x00000000ffffffff # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
mulhsu x1, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x17, 0x00000000ffffffff # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x22, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x00000000ffffffff # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x7, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x11, 0x00000000ffffffff # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
mulhsu x29, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x25, 0x00000000ffffffff # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
mulhsu x17, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x7, 0x00000000ffffffff # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mulhsu x29, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x19, 0x00000000ffffffff # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
mulhsu x29, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x1, 0x00000000ffffffff # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulhsu x12, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x16, 0x00000000fffffffe # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
mulhsu x13, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x19, 0x00000000fffffffe # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
mulhsu x5, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x25, 0x00000000fffffffe # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
mulhsu x30, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x17, 0x00000000fffffffe # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
mulhsu x14, x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x26, 0x00000000fffffffe # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
mulhsu x25, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
mulhsu x11, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x24, 0x00000000fffffffe # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mulhsu x19, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x20, 0x00000000fffffffe # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
mulhsu x8, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x23, 0x00000000fffffffe # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
mulhsu x11, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x16, 0x00000000fffffffe # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x6, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x00000000fffffffe # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x1, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x31, 0x00000000fffffffe # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
mulhsu x1, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulhsu x5, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x27, 0x00000000fffffffe # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
mulhsu x7, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x31, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
mulhsu x26, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x26, 0x00000000fffffffe # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
mulhsu x15, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x28, 0x0000000100000000 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
mulhsu x30, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x7, 0x0000000100000000 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
mulhsu x20, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x7, 0x0000000100000000 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
mulhsu x20, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x28, 0x0000000100000000 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
mulhsu x27, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x18, 0x0000000100000000 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulhsu x28, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x24, 0x0000000100000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
mulhsu x13, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x15, 0x0000000100000000 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
mulhsu x26, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x7, 0x0000000100000000 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
mulhsu x28, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x3, 0x0000000100000000 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
mulhsu x31, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x7, 0x0000000100000000 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x17, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x0000000100000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x2, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x22, 0x0000000100000000 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
mulhsu x5, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x12, 0x0000000100000000 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
mulhsu x7, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x23, 0x0000000100000000 # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
mulhsu x8, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x25, 0x0000000100000000 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
mulhsu x18, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x13, 0x0000000100000000 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
mulhsu x15, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x30, 0x0000000100000001 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
mulhsu x25, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x27, 0x0000000100000001 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
mulhsu x14, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x19, 0x0000000100000001 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
mulhsu x2, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x24, 0x0000000100000001 # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
mulhsu x18, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x6, 0x0000000100000001 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
mulhsu x25, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000100000001 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
mulhsu x9, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x15, 0x0000000100000001 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
mulhsu x24, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x25, 0x0000000100000001 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
mulhsu x30, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000100000001 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhsu x12, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x5, 0x0000000100000001 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
mulhsu x30, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000100000001 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhsu x31, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x12, 0x0000000100000001 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
mulhsu x30, x12, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x21, 0x0000000100000001 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
mulhsu x31, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x11, 0x0000000100000001 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mulhsu x6, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x22, 0x0000000100000001 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
mulhsu x12, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x15, 0x0000000100000001 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
mulhsu x5, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x9619a0230b6ca632 # initialize rs1
li x0, 0x49e7593b51171cdb # initialize rs2
mulhsu x24, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x128245ed113d7312 # initialize rs1
li x1, 0xefce297b9a4b5cd6 # initialize rs2
mulhsu x22, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x6a80ae4d47416d4e # initialize rs1
li x2, 0xb7e6d729090424c5 # initialize rs2
mulhsu x9, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x655baa994a309455 # initialize rs1
li x3, 0x41416bd4105473d3 # initialize rs2
mulhsu x13, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x5a7f729b13b96721 # initialize rs1
li x4, 0xfa92bc53a7babaf7 # initialize rs2
mulhsu x19, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x606f54df36051445 # initialize rs1
li x5, 0x8da169addc581119 # initialize rs2
mulhsu x23, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x84cce74042a98625 # initialize rs1
li x6, 0x46f15c1126bcc464 # initialize rs2
mulhsu x25, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x25, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf6a51df7809871f4 # initialize rs1
li x7, 0x2ad17de257b112c5 # initialize rs2
mulhsu x31, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xa2c06f2c6bae1101 # initialize rs1
li x8, 0xc631b2987df7a3dc # initialize rs2
mulhsu x11, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x2f698ab8638f2c82 # initialize rs1
li x9, 0xe2ac105bd3e6d7fd # initialize rs2
mulhsu x18, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x8f063a3159d839c2 # initialize rs1
li x10, 0x9d09ae82f0fa77d0 # initialize rs2
mulhsu x14, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x79001b068e654d2a # initialize rs1
li x11, 0x67dcb96278d692d7 # initialize rs2
mulhsu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x30cc0e8d2bbcd73b # initialize rs1
li x12, 0xfb954acfbe185813 # initialize rs2
mulhsu x24, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xa69bd98c7c5fff62 # initialize rs1
li x13, 0x5b513fc5b8f99ba0 # initialize rs2
mulhsu x15, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x4940beeac1999e1b # initialize rs1
li x14, 0x59769749b61d3109 # initialize rs2
mulhsu x30, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xdcb6f5562c400b35 # initialize rs1
li x15, 0xbe2c0f77ea40f958 # initialize rs2
mulhsu x20, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x87ee37333b16d307 # initialize rs1
li x16, 0x1e7ef0fb69cebdbf # initialize rs2
mulhsu x26, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x58c3fd8bb09bbc0c # initialize rs1
li x17, 0x88332422efc43aef # initialize rs2
mulhsu x2, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x46f7d6337b16d49e # initialize rs1
li x18, 0x9b6850f64e535394 # initialize rs2
mulhsu x13, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x6ec5b919a6b8b5be # initialize rs1
li x19, 0x4acdcb5d4fe9b318 # initialize rs2
mulhsu x25, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xdcadaf78ddaab707 # initialize rs1
li x20, 0x1bde42c714180785 # initialize rs2
mulhsu x16, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x95dd27337d481753 # initialize rs1
li x21, 0xe56b5550c76fcf56 # initialize rs2
mulhsu x14, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x9e550e9bcd5ea3e3 # initialize rs1
li x22, 0xc6b72f5ff8360e73 # initialize rs2
mulhsu x17, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xf9613a7f08a8b4cf # initialize rs1
li x23, 0xac1544f56c2b479a # initialize rs2
mulhsu x5, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x1f55d5686f85d317 # initialize rs1
li x24, 0xe92899a0e96c56be # initialize rs2
mulhsu x3, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x307d0b0690c2d266 # initialize rs1
li x25, 0x82f7ba5773edb0e0 # initialize rs2
mulhsu x17, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xb124c271942593c2 # initialize rs1
li x26, 0xc479e52a909079be # initialize rs2
mulhsu x16, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x70bc6753710337ee # initialize rs1
li x27, 0xc169d163eb8839ef # initialize rs2
mulhsu x19, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xeaaacffb187581a8 # initialize rs1
li x28, 0xea1085a4964e1b35 # initialize rs2
mulhsu x15, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x01eb451c56b32a91 # initialize rs1
li x29, 0x51ca93acae2dacf0 # initialize rs2
mulhsu x23, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x7fb234416ff41c06 # initialize rs1
li x30, 0x0f9018ecdc049bb7 # initialize rs2
mulhsu x17, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x8066dbe85f9bde64 # initialize rs1
li x31, 0x11ebf192f1a4f4d4 # initialize rs2
mulhsu x17, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x689496af37c5c662 # initialize rs1
li x18, 0xfb76691ebc66d17c # initialize rs2
mulhsu x0, x0, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x451accc04db526ed # initialize rs1
li x15, 0x3c712f6261404bd2 # initialize rs2
mulhsu x1, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x85795838b44ce21f # initialize rs1
li x12, 0x6def5dcc64f7b902 # initialize rs2
mulhsu x2, x2, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xe16d3168934dd050 # initialize rs1
li x3, 0x65f5d4aa57cf019d # initialize rs2
mulhsu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x483ecdcadf45692d # initialize rs1
li x15, 0xdafa05189c286a3f # initialize rs2
mulhsu x4, x4, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9637716a0ff74594 # initialize rs1
li x29, 0xcb9d2a90c87ad4a4 # initialize rs2
mulhsu x5, x5, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x490cc848591ad4b9 # initialize rs1
li x4, 0xb81dca121aa93a92 # initialize rs2
mulhsu x6, x6, x4 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x16caeae6d15e1790 # initialize rs1
li x14, 0xe5fdb67383e11d42 # initialize rs2
mulhsu x7, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x11d4314586f54d99 # initialize rs1
li x21, 0xdecde0ab65e4495b # initialize rs2
mulhsu x8, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x7e76c9873e99e365 # initialize rs1
li x24, 0x773f294141cdb849 # initialize rs2
mulhsu x9, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x22d6a002c8f96fd7 # initialize rs1
li x6, 0x1c15e5f480bc27d9 # initialize rs2
mulhsu x10, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x848babf2a67c0f03 # initialize rs1
li x14, 0x4aa61daa6c256571 # initialize rs2
mulhsu x11, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x399ceb9010cb6441 # initialize rs1
li x3, 0x278ddfbf8c12bd91 # initialize rs2
mulhsu x12, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x9e6eade3a0283798 # initialize rs1
li x3, 0x6697ca7aead9e65d # initialize rs2
mulhsu x13, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x76d1d481c35d682b # initialize rs1
li x8, 0xb138cfb12465525e # initialize rs2
mulhsu x14, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xccbb10683100d72c # initialize rs1
li x3, 0x7450121e40da24c6 # initialize rs2
mulhsu x15, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x0cdaa55379d7bd14 # initialize rs1
li x9, 0xc4d0b7723adc721a # initialize rs2
mulhsu x16, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xdc6df153c87b76cc # initialize rs1
li x19, 0x4af22b3d8f74fcf4 # initialize rs2
mulhsu x17, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xe32bec34f9dd92c6 # initialize rs1
li x19, 0x34ac85fe1087bd51 # initialize rs2
mulhsu x18, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xa5ef0f660b440f78 # initialize rs1
li x30, 0xdd62ebcf884b7faa # initialize rs2
mulhsu x19, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xecbd6007d0cf3510 # initialize rs1
li x9, 0xd597db28cb8918ac # initialize rs2
mulhsu x20, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x2c8771ba780783b9 # initialize rs1
li x11, 0xb946e28800652c1d # initialize rs2
mulhsu x21, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xb7bf45f6da8ba2d8 # initialize rs1
li x21, 0xba12ea5d174f228d # initialize rs2
mulhsu x22, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x9c8283f3f5267107 # initialize rs1
li x14, 0x42fda078d3d55bd2 # initialize rs2
mulhsu x23, x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x8a8603d1fa363305 # initialize rs1
li x28, 0x2596dc09d3c9aefb # initialize rs2
mulhsu x24, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x81c6bf3a27b17d86 # initialize rs1
li x17, 0xcf824f839cae81e7 # initialize rs2
mulhsu x25, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x2612629edc9d6a2d # initialize rs1
li x23, 0xb7638392bdb066ce # initialize rs2
mulhsu x26, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x0d01082efd28daf0 # initialize rs1
li x11, 0x3b6c3b8addc4953a # initialize rs2
mulhsu x27, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xaa6c00550a4373a4 # initialize rs1
li x8, 0x9c6ad222a56e57fd # initialize rs2
mulhsu x28, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x9d2f96561ddb6f0c # initialize rs1
li x11, 0xcc5909ecd3df1c85 # initialize rs2
mulhsu x29, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x5bc8f9524ed2cee2 # initialize rs1
li x15, 0x34e45b07124a4c56 # initialize rs2
mulhsu x30, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xa546aa3772d359de # initialize rs1
li x23, 0xc687171ab8852200 # initialize rs2
mulhsu x31, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x28, 0xbb11074ae12bc797 # initialize rs1
li x0, 0x1b88e578701db29a # initialize rs2
mulhsu x0, x28, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x27, 0x849f33bdb1b655a2 # initialize rs1
li x1, 0x4a5ca373d930a453 # initialize rs2
mulhsu x1, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x1, 0xaeff411cd0ffe581 # initialize rs1
li x2, 0x2f4e349274cc2195 # initialize rs2
mulhsu x2, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x7, 0x58739d2a3667d97b # initialize rs1
li x3, 0x735125362a429ce0 # initialize rs2
mulhsu x3, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x18, 0xe3a17fbba4f8531e # initialize rs1
li x4, 0x20ec8d25534bae65 # initialize rs2
mulhsu x4, x18, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x21, 0x9348bc843daa3724 # initialize rs1
li x5, 0xcad14dd2dd39ee4f # initialize rs2
mulhsu x5, x21, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x2, 0x9c016d1366b1457e # initialize rs1
li x6, 0x621fd1c6e350fbad # initialize rs2
mulhsu x6, x2, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x26, 0xdf774542fb074919 # initialize rs1
li x7, 0xadbf42c1a7e7998f # initialize rs2
mulhsu x7, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x25, 0x6501873e5db5f112 # initialize rs1
li x8, 0x81644412432a0751 # initialize rs2
mulhsu x8, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x26, 0x2425776a895ff703 # initialize rs1
li x9, 0x1c238677db728a35 # initialize rs2
mulhsu x9, x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x15, 0xb22f75d1cf3b10ec # initialize rs1
li x10, 0x08178250ebb78360 # initialize rs2
mulhsu x10, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x6, 0x16132ba02ac74d2e # initialize rs1
li x11, 0x73f4fe537fca2a9a # initialize rs2
mulhsu x11, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x9, 0xa2728da29de9ccdd # initialize rs1
li x12, 0x99c8a16e47c918bc # initialize rs2
mulhsu x12, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x30, 0x6ded49c063fd637a # initialize rs1
li x13, 0xd62a7b35f40c2543 # initialize rs2
mulhsu x13, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x23, 0xab8a34028f31126c # initialize rs1
li x14, 0xc6abf6655c370f94 # initialize rs2
mulhsu x14, x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x10, 0x43d0ca82ca7fdf08 # initialize rs1
li x15, 0xca49d7627b9ef67c # initialize rs2
mulhsu x15, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x1, 0x0090b3c0718ff329 # initialize rs1
li x16, 0x88b141674d06bf1d # initialize rs2
mulhsu x16, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x9, 0xfb7ee05856d1b2c9 # initialize rs1
li x17, 0xa425b27303d92cdd # initialize rs2
mulhsu x17, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x15, 0xabb0048e089d7d31 # initialize rs1
li x18, 0xde90dfe8c3f0faaa # initialize rs2
mulhsu x18, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x25, 0x91d8b82004b546f9 # initialize rs1
li x19, 0x66d4cb1bcd6137d8 # initialize rs2
mulhsu x19, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x15, 0xb2b39c1c8c4af81d # initialize rs1
li x20, 0x94fd5de35290cd66 # initialize rs2
mulhsu x20, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x8, 0x452d040d258d7817 # initialize rs1
li x21, 0x86705307c46c9635 # initialize rs2
mulhsu x21, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x30, 0x77266485520bc8a1 # initialize rs1
li x22, 0xece512079f3b292f # initialize rs2
mulhsu x22, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x3e3b3fba0a4e6d7d # initialize rs1
li x23, 0x78248a70f86fe8a8 # initialize rs2
mulhsu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x29, 0x0c6f8090663a753c # initialize rs1
li x24, 0x74c7c34c6a526d8e # initialize rs2
mulhsu x24, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x9, 0xdd136424871966f1 # initialize rs1
li x25, 0xba0a0e82f7183dda # initialize rs2
mulhsu x25, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x17, 0x3f3674d8f8dbcc37 # initialize rs1
li x26, 0xb00dc77879d4f59b # initialize rs2
mulhsu x26, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x11, 0xbdb1a150712e637d # initialize rs1
li x27, 0x7fa3ff99e16149b8 # initialize rs2
mulhsu x27, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x26, 0x60e4e0e2fa06aa6b # initialize rs1
li x28, 0x9812ea7a5a672843 # initialize rs2
mulhsu x28, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x30, 0x1dfd0a727a73c451 # initialize rs1
li x29, 0xd12fa489888d0a3d # initialize rs2
mulhsu x29, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x8, 0xe9d951a815587b34 # initialize rs1
li x30, 0xdbed136b3dd3aada # initialize rs2
mulhsu x30, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x29, 0xecb9e7009e869dbe # initialize rs1
li x31, 0x865afb9e162ed85d # initialize rs2
mulhsu x31, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x7ba00a264e1384e7 # initialize rs1
li x0, 0xaa9be6a8db49c67f # initialize rs2
mulhsu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x37d7b080c4c89b1b # initialize rs1
li x1, 0xbebbbf874587ae36 # initialize rs2
mulhsu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xd1164ec00d0f7f0a # initialize rs1
li x2, 0x5a1c4ba5e8761afc # initialize rs2
mulhsu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xdcf24e4247b5ffda # initialize rs1
li x3, 0x9f2a56f2658aceea # initialize rs2
mulhsu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9f0ccf75ca5e92e1 # initialize rs1
li x4, 0x0621c3d7d61636a8 # initialize rs2
mulhsu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb435d53629c148cb # initialize rs1
li x5, 0xbc83bcfd2e1a9efe # initialize rs2
mulhsu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x64b141ac8f98b859 # initialize rs1
li x6, 0xa6612bfa1de297b1 # initialize rs2
mulhsu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x5f4edc4efcb250db # initialize rs1
li x7, 0xde9b46dd88e1aa9f # initialize rs2
mulhsu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x771ab508fa6d1761 # initialize rs1
li x8, 0x199168bcb6a2bf39 # initialize rs2
mulhsu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xde95cfc032ea77b3 # initialize rs1
li x9, 0xbffcce45f9fcd4be # initialize rs2
mulhsu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x086d82411f99e7b8 # initialize rs1
li x10, 0x7f7066be1d3bee8a # initialize rs2
mulhsu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x830eb58e6b10a608 # initialize rs1
li x11, 0x9e5b94cab2cc9be4 # initialize rs2
mulhsu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x10e737bbbcca6bb6 # initialize rs1
li x12, 0x9a0b034bc05fa580 # initialize rs2
mulhsu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xa0d9770169c9fdba # initialize rs1
li x13, 0x16fef4bddb469220 # initialize rs2
mulhsu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x81035044b9f56e9e # initialize rs1
li x14, 0xdbdfed6ead96ce9e # initialize rs2
mulhsu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x575130c52c0b3a08 # initialize rs1
li x15, 0x3ec58129610f9e0d # initialize rs2
mulhsu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x85364ad850939b51 # initialize rs1
li x16, 0x21a2a94a4e2cf319 # initialize rs2
mulhsu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xbde2bd5948c0c9fb # initialize rs1
li x17, 0x8cf2b13fc27b123c # initialize rs2
mulhsu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xa7bdd607fc984690 # initialize rs1
li x18, 0x65007fc3f0befb11 # initialize rs2
mulhsu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x6247ab1c4cc5d250 # initialize rs1
li x19, 0x17259403ea99cf68 # initialize rs2
mulhsu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x34d135bf46f765b0 # initialize rs1
li x20, 0x4648d9c872174191 # initialize rs2
mulhsu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x24005f97dc63683f # initialize rs1
li x21, 0xa88903913eb435ff # initialize rs2
mulhsu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7f9331870b26b1dd # initialize rs1
li x22, 0xafd1f9d5aaf171fc # initialize rs2
mulhsu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x3b009a9d5502756e # initialize rs1
li x23, 0xafe95d14da62759b # initialize rs2
mulhsu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xae030e41b0f313f4 # initialize rs1
li x24, 0xa74801c3937829f7 # initialize rs2
mulhsu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x744b9c3c87ee5cbc # initialize rs1
li x25, 0x5d5783134dc22558 # initialize rs2
mulhsu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xe1d3c4168fae1b56 # initialize rs1
li x26, 0x9fcaeb5f3b163850 # initialize rs2
mulhsu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x10b4830a817ccdb7 # initialize rs1
li x27, 0x33c77d5e72ad1641 # initialize rs2
mulhsu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x5fb203cc09968de3 # initialize rs1
li x28, 0x19d6f246f54aaf66 # initialize rs2
mulhsu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xc84a2bb0b584236e # initialize rs1
li x29, 0xa40381d36f3f2ab4 # initialize rs2
mulhsu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xcdc4fbe131056194 # initialize rs1
li x30, 0xd21508c9785eb4ca # initialize rs2
mulhsu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x5a5e75c458d62503 # initialize rs1
li x31, 0x71face3eaea29a32 # initialize rs2
mulhsu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x31, x22 # perform first operation
mulhsu x15, x21, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x12, x2, x16 # perform first operation
mulhsu x5, x9, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x21, x12 # perform first operation
mulhsu x5, x10, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x9, x14, x8 # perform first operation
mulhsu x25, x16, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x12, x31, x1 # perform first operation
mulhsu x2, x25, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x16, x14 # perform first operation
mulhsu x26, x12, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x23, x25, x30 # perform first operation
mulhsu x23, x28, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x10, x30, x28 # perform first operation
mulhsu x10, x9, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x8, x28 # perform first operation
mulhsu x27, x20, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x31, x9 # perform first operation
mulhsu x31, x30, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x2, x6, x12 # perform first operation
mulhsu x12, x16, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x25, x17, x19 # perform first operation
mulhsu x15, x10, x18 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-divuw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xc2848ac2b218ad31 # initialize rs1
li x30, 0xfaec6a33576476d9 # initialize rs2
divuw x26, x0, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x6cf42727db3d4c0f # initialize rs1
li x8, 0xef51bbf9d2cfe3c3 # initialize rs2
divuw x20, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x814dff1610d13294 # initialize rs1
li x17, 0xd916f868197dfdeb # initialize rs2
divuw x5, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x710917a2bcf30c3a # initialize rs1
li x23, 0x6af2c960661ea9bf # initialize rs2
divuw x22, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x66647ed8021f04f4 # initialize rs1
li x14, 0xb32f594f9f0c8f75 # initialize rs2
divuw x20, x4, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x221de0068213596e # initialize rs1
li x23, 0x4df91008edef1185 # initialize rs2
divuw x1, x5, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd1971121f4c6b4a9 # initialize rs1
li x1, 0x5d24f4d75ca63828 # initialize rs2
divuw x12, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x12, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe419791d687bd9f8 # initialize rs1
li x6, 0x0fd84cd36c9dd782 # initialize rs2
divuw x21, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x1f5ca6cce7c99bf2 # initialize rs1
li x10, 0x1a305a45f04b3478 # initialize rs2
divuw x18, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x4cffc95c68ac27cf # initialize rs1
li x26, 0x599d6bee29b475b0 # initialize rs2
divuw x1, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xff35a5defed0979d # initialize rs1
li x9, 0xbfdf771250721f34 # initialize rs2
divuw x31, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xa83af8888db59c4c # initialize rs1
li x6, 0x573040acfbb49a0c # initialize rs2
divuw x7, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x17f0bdddb88754ab # initialize rs1
li x13, 0x5c3b55ffd7a092ce # initialize rs2
divuw x31, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x8570d27638f3b803 # initialize rs1
li x11, 0x43d00d5ed8e7dc1e # initialize rs2
divuw x29, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xa7091988848b9e73 # initialize rs1
li x6, 0x42cf437ef3fe00f9 # initialize rs2
divuw x12, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x8d1e8bdd0344e5e4 # initialize rs1
li x17, 0x20b828e45de15080 # initialize rs2
divuw x3, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xc47ce8ed7aeb27e6 # initialize rs1
li x31, 0x318d44d4ccdae160 # initialize rs2
divuw x1, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xac3fb6e7e5d8331e # initialize rs1
li x1, 0x0f1352b69fc216d9 # initialize rs2
divuw x27, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x49dbf69d5b69c027 # initialize rs1
li x3, 0x6da757982201c129 # initialize rs2
divuw x13, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x16f3676da2ec32a2 # initialize rs1
li x11, 0x0299e1193cb2d222 # initialize rs2
divuw x14, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x0bf604d4844cf918 # initialize rs1
li x22, 0x33fc0aae011d6a7c # initialize rs2
divuw x13, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xe1f311469fce8a4d # initialize rs1
li x8, 0x87cc2d254d798293 # initialize rs2
divuw x14, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xa5347a85c0af17a1 # initialize rs1
li x26, 0x8225a00347359fea # initialize rs2
divuw x11, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xda7c0bd185416ed3 # initialize rs1
li x10, 0x9ffc3787d95cb80b # initialize rs2
divuw x3, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x56bba10f9bfc677b # initialize rs1
li x13, 0xbbe5a3f26948167f # initialize rs2
divuw x17, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xc3a354eb72f3f2af # initialize rs1
li x19, 0x22bf6594aceeadb8 # initialize rs2
divuw x23, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xbab925d143477749 # initialize rs1
li x22, 0xe3e084b95c1bd9f5 # initialize rs2
divuw x18, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xfd3f78ed08893a25 # initialize rs1
li x26, 0x165795ee9c648990 # initialize rs2
divuw x21, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x2bda9b89b1a34cc1 # initialize rs1
li x29, 0xdc0c2d20cc581bfc # initialize rs2
divuw x18, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x65d4c54d51dc6ae4 # initialize rs1
li x30, 0xef3ab2d313346fec # initialize rs2
divuw x21, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xf9064738ab3d6e07 # initialize rs1
li x11, 0x98df9a26db1a7e0e # initialize rs2
divuw x16, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x39b12ce32dbc61c2 # initialize rs1
li x23, 0x8bb1be3b49ae91cb # initialize rs2
divuw x25, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x1, 0xddd24eea7d3c61a8 # initialize rs1
li x0, 0xfc691798ace85f15 # initialize rs2
divuw x26, x1, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x11, 0xc2ed7011ae7fd362 # initialize rs1
li x1, 0xc8fc3ca796266cfb # initialize rs2
divuw x3, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x26, 0x848fff54af41dba6 # initialize rs1
li x2, 0x5f61ef479a2eeb26 # initialize rs2
divuw x13, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x21, 0x136b362083767b25 # initialize rs1
li x3, 0xf943a4d14d3c7300 # initialize rs2
divuw x14, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x943c50be5281d5d0 # initialize rs1
li x4, 0xff2afbba4556dadc # initialize rs2
divuw x19, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x23, 0xeba9ed3705bcf4c9 # initialize rs1
li x5, 0xba8d6df63ca5f795 # initialize rs2
divuw x29, x23, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x16, 0xc217ead1c520499d # initialize rs1
li x6, 0xe9c9c50fd0a05d48 # initialize rs2
divuw x21, x16, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x21, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x4, 0x0a25710f242acf66 # initialize rs1
li x7, 0x682d9ac1a0194c93 # initialize rs2
divuw x19, x4, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x14, 0x9b49a00d0bae4655 # initialize rs1
li x8, 0x77ad2546491c0ef2 # initialize rs2
divuw x9, x14, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x22, 0x5590e93ea65ad1bd # initialize rs1
li x9, 0xeb2731d43879c36a # initialize rs2
divuw x17, x22, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x13, 0x4cf7de8f8a281efb # initialize rs1
li x10, 0xc2f2622fc243b827 # initialize rs2
divuw x22, x13, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x27, 0xc4eefa9c81fff0a8 # initialize rs1
li x11, 0x4d19d6ac73dceed6 # initialize rs2
divuw x12, x27, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x3, 0xfe302e28696edd31 # initialize rs1
li x12, 0xaf41b710e96135d0 # initialize rs2
divuw x29, x3, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x20, 0x474ad5231867564e # initialize rs1
li x13, 0x42f4394dec140362 # initialize rs2
divuw x7, x20, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x22, 0x1d59f07f89f5c49e # initialize rs1
li x14, 0xfccff2ef95ba56d0 # initialize rs2
divuw x24, x22, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x25, 0x8c39b5b6a353afd5 # initialize rs1
li x15, 0x43788039d4dc48de # initialize rs2
divuw x24, x25, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x25, 0xb44be2b44928b286 # initialize rs1
li x16, 0x0de96c979ffdf091 # initialize rs2
divuw x3, x25, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x19, 0xd19cf8ca8a6d1e29 # initialize rs1
li x17, 0xd0a2b4ec76421bc1 # initialize rs2
divuw x18, x19, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x21, 0x0a5ec495b9c53556 # initialize rs1
li x18, 0x57322d43010acab0 # initialize rs2
divuw x11, x21, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x18, 0xcf848fa7ca500554 # initialize rs1
li x19, 0x7b9bad5b5375a958 # initialize rs2
divuw x9, x18, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x15, 0x05d9b84941ef0972 # initialize rs1
li x20, 0x1377d500cd14961b # initialize rs2
divuw x26, x15, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x18, 0x5b32ab095fe2015d # initialize rs1
li x21, 0x181c36913b1fa930 # initialize rs2
divuw x16, x18, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x17, 0x303ca66e305f3f1a # initialize rs1
li x22, 0x40838f4d3ff11c84 # initialize rs2
divuw x24, x17, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x10, 0x75cf3d2960046229 # initialize rs1
li x23, 0x4b33ffe322cb801b # initialize rs2
divuw x8, x10, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x18, 0xab5a5260cc14404f # initialize rs1
li x24, 0xc40a7a2ad8994377 # initialize rs2
divuw x17, x18, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x3, 0xe9d0b614309a8a6a # initialize rs1
li x25, 0xaf061f8c4983fe7c # initialize rs2
divuw x13, x3, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x28, 0x6f99954eae865394 # initialize rs1
li x26, 0x9832c4839f0b4cf1 # initialize rs2
divuw x3, x28, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x8, 0x2f017a662256efa7 # initialize rs1
li x27, 0x24709d42dc89a594 # initialize rs2
divuw x23, x8, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x8, 0x22b29f699e6b19dd # initialize rs1
li x28, 0xee5cb0654abb0f38 # initialize rs2
divuw x9, x8, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x9, 0x396056ad085be232 # initialize rs1
li x29, 0xfba1be7e3d7a3737 # initialize rs2
divuw x26, x9, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x6, 0x2e51dd91d68ef738 # initialize rs1
li x30, 0xa6737fff8ff65106 # initialize rs2
divuw x7, x6, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x19, 0xc3922445eb3f7456 # initialize rs1
li x31, 0x086143593ddbe94f # initialize rs2
divuw x30, x19, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 504)

# Testcase cp_rd (Test destination rd = x0)
li x18, 0x6240f5ea29d5318e # initialize rs1
li x13, 0xefdeb3a1a8d1337e # initialize rs2
divuw x0, x18, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x29, 0xe6bc4d11d3bd8577 # initialize rs1
li x13, 0x9e6b61417d08d741 # initialize rs2
divuw x1, x29, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x30, 0x3b83cbc20d003e0a # initialize rs1
li x18, 0x196a1fb961439613 # initialize rs2
divuw x2, x30, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x1, 0x798a02ced9f89769 # initialize rs1
li x20, 0xd1b77f2cb34f0c40 # initialize rs2
divuw x3, x1, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
li x10, 0xbaa8b057e7f36882 # initialize rs1
li x15, 0x22a2d934f6a496fe # initialize rs2
divuw x4, x10, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x14, 0x73cc82c2922f4685 # initialize rs1
li x24, 0xf62dd180df33d8ba # initialize rs2
divuw x5, x14, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x2c66a783a6f4d3ad # initialize rs1
li x23, 0x1a8056fb66dc27d6 # initialize rs2
divuw x6, x22, x23 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0xa088405722dc3cfc # initialize rs1
li x19, 0x0c12bcebfd363b0b # initialize rs2
divuw x7, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x30, 0x44a120da0a8d4acc # initialize rs1
li x1, 0x59dd8fb2605a0279 # initialize rs2
divuw x8, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x26, 0x571fc6f78bb048f1 # initialize rs1
li x13, 0x91fb56e7791697d9 # initialize rs2
divuw x9, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x22, 0xa6980ce6fd6fb6b4 # initialize rs1
li x31, 0xca78332963491012 # initialize rs2
divuw x10, x22, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x3, 0xe8c7664e0b16e3c6 # initialize rs1
li x6, 0x7d7cb23ea3655387 # initialize rs2
divuw x11, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x23, 0x66af928ee0bfb503 # initialize rs1
li x25, 0xacb3f457db5d371a # initialize rs2
divuw x12, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x31, 0x937293ebe2be3771 # initialize rs1
li x24, 0x945e0d6f5e81bcc2 # initialize rs2
divuw x13, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x3, 0x610632c8427a0219 # initialize rs1
li x19, 0xd80739a47052e0c5 # initialize rs2
divuw x14, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x17, 0x9db94a6d09b40718 # initialize rs1
li x22, 0xc75005b7515bbbf5 # initialize rs2
divuw x15, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x6, 0xbafc991177c14e62 # initialize rs1
li x18, 0x39ef91d945d8a245 # initialize rs2
divuw x16, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x20, 0xc7943025487955a9 # initialize rs1
li x2, 0x3c22eec5ac6fbc6d # initialize rs2
divuw x17, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x16, 0xa04fd174b810a8e1 # initialize rs1
li x21, 0xb6ec571bf104c900 # initialize rs2
divuw x18, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x12, 0xc52dddb58b948a3b # initialize rs1
li x18, 0x7a3fa5bddc03a807 # initialize rs2
divuw x19, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x31, 0x846aa768e365070f # initialize rs1
li x28, 0x6b37df6061cdf612 # initialize rs2
divuw x20, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x16, 0x2f73c5ae112dd57c # initialize rs1
li x6, 0x50ebaa1b760a1bdc # initialize rs2
divuw x21, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x18, 0x7705b298073042c6 # initialize rs1
li x2, 0x3e5448ced2a93e35 # initialize rs2
divuw x22, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x15, 0x580bbadee0d9e757 # initialize rs1
li x28, 0x623734f5d7b789fc # initialize rs2
divuw x23, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x30, 0xc390f56a3790ea89 # initialize rs1
li x5, 0x9d53851523c529f8 # initialize rs2
divuw x24, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x15, 0x984bf221205c77d8 # initialize rs1
li x22, 0x6336ea86984b05d5 # initialize rs2
divuw x25, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x9, 0xdcc4e9e2587839d6 # initialize rs1
li x15, 0xa77b030bad588c7e # initialize rs2
divuw x26, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x7, 0xa9fcd048776b40f1 # initialize rs1
li x10, 0x51b08b0c654c0961 # initialize rs2
divuw x27, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x27, 0xb96c854ba0e519ba # initialize rs1
li x16, 0x429be86f0990223e # initialize rs2
divuw x28, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x8, 0x2399aa7b413a2f09 # initialize rs1
li x19, 0x0367776b5323cb2f # initialize rs2
divuw x29, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x10, 0xa0ff590018b0c111 # initialize rs1
li x20, 0xb238a42d451533ad # initialize rs2
divuw x30, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x7, 0xb7476683efd4ec33 # initialize rs1
li x8, 0xbe9e6c817a46b713 # initialize rs2
divuw x31, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x9, 0x0000000000000000 # initialize rs1
li x12, 0xc10d55daf02f7732 # initialize rs2
divuw x19, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x22, 0x0000000000000001 # initialize rs1
li x17, 0xd3865f8b2187f97c # initialize rs2
divuw x11, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x2, 0x0000000000000002 # initialize rs1
li x28, 0xe7c922dba0fbe75d # initialize rs2
divuw x23, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x9, 0x8000000000000000 # initialize rs1
li x19, 0x84636324c74a18f6 # initialize rs2
divuw x26, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x19, 0x8000000000000001 # initialize rs1
li x18, 0x08536f65e4b09ffd # initialize rs2
divuw x5, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x25, 0x7fffffffffffffff # initialize rs1
li x5, 0x947b1a5e2077c1f1 # initialize rs2
divuw x20, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x2, 0x7ffffffffffffffe # initialize rs1
li x29, 0x36940113f92dd039 # initialize rs2
divuw x15, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x24, 0xffffffffffffffff # initialize rs1
li x21, 0x431441a1cbb2ad5e # initialize rs2
divuw x30, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x29, 0xfffffffffffffffe # initialize rs1
li x7, 0xf9dba76d5de1bd2c # initialize rs2
divuw x18, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x55fe64bf334847ec # initialize rs2
divuw x31, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xaf79fecd88f07130 # initialize rs2
divuw x11, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x7, 0x5555555555555555 # initialize rs1
li x2, 0x005d5132f60e9d91 # initialize rs2
divuw x21, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x9, 0x611d68899ac79c8c # initialize rs2
divuw x21, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x6, 0x00000000fffffffe # initialize rs1
li x2, 0x7c54cc1db9c8b4e8 # initialize rs2
divuw x29, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x5, 0x0000000100000000 # initialize rs1
li x19, 0x5b60d241025559ce # initialize rs2
divuw x9, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x19, 0x0000000100000001 # initialize rs1
li x26, 0xcaf396e3aa0c2a1d # initialize rs2
divuw x2, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x15, 0x2fba561d043d3198 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
divuw x9, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x23, 0xc0d6306eeda1ab5f # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
divuw x18, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x3, 0x37063c7bbb74c590 # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
divuw x16, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x1, 0xbfd91917ce517e1f # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
divuw x16, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x2, 0x556982d90b5121c8 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
divuw x24, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x28, 0x69837b3bbf0f6a7c # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
divuw x24, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x1, 0xadb0962a74e04ceb # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
divuw x19, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x31, 0xaf3738605c9777ad # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
divuw x10, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x19, 0xb6e09d25071ef85c # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
divuw x29, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x3, 0x3b876636d17f2b6d # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
divuw x8, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x23, 0x2bd238b2c4d8f3b5 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x11, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x24, 0xfd7d183dbe252b2b # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
divuw x31, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x15, 0x01a8b4c49b1b6715 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
divuw x29, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x24, 0xae805b5826f03d40 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
divuw x2, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x16, 0xf07d589afc5964b3 # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
divuw x27, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x2, 0x389de2c15ddf5b8e # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
divuw x30, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x17, 0x0000000000000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
divuw x3, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x19, 0x0000000000000000 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
divuw x10, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x23, 0x0000000000000000 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
divuw x10, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x11, 0x0000000000000000 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
divuw x30, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x14, 0x0000000000000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
divuw x9, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x21, 0x0000000000000000 # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
divuw x25, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000000000000 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
divuw x1, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x3, 0x0000000000000000 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
divuw x26, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000000000000 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
divuw x25, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000000000000 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
divuw x14, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x0000000000000000 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x24, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x19, 0x0000000000000000 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
divuw x16, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x23, 0x0000000000000000 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
divuw x9, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
divuw x6, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x19, 0x0000000000000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
divuw x29, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x5, 0x0000000000000000 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
divuw x21, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x10, 0x0000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
divuw x9, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x7, 0x0000000000000001 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
divuw x29, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x15, 0x0000000000000001 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
divuw x23, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x17, 0x0000000000000001 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
divuw x3, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x20, 0x0000000000000001 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
divuw x6, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x12, 0x0000000000000001 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
divuw x30, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000000000001 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
divuw x1, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x6, 0x0000000000000001 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
divuw x15, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000000000001 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
divuw x15, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x17, 0x0000000000000001 # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
divuw x22, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x0000000000000001 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x6, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x20, 0x0000000000000001 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
divuw x13, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x5, 0x0000000000000001 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
divuw x17, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x27, 0x0000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
divuw x5, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x13, 0x0000000000000001 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
divuw x24, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x9, 0x0000000000000001 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
divuw x16, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x20, 0x0000000000000002 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
divuw x28, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x27, 0x0000000000000002 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
divuw x20, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x29, 0x0000000000000002 # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
divuw x7, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x26, 0x0000000000000002 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
divuw x19, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x10, 0x0000000000000002 # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
divuw x14, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000000000002 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
divuw x31, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x22, 0x0000000000000002 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
divuw x2, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000002 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
divuw x31, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000000000002 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
divuw x31, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x18, 0x0000000000000002 # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
divuw x16, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x0000000000000002 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x29, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x15, 0x0000000000000002 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
divuw x5, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x25, 0x0000000000000002 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
divuw x3, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x27, 0x0000000000000002 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
divuw x1, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x30, 0x0000000000000002 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
divuw x15, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x16, 0x0000000000000002 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
divuw x20, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x9, 0x8000000000000000 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
divuw x27, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x31, 0x8000000000000000 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
divuw x27, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x5, 0x8000000000000000 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
divuw x19, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x18, 0x8000000000000000 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
divuw x19, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x2, 0x8000000000000000 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
divuw x12, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x29, 0x8000000000000000 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
divuw x12, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
divuw x14, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x9, 0x8000000000000000 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
divuw x12, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
divuw x2, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x26, 0x8000000000000000 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
divuw x5, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x8000000000000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x21, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x24, 0x8000000000000000 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
divuw x15, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x26, 0x8000000000000000 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
divuw x25, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x11, 0x8000000000000000 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
divuw x8, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x7, 0x8000000000000000 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
divuw x15, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x31, 0x8000000000000000 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
divuw x6, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x13, 0x8000000000000001 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
divuw x8, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x2, 0x8000000000000001 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
divuw x12, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x10, 0x8000000000000001 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
divuw x20, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x15, 0x8000000000000001 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
divuw x3, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x3, 0x8000000000000001 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
divuw x6, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x29, 0x8000000000000001 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
divuw x5, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x3, 0x8000000000000001 # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
divuw x17, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
divuw x7, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x3, 0x8000000000000001 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
divuw x28, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x13, 0x8000000000000001 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
divuw x3, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x8000000000000001 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x28, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x29, 0x8000000000000001 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
divuw x18, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
divuw x6, x12, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
divuw x1, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x11, 0x8000000000000001 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
divuw x17, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x1, 0x8000000000000001 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
divuw x5, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x8, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
divuw x17, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x26, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
divuw x25, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x14, 0x7fffffffffffffff # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
divuw x31, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x25, 0x7fffffffffffffff # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
divuw x30, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x31, 0x7fffffffffffffff # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
divuw x26, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
divuw x31, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x19, 0x7fffffffffffffff # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
divuw x29, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x10, 0x7fffffffffffffff # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
divuw x27, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x2, 0x7fffffffffffffff # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
divuw x7, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x15, 0x7fffffffffffffff # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
divuw x16, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x7fffffffffffffff # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x12, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x19, 0x7fffffffffffffff # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
divuw x24, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
divuw x17, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x13, 0x7fffffffffffffff # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
divuw x24, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x22, 0x7fffffffffffffff # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
divuw x9, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x7, 0x7fffffffffffffff # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
divuw x6, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x27, 0x7ffffffffffffffe # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
divuw x8, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x27, 0x7ffffffffffffffe # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
divuw x19, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x19, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
divuw x15, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x6, 0x7ffffffffffffffe # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
divuw x8, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x27, 0x7ffffffffffffffe # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
divuw x6, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x3, 0x7ffffffffffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
divuw x2, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x14, 0x7ffffffffffffffe # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
divuw x13, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x31, 0x7ffffffffffffffe # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
divuw x16, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x10, 0x7ffffffffffffffe # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
divuw x24, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x1, 0x7ffffffffffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
divuw x5, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x7ffffffffffffffe # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x28, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x31, 0x7ffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
divuw x12, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x5, 0x7ffffffffffffffe # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
divuw x3, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
divuw x22, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x5, 0x7ffffffffffffffe # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
divuw x24, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x3, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
divuw x17, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x25, 0xffffffffffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
divuw x22, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x18, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
divuw x12, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x26, 0xffffffffffffffff # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
divuw x17, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x18, 0xffffffffffffffff # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
divuw x14, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x29, 0xffffffffffffffff # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
divuw x10, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
divuw x29, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x1, 0xffffffffffffffff # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
divuw x10, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
divuw x24, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x20, 0xffffffffffffffff # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
divuw x6, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x27, 0xffffffffffffffff # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
divuw x11, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0xffffffffffffffff # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x5, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x19, 0xffffffffffffffff # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
divuw x7, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
divuw x14, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x31, 0xffffffffffffffff # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
divuw x17, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x6, 0xffffffffffffffff # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
divuw x2, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x11, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
divuw x22, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x25, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
divuw x26, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x9, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
divuw x24, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x31, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
divuw x24, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x27, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
divuw x11, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x24, 0xfffffffffffffffe # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
divuw x3, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x16, 0xfffffffffffffffe # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
divuw x25, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x17, 0xfffffffffffffffe # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
divuw x10, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
divuw x19, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
divuw x12, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x7, 0xfffffffffffffffe # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
divuw x16, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0xfffffffffffffffe # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x28, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x7, 0xfffffffffffffffe # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
divuw x8, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x16, 0xfffffffffffffffe # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
divuw x6, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x12, 0xfffffffffffffffe # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
divuw x26, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x24, 0xfffffffffffffffe # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
divuw x15, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x9, 0xfffffffffffffffe # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
divuw x24, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
divuw x13, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
divuw x19, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
divuw x5, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
divuw x5, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
divuw x26, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
divuw x30, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
divuw x10, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
divuw x2, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
divuw x10, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
divuw x1, x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x13, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
divuw x28, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
divuw x8, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
divuw x3, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
divuw x10, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
divuw x29, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
divuw x1, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
divuw x27, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
divuw x25, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
divuw x12, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
divuw x11, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
divuw x16, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
divuw x18, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
divuw x8, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
divuw x18, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
divuw x13, x20, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x1, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
divuw x6, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
divuw x16, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
divuw x13, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
divuw x11, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
divuw x10, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x23, 0x5555555555555555 # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
divuw x18, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x28, 0x5555555555555555 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
divuw x13, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x25, 0x5555555555555555 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
divuw x8, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x7, 0x5555555555555555 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
divuw x8, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x12, 0x5555555555555555 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
divuw x26, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x5, 0x5555555555555555 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
divuw x31, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x20, 0x5555555555555555 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divuw x7, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x24, 0x5555555555555555 # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
divuw x30, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x16, 0x5555555555555555 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
divuw x1, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x2, 0x5555555555555555 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
divuw x9, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x5555555555555555 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x16, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
divuw x8, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x7, 0x5555555555555555 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
divuw x27, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x13, 0x5555555555555555 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
divuw x3, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x11, 0x5555555555555555 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
divuw x7, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x5, 0x5555555555555555 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
divuw x31, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x14, 0x00000000ffffffff # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
divuw x12, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x14, 0x00000000ffffffff # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
divuw x26, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x13, 0x00000000ffffffff # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
divuw x28, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x31, 0x00000000ffffffff # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
divuw x1, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x14, 0x00000000ffffffff # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
divuw x21, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
divuw x11, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x1, 0x00000000ffffffff # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
divuw x14, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x19, 0x00000000ffffffff # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
divuw x5, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x6, 0x00000000ffffffff # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
divuw x30, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x13, 0x00000000ffffffff # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
divuw x30, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x00000000ffffffff # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x6, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x11, 0x00000000ffffffff # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
divuw x12, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x25, 0x00000000ffffffff # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
divuw x11, x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x13, 0x00000000ffffffff # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
divuw x22, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x22, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
divuw x24, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x7, 0x00000000ffffffff # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
divuw x27, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x12, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divuw x25, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x15, 0x00000000fffffffe # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
divuw x27, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x26, 0x00000000fffffffe # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
divuw x9, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x28, 0x00000000fffffffe # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
divuw x30, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x11, 0x00000000fffffffe # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
divuw x29, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
divuw x16, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
divuw x1, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x31, 0x00000000fffffffe # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
divuw x12, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x18, 0x00000000fffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
divuw x24, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x30, 0x00000000fffffffe # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
divuw x24, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x00000000fffffffe # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x6, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x28, 0x00000000fffffffe # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
divuw x27, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x7, 0x00000000fffffffe # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
divuw x12, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x2, 0x00000000fffffffe # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
divuw x22, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x24, 0x00000000fffffffe # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
divuw x18, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x12, 0x00000000fffffffe # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
divuw x13, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x9, 0x0000000100000000 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
divuw x6, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x10, 0x0000000100000000 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
divuw x24, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x14, 0x0000000100000000 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
divuw x20, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x15, 0x0000000100000000 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
divuw x18, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x21, 0x0000000100000000 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
divuw x12, x21, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x30, 0x0000000100000000 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
divuw x15, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x2, 0x0000000100000000 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
divuw x30, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x8, 0x0000000100000000 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
divuw x28, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x23, 0x0000000100000000 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
divuw x7, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000100000000 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
divuw x7, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x0000000100000000 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x7, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x13, 0x0000000100000000 # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
divuw x3, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x14, 0x0000000100000000 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
divuw x31, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x21, 0x0000000100000000 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
divuw x17, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x21, 0x0000000100000000 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
divuw x2, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x11, 0x0000000100000000 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
divuw x19, x11, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x17, 0x0000000100000001 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
divuw x10, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x7, 0x0000000100000001 # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
divuw x2, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x19, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
divuw x6, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x7, 0x0000000100000001 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
divuw x20, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x18, 0x0000000100000001 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
divuw x28, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x24, 0x0000000100000001 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
divuw x13, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000100000001 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divuw x12, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x19, 0x0000000100000001 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
divuw x28, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x17, 0x0000000100000001 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
divuw x22, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x31, 0x0000000100000001 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
divuw x14, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000100000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divuw x12, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x7, 0x0000000100000001 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
divuw x18, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x22, 0x0000000100000001 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
divuw x13, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x1, 0x0000000100000001 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
divuw x23, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x23, 0x0000000100000001 # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
divuw x17, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x15, 0x0000000100000001 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
divuw x29, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xbbd4c00721998098 # initialize rs1
li x0, 0xf6a758a60582e478 # initialize rs2
divuw x8, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xe347a8c2439ae2e2 # initialize rs1
li x1, 0x9642ff054aa36194 # initialize rs2
divuw x23, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x6bd6df1145ba3c61 # initialize rs1
li x2, 0xab99beffaa5337e0 # initialize rs2
divuw x11, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xd745df4513ae1276 # initialize rs1
li x3, 0xd8782e29d82a9956 # initialize rs2
divuw x10, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x54bd1ec49ed0c417 # initialize rs1
li x4, 0xb7d06d40619b81d1 # initialize rs2
divuw x30, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x944aa3f4dfcc6fe3 # initialize rs1
li x5, 0x4388b964f665a1cc # initialize rs2
divuw x21, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb0d240322d952a24 # initialize rs1
li x6, 0x1a83d37f52eaf39a # initialize rs2
divuw x23, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x23, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x64196cbddc280ed7 # initialize rs1
li x7, 0xae8b3a8b73dd822b # initialize rs2
divuw x31, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xeac861321a312551 # initialize rs1
li x8, 0x26fb64914b3665f6 # initialize rs2
divuw x3, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xd43ae069a4149592 # initialize rs1
li x9, 0x74e9a9c8e0792a65 # initialize rs2
divuw x21, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xf46e46f45e749924 # initialize rs1
li x10, 0xb5b08f6248344180 # initialize rs2
divuw x27, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xb1e369decbd5ded6 # initialize rs1
li x11, 0x6562e3fc9decc78c # initialize rs2
divuw x31, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x3acf618cfc3f5497 # initialize rs1
li x12, 0xeff55c36650f228e # initialize rs2
divuw x10, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x330bc9fe3b2de058 # initialize rs1
li x13, 0x20040784caac8df8 # initialize rs2
divuw x6, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x7ba045148fb046f2 # initialize rs1
li x14, 0x58f482930a12c28d # initialize rs2
divuw x13, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x69827484d18e5c47 # initialize rs1
li x15, 0x92945907cbfd2dea # initialize rs2
divuw x2, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xd11f41cda24212d7 # initialize rs1
li x16, 0x8df1a22089016b7e # initialize rs2
divuw x15, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xb60836f9cb0353f9 # initialize rs1
li x17, 0x71cadc0aa2eccb98 # initialize rs2
divuw x7, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x1f525e1d42a27cb0 # initialize rs1
li x18, 0x5c4cc4dae12127d3 # initialize rs2
divuw x26, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x5ee60b2df05c3cd4 # initialize rs1
li x19, 0x4813a1ab064376f4 # initialize rs2
divuw x25, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x76edd2c890f95e71 # initialize rs1
li x20, 0x912f08b6d2849f17 # initialize rs2
divuw x25, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x9be0d5d127dd0fc0 # initialize rs1
li x21, 0xfd7c16556228b2d8 # initialize rs2
divuw x14, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xa3cabceaaac659db # initialize rs1
li x22, 0xf0bd98a9887be7b8 # initialize rs2
divuw x9, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x73dbaa475eb75eed # initialize rs1
li x23, 0x734216f3d55e3602 # initialize rs2
divuw x10, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xfd4c7adb471446eb # initialize rs1
li x24, 0x51e037db864fb498 # initialize rs2
divuw x14, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xbf77cc103a98b442 # initialize rs1
li x25, 0x1b940f2ba66e8353 # initialize rs2
divuw x3, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x281cce1adf252d56 # initialize rs1
li x26, 0x87f6ba7314fdad7b # initialize rs2
divuw x5, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xc5ddf369760afd9e # initialize rs1
li x27, 0x4f8f3c0e7f79b158 # initialize rs2
divuw x6, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x645da02e6cac1217 # initialize rs1
li x28, 0xd1556b0ff1189a6a # initialize rs2
divuw x7, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x0d41f233f0689be1 # initialize rs1
li x29, 0x7c4432f821b58cb3 # initialize rs2
divuw x7, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xdca822c83c832f87 # initialize rs1
li x30, 0xb1bc958238415bd8 # initialize rs2
divuw x5, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xb5f78c14bdf948fb # initialize rs1
li x31, 0x2962b88c3aa9f527 # initialize rs2
divuw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xca7cdb099d04e8d2 # initialize rs1
li x21, 0x17a8798221a85d9b # initialize rs2
divuw x0, x0, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x2f9ea43d0dd681ac # initialize rs1
li x20, 0x9f8e95299646a0ce # initialize rs2
divuw x1, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xad90d7eca881b299 # initialize rs1
li x18, 0xda057ff2ce0406bb # initialize rs2
divuw x2, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x9054fffbb4993217 # initialize rs1
li x10, 0x43fcf370a1ee6d1f # initialize rs2
divuw x3, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf1d341941f3cef73 # initialize rs1
li x11, 0x8fe882283fc2c217 # initialize rs2
divuw x4, x4, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xeee9e6584353cbc0 # initialize rs1
li x11, 0x94314c87089f2ab3 # initialize rs2
divuw x5, x5, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x06e066c208f76a02 # initialize rs1
li x1, 0x33c960e281d121b9 # initialize rs2
divuw x6, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x24fe6042cf7c82ec # initialize rs1
li x31, 0x86780339b688e1bf # initialize rs2
divuw x7, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x9ff72ab0716d46e0 # initialize rs1
li x5, 0x1aada14654d4a28d # initialize rs2
divuw x8, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x4bc78f5a7072ff4f # initialize rs1
li x22, 0xbfd469ddfa4fa107 # initialize rs2
divuw x9, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xae342af02692002a # initialize rs1
li x5, 0x8e12e5469b3cbb49 # initialize rs2
divuw x10, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x77cce700daa7411b # initialize rs1
li x26, 0xa384904ab9fb4a40 # initialize rs2
divuw x11, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x405b22ca03bd136e # initialize rs1
li x6, 0xbec41df177fb15a8 # initialize rs2
divuw x12, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x939c9f7871af7658 # initialize rs1
li x26, 0x710b05baf4c6e28e # initialize rs2
divuw x13, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xf995082ef4030a61 # initialize rs1
li x8, 0xc04212aa18292714 # initialize rs2
divuw x14, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x8a8c8ae5505dd6b8 # initialize rs1
li x15, 0x84a653dce6a2d074 # initialize rs2
divuw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xba999c6f82052f4f # initialize rs1
li x11, 0x8871d34c783ea782 # initialize rs2
divuw x16, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xf1204c93534f7d6c # initialize rs1
li x18, 0x7fa780c6b7c083d5 # initialize rs2
divuw x17, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x12d25fc3b5bfba8d # initialize rs1
li x2, 0x6ead7a5060afddd6 # initialize rs2
divuw x18, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x57ff879f167c7479 # initialize rs1
li x27, 0x31fb87506bf5ed99 # initialize rs2
divuw x19, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x23f9ad5c6fdda966 # initialize rs1
li x28, 0x77648c303603282f # initialize rs2
divuw x20, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x36c3725ae9dd9ea2 # initialize rs1
li x15, 0xa2f2061a7a480597 # initialize rs2
divuw x21, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xed8a4eacd10a9545 # initialize rs1
li x23, 0xafdbd1b6d83b149d # initialize rs2
divuw x22, x22, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xfe04079350a06a23 # initialize rs1
li x29, 0xcdf81d8286f44ed3 # initialize rs2
divuw x23, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xa13f0803210b41a5 # initialize rs1
li x15, 0xf653b23fcafc3558 # initialize rs2
divuw x24, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xf7826adc7ae757f1 # initialize rs1
li x17, 0x50d600e534be80dc # initialize rs2
divuw x25, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xc9b1fc792b3a7555 # initialize rs1
li x10, 0x6dfbc141ff30173a # initialize rs2
divuw x26, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x4bd291d13649267f # initialize rs1
li x2, 0xcf97becc39ea6f7c # initialize rs2
divuw x27, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x5d3d00b1d85cdc3c # initialize rs1
li x17, 0x6489d6f958fb0ae5 # initialize rs2
divuw x28, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x83c21d258d410b78 # initialize rs1
li x21, 0xc78c4b7ff77a8e29 # initialize rs2
divuw x29, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x8cd534b825868847 # initialize rs1
li x25, 0x1a2c5a96f9acc41f # initialize rs2
divuw x30, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x4298e05b78f130cf # initialize rs1
li x2, 0xc5dd65beb40a2950 # initialize rs2
divuw x31, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x13, 0xad5317f81e6e0048 # initialize rs1
li x0, 0x84ca34862a328114 # initialize rs2
divuw x0, x13, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x12, 0x9c8000228139ab80 # initialize rs1
li x1, 0xbe976e89f7575eed # initialize rs2
divuw x1, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x11, 0x8e929fc2da4010b0 # initialize rs1
li x2, 0x1c0d6e8677f5e692 # initialize rs2
divuw x2, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x20, 0x5b5aa42c37f307af # initialize rs1
li x3, 0x67a7cc7914d7e6f2 # initialize rs2
divuw x3, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x15, 0xafc37b02d5ce8cca # initialize rs1
li x4, 0xa9cd0ff7e7cb3515 # initialize rs2
divuw x4, x15, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x8, 0x6ce4b683514636bb # initialize rs1
li x5, 0x38545c58dc9e7a5d # initialize rs2
divuw x5, x8, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x01b792b27ba49527 # initialize rs1
li x6, 0x4c5eb88226334244 # initialize rs2
divuw x6, x9, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x10, 0x5c0bef0e238dd891 # initialize rs1
li x7, 0xc71359e43e03b3bd # initialize rs2
divuw x7, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x17, 0x289925e7c13313fc # initialize rs1
li x8, 0xc5fe5b6b4f243727 # initialize rs2
divuw x8, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x2, 0xeb2016935e7a0775 # initialize rs1
li x9, 0xd1f8c57c280b517f # initialize rs2
divuw x9, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x20, 0x49d96a4e4657c6c3 # initialize rs1
li x10, 0xad0515922d6951df # initialize rs2
divuw x10, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x5, 0x95a62508791873fe # initialize rs1
li x11, 0x7d0325d9daab1b8e # initialize rs2
divuw x11, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x6, 0x17aa45d5cf8ddfdd # initialize rs1
li x12, 0xb4638d8e25ef8a77 # initialize rs2
divuw x12, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x31, 0x9afc2983e224a5bb # initialize rs1
li x13, 0x1976cd24e8eb1ba6 # initialize rs2
divuw x13, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x31, 0x73b890b89825446d # initialize rs1
li x14, 0x729c7d550a644f8a # initialize rs2
divuw x14, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x13, 0x59b45f58c6b8873c # initialize rs1
li x15, 0x2b296003a8b2c988 # initialize rs2
divuw x15, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x9a375f8a4477d899 # initialize rs1
li x16, 0xedb329fa32b13e76 # initialize rs2
divuw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x27, 0xe4cf0845ecf0eab3 # initialize rs1
li x17, 0x21d63ec1132d6d3e # initialize rs2
divuw x17, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x6, 0xd8d10fcde516b8be # initialize rs1
li x18, 0x2d96e77a2103ecb9 # initialize rs2
divuw x18, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x17, 0xec5107c739eda1c7 # initialize rs1
li x19, 0x6c46db3764ab321e # initialize rs2
divuw x19, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x13, 0xdb73b097d9a228c5 # initialize rs1
li x20, 0xaf65cbaddd663182 # initialize rs2
divuw x20, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x27, 0x61f567bd75cbda36 # initialize rs1
li x21, 0x50e80ace965ce41c # initialize rs2
divuw x21, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x3, 0xaca116df34f42378 # initialize rs1
li x22, 0x5733f396e7915e34 # initialize rs2
divuw x22, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x16, 0xee3879d9fa8d9961 # initialize rs1
li x23, 0xb7bff468d602e283 # initialize rs2
divuw x23, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x2, 0xc6b4fa138b366b5e # initialize rs1
li x24, 0xd0a12d27c88663c0 # initialize rs2
divuw x24, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x3, 0x9cdef6513c8c20a4 # initialize rs1
li x25, 0x49d33ea23d1c2d77 # initialize rs2
divuw x25, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x11, 0xdc057d91a86b1146 # initialize rs1
li x26, 0xc5617d4c768f5c2b # initialize rs2
divuw x26, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x14, 0xf2800ff2c959c534 # initialize rs1
li x27, 0x0cadc711a36684d2 # initialize rs2
divuw x27, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x1, 0x216ceb8d2c5c6015 # initialize rs1
li x28, 0xbd985239f64bdaa8 # initialize rs2
divuw x28, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x30, 0x6f0bf240069d5458 # initialize rs1
li x29, 0xe41e23c4f2d45c63 # initialize rs2
divuw x29, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x5, 0x7bf715775647481f # initialize rs1
li x30, 0xcd67c8f43c0d71d7 # initialize rs2
divuw x30, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x28, 0x4ac4dcac59a9ef85 # initialize rs1
li x31, 0xb868d5fadf0b9d30 # initialize rs2
divuw x31, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x3bb500a952bf67df # initialize rs1
li x0, 0x1ab4aeb2325e9f47 # initialize rs2
divuw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x62e8ad0b2e63b02e # initialize rs1
li x1, 0xfdc408d650a066ef # initialize rs2
divuw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x00ff888aabf4bf63 # initialize rs1
li x2, 0x98dd671928f23f3b # initialize rs2
divuw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x3b4712218fa3fcb7 # initialize rs1
li x3, 0x95680a576b8bbae9 # initialize rs2
divuw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xaa32b7d8d842ceab # initialize rs1
li x4, 0xab67eb8500827887 # initialize rs2
divuw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xab70bd413c2ed393 # initialize rs1
li x5, 0xa34721cebb4c7373 # initialize rs2
divuw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xca14af6b59031b48 # initialize rs1
li x6, 0x3a847ba2e413a842 # initialize rs2
divuw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3e8128cd7d61163b # initialize rs1
li x7, 0x49c98e54bb15d8b0 # initialize rs2
divuw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xfd41fc2160f52f4d # initialize rs1
li x8, 0xd3dcb30b81b56222 # initialize rs2
divuw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xe3aed2f69f095f8d # initialize rs1
li x9, 0xdb9121ba74e37b7d # initialize rs2
divuw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x4aa6b22789a5cd8e # initialize rs1
li x10, 0xe19091766cd8b955 # initialize rs2
divuw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xaa2d4d4733ffa71c # initialize rs1
li x11, 0x69e527d753dc2346 # initialize rs2
divuw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xd70ce86b2a199856 # initialize rs1
li x12, 0x18aeddd0c08f05d4 # initialize rs2
divuw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x0b2e1ae3648dc3df # initialize rs1
li x13, 0xd3a2acc7f28ded61 # initialize rs2
divuw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x5ce011d07b3afbc4 # initialize rs1
li x14, 0xf7e33bc8af9baab2 # initialize rs2
divuw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x73598a775152e6aa # initialize rs1
li x15, 0xa8731b6d25d11f75 # initialize rs2
divuw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x31fe5e45673083a1 # initialize rs1
li x16, 0xea705d2e865fa798 # initialize rs2
divuw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x7e8ee94fec42a108 # initialize rs1
li x17, 0x5b03b05e2281268f # initialize rs2
divuw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x6a0819245bcbc26a # initialize rs1
li x18, 0xadb8647391bbac1c # initialize rs2
divuw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x633df7c598de5d0b # initialize rs1
li x19, 0x8c3bbe8ff1bd3377 # initialize rs2
divuw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x83df9b4a1b537fd7 # initialize rs1
li x20, 0xc2a960c509a84cbb # initialize rs2
divuw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xff3f0a44a7b7cf9b # initialize rs1
li x21, 0x36e72d9648da82a4 # initialize rs2
divuw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x686fa2745f6bb440 # initialize rs1
li x22, 0x7855e327af99a40d # initialize rs2
divuw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xa19e5d7aea5b3e87 # initialize rs1
li x23, 0x5655c18821c74198 # initialize rs2
divuw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xf3c60bc73355cf68 # initialize rs1
li x24, 0xa0fc4fc8aa2fca9c # initialize rs2
divuw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x401a6b98b496cc3b # initialize rs1
li x25, 0xdfa0455476b8e0ad # initialize rs2
divuw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x04940e5349a4e3d9 # initialize rs1
li x26, 0x40767e1f7cf4e3e7 # initialize rs2
divuw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x09ce69832a197448 # initialize rs1
li x27, 0x7064af0ec8d2526b # initialize rs2
divuw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x6df249f1245e7a8e # initialize rs1
li x28, 0xd137f1fcecf53eb6 # initialize rs2
divuw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xbd814afb20f84530 # initialize rs1
li x29, 0x47713d9af5088a44 # initialize rs2
divuw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x6197b945390e46a2 # initialize rs1
li x30, 0x37cc9de260b687fe # initialize rs2
divuw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xe8eaa6725eb538ef # initialize rs1
li x31, 0xd270a986af930181 # initialize rs2
divuw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x22, x18, x16 # perform first operation
divuw x27, x1, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x2, x23 # perform first operation
divuw x31, x25, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x31, x30, x18 # perform first operation
divuw x29, x10, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x9, x12, x11 # perform first operation
divuw x28, x9, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x15, x29, x10 # perform first operation
divuw x10, x3, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x27, x18, x9 # perform first operation
divuw x27, x18, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x31, x14, x9 # perform first operation
divuw x31, x24, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x14, x29, x8 # perform first operation
divuw x14, x19, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x31, x13, x7 # perform first operation
divuw x31, x12, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x22, x18, x23 # perform first operation
divuw x18, x19, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x13, x10, x11 # perform first operation
divuw x11, x12, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x12, x19 # perform first operation
divuw x5, x30, x2 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-remw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xc42658e62389600b # initialize rs1
li x10, 0x4fe381abc0bd6c7f # initialize rs2
remw x3, x0, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x7d640421fec87ff6 # initialize rs1
li x20, 0x23f2d7cb9a8076a2 # initialize rs2
remw x2, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x45ae885fc8177978 # initialize rs1
li x30, 0x1bc61a58c8124e1a # initialize rs2
remw x18, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xf30e5fb7fa9be9bd # initialize rs1
li x29, 0x2979b8bb59b418a5 # initialize rs2
remw x9, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x02687faf4f24b015 # initialize rs1
li x23, 0xc9e3bdc2d0e3cf43 # initialize rs2
remw x30, x4, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x83ab94a51835a273 # initialize rs1
li x30, 0x167a2b2bf320e16e # initialize rs2
remw x27, x5, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xdc1a8263148f7dee # initialize rs1
li x5, 0x2736d5bd809579a3 # initialize rs2
remw x21, x6, x5 # perform operation
RVTEST_SIGUPD(x7, x0, x21, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x78dc41504579106e # initialize rs1
li x25, 0xb9943885e62cf9df # initialize rs2
remw x8, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xdfe19de717227ba9 # initialize rs1
li x15, 0x1243a8fe2b10dfe3 # initialize rs2
remw x18, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xbdc8ac9c3c0e5b63 # initialize rs1
li x30, 0x999a653a3641d5b6 # initialize rs2
remw x23, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xcf033a5e49402e47 # initialize rs1
li x27, 0xca5d7ba0f29bc769 # initialize rs2
remw x5, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xbed130defc336162 # initialize rs1
li x21, 0x0e44bbfc17ab90fa # initialize rs2
remw x19, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x99fd4d30ec3f9c90 # initialize rs1
li x13, 0xdde3914a3b69dc4a # initialize rs2
remw x18, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xb1c5bd1b0954873d # initialize rs1
li x12, 0x271ef4dbd38afcf5 # initialize rs2
remw x14, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xdf6a9bdb6d54c9ba # initialize rs1
li x18, 0x57479688dfd2c47b # initialize rs2
remw x8, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xe3afd547a3691cf1 # initialize rs1
li x21, 0xfcf5fcb40114d7dd # initialize rs2
remw x31, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xc3f709dc56dbe2d7 # initialize rs1
li x5, 0xfc5346dd03e03259 # initialize rs2
remw x24, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x2b0217868ce1c202 # initialize rs1
li x7, 0x48426d95ec817bb5 # initialize rs2
remw x18, x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x16909e42a296a8a7 # initialize rs1
li x30, 0xf65b608204863899 # initialize rs2
remw x24, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x459956711850c2c5 # initialize rs1
li x26, 0x1516363651a06a0d # initialize rs2
remw x23, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x705789e0015f86f2 # initialize rs1
li x23, 0xf95c601f31796140 # initialize rs2
remw x18, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x9ac8d774753a996d # initialize rs1
li x13, 0xf011a60e0197204d # initialize rs2
remw x23, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x8ae339b8ec2b977a # initialize rs1
li x10, 0x1bddf709bf54e6fa # initialize rs2
remw x16, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x5215896c7005604e # initialize rs1
li x5, 0x1de230d12671197d # initialize rs2
remw x14, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x994ce7d86c8d3f64 # initialize rs1
li x26, 0x224ebf417fe154c9 # initialize rs2
remw x1, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xec5b2a314e70c42d # initialize rs1
li x24, 0xb3fee838a70d583e # initialize rs2
remw x23, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x1bfb463da8351b2e # initialize rs1
li x21, 0x7f056b9fbc3ed745 # initialize rs2
remw x6, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xd914319ddd280cc1 # initialize rs1
li x21, 0xd89734ddaaaefe8c # initialize rs2
remw x20, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xfef7b5d37a620628 # initialize rs1
li x1, 0x0d72b1c30c4d3f4b # initialize rs2
remw x31, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x26895005e5d6465c # initialize rs1
li x1, 0x56c778dc4fe55a8e # initialize rs2
remw x23, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x3104f7505e04746d # initialize rs1
li x6, 0xfc360ec6ad7a7de9 # initialize rs2
remw x19, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xfe7e66803b72fa5a # initialize rs1
li x26, 0xa09e3880129bd00f # initialize rs2
remw x21, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x25, 0x4fbe20bffff10b46 # initialize rs1
li x0, 0xb507a9dd10adc8cd # initialize rs2
remw x27, x25, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x7, 0x1f329a3accb1cde0 # initialize rs1
li x1, 0x5dcc3d6a19136fa2 # initialize rs2
remw x16, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x31, 0x2ead2ee424323dfd # initialize rs1
li x2, 0xf8cc62d26c8d6787 # initialize rs2
remw x16, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x9, 0x1f680a98d9a2f237 # initialize rs1
li x3, 0x4c63dd046b842b68 # initialize rs2
remw x22, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x8, 0x7831cdfda9b25378 # initialize rs1
li x4, 0xf6591871a1af8d2d # initialize rs2
remw x3, x8, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x12, 0x817e63e7f8e88ad1 # initialize rs1
li x5, 0x4ba0b93f39cffadf # initialize rs2
remw x26, x12, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x0e0ce43606301840 # initialize rs1
li x6, 0x3e4679b30211ad6d # initialize rs2
remw x21, x4, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x21, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x1, 0x937a4eb5062f1daf # initialize rs1
li x7, 0xbaec341bb5c4329f # initialize rs2
remw x28, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x21, 0x8e0e46fc6b4d5b19 # initialize rs1
li x8, 0xe53ee13631a44ce7 # initialize rs2
remw x7, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x29, 0x42999be64ccbbdbd # initialize rs1
li x9, 0xcc17c25ceb0d8175 # initialize rs2
remw x23, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x3, 0x691c038c88e58540 # initialize rs1
li x10, 0xd283e8b51eaef629 # initialize rs2
remw x25, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x14, 0xfbe565b3f6fd8219 # initialize rs1
li x11, 0x1ca70928207a8ff1 # initialize rs2
remw x10, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x16, 0x7ec9b1d8a68fb7f4 # initialize rs1
li x12, 0x35414ffbfa7abd91 # initialize rs2
remw x15, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x11, 0xd1bf88f4f947605a # initialize rs1
li x13, 0xdd5b3058e5250a6b # initialize rs2
remw x1, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x27, 0xad1b7a66c0eba886 # initialize rs1
li x14, 0x8be5284fa1d40979 # initialize rs2
remw x21, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x7, 0x7c9e671a08cc9ba7 # initialize rs1
li x15, 0x592d0ebfbc52fc3f # initialize rs2
remw x10, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x19, 0x9085aab176440266 # initialize rs1
li x16, 0x2e93870cfb05d8d4 # initialize rs2
remw x26, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x24, 0x6b1b430cd5afb4bc # initialize rs1
li x17, 0xeb432ed710067c2c # initialize rs2
remw x3, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x23, 0x61c986d9b88e2c79 # initialize rs1
li x18, 0x462ee6bc4647e0c5 # initialize rs2
remw x31, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x26, 0x64442ca32eac9918 # initialize rs1
li x19, 0x6633e2645dda45cf # initialize rs2
remw x20, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x13, 0x321e4d405f31800e # initialize rs1
li x20, 0x0507eefd8a2cd4bf # initialize rs2
remw x31, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x22, 0xcaded96eea7a278d # initialize rs1
li x21, 0xd3792c3dbafe942b # initialize rs2
remw x11, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x3, 0x947024c4a79bdbe6 # initialize rs1
li x22, 0xf7be211fd642bd0e # initialize rs2
remw x29, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x7, 0xb8896cd009d2094f # initialize rs1
li x23, 0x8694638137fb2509 # initialize rs2
remw x2, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x8, 0x2c3ea853b24c0815 # initialize rs1
li x24, 0x691af86dcd5b0f1e # initialize rs2
remw x11, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x19, 0x3f081fd8eafa21fa # initialize rs1
li x25, 0x576c54432781fd5e # initialize rs2
remw x11, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x22, 0xd7d1cdf5fb95d57b # initialize rs1
li x26, 0x376a0f16031359dd # initialize rs2
remw x12, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x22, 0x9965606268396068 # initialize rs1
li x27, 0x4781957173102118 # initialize rs2
remw x2, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x19, 0x9e8a2e7dc3595854 # initialize rs1
li x28, 0x1ca1be23680f11a1 # initialize rs2
remw x10, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x17, 0x88096e80045297ec # initialize rs1
li x29, 0xc2758def03fe2343 # initialize rs2
remw x19, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x29, 0x217653bdd152a0b8 # initialize rs1
li x30, 0x8988973d028929d1 # initialize rs2
remw x3, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x28, 0x2034252466b5980f # initialize rs1
li x31, 0x86a0f522ec5eb79e # initialize rs2
remw x7, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 504)

# Testcase cp_rd (Test destination rd = x0)
li x12, 0x2d8ec40f9236e202 # initialize rs1
li x2, 0x1b7bfeccda867bb1 # initialize rs2
remw x0, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x14, 0xa509cde65542bb43 # initialize rs1
li x29, 0x41a77cd0c14a5b84 # initialize rs2
remw x1, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x22, 0x9fe32519b6da022a # initialize rs1
li x16, 0x1418b292e9492497 # initialize rs2
remw x2, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x2, 0x97a0766e4020146a # initialize rs1
li x19, 0x8b8f80eaf43a0978 # initialize rs2
remw x3, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x8e3e1c3e4cf5c97d # initialize rs1
li x29, 0xf50fe5cd6a04fa12 # initialize rs2
remw x4, x10, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x2bc1e722b893f23f # initialize rs1
li x20, 0xeb99da8c9ed96509 # initialize rs2
remw x5, x25, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x18, 0xe91967134e150152 # initialize rs1
li x19, 0x9a59fe4dcfe84094 # initialize rs2
remw x6, x18, x19 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x6, 0x00461c7f3f2c3b9a # initialize rs1
li x25, 0x9f785cbda970d93d # initialize rs2
remw x7, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x23, 0x5930ba070d1a7f43 # initialize rs1
li x19, 0x7f8d1189c76fcde6 # initialize rs2
remw x8, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x2, 0xa9caf578eaaa2bb9 # initialize rs1
li x25, 0x5995049826ccef55 # initialize rs2
remw x9, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x10, 0x77e0b5bccef6160f # initialize rs1
li x22, 0x88c637e7d29572ee # initialize rs2
remw x10, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x20, 0xbf9e422e73904138 # initialize rs1
li x7, 0x31320186ce530f6b # initialize rs2
remw x11, x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x10, 0x173a8322688fb515 # initialize rs1
li x6, 0x2a35b8fa7988f01f # initialize rs2
remw x12, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x31, 0x9980cde981c602eb # initialize rs1
li x11, 0x6d182e1e543a5c38 # initialize rs2
remw x13, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x8, 0xf0dfa98f40beb763 # initialize rs1
li x20, 0xa3d59494565f65a4 # initialize rs2
remw x14, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x16, 0x4059b34e8b46c8ce # initialize rs1
li x17, 0x4117cddb4ae56671 # initialize rs2
remw x15, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x24, 0x3706373cc5934167 # initialize rs1
li x3, 0x546afd580f8d1ee4 # initialize rs2
remw x16, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x30, 0x8b031aaffee52b44 # initialize rs1
li x5, 0x88c7b8e2b06d93be # initialize rs2
remw x17, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x1, 0xfaf130e68499d883 # initialize rs1
li x10, 0xf0587e771a93b621 # initialize rs2
remw x18, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x15, 0x4dc75cd74090beef # initialize rs1
li x7, 0x6e8c71bc78e98852 # initialize rs2
remw x19, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x1, 0xd3e319efee0c0748 # initialize rs1
li x22, 0x6888e38f63d15d3c # initialize rs2
remw x20, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x31, 0x4474435f2e84b5e5 # initialize rs1
li x18, 0x306ec88c4ea2feaa # initialize rs2
remw x21, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x15, 0x2ae5e3194e2fb1d8 # initialize rs1
li x18, 0xd53fdd7ed036adff # initialize rs2
remw x22, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x16, 0x75390ecf6f6d7f94 # initialize rs1
li x14, 0x0ab5dd57c29e7ec4 # initialize rs2
remw x23, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x17, 0xd8c6709d4b3abef9 # initialize rs1
li x18, 0x5d229e2cf83cb9f3 # initialize rs2
remw x24, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x30, 0x1a560618be887cbc # initialize rs1
li x20, 0x6cd4b719ae3ff410 # initialize rs2
remw x25, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x11, 0x57db8b1105ff29ea # initialize rs1
li x20, 0xe9102f2848873a12 # initialize rs2
remw x26, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x21, 0xeddfb97bcb6c862e # initialize rs1
li x12, 0x8bb240f663d6191d # initialize rs2
remw x27, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x15, 0x50ce629c4a0e4eed # initialize rs1
li x26, 0x2d0551a845c7162d # initialize rs2
remw x28, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x27, 0xe7178dfe6fac1954 # initialize rs1
li x23, 0x77cec6e8d8c8db06 # initialize rs2
remw x29, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x31, 0xc09eb5a0cda28666 # initialize rs1
li x24, 0xb3f7c7279d3a98a5 # initialize rs2
remw x30, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x19, 0x4ccaee1f90d89dd9 # initialize rs1
li x15, 0x4163dbd2bd3ce169 # initialize rs2
remw x31, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x22, 0x0000000000000000 # initialize rs1
li x18, 0x837fa263810a4d11 # initialize rs2
remw x1, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x8, 0x0000000000000001 # initialize rs1
li x6, 0x457400637d33ec26 # initialize rs2
remw x23, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x2, 0x0000000000000002 # initialize rs1
li x21, 0x0c03db59546e3c8e # initialize rs2
remw x29, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x12, 0x8000000000000000 # initialize rs1
li x1, 0x8bb3c004a3c9a584 # initialize rs2
remw x22, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x11, 0x8000000000000001 # initialize rs1
li x12, 0xe4ebbdceeefc4284 # initialize rs2
remw x10, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x31, 0x7fffffffffffffff # initialize rs1
li x25, 0xc2bc908ccfb80b59 # initialize rs2
remw x14, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
li x20, 0x03c97d03176e1afc # initialize rs2
remw x21, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x11, 0xf30126124e32f0cd # initialize rs2
remw x26, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
li x29, 0x4e489f127007c816 # initialize rs2
remw x17, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0xf9f4f50667455538 # initialize rs2
remw x1, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0xec563980aee2db0e # initialize rs2
remw x10, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
li x13, 0xf0d250d2daae2c6c # initialize rs2
remw x20, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x17, 0x00000000ffffffff # initialize rs1
li x31, 0xe3715722e5d9e9b8 # initialize rs2
remw x9, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x15, 0x87067b2e82ad0257 # initialize rs2
remw x8, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x31, 0x0000000100000000 # initialize rs1
li x28, 0xc6cfff5e3010d79a # initialize rs2
remw x9, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x16, 0x0000000100000001 # initialize rs1
li x2, 0xaddf5995b42c7864 # initialize rs2
remw x5, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x5, 0x62753542e2e99f6c # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
remw x1, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x6, 0xa8189dcd92db8f27 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
remw x22, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x1, 0x1b06f4c6517b9457 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
remw x27, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x14, 0xc6710f19ca5cb858 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
remw x17, x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x15, 0x8b7f720e61aa5937 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
remw x18, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x12, 0x32011816883942be # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
remw x23, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x18, 0x069742dd75fa1877 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
remw x24, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x28, 0xdd17ebadd70736d5 # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
remw x15, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x14, 0x9918c2e91087b6fe # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
remw x20, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x20, 0xa448b1d15901152c # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
remw x22, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x11, 0x078880e279cd6e33 # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x23, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x10, 0xd938794d6273641f # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
remw x19, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x6, 0xcbe0b02d50bfbac7 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
remw x9, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x21, 0x7e847598e3fb9be6 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
remw x14, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x28, 0xe2869f6a5e5b93c0 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
remw x17, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x20, 0x9880dfaf8828f00c # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
remw x18, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x7, 0x0000000000000000 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
remw x12, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x13, 0x0000000000000000 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
remw x19, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x18, 0x0000000000000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
remw x27, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x27, 0x0000000000000000 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
remw x23, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x16, 0x0000000000000000 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
remw x12, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000000 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
remw x30, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
remw x19, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x14, 0x0000000000000000 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
remw x27, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remw x5, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x8, 0x0000000000000000 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
remw x30, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x0000000000000000 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x11, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x8, 0x0000000000000000 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
remw x16, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x12, 0x0000000000000000 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
remw x16, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x22, 0x0000000000000000 # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
remw x11, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x3, 0x0000000000000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
remw x24, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x28, 0x0000000000000000 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
remw x26, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x28, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
remw x26, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x29, 0x0000000000000001 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
remw x1, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x25, 0x0000000000000001 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
remw x28, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x2, 0x0000000000000001 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remw x1, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x3, 0x0000000000000001 # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
remw x6, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x31, 0x0000000000000001 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
remw x16, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000000000001 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
remw x16, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x17, 0x0000000000000001 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
remw x7, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
remw x29, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x14, 0x0000000000000001 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
remw x2, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x0000000000000001 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x29, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x6, 0x0000000000000001 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
remw x9, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x26, 0x0000000000000001 # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
remw x8, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x27, 0x0000000000000001 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
remw x28, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x6, 0x0000000000000001 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
remw x15, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x19, 0x0000000000000001 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
remw x10, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x27, 0x0000000000000002 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
remw x18, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x14, 0x0000000000000002 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
remw x3, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x25, 0x0000000000000002 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remw x1, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x9, 0x0000000000000002 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
remw x3, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x11, 0x0000000000000002 # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
remw x5, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000002 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
remw x30, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x18, 0x0000000000000002 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
remw x5, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000002 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
remw x9, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000000000002 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
remw x7, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x24, 0x0000000000000002 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remw x2, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x0000000000000002 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x24, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x27, 0x0000000000000002 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
remw x7, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x15, 0x0000000000000002 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
remw x27, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x26, 0x0000000000000002 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
remw x10, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x5, 0x0000000000000002 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
remw x30, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x27, 0x0000000000000002 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
remw x11, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x8, 0x8000000000000000 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
remw x25, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x31, 0x8000000000000000 # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
remw x15, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x30, 0x8000000000000000 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
remw x31, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x5, 0x8000000000000000 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
remw x29, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x27, 0x8000000000000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
remw x30, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x15, 0x8000000000000000 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
remw x19, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x17, 0x8000000000000000 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
remw x22, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x8, 0x8000000000000000 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
remw x5, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x6, 0x8000000000000000 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
remw x3, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x1, 0x8000000000000000 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
remw x11, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x8000000000000000 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x3, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x11, 0x8000000000000000 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
remw x29, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x27, 0x8000000000000000 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
remw x19, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x10, 0x8000000000000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
remw x12, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x15, 0x8000000000000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
remw x14, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x6, 0x8000000000000000 # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
remw x16, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x26, 0x8000000000000001 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
remw x2, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x2, 0x8000000000000001 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
remw x20, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x29, 0x8000000000000001 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remw x18, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x17, 0x8000000000000001 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
remw x1, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x6, 0x8000000000000001 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
remw x9, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x13, 0x8000000000000001 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
remw x25, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x13, 0x8000000000000001 # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
remw x23, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x15, 0x8000000000000001 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
remw x7, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x15, 0x8000000000000001 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
remw x17, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x26, 0x8000000000000001 # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
remw x20, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x8000000000000001 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x1, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x31, 0x8000000000000001 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
remw x21, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remw x24, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x17, 0x8000000000000001 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
remw x30, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x21, 0x8000000000000001 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
remw x28, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x5, 0x8000000000000001 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
remw x11, x5, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x10, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
remw x5, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x24, 0x7fffffffffffffff # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
remw x14, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x10, 0x7fffffffffffffff # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
remw x14, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
remw x13, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x1, 0x7fffffffffffffff # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
remw x8, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
remw x10, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x28, 0x7fffffffffffffff # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
remw x6, x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
remw x26, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x6, 0x7fffffffffffffff # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remw x7, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x28, 0x7fffffffffffffff # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
remw x6, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x7fffffffffffffff # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x15, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x18, 0x7fffffffffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
remw x19, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x23, 0x7fffffffffffffff # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
remw x5, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x15, 0x7fffffffffffffff # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
remw x26, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x28, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
remw x19, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x22, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
remw x14, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x16, 0x7ffffffffffffffe # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
remw x12, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x3, 0x7ffffffffffffffe # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
remw x24, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x14, 0x7ffffffffffffffe # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
remw x22, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x26, 0x7ffffffffffffffe # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
remw x10, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x5, 0x7ffffffffffffffe # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
remw x2, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x28, 0x7ffffffffffffffe # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
remw x7, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0x7ffffffffffffffe # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
remw x23, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x15, 0x7ffffffffffffffe # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
remw x17, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x28, 0x7ffffffffffffffe # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
remw x7, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x24, 0x7ffffffffffffffe # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
remw x3, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x7ffffffffffffffe # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x15, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0x7ffffffffffffffe # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
remw x2, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x18, 0x7ffffffffffffffe # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
remw x28, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x27, 0x7ffffffffffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
remw x24, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x13, 0x7ffffffffffffffe # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
remw x2, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x24, 0x7ffffffffffffffe # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
remw x7, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x19, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
remw x24, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x15, 0xffffffffffffffff # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
remw x7, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x27, 0xffffffffffffffff # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
remw x18, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x12, 0xffffffffffffffff # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
remw x17, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x8, 0xffffffffffffffff # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
remw x13, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x30, 0xffffffffffffffff # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
remw x19, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x22, 0xffffffffffffffff # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
remw x8, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x27, 0xffffffffffffffff # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
remw x20, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x10, 0xffffffffffffffff # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
remw x13, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x8, 0xffffffffffffffff # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
remw x11, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0xffffffffffffffff # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x23, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x23, 0xffffffffffffffff # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
remw x17, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
remw x14, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x19, 0xffffffffffffffff # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
remw x20, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x31, 0xffffffffffffffff # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
remw x30, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x2, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
remw x27, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x6, 0xfffffffffffffffe # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
remw x2, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x30, 0xfffffffffffffffe # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
remw x26, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x5, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
remw x12, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x8, 0xfffffffffffffffe # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remw x16, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x29, 0xfffffffffffffffe # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
remw x6, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x8, 0xfffffffffffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
remw x10, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x7, 0xfffffffffffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
remw x22, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x21, 0xfffffffffffffffe # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
remw x28, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
remw x21, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x12, 0xfffffffffffffffe # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
remw x16, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0xfffffffffffffffe # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x15, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x25, 0xfffffffffffffffe # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
remw x27, x25, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x21, 0xfffffffffffffffe # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
remw x26, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x20, 0xfffffffffffffffe # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
remw x3, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x11, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
remw x20, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x5, 0xfffffffffffffffe # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
remw x17, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
remw x16, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
remw x8, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
remw x23, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
remw x31, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
remw x22, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
remw x3, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
remw x18, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
remw x11, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
remw x16, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
remw x21, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x28, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
remw x9, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
remw x25, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
remw x23, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
remw x30, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
remw x30, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
remw x10, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
remw x19, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
remw x23, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
remw x25, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
remw x25, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
remw x29, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
remw x19, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
remw x15, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
remw x5, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
remw x6, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x29, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
remw x7, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
remw x14, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
remw x24, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
remw x28, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
remw x8, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x17, 0x5555555555555555 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
remw x15, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x8, 0x5555555555555555 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
remw x23, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x13, 0x5555555555555555 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
remw x30, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x2, 0x5555555555555555 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remw x1, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x23, 0x5555555555555555 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
remw x29, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x18, 0x5555555555555555 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
remw x29, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x1, 0x5555555555555555 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
remw x3, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x31, 0x5555555555555555 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
remw x22, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x24, 0x5555555555555555 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
remw x10, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x22, 0x5555555555555555 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remw x13, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x5555555555555555 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x21, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
remw x30, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x9, 0x5555555555555555 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remw x12, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x3, 0x5555555555555555 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
remw x19, x3, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x6, 0x5555555555555555 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
remw x20, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x18, 0x5555555555555555 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
remw x3, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x7, 0x00000000ffffffff # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
remw x10, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x21, 0x00000000ffffffff # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
remw x18, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x27, 0x00000000ffffffff # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
remw x3, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x13, 0x00000000ffffffff # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
remw x3, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x15, 0x00000000ffffffff # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
remw x28, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x9, 0x00000000ffffffff # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
remw x28, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x16, 0x00000000ffffffff # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
remw x18, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x8, 0x00000000ffffffff # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
remw x12, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x12, 0x00000000ffffffff # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
remw x26, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x12, 0x00000000ffffffff # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
remw x18, x12, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x00000000ffffffff # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x23, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x8, 0x00000000ffffffff # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
remw x1, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x29, 0x00000000ffffffff # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
remw x14, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x21, 0x00000000ffffffff # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
remw x10, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x5, 0x00000000ffffffff # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
remw x19, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x14, 0x00000000ffffffff # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
remw x31, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x17, 0x00000000fffffffe # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
remw x19, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x25, 0x00000000fffffffe # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
remw x29, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x9, 0x00000000fffffffe # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remw x28, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x6, 0x00000000fffffffe # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
remw x7, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x13, 0x00000000fffffffe # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
remw x11, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x19, 0x00000000fffffffe # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
remw x18, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0x00000000fffffffe # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
remw x9, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
remw x27, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x18, 0x00000000fffffffe # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
remw x12, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x31, 0x00000000fffffffe # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
remw x12, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x00000000fffffffe # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x14, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x24, 0x00000000fffffffe # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
remw x16, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
remw x17, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
remw x2, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x10, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
remw x18, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x24, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
remw x26, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x13, 0x0000000100000000 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
remw x6, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x11, 0x0000000100000000 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
remw x10, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x30, 0x0000000100000000 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
remw x13, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x26, 0x0000000100000000 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
remw x13, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x15, 0x0000000100000000 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
remw x24, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x8, 0x0000000100000000 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
remw x3, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000100000000 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
remw x8, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x6, 0x0000000100000000 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
remw x9, x6, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x6, 0x0000000100000000 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
remw x14, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000100000000 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
remw x19, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x0000000100000000 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x29, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x16, 0x0000000100000000 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
remw x18, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x2, 0x0000000100000000 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
remw x3, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x19, 0x0000000100000000 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
remw x9, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x21, 0x0000000100000000 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
remw x6, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x6, 0x0000000100000000 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
remw x30, x6, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x26, 0x0000000100000001 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
remw x1, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x1, 0x0000000100000001 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
remw x6, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x15, 0x0000000100000001 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
remw x11, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x24, 0x0000000100000001 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
remw x31, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x28, 0x0000000100000001 # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
remw x23, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x2, 0x0000000100000001 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
remw x26, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000100000001 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
remw x15, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x30, 0x0000000100000001 # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
remw x18, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000100000001 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
remw x27, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x13, 0x0000000100000001 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
remw x17, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x0000000100000001 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
remw x1, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x29, 0x0000000100000001 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
remw x17, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x24, 0x0000000100000001 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remw x5, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x30, 0x0000000100000001 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
remw x23, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x21, 0x0000000100000001 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
remw x10, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x16, 0x0000000100000001 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
remw x15, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x014200d60e6faaa8 # initialize rs1
li x0, 0xe6a08c8237faca0e # initialize rs2
remw x16, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x80212c00c0843625 # initialize rs1
li x1, 0x1af20d452510811b # initialize rs2
remw x15, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x37ce2473ddaa118f # initialize rs1
li x2, 0x49a164c034162d47 # initialize rs2
remw x30, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x6ac961714ea1a444 # initialize rs1
li x3, 0x0aa72250e74ad046 # initialize rs2
remw x19, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf5cb56c52a06681f # initialize rs1
li x4, 0xc3cc13005540e57b # initialize rs2
remw x8, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x508c2dd761f2224b # initialize rs1
li x5, 0xb3778015f4388184 # initialize rs2
remw x31, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xe170f9d1b768a5d8 # initialize rs1
li x6, 0x393f8deb4535a733 # initialize rs2
remw x7, x6, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
li x7, 0x7f4f7658ca46ebcd # initialize rs1
li x7, 0xd099749dbb54f427 # initialize rs2
remw x8, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xc980aac2a1113612 # initialize rs1
li x8, 0x9a6154d00afbb34c # initialize rs2
remw x11, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x5eb57e94683f4a51 # initialize rs1
li x9, 0x6f787c71bc412163 # initialize rs2
remw x21, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xb232396ebf340f79 # initialize rs1
li x10, 0xf70a96f533efbdf3 # initialize rs2
remw x17, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xf4b59052f392284c # initialize rs1
li x11, 0x1689e78b983ac248 # initialize rs2
remw x6, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xa6c31d6dab30ac47 # initialize rs1
li x12, 0x8a566a4c1d7349ea # initialize rs2
remw x29, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x79f07813484c04e4 # initialize rs1
li x13, 0x068e76d15c4d2dfa # initialize rs2
remw x24, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xa0aee0edbebe23d7 # initialize rs1
li x14, 0x655221f09cc1fb72 # initialize rs2
remw x3, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x1cdf7ac5a3ca0cb7 # initialize rs1
li x15, 0xdc842bf67ce1b02d # initialize rs2
remw x30, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x77b5f005740e4b12 # initialize rs1
li x16, 0xcfc093e75d87deea # initialize rs2
remw x21, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x43121c104b4fef38 # initialize rs1
li x17, 0x933e71bdfd11d393 # initialize rs2
remw x3, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xfddbd200720608df # initialize rs1
li x18, 0xfe6e8546e259cb5f # initialize rs2
remw x6, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x771cf799a3fe685f # initialize rs1
li x19, 0x0c6182091a932ed4 # initialize rs2
remw x1, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x59d0ed35b65af687 # initialize rs1
li x20, 0xa37171102006ac8f # initialize rs2
remw x12, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x9fd53c117ad30e8a # initialize rs1
li x21, 0xbae603023cb73815 # initialize rs2
remw x20, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x0fa2cd14b29cc69b # initialize rs1
li x22, 0xd1af7253f3e7eefa # initialize rs2
remw x31, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xe1bdc5c15dd3c36c # initialize rs1
li x23, 0x3e34e61c705307a5 # initialize rs2
remw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x5afe3eab4976c8e5 # initialize rs1
li x24, 0x8b59b5a4945832a8 # initialize rs2
remw x2, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x2b7d03ace1d4f3b7 # initialize rs1
li x25, 0x937a0b5c4482e414 # initialize rs2
remw x14, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x1ef50bcbdc12c034 # initialize rs1
li x26, 0x45ff70aecf331c1d # initialize rs2
remw x20, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x65c2e8967174a376 # initialize rs1
li x27, 0x43ab084002820afe # initialize rs2
remw x29, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x665742c30a8fea50 # initialize rs1
li x28, 0xb6cafa27f75ed74f # initialize rs2
remw x29, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xdc2d2aed0ef61eb6 # initialize rs1
li x29, 0x1158971df150f9eb # initialize rs2
remw x9, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xaf570172b2b32736 # initialize rs1
li x30, 0x688cc09e3f7da9e4 # initialize rs2
remw x1, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x58d9cd9b222fe515 # initialize rs1
li x31, 0xd089f6ad51ffbbf5 # initialize rs2
remw x28, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x775d9896b2b2df63 # initialize rs1
li x2, 0x845ccd3a94b2a695 # initialize rs2
remw x0, x0, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xaa017d5dad6698d6 # initialize rs1
li x24, 0x980d265d1f20e63e # initialize rs2
remw x1, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xaee57270c92a700f # initialize rs1
li x10, 0x92055985369af4f5 # initialize rs2
remw x2, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x9ad29c6352051e1c # initialize rs1
li x20, 0x597e947587847682 # initialize rs2
remw x3, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6258e89635273b19 # initialize rs1
li x14, 0x7f6a26dc04b78c54 # initialize rs2
remw x4, x4, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa94c292070995e94 # initialize rs1
li x14, 0xde5d025d86d26b37 # initialize rs2
remw x5, x5, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x4e12698819887407 # initialize rs1
li x9, 0x0cef7b78ddb45aad # initialize rs2
remw x6, x6, x9 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb8f4836c60c66fe3 # initialize rs1
li x21, 0xf5b9bf681fbb4587 # initialize rs2
remw x7, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x946a5b235b44a175 # initialize rs1
li x10, 0x3273b9eb09b0d85e # initialize rs2
remw x8, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xc70819e9b4645fda # initialize rs1
li x25, 0x825f527e5ff6a45e # initialize rs2
remw x9, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xdbc06b985f73c7e2 # initialize rs1
li x1, 0xf4b4f92f07305457 # initialize rs2
remw x10, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xe11be456d2d7ee05 # initialize rs1
li x16, 0x906141f9ef204dac # initialize rs2
remw x11, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xce59672af20b7c35 # initialize rs1
li x28, 0x87a9e4c9a3586fc8 # initialize rs2
remw x12, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x46c124f42f84cf66 # initialize rs1
li x28, 0x767c91ba4e0359da # initialize rs2
remw x13, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x7faab9bd04ea19ba # initialize rs1
li x12, 0x9751b8b3294917e9 # initialize rs2
remw x14, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x1592e8692c53e212 # initialize rs1
li x6, 0x42b4eed846d51f19 # initialize rs2
remw x15, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x774a770b2bcc520b # initialize rs1
li x10, 0x638bcd9dfe406467 # initialize rs2
remw x16, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x1fcf3c2c637411bc # initialize rs1
li x27, 0x42cc578f43a10086 # initialize rs2
remw x17, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x2437485613661303 # initialize rs1
li x2, 0x132ea1fe167fdde9 # initialize rs2
remw x18, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xdd28517d538ae8ba # initialize rs1
li x25, 0x8724619402dfeac9 # initialize rs2
remw x19, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x64ce7b66c1a3351c # initialize rs1
li x27, 0x179983ce8bf692dd # initialize rs2
remw x20, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x05279d759704c9ed # initialize rs1
li x30, 0xddd177465549f063 # initialize rs2
remw x21, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x542128aeaffa4a2f # initialize rs1
li x16, 0xbf7bdb291d05b523 # initialize rs2
remw x22, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x45e3284111399853 # initialize rs1
li x17, 0x597ae4e77fe43ade # initialize rs2
remw x23, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x931b0fc875c8e09f # initialize rs1
li x27, 0x33d7701a6b1ace2c # initialize rs2
remw x24, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xf373cbb946bd710a # initialize rs1
li x11, 0x6ba65328de90f6d7 # initialize rs2
remw x25, x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x6cf175afc0960834 # initialize rs1
li x15, 0x7767a097bc791f4a # initialize rs2
remw x26, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x88f37b53dd6161a6 # initialize rs1
li x25, 0x579186e564ef73bd # initialize rs2
remw x27, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x94297542aa79c0bb # initialize rs1
li x10, 0x9087ee9de451622e # initialize rs2
remw x28, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xd8fe80e49d481406 # initialize rs1
li x15, 0x40d3bf73fcda78b1 # initialize rs2
remw x29, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xff8352d7254e95da # initialize rs1
li x27, 0x4a91113bdabdad5a # initialize rs2
remw x30, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x463d7556709fada9 # initialize rs1
li x2, 0x1dfea3892966606d # initialize rs2
remw x31, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x25, 0x1441b876994915ce # initialize rs1
li x0, 0x38400f6209a77238 # initialize rs2
remw x0, x25, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x8, 0x638bb2182b243959 # initialize rs1
li x1, 0x29de2249d473ce51 # initialize rs2
remw x1, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x10, 0x526c93fbca2b88ff # initialize rs1
li x2, 0xcdc0614afa8ddab2 # initialize rs2
remw x2, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x1, 0x47465cf29499d950 # initialize rs1
li x3, 0x2febb615454e6029 # initialize rs2
remw x3, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x3, 0xaf3bf72f6ec5a10d # initialize rs1
li x4, 0x4577b55b50beecae # initialize rs2
remw x4, x3, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x27, 0x5605b8947d8c2941 # initialize rs1
li x5, 0x2ae1633cd67e39be # initialize rs2
remw x5, x27, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x2, 0xca96efb18313b48c # initialize rs1
li x6, 0x586b53fad0ba2987 # initialize rs2
remw x6, x2, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0xca0fd9ecbaa562d4 # initialize rs1
li x7, 0x6585571af7350b3c # initialize rs2
remw x7, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x15, 0x0c6c8d917ea3efc9 # initialize rs1
li x8, 0x83683b8442ac4ef3 # initialize rs2
remw x8, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x12, 0xb4651811566c2e6c # initialize rs1
li x9, 0x2f5e3f6ce09c569e # initialize rs2
remw x9, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x21, 0x7da6f08bc83671ac # initialize rs1
li x10, 0x24c56f044f1d69be # initialize rs2
remw x10, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x14, 0x34378c76efd4aa9b # initialize rs1
li x11, 0x261edc502f3bcbd3 # initialize rs2
remw x11, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x23, 0x899a4cd89db39817 # initialize rs1
li x12, 0xcacbfaa146153031 # initialize rs2
remw x12, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x5, 0x84a868136b6d47fe # initialize rs1
li x13, 0x9d7dad68d746d3f4 # initialize rs2
remw x13, x5, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xc568671cb4900ae8 # initialize rs1
li x14, 0x37af1bd4d325b321 # initialize rs2
remw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x6, 0x899d408b84e654c1 # initialize rs1
li x15, 0xbbb8d084b900f433 # initialize rs2
remw x15, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x21, 0xbd0bfac70f73d58b # initialize rs1
li x16, 0x38095d17b23baef3 # initialize rs2
remw x16, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x14, 0x07fcd5f343d8cd09 # initialize rs1
li x17, 0xf19a0e62a56b79d4 # initialize rs2
remw x17, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x14, 0xfb35990fec8dadda # initialize rs1
li x18, 0x724c324a82ebba34 # initialize rs2
remw x18, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x8, 0xc3a34c19598252ac # initialize rs1
li x19, 0xdbe83dcd52c6fff9 # initialize rs2
remw x19, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x5, 0x64a678bf126f95c7 # initialize rs1
li x20, 0x40884fb80ddfaa69 # initialize rs2
remw x20, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x6, 0x6b11a3451aad1f85 # initialize rs1
li x21, 0xc7298bb398e74407 # initialize rs2
remw x21, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x26, 0x1d780298627479d6 # initialize rs1
li x22, 0x67672e344e9d5ac5 # initialize rs2
remw x22, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x22, 0xb96c51400efbeec8 # initialize rs1
li x23, 0x472415dec9613f59 # initialize rs2
remw x23, x22, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x16, 0x9f0bc1036692ee2d # initialize rs1
li x24, 0xc25dfcc8d550e244 # initialize rs2
remw x24, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x22, 0x09e67fd95430a5e8 # initialize rs1
li x25, 0xaef00aed4179fb7d # initialize rs2
remw x25, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x11, 0x249759bf9edb6be8 # initialize rs1
li x26, 0x3b73ce9e5997af1f # initialize rs2
remw x26, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x16, 0xd1e801beb5cb2e74 # initialize rs1
li x27, 0x54edd8c629eeabb5 # initialize rs2
remw x27, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x18, 0x563e2f29054958b4 # initialize rs1
li x28, 0x1b50cc82764e9b4b # initialize rs2
remw x28, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x15, 0x45d21a5bfdaee752 # initialize rs1
li x29, 0x5b1fa58caf5fdeb3 # initialize rs2
remw x29, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x2, 0x3d6033b6245c5b41 # initialize rs1
li x30, 0x59bc23e607413908 # initialize rs2
remw x30, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x25, 0x316c69c66784b6ac # initialize rs1
li x31, 0x8b5d51c4da7a68c6 # initialize rs2
remw x31, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x513ad854ec97e928 # initialize rs1
li x0, 0x964edfe86c30c778 # initialize rs2
remw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x7283c947318a1a35 # initialize rs1
li x1, 0x0a53951aebcafbea # initialize rs2
remw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x9027983343e02e95 # initialize rs1
li x2, 0xc0b3211258338db3 # initialize rs2
remw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x07e05ffa575ef00f # initialize rs1
li x3, 0x9e9558621b701e59 # initialize rs2
remw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xde33799e7e50b032 # initialize rs1
li x4, 0x332c9ec2add64caf # initialize rs2
remw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x73f7e55e4a1d9970 # initialize rs1
li x5, 0x968064656e768a17 # initialize rs2
remw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x974f750735bd3b29 # initialize rs1
li x6, 0xb4b1cd8580f39369 # initialize rs2
remw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9712a240638fae4e # initialize rs1
li x7, 0x79af458c4f561d87 # initialize rs2
remw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xafd052f3be2af885 # initialize rs1
li x8, 0xffcbd2c92583ccda # initialize rs2
remw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xfed3d7d9ca3ad5ae # initialize rs1
li x9, 0xebdfda046996f4cc # initialize rs2
remw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x2e7af96a29012b2b # initialize rs1
li x10, 0xfd7e61ffd2e7b584 # initialize rs2
remw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xc05f1a90d5f9fa53 # initialize rs1
li x11, 0xbd119bc331620cc6 # initialize rs2
remw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x36a1166282dfacc0 # initialize rs1
li x12, 0x10b09a162d0ef2d2 # initialize rs2
remw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xf3f912c8897ad607 # initialize rs1
li x13, 0xb5b46add58e09e14 # initialize rs2
remw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x6b71f6c7a9a8aee8 # initialize rs1
li x14, 0x20027f1762a0872b # initialize rs2
remw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x0ca675c5acc0548b # initialize rs1
li x15, 0xa9f7d542e40ddeeb # initialize rs2
remw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xbf3f0d38bd65c78c # initialize rs1
li x16, 0x464a24348b54eb78 # initialize rs2
remw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x1613ab07c8398bf3 # initialize rs1
li x17, 0x70776ae166814c52 # initialize rs2
remw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xe9e84d00dd1c2c86 # initialize rs1
li x18, 0x9aa37c095e2d10f1 # initialize rs2
remw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x234ee965146d287d # initialize rs1
li x19, 0x63c420ecfa6e8103 # initialize rs2
remw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x8598f2b508794691 # initialize rs1
li x20, 0xed1a83ff84e7bb86 # initialize rs2
remw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x676d3f7906d9179a # initialize rs1
li x21, 0xb1d02e587e573b42 # initialize rs2
remw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x28aac8650f473df9 # initialize rs1
li x22, 0xfe8c7ca3229d947b # initialize rs2
remw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x298bca94f9970390 # initialize rs1
li x23, 0xd4f3db00159f5300 # initialize rs2
remw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x9541080d2132b20e # initialize rs1
li x24, 0x0b5eadf6e08ad824 # initialize rs2
remw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xffeb2d09160cf459 # initialize rs1
li x25, 0x43aa466dd1fcc44f # initialize rs2
remw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xa7ede27e0abe7f77 # initialize rs1
li x26, 0xacbad1d6de260eb7 # initialize rs2
remw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xef2334748d77bbe0 # initialize rs1
li x27, 0x9204cca3ed5b21d9 # initialize rs2
remw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x158f15505fb7c3cd # initialize rs1
li x28, 0x78ec2773d48329dd # initialize rs2
remw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x613a598a2c98ca47 # initialize rs1
li x29, 0x15c7ae9b6b4c49cc # initialize rs2
remw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd4c91546c8b20ec8 # initialize rs1
li x30, 0xd1727644fa64f323 # initialize rs2
remw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xb286eba02740c4bb # initialize rs1
li x31, 0xdc2128617ccce1f4 # initialize rs2
remw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x28, x3 # perform first operation
remw x20, x24, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x8, x10 # perform first operation
remw x18, x26, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x9, x30, x7 # perform first operation
remw x31, x29, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x12, x26, x9 # perform first operation
remw x12, x12, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x10, x29 # perform first operation
remw x29, x19, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x25, x11, x16 # perform first operation
remw x25, x5, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x28, x31, x11 # perform first operation
remw x28, x16, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x28, x16, x19 # perform first operation
remw x28, x12, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x1, x14, x19 # perform first operation
remw x1, x15, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x28, x14, x22 # perform first operation
remw x14, x19, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x1, x27 # perform first operation
remw x27, x5, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x8, x24, x22 # perform first operation
remw x31, x1, x29 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-divu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x50a3f8c4ffc4b452 # initialize rs1
li x10, 0xebb46577184b22c6 # initialize rs2
divu x26, x0, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x096dcc9888d1ee44 # initialize rs1
li x6, 0x76a99fd0a4cc8ae0 # initialize rs2
divu x16, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xb7cf521c710cf4ae # initialize rs1
li x10, 0x36161b30715f92b1 # initialize rs2
divu x17, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x67e11029c0073d55 # initialize rs1
li x15, 0x8ad0aae8bd045314 # initialize rs2
divu x13, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8ed324b594b10170 # initialize rs1
li x11, 0xb7fb9df97a88058a # initialize rs2
divu x12, x4, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcd0463f61c3fc0c6 # initialize rs1
li x10, 0x5f22f64db76fbf45 # initialize rs2
divu x20, x5, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x1aa4a5aece8854c5 # initialize rs1
li x25, 0x02b576177a753de3 # initialize rs2
divu x20, x6, x25 # perform operation
RVTEST_SIGUPD(x7, x0, x20, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x33e89df12158aa76 # initialize rs1
li x24, 0x1410e08fa114987c # initialize rs2
divu x3, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x70e2fcf7b8e42ad1 # initialize rs1
li x6, 0xbaea32c3a0fde888 # initialize rs2
divu x21, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x847cd6dcf2337e5c # initialize rs1
li x28, 0xa18990182e676cdf # initialize rs2
divu x14, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x37ad045b378132a8 # initialize rs1
li x20, 0x5303ff9b5efe87c5 # initialize rs2
divu x27, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xf2946ff7f328c42c # initialize rs1
li x1, 0x5176864bd2a8c349 # initialize rs2
divu x7, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xf20cc7d77fd0c091 # initialize rs1
li x26, 0xb2918b57f9b242e9 # initialize rs2
divu x16, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xc0bf651ebdf83968 # initialize rs1
li x31, 0xdaefc966bef5847f # initialize rs2
divu x5, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x7d8bf456ce6089d5 # initialize rs1
li x23, 0x6e8d913055103acd # initialize rs2
divu x13, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xb24574ad2439fe98 # initialize rs1
li x20, 0xd5559bd2e2099387 # initialize rs2
divu x25, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xffaffed750e547ee # initialize rs1
li x20, 0x01b9f33901611ee9 # initialize rs2
divu x30, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x0ae4b0c6a5dc8c21 # initialize rs1
li x18, 0x3ef6c1290756338d # initialize rs2
divu x28, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x76de4de40b50f2bb # initialize rs1
li x29, 0xcf4539cd705b132b # initialize rs2
divu x5, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xe5138690e2d4428c # initialize rs1
li x12, 0xb04f056059799d22 # initialize rs2
divu x14, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xf988b2c7a7c4a491 # initialize rs1
li x19, 0x38613235c101aa21 # initialize rs2
divu x18, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x33657a4f7e3b2022 # initialize rs1
li x3, 0x8793a4cbc0ce4b14 # initialize rs2
divu x27, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x377e48d7639eed6d # initialize rs1
li x21, 0x9998b3ffaae6d7a8 # initialize rs2
divu x14, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xeec4b7b68a0f8702 # initialize rs1
li x12, 0x5b16e3fe1f699e98 # initialize rs2
divu x25, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x59242479f500389b # initialize rs1
li x20, 0xf5df2cf60df456ad # initialize rs2
divu x30, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x9406757ec1296e85 # initialize rs1
li x1, 0x70e660f8daa07e0a # initialize rs2
divu x15, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x140d644b8a617282 # initialize rs1
li x31, 0xcd00146fb67d3166 # initialize rs2
divu x13, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xe01a207eb476a03e # initialize rs1
li x26, 0x0257fab582bec5be # initialize rs2
divu x24, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xe6c031c9a1ac63ca # initialize rs1
li x12, 0x259b279e6ef01988 # initialize rs2
divu x22, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xbc4067cec2a42f12 # initialize rs1
li x9, 0x54c4f437b2646274 # initialize rs2
divu x17, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x3d97fcd26d6f1b5a # initialize rs1
li x6, 0x547ab9e6ddffc6eb # initialize rs2
divu x25, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x5d85e1d53c053dd7 # initialize rs1
li x9, 0xbd9a5dc160f2a64d # initialize rs2
divu x7, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x17, 0x622171eae2fead2f # initialize rs1
li x0, 0x3dbc074b7461d6ca # initialize rs2
divu x27, x17, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x14, 0x88ec84d9816168fc # initialize rs1
li x1, 0xf6e0a63177f9cb51 # initialize rs2
divu x30, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x27, 0x5c8ee477e46809ad # initialize rs1
li x2, 0x3998fe44eb92acef # initialize rs2
divu x19, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x23, 0x514336c154941a74 # initialize rs1
li x3, 0x4ecadfcbf797fce4 # initialize rs2
divu x15, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x13, 0x7e95066fd31ec105 # initialize rs1
li x4, 0xddcc463beda5e7bf # initialize rs2
divu x5, x13, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
li x8, 0x040852bb2b63a2a2 # initialize rs1
li x5, 0x0fc73ff9d96b6016 # initialize rs2
divu x4, x8, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0x11946b127253ddb9 # initialize rs1
li x6, 0x8c4c9522d48ac21a # initialize rs2
divu x30, x26, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x30, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x29, 0x990b5295cfbc832c # initialize rs1
li x7, 0x88c01204e1a4bf60 # initialize rs2
divu x3, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x2, 0x1b19b9cb13eb5fcc # initialize rs1
li x8, 0xe1f9a774747ca50b # initialize rs2
divu x19, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x1, 0x248021ad228687a9 # initialize rs1
li x9, 0xfa947fd2742a815b # initialize rs2
divu x16, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x9, 0xeea753cb85b2ec61 # initialize rs1
li x10, 0xdb75ef0cb8079ab0 # initialize rs2
divu x21, x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x1, 0xfcde33fe99ee5a6b # initialize rs1
li x11, 0x9d94749e9321a205 # initialize rs2
divu x31, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x10, 0xc762412dcc39aa5b # initialize rs1
li x12, 0xc1edb9ba570e4780 # initialize rs2
divu x2, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x11, 0xb25932896a0824c1 # initialize rs1
li x13, 0x88bced9fac6785e4 # initialize rs2
divu x30, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x11, 0x63612720ba5e09dd # initialize rs1
li x14, 0x61424cc547bf4d8d # initialize rs2
divu x30, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x3, 0x2cfcb7b26e53857c # initialize rs1
li x15, 0xcc3ad24c289dbf3c # initialize rs2
divu x2, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x18, 0x354cd8b04052f894 # initialize rs1
li x16, 0xca90437af7472d83 # initialize rs2
divu x17, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x1, 0xaabde0bfa2350c06 # initialize rs1
li x17, 0x006a76d61c27f020 # initialize rs2
divu x22, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x24, 0xf5cb1a92e03a86cc # initialize rs1
li x18, 0x98ad0b1d886e572c # initialize rs2
divu x10, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x7, 0x445cdf665ec05cb1 # initialize rs1
li x19, 0xda52d58bdfefbc6b # initialize rs2
divu x21, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x26, 0x2d9e13d4dd5a2dac # initialize rs1
li x20, 0xdc44ce18a4593c69 # initialize rs2
divu x6, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x8, 0x81d4d74d33dfea88 # initialize rs1
li x21, 0x2bf0ca5eee1c928b # initialize rs2
divu x6, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x24, 0x9dbeaa688902a21d # initialize rs1
li x22, 0xc2ef7d12150b267f # initialize rs2
divu x14, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x15, 0x96f3f155259626f3 # initialize rs1
li x23, 0xe6289f6a1978313b # initialize rs2
divu x22, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x3, 0x98cc07938b754064 # initialize rs1
li x24, 0xffb1ba5fee626fa6 # initialize rs2
divu x28, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x22, 0x155243075f338387 # initialize rs1
li x25, 0x40a82c33c550d743 # initialize rs2
divu x14, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x27, 0xc71e1cc48717f26b # initialize rs1
li x26, 0x9cd32ff1ba1d848a # initialize rs2
divu x8, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x16, 0xb62c405b68c50817 # initialize rs1
li x27, 0xddd65d2caf95aa35 # initialize rs2
divu x23, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x2, 0x249441150d986210 # initialize rs1
li x28, 0x580c6372f8800152 # initialize rs2
divu x9, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x20, 0xc4bdbd2bb419c0d6 # initialize rs1
li x29, 0x1c91ba40df7afc91 # initialize rs2
divu x13, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x16, 0x7f36396a32153a3d # initialize rs1
li x30, 0x40257bb94be557b1 # initialize rs2
divu x26, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x2, 0xb0e7742285259aaf # initialize rs1
li x31, 0x0daf98501529a33f # initialize rs2
divu x25, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 504)

# Testcase cp_rd (Test destination rd = x0)
li x14, 0x789b9b94c4ef7124 # initialize rs1
li x25, 0x10670ec1bd207c94 # initialize rs2
divu x0, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x29, 0x0821bc2f695b1e55 # initialize rs1
li x8, 0x57b0a9ac2f44b6e9 # initialize rs2
divu x1, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x13, 0x2397dc5f7ffdff59 # initialize rs1
li x30, 0x46d7ef4e182ada8e # initialize rs2
divu x2, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x5, 0x2dbe179528f61cc3 # initialize rs1
li x30, 0x95f33eb36f6643d9 # initialize rs2
divu x3, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0x96416f7be35258a2 # initialize rs1
li x24, 0xea9e71e2ceb3bc05 # initialize rs2
divu x4, x5, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
li x15, 0x90a25b5e4650e94f # initialize rs1
li x26, 0xf51a73d1b88a9ef7 # initialize rs2
divu x5, x15, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x30, 0xff60cb9696ab8ff0 # initialize rs1
li x3, 0x44d1ab11995c03e1 # initialize rs2
divu x6, x30, x3 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0xd07d9c8edf852647 # initialize rs1
li x28, 0x7f7eece9535fca32 # initialize rs2
divu x7, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x12, 0xd1c4008a0fdc8522 # initialize rs1
li x28, 0x6547719e6922ca2b # initialize rs2
divu x8, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x23, 0x9bb77422dc1b5a4b # initialize rs1
li x26, 0x371ec22efe78070e # initialize rs2
divu x9, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x28, 0x336b8a8bba2dfc0c # initialize rs1
li x29, 0x98da03befc7b9156 # initialize rs2
divu x10, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x5, 0x198c1129021cb0a1 # initialize rs1
li x24, 0x5205805c9809cf53 # initialize rs2
divu x11, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x27, 0xdbdac63e0796cc48 # initialize rs1
li x14, 0xac24fa7abd63863f # initialize rs2
divu x12, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x18, 0x05eccb9e4f376732 # initialize rs1
li x24, 0x5dcfeddb6f8a7df1 # initialize rs2
divu x13, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x5, 0x97f27855a38d7f88 # initialize rs1
li x9, 0x9a67c4e8a60ead61 # initialize rs2
divu x14, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x1, 0xd069ba68989271f6 # initialize rs1
li x5, 0xde0c7e237ad644e3 # initialize rs2
divu x15, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x13, 0x71f2709a444ace3b # initialize rs1
li x7, 0x7e0df77c19d8c983 # initialize rs2
divu x16, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x11, 0xd924be9e016f9445 # initialize rs1
li x24, 0x628d494bd47a82ae # initialize rs2
divu x17, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x22, 0x94fc7e2602f4fb87 # initialize rs1
li x13, 0xf2aae54969c37d31 # initialize rs2
divu x18, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x1, 0x21733cb149f87a4b # initialize rs1
li x14, 0xdbd2711556f0fc0a # initialize rs2
divu x19, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x7, 0xfe26bf9d638cbe2e # initialize rs1
li x11, 0xa02d403736f5b728 # initialize rs2
divu x20, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x8, 0x9c53502942b60766 # initialize rs1
li x7, 0xd2726d1b2ab03a37 # initialize rs2
divu x21, x8, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x16, 0x1383283c3a1952b5 # initialize rs1
li x25, 0xcb1ac3d6b05c1710 # initialize rs2
divu x22, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0x27a2da76a2a68569 # initialize rs1
li x20, 0xc528c5997615788c # initialize rs2
divu x23, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x16, 0x5fa97d788cc0f599 # initialize rs1
li x29, 0x8e5945ab38d874fa # initialize rs2
divu x24, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x19, 0x2975a9613154d1bd # initialize rs1
li x9, 0xe38b8238e537663c # initialize rs2
divu x25, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x10, 0x6d308322855e8d0f # initialize rs1
li x13, 0x08b6c0b3fb7335a4 # initialize rs2
divu x26, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x30, 0x9a96f3543a3880b7 # initialize rs1
li x18, 0x954f67417726c2d6 # initialize rs2
divu x27, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x15, 0x173b10b5900b65e7 # initialize rs1
li x23, 0xfd1d78e1268e095a # initialize rs2
divu x28, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x5, 0x778bd709c253ce2b # initialize rs1
li x6, 0x33184191d1c47700 # initialize rs2
divu x29, x5, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x31, 0xcc93129702ae1176 # initialize rs1
li x28, 0x71eccf8927f2e5da # initialize rs2
divu x30, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x7, 0xc9fdfbd7decf5205 # initialize rs1
li x24, 0x3f40118afb9355b9 # initialize rs2
divu x31, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x17, 0x0000000000000000 # initialize rs1
li x22, 0xbb8de01381ef13ce # initialize rs2
divu x6, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x29, 0x0000000000000001 # initialize rs1
li x14, 0x565e6cbf101ede72 # initialize rs2
divu x11, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x8, 0x0000000000000002 # initialize rs1
li x31, 0x26f87eeac14f2b52 # initialize rs2
divu x12, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x23, 0x8000000000000000 # initialize rs1
li x25, 0x927fb7e7e3c5532c # initialize rs2
divu x9, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x28, 0x8000000000000001 # initialize rs1
li x22, 0x49a7ba347d53cb86 # initialize rs2
divu x18, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x21, 0x7fffffffffffffff # initialize rs1
li x26, 0x89e8999166156978 # initialize rs2
divu x29, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x30, 0x9da4fbc812c738ef # initialize rs2
divu x22, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x26, 0x1dae5a24038f9200 # initialize rs2
divu x21, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x19, 0xfffffffffffffffe # initialize rs1
li x16, 0x34a67b56cef32606 # initialize rs2
divu x9, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0xdbc050012218cde5 # initialize rs2
divu x9, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x95eedf2629e7cde6 # initialize rs2
divu x20, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x12, 0x5555555555555555 # initialize rs1
li x15, 0x65f9274d27b2fd6b # initialize rs2
divu x18, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x19, 0x00000000ffffffff # initialize rs1
li x16, 0x73e7938be42d09c7 # initialize rs2
divu x23, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x22, 0x00000000fffffffe # initialize rs1
li x3, 0xf2483052783b8cf6 # initialize rs2
divu x2, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x9, 0x0000000100000000 # initialize rs1
li x16, 0xac885a7dc7c227cc # initialize rs2
divu x7, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x15, 0x0000000100000001 # initialize rs1
li x22, 0xf5043168bba51798 # initialize rs2
divu x24, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x12, 0x1ba6b01c81a28318 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
divu x13, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x29, 0x4a74a98be42fbac4 # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
divu x3, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x7, 0x80254d404364b87e # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
divu x25, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x14, 0xf05ff34ab71ef7c8 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
divu x15, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x9, 0xad80358ccaf3727b # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
divu x1, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x6, 0x2b44222971a22576 # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
divu x28, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x8, 0xfdfe3062850c8ddd # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
divu x10, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x11, 0x9093290f061e189f # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
divu x13, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x3, 0x219ec0af2f429d89 # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
divu x20, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x29, 0xf6394333a2dac675 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
divu x10, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x8, 0x7256104684d83541 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x14, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x5, 0x08674210fbb53748 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
divu x1, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x9, 0x9d2b2bd5be10222e # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
divu x17, x9, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x2, 0x9b12770617c11753 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
divu x18, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x11, 0x90ef9657e5fd943d # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
divu x1, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x20, 0x6fd9f01be768d3aa # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
divu x12, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x1, 0x0000000000000000 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
divu x25, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x3, 0x0000000000000000 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
divu x1, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x17, 0x0000000000000000 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
divu x8, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x7, 0x0000000000000000 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
divu x6, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x29, 0x0000000000000000 # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
divu x14, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x1, 0x0000000000000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
divu x15, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000000000000 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divu x6, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x6, 0x0000000000000000 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
divu x16, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000000000000 # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
divu x27, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x12, 0x0000000000000000 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
divu x6, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x0000000000000000 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x22, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x10, 0x0000000000000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
divu x6, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x15, 0x0000000000000000 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
divu x7, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x2, 0x0000000000000000 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
divu x19, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x6, 0x0000000000000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
divu x21, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x26, 0x0000000000000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
divu x19, x26, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x10, 0x0000000000000001 # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
divu x23, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x23, 0x0000000000000001 # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
divu x20, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x31, 0x0000000000000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
divu x22, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x1, 0x0000000000000001 # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
divu x19, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x19, 0x0000000000000001 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
divu x11, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000001 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
divu x29, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x10, 0x0000000000000001 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
divu x19, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
divu x29, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x12, 0x0000000000000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
divu x19, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x31, 0x0000000000000001 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
divu x12, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x0000000000000001 # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x21, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x12, 0x0000000000000001 # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
divu x24, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
divu x24, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x9, 0x0000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
divu x22, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x20, 0x0000000000000001 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
divu x3, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x22, 0x0000000000000001 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
divu x23, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x17, 0x0000000000000002 # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
divu x31, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x31, 0x0000000000000002 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
divu x2, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
divu x8, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x29, 0x0000000000000002 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
divu x18, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x31, 0x0000000000000002 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
divu x21, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000000000002 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
divu x25, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000000000002 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
divu x10, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
divu x3, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x28, 0x0000000000000002 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
divu x12, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x10, 0x0000000000000002 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
divu x2, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000000000002 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x31, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x10, 0x0000000000000002 # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
divu x30, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x3, 0x0000000000000002 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
divu x30, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x13, 0x0000000000000002 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
divu x18, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x7, 0x0000000000000002 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
divu x20, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x12, 0x0000000000000002 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
divu x28, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x15, 0x8000000000000000 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divu x12, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x30, 0x8000000000000000 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
divu x22, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x17, 0x8000000000000000 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
divu x3, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x7, 0x8000000000000000 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
divu x22, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x27, 0x8000000000000000 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
divu x3, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x20, 0x8000000000000000 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
divu x25, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x18, 0x8000000000000000 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
divu x30, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
divu x26, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x10, 0x8000000000000000 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
divu x23, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x7, 0x8000000000000000 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
divu x12, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x8000000000000000 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x14, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x16, 0x8000000000000000 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
divu x26, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
divu x24, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x27, 0x8000000000000000 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
divu x6, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x19, 0x8000000000000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
divu x25, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x27, 0x8000000000000000 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
divu x10, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x9, 0x8000000000000001 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
divu x23, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x16, 0x8000000000000001 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
divu x21, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x15, 0x8000000000000001 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
divu x26, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x12, 0x8000000000000001 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
divu x16, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x22, 0x8000000000000001 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
divu x31, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x16, 0x8000000000000001 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
divu x28, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
divu x26, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x5, 0x8000000000000001 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
divu x15, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x22, 0x8000000000000001 # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
divu x16, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x3, 0x8000000000000001 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
divu x5, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x8000000000000001 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x6, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x6, 0x8000000000000001 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
divu x31, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x21, 0x8000000000000001 # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
divu x18, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x9, 0x8000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
divu x30, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x2, 0x8000000000000001 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
divu x12, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x10, 0x8000000000000001 # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
divu x3, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x17, 0x7fffffffffffffff # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
divu x13, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x1, 0x7fffffffffffffff # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
divu x2, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x28, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
divu x17, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x12, 0x7fffffffffffffff # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
divu x28, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x26, 0x7fffffffffffffff # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
divu x13, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
divu x30, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x1, 0x7fffffffffffffff # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
divu x19, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x9, 0x7fffffffffffffff # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
divu x5, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x14, 0x7fffffffffffffff # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
divu x27, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x23, 0x7fffffffffffffff # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
divu x10, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x7fffffffffffffff # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x8, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x27, 0x7fffffffffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
divu x1, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
divu x5, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x18, 0x7fffffffffffffff # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
divu x10, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x25, 0x7fffffffffffffff # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
divu x23, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x8, 0x7fffffffffffffff # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
divu x30, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x7, 0x7ffffffffffffffe # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
divu x5, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x3, 0x7ffffffffffffffe # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
divu x11, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x10, 0x7ffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
divu x14, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x8, 0x7ffffffffffffffe # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
divu x20, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x3, 0x7ffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
divu x28, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x21, 0x7ffffffffffffffe # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
divu x18, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
divu x11, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x29, 0x7ffffffffffffffe # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
divu x20, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x3, 0x7ffffffffffffffe # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
divu x8, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x9, 0x7ffffffffffffffe # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
divu x31, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x7ffffffffffffffe # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x27, x3, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x2, 0x7ffffffffffffffe # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
divu x22, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x29, 0x7ffffffffffffffe # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
divu x6, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x9, 0x7ffffffffffffffe # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
divu x22, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x15, 0x7ffffffffffffffe # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
divu x26, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x31, 0x7ffffffffffffffe # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
divu x17, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x6, 0xffffffffffffffff # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
divu x3, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x30, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
divu x6, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x7, 0xffffffffffffffff # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
divu x6, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x8, 0xffffffffffffffff # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
divu x1, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x16, 0xffffffffffffffff # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
divu x31, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
divu x14, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
divu x30, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
divu x8, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
divu x5, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x11, 0xffffffffffffffff # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
divu x22, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0xffffffffffffffff # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x9, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x6, 0xffffffffffffffff # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
divu x14, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x19, 0xffffffffffffffff # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
divu x16, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x25, 0xffffffffffffffff # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
divu x24, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x22, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
divu x6, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x21, 0xffffffffffffffff # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
divu x25, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x17, 0xfffffffffffffffe # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
divu x14, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x23, 0xfffffffffffffffe # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
divu x20, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x7, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
divu x3, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x10, 0xfffffffffffffffe # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
divu x21, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x9, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
divu x17, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x24, 0xfffffffffffffffe # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
divu x19, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
divu x6, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0xfffffffffffffffe # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
divu x3, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x24, 0xfffffffffffffffe # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
divu x17, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x29, 0xfffffffffffffffe # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
divu x16, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xfffffffffffffffe # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x13, x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x29, 0xfffffffffffffffe # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
divu x13, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x28, 0xfffffffffffffffe # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
divu x15, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x14, 0xfffffffffffffffe # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
divu x26, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x12, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
divu x8, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x28, 0xfffffffffffffffe # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
divu x7, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
divu x2, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
divu x7, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
divu x6, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
divu x19, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
divu x22, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
divu x25, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
divu x25, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
divu x2, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
divu x18, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
divu x27, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x25, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
divu x2, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
divu x7, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
divu x18, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
divu x22, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
divu x30, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
divu x14, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
divu x24, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
divu x30, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
divu x7, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
divu x10, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
divu x13, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
divu x21, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
divu x19, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
divu x21, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
divu x28, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x6, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
divu x12, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
divu x6, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
divu x17, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
divu x27, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
divu x7, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x23, 0x5555555555555555 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
divu x30, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x19, 0x5555555555555555 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
divu x12, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x3, 0x5555555555555555 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
divu x20, x3, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x10, 0x5555555555555555 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
divu x1, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x20, 0x5555555555555555 # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
divu x3, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x7, 0x5555555555555555 # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
divu x27, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x5, 0x5555555555555555 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
divu x11, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
divu x17, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x16, 0x5555555555555555 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
divu x29, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x23, 0x5555555555555555 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
divu x22, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x5555555555555555 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x29, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x11, 0x5555555555555555 # initialize rs1
li x16, 0x5555555555555555 # initialize rs2
divu x31, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x17, 0x5555555555555555 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
divu x22, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x3, 0x5555555555555555 # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
divu x15, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x20, 0x5555555555555555 # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
divu x14, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x27, 0x5555555555555555 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
divu x14, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x1, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
divu x10, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x26, 0x00000000ffffffff # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
divu x21, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x22, 0x00000000ffffffff # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
divu x25, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x13, 0x00000000ffffffff # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
divu x7, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x6, 0x00000000ffffffff # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
divu x2, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
divu x5, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0x00000000ffffffff # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
divu x24, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x9, 0x00000000ffffffff # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
divu x26, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x3, 0x00000000ffffffff # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
divu x9, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x31, 0x00000000ffffffff # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
divu x13, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x00000000ffffffff # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x24, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x31, 0x00000000ffffffff # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
divu x5, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x27, 0x00000000ffffffff # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
divu x23, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x28, 0x00000000ffffffff # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
divu x15, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x28, 0x00000000ffffffff # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
divu x8, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x15, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
divu x28, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x21, 0x00000000fffffffe # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
divu x30, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x13, 0x00000000fffffffe # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
divu x25, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x28, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
divu x14, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x10, 0x00000000fffffffe # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
divu x17, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x19, 0x00000000fffffffe # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
divu x12, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
divu x2, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x25, 0x00000000fffffffe # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divu x30, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
divu x24, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x28, 0x00000000fffffffe # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
divu x10, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x1, 0x00000000fffffffe # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
divu x30, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x21, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x10, 0x00000000fffffffe # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
divu x1, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x20, 0x00000000fffffffe # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
divu x30, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x3, 0x00000000fffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
divu x21, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x9, 0x00000000fffffffe # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
divu x24, x9, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x23, 0x00000000fffffffe # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
divu x8, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x22, 0x0000000100000000 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
divu x15, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x3, 0x0000000100000000 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
divu x1, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x6, 0x0000000100000000 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
divu x13, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x8, 0x0000000100000000 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
divu x6, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x8, 0x0000000100000000 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
divu x9, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000100000000 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
divu x24, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x3, 0x0000000100000000 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
divu x9, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x29, 0x0000000100000000 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
divu x28, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
divu x12, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000100000000 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
divu x29, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x0000000100000000 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x21, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x30, 0x0000000100000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
divu x26, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x25, 0x0000000100000000 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
divu x19, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
divu x21, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x2, 0x0000000100000000 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
divu x30, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x18, 0x0000000100000000 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
divu x9, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x18, 0x0000000100000001 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
divu x5, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x5, 0x0000000100000001 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
divu x20, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x24, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
divu x8, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x3, 0x0000000100000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
divu x12, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x22, 0x0000000100000001 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
divu x8, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
divu x6, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000100000001 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
divu x5, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x9, 0x0000000100000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
divu x11, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x5, 0x0000000100000001 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
divu x1, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000100000001 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
divu x22, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x0000000100000001 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
divu x16, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x30, 0x0000000100000001 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
divu x6, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x10, 0x0000000100000001 # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
divu x5, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x21, 0x0000000100000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
divu x19, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x15, 0x0000000100000001 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
divu x16, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x17, 0x0000000100000001 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
divu x5, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xe6819d1b6c2d9338 # initialize rs1
li x0, 0xaf4ae2ff8b539df7 # initialize rs2
divu x7, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xc275760afbd070f7 # initialize rs1
li x1, 0x2509c240f6264f4e # initialize rs2
divu x21, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x0e3a7e659cc7c108 # initialize rs1
li x2, 0xa95ca76d402c178c # initialize rs2
divu x14, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xdb2384f0cd176b3b # initialize rs1
li x3, 0xdfe2c992c79d4cc9 # initialize rs2
divu x5, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x003bcaf94c70636b # initialize rs1
li x4, 0x27358304c3349f10 # initialize rs2
divu x31, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1525022686010971 # initialize rs1
li x5, 0x9050be47e6c9e162 # initialize rs2
divu x27, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x47e9dfb4c82c4ce6 # initialize rs1
li x6, 0xb1f84b6dd641ebac # initialize rs2
divu x2, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x15cf6709add5d05b # initialize rs1
li x7, 0x527f3f0513188187 # initialize rs2
divu x3, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x6bba53fe4b1be736 # initialize rs1
li x8, 0x29431d4d23598939 # initialize rs2
divu x19, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x07b3bc856aa37ace # initialize rs1
li x9, 0x054dd49c74e73e2b # initialize rs2
divu x14, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xfc9f81679b1f215f # initialize rs1
li x10, 0x84847fdef4595879 # initialize rs2
divu x29, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x60f7d63dd98327e8 # initialize rs1
li x11, 0x226035c79959344c # initialize rs2
divu x8, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x94a3f817bdd1de06 # initialize rs1
li x12, 0xb80448adbe5551b4 # initialize rs2
divu x24, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x75c48d74ab34b617 # initialize rs1
li x13, 0x60c070ecf641154d # initialize rs2
divu x3, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x494197bef6c64bb3 # initialize rs1
li x14, 0x4d79cd430679d96e # initialize rs2
divu x28, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x187a97edb5737d55 # initialize rs1
li x15, 0x57b5e2652b6c9de7 # initialize rs2
divu x3, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x435963a397d78dcf # initialize rs1
li x16, 0xbc3ca977806c5e60 # initialize rs2
divu x21, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x4db048b2d13ea64e # initialize rs1
li x17, 0x49e994ace20d726b # initialize rs2
divu x1, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xc1e9eea2e2c347d2 # initialize rs1
li x18, 0x8e51dd843c82d9e1 # initialize rs2
divu x26, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xf5197b114548bf62 # initialize rs1
li x19, 0x86653ee5c47d314a # initialize rs2
divu x7, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xaa5c2775c272e21c # initialize rs1
li x20, 0x50d914d1694f5cdf # initialize rs2
divu x3, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x89ffa5cea8a5e30d # initialize rs1
li x21, 0x8d0cd66ba9d041ea # initialize rs2
divu x24, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x011df73e2fc28b6f # initialize rs1
li x22, 0x14216aa676f19bd2 # initialize rs2
divu x10, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xe8819024a7d02076 # initialize rs1
li x23, 0x838aef33796fec6d # initialize rs2
divu x12, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x49be0966891b3b6b # initialize rs1
li x24, 0xc2e113cb7e908611 # initialize rs2
divu x11, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xcd8b736c35b7bb38 # initialize rs1
li x25, 0x1da998ce3b09c60e # initialize rs2
divu x13, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xcebeddf22dcc24d6 # initialize rs1
li x26, 0xd2f3daa5297c50b9 # initialize rs2
divu x17, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x5b439ec120f07ba8 # initialize rs1
li x27, 0x30589ae1ecf1f809 # initialize rs2
divu x1, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xd32e63dd5df97b05 # initialize rs1
li x28, 0x399d48529ebe423e # initialize rs2
divu x21, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x39c2a10e75448844 # initialize rs1
li x29, 0xc88ed50e69781fc7 # initialize rs2
divu x30, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xcad303c578fcc8ce # initialize rs1
li x30, 0xe1032bd50549ea47 # initialize rs2
divu x17, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xdbc2865026f2dd6b # initialize rs1
li x31, 0x082f29030e81bce4 # initialize rs2
divu x19, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x86fe407b7426b4f4 # initialize rs1
li x24, 0x2ae381b0e3a45436 # initialize rs2
divu x0, x0, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xea834380fc8cea3d # initialize rs1
li x2, 0xf4d78ab6ade9b67c # initialize rs2
divu x1, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xcc1bbeb610b3a2d9 # initialize rs1
li x14, 0xc68de7774093429c # initialize rs2
divu x2, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xbb43eec07cdc3108 # initialize rs1
li x23, 0x2c72df2ee786cb8f # initialize rs2
divu x3, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xde8363e4676ad73b # initialize rs1
li x28, 0xd357e3c509d6bdaa # initialize rs2
divu x4, x4, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9b550e3b88586bad # initialize rs1
li x31, 0x26116f9e9902c61b # initialize rs2
divu x5, x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xc7f32c427146fac3 # initialize rs1
li x15, 0x5ec46fafb4d14208 # initialize rs2
divu x6, x6, x15 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7db9381386aae97b # initialize rs1
li x20, 0xe1029d653957f31e # initialize rs2
divu x7, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x7684ee4848b8a789 # initialize rs1
li x24, 0x355e22e16e8fd56f # initialize rs2
divu x8, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x02fbdfe6a0dc40ed # initialize rs1
li x5, 0xf372a7752fb5301f # initialize rs2
divu x9, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x9263439c0b01dfd7 # initialize rs1
li x27, 0xda1934fce990512a # initialize rs2
divu x10, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xf078d400e4a06a21 # initialize rs1
li x20, 0x04ca39f67888d31f # initialize rs2
divu x11, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x48c349151463ac72 # initialize rs1
li x27, 0xbd3fa2ae6a71a8d4 # initialize rs2
divu x12, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x1dfd9f0010cf2485 # initialize rs1
li x14, 0x039ead9428bbe245 # initialize rs2
divu x13, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x3d78e8301a330790 # initialize rs1
li x28, 0x8d982c037707f7c4 # initialize rs2
divu x14, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x06952ed9cdd1d417 # initialize rs1
li x21, 0x81b7a4da1ec822ee # initialize rs2
divu x15, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xcb51e23571ae0c63 # initialize rs1
li x11, 0x0b43d6fcf9ca2576 # initialize rs2
divu x16, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x02aff674662daa03 # initialize rs1
li x11, 0x3cf7e7c936d9b061 # initialize rs2
divu x17, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xbd9d2668a4e3862d # initialize rs1
li x27, 0x14dbe6bdca45258c # initialize rs2
divu x18, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x123abd69e46943a2 # initialize rs1
li x24, 0xf747283bc98b63d7 # initialize rs2
divu x19, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x3f79505b121a09e7 # initialize rs1
li x5, 0x756bf81668df2638 # initialize rs2
divu x20, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x7ec3f10cec70f859 # initialize rs1
li x14, 0x5cb7ce3275b45b48 # initialize rs2
divu x21, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x51c845b625fc5621 # initialize rs1
li x24, 0x9940f3e7518cac75 # initialize rs2
divu x22, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x1af7606eec40e0fb # initialize rs1
li x5, 0x860c17715d163793 # initialize rs2
divu x23, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x7d6372926c240e35 # initialize rs1
li x20, 0xb1573ba94d08d8f8 # initialize rs2
divu x24, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xb1b545ee2d0d1fc1 # initialize rs1
li x15, 0x240e70a6f03f7787 # initialize rs2
divu x25, x25, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xdbb6a15fdb09dae2 # initialize rs1
li x28, 0x6c6114d1274f408e # initialize rs2
divu x26, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xa1fea1b23463ef50 # initialize rs1
li x2, 0xed1a1114f05ff3d9 # initialize rs2
divu x27, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x33481d659c1193a2 # initialize rs1
li x28, 0xe9830117185064ef # initialize rs2
divu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x38a83b4423fdfa6d # initialize rs1
li x24, 0x72e52e09432e1891 # initialize rs2
divu x29, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x6988cddeed49fc37 # initialize rs1
li x6, 0x18f0e91fc3a3c149 # initialize rs2
divu x30, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xd0460a729c10ed5f # initialize rs1
li x12, 0xc27945341421c3f1 # initialize rs2
divu x31, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x27, 0x1a4c0b9939266bdd # initialize rs1
li x0, 0x3e7d19bbb481d221 # initialize rs2
divu x0, x27, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x29, 0x85485ba93beaeb19 # initialize rs1
li x1, 0x1e8e1215177341c4 # initialize rs2
divu x1, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x8, 0xd6fe5accbd55d913 # initialize rs1
li x2, 0x16061aef2e747c2c # initialize rs2
divu x2, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x22, 0xf84e6580e0550ec7 # initialize rs1
li x3, 0x9e972e154ebb3f63 # initialize rs2
divu x3, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0xc92e9cc48e69a819 # initialize rs1
li x4, 0x9d9bbd3b860d3e91 # initialize rs2
divu x4, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x1, 0x3105bd99d1003703 # initialize rs1
li x5, 0x280c074eb42216b8 # initialize rs2
divu x5, x1, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0xab5eb818db823a90 # initialize rs1
li x6, 0xf57765cf74f48209 # initialize rs2
divu x6, x24, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x25, 0x6488def9d0306273 # initialize rs1
li x7, 0x24d57fe22a77133b # initialize rs2
divu x7, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x17, 0x3a2b73b23b694e93 # initialize rs1
li x8, 0x9c3a5cce5477435a # initialize rs2
divu x8, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x13, 0x7fdb0cdeb2ec1933 # initialize rs1
li x9, 0xc31db3166d2fd5ca # initialize rs2
divu x9, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x29, 0x637d1c6d1778870f # initialize rs1
li x10, 0x64568f0e1da36bcf # initialize rs2
divu x10, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x22, 0x797f36ae08f865ae # initialize rs1
li x11, 0x5c76068539f7d8e4 # initialize rs2
divu x11, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x28, 0x4cc382b611db7909 # initialize rs1
li x12, 0x19ea9b1577440a16 # initialize rs2
divu x12, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x12, 0x4e992a349e686b88 # initialize rs1
li x13, 0x81583eeef74ea446 # initialize rs2
divu x13, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x18, 0x84f2eb79ff4fd722 # initialize rs1
li x14, 0xe3b33f7859f886e1 # initialize rs2
divu x14, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x22, 0x5e4bf5aa19af1525 # initialize rs1
li x15, 0xc60ff7e1d513b59a # initialize rs2
divu x15, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x1, 0xceee8b0555cff583 # initialize rs1
li x16, 0xc8c05c1ff8f96623 # initialize rs2
divu x16, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x1, 0x95a1e8727caaa3ca # initialize rs1
li x17, 0xe891ea657dff7a7d # initialize rs2
divu x17, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x10, 0xff2a64b72e3715ae # initialize rs1
li x18, 0x2399d10091b06646 # initialize rs2
divu x18, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x29, 0xacda7ed5c6f514d3 # initialize rs1
li x19, 0x518ccf023a69673c # initialize rs2
divu x19, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x31, 0x49ff8e621a12881d # initialize rs1
li x20, 0x6b69cd4ed374b07c # initialize rs2
divu x20, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x31, 0x78ed3371b96cee49 # initialize rs1
li x21, 0x4f0100433f9ecf4d # initialize rs2
divu x21, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x3, 0x079ac63a6f499cbd # initialize rs1
li x22, 0x3da026bddbcf2b7b # initialize rs2
divu x22, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x3, 0xd64cc02757527e49 # initialize rs1
li x23, 0x8f5814564a6b94ba # initialize rs2
divu x23, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x25, 0x3ac7dd71da0edca8 # initialize rs1
li x24, 0xb7f45ca865833a27 # initialize rs2
divu x24, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x13, 0x0e613888d869f492 # initialize rs1
li x25, 0x045ff1fc74d820d5 # initialize rs2
divu x25, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x3, 0xaf60067a45d60886 # initialize rs1
li x26, 0x8669c72627b95044 # initialize rs2
divu x26, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x20, 0x8aedd3af70e365e9 # initialize rs1
li x27, 0xf046b49fdc6d511c # initialize rs2
divu x27, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x11, 0x99e4f53b1b315052 # initialize rs1
li x28, 0x3b5270f3e429a145 # initialize rs2
divu x28, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x18, 0x7c42554af5d5ef29 # initialize rs1
li x29, 0xb6ab1831981f3360 # initialize rs2
divu x29, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x5, 0x8c289928e0f19d80 # initialize rs1
li x30, 0x1420fa7c29e88364 # initialize rs2
divu x30, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x26, 0xa81766d4116d37f4 # initialize rs1
li x31, 0xc6ad4cdcdc6effba # initialize rs2
divu x31, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x7d39746fb327ecf7 # initialize rs1
li x0, 0xb35dff0c04195119 # initialize rs2
divu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x0fc8e034f6bd2a65 # initialize rs1
li x1, 0x0e898a761d57c996 # initialize rs2
divu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x48106fbcc3bef2b4 # initialize rs1
li x2, 0x2198a43f6f43308a # initialize rs2
divu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xa83061918a01d400 # initialize rs1
li x3, 0x9089062de93d45af # initialize rs2
divu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6bed4c0282504cf1 # initialize rs1
li x4, 0xc54337fe3d952827 # initialize rs2
divu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1eaf3cfeda5b7aef # initialize rs1
li x5, 0x5801223c689d192e # initialize rs2
divu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2e63bb1a2ae576a8 # initialize rs1
li x6, 0xab1ed9d698a79846 # initialize rs2
divu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x772b51034a773368 # initialize rs1
li x7, 0x6b2aa8c3424186c4 # initialize rs2
divu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x9769e2ce5e28154c # initialize rs1
li x8, 0x7a3cdcc4c5b1306d # initialize rs2
divu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x5ef5c535bbba7d0b # initialize rs1
li x9, 0x713e014600ed5753 # initialize rs2
divu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x65e5184cfa80e5a1 # initialize rs1
li x10, 0x3c0819592710c86d # initialize rs2
divu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x22c4efd0f6676dc7 # initialize rs1
li x11, 0x0264719deb05411d # initialize rs2
divu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x5e3d74e7d6d4b2f6 # initialize rs1
li x12, 0x2defdc357adfd2c5 # initialize rs2
divu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xcacbfbdcec047e24 # initialize rs1
li x13, 0xa5ad7b2f84068ff8 # initialize rs2
divu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xb37438c203477f08 # initialize rs1
li x14, 0x8cf9213f1ff72be8 # initialize rs2
divu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x8ece658df9826de2 # initialize rs1
li x15, 0x1eeedf172dfda867 # initialize rs2
divu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x08789637a3488d2d # initialize rs1
li x16, 0x577bc75671ee9491 # initialize rs2
divu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xf0d166a58ada0624 # initialize rs1
li x17, 0x8d320e2e68e5ee1e # initialize rs2
divu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x74150ec7f6944e1f # initialize rs1
li x18, 0x5557d2c3a44de80c # initialize rs2
divu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xcc07920cef56f3ff # initialize rs1
li x19, 0xc0dd75ae802e8971 # initialize rs2
divu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x5e28789325ee15f2 # initialize rs1
li x20, 0x1241d5f3d03b1a8d # initialize rs2
divu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x679c580dc0e2e8d4 # initialize rs1
li x21, 0x4ff44704907aca27 # initialize rs2
divu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x3506ebd28a0e8915 # initialize rs1
li x22, 0x848c3f33d306d40e # initialize rs2
divu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x1476e8e05458fc2a # initialize rs1
li x23, 0x6423ab7f53791523 # initialize rs2
divu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x403c564b7109d997 # initialize rs1
li x24, 0xd529102f0d5724aa # initialize rs2
divu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xc4ae453709d86af9 # initialize rs1
li x25, 0x88deff5615265f39 # initialize rs2
divu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x1e5db77287e3219e # initialize rs1
li x26, 0xbad459f933b4c925 # initialize rs2
divu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x1f8f05f2106f852e # initialize rs1
li x27, 0x05641bfd737b5608 # initialize rs2
divu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x45835b85e5913232 # initialize rs1
li x28, 0x4e18a26c56c249ed # initialize rs2
divu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x2506584b7c4527b0 # initialize rs1
li x29, 0x032b68d17ec6352e # initialize rs2
divu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xfbb21fda8fb862c3 # initialize rs1
li x30, 0xba040f930eacb81a # initialize rs2
divu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x2a7564e273621f1d # initialize rs1
li x31, 0x74b9c7bd9477c687 # initialize rs2
divu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x5, x20, x28 # perform first operation
divu x7, x9, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x2, x13 # perform first operation
divu x1, x27, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x18, x5 # perform first operation
divu x26, x24, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x14, x19, x25 # perform first operation
divu x25, x14, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x27, x2 # perform first operation
divu x21, x5, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x2, x18 # perform first operation
divu x18, x24, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x8, x12, x30 # perform first operation
divu x8, x2, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x10, x21, x14 # perform first operation
divu x10, x30, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x18, x16, x1 # perform first operation
divu x18, x23, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x6, x29, x11 # perform first operation
divu x29, x24, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x2, x29, x22 # perform first operation
divu x22, x19, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x3, x31 # perform first operation
divu x27, x26, x9 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-mulh.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x2b019a472427a489 # initialize rs1
li x28, 0x8485b837997ad6ba # initialize rs2
mulh x6, x0, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x6e655f7bd0b5e046 # initialize rs1
li x19, 0x7c7a9d921805a1fe # initialize rs2
mulh x11, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x7d4baa849f2f4d50 # initialize rs1
li x28, 0x6298ca94867e144d # initialize rs2
mulh x31, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x666fea99f21fc3ca # initialize rs1
li x5, 0x96b1fcce09192ea4 # initialize rs2
mulh x25, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7d0e26bbfde00c9f # initialize rs1
li x28, 0x79475491aabb9ad9 # initialize rs2
mulh x2, x4, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x6b6b24e41542bc61 # initialize rs1
li x19, 0x79eb1a64ee88d7e2 # initialize rs2
mulh x18, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x261e1964ae39a125 # initialize rs1
li x13, 0xeed6d5e13cd264e5 # initialize rs2
mulh x2, x6, x13 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe18465033e05bf6d # initialize rs1
li x5, 0x1a986d5eeca0ed92 # initialize rs2
mulh x19, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9253d902e89942fb # initialize rs1
li x9, 0xa544c1895e6b4a1e # initialize rs2
mulh x16, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x47b6d67ca5e563a5 # initialize rs1
li x28, 0x3b99970057f94609 # initialize rs2
mulh x23, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xb22665080a975b25 # initialize rs1
li x12, 0x01e948c7369b5850 # initialize rs2
mulh x15, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x0a10e7b097dfd12e # initialize rs1
li x25, 0xef688bb672674e91 # initialize rs2
mulh x9, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xab833c81fb4c8460 # initialize rs1
li x2, 0x761445addccaaa21 # initialize rs2
mulh x24, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xbde1aea89c1711eb # initialize rs1
li x6, 0x8812c4477cc47cfb # initialize rs2
mulh x8, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x89a52996258848de # initialize rs1
li x19, 0x07d4b04601688718 # initialize rs2
mulh x21, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x2335539a3625cf85 # initialize rs1
li x29, 0xb7ce2441a7b78a5c # initialize rs2
mulh x6, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x898dd4da4f248690 # initialize rs1
li x1, 0x615762beb179d2b5 # initialize rs2
mulh x8, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x4b81a1f3fdb89b23 # initialize rs1
li x7, 0x7d3d9f68d88fc697 # initialize rs2
mulh x27, x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xe6735012cee645c4 # initialize rs1
li x23, 0x708bbac82ce1d522 # initialize rs2
mulh x10, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xc43ac81ad4e59d53 # initialize rs1
li x14, 0x0b9c6987bc4b94d2 # initialize rs2
mulh x23, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xee0b80241ad72223 # initialize rs1
li x3, 0xdd5a0460f3777de3 # initialize rs2
mulh x26, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x429dee92bd8887b2 # initialize rs1
li x28, 0xf821c629e1e65407 # initialize rs2
mulh x23, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x4c8c367ae4b2bd6c # initialize rs1
li x2, 0xc0f6689621dbd3bc # initialize rs2
mulh x27, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb4b0bf0ec7d47be5 # initialize rs1
li x7, 0x7c5356b00e40f52d # initialize rs2
mulh x2, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x72a8c02b093be98a # initialize rs1
li x17, 0x4104d2ec8c133751 # initialize rs2
mulh x30, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x664878c038fb17e2 # initialize rs1
li x1, 0x68b60bce03736311 # initialize rs2
mulh x22, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xbc6b6a6c54607916 # initialize rs1
li x30, 0xdddfacf7c0f599b8 # initialize rs2
mulh x6, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xeddad03428ecc72c # initialize rs1
li x11, 0x0c268657e260c599 # initialize rs2
mulh x1, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xc8b6089538ff6774 # initialize rs1
li x11, 0x82a7ab543208eb09 # initialize rs2
mulh x14, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xb99b54fb9dbaf5a4 # initialize rs1
li x28, 0x3db5eacda028c872 # initialize rs2
mulh x21, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x71b0a2fd262d898d # initialize rs1
li x18, 0xa5ba2b1046a795c1 # initialize rs2
mulh x11, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x8c3d01d3c8189b9e # initialize rs1
li x14, 0xb51631acdd8a5cb1 # initialize rs2
mulh x12, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x23, 0xbfab06704afb61cf # initialize rs1
li x0, 0x4e146f60cdd24804 # initialize rs2
mulh x11, x23, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x5, 0x39a54f677fb430e0 # initialize rs1
li x1, 0xdfbac7af97fea15e # initialize rs2
mulh x16, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x31, 0xab85d3444e02d517 # initialize rs1
li x2, 0xed1d35cec17c5eb0 # initialize rs2
mulh x14, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x31, 0xfd01fd2d88e4941d # initialize rs1
li x3, 0x24b7e490ec396390 # initialize rs2
mulh x16, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x23, 0x779e428cf5ebb374 # initialize rs1
li x4, 0x318f4537259ddf32 # initialize rs2
mulh x20, x23, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x26, 0x58ce66f99bd01326 # initialize rs1
li x5, 0x381f009fb7af5f2b # initialize rs2
mulh x12, x26, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x23, 0x08431d66d84c3920 # initialize rs1
li x6, 0x969609902bdf41aa # initialize rs2
mulh x15, x23, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x15, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x4a753bb2c6e61c70 # initialize rs1
li x7, 0x430ba67114ecd7cf # initialize rs2
mulh x20, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x2, 0x8b5b6b8c425fb278 # initialize rs1
li x8, 0x5f70248616bacd46 # initialize rs2
mulh x19, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x22, 0x30e705558967a6af # initialize rs1
li x9, 0x0f6802394795aba5 # initialize rs2
mulh x1, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x14, 0x015c66bb993ec6d7 # initialize rs1
li x10, 0xc3483849a98b85a0 # initialize rs2
mulh x8, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x17, 0x8430693ab87a1334 # initialize rs1
li x11, 0x4f5307a0fd50bcbf # initialize rs2
mulh x12, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x31, 0x66a336574fc23c18 # initialize rs1
li x12, 0x9f614e9ca0cfd601 # initialize rs2
mulh x23, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x20, 0x3f2eeaeead464bfc # initialize rs1
li x13, 0xa8e0dd0008d58be0 # initialize rs2
mulh x2, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x1, 0xab05d7c6c4dce3d9 # initialize rs1
li x14, 0x5431bbf333eca370 # initialize rs2
mulh x27, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x20, 0x858d7fd070242b66 # initialize rs1
li x15, 0x5a439106652bd99b # initialize rs2
mulh x8, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x1, 0x9860181ecb2330c6 # initialize rs1
li x16, 0xe4279381ecf298ba # initialize rs2
mulh x22, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x5, 0xf5a8bd94e3b915f1 # initialize rs1
li x17, 0x32b4e31f9e63cd66 # initialize rs2
mulh x18, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x29, 0xacbb3252d0511cd6 # initialize rs1
li x18, 0xbbf193d12d5bb516 # initialize rs2
mulh x15, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x15, 0xe9b3a823aea1bc69 # initialize rs1
li x19, 0x24bf121a8538d60a # initialize rs2
mulh x24, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x28, 0x0eafa30b57fe91a5 # initialize rs1
li x20, 0x771b3f5dbdd6ed3f # initialize rs2
mulh x13, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x25, 0xa94d6f60bc2f6776 # initialize rs1
li x21, 0x4edbc0150a690ab9 # initialize rs2
mulh x26, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x23, 0x00b08e4385a2a4e7 # initialize rs1
li x22, 0xfcc3ade7130db407 # initialize rs2
mulh x14, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x17, 0x1e98b148526c5c86 # initialize rs1
li x23, 0xe427a162893736b1 # initialize rs2
mulh x20, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x6, 0x02eb60b103cfc76c # initialize rs1
li x24, 0x84077a151cc9e701 # initialize rs2
mulh x15, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x14, 0x4413cc5a2ccf450f # initialize rs1
li x25, 0xd74ead0956e7fcad # initialize rs2
mulh x1, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x12, 0x62bbc6f2f9160df6 # initialize rs1
li x26, 0x102c128072ac1148 # initialize rs2
mulh x15, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x25, 0xb9bc82be9a4ac26d # initialize rs1
li x27, 0x165932a8069f9ae3 # initialize rs2
mulh x17, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x12, 0x8f64d362a239c983 # initialize rs1
li x28, 0x0795143c8e75850a # initialize rs2
mulh x18, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x26, 0xeac9dbc48d076b48 # initialize rs1
li x29, 0x07a62358d448d7f9 # initialize rs2
mulh x16, x26, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x7, 0xac17d17700b560f0 # initialize rs1
li x30, 0x695945bcf51ce3cd # initialize rs2
mulh x15, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x5, 0xb806f811f5704e3d # initialize rs1
li x31, 0xafa0ec9ce11cceb8 # initialize rs2
mulh x2, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 504)

# Testcase cp_rd (Test destination rd = x0)
li x11, 0x12ecff13fe2374c2 # initialize rs1
li x26, 0xef56bd7fc2a2219b # initialize rs2
mulh x0, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x19, 0xaeeb6b1551bb8654 # initialize rs1
li x20, 0x2dd93a8b4dad7b11 # initialize rs2
mulh x1, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x13, 0xa6726023e6619f41 # initialize rs1
li x12, 0xc86bc0a5aef65f26 # initialize rs2
mulh x2, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x17, 0x6066526b0f5e54b3 # initialize rs1
li x10, 0x03c6638b9dc7ff71 # initialize rs2
mulh x3, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x52036ca0152524ee # initialize rs1
li x3, 0xced705b8dd1bba7c # initialize rs2
mulh x4, x29, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x4, 0x0036db379bf8d7a6 # initialize rs1
li x28, 0x22b233fbedc9c5c1 # initialize rs2
mulh x5, x4, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x1, 0x414c08638ce1ef6a # initialize rs1
li x20, 0x3225365c6ddcc441 # initialize rs2
mulh x6, x1, x20 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0x97fd24bc9787b78d # initialize rs1
li x16, 0xa448ef8f1a92037b # initialize rs2
mulh x7, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x2, 0x49c11412c7dd4c0a # initialize rs1
li x14, 0x24e2038eedee4423 # initialize rs2
mulh x8, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x17, 0x151cb813c899b951 # initialize rs1
li x6, 0x242b4e96edfae4c8 # initialize rs2
mulh x9, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x21, 0x414c4f4146bd93cc # initialize rs1
li x25, 0x44a9c534865371d1 # initialize rs2
mulh x10, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x31, 0xf7a5fbade48043f9 # initialize rs1
li x27, 0xf2d40041d66d4d65 # initialize rs2
mulh x11, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x10, 0x43a7f82ee717aadb # initialize rs1
li x25, 0x5cc7cee8e6c651ac # initialize rs2
mulh x12, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x9, 0x2a8ff92f1c68d10a # initialize rs1
li x26, 0xdced3d09a848fa2c # initialize rs2
mulh x13, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x5, 0x85d4b39ce42c1a9d # initialize rs1
li x13, 0x0d6b2757195693f4 # initialize rs2
mulh x14, x5, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x21, 0xa124af07ef465cf1 # initialize rs1
li x24, 0xb85190f2f123bdb1 # initialize rs2
mulh x15, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x28, 0x24cad08ad4069144 # initialize rs1
li x12, 0x713bd3bb7603814e # initialize rs2
mulh x16, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x19, 0xdd3b7acd2659bb91 # initialize rs1
li x31, 0x8cd340c105c2221e # initialize rs2
mulh x17, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x9, 0x3fa4497f709165c8 # initialize rs1
li x15, 0x1ce583e9587572a5 # initialize rs2
mulh x18, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x8, 0x433744369b6fb262 # initialize rs1
li x19, 0xb2719c073bf6e0a0 # initialize rs2
mulh x19, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x16, 0x95b73873e30cb8b2 # initialize rs1
li x15, 0x63695d535091df15 # initialize rs2
mulh x20, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x2, 0x35dd75772ed7cf5c # initialize rs1
li x18, 0x437c48e954546ae8 # initialize rs2
mulh x21, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x11, 0x70067fa6c4fb22b9 # initialize rs1
li x16, 0xb3e207b27dcb36cc # initialize rs2
mulh x22, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0x9c815873aecf1ff4 # initialize rs1
li x15, 0x933c043f9ec4fcac # initialize rs2
mulh x23, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x21, 0xc299898295a7643e # initialize rs1
li x24, 0x4cd5def89098841a # initialize rs2
mulh x24, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x23, 0x6e7a19da658d5339 # initialize rs1
li x28, 0xfbbcb5e8983a6064 # initialize rs2
mulh x25, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x22, 0xc164f04e3e17d0cc # initialize rs1
li x16, 0x92d0dc7d8019f4d0 # initialize rs2
mulh x26, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x2, 0x69ea1e2cafe2e712 # initialize rs1
li x25, 0xd09c2f96648622a2 # initialize rs2
mulh x27, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x15, 0x579c364c369171a3 # initialize rs1
li x21, 0xb91bc27e54899c80 # initialize rs2
mulh x28, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x26, 0x50dfe1831a5788e7 # initialize rs1
li x16, 0x2ed698be2de939d2 # initialize rs2
mulh x29, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x20, 0xc6327d80a4ade92a # initialize rs1
li x2, 0xd9d288d9d1630bae # initialize rs2
mulh x30, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x31, 0xdeab4569045e9b9e # initialize rs1
li x3, 0x1fcb8f1042437bd7 # initialize rs2
mulh x31, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x11, 0x0000000000000000 # initialize rs1
li x14, 0x6ee88c3ba9bf6168 # initialize rs2
mulh x21, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x8, 0x0000000000000001 # initialize rs1
li x19, 0x13a093b587bd98be # initialize rs2
mulh x17, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x12, 0x2329ef0378765941 # initialize rs2
mulh x6, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x27, 0x8000000000000000 # initialize rs1
li x6, 0x3e3b8c2ab26d9560 # initialize rs2
mulh x5, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x20, 0x8000000000000001 # initialize rs1
li x31, 0x33d09a272d64f896 # initialize rs2
mulh x19, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x16, 0x7fffffffffffffff # initialize rs1
li x9, 0x3b2f8a0fcdbd0c53 # initialize rs2
mulh x17, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x18, 0x7ffffffffffffffe # initialize rs1
li x14, 0x969094273f449174 # initialize rs2
mulh x17, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x7, 0x869cb5b96cd7859b # initialize rs2
mulh x27, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x20, 0xfffffffffffffffe # initialize rs1
li x2, 0x8dcb53087ea567b5 # initialize rs2
mulh x17, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x40cd562935ff866c # initialize rs2
mulh x5, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x22376c86a69f46aa # initialize rs2
mulh x15, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x3, 0x5555555555555555 # initialize rs1
li x25, 0x5ba7cb5758b075ce # initialize rs2
mulh x20, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x26, 0x00000000ffffffff # initialize rs1
li x2, 0x9a84b10bb068e326 # initialize rs2
mulh x25, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x17, 0xd11c42c22591fa20 # initialize rs2
mulh x31, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x2, 0x0000000100000000 # initialize rs1
li x20, 0x3550b2ff432e4576 # initialize rs2
mulh x15, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x1, 0x0000000100000001 # initialize rs1
li x6, 0xe82ea1c09836a063 # initialize rs2
mulh x2, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x14, 0x017f2442ff4d0c32 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mulh x23, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x22, 0xb43e6d47639e5b5a # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
mulh x2, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x6, 0xd7766b87859e5e43 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
mulh x3, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x21, 0x85f6e4231818fe18 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
mulh x19, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x16, 0xb643797f33f152e1 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulh x13, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x13, 0xcf9a91461410525a # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
mulh x19, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x7, 0x9ebf9df5a1268d54 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
mulh x1, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x8, 0xbab63708b061b6e8 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulh x6, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x28, 0xea8b6d1c3ff193f5 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
mulh x17, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x29, 0x717471ae72bdc953 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
mulh x31, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x31, 0x1275e0c46088c541 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x21, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x19, 0x8ba22b82bb1dcb6c # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
mulh x31, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x26, 0x16e42fccc486b4b9 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
mulh x28, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x26, 0x2bddaf6088146880 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
mulh x25, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x25, 0xf96167053e1d6b4b # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mulh x13, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x10, 0x89e6c75eae4961a9 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
mulh x16, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x5, 0x0000000000000000 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
mulh x23, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x21, 0x0000000000000000 # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
mulh x25, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x11, 0x0000000000000000 # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
mulh x1, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x10, 0x0000000000000000 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
mulh x13, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x16, 0x0000000000000000 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
mulh x3, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x3, 0x0000000000000000 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
mulh x30, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000000000000 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
mulh x21, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x23, 0x0000000000000000 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
mulh x7, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
mulh x17, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x7, 0x0000000000000000 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
mulh x14, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x0000000000000000 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x2, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x8, 0x0000000000000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulh x21, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x20, 0x0000000000000000 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
mulh x10, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x30, 0x0000000000000000 # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
mulh x27, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x11, 0x0000000000000000 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mulh x8, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x6, 0x0000000000000000 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
mulh x9, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x17, 0x0000000000000001 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
mulh x6, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x27, 0x0000000000000001 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
mulh x12, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x24, 0x0000000000000001 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
mulh x23, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x11, 0x0000000000000001 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
mulh x18, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x24, 0x0000000000000001 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mulh x9, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000001 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
mulh x17, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x5, 0x0000000000000001 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
mulh x11, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x16, 0x0000000000000001 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
mulh x17, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x11, 0x0000000000000001 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
mulh x6, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x5, 0x0000000000000001 # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
mulh x27, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000000000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x28, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x13, 0x0000000000000001 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
mulh x18, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x1, 0x0000000000000001 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
mulh x27, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x9, 0x0000000000000001 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
mulh x25, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x1, 0x0000000000000001 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
mulh x5, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x2, 0x0000000000000001 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
mulh x10, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x14, 0x0000000000000002 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
mulh x22, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x11, 0x0000000000000002 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
mulh x10, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x30, 0x0000000000000002 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
mulh x10, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x12, 0x0000000000000002 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
mulh x9, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x21, 0x0000000000000002 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mulh x17, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000002 # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
mulh x18, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000000000002 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
mulh x30, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x1, 0x0000000000000002 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
mulh x25, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x3, 0x0000000000000002 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
mulh x31, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x10, 0x0000000000000002 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
mulh x29, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000000000002 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x3, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x28, 0x0000000000000002 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
mulh x9, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x2, 0x0000000000000002 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
mulh x19, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x7, 0x0000000000000002 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
mulh x3, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x2, 0x0000000000000002 # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
mulh x7, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x19, 0x0000000000000002 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
mulh x14, x19, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x19, 0x8000000000000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
mulh x6, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x17, 0x8000000000000000 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
mulh x14, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x6, 0x8000000000000000 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
mulh x22, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x31, 0x8000000000000000 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
mulh x10, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x13, 0x8000000000000000 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
mulh x5, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
mulh x5, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x18, 0x8000000000000000 # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
mulh x23, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x28, 0x8000000000000000 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
mulh x22, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x3, 0x8000000000000000 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
mulh x23, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x13, 0x8000000000000000 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
mulh x10, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x8000000000000000 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x12, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x2, 0x8000000000000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mulh x16, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x16, 0x8000000000000000 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
mulh x17, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x18, 0x8000000000000000 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
mulh x21, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x5, 0x8000000000000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
mulh x26, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x7, 0x8000000000000000 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulh x15, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x15, 0x8000000000000001 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
mulh x24, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x20, 0x8000000000000001 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
mulh x24, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x26, 0x8000000000000001 # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
mulh x18, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x26, 0x8000000000000001 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
mulh x2, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x1, 0x8000000000000001 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
mulh x17, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x21, 0x8000000000000001 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
mulh x29, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x31, 0x8000000000000001 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
mulh x20, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x26, 0x8000000000000001 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
mulh x15, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
mulh x26, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x6, 0x8000000000000001 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulh x22, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x8000000000000001 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x16, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x18, 0x8000000000000001 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mulh x10, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
mulh x19, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x28, 0x8000000000000001 # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
mulh x2, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x29, 0x8000000000000001 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
mulh x16, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x26, 0x8000000000000001 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
mulh x5, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x23, 0x7fffffffffffffff # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
mulh x26, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x20, 0x7fffffffffffffff # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
mulh x8, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x9, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
mulh x5, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x7, 0x7fffffffffffffff # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
mulh x25, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x26, 0x7fffffffffffffff # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
mulh x16, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x14, 0x7fffffffffffffff # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
mulh x30, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x20, 0x7fffffffffffffff # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
mulh x28, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x11, 0x7fffffffffffffff # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mulh x25, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x18, 0x7fffffffffffffff # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
mulh x13, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x13, 0x7fffffffffffffff # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
mulh x14, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x7fffffffffffffff # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x13, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x27, 0x7fffffffffffffff # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
mulh x19, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x25, 0x7fffffffffffffff # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
mulh x18, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x30, 0x7fffffffffffffff # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
mulh x11, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x27, 0x7fffffffffffffff # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
mulh x31, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x21, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
mulh x26, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x16, 0x7ffffffffffffffe # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
mulh x6, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x23, 0x7ffffffffffffffe # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
mulh x25, x23, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x6, 0x7ffffffffffffffe # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mulh x3, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
mulh x2, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x15, 0x7ffffffffffffffe # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulh x5, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x1, 0x7ffffffffffffffe # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
mulh x12, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x8, 0x7ffffffffffffffe # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
mulh x19, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x26, 0x7ffffffffffffffe # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
mulh x16, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x19, 0x7ffffffffffffffe # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
mulh x7, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x20, 0x7ffffffffffffffe # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulh x5, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x7ffffffffffffffe # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x16, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0x7ffffffffffffffe # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
mulh x27, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x27, 0x7ffffffffffffffe # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
mulh x14, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x3, 0x7ffffffffffffffe # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
mulh x24, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x5, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
mulh x18, x5, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x14, 0x7ffffffffffffffe # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
mulh x6, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x27, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
mulh x11, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x5, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
mulh x8, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x3, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
mulh x11, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x21, 0xffffffffffffffff # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
mulh x31, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x3, 0xffffffffffffffff # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
mulh x18, x3, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
mulh x6, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mulh x20, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x24, 0xffffffffffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulh x29, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x16, 0xffffffffffffffff # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
mulh x3, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x8, 0xffffffffffffffff # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
mulh x26, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0xffffffffffffffff # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x26, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x1, 0xffffffffffffffff # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulh x7, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x16, 0xffffffffffffffff # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulh x23, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x5, 0xffffffffffffffff # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
mulh x21, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x19, 0xffffffffffffffff # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
mulh x10, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x16, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
mulh x30, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x11, 0xfffffffffffffffe # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
mulh x13, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x2, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
mulh x27, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x29, 0xfffffffffffffffe # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
mulh x19, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x21, 0xfffffffffffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mulh x5, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x2, 0xfffffffffffffffe # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
mulh x11, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x13, 0xfffffffffffffffe # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
mulh x31, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x3, 0xfffffffffffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
mulh x13, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x13, 0xfffffffffffffffe # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
mulh x1, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
mulh x19, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x1, 0xfffffffffffffffe # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
mulh x25, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xfffffffffffffffe # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x27, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x27, 0xfffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mulh x21, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x28, 0xfffffffffffffffe # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
mulh x12, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mulh x10, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x22, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
mulh x31, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x6, 0xfffffffffffffffe # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
mulh x2, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
mulh x21, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
mulh x9, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
mulh x26, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
mulh x3, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
mulh x19, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
mulh x27, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
mulh x20, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
mulh x25, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
mulh x27, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
mulh x30, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x5, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
mulh x2, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
mulh x15, x12, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
mulh x24, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
mulh x18, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
mulh x24, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
mulh x15, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
mulh x17, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
mulh x7, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
mulh x6, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mulh x24, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
mulh x6, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
mulh x26, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
mulh x1, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
mulh x13, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
mulh x17, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x30, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mulh x2, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
mulh x3, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
mulh x14, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
mulh x12, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
mulh x30, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x31, 0x5555555555555555 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
mulh x1, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x25, 0x5555555555555555 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
mulh x6, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x26, 0x5555555555555555 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
mulh x25, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x25, 0x5555555555555555 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
mulh x23, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x19, 0x5555555555555555 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mulh x24, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x7, 0x5555555555555555 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
mulh x29, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x17, 0x5555555555555555 # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
mulh x10, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x27, 0x5555555555555555 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
mulh x29, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x16, 0x5555555555555555 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
mulh x25, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x13, 0x5555555555555555 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
mulh x18, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x5555555555555555 # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x22, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
mulh x13, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x13, 0x5555555555555555 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
mulh x24, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x12, 0x5555555555555555 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
mulh x2, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x20, 0x5555555555555555 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
mulh x31, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x13, 0x5555555555555555 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulh x22, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x6, 0x00000000ffffffff # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
mulh x19, x6, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x2, 0x00000000ffffffff # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
mulh x17, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x31, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
mulh x24, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x24, 0x00000000ffffffff # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
mulh x22, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x2, 0x00000000ffffffff # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
mulh x16, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x8, 0x00000000ffffffff # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
mulh x16, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x11, 0x00000000ffffffff # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
mulh x3, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
mulh x9, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x19, 0x00000000ffffffff # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
mulh x7, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x17, 0x00000000ffffffff # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
mulh x1, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x00000000ffffffff # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x18, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x20, 0x00000000ffffffff # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
mulh x28, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x10, 0x00000000ffffffff # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
mulh x7, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x29, 0x00000000ffffffff # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
mulh x9, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x10, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
mulh x13, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x27, 0x00000000ffffffff # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
mulh x6, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x8, 0x00000000fffffffe # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
mulh x18, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x18, 0x00000000fffffffe # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
mulh x5, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x14, 0x00000000fffffffe # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
mulh x5, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x17, 0x00000000fffffffe # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
mulh x26, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x2, 0x00000000fffffffe # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
mulh x31, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x14, 0x00000000fffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
mulh x10, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x11, 0x00000000fffffffe # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mulh x24, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x24, 0x00000000fffffffe # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
mulh x16, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
mulh x20, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x22, 0x00000000fffffffe # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
mulh x20, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x00000000fffffffe # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x16, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x8, 0x00000000fffffffe # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
mulh x27, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x20, 0x00000000fffffffe # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
mulh x30, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mulh x31, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x25, 0x00000000fffffffe # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
mulh x18, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x6, 0x00000000fffffffe # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
mulh x1, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x19, 0x0000000100000000 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
mulh x28, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x23, 0x0000000100000000 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
mulh x6, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x31, 0x0000000100000000 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
mulh x18, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x28, 0x0000000100000000 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
mulh x19, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x8, 0x0000000100000000 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
mulh x12, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000000 # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulh x30, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000100000000 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
mulh x7, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x8, 0x0000000100000000 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
mulh x5, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x20, 0x0000000100000000 # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
mulh x23, x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x19, 0x0000000100000000 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
mulh x8, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000100000000 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x12, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x14, 0x0000000100000000 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mulh x3, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x13, 0x0000000100000000 # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
mulh x19, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x2, 0x0000000100000000 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mulh x13, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x16, 0x0000000100000000 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
mulh x19, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x22, 0x0000000100000000 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
mulh x2, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x2, 0x0000000100000001 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
mulh x16, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x8, 0x0000000100000001 # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
mulh x20, x8, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x7, 0x0000000100000001 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
mulh x21, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x19, 0x0000000100000001 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
mulh x16, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x3, 0x0000000100000001 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
mulh x27, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000001 # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulh x5, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000100000001 # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
mulh x25, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x31, 0x0000000100000001 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
mulh x27, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x26, 0x0000000100000001 # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
mulh x10, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x24, 0x0000000100000001 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
mulh x15, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x0000000100000001 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulh x13, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x29, 0x0000000100000001 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
mulh x14, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x29, 0x0000000100000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
mulh x27, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x16, 0x0000000100000001 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
mulh x5, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x7, 0x0000000100000001 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
mulh x17, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x17, 0x0000000100000001 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
mulh x23, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x46f6fa23e2cabe95 # initialize rs1
li x0, 0x10e3c45ff3440172 # initialize rs2
mulh x25, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x81d9beac1fa8b005 # initialize rs1
li x1, 0xcc7ab83db7c95d82 # initialize rs2
mulh x14, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xe9c0a2de96485efb # initialize rs1
li x2, 0xa016e42d474cdc1d # initialize rs2
mulh x17, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x2841b1753102fa8d # initialize rs1
li x3, 0x5decd66c31908462 # initialize rs2
mulh x18, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x410f838dc2c37ad5 # initialize rs1
li x4, 0xa2b66ab57663cabb # initialize rs2
mulh x8, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xfc1303dec2bc6da6 # initialize rs1
li x5, 0x9aec81f7d70fa652 # initialize rs2
mulh x21, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xcaa92c375dfbab2d # initialize rs1
li x6, 0x31ca4557137ef6d6 # initialize rs2
mulh x18, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x18, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9d8e12968f9ee381 # initialize rs1
li x7, 0xb1cc357ce02e20d0 # initialize rs2
mulh x5, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xd1c185da3a62d836 # initialize rs1
li x8, 0x3696e975948e20dc # initialize rs2
mulh x1, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xa4c726d34d7a6c73 # initialize rs1
li x9, 0x1c914720c26b3a13 # initialize rs2
mulh x24, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x5240e7e798d26634 # initialize rs1
li x10, 0x776649469ec485b8 # initialize rs2
mulh x17, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x7e52dd50e727a890 # initialize rs1
li x11, 0x15a044584ab09a9a # initialize rs2
mulh x20, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xad84b30026306a54 # initialize rs1
li x12, 0x092cc1bc6fe4cd52 # initialize rs2
mulh x31, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x2ed81e4a26168f5a # initialize rs1
li x13, 0xa9fc2dcdd8eaa04c # initialize rs2
mulh x29, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x92f67c6622d086db # initialize rs1
li x14, 0x3bf22102676b038c # initialize rs2
mulh x10, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x1ca49456fe4a8cfa # initialize rs1
li x15, 0xa60b38616603b80f # initialize rs2
mulh x18, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xcc1ce131e2a288c9 # initialize rs1
li x16, 0x92c6808fee1d81ff # initialize rs2
mulh x26, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x3032c25d688de187 # initialize rs1
li x17, 0x38b0674ee19635ce # initialize rs2
mulh x30, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x37c4616e669b4e6d # initialize rs1
li x18, 0xa50d11d4a6ffa349 # initialize rs2
mulh x11, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x1fae67ec7ffa5b97 # initialize rs1
li x19, 0xa7c3f5848cce8253 # initialize rs2
mulh x28, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x3353c0c7245f8684 # initialize rs1
li x20, 0xc8cf9c6e5480b616 # initialize rs2
mulh x25, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x781330d026ceaf8b # initialize rs1
li x21, 0xfe94e72107124eb0 # initialize rs2
mulh x17, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xfbc3f296d443426c # initialize rs1
li x22, 0x5cb8913e0ee88bba # initialize rs2
mulh x29, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xeb82df99a801cead # initialize rs1
li x23, 0xd265ab21b7f0c949 # initialize rs2
mulh x27, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x735a215047003e73 # initialize rs1
li x24, 0x97d558893e6c235e # initialize rs2
mulh x23, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xeaa4df51bdfc44ed # initialize rs1
li x25, 0xc2f717eadc06b44f # initialize rs2
mulh x26, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xac17cedbb6ef0d97 # initialize rs1
li x26, 0x862d73138ee9b780 # initialize rs2
mulh x9, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xd00c2af1f0cd076c # initialize rs1
li x27, 0xc904615eed1a0433 # initialize rs2
mulh x13, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x3aa643cecd490f13 # initialize rs1
li x28, 0xf3c6ee4ca0b33107 # initialize rs2
mulh x26, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x1794fc8a6d71ef34 # initialize rs1
li x29, 0x28e87ef9bff4e16d # initialize rs2
mulh x30, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x306a0d7c5e842a3d # initialize rs1
li x30, 0xb94dd85f8a2ab94c # initialize rs2
mulh x5, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x8b806cc3be02fca7 # initialize rs1
li x31, 0xb6d1443d22aae32b # initialize rs2
mulh x29, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x3350a7b5f00ce5e8 # initialize rs1
li x15, 0x228af073e60d0993 # initialize rs2
mulh x0, x0, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xbb41430de19ffc1e # initialize rs1
li x22, 0x2ed2d9cb51a3eb35 # initialize rs2
mulh x1, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xfd892c4791b0a659 # initialize rs1
li x21, 0xccf6a4a6d8bb7246 # initialize rs2
mulh x2, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x98800b4ba5fb4f27 # initialize rs1
li x27, 0x239cd86ccfe132e4 # initialize rs2
mulh x3, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x47f1a837c7eae7a8 # initialize rs1
li x16, 0x7aa0bbddab29439a # initialize rs2
mulh x4, x4, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x4ff40ca7fc49caa8 # initialize rs1
li x21, 0x0123186f1c42fcfe # initialize rs2
mulh x5, x5, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xff8237be7cf8e91b # initialize rs1
li x8, 0x2cb78c3510b714d8 # initialize rs2
mulh x6, x6, x8 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf04522276363f8c5 # initialize rs1
li x30, 0xed61a5b52176b627 # initialize rs2
mulh x7, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x6d3150d300371a1c # initialize rs1
li x13, 0x9c78c849a5ba3c2e # initialize rs2
mulh x8, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xf4c838019ea5acc0 # initialize rs1
li x26, 0x92ee0a9c29aa71d3 # initialize rs2
mulh x9, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x3e4187f60a910672 # initialize rs1
li x20, 0x8956c0e2aeecd037 # initialize rs2
mulh x10, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xfb07154fe916c1d3 # initialize rs1
li x1, 0x7852809b78212236 # initialize rs2
mulh x11, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x824beec65e5198fb # initialize rs1
li x13, 0x53442a402186f938 # initialize rs2
mulh x12, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x4e1cad42fd9095f5 # initialize rs1
li x8, 0xea04bbe46e49db05 # initialize rs2
mulh x13, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x78f5a6dd45811470 # initialize rs1
li x8, 0x35b023b69d041895 # initialize rs2
mulh x14, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xa6f940243043a29b # initialize rs1
li x26, 0x46b53dcb0e8ab7b1 # initialize rs2
mulh x15, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x73a6e1f65344de1c # initialize rs1
li x20, 0x9da39293a545e3be # initialize rs2
mulh x16, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x1fee855ef05d1045 # initialize rs1
li x25, 0xdf07fdbf54715b7a # initialize rs2
mulh x17, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x4a29d7450135bf8a # initialize rs1
li x23, 0x3229570dc12ae81c # initialize rs2
mulh x18, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xa22e2592360488f4 # initialize rs1
li x23, 0x448fa278175a84e3 # initialize rs2
mulh x19, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x6b0e65496fd0a6bb # initialize rs1
li x19, 0x383c8ce5fcc63b82 # initialize rs2
mulh x20, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x5a1b8fc54d27c7b5 # initialize rs1
li x15, 0xa5a58f7e3ab1ae3c # initialize rs2
mulh x21, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xbe85c940b5b2636c # initialize rs1
li x15, 0x9486cca53c5e6f64 # initialize rs2
mulh x22, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xaf8134f30cae0be9 # initialize rs1
li x29, 0xcee968a165cfc01c # initialize rs2
mulh x23, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x04619b78280b2d72 # initialize rs1
li x28, 0x8d89682b34509af4 # initialize rs2
mulh x24, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xc1545b646b76104c # initialize rs1
li x31, 0x6ade29fa9ae93a40 # initialize rs2
mulh x25, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x59835a17b6ef81c7 # initialize rs1
li x29, 0x53e77dcb268606b8 # initialize rs2
mulh x26, x26, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x04db5ec8c4f8fb19 # initialize rs1
li x20, 0x500926bde4f393cf # initialize rs2
mulh x27, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x87b7a199ac8c2e9f # initialize rs1
li x6, 0x052943ee0fb4cd1c # initialize rs2
mulh x28, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x3f7bcf58d1dc7e82 # initialize rs1
li x6, 0x504c1b72d29693c0 # initialize rs2
mulh x29, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x028f554acbefbe19 # initialize rs1
li x11, 0xbfb6cafd77c6b978 # initialize rs2
mulh x30, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x74cb8c3218f202ad # initialize rs1
li x25, 0xcaeb820a80536a69 # initialize rs2
mulh x31, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x23, 0x105be4385f7bb6af # initialize rs1
li x0, 0x2d1b3758fe7832dc # initialize rs2
mulh x0, x23, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x13, 0x59a9e94c9a9c144e # initialize rs1
li x1, 0xe1ff3e8b0ed3e4e2 # initialize rs2
mulh x1, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x15, 0xca8d59592e633f32 # initialize rs1
li x2, 0x756f75c6bf0fae52 # initialize rs2
mulh x2, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x15, 0xa445b18a6872f06d # initialize rs1
li x3, 0x1d1455e2e2019382 # initialize rs2
mulh x3, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x25, 0x5b0c813b09f8ca9b # initialize rs1
li x4, 0x4bfaa00c82edeb53 # initialize rs2
mulh x4, x25, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x4, 0xc8f05b7c594993be # initialize rs1
li x5, 0xdeccc8bb0fa8f157 # initialize rs2
mulh x5, x4, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x28, 0x765f10ac21013f8c # initialize rs1
li x6, 0xf0687d74e3e1f00c # initialize rs2
mulh x6, x28, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x9, 0x8b7f58eea3c47092 # initialize rs1
li x7, 0x245dfd6dd8279e34 # initialize rs2
mulh x7, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xe25a6c9db27b0b1b # initialize rs1
li x8, 0xa9cb77101a6fbbe6 # initialize rs2
mulh x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x12, 0x3f386544894711b2 # initialize rs1
li x9, 0xce0c8d863c06aafc # initialize rs2
mulh x9, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x24, 0x88b70c8a1ea8963d # initialize rs1
li x10, 0x87cb9cae545a7ad3 # initialize rs2
mulh x10, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x26, 0x752d43c4c8116817 # initialize rs1
li x11, 0x12cac251b86a78fe # initialize rs2
mulh x11, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x5, 0x8b87d26fdee56f4f # initialize rs1
li x12, 0x97cf00cc73f186cf # initialize rs2
mulh x12, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x74a144feabaf39e4 # initialize rs1
li x13, 0x6a87155a749eb570 # initialize rs2
mulh x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x6, 0xaf3522151ebe711c # initialize rs1
li x14, 0xf17e092a756693ad # initialize rs2
mulh x14, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x19, 0x51efdd773259896c # initialize rs1
li x15, 0x5f3daa6b082f4568 # initialize rs2
mulh x15, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x20, 0x597a0cbbeae94862 # initialize rs1
li x16, 0x8b50d279ccb96d74 # initialize rs2
mulh x16, x20, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x1, 0xd4cd445b1414a986 # initialize rs1
li x17, 0x029fca87e54473b3 # initialize rs2
mulh x17, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x8, 0x02b2f4d7c3a544b1 # initialize rs1
li x18, 0x179096804fc67324 # initialize rs2
mulh x18, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x6, 0x08ef23fff526610d # initialize rs1
li x19, 0xd074dd9b24ea9dc0 # initialize rs2
mulh x19, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x25, 0x7b04e09394eaf686 # initialize rs1
li x20, 0xad384ee6ce6d022c # initialize rs2
mulh x20, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x6, 0x5c89dbc508c42b85 # initialize rs1
li x21, 0x2479cc70f8b21669 # initialize rs2
mulh x21, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x8, 0x5b3d8646fb51f7a5 # initialize rs1
li x22, 0xf826e77578142fea # initialize rs2
mulh x22, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x21, 0x84188cce1b9ac6c0 # initialize rs1
li x23, 0xa582cd9f6a06fdf8 # initialize rs2
mulh x23, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x25, 0x7e89fc9abc37c671 # initialize rs1
li x24, 0x53af92a38261ef8c # initialize rs2
mulh x24, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x15, 0xd82c9bf84d583179 # initialize rs1
li x25, 0xd4b809781b0eb013 # initialize rs2
mulh x25, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x21, 0x0f453a966e581ea3 # initialize rs1
li x26, 0x175713a0c421d636 # initialize rs2
mulh x26, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x19, 0xe2f43ce9f281956e # initialize rs1
li x27, 0x2063ed2cf6e898a3 # initialize rs2
mulh x27, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x25, 0xee693d0d53142e79 # initialize rs1
li x28, 0xeb3c6b85c42465aa # initialize rs2
mulh x28, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x5, 0x8fa49583b2b3d5f8 # initialize rs1
li x29, 0x1640bd6982fec86e # initialize rs2
mulh x29, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x25, 0xe68d0551e2b722e0 # initialize rs1
li x30, 0xbf5fa0242c5b7d61 # initialize rs2
mulh x30, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x19, 0x8e83bd00f577afac # initialize rs1
li x31, 0x240f53bc9bf2bdae # initialize rs2
mulh x31, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xa37c692214d92711 # initialize rs1
li x0, 0x5f4b311b6116cb0a # initialize rs2
mulh x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xcb3ca9b87fba235e # initialize rs1
li x1, 0x71ac07c6abf530fe # initialize rs2
mulh x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x7f3080ace4fd3183 # initialize rs1
li x2, 0x9692d62a31bedecb # initialize rs2
mulh x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x332374d9fe6fc5c6 # initialize rs1
li x3, 0x3a4140867affb924 # initialize rs2
mulh x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x1d3cc3c9f3f370dd # initialize rs1
li x4, 0x860098fd725a5da6 # initialize rs2
mulh x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xbfc95372cd6d0733 # initialize rs1
li x5, 0x54d2e4b5d347e8a5 # initialize rs2
mulh x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x54c93f35103654d2 # initialize rs1
li x6, 0x4cc1baf245852541 # initialize rs2
mulh x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x40a16b0e4c6737d2 # initialize rs1
li x7, 0xc3e1c88d6b6048ea # initialize rs2
mulh x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x721071a44921a77f # initialize rs1
li x8, 0x13ea96e441ba1464 # initialize rs2
mulh x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xdc9889409b83b268 # initialize rs1
li x9, 0xcbf70e2cf70c8e4e # initialize rs2
mulh x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x25834e1b75e82f13 # initialize rs1
li x10, 0x8cc6cd075b17e3e7 # initialize rs2
mulh x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xa96b94fe29404f6d # initialize rs1
li x11, 0xb5af8a221ba0d8d7 # initialize rs2
mulh x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xd92e2a16e2ad81cd # initialize rs1
li x12, 0x8e4514a39d7ff459 # initialize rs2
mulh x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x6ef49cfd096ab144 # initialize rs1
li x13, 0xcc91ba99f4ee432d # initialize rs2
mulh x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x8695025623091afc # initialize rs1
li x14, 0xb8b319eb1f8047db # initialize rs2
mulh x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xd06f7da6929ae5b2 # initialize rs1
li x15, 0x1ad532a619eb8390 # initialize rs2
mulh x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xda0738f4d5cf3684 # initialize rs1
li x16, 0xab9cf3fc5ded9910 # initialize rs2
mulh x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x767a0a323d7fdfe7 # initialize rs1
li x17, 0x44248a5b38023ef9 # initialize rs2
mulh x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x1f711f8b8972e86c # initialize rs1
li x18, 0xaa29276d8eacd35e # initialize rs2
mulh x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x6f18f5bbfe7f4336 # initialize rs1
li x19, 0x3c976e0795082284 # initialize rs2
mulh x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x909de8f7cfd931d9 # initialize rs1
li x20, 0x8569f7c753b2e1be # initialize rs2
mulh x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x433c6ec79253fce4 # initialize rs1
li x21, 0xd8361018f6f20147 # initialize rs2
mulh x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x49f069102bb2006e # initialize rs1
li x22, 0x1190f0820683918e # initialize rs2
mulh x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x686b59bbd645ebda # initialize rs1
li x23, 0x3966615acaba130b # initialize rs2
mulh x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xe71423a4965e8375 # initialize rs1
li x24, 0xedcdbba4dceb7238 # initialize rs2
mulh x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xaea7996ea0d9bc80 # initialize rs1
li x25, 0x86346546a275c1fd # initialize rs2
mulh x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xd1c5448f8ee62eb0 # initialize rs1
li x26, 0x8940aa4962a07d51 # initialize rs2
mulh x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x6a4d65b1650103ca # initialize rs1
li x27, 0xee6ee9b5f3b91e35 # initialize rs2
mulh x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x8c98bf534f32a2d2 # initialize rs1
li x28, 0x5455b2585c5b7cfb # initialize rs2
mulh x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x53aa8d6dbbdfb8c1 # initialize rs1
li x29, 0x1317c3d0992bb3d2 # initialize rs2
mulh x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd1f871093407622c # initialize rs1
li x30, 0xd178193eed606253 # initialize rs2
mulh x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xc16a512ebd337404 # initialize rs1
li x31, 0x86d2bf620b06b33f # initialize rs2
mulh x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x12, x30 # perform first operation
mulh x23, x20, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x13, x15 # perform first operation
mulh x27, x11, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x27, x29 # perform first operation
mulh x14, x18, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x29, x14 # perform first operation
mulh x14, x11, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x17, x9, x31 # perform first operation
mulh x9, x13, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x27, x7, x24 # perform first operation
mulh x7, x14, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x1, x5 # perform first operation
mulh x27, x14, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x19, x14, x11 # perform first operation
mulh x19, x8, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x8, x24, x23 # perform first operation
mulh x8, x12, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x25, x29, x1 # perform first operation
mulh x29, x8, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x16, x21 # perform first operation
mulh x21, x14, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x28, x10, x13 # perform first operation
mulh x26, x8, x5 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-remu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x2e7da555485079af # initialize rs1
li x7, 0xeec1c7fcb0d5abe6 # initialize rs2
remu x21, x0, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x679f256f9345ea39 # initialize rs1
li x10, 0xd81449cfdf5da6b3 # initialize rs2
remu x11, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xb724c957190780b8 # initialize rs1
li x26, 0xc01754454576838d # initialize rs2
remu x6, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xec0341d4b1f2ad7c # initialize rs1
li x10, 0xff6eb51dc14e354e # initialize rs2
remu x24, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xd6b5f9fceaa7e5fb # initialize rs1
li x20, 0xae2ad266766594ea # initialize rs2
remu x2, x4, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xbd65c893e8a426da # initialize rs1
li x9, 0x7da8ceeab57365d3 # initialize rs2
remu x12, x5, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5675f654bcfdfb38 # initialize rs1
li x8, 0x0b167cd0c90eb555 # initialize rs2
remu x20, x6, x8 # perform operation
RVTEST_SIGUPD(x7, x0, x20, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb4aeca4f8addee15 # initialize rs1
li x19, 0xb4f3b044f31a7164 # initialize rs2
remu x26, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x3283bd3ed7ad3a3e # initialize rs1
li x29, 0xbcf01430b3f707d0 # initialize rs2
remu x18, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x67f09aebdef9745a # initialize rs1
li x12, 0x8ddc2cd4179c2e3e # initialize rs2
remu x3, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xb1578e4a300bcc9f # initialize rs1
li x3, 0x9e07187fb7253b83 # initialize rs2
remu x8, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x31e2117a3fdbaec7 # initialize rs1
li x24, 0x5a4d456e64715c77 # initialize rs2
remu x16, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xdc2c780666f0c57a # initialize rs1
li x26, 0x692f599c76af1f40 # initialize rs2
remu x8, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x778b77168293d6ef # initialize rs1
li x19, 0x743088fc908123e1 # initialize rs2
remu x26, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x00cf0054f04adf38 # initialize rs1
li x6, 0xa1101e70a222f546 # initialize rs2
remu x25, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x8d4586c6cfd6aa0d # initialize rs1
li x22, 0x9501c4aaedeaf8fb # initialize rs2
remu x18, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x3c27d1978b595275 # initialize rs1
li x28, 0xa5f920c7dfac8e55 # initialize rs2
remu x5, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x8ddd4a9c6216fd29 # initialize rs1
li x6, 0xe76c3245c3f7a15e # initialize rs2
remu x20, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xd3989d93932000ed # initialize rs1
li x5, 0x6e1301b8fa0b8557 # initialize rs2
remu x19, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x6d153c40cc272de9 # initialize rs1
li x24, 0xe25c6ff32e29e126 # initialize rs2
remu x15, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xb37f51082c0ac96c # initialize rs1
li x10, 0xdbda42cd849bb875 # initialize rs2
remu x1, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x30ef4bedd801c51e # initialize rs1
li x18, 0xf676c81bee9f3c0a # initialize rs2
remu x26, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x52ad87e602250a0a # initialize rs1
li x30, 0x219df6bb5c70bc25 # initialize rs2
remu x27, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xd83a131f3e15ca5f # initialize rs1
li x20, 0xd574ae76284480d8 # initialize rs2
remu x10, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xeca9f6a496fc50ae # initialize rs1
li x7, 0xe6b8e06873eb0022 # initialize rs2
remu x26, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xe62ffde552daad97 # initialize rs1
li x16, 0x8cdfd5c86e767200 # initialize rs2
remu x7, x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xf37aac5e39c2db53 # initialize rs1
li x25, 0xd54cbd1d813c387b # initialize rs2
remu x31, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x539e74fdc0030d9d # initialize rs1
li x15, 0xa68fc8c656052a4d # initialize rs2
remu x30, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xea4bc2c77b27fc87 # initialize rs1
li x23, 0x3b1d966ffde28fef # initialize rs2
remu x30, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x7fd8011ed999088d # initialize rs1
li x5, 0x413623e040f51117 # initialize rs2
remu x20, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xfbc45270db976667 # initialize rs1
li x15, 0x03fdeae4fb5db6d8 # initialize rs2
remu x9, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x9b360ddd7bc5b389 # initialize rs1
li x17, 0x0a68c6ab9a5d19f5 # initialize rs2
remu x3, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x23, 0xf195b2ba79e97598 # initialize rs1
li x0, 0x55e3be5868e8384f # initialize rs2
remu x3, x23, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x29, 0xe783e9f3c113090b # initialize rs1
li x1, 0x7e47d2f810b09e34 # initialize rs2
remu x18, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x9, 0xedb660c3e20b918b # initialize rs1
li x2, 0xcd2161c7d010d00a # initialize rs2
remu x14, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x20, 0x1312b5db6f8c8340 # initialize rs1
li x3, 0x2752bf595c23bbb1 # initialize rs2
remu x30, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0xf0b61d8a9cced771 # initialize rs1
li x4, 0x636dc812f9dc9326 # initialize rs2
remu x17, x7, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x24, 0x084980640fb1eb25 # initialize rs1
li x5, 0xc2343d1c7b002eed # initialize rs2
remu x23, x24, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x10, 0xb40e70391c1026ff # initialize rs1
li x6, 0x4f5c2749c8942923 # initialize rs2
remu x2, x10, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x833a423dc0ac4054 # initialize rs1
li x7, 0xadbd203c9c9f2213 # initialize rs2
remu x4, x16, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x31, 0xe9e28b9e1eca9cfc # initialize rs1
li x8, 0x6ce7efed41ab5eea # initialize rs2
remu x2, x31, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x18, 0xc8701620e2a2a480 # initialize rs1
li x9, 0x428fa60620c6e237 # initialize rs2
remu x13, x18, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x12, 0x2392f006927d121d # initialize rs1
li x10, 0xb7ba86333b8d7297 # initialize rs2
remu x25, x12, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x23, 0x64cbc694656fefc2 # initialize rs1
li x11, 0x2fb8813aa8f92cbd # initialize rs2
remu x18, x23, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x13, 0x9af8cb886396f20f # initialize rs1
li x12, 0xdc5575d217b2daf2 # initialize rs2
remu x22, x13, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x15, 0x0258cff4c483c64b # initialize rs1
li x13, 0x3768a0146964a01e # initialize rs2
remu x8, x15, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x19, 0xdac749a044474494 # initialize rs1
li x14, 0x79956c8b8eeb5616 # initialize rs2
remu x21, x19, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x25, 0xee94f90f1b1cd62e # initialize rs1
li x15, 0x4f17d0f1daa192ed # initialize rs2
remu x12, x25, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x3, 0xcbc873fee760bf99 # initialize rs1
li x16, 0x262e7b36b377adb2 # initialize rs2
remu x6, x3, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x24, 0xe1f9f88cf909ae1e # initialize rs1
li x17, 0x450ab197f79fd1d3 # initialize rs2
remu x13, x24, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x14, 0x24ad5688527c3bae # initialize rs1
li x18, 0x3bef25365b940511 # initialize rs2
remu x16, x14, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x21, 0xa255fa415667dd4d # initialize rs1
li x19, 0xdafad9111a8de157 # initialize rs2
remu x11, x21, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x26, 0x98ffb7d274e374ba # initialize rs1
li x20, 0xebcb0985de1911b6 # initialize rs2
remu x7, x26, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x22, 0x4e4c3fc3503a9c3d # initialize rs1
li x21, 0xf754973ed829fdb7 # initialize rs2
remu x20, x22, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x3, 0xeb1a5179a0618482 # initialize rs1
li x22, 0x949ce5cd1cdcb3d4 # initialize rs2
remu x20, x3, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x25, 0xb2d1b86d7c42d90c # initialize rs1
li x23, 0xcc5a3d1a46d0f7d3 # initialize rs2
remu x21, x25, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x16, 0x2d7f67a2b3ed5200 # initialize rs1
li x24, 0x6cb841a3adc32a75 # initialize rs2
remu x25, x16, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x19, 0x752a6d0682e5ffef # initialize rs1
li x25, 0xe5f0b2cacd7bfdd8 # initialize rs2
remu x1, x19, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x19, 0x46b0e86ac29f617b # initialize rs1
li x26, 0xeb7de4a81bc74864 # initialize rs2
remu x7, x19, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x8, 0x314a72c585d1dafe # initialize rs1
li x27, 0x8d90949f6945cce1 # initialize rs2
remu x3, x8, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x1, 0x8ec3c37c4b3147b4 # initialize rs1
li x28, 0x969236d69cf607ce # initialize rs2
remu x16, x1, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x3, 0xc6b642999d099822 # initialize rs1
li x29, 0x683f794e2f56d7e1 # initialize rs2
remu x13, x3, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x13, 0x59728d8838b12351 # initialize rs1
li x30, 0xf42debf82886524e # initialize rs2
remu x27, x13, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x27, 0xea9e38f5fa1591f9 # initialize rs1
li x31, 0xb53bee6358ed6746 # initialize rs2
remu x11, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 504)

# Testcase cp_rd (Test destination rd = x0)
li x14, 0xba5fe3b898b2dea1 # initialize rs1
li x10, 0xe073180311e9bddb # initialize rs2
remu x0, x14, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x31, 0x679ea7f4a64780e5 # initialize rs1
li x30, 0x8ab52e4ea7822ff1 # initialize rs2
remu x1, x31, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x9, 0x577ed8438b2a4076 # initialize rs1
li x4, 0xd96e1fdf6779749a # initialize rs2
remu x2, x9, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x18, 0xb2489481631acef8 # initialize rs1
li x8, 0x27f454c1973dff30 # initialize rs2
remu x3, x18, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
li x27, 0x5cc6672630b1f600 # initialize rs1
li x16, 0xc6751407e8a42c1b # initialize rs2
remu x4, x27, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x1, 0x26c0a5bccd51e1a5 # initialize rs1
li x25, 0xa5c927f1f1b80e37 # initialize rs2
remu x5, x1, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x12, 0x64e3fbf2f562e8c9 # initialize rs1
li x11, 0x83ffad7c6d367323 # initialize rs2
remu x6, x12, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x3, 0x4622581ed3d44f26 # initialize rs1
li x22, 0x3ca53bab09999458 # initialize rs2
remu x7, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x12, 0x5dd044ffc3d78ad6 # initialize rs1
li x16, 0x207e3387839e628f # initialize rs2
remu x8, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x21, 0x878b143ef7bda3c7 # initialize rs1
li x16, 0xe55870eac95100de # initialize rs2
remu x9, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x12, 0x26c3d2db62976582 # initialize rs1
li x13, 0xf6565cae96dd4e41 # initialize rs2
remu x10, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x25, 0x0752ec03677e40ef # initialize rs1
li x29, 0x9eb45fb2f1552a60 # initialize rs2
remu x11, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x7, 0xe9f3f64c0a7b135d # initialize rs1
li x17, 0x6ba6cd16e2873e52 # initialize rs2
remu x12, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x17, 0xde0f41e1c08b6466 # initialize rs1
li x14, 0xad68e20df30985d2 # initialize rs2
remu x13, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x14, 0xab184e5add6fbc69 # initialize rs1
li x24, 0x703a0bf6a72caacb # initialize rs2
remu x14, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x5, 0x0a1699464e67d2c3 # initialize rs1
li x18, 0x4cf3fbbd778dac58 # initialize rs2
remu x15, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x10, 0xc820ed5034ab64fc # initialize rs1
li x25, 0x9bbe2579b5a1d6dd # initialize rs2
remu x16, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x6, 0xb035677ee25782da # initialize rs1
li x22, 0x78b789b583a93a50 # initialize rs2
remu x17, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x7, 0xb17b34b1714d0d8d # initialize rs1
li x18, 0xeb05f3b5e30c8a2c # initialize rs2
remu x18, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x27, 0x5168b5ab4d5cf4d9 # initialize rs1
li x16, 0x3378af11080b0ba5 # initialize rs2
remu x19, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x6, 0x2a41f24ac300aa02 # initialize rs1
li x15, 0x7010dde012a9cb62 # initialize rs2
remu x20, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x22, 0xd1c463d2cd290880 # initialize rs1
li x9, 0x614c2a54e0cf1473 # initialize rs2
remu x21, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x9, 0x39a99849817824ab # initialize rs1
li x8, 0x6ade92b6eefbd23d # initialize rs2
remu x22, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x3, 0x72a50971e22efe7d # initialize rs1
li x30, 0x588d43d86f980ee2 # initialize rs2
remu x23, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x15, 0xab6360c4cef96ac9 # initialize rs1
li x3, 0xdfc0430ea3a433f1 # initialize rs2
remu x24, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x8, 0xc7c13acc99a1ab4b # initialize rs1
li x31, 0x734065ac780db971 # initialize rs2
remu x25, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x30, 0x9e82e57ecd10e18d # initialize rs1
li x3, 0x1002e89ab16048ba # initialize rs2
remu x26, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x17, 0x42d93f2665bd9b68 # initialize rs1
li x31, 0x31a8b578ddfa523e # initialize rs2
remu x27, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x16, 0xf1902b3764a289a6 # initialize rs1
li x15, 0x1b58353c259faa04 # initialize rs2
remu x28, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x26, 0xd788bba7cdad8da0 # initialize rs1
li x11, 0x1588cabe19eedfff # initialize rs2
remu x29, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x5, 0x3923887287d3317a # initialize rs1
li x7, 0x11a83c7eed2eff4f # initialize rs2
remu x30, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0xaf020250d560866d # initialize rs1
li x14, 0x4184433496476141 # initialize rs2
remu x31, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x24, 0x0000000000000000 # initialize rs1
li x7, 0xc03dacc6cfc91461 # initialize rs2
remu x12, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x9, 0x0000000000000001 # initialize rs1
li x15, 0xf7adbf057a1e746b # initialize rs2
remu x21, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x12, 0x0000000000000002 # initialize rs1
li x21, 0x8a17bfbc093a317c # initialize rs2
remu x23, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x2, 0xec968d4cc7572262 # initialize rs2
remu x21, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x13, 0x8000000000000001 # initialize rs1
li x18, 0x4af2bd5a0039d08a # initialize rs2
remu x22, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
li x16, 0x718a456f598f2fdc # initialize rs2
remu x15, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
li x14, 0xbbbce79b926e2474 # initialize rs2
remu x2, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x13, 0xffffffffffffffff # initialize rs1
li x19, 0x33711cbccdda0cdc # initialize rs2
remu x1, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x20, 0xfffffffffffffffe # initialize rs1
li x3, 0x656371de435f8a37 # initialize rs2
remu x1, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0xd177b982102cb4dd # initialize rs2
remu x3, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0xe81900954c807d5f # initialize rs2
remu x11, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x27, 0x5555555555555555 # initialize rs1
li x16, 0x077c98a76dbb1777 # initialize rs2
remu x26, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x23, 0x00000000ffffffff # initialize rs1
li x31, 0xe678997a82e75594 # initialize rs2
remu x1, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x20, 0x00000000fffffffe # initialize rs1
li x14, 0xebbb4d8d3372216c # initialize rs2
remu x26, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x9, 0x0000000100000000 # initialize rs1
li x27, 0xce750de32c54e82a # initialize rs2
remu x17, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x12, 0x0000000100000001 # initialize rs1
li x16, 0x1fd60bd209cef966 # initialize rs2
remu x1, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x6, 0x3e32010e517c103e # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
remu x7, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x28, 0xc02817f12c53e8c3 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
remu x8, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x1, 0x585765b8c66a476c # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
remu x30, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x17, 0xc797621a61f1f40a # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
remu x3, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x10, 0xab58958ea4582ebb # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
remu x17, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x24, 0xa079e31fe75860de # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
remu x16, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x16, 0xa10a1ca888f155cc # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
remu x25, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x25, 0xadcdef93a8fa3963 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
remu x21, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x31, 0x116f793db259738d # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
remu x11, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x20, 0x285b97aa92c35650 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
remu x15, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x20, 0x4d0fc67564012738 # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x29, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x22, 0x359964d54aeaf097 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
remu x13, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x12, 0xcf7214c423622eeb # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
remu x3, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x18, 0x0ed196a6c0846254 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
remu x24, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x6, 0xda6879078a39d914 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
remu x7, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x10, 0x3bed031bd500f12f # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
remu x20, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x2, 0x0000000000000000 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
remu x9, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x2, 0x0000000000000000 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
remu x28, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x3, 0x0000000000000000 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
remu x10, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x21, 0x0000000000000000 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
remu x15, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x27, 0x0000000000000000 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
remu x2, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x15, 0x0000000000000000 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
remu x22, x15, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x23, 0x0000000000000000 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
remu x3, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x20, 0x0000000000000000 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
remu x21, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x12, 0x0000000000000000 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remu x24, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x19, 0x0000000000000000 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
remu x25, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x0000000000000000 # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x30, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x17, 0x0000000000000000 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
remu x29, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x31, 0x0000000000000000 # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
remu x27, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x12, 0x0000000000000000 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
remu x21, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x12, 0x0000000000000000 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
remu x23, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x17, 0x0000000000000000 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
remu x23, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x1, 0x0000000000000001 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
remu x8, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x25, 0x0000000000000001 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
remu x21, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x8, 0x0000000000000001 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
remu x25, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x6, 0x0000000000000001 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
remu x31, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x22, 0x0000000000000001 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
remu x25, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x9, 0x0000000000000001 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
remu x5, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x14, 0x0000000000000001 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
remu x3, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x1, 0x0000000000000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
remu x29, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x17, 0x0000000000000001 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
remu x19, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x20, 0x0000000000000001 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
remu x30, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x0000000000000001 # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x17, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x26, 0x0000000000000001 # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
remu x8, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x11, 0x0000000000000001 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remu x13, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x2, 0x0000000000000001 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
remu x26, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x21, 0x0000000000000001 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
remu x15, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x13, 0x0000000000000001 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
remu x2, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x28, 0x0000000000000002 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
remu x18, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x10, 0x0000000000000002 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
remu x2, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x31, 0x0000000000000002 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remu x15, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x6, 0x0000000000000002 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
remu x14, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x9, 0x0000000000000002 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
remu x8, x9, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x17, 0x0000000000000002 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
remu x12, x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000000000002 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
remu x29, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x23, 0x0000000000000002 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
remu x24, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x10, 0x0000000000000002 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
remu x1, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x1, 0x0000000000000002 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remu x16, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x0000000000000002 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x19, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x22, 0x0000000000000002 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
remu x27, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x20, 0x0000000000000002 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
remu x13, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x27, 0x0000000000000002 # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
remu x20, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x23, 0x0000000000000002 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
remu x28, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x29, 0x0000000000000002 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
remu x14, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x9, 0x8000000000000000 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
remu x7, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x8, 0x8000000000000000 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
remu x17, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x31, 0x8000000000000000 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
remu x9, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x3, 0x8000000000000000 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
remu x11, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x9, 0x8000000000000000 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
remu x1, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
remu x12, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x6, 0x8000000000000000 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
remu x9, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x11, 0x8000000000000000 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
remu x3, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x14, 0x8000000000000000 # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
remu x10, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x23, 0x8000000000000000 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
remu x20, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x8000000000000000 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x22, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x14, 0x8000000000000000 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
remu x3, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x14, 0x8000000000000000 # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
remu x21, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x21, 0x8000000000000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
remu x2, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x2, 0x8000000000000000 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
remu x8, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x15, 0x8000000000000000 # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
remu x17, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x10, 0x8000000000000001 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
remu x13, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x14, 0x8000000000000001 # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
remu x17, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x14, 0x8000000000000001 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remu x21, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x5, 0x8000000000000001 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
remu x27, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x12, 0x8000000000000001 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
remu x28, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x20, 0x8000000000000001 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
remu x25, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x10, 0x8000000000000001 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
remu x31, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x8, 0x8000000000000001 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
remu x5, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x25, 0x8000000000000001 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
remu x16, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x19, 0x8000000000000001 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
remu x6, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x8000000000000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x3, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x18, 0x8000000000000001 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
remu x13, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x3, 0x8000000000000001 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
remu x27, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x9, 0x8000000000000001 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
remu x2, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x29, 0x8000000000000001 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
remu x18, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x7, 0x8000000000000001 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
remu x23, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x1, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
remu x8, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x17, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
remu x3, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x16, 0x7fffffffffffffff # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
remu x2, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
remu x19, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x23, 0x7fffffffffffffff # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
remu x9, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
remu x18, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x21, 0x7fffffffffffffff # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
remu x30, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x14, 0x7fffffffffffffff # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
remu x12, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x3, 0x7fffffffffffffff # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remu x15, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x15, 0x7fffffffffffffff # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
remu x10, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x7fffffffffffffff # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x12, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x6, 0x7fffffffffffffff # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
remu x29, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
remu x27, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x8, 0x7fffffffffffffff # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
remu x12, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x29, 0x7fffffffffffffff # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
remu x20, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x30, 0x7fffffffffffffff # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
remu x10, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x27, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
remu x23, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x25, 0x7ffffffffffffffe # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
remu x12, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x27, 0x7ffffffffffffffe # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
remu x11, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x14, 0x7ffffffffffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
remu x26, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x23, 0x7ffffffffffffffe # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
remu x7, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x11, 0x7ffffffffffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
remu x10, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
remu x17, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x21, 0x7ffffffffffffffe # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
remu x30, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x23, 0x7ffffffffffffffe # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
remu x7, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x22, 0x7ffffffffffffffe # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
remu x27, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x7ffffffffffffffe # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x5, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x8, 0x7ffffffffffffffe # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
remu x9, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x16, 0x7ffffffffffffffe # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remu x27, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x2, 0x7ffffffffffffffe # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
remu x19, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x5, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
remu x2, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x5, 0x7ffffffffffffffe # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
remu x8, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x30, 0xffffffffffffffff # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
remu x22, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x19, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
remu x22, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x30, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
remu x12, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x25, 0xffffffffffffffff # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
remu x7, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x16, 0xffffffffffffffff # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
remu x22, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
remu x11, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x22, 0xffffffffffffffff # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
remu x3, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
remu x6, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x2, 0xffffffffffffffff # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
remu x19, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x18, 0xffffffffffffffff # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
remu x14, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0xffffffffffffffff # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x1, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x27, 0xffffffffffffffff # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
remu x24, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x27, 0xffffffffffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
remu x16, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x12, 0xffffffffffffffff # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
remu x28, x12, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x12, 0xffffffffffffffff # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
remu x7, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x3, 0xffffffffffffffff # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
remu x5, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x18, 0xfffffffffffffffe # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
remu x11, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x13, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
remu x18, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x14, 0xfffffffffffffffe # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
remu x26, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x24, 0xfffffffffffffffe # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
remu x13, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x21, 0xfffffffffffffffe # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
remu x14, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
remu x21, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
remu x1, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x15, 0xfffffffffffffffe # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
remu x13, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
remu x20, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x12, 0xfffffffffffffffe # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
remu x3, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xfffffffffffffffe # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x14, x20, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0xfffffffffffffffe # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
remu x10, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
remu x7, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x24, 0xfffffffffffffffe # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
remu x23, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x15, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
remu x19, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x19, 0xfffffffffffffffe # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
remu x23, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
remu x22, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
remu x24, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
remu x22, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
remu x13, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
remu x13, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
remu x24, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
remu x19, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
remu x10, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
remu x3, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
remu x10, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x12, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
remu x22, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
remu x28, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
remu x30, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
remu x21, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
remu x18, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
remu x11, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
remu x18, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
remu x30, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
remu x11, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
remu x6, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
remu x7, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
remu x13, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
remu x9, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
remu x20, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
remu x31, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x1, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
remu x15, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
remu x14, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
remu x22, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
remu x22, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
remu x23, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x6, 0x5555555555555555 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
remu x5, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x12, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
remu x21, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x18, 0x5555555555555555 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
remu x25, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x13, 0x5555555555555555 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remu x26, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x18, 0x5555555555555555 # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
remu x15, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x17, 0x5555555555555555 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
remu x1, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
remu x16, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x1, 0x5555555555555555 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
remu x16, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
remu x3, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x5, 0x5555555555555555 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
remu x15, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x5555555555555555 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x17, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x27, 0x5555555555555555 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
remu x13, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x30, 0x5555555555555555 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remu x28, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x24, 0x5555555555555555 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
remu x26, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x15, 0x5555555555555555 # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
remu x17, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x21, 0x5555555555555555 # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
remu x29, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x29, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
remu x22, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x24, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
remu x20, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x2, 0x00000000ffffffff # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
remu x14, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x2, 0x00000000ffffffff # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
remu x29, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x10, 0x00000000ffffffff # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
remu x9, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x24, 0x00000000ffffffff # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
remu x14, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x3, 0x00000000ffffffff # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
remu x22, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x2, 0x00000000ffffffff # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
remu x25, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x8, 0x00000000ffffffff # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
remu x19, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x28, 0x00000000ffffffff # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
remu x27, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x00000000ffffffff # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x3, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x2, 0x00000000ffffffff # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
remu x11, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
remu x27, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x19, 0x00000000ffffffff # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
remu x21, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x25, 0x00000000ffffffff # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
remu x6, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x9, 0x00000000ffffffff # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
remu x31, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x24, 0x00000000fffffffe # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
remu x23, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x17, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
remu x2, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x23, 0x00000000fffffffe # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
remu x25, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x17, 0x00000000fffffffe # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
remu x15, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x30, 0x00000000fffffffe # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
remu x20, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x28, 0x00000000fffffffe # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
remu x13, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x6, 0x00000000fffffffe # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
remu x24, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x28, 0x00000000fffffffe # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
remu x9, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x6, 0x00000000fffffffe # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
remu x9, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x16, 0x00000000fffffffe # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
remu x24, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x00000000fffffffe # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x10, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x10, 0x00000000fffffffe # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
remu x31, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x29, 0x00000000fffffffe # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
remu x17, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x28, 0x00000000fffffffe # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
remu x29, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x8, 0x00000000fffffffe # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
remu x7, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x17, 0x00000000fffffffe # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
remu x30, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x5, 0x0000000100000000 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
remu x20, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x25, 0x0000000100000000 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
remu x10, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x26, 0x0000000100000000 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
remu x7, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x15, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remu x17, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x26, 0x0000000100000000 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
remu x13, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000100000000 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
remu x10, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000100000000 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
remu x10, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x15, 0x0000000100000000 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
remu x18, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000100000000 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remu x1, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x30, 0x0000000100000000 # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
remu x21, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x0000000100000000 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x29, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x17, 0x0000000100000000 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
remu x25, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x23, 0x0000000100000000 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
remu x24, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x13, 0x0000000100000000 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
remu x5, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x8, 0x0000000100000000 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
remu x2, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x3, 0x0000000100000000 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
remu x11, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x6, 0x0000000100000001 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
remu x13, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x27, 0x0000000100000001 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
remu x30, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x20, 0x0000000100000001 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
remu x30, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x20, 0x0000000100000001 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
remu x2, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x30, 0x0000000100000001 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
remu x22, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000100000001 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
remu x5, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000100000001 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
remu x28, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x12, 0x0000000100000001 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
remu x7, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x28, 0x0000000100000001 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
remu x11, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000100000001 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
remu x28, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x0000000100000001 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
remu x21, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x7, 0x0000000100000001 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
remu x30, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x16, 0x0000000100000001 # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
remu x27, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x9, 0x0000000100000001 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
remu x6, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x11, 0x0000000100000001 # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
remu x17, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x30, 0x0000000100000001 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
remu x27, x30, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x1e70d7d3e5ef2fb8 # initialize rs1
li x0, 0xfdf2ff6550422722 # initialize rs2
remu x13, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x7fddd449afe2bbd2 # initialize rs1
li x1, 0xf5949aa4ac320327 # initialize rs2
remu x25, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x20d18324550d04c6 # initialize rs1
li x2, 0xd15ade45b1169851 # initialize rs2
remu x5, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x9530af0b88fe09d9 # initialize rs1
li x3, 0x50bdbc27b0e6a9b3 # initialize rs2
remu x23, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9a81f5f62c3f3c57 # initialize rs1
li x4, 0x622f7a2fda71e780 # initialize rs2
remu x24, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x99e908d33d91063d # initialize rs1
li x5, 0xa9ec17efc45bfe7b # initialize rs2
remu x30, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x572fa7dacb269636 # initialize rs1
li x6, 0xb43f4e15468736f6 # initialize rs2
remu x26, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x26, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x873d7a9a5fc3de7d # initialize rs1
li x7, 0xb0679c150cd1f61d # initialize rs2
remu x24, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xe07ce862ccc7c3a3 # initialize rs1
li x8, 0x108b180699d0b60e # initialize rs2
remu x13, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xe2509bcef4fb8dbe # initialize rs1
li x9, 0xb51cc2fa931261eb # initialize rs2
remu x25, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x17a224e89f180223 # initialize rs1
li x10, 0xd50c2b38d9d5baf7 # initialize rs2
remu x7, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xf173e9deb37fa2ea # initialize rs1
li x11, 0x93386e9d76d9be3e # initialize rs2
remu x17, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x8250cec4e869218e # initialize rs1
li x12, 0x3311e37e72a4bfc5 # initialize rs2
remu x10, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xe7513363dd6b572b # initialize rs1
li x13, 0x541bb453caaf9f34 # initialize rs2
remu x6, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x88bf669498367bba # initialize rs1
li x14, 0x7a9d6b884af020f9 # initialize rs2
remu x13, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x48c36cf142c965a1 # initialize rs1
li x15, 0x3d07678a5be2249f # initialize rs2
remu x29, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x193fe17c28aa67a3 # initialize rs1
li x16, 0x7f1fc7cc5eeb949a # initialize rs2
remu x12, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x360f52c67e0813d8 # initialize rs1
li x17, 0x0a75667cfcf52c27 # initialize rs2
remu x21, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x2e1a9ea22c4eb699 # initialize rs1
li x18, 0x78c28293d90ac767 # initialize rs2
remu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xbc1a6a22e2b029e8 # initialize rs1
li x19, 0x536a3643e7114ee0 # initialize rs2
remu x11, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x6ecc894d2cd87e77 # initialize rs1
li x20, 0x5ceaa2b0df8eb938 # initialize rs2
remu x10, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xc5ebda9ce5b10474 # initialize rs1
li x21, 0x35131c9f1974e492 # initialize rs2
remu x5, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x2db49c753b1804c2 # initialize rs1
li x22, 0x6e81694533d551a2 # initialize rs2
remu x21, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x89fcce7fcd3c31d6 # initialize rs1
li x23, 0x55bb98bf3cc371a0 # initialize rs2
remu x15, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x753e7397836cad1c # initialize rs1
li x24, 0xb6bea95ce0c271b9 # initialize rs2
remu x13, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xd60cda7ffb4e2993 # initialize rs1
li x25, 0x137275a07f44b51d # initialize rs2
remu x28, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xeb1845eadfb4db3c # initialize rs1
li x26, 0x2cf551614a870ee6 # initialize rs2
remu x25, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x71b1b746aba326aa # initialize rs1
li x27, 0x4236b58698a7c699 # initialize rs2
remu x21, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x113b0bef80bdb0c1 # initialize rs1
li x28, 0x0ccb19140280f17b # initialize rs2
remu x15, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x539cf62cc044d300 # initialize rs1
li x29, 0xc89c3c4e6be43034 # initialize rs2
remu x7, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xb4c96f7db49dc48f # initialize rs1
li x30, 0x11b766817624b22d # initialize rs2
remu x13, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xade1488ac8fecaee # initialize rs1
li x31, 0xd3ec476d2902e58c # initialize rs2
remu x24, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xf7ffb539ae146c1c # initialize rs1
li x29, 0xadd6d9c0fe3820ce # initialize rs2
remu x0, x0, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x221c6f034f6d38e5 # initialize rs1
li x24, 0x2c8baa4244355d50 # initialize rs2
remu x1, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xccee204b759a3055 # initialize rs1
li x27, 0x4f5551c23dcccb86 # initialize rs2
remu x2, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x1e2474055a42eac5 # initialize rs1
li x25, 0xfed35ed00fb86e1c # initialize rs2
remu x3, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2c959dc6f8dd86c7 # initialize rs1
li x12, 0x1cfc1a952d6c6a41 # initialize rs2
remu x4, x4, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8410ab2659c71548 # initialize rs1
li x16, 0x8db7d208a9f966a3 # initialize rs2
remu x5, x5, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd4c7bc0ff5e006ba # initialize rs1
li x10, 0x11afda2e9321aa29 # initialize rs2
remu x6, x6, x10 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf3e0677d053c9c80 # initialize rs1
li x22, 0xb4d02cbab0050239 # initialize rs2
remu x7, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x1acf761c5790e000 # initialize rs1
li x15, 0x1d3654995fbaba64 # initialize rs2
remu x8, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x6a96da304cb21c1f # initialize rs1
li x3, 0x8c7d998da1b77ce7 # initialize rs2
remu x9, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xa5e4657784c92ab8 # initialize rs1
li x20, 0x37159be2e45b05f5 # initialize rs2
remu x10, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x17610fe6be50ec3a # initialize rs1
li x15, 0xaa7bd7a6e39c8160 # initialize rs2
remu x11, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xc97851f098f85ad1 # initialize rs1
li x30, 0x067783743bf7d0da # initialize rs2
remu x12, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x99b0b462ec71fd1f # initialize rs1
li x26, 0x4dbed69d57a58c71 # initialize rs2
remu x13, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xc981e151d424df65 # initialize rs1
li x26, 0x407b8d58c17884de # initialize rs2
remu x14, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xe03d47a483f7aac4 # initialize rs1
li x5, 0xdaeef5501b64cd01 # initialize rs2
remu x15, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xe225fc8bd83b2033 # initialize rs1
li x17, 0x4eadb1e9776ca258 # initialize rs2
remu x16, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x3307e7d5e0344c09 # initialize rs1
li x1, 0xd9ce4abf25e0973d # initialize rs2
remu x17, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x18395940592f6405 # initialize rs1
li x17, 0x8e1c67519150f300 # initialize rs2
remu x18, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x14b66a8e928656a8 # initialize rs1
li x26, 0xb8cd05c270ebfadd # initialize rs2
remu x19, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x706a7bf391800302 # initialize rs1
li x24, 0xbc547cadbc288193 # initialize rs2
remu x20, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xd2d6dfaa12b28c60 # initialize rs1
li x1, 0x67ce5e07096a2829 # initialize rs2
remu x21, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x45f153f6b0420cac # initialize rs1
li x30, 0xe852580fd5a1ef58 # initialize rs2
remu x22, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x0b6a3898cb24e5ec # initialize rs1
li x29, 0xde0a8dc8377a441e # initialize rs2
remu x23, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xd2bb8ab328ba79c8 # initialize rs1
li x2, 0x30b9b9b23372ab68 # initialize rs2
remu x24, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x9181fa164ee2cf3d # initialize rs1
li x24, 0x0de06318edf121fe # initialize rs2
remu x25, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x1428124cab58ae4c # initialize rs1
li x3, 0x65e316a4f3d451dd # initialize rs2
remu x26, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xca91d65d3e4de0d8 # initialize rs1
li x26, 0x4218bdf52fa03a6d # initialize rs2
remu x27, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x612d9eb7d7c20f79 # initialize rs1
li x21, 0x5987242deb746aa6 # initialize rs2
remu x28, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xb73849d4644b3d8f # initialize rs1
li x11, 0x2e2ceedafdb4796d # initialize rs2
remu x29, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xeb459ea1bf4d076b # initialize rs1
li x24, 0x6297ef75b9e16c7f # initialize rs2
remu x30, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xf6c51be09e7cbde5 # initialize rs1
li x20, 0x61289dfa4799c7bb # initialize rs2
remu x31, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x30, 0x181e4a5e25c228c4 # initialize rs1
li x0, 0x8909a11ba21bb561 # initialize rs2
remu x0, x30, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x30, 0x74d702659671303a # initialize rs1
li x1, 0x9faf90e34fa01162 # initialize rs2
remu x1, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x27, 0x474e56bd780cb984 # initialize rs1
li x2, 0x3556df125e7bb3ce # initialize rs2
remu x2, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x27, 0xbdf947ad90931a67 # initialize rs1
li x3, 0x62b341bebeba759c # initialize rs2
remu x3, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0x985c5c38ea4bb85e # initialize rs1
li x4, 0xd34191acdc086db8 # initialize rs2
remu x4, x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x24, 0x3994477efaba9061 # initialize rs1
li x5, 0xde8048bc00da2b21 # initialize rs2
remu x5, x24, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0xd92b575f3f47cbea # initialize rs1
li x6, 0x1f711aa14152d212 # initialize rs2
remu x6, x22, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x18, 0x3c1b4bcacc1f7185 # initialize rs1
li x7, 0x385af76db4bb531c # initialize rs2
remu x7, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x25, 0x160878c9ff89f679 # initialize rs1
li x8, 0x364439c6eb02f5c5 # initialize rs2
remu x8, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x10, 0x5d193e95a74df6dd # initialize rs1
li x9, 0x1456bbdfada91a5b # initialize rs2
remu x9, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x14, 0xae26e1fc9a0440c1 # initialize rs1
li x10, 0x37dbc9ca27caabea # initialize rs2
remu x10, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x21, 0x18669932959ca373 # initialize rs1
li x11, 0x5f2be321f9323089 # initialize rs2
remu x11, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x30, 0x412c22222c1e0e27 # initialize rs1
li x12, 0x6d2c8ec5f50b3ebd # initialize rs2
remu x12, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x8, 0xa7e2b00f2e6ebfc5 # initialize rs1
li x13, 0xd65532646cfd79dc # initialize rs2
remu x13, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x16, 0x83b2a59154bcce6b # initialize rs1
li x14, 0x53c07e971d00eadf # initialize rs2
remu x14, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x30, 0x8b1a0bede5e708c9 # initialize rs1
li x15, 0x08ca4eaf33ad58be # initialize rs2
remu x15, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x13, 0x0a72cd71196cc6b0 # initialize rs1
li x16, 0x9a60132ed1b30574 # initialize rs2
remu x16, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x6, 0xb491d4b3964c77c2 # initialize rs1
li x17, 0x27024bf850d08f91 # initialize rs2
remu x17, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x15, 0xdb1d5d88e1cf6754 # initialize rs1
li x18, 0x52713c45e3d5e864 # initialize rs2
remu x18, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x17, 0x011f007b44773a8b # initialize rs1
li x19, 0x026ff02993457ccb # initialize rs2
remu x19, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x25, 0x4c78f79423ae567a # initialize rs1
li x20, 0xdc5752664da27b58 # initialize rs2
remu x20, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x18, 0xcd42deac862bb938 # initialize rs1
li x21, 0x47fe5052633dc766 # initialize rs2
remu x21, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x17, 0x51180c088eb3d105 # initialize rs1
li x22, 0x58696d3af56ab569 # initialize rs2
remu x22, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x8, 0x97d89157db2c65e6 # initialize rs1
li x23, 0x3c5f9cb6099b3e61 # initialize rs2
remu x23, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x15, 0x44955f0b4b64ea0e # initialize rs1
li x24, 0x85420bfb8ddae36f # initialize rs2
remu x24, x15, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x20, 0xdb850e3522d67fb6 # initialize rs1
li x25, 0x7dae273c4c67c202 # initialize rs2
remu x25, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x23, 0x262b5329a5a4e953 # initialize rs1
li x26, 0x5ebb7359f6128ba0 # initialize rs2
remu x26, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x1, 0x1154f6983b1d3ed3 # initialize rs1
li x27, 0xea771cac74a4da4f # initialize rs2
remu x27, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x22, 0x4078e1ce467f3257 # initialize rs1
li x28, 0x3401d4da8cec2300 # initialize rs2
remu x28, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x12, 0x1f0dacb0319dc941 # initialize rs1
li x29, 0x5a282873587c415c # initialize rs2
remu x29, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x3, 0x81524529880416b9 # initialize rs1
li x30, 0x6ad1f9ad5fec5e8a # initialize rs2
remu x30, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x17, 0xd180ae9f6c5d5736 # initialize rs1
li x31, 0x6345161e9bc997cd # initialize rs2
remu x31, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xe6e618276cecdaee # initialize rs1
li x0, 0x3b6c26a56960ced4 # initialize rs2
remu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xa1a7ab5ee0ca17d5 # initialize rs1
li x1, 0xe10da2ee512c16a1 # initialize rs2
remu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x8f457ddb80534114 # initialize rs1
li x2, 0x92b0c668691cf89c # initialize rs2
remu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xa4562eefbef4302e # initialize rs1
li x3, 0x8780aa022f13d965 # initialize rs2
remu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x50e28fbc50f0428d # initialize rs1
li x4, 0x3afe20630b00d7fd # initialize rs2
remu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x5973fefa89458b8a # initialize rs1
li x5, 0xc025f0a86e6dda01 # initialize rs2
remu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x79ac87a38de7aef0 # initialize rs1
li x6, 0xcf2e5a42acb4acf2 # initialize rs2
remu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xfa8dc32ac27aeee4 # initialize rs1
li x7, 0xce259b5771bb8ff1 # initialize rs2
remu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xbe1fc18690bebc28 # initialize rs1
li x8, 0xe7d197d822a8f078 # initialize rs2
remu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x0debebe218653982 # initialize rs1
li x9, 0x1f203ef5b584bc9c # initialize rs2
remu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xd68d9626cd4ddeb9 # initialize rs1
li x10, 0x12d6a2c872dd9988 # initialize rs2
remu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x5600ed395aef84b9 # initialize rs1
li x11, 0x5d8a36bb11ff4ce8 # initialize rs2
remu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xb3b8ed97fb559f77 # initialize rs1
li x12, 0x9eb11ec013372c51 # initialize rs2
remu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xae395aa714f1f75d # initialize rs1
li x13, 0x7fe2736cf3259157 # initialize rs2
remu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x809d284e6d1b127f # initialize rs1
li x14, 0x5979fed9c8e32ff7 # initialize rs2
remu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x1233d0a883f3f324 # initialize rs1
li x15, 0x41ada115fb170c41 # initialize rs2
remu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xc27bba7ad3cf1f8c # initialize rs1
li x16, 0xbc23f0354dc31777 # initialize rs2
remu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x2f0165125ca9a01d # initialize rs1
li x17, 0x894259e7d14ec065 # initialize rs2
remu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x6be08c81880df797 # initialize rs1
li x18, 0x415ebe304dc45a79 # initialize rs2
remu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x5a9d04891bd0caf9 # initialize rs1
li x19, 0x114145bc9e411325 # initialize rs2
remu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x717d01eca091a2c9 # initialize rs1
li x20, 0xe0f8960803211459 # initialize rs2
remu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x91f4aadc8dc669ff # initialize rs1
li x21, 0xcf76046abc557a5e # initialize rs2
remu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x4472dd5b8fcc42e2 # initialize rs1
li x22, 0x056eaebf43274562 # initialize rs2
remu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xe2b7af1d32340585 # initialize rs1
li x23, 0xfca670d076cf6500 # initialize rs2
remu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x0b7ddfb9b8b8777d # initialize rs1
li x24, 0x95a76fab8e522a65 # initialize rs2
remu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x7ce89c61e55b6175 # initialize rs1
li x25, 0x991e9162475bd8f6 # initialize rs2
remu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x8647f74d9c4656ef # initialize rs1
li x26, 0x0228b1298a583abf # initialize rs2
remu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xde72682a709d9e32 # initialize rs1
li x27, 0x7a8cf03fe59ca8fc # initialize rs2
remu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x7511b78a61b0f58c # initialize rs1
li x28, 0x5a32f1b50fdff04a # initialize rs2
remu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xc994a7019bd49bc4 # initialize rs1
li x29, 0xe57edae974e152ff # initialize rs2
remu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd9da07c439f13b73 # initialize rs1
li x30, 0x2d5db3dd38b97da8 # initialize rs2
remu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x0491103330f76470 # initialize rs1
li x31, 0xb72bd4f80fee7c14 # initialize rs2
remu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x9, x21 # perform first operation
remu x8, x22, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x25, x21 # perform first operation
remu x27, x14, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x31, x7 # perform first operation
remu x5, x12, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x29, x31, x8 # perform first operation
remu x8, x29, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x31, x17 # perform first operation
remu x8, x31, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x14, x11, x26 # perform first operation
remu x11, x31, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x15, x18, x1 # perform first operation
remu x15, x13, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x8, x21 # perform first operation
remu x30, x28, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x19, x7, x6 # perform first operation
remu x19, x12, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x16, x19, x15 # perform first operation
remu x19, x26, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x5, x16, x31 # perform first operation
remu x31, x23, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x6, x8, x3 # perform first operation
remu x15, x27, x23 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-rem.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x81dccc260f38e676 # initialize rs1
li x7, 0xcaf5e63bb4ff9709 # initialize rs2
rem x21, x0, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x4eb4663fff5d6a09 # initialize rs1
li x9, 0x8a75c3d268c20fb2 # initialize rs2
rem x24, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xf76ab10e1621a056 # initialize rs1
li x6, 0x98d261f4389d6df9 # initialize rs2
rem x9, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x06d4a2323e97b175 # initialize rs1
li x11, 0xc2427a2255299316 # initialize rs2
rem x29, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3c78dc3dff10743c # initialize rs1
li x22, 0xb2de2cc7766117e0 # initialize rs2
rem x15, x4, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x060cfc3748f8d105 # initialize rs1
li x20, 0x8482dcdb37af45cd # initialize rs2
rem x22, x5, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x605b4efde7b9a38a # initialize rs1
li x19, 0x5bf2d9f0a88a06b1 # initialize rs2
rem x5, x6, x19 # perform operation
RVTEST_SIGUPD(x7, x0, x5, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x51f4b97636a9facb # initialize rs1
li x2, 0x9223f737039c2d70 # initialize rs2
rem x14, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x4bbc25a90b5791ab # initialize rs1
li x13, 0xd9826d712eca551c # initialize rs2
rem x23, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x71c13ddcfc8be394 # initialize rs1
li x1, 0x7781bfa8f5adccd1 # initialize rs2
rem x27, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xabb906304bbd17c3 # initialize rs1
li x8, 0x4b3245575b937d68 # initialize rs2
rem x17, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xc46ea8f90d11a2a6 # initialize rs1
li x30, 0x98ab8ce6bf881026 # initialize rs2
rem x12, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x82ad98ffed65c3d7 # initialize rs1
li x7, 0xc6c65cafc3b6160d # initialize rs2
rem x23, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x1c99343bc4985814 # initialize rs1
li x22, 0x1702ce209ed5ca73 # initialize rs2
rem x14, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xc543b74cb9eedd4f # initialize rs1
li x15, 0xfe4a34c622281c5d # initialize rs2
rem x19, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x7bf7644053f060e4 # initialize rs1
li x19, 0x5f710f62a2ae4863 # initialize rs2
rem x8, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x54d2ab93557443c6 # initialize rs1
li x19, 0x8a7e30f86071bb20 # initialize rs2
rem x21, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xaa8ee0771de44ef7 # initialize rs1
li x8, 0x02fb2b7000fae8b9 # initialize rs2
rem x9, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xa72a0f3913f00a2e # initialize rs1
li x31, 0xb62248e4b137b25d # initialize rs2
rem x8, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xb05b961fe41a06ac # initialize rs1
li x2, 0xe036f61afd7fd1c1 # initialize rs2
rem x31, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x5ae57f0b3ee00b64 # initialize rs1
li x6, 0x14a7e3fbad13e3ca # initialize rs2
rem x26, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x51654ee00b7c0789 # initialize rs1
li x8, 0x71f3608fff1adc69 # initialize rs2
rem x13, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x34a5d742a2e7add8 # initialize rs1
li x27, 0x568a5fff3261bcb3 # initialize rs2
rem x21, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x18125b2be36a5145 # initialize rs1
li x15, 0x69a99ca60d9aa726 # initialize rs2
rem x10, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x5ddde2a6aedb8124 # initialize rs1
li x12, 0x5a801ce6f495543d # initialize rs2
rem x27, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xb53333d5bf2d00bf # initialize rs1
li x26, 0x26234fd23d813d5e # initialize rs2
rem x2, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x084eea115904d409 # initialize rs1
li x5, 0x1e10d522ee647a28 # initialize rs2
rem x16, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x427d9d47a83448e4 # initialize rs1
li x3, 0x9015561c94facc58 # initialize rs2
rem x18, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x616e9619827fc1fb # initialize rs1
li x19, 0x8f95d19b0e0f94fe # initialize rs2
rem x23, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x1b4e79ef1447c2a8 # initialize rs1
li x10, 0x959d811fdae99cbf # initialize rs2
rem x24, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xbe37ebe4bbdddc00 # initialize rs1
li x28, 0x2cef89c6e65209b2 # initialize rs2
rem x9, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xbdcc3155948a1c95 # initialize rs1
li x25, 0x43a17f6b026f4b19 # initialize rs2
rem x15, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x11, 0x2658d53ba32db064 # initialize rs1
li x0, 0x79e127bcc7401a15 # initialize rs2
rem x25, x11, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x26, 0xfec40f5b57ce5e6e # initialize rs1
li x1, 0x39cb64e0ed32fd35 # initialize rs2
rem x17, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x13, 0x4f8e02a3c770f957 # initialize rs1
li x2, 0xb7adfa3eefd81299 # initialize rs2
rem x9, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x11, 0xf5bb1f47caf783f7 # initialize rs1
li x3, 0x4ab25433e39fb3a6 # initialize rs2
rem x30, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x41d0eb2eb9829b73 # initialize rs1
li x4, 0x1a328517be4cab87 # initialize rs2
rem x31, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0x1d5876dd9dcc9587 # initialize rs1
li x5, 0xd2be9c6c4bb89b66 # initialize rs2
rem x24, x31, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0xd9f7b52e124279a6 # initialize rs1
li x6, 0x4b60296d0d747e70 # initialize rs2
rem x5, x29, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x5, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x19, 0xe8aa2ae1125c63ad # initialize rs1
li x7, 0x56895a90d9cfa6ef # initialize rs2
rem x5, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x6, 0x1762346ce63eb023 # initialize rs1
li x8, 0x8874837a56257cb4 # initialize rs2
rem x27, x6, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x15, 0x4acf84197dab1411 # initialize rs1
li x9, 0x228ed7995c9d971d # initialize rs2
rem x12, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x7, 0x3389b1fc17af85dd # initialize rs1
li x10, 0x9735649fdcef6962 # initialize rs2
rem x16, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x25, 0x84fa15ea422f1e42 # initialize rs1
li x11, 0x72742da40d5558db # initialize rs2
rem x20, x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x23, 0x4e3e833cdc6977ce # initialize rs1
li x12, 0x4b8786a0a41b3e88 # initialize rs2
rem x21, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x9, 0x2d1bbe536201e6a4 # initialize rs1
li x13, 0x13144d914dbfcda7 # initialize rs2
rem x8, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x1, 0x2ce333ae45284cbd # initialize rs1
li x14, 0xc41bae30e1e9ed04 # initialize rs2
rem x21, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x21, 0x133ddf024d0a7ec7 # initialize rs1
li x15, 0x53a4da78790689e1 # initialize rs2
rem x2, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x31, 0xe130354be3420798 # initialize rs1
li x16, 0xfc153a6018b7d5ba # initialize rs2
rem x29, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x22, 0xe290e7fe007e674f # initialize rs1
li x17, 0xe8cf359ae404ee79 # initialize rs2
rem x1, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x28, 0xb57ca50cee422263 # initialize rs1
li x18, 0xde965cbd6362671a # initialize rs2
rem x26, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x18, 0x61b446757d3c71a0 # initialize rs1
li x19, 0x8f189f435ca5637a # initialize rs2
rem x27, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x2, 0xf737b66dd5211819 # initialize rs1
li x20, 0xd72ae2cb6091afa5 # initialize rs2
rem x23, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x5, 0x5feb0099da26798f # initialize rs1
li x21, 0x95069ed7e43ea7e9 # initialize rs2
rem x11, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x18, 0x6e3e5ee3f8493213 # initialize rs1
li x22, 0xd6e45910d36c15f9 # initialize rs2
rem x17, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x10, 0x5a88a16dfde5b700 # initialize rs1
li x23, 0x1dfcaa1436d398a1 # initialize rs2
rem x19, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x21, 0x006d96a026ff9ecb # initialize rs1
li x24, 0xb475c7c8ecd2a817 # initialize rs2
rem x16, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x8, 0x8567909fa2a6912a # initialize rs1
li x25, 0x1c5554bb804e09b4 # initialize rs2
rem x17, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x2, 0x21277fb9f160c2ef # initialize rs1
li x26, 0xc0af4b243dbe44e3 # initialize rs2
rem x20, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x7, 0x31a2eb39c875d75f # initialize rs1
li x27, 0x827ef060935afc49 # initialize rs2
rem x18, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x31, 0x44fb7c6a6c631ec8 # initialize rs1
li x28, 0xe19b1e0f3107a03e # initialize rs2
rem x18, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x17, 0xd766e41debc2db23 # initialize rs1
li x29, 0xa4f4448b85fa3858 # initialize rs2
rem x10, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x23, 0x06cb8155c04d4509 # initialize rs1
li x30, 0xc5616460759e1df4 # initialize rs2
rem x12, x23, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x7, 0x1ec0729406c77a37 # initialize rs1
li x31, 0x08e470b7dd22949a # initialize rs2
rem x16, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 504)

# Testcase cp_rd (Test destination rd = x0)
li x29, 0x745f5bae86eef14b # initialize rs1
li x20, 0xc581320938923f54 # initialize rs2
rem x0, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x18, 0xc672468c7ead324a # initialize rs1
li x8, 0x8bfdc246aa40397e # initialize rs2
rem x1, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x8, 0x1f98c1e8b755f756 # initialize rs1
li x30, 0x6c00bea67fcdede1 # initialize rs2
rem x2, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x12, 0x249354bdbd324e88 # initialize rs1
li x2, 0xf345b5da82a74703 # initialize rs2
rem x3, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x22, 0x94fed5840d344b6a # initialize rs1
li x20, 0xd6a9196864f1d2ee # initialize rs2
rem x4, x22, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x27, 0x534c1f4080d6fefb # initialize rs1
li x13, 0x8d1b097fa4f04cf6 # initialize rs2
rem x5, x27, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0xfcbf4bdcaecc3448 # initialize rs1
li x2, 0x13217119a0709ed6 # initialize rs2
rem x6, x9, x2 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0x2510019fd13f7a56 # initialize rs1
li x28, 0x2e1af825e1c14654 # initialize rs2
rem x7, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x27, 0x4405e7cd9e60f46f # initialize rs1
li x3, 0x95fd6ccbfda6e203 # initialize rs2
rem x8, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x26, 0x3d594c6ec45b30b7 # initialize rs1
li x11, 0x8a991f8f378efefe # initialize rs2
rem x9, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x3, 0x8bbb998fe5585bd1 # initialize rs1
li x17, 0x254ef081ac21d796 # initialize rs2
rem x10, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x15, 0xe66ac92bc6c7ebaf # initialize rs1
li x29, 0x5b94cb9829f8329c # initialize rs2
rem x11, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x31, 0x8a6e04117d545171 # initialize rs1
li x7, 0x1a367857681c7466 # initialize rs2
rem x12, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x28, 0x28cb9240e600ebf4 # initialize rs1
li x9, 0x2b274dbf4ca6465d # initialize rs2
rem x13, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x31, 0x8ff75674098130d7 # initialize rs1
li x18, 0x16a9f920f86f5de9 # initialize rs2
rem x14, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x6, 0xb33599d2d82e279f # initialize rs1
li x8, 0x0091b18864da0579 # initialize rs2
rem x15, x6, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x9, 0x3292990fdabc647c # initialize rs1
li x16, 0x9414419ea9e85614 # initialize rs2
rem x16, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x26, 0x292760dadb3aa975 # initialize rs1
li x12, 0xce6482796ce06f58 # initialize rs2
rem x17, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x8, 0xbeb2afc90a344078 # initialize rs1
li x13, 0xfdd22031531f1667 # initialize rs2
rem x18, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x3, 0x595df06864bf821a # initialize rs1
li x7, 0xf7c5a1e862381526 # initialize rs2
rem x19, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x7, 0xc47ea6e78d42f6aa # initialize rs1
li x9, 0x3c15041814e48f86 # initialize rs2
rem x20, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x25, 0x9ac12adc28da762e # initialize rs1
li x22, 0xaeb19973315cd305 # initialize rs2
rem x21, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x15, 0x3e884c07409648a6 # initialize rs1
li x30, 0x9e163c81e2d6f0ae # initialize rs2
rem x22, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x19, 0xef8ec3f141fc89dc # initialize rs1
li x16, 0x65c6c2da6ad316d8 # initialize rs2
rem x23, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x19, 0xd599e8fb81b29331 # initialize rs1
li x26, 0x1086aaa468569de1 # initialize rs2
rem x24, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x2, 0x1f4b1155aca7c9e4 # initialize rs1
li x9, 0x3759e0d1140fafbc # initialize rs2
rem x25, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x9, 0x0e11f833865c5ca7 # initialize rs1
li x7, 0xb9f0c366edff49a0 # initialize rs2
rem x26, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x11, 0x37ef0c0b22700cf6 # initialize rs1
li x28, 0x8dc252e911a1af40 # initialize rs2
rem x27, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x1, 0x633806d42cd1f792 # initialize rs1
li x19, 0x62254cf4a1afb0a7 # initialize rs2
rem x28, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x19, 0x3f38dffbb7002aac # initialize rs1
li x28, 0x6b067efbc44b3307 # initialize rs2
rem x29, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x1, 0x72bb9682203e2d4b # initialize rs1
li x26, 0xa936bbe8004ff1ff # initialize rs2
rem x30, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0xf40507e78c4307e0 # initialize rs1
li x24, 0xc7b184f178f7e68b # initialize rs2
rem x31, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x7, 0x0000000000000000 # initialize rs1
li x8, 0x7f8302ebae1af0db # initialize rs2
rem x12, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x26, 0x0000000000000001 # initialize rs1
li x31, 0x5dc7caa985b7682e # initialize rs2
rem x5, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x6, 0x3da974e922c5199b # initialize rs2
rem x12, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x28, 0x4fc320ff3f25b65e # initialize rs2
rem x18, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x9, 0x8000000000000001 # initialize rs1
li x29, 0x9f315e073f898e75 # initialize rs2
rem x11, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x11, 0x7fffffffffffffff # initialize rs1
li x9, 0x0b1cd77b526472b8 # initialize rs2
rem x3, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x11, 0x7ffffffffffffffe # initialize rs1
li x7, 0x7c724e9104a38208 # initialize rs2
rem x28, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x31, 0x8b64bb991e87f085 # initialize rs2
rem x2, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x1, 0xfffffffffffffffe # initialize rs1
li x5, 0xf14b472686e64684 # initialize rs2
rem x17, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x06c33d0a1949c09d # initialize rs2
rem x31, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x955d7dd8c0db84e2 # initialize rs2
rem x14, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x12, 0x5555555555555555 # initialize rs1
li x21, 0x6e385c2f60828b67 # initialize rs2
rem x15, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x9, 0x00000000ffffffff # initialize rs1
li x5, 0xc9205e1b98ae3909 # initialize rs2
rem x2, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x19, 0x00000000fffffffe # initialize rs1
li x8, 0x68d4c76e11f5b25e # initialize rs2
rem x18, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x31, 0x0000000100000000 # initialize rs1
li x14, 0x60c6b38ec75e8f45 # initialize rs2
rem x24, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x22, 0x0000000100000001 # initialize rs1
li x25, 0x0e27a96ca6fe722b # initialize rs2
rem x10, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x11, 0x9c9610a0aa57f60a # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
rem x3, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x31, 0x48fa943941485df8 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
rem x5, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x17, 0x1e8b74a08d35f698 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
rem x28, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x5, 0x645a14f25becc8fa # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
rem x12, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x7, 0x6bd133858034150d # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rem x16, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x18, 0xef876a2c9bdb8c69 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
rem x8, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x23, 0x4d6d80340a0d53db # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
rem x12, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x14, 0x3e65c0e3dfb690b9 # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
rem x24, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x18, 0x78f5f68e9bf8c145 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
rem x30, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x23, 0xdfdfb7e104daebb4 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
rem x5, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x2, 0xc204a9b8b1d84882 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x25, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x1, 0x30b11bee533c3738 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
rem x10, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x2, 0x5ecbda5b1564c016 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
rem x22, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x13, 0xfcaba06e8cecea74 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
rem x24, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x9, 0x8a6d53021a300744 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
rem x26, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x9, 0x297a23e3ed3dada9 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
rem x6, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x6, 0x0000000000000000 # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
rem x7, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x24, 0x0000000000000000 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
rem x15, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x5, 0x0000000000000000 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
rem x17, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x18, 0x0000000000000000 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
rem x17, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x26, 0x0000000000000000 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
rem x22, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000000 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rem x24, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000000000000 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
rem x23, x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x19, 0x0000000000000000 # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
rem x20, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x31, 0x0000000000000000 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
rem x13, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x20, 0x0000000000000000 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rem x31, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000000000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x2, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x21, 0x0000000000000000 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
rem x9, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x23, 0x0000000000000000 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rem x6, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x23, 0x0000000000000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
rem x11, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x19, 0x0000000000000000 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
rem x9, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x12, 0x0000000000000000 # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
rem x10, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x9, 0x0000000000000001 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
rem x14, x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x13, 0x0000000000000001 # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
rem x23, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x21, 0x0000000000000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
rem x29, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x16, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
rem x30, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x16, 0x0000000000000001 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
rem x20, x16, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
rem x20, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x20, 0x0000000000000001 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
rem x13, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
rem x24, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x26, 0x0000000000000001 # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
rem x18, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000000000001 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
rem x5, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x0000000000000001 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x2, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x12, 0x0000000000000001 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
rem x25, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x1, 0x0000000000000001 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
rem x3, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x20, 0x0000000000000001 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
rem x19, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x20, 0x0000000000000001 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rem x1, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x18, 0x0000000000000001 # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
rem x7, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x23, 0x0000000000000002 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
rem x11, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x2, 0x0000000000000002 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
rem x1, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x8, 0x0000000000000002 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
rem x18, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x31, 0x0000000000000002 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
rem x8, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x1, 0x0000000000000002 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
rem x26, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000002 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
rem x18, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x7, 0x0000000000000002 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rem x8, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x21, 0x0000000000000002 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
rem x17, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x3, 0x0000000000000002 # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
rem x16, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x18, 0x0000000000000002 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
rem x10, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x0000000000000002 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x13, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x17, 0x0000000000000002 # initialize rs1
li x16, 0x5555555555555555 # initialize rs2
rem x27, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x19, 0x0000000000000002 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rem x2, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x11, 0x0000000000000002 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
rem x18, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x28, 0x0000000000000002 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
rem x11, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x31, 0x0000000000000002 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
rem x1, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x18, 0x8000000000000000 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
rem x15, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x26, 0x8000000000000000 # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
rem x9, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x5, 0x8000000000000000 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
rem x24, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
rem x30, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x28, 0x8000000000000000 # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
rem x15, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x10, 0x8000000000000000 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
rem x23, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x8, 0x8000000000000000 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
rem x18, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x10, 0x8000000000000000 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
rem x30, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x24, 0x8000000000000000 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
rem x6, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x2, 0x8000000000000000 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
rem x15, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x8000000000000000 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x15, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x25, 0x8000000000000000 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
rem x18, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x15, 0x8000000000000000 # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
rem x12, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x5, 0x8000000000000000 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
rem x21, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x13, 0x8000000000000000 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
rem x22, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x30, 0x8000000000000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rem x8, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x18, 0x8000000000000001 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
rem x25, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x9, 0x8000000000000001 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
rem x21, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x7, 0x8000000000000001 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rem x31, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x30, 0x8000000000000001 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
rem x5, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x12, 0x8000000000000001 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
rem x6, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x8, 0x8000000000000001 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
rem x3, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x18, 0x8000000000000001 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rem x16, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000001 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
rem x26, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x8, 0x8000000000000001 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
rem x2, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x2, 0x8000000000000001 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
rem x8, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x8000000000000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x15, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x15, 0x8000000000000001 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
rem x2, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x13, 0x8000000000000001 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
rem x31, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x18, 0x8000000000000001 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
rem x13, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x27, 0x8000000000000001 # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
rem x5, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x30, 0x8000000000000001 # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
rem x29, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x29, 0x7fffffffffffffff # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
rem x26, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x23, 0x7fffffffffffffff # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
rem x17, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x9, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
rem x7, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x24, 0x7fffffffffffffff # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
rem x17, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x27, 0x7fffffffffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
rem x30, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x22, 0x7fffffffffffffff # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
rem x27, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x27, 0x7fffffffffffffff # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
rem x5, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x5, 0x7fffffffffffffff # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
rem x27, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x8, 0x7fffffffffffffff # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
rem x5, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x31, 0x7fffffffffffffff # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
rem x28, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x7fffffffffffffff # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x23, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x22, 0x7fffffffffffffff # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
rem x11, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x10, 0x7fffffffffffffff # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
rem x31, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x16, 0x7fffffffffffffff # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
rem x30, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x2, 0x7fffffffffffffff # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
rem x25, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x12, 0x7fffffffffffffff # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
rem x19, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x26, 0x7ffffffffffffffe # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
rem x6, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x13, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
rem x18, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x21, 0x7ffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
rem x27, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x17, 0x7ffffffffffffffe # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
rem x31, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x20, 0x7ffffffffffffffe # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
rem x26, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x17, 0x7ffffffffffffffe # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
rem x20, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x31, 0x7ffffffffffffffe # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
rem x11, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x28, 0x7ffffffffffffffe # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
rem x24, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x22, 0x7ffffffffffffffe # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
rem x6, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x24, 0x7ffffffffffffffe # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
rem x19, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x7ffffffffffffffe # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x27, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x20, 0x7ffffffffffffffe # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
rem x15, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x10, 0x7ffffffffffffffe # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
rem x20, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
rem x10, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x5, 0x7ffffffffffffffe # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
rem x1, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x19, 0x7ffffffffffffffe # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
rem x23, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x5, 0xffffffffffffffff # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
rem x6, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x12, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
rem x19, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x3, 0xffffffffffffffff # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rem x5, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x26, 0xffffffffffffffff # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
rem x17, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x26, 0xffffffffffffffff # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
rem x11, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x24, 0xffffffffffffffff # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
rem x30, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
rem x16, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x13, 0xffffffffffffffff # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
rem x2, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x5, 0xffffffffffffffff # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
rem x18, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x1, 0xffffffffffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
rem x31, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0xffffffffffffffff # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x20, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x1, 0xffffffffffffffff # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
rem x22, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x19, 0xffffffffffffffff # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
rem x26, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x3, 0xffffffffffffffff # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
rem x11, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x21, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rem x10, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x25, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
rem x1, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x22, 0xfffffffffffffffe # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
rem x31, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x18, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
rem x6, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x17, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
rem x31, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x19, 0xfffffffffffffffe # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
rem x15, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x20, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rem x15, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x22, 0xfffffffffffffffe # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
rem x20, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rem x9, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x13, 0xfffffffffffffffe # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
rem x16, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
rem x25, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x16, 0xfffffffffffffffe # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
rem x18, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0xfffffffffffffffe # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x14, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x13, 0xfffffffffffffffe # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
rem x17, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x6, 0xfffffffffffffffe # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
rem x27, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
rem x18, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x27, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
rem x21, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x27, 0xfffffffffffffffe # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
rem x2, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
rem x12, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
rem x7, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
rem x11, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
rem x13, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
rem x13, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
rem x24, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
rem x1, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
rem x25, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
rem x7, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
rem x17, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x5, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
rem x30, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
rem x17, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
rem x20, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
rem x16, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rem x11, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
rem x13, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
rem x9, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
rem x17, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
rem x22, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rem x29, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
rem x10, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
rem x17, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
rem x17, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
rem x2, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
rem x18, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x3, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
rem x13, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
rem x25, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
rem x20, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
rem x15, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rem x3, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x21, 0x5555555555555555 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
rem x26, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x26, 0x5555555555555555 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rem x8, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x26, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
rem x8, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x10, 0x5555555555555555 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
rem x27, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x1, 0x5555555555555555 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
rem x2, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x25, 0x5555555555555555 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
rem x10, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x18, 0x5555555555555555 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
rem x16, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x26, 0x5555555555555555 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
rem x11, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x14, 0x5555555555555555 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
rem x18, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x24, 0x5555555555555555 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
rem x25, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x5555555555555555 # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x9, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x25, 0x5555555555555555 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
rem x1, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x25, 0x5555555555555555 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
rem x3, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x3, 0x5555555555555555 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
rem x11, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x24, 0x5555555555555555 # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
rem x19, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x21, 0x5555555555555555 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
rem x25, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x1, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
rem x15, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x7, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
rem x10, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x1, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
rem x3, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x9, 0x00000000ffffffff # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
rem x25, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x22, 0x00000000ffffffff # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
rem x28, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x13, 0x00000000ffffffff # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
rem x10, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x28, 0x00000000ffffffff # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
rem x30, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x13, 0x00000000ffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
rem x21, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x1, 0x00000000ffffffff # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
rem x15, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x7, 0x00000000ffffffff # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
rem x14, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x00000000ffffffff # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x24, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x30, 0x00000000ffffffff # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
rem x22, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rem x1, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x9, 0x00000000ffffffff # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
rem x26, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x18, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
rem x14, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x6, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
rem x7, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x9, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
rem x8, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x15, 0x00000000fffffffe # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
rem x13, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x1, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
rem x24, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x15, 0x00000000fffffffe # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
rem x2, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x17, 0x00000000fffffffe # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
rem x11, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x13, 0x00000000fffffffe # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
rem x9, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x20, 0x00000000fffffffe # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
rem x17, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
rem x29, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x6, 0x00000000fffffffe # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
rem x7, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x6, 0x00000000fffffffe # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
rem x21, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x10, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x5, 0x00000000fffffffe # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
rem x20, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x8, 0x00000000fffffffe # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
rem x16, x8, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x16, 0x00000000fffffffe # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
rem x17, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x6, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
rem x26, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x12, 0x00000000fffffffe # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
rem x16, x12, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x11, 0x0000000100000000 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
rem x10, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x10, 0x0000000100000000 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
rem x6, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x25, 0x0000000100000000 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rem x30, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x14, 0x0000000100000000 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
rem x29, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x15, 0x0000000100000000 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
rem x18, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
rem x25, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000100000000 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
rem x2, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x12, 0x0000000100000000 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
rem x20, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x12, 0x0000000100000000 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
rem x14, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000100000000 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
rem x22, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x0000000100000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x16, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x25, 0x0000000100000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
rem x17, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x5, 0x0000000100000000 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
rem x25, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x2, 0x0000000100000000 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
rem x26, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x29, 0x0000000100000000 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
rem x18, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x10, 0x0000000100000000 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
rem x28, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x30, 0x0000000100000001 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
rem x22, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x23, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
rem x7, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x19, 0x0000000100000001 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
rem x8, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x15, 0x0000000100000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
rem x18, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x25, 0x0000000100000001 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
rem x7, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x17, 0x0000000100000001 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
rem x8, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x29, 0x0000000100000001 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
rem x26, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x12, 0x0000000100000001 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
rem x10, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x2, 0x0000000100000001 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
rem x8, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x29, 0x0000000100000001 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
rem x19, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000100000001 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
rem x14, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x6, 0x0000000100000001 # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
rem x19, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x8, 0x0000000100000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
rem x6, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x13, 0x0000000100000001 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
rem x31, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x14, 0x0000000100000001 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
rem x11, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x26, 0x0000000100000001 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
rem x9, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x6ae9013c603fb414 # initialize rs1
li x0, 0x4e3cffb7e59f9697 # initialize rs2
rem x29, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xc49409eb6f12a189 # initialize rs1
li x1, 0x5173bd23c54324ae # initialize rs2
rem x3, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xce264fdf3986cd7e # initialize rs1
li x2, 0xa5c453e2aef4618a # initialize rs2
rem x25, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x88bcc15d91d503a6 # initialize rs1
li x3, 0x541599c9f62d3bd8 # initialize rs2
rem x9, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe61b1e8617fe201a # initialize rs1
li x4, 0x1e915a224b4306a5 # initialize rs2
rem x11, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa20f3273bbc800dc # initialize rs1
li x5, 0x54bf7b6c552f09d3 # initialize rs2
rem x20, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xe0845e19871a7538 # initialize rs1
li x6, 0x140026621466f81c # initialize rs2
rem x14, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x14, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4c430e8761079954 # initialize rs1
li x7, 0x2608e6a403ec9d10 # initialize rs2
rem x30, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xbd649e40f0d1c4b7 # initialize rs1
li x8, 0xd0bebd4e005cfed8 # initialize rs2
rem x11, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x01d6838b48452c02 # initialize rs1
li x9, 0x458515c335656d45 # initialize rs2
rem x26, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xd7d69359aae32b83 # initialize rs1
li x10, 0xe8c885b9edd7e1c2 # initialize rs2
rem x1, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x86a72a2ad26e537d # initialize rs1
li x11, 0x43ff4e1e40ec3043 # initialize rs2
rem x15, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xf3fce3479f3c2172 # initialize rs1
li x12, 0x7b4da2d656db71f7 # initialize rs2
rem x22, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x2321b7c7b092380b # initialize rs1
li x13, 0xf655ac847c0d19fd # initialize rs2
rem x3, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x1fdb580703f878fb # initialize rs1
li x14, 0x802ca0ebaed4d9e2 # initialize rs2
rem x20, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xea7b39dce0c5afcf # initialize rs1
li x15, 0xc04f6766663a6265 # initialize rs2
rem x16, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xed5ea94d99b0f17e # initialize rs1
li x16, 0x7e0161b2e671976f # initialize rs2
rem x31, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xdb52effca31f7a1e # initialize rs1
li x17, 0x9eb0c31b05799b55 # initialize rs2
rem x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x926714087d15862c # initialize rs1
li x18, 0xf2924059aaaa43a4 # initialize rs2
rem x14, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x3b1f9b1a9b55e3fd # initialize rs1
li x19, 0x5c14f9d8813a5d9a # initialize rs2
rem x3, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x8193c294ad2a0a54 # initialize rs1
li x20, 0x41cd75120002cfbd # initialize rs2
rem x19, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x47db60af63bd49a6 # initialize rs1
li x21, 0xd9cd0893e98bc312 # initialize rs2
rem x10, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xee5cc2446073c437 # initialize rs1
li x22, 0x5ad311658638b5b9 # initialize rs2
rem x11, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x2ea11cb4bd161ee2 # initialize rs1
li x23, 0x58aa3ccec57c99b5 # initialize rs2
rem x11, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xc0b2531a41fb3687 # initialize rs1
li x24, 0x8df79db8618e0be5 # initialize rs2
rem x22, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xf50904d4c49acfb2 # initialize rs1
li x25, 0xf523c6b72382507c # initialize rs2
rem x11, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x4f093e8864ef13d6 # initialize rs1
li x26, 0x13b080b11c96e97c # initialize rs2
rem x25, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xf69bc55f289a2290 # initialize rs1
li x27, 0x99723d2a8add507a # initialize rs2
rem x20, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xf7b1319b506c37a8 # initialize rs1
li x28, 0xc03f9fb67d7fbb34 # initialize rs2
rem x18, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x5d722eddb9709c6d # initialize rs1
li x29, 0x8913e84ad58677cf # initialize rs2
rem x11, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xa01975c686ad9938 # initialize rs1
li x30, 0x95131839f564e6d1 # initialize rs2
rem x1, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x1951781ec9cf1fc1 # initialize rs1
li x31, 0x912d28635734da12 # initialize rs2
rem x17, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x2ec06de37bc395b5 # initialize rs1
li x21, 0x1fb30f62f20e8439 # initialize rs2
rem x0, x0, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xe56ab3b7c8e6f5fe # initialize rs1
li x3, 0xfeb298a28dc10052 # initialize rs2
rem x1, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7949a1fb88d4fc95 # initialize rs1
li x26, 0x61a44eb4149087c0 # initialize rs2
rem x2, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x7fa0b456d9fb940b # initialize rs1
li x2, 0xa76cb0baaab59314 # initialize rs2
rem x3, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe9f20eb2e5986ed3 # initialize rs1
li x19, 0xba2278ab09f22554 # initialize rs2
rem x4, x4, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x7981a5c51a92f187 # initialize rs1
li x23, 0xb7643d80968d83a2 # initialize rs2
rem x5, x5, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5c529124552ec86a # initialize rs1
li x27, 0xd8c5518815e98f56 # initialize rs2
rem x6, x6, x27 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xebe88eedc540d80c # initialize rs1
li x11, 0xbed9c1defe83c211 # initialize rs2
rem x7, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x45cdd3065230b45a # initialize rs1
li x23, 0x41fac73ab848b817 # initialize rs2
rem x8, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x7f585257f0dc003d # initialize rs1
li x24, 0x59acf9e673ae9757 # initialize rs2
rem x9, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x90e97f05a551e228 # initialize rs1
li x15, 0xd4c51f3a307a7aaf # initialize rs2
rem x10, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xd8382df5c9b29058 # initialize rs1
li x3, 0xbb982fa8e9949016 # initialize rs2
rem x11, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xe1075c0d327c8f21 # initialize rs1
li x11, 0xba6e3ea352213a48 # initialize rs2
rem x12, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x5810438dd696e711 # initialize rs1
li x8, 0xcd5f258d5d1b43de # initialize rs2
rem x13, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xddb2ae7b870731c9 # initialize rs1
li x29, 0x212fe99e7ac4fdb6 # initialize rs2
rem x14, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x78e5fc03265c8ef5 # initialize rs1
li x26, 0xef4bfb2460647aae # initialize rs2
rem x15, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x91ce4cca43f9c3b3 # initialize rs1
li x17, 0x651d4bcadda10059 # initialize rs2
rem x16, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x7304a0b3a7d8f44b # initialize rs1
li x28, 0xb083f7612459911a # initialize rs2
rem x17, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xf44a896a55f870f6 # initialize rs1
li x2, 0x5efb1a4beb7a50a7 # initialize rs2
rem x18, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xf22e4cebe197e362 # initialize rs1
li x17, 0x570deac579cb2cd2 # initialize rs2
rem x19, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xb48e0448336d83e2 # initialize rs1
li x23, 0xd34456957db201b3 # initialize rs2
rem x20, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x2fe5f72fd71f7b6c # initialize rs1
li x11, 0x095e0f8fb7e18aa8 # initialize rs2
rem x21, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xf7c10851b8d2d0eb # initialize rs1
li x16, 0xab5c53c258e355a2 # initialize rs2
rem x22, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x0f913239368fe02d # initialize rs1
li x12, 0xb6f3a26f8dd6d76f # initialize rs2
rem x23, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x56498dcfadf60532 # initialize rs1
li x18, 0x37e08c46477d8712 # initialize rs2
rem x24, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x23730f3690c1f467 # initialize rs1
li x12, 0xe89d449bca254a6c # initialize rs2
rem x25, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xaa03039ddbdcbc70 # initialize rs1
li x27, 0x2487649339ed6f5f # initialize rs2
rem x26, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x5563e1ef0bd5c585 # initialize rs1
li x9, 0x6f7eb2c21f8375cd # initialize rs2
rem x27, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x853269f71debd070 # initialize rs1
li x22, 0x1e1268832278ad63 # initialize rs2
rem x28, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x366d4535f9c046a3 # initialize rs1
li x16, 0x4969ac78ea801f3d # initialize rs2
rem x29, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xf37b1039aa38e18e # initialize rs1
li x6, 0xe54054726953dadc # initialize rs2
rem x30, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x6fa34350230f999f # initialize rs1
li x3, 0x8350e89bacf44c56 # initialize rs2
rem x31, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x27, 0xcdf7d0b8924a8956 # initialize rs1
li x0, 0x8f008b674429ac5d # initialize rs2
rem x0, x27, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x6, 0x3ddf5334dce47268 # initialize rs1
li x1, 0x61aec2d377a95304 # initialize rs2
rem x1, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x22, 0x4dcf76ee8f859c02 # initialize rs1
li x2, 0x3fcd698242f57af1 # initialize rs2
rem x2, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x11, 0xd5bf81bed424b725 # initialize rs1
li x3, 0xc6fc426aa54e0af7 # initialize rs2
rem x3, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x2, 0xe8093c225150262f # initialize rs1
li x4, 0xfc554e7fd9ab036e # initialize rs2
rem x4, x2, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x19, 0x08bf7668287616b3 # initialize rs1
li x5, 0xd5b04d791af43e27 # initialize rs2
rem x5, x19, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x1, 0x7c2e037e2dff75b9 # initialize rs1
li x6, 0xd75bb1bf80e50099 # initialize rs2
rem x6, x1, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0xb4b022f991e81a7c # initialize rs1
li x7, 0xd0f80c381e57f9d4 # initialize rs2
rem x7, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x28, 0x3fa37deea6e0552a # initialize rs1
li x8, 0xfc8184c5329ca42c # initialize rs2
rem x8, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x6, 0xa1ebe51347fa7bb8 # initialize rs1
li x9, 0x816bcceedfeeb3d3 # initialize rs2
rem x9, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x1, 0x7dc9d57fe624aff6 # initialize rs1
li x10, 0x2efb1f5d9dc73bda # initialize rs2
rem x10, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x16, 0x5388ca5561d94072 # initialize rs1
li x11, 0xa13bed52d7dae0fa # initialize rs2
rem x11, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x24, 0xbc9f0d0d9ec1dc70 # initialize rs1
li x12, 0xf02055948d16e092 # initialize rs2
rem x12, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x30, 0xde0d78481fb78df1 # initialize rs1
li x13, 0x4885986be4f94e21 # initialize rs2
rem x13, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x12, 0x3550d04a8dfbefa3 # initialize rs1
li x14, 0x16c64021068a526d # initialize rs2
rem x14, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x24, 0x89294583e004c34b # initialize rs1
li x15, 0x7e0c8fe1299dfdc5 # initialize rs2
rem x15, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x29, 0xeb3f7008e0792b24 # initialize rs1
li x16, 0x02d567145c313315 # initialize rs2
rem x16, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x24, 0x04db641f5607644b # initialize rs1
li x17, 0x9ff24c34dc7757db # initialize rs2
rem x17, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x25, 0x6e6b48a9a6b09fe6 # initialize rs1
li x18, 0x0ceaad1310d1cb62 # initialize rs2
rem x18, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x26, 0x4a9c88450edcd9c1 # initialize rs1
li x19, 0xa471a673c336558c # initialize rs2
rem x19, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x18, 0x1f524c26de15a546 # initialize rs1
li x20, 0xf0b7b17312ba471b # initialize rs2
rem x20, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x20, 0x4bc21d1063370a5b # initialize rs1
li x21, 0x90c81985b57f0068 # initialize rs2
rem x21, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x14, 0xddac59071f4f1cd0 # initialize rs1
li x22, 0x50ba9575a0de2c77 # initialize rs2
rem x22, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x13, 0x6fddac1d01e03e82 # initialize rs1
li x23, 0x9bd83728c8249df1 # initialize rs2
rem x23, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x19, 0xa5251fc0440444f0 # initialize rs1
li x24, 0x12ed3d0b37ad3f5c # initialize rs2
rem x24, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x30, 0x1bd3307b407833de # initialize rs1
li x25, 0x97215bce1b8947a3 # initialize rs2
rem x25, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x16, 0x30868b45850d8ad2 # initialize rs1
li x26, 0x1e7cf2252b00ec89 # initialize rs2
rem x26, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x23, 0x65187d306e82e015 # initialize rs1
li x27, 0xcd0f034d34ce6a6e # initialize rs2
rem x27, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x17, 0x7d7d959d736a05f3 # initialize rs1
li x28, 0xa31fce254c087e64 # initialize rs2
rem x28, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x6, 0x86e52f1ef192bbd6 # initialize rs1
li x29, 0xaf9590ea3f1c0625 # initialize rs2
rem x29, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x8, 0x5ede150c626159c6 # initialize rs1
li x30, 0xbdf0cc2a3bd47a4d # initialize rs2
rem x30, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x9, 0x4affdd4f020217e8 # initialize rs1
li x31, 0xf14b352bcabef52a # initialize rs2
rem x31, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xb8abacc80728221a # initialize rs1
li x0, 0xe11445d07901f904 # initialize rs2
rem x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x4558c034f45bf0b4 # initialize rs1
li x1, 0x7b491f2708c3e975 # initialize rs2
rem x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x1dd2a37c8ca38d09 # initialize rs1
li x2, 0xbb2700f270cc7837 # initialize rs2
rem x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x500a1df5c751a153 # initialize rs1
li x3, 0x977d301ea6c7e4bd # initialize rs2
rem x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf6cdbef990daa858 # initialize rs1
li x4, 0xfdf25564c3087e5e # initialize rs2
rem x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xbcdbc1e3f93bf011 # initialize rs1
li x5, 0xd20e6d3b915a6efd # initialize rs2
rem x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x37c66c5e10f41070 # initialize rs1
li x6, 0xaafebce287b2685f # initialize rs2
rem x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x29520deef5909780 # initialize rs1
li x7, 0x4a964dcc2b7ceb47 # initialize rs2
rem x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x6598d3b9e926e407 # initialize rs1
li x8, 0x0d02daa3189d176d # initialize rs2
rem x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x14052745f3357588 # initialize rs1
li x9, 0xd676cbc9d10cd225 # initialize rs2
rem x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xf16ec5d8087b68d8 # initialize rs1
li x10, 0x915c4b26a33d5aac # initialize rs2
rem x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x9d7b1c3ff88a0409 # initialize rs1
li x11, 0x55c03ab86e43a6b6 # initialize rs2
rem x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xfbd6ece04df67f2f # initialize rs1
li x12, 0x02bd49c14465a87a # initialize rs2
rem x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xcc41acf338a92f55 # initialize rs1
li x13, 0x6994164983e6ff65 # initialize rs2
rem x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x2787642b17f55fce # initialize rs1
li x14, 0x722036effa1e89de # initialize rs2
rem x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x1f3818b3cf5c24e0 # initialize rs1
li x15, 0xa4c6885981084d58 # initialize rs2
rem x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x1f3fc1e977f9c0be # initialize rs1
li x16, 0x867cd03f8740962e # initialize rs2
rem x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x06097f8b42dde748 # initialize rs1
li x17, 0x467a1a0318316c13 # initialize rs2
rem x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x9e23a5abed139ea6 # initialize rs1
li x18, 0xe5bc8c723e01e689 # initialize rs2
rem x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x6ea2206fac59d2fb # initialize rs1
li x19, 0xb37a50e40c4bf501 # initialize rs2
rem x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x39c3a9bc4c19b019 # initialize rs1
li x20, 0x36749f90b87e010c # initialize rs2
rem x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x9b9e9330899872bb # initialize rs1
li x21, 0x18b3a2fbdd57868c # initialize rs2
rem x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x851c7d968a488b79 # initialize rs1
li x22, 0xe2272726d7cc1ba4 # initialize rs2
rem x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x02cecb016560d8ae # initialize rs1
li x23, 0x4396f86434fbdd5b # initialize rs2
rem x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x8856f28e558e0b30 # initialize rs1
li x24, 0x2b37b91183b322ef # initialize rs2
rem x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x577c8541e2d87a04 # initialize rs1
li x25, 0x140797c7c1a191c0 # initialize rs2
rem x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xd15e21704d71b136 # initialize rs1
li x26, 0x0935ba301f456c18 # initialize rs2
rem x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xe583c82a71707dae # initialize rs1
li x27, 0x1ac4dc27a6379b1a # initialize rs2
rem x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x92dd01a9cf289467 # initialize rs1
li x28, 0x3aec675e498f71c4 # initialize rs2
rem x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xb21df2988587f525 # initialize rs1
li x29, 0x84579fffc76194b8 # initialize rs2
rem x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xa09d0219f1a7dc59 # initialize rs1
li x30, 0xedc2a251342e9c58 # initialize rs2
rem x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x472e194caf6add92 # initialize rs1
li x31, 0xef086094cab28a3f # initialize rs2
rem x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x25, x1 # perform first operation
rem x22, x28, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x18, x13, x11 # perform first operation
rem x15, x31, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x8, x28, x3 # perform first operation
rem x17, x31, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x24, x14, x15 # perform first operation
rem x16, x24, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x22, x17, x19 # perform first operation
rem x19, x26, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x7, x25, x9 # perform first operation
rem x28, x15, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x28, x10, x17 # perform first operation
rem x28, x30, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x25, x7, x22 # perform first operation
rem x25, x17, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x9, x8 # perform first operation
rem x30, x2, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x1, x31, x13 # perform first operation
rem x31, x22, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x19, x17 # perform first operation
rem x17, x14, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x3, x24, x25 # perform first operation
rem x1, x18, x6 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-mulhu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xe87a9a770d9b31d8 # initialize rs1
li x6, 0xed1d94dbf7f77f9e # initialize rs2
mulhu x3, x0, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x5711de2b8e905579 # initialize rs1
li x27, 0x32c6042379b5073b # initialize rs2
mulhu x8, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x343bed0493acdccf # initialize rs1
li x31, 0x5f0e4c6f7a2dc3d7 # initialize rs2
mulhu x29, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xa1ec1b1002ef9dd0 # initialize rs1
li x25, 0x526e8ee63527c584 # initialize rs2
mulhu x8, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x73f6d083f8be09ef # initialize rs1
li x6, 0x5808b059836da355 # initialize rs2
mulhu x9, x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x55e011bf5352ee22 # initialize rs1
li x13, 0x6ba58ea486fcef4d # initialize rs2
mulhu x18, x5, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xcd3d110f4dec1aa3 # initialize rs1
li x23, 0xdee1a81a7e31fc80 # initialize rs2
mulhu x2, x6, x23 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x8156b383ebc6690c # initialize rs1
li x6, 0x92499c6502ead586 # initialize rs2
mulhu x1, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9e087363628cfb3e # initialize rs1
li x12, 0xac3861a7c9cbc419 # initialize rs2
mulhu x14, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x34670b7fe0ee6806 # initialize rs1
li x30, 0xde6b15d2801b1cdc # initialize rs2
mulhu x22, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xb39c594db4e54cd0 # initialize rs1
li x8, 0x36dc3761f954a469 # initialize rs2
mulhu x30, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xa748715c989f1058 # initialize rs1
li x27, 0xdb5e173525ee4a15 # initialize rs2
mulhu x28, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x48a41bad17b4bcfa # initialize rs1
li x5, 0xf7eaeb31f96904f9 # initialize rs2
mulhu x29, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xb4bb03ca09b3dc26 # initialize rs1
li x7, 0xbe3d8eb15ebf8c1e # initialize rs2
mulhu x17, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x0454bde3acdeb9f7 # initialize rs1
li x1, 0x7b56e8803cb63267 # initialize rs2
mulhu x26, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x4edb7dd51a656987 # initialize rs1
li x3, 0x2fd434a3e328a27f # initialize rs2
mulhu x29, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x9e941d671f46a5c8 # initialize rs1
li x5, 0xf7485d01025eab9c # initialize rs2
mulhu x9, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xa2e4745318680eba # initialize rs1
li x5, 0x9b30d6f06f90f3d7 # initialize rs2
mulhu x1, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x9b207b494ee1ddd3 # initialize rs1
li x25, 0xba7874957dff6903 # initialize rs2
mulhu x6, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xa69120cf74ab7b04 # initialize rs1
li x18, 0x54fa2e1f0b52052c # initialize rs2
mulhu x25, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x170320191906f5a1 # initialize rs1
li x28, 0xc083351c260b2659 # initialize rs2
mulhu x23, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xd63173ed2d641d13 # initialize rs1
li x22, 0x851fb81681ec5e51 # initialize rs2
mulhu x16, x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xda74e9c9e0b7e34d # initialize rs1
li x8, 0xd5b0f44e36923473 # initialize rs2
mulhu x14, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x75f56827f3f72427 # initialize rs1
li x31, 0xf1105c63f92431e3 # initialize rs2
mulhu x16, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x609c79652107626f # initialize rs1
li x1, 0xf3dd771624b64e7d # initialize rs2
mulhu x5, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x5ff019dd1673bb2a # initialize rs1
li x31, 0xa9467ff28fc01d24 # initialize rs2
mulhu x28, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xf39810a807d7a40c # initialize rs1
li x18, 0x12a47555dd6b9a5d # initialize rs2
mulhu x16, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x420c78484715b346 # initialize rs1
li x5, 0x768babab28485a38 # initialize rs2
mulhu x16, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xed366470b4e945cd # initialize rs1
li x24, 0x57f35ee32a96c015 # initialize rs2
mulhu x15, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x1f733a74c1016879 # initialize rs1
li x7, 0xb51d7d76f5914cee # initialize rs2
mulhu x11, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xb7107c4e3d1c155a # initialize rs1
li x19, 0x11930775f2ebb593 # initialize rs2
mulhu x1, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x3415008aa81224d2 # initialize rs1
li x3, 0x5ea22d9269b4ad2c # initialize rs2
mulhu x10, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x19, 0x8a0c4039dcbd99ac # initialize rs1
li x0, 0xc1b9c240415b3b51 # initialize rs2
mulhu x30, x19, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x5, 0xd1c16c2d72d9b7da # initialize rs1
li x1, 0x1ad965ce0aff5072 # initialize rs2
mulhu x17, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x8, 0xeca5b315a9ab6e73 # initialize rs1
li x2, 0x051f006bd12e8750 # initialize rs2
mulhu x12, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x30, 0xc735c58f0009a691 # initialize rs1
li x3, 0x1513327c2dc72505 # initialize rs2
mulhu x25, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x90a1eb8d163dc984 # initialize rs1
li x4, 0xa290637feb4c32c0 # initialize rs2
mulhu x26, x29, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x28e0ab80ee42ba24 # initialize rs1
li x5, 0x49707b8b73246184 # initialize rs2
mulhu x28, x25, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x21, 0xd2e14bac99547218 # initialize rs1
li x6, 0xf48b3296e6f5b301 # initialize rs2
mulhu x16, x21, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x16, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0x280225607a76213b # initialize rs1
li x7, 0x50c527e6df8df3a2 # initialize rs2
mulhu x1, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x26, 0x01ee68fe59dbca41 # initialize rs1
li x8, 0x8f2584c0cc3dc854 # initialize rs2
mulhu x24, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x20, 0xc875f520e89ebf62 # initialize rs1
li x9, 0xac6a588707b531a8 # initialize rs2
mulhu x31, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x13, 0xe8b3859a8c6238ba # initialize rs1
li x10, 0xb652fbc77919311b # initialize rs2
mulhu x3, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x14, 0x8eb3acd61482e03e # initialize rs1
li x11, 0x3d9fdcd85f945f33 # initialize rs2
mulhu x8, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x31, 0x6b0ea3d1f4618f10 # initialize rs1
li x12, 0xada65185363bf24b # initialize rs2
mulhu x26, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x14, 0x3129a3ba6cb9b068 # initialize rs1
li x13, 0x87ea76d4c47be9d7 # initialize rs2
mulhu x3, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x29, 0xbf85830d0cbf90dc # initialize rs1
li x14, 0x26c2dc04cc64f7df # initialize rs2
mulhu x11, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x24, 0xa5887287f1941501 # initialize rs1
li x15, 0x1824ff97ceeb5b75 # initialize rs2
mulhu x20, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x21, 0x776bd7013f8ae230 # initialize rs1
li x16, 0x2f6ca69d3c72f388 # initialize rs2
mulhu x27, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x18, 0x67f3a3d0f46a18c9 # initialize rs1
li x17, 0xcb5c925d049718b7 # initialize rs2
mulhu x20, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x29, 0xc774f98ae48eb262 # initialize rs1
li x18, 0x2575d942ad6389d9 # initialize rs2
mulhu x27, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x21, 0xf27dea0de7673620 # initialize rs1
li x19, 0xca46b58b14346ce6 # initialize rs2
mulhu x11, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x22, 0x61aee5ccf8068027 # initialize rs1
li x20, 0x5b12381ba2cb9b6f # initialize rs2
mulhu x21, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x11, 0xce01c33661868329 # initialize rs1
li x21, 0xbbfcb1931d11a67b # initialize rs2
mulhu x24, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x12, 0x5e395a320ddf3e16 # initialize rs1
li x22, 0x3ea296034071c9a3 # initialize rs2
mulhu x24, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x5, 0x1181fd5f98240f15 # initialize rs1
li x23, 0xdc7cab9244e7219c # initialize rs2
mulhu x2, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x2, 0xe4056b7c0a2263f5 # initialize rs1
li x24, 0x704b7db761c66747 # initialize rs2
mulhu x20, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x11, 0xfd42d29a85b59bc6 # initialize rs1
li x25, 0x377e1cc58fadfa4c # initialize rs2
mulhu x23, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x24, 0xcfee193ce3664e67 # initialize rs1
li x26, 0xcbef25906ac00f6c # initialize rs2
mulhu x18, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x3, 0xead929ed211cbad3 # initialize rs1
li x27, 0x2e7511c9f34da42c # initialize rs2
mulhu x30, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x27, 0x8bc15246f89d0c17 # initialize rs1
li x28, 0x0939815feb784209 # initialize rs2
mulhu x5, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x27, 0xb4a335ce5c742bc8 # initialize rs1
li x29, 0x877ac199c19bef0b # initialize rs2
mulhu x7, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x20, 0xeb0f61a4a15f3b8b # initialize rs1
li x30, 0xc1138de3b2f752a3 # initialize rs2
mulhu x24, x20, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x15, 0x115ffe5d2617636f # initialize rs1
li x31, 0x3b26406fa250e9c2 # initialize rs2
mulhu x10, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 504)

# Testcase cp_rd (Test destination rd = x0)
li x9, 0xaa66599f4b682e92 # initialize rs1
li x3, 0x0dd8c97072815b08 # initialize rs2
mulhu x0, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x26, 0xac14f5a638eb6ab9 # initialize rs1
li x18, 0x0a545770c155aea3 # initialize rs2
mulhu x1, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x13, 0xa5d58f67b34e8835 # initialize rs1
li x5, 0xeaed4c33796b3359 # initialize rs2
mulhu x2, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x6, 0x7a947234c05c5669 # initialize rs1
li x12, 0x50d545e97f08cf18 # initialize rs2
mulhu x3, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x9, 0xf20aae31b82c1e2e # initialize rs1
li x22, 0x70986212d3dd8eb8 # initialize rs2
mulhu x4, x9, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0xcbd9c75af19e424a # initialize rs1
li x20, 0xc0c660ec0f9be24e # initialize rs2
mulhu x5, x28, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0xc4eaa07ef8678b06 # initialize rs1
li x20, 0x5ab40948effd797e # initialize rs2
mulhu x6, x24, x20 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x6, x7 # switch signature pointer register to avoid conflict with test
li x5, 0xa595e877a3bb05df # initialize rs1
li x4, 0x64bfde8fb4bc6b84 # initialize rs2
mulhu x7, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x9, 0xeccfcddca9b1806a # initialize rs1
li x23, 0x7803468f3cfd9a10 # initialize rs2
mulhu x8, x9, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x4, 0x489bcc7f59898c14 # initialize rs1
li x15, 0x7f6f6dc9fff3d5ff # initialize rs2
mulhu x9, x4, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x26, 0xd93ee64e152238d7 # initialize rs1
li x18, 0x0e21657502c2499c # initialize rs2
mulhu x10, x26, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x11, 0xd86431e8c144102a # initialize rs1
li x18, 0xf1dc987d8606ee89 # initialize rs2
mulhu x11, x11, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x22, 0x703e9e32362f76e9 # initialize rs1
li x21, 0x0dc29ae4a57dbe72 # initialize rs2
mulhu x12, x22, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x27, 0x6476146ea7ae3af6 # initialize rs1
li x8, 0xc7c9dde0ee0a61a1 # initialize rs2
mulhu x13, x27, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x16, 0x491fb6f59f8ffdb1 # initialize rs1
li x26, 0xa604c1d8052e1a5b # initialize rs2
mulhu x14, x16, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x15, 0xa74cf740e5e45658 # initialize rs1
li x1, 0x86f716927195d208 # initialize rs2
mulhu x15, x15, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x28, 0x0134b02c768bc845 # initialize rs1
li x18, 0x7d9e52ff8eb12103 # initialize rs2
mulhu x16, x28, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x16, 0xf128a4f70c9cb69e # initialize rs1
li x17, 0xd7d3900cb5274a69 # initialize rs2
mulhu x17, x16, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x18, 0x095714ec0f9d9af1 # initialize rs1
li x17, 0xb68ae80afbddad0a # initialize rs2
mulhu x18, x18, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x29, 0x27dafd0a661597ad # initialize rs1
li x14, 0xb6eb3e1d722fe259 # initialize rs2
mulhu x19, x29, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x30, 0x4af2d6bd230e5bdb # initialize rs1
li x10, 0x5dd6c5014b74c5da # initialize rs2
mulhu x20, x30, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x30, 0x82eab54624480ef2 # initialize rs1
li x21, 0x822cbb4b2a58a50b # initialize rs2
mulhu x21, x30, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x26, 0x3cbf21ddd8cfba93 # initialize rs1
li x4, 0x7e0cfb5fdaca2b3b # initialize rs2
mulhu x22, x26, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x27, 0x6c5fc82ae7bd15a0 # initialize rs1
li x24, 0x7fe11c27a9b0c053 # initialize rs2
mulhu x23, x27, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x27, 0xa1b37e2856118151 # initialize rs1
li x11, 0x3a3da958b930b737 # initialize rs2
mulhu x24, x27, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x28, 0x66e7a9da877c55ab # initialize rs1
li x19, 0xd8961c6896e23c6d # initialize rs2
mulhu x25, x28, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x29, 0x923422d0271f366b # initialize rs1
li x26, 0x41f1d25b4d15abf2 # initialize rs2
mulhu x26, x29, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x2, 0x53f2d3ff204ea4a6 # initialize rs1
li x28, 0xe958df074e5c5286 # initialize rs2
mulhu x27, x2, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x11, 0x57e740ccfa05cbb9 # initialize rs1
li x17, 0x13c9dc8387b0cea6 # initialize rs2
mulhu x28, x11, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x23, 0x9a673e5338a12b18 # initialize rs1
li x14, 0x609e1ad2c3cc44ff # initialize rs2
mulhu x29, x23, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x18, 0x0e524bf5171a49ef # initialize rs1
li x16, 0x7d1768d19202f72d # initialize rs2
mulhu x30, x18, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x17, 0xce888fabba30e055 # initialize rs1
li x5, 0x88b81cc72e11913a # initialize rs2
mulhu x31, x17, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x20, 0x0000000000000000 # initialize rs1
li x3, 0x6fa6b38454a84417 # initialize rs2
mulhu x30, x20, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x2, 0x0000000000000001 # initialize rs1
li x18, 0xa87cf0c0c1356d8c # initialize rs2
mulhu x29, x2, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x29, 0x0000000000000002 # initialize rs1
li x3, 0x501552315b2d33cd # initialize rs2
mulhu x13, x29, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x9, 0x8000000000000000 # initialize rs1
li x16, 0xe9694b8c7ecaa615 # initialize rs2
mulhu x22, x9, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x18, 0x8000000000000001 # initialize rs1
li x5, 0xe7d46b007eee7cf2 # initialize rs2
mulhu x16, x18, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
li x30, 0xf7ba5d181445cdea # initialize rs2
mulhu x17, x24, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x18, 0x7ffffffffffffffe # initialize rs1
li x9, 0x8169386d4afeb544 # initialize rs2
mulhu x26, x18, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x10, 0xb4c79f44015de811 # initialize rs2
mulhu x9, x20, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x9, 0xb887086b66d58c5b # initialize rs2
mulhu x5, x11, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0xfdea5a8caac9637e # initialize rs2
mulhu x16, x2, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0xe77972f0c7b63b01 # initialize rs2
mulhu x31, x12, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x26, 0x5555555555555555 # initialize rs1
li x21, 0xf6373c36b5c1ae6a # initialize rs2
mulhu x29, x26, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x7, 0x3c22c0d509e06df7 # initialize rs2
mulhu x27, x18, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x15, 0x388cabdce0b42b6c # initialize rs2
mulhu x12, x14, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x24, 0x0000000100000000 # initialize rs1
li x27, 0xbbb560ab1ce26f5c # initialize rs2
mulhu x17, x24, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x2, 0x0000000100000001 # initialize rs1
li x1, 0xdf3298f83354b072 # initialize rs2
mulhu x14, x2, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x17, 0xacbc643541fa4c3a # initialize rs1
li x4, 0x0000000000000000 # initialize rs2
mulhu x18, x17, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x2, 0x13abb26d37f72d85 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
mulhu x28, x2, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x11, 0x86299b5da2a249ba # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
mulhu x24, x11, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x3, 0x0069e357aeb5da04 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
mulhu x8, x3, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x13, 0x519f4919a3e275da # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
mulhu x7, x13, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x16, 0x3c3e3f2211d73d1c # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mulhu x22, x16, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x31, 0xb93507a262893951 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
mulhu x12, x31, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x14, 0xea9d2d1fa783f3fe # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
mulhu x8, x14, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x13, 0xfd92b940e52a2861 # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
mulhu x15, x13, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x7, 0x66c048e15ff7e338 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
mulhu x16, x7, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x21, 0xe0b5bf882636023f # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x2, x21, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x31, 0x9c55508c820267e9 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
mulhu x28, x31, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x30, 0x3ea95fc3985d490b # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
mulhu x12, x30, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x31, 0x632315522989efbd # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
mulhu x9, x31, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x14, 0xc7b48dcbc5aef632 # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
mulhu x29, x14, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x26, 0xdcb155ca3c29c9a9 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
mulhu x20, x26, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x11, 0x0000000000000000 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
mulhu x16, x11, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x27, 0x0000000000000000 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
mulhu x18, x27, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x3, 0x0000000000000000 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
mulhu x20, x3, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x23, 0x0000000000000000 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
mulhu x3, x23, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x11, 0x0000000000000000 # initialize rs1
li x4, 0x8000000000000001 # initialize rs2
mulhu x7, x11, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x24, 0x0000000000000000 # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
mulhu x7, x24, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000000000000 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mulhu x5, x11, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x14, 0x0000000000000000 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
mulhu x31, x14, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x10, 0x0000000000000000 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
mulhu x11, x10, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000000000000 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulhu x17, x2, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x0000000000000000 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x23, x31, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x1, 0x0000000000000000 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
mulhu x4, x1, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x7, 0x0000000000000000 # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mulhu x24, x7, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x11, 0x0000000000000000 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
mulhu x24, x11, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x3, 0x0000000000000000 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
mulhu x28, x3, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x10, 0x0000000000000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
mulhu x11, x10, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x9, 0x0000000000000001 # initialize rs1
li x4, 0x0000000000000000 # initialize rs2
mulhu x26, x9, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x10, 0x0000000000000001 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
mulhu x27, x10, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x24, 0x0000000000000001 # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
mulhu x27, x24, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x18, 0x0000000000000001 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
mulhu x31, x18, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x14, 0x0000000000000001 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
mulhu x9, x14, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x19, 0x0000000000000001 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
mulhu x21, x19, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x23, 0x0000000000000001 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
mulhu x15, x23, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x28, 0x0000000000000001 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
mulhu x8, x28, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000000000001 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
mulhu x28, x14, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x31, 0x0000000000000001 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
mulhu x20, x31, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000000000001 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x14, x5, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x13, 0x0000000000000001 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
mulhu x18, x13, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x17, 0x0000000000000001 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
mulhu x27, x17, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x31, 0x0000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mulhu x24, x31, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x9, 0x0000000000000001 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
mulhu x1, x9, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x9, 0x0000000000000001 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulhu x12, x9, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x12, 0x0000000000000002 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
mulhu x21, x12, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x21, 0x0000000000000002 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mulhu x20, x21, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x20, 0x0000000000000002 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
mulhu x10, x20, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x18, 0x0000000000000002 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
mulhu x27, x18, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x10, 0x0000000000000002 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
mulhu x17, x10, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x5, 0x0000000000000002 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
mulhu x2, x5, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x3, 0x0000000000000002 # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
mulhu x9, x3, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x13, 0x0000000000000002 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
mulhu x1, x13, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x30, 0x0000000000000002 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhu x10, x30, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x1, 0x0000000000000002 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
mulhu x5, x1, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000000000002 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x17, x11, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x16, 0x0000000000000002 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
mulhu x21, x16, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x16, 0x0000000000000002 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
mulhu x20, x16, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x14, 0x0000000000000002 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
mulhu x12, x14, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x13, 0x0000000000000002 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
mulhu x25, x13, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x16, 0x0000000000000002 # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
mulhu x14, x16, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x28, 0x8000000000000000 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
mulhu x31, x28, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x8, 0x8000000000000000 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
mulhu x3, x8, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x21, 0x8000000000000000 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
mulhu x3, x21, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
mulhu x27, x15, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x4, 0x8000000000000000 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
mulhu x27, x4, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x13, 0x8000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
mulhu x15, x13, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x15, 0x8000000000000000 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
mulhu x9, x15, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x16, 0x8000000000000000 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
mulhu x8, x16, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x27, 0x8000000000000000 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
mulhu x31, x27, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x25, 0x8000000000000000 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulhu x30, x25, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x8000000000000000 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x14, x20, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x20, 0x8000000000000000 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mulhu x18, x20, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x10, 0x8000000000000000 # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
mulhu x8, x10, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
mulhu x27, x22, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x18, 0x8000000000000000 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
mulhu x3, x18, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x20, 0x8000000000000000 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulhu x15, x20, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x26, 0x8000000000000001 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
mulhu x21, x26, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x13, 0x8000000000000001 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
mulhu x27, x13, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x2, 0x8000000000000001 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
mulhu x26, x2, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x22, 0x8000000000000001 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
mulhu x17, x22, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
mulhu x28, x15, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x13, 0x8000000000000001 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
mulhu x9, x13, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x2, 0x8000000000000001 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mulhu x11, x2, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x5, 0x8000000000000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
mulhu x29, x5, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x16, 0x8000000000000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
mulhu x28, x16, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x1, 0x8000000000000001 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
mulhu x21, x1, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x8000000000000001 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x20, x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x22, 0x8000000000000001 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
mulhu x30, x22, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x27, 0x8000000000000001 # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mulhu x26, x27, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x2, 0x8000000000000001 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
mulhu x31, x2, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x18, 0x8000000000000001 # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
mulhu x13, x18, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x2, 0x8000000000000001 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
mulhu x11, x2, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x16, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
mulhu x23, x16, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x24, 0x7fffffffffffffff # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
mulhu x19, x24, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x23, 0x7fffffffffffffff # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
mulhu x30, x23, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x7, 0x7fffffffffffffff # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
mulhu x3, x7, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x23, 0x7fffffffffffffff # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
mulhu x11, x23, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
mulhu x20, x27, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x26, 0x7fffffffffffffff # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mulhu x2, x26, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x5, 0x7fffffffffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulhu x10, x5, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x22, 0x7fffffffffffffff # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
mulhu x30, x22, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x12, 0x7fffffffffffffff # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
mulhu x23, x12, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x4, 0x7fffffffffffffff # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x27, x4, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x25, 0x7fffffffffffffff # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
mulhu x20, x25, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x1, 0x7fffffffffffffff # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
mulhu x24, x1, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x31, 0x7fffffffffffffff # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
mulhu x9, x31, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x21, 0x7fffffffffffffff # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
mulhu x10, x21, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x27, 0x7fffffffffffffff # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
mulhu x20, x27, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x22, 0x7ffffffffffffffe # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mulhu x15, x22, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 1792)
addi x6, x6, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x18, 0x7ffffffffffffffe # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mulhu x26, x18, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x13, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
mulhu x19, x13, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x10, 0x7ffffffffffffffe # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
mulhu x9, x10, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x11, 0x7ffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
mulhu x8, x11, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x7, 0x7ffffffffffffffe # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
mulhu x8, x7, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x28, 0x7ffffffffffffffe # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mulhu x2, x28, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x10, 0x7ffffffffffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mulhu x2, x10, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x15, 0x7ffffffffffffffe # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
mulhu x13, x15, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x16, 0x7ffffffffffffffe # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
mulhu x30, x16, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x7ffffffffffffffe # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x15, x3, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x16, 0x7ffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mulhu x30, x16, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
mulhu x28, x23, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
mulhu x28, x26, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x2, 0x7ffffffffffffffe # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
mulhu x16, x2, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x9, 0x7ffffffffffffffe # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
mulhu x28, x9, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x28, 0xffffffffffffffff # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
mulhu x15, x28, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x15, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
mulhu x29, x15, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x14, 0xffffffffffffffff # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
mulhu x18, x14, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x7, 0xffffffffffffffff # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
mulhu x17, x7, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x1, 0xffffffffffffffff # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
mulhu x10, x1, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x22, 0xffffffffffffffff # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
mulhu x5, x22, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x15, 0xffffffffffffffff # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
mulhu x14, x15, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
mulhu x8, x23, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x16, 0xffffffffffffffff # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
mulhu x5, x16, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x9, 0xffffffffffffffff # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
mulhu x17, x9, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0xffffffffffffffff # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x24, x5, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x4, 0xffffffffffffffff # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
mulhu x11, x4, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x30, 0xffffffffffffffff # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
mulhu x22, x30, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x11, 0xffffffffffffffff # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
mulhu x14, x11, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x8, 0xffffffffffffffff # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
mulhu x25, x8, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x3, 0xffffffffffffffff # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
mulhu x23, x3, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x3, 0xfffffffffffffffe # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
mulhu x8, x3, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x3, 0xfffffffffffffffe # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
mulhu x1, x3, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x18, 0xfffffffffffffffe # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
mulhu x19, x18, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x8, 0xfffffffffffffffe # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
mulhu x27, x8, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x16, 0xfffffffffffffffe # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
mulhu x11, x16, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x15, 0xfffffffffffffffe # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
mulhu x20, x15, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x27, 0xfffffffffffffffe # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
mulhu x22, x27, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x24, 0xfffffffffffffffe # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
mulhu x15, x24, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
mulhu x11, x18, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x14, 0xfffffffffffffffe # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulhu x23, x14, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xfffffffffffffffe # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x28, x20, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x30, 0xfffffffffffffffe # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
mulhu x17, x30, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x15, 0xfffffffffffffffe # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
mulhu x19, x15, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mulhu x27, x25, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x29, 0xfffffffffffffffe # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
mulhu x14, x29, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x1, 0xfffffffffffffffe # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
mulhu x12, x1, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
mulhu x8, x23, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
mulhu x17, x16, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
mulhu x16, x2, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
mulhu x22, x14, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
mulhu x21, x23, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
mulhu x11, x2, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
mulhu x7, x10, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulhu x2, x19, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhu x16, x19, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
mulhu x23, x10, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x3, x15, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
mulhu x7, x12, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulhu x22, x31, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mulhu x19, x14, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
mulhu x11, x13, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
mulhu x23, x17, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
mulhu x26, x27, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
mulhu x12, x29, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
mulhu x11, x19, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
mulhu x16, x26, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x4, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
mulhu x21, x4, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x4, 0x7fffffffffffffff # initialize rs2
mulhu x30, x26, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mulhu x28, x11, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
mulhu x11, x29, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
mulhu x22, x11, x18 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
mulhu x9, x10, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x2, x20, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
mulhu x5, x25, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
mulhu x28, x23, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
mulhu x16, x29, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mulhu x25, x17, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
mulhu x20, x2, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x8, 0x5555555555555555 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
mulhu x13, x8, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x17, 0x5555555555555555 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
mulhu x7, x17, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x27, 0x5555555555555555 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
mulhu x14, x27, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x16, 0x5555555555555555 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
mulhu x10, x16, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x21, 0x5555555555555555 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
mulhu x14, x21, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x30, 0x5555555555555555 # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
mulhu x16, x30, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x5, 0x5555555555555555 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
mulhu x14, x5, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x12, 0x5555555555555555 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
mulhu x28, x12, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x30, 0x5555555555555555 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
mulhu x17, x30, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x31, 0x5555555555555555 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
mulhu x2, x31, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x5555555555555555 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x5, x31, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
mulhu x25, x5, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x19, 0x5555555555555555 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
mulhu x29, x19, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x30, 0x5555555555555555 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mulhu x18, x30, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x15, 0x5555555555555555 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
mulhu x29, x15, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x23, 0x5555555555555555 # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
mulhu x15, x23, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x17, 0x00000000ffffffff # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
mulhu x15, x17, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x15, 0x00000000ffffffff # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
mulhu x8, x15, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x8, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
mulhu x2, x8, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x28, 0x00000000ffffffff # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
mulhu x27, x28, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x13, 0x00000000ffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
mulhu x19, x13, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x12, 0x00000000ffffffff # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
mulhu x26, x12, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x8, 0x00000000ffffffff # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
mulhu x28, x8, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x23, 0x00000000ffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
mulhu x20, x23, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x14, 0x00000000ffffffff # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
mulhu x25, x14, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x25, 0x00000000ffffffff # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
mulhu x20, x25, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x00000000ffffffff # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x12, x18, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x19, 0x00000000ffffffff # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
mulhu x14, x19, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
mulhu x31, x30, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x17, 0x00000000ffffffff # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
mulhu x3, x17, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x11, 0x00000000ffffffff # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
mulhu x24, x11, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x24, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x21, 0x00000000ffffffff # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
mulhu x8, x21, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x26, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
mulhu x5, x26, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x26, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
mulhu x1, x26, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x15, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
mulhu x25, x15, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x11, 0x00000000fffffffe # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
mulhu x23, x11, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x15, 0x00000000fffffffe # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
mulhu x8, x15, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x20, 0x00000000fffffffe # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
mulhu x27, x20, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x3, 0x00000000fffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
mulhu x14, x3, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x20, 0x00000000fffffffe # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
mulhu x2, x20, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
mulhu x26, x14, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x1, 0x00000000fffffffe # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
mulhu x26, x1, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x00000000fffffffe # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x16, x25, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x23, 0x00000000fffffffe # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
mulhu x18, x23, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x5, 0x00000000fffffffe # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mulhu x11, x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x29, 0x00000000fffffffe # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
mulhu x1, x29, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x4, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
mulhu x8, x4, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x13, 0x00000000fffffffe # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
mulhu x30, x13, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x10, 0x0000000100000000 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
mulhu x4, x10, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x22, 0x0000000100000000 # initialize rs1
li x4, 0x0000000000000001 # initialize rs2
mulhu x18, x22, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x9, 0x0000000100000000 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
mulhu x18, x9, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x4, 0x0000000100000000 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mulhu x31, x4, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x20, 0x0000000100000000 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
mulhu x9, x20, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000000 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
mulhu x17, x14, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x17, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
mulhu x10, x28, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x24, 0x0000000100000000 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
mulhu x22, x24, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x22, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000100000000 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mulhu x14, x15, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x12, 0x0000000100000000 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
mulhu x27, x12, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000100000000 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x27, x5, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x23, 0x0000000100000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mulhu x18, x23, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x23, 0x0000000100000000 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
mulhu x8, x23, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x20, 0x0000000100000000 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mulhu x11, x20, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x23, 0x0000000100000000 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
mulhu x9, x23, x21 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x3, 0x0000000100000000 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
mulhu x14, x3, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x8, 0x0000000100000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
mulhu x5, x8, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x7, 0x0000000100000001 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
mulhu x12, x7, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x9, 0x0000000100000001 # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
mulhu x5, x9, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x19, 0x0000000100000001 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
mulhu x9, x19, x24 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x17, 0x0000000100000001 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
mulhu x1, x17, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x18, 0x0000000100000001 # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
mulhu x30, x18, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x7, 0x0000000100000001 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
mulhu x26, x7, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x8, 0x0000000100000001 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
mulhu x1, x8, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x23, 0x0000000100000001 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
mulhu x27, x23, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000100000001 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
mulhu x18, x21, x17 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x0000000100000001 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
mulhu x2, x12, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x12, 0x0000000100000001 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
mulhu x29, x12, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x2, 0x0000000100000001 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
mulhu x3, x2, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x11, 0x0000000100000001 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
mulhu x26, x11, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x13, 0x0000000100000001 # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
mulhu x19, x13, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x4, 0x0000000100000001 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
mulhu x29, x4, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x3cb9bf4423750c36 # initialize rs1
li x0, 0x719fee192769d4b6 # initialize rs2
mulhu x30, x0, x0 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x6278a2df933dff40 # initialize rs1
li x1, 0x8accd52182e66b8d # initialize rs2
mulhu x19, x1, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x13c67e9c8e293862 # initialize rs1
li x2, 0xe23cbf701128e83e # initialize rs2
mulhu x14, x2, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xd05bd13b19766160 # initialize rs1
li x3, 0xd7e3f36099e90576 # initialize rs2
mulhu x2, x3, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
li x4, 0x9ae9c3653de70e36 # initialize rs1
li x4, 0x5361f8895028529c # initialize rs2
mulhu x1, x4, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
li x5, 0x029f5a2b65fd46cf # initialize rs1
li x5, 0x6ac83b3fb2d20af9 # initialize rs2
mulhu x16, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x37fe723613d71b6f # initialize rs1
li x6, 0x7a3018aaa0ab4181 # initialize rs2
mulhu x10, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x10, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xdc2ed1e2b578f795 # initialize rs1
li x7, 0x87379fb03b165617 # initialize rs2
mulhu x11, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x7cbccef14dd80f42 # initialize rs1
li x8, 0x48cae2f45d21cc73 # initialize rs2
mulhu x18, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x1dda952879526921 # initialize rs1
li x9, 0x3a6c728cd00486f4 # initialize rs2
mulhu x2, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x3db09245560fda25 # initialize rs1
li x10, 0xcf417852367f54c0 # initialize rs2
mulhu x26, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xd53e1661142b99b9 # initialize rs1
li x11, 0x606ca30784990fbf # initialize rs2
mulhu x23, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xe3fdb7712d2962e9 # initialize rs1
li x12, 0x8441917f612630ba # initialize rs2
mulhu x19, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x266362407a08c6c9 # initialize rs1
li x13, 0x0855268616465850 # initialize rs2
mulhu x9, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x3c01171b5e54698b # initialize rs1
li x14, 0xa993164cac4406cf # initialize rs2
mulhu x15, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xc434153305e8ec73 # initialize rs1
li x15, 0xec1feb241f652dea # initialize rs2
mulhu x27, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xb9175e3ab3afac7b # initialize rs1
li x16, 0x01d92cc815bbfb5a # initialize rs2
mulhu x7, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xcc7f2587737022e1 # initialize rs1
li x17, 0x34f62e68b39c1358 # initialize rs2
mulhu x28, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x486fe61819a6ba96 # initialize rs1
li x18, 0xbd657ae7370de485 # initialize rs2
mulhu x31, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x0f122c63862e9ab3 # initialize rs1
li x19, 0x0763cde937893c9d # initialize rs2
mulhu x24, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x1c43a4bec17a34cc # initialize rs1
li x20, 0x13fd9072f3cef31c # initialize rs2
mulhu x27, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x945ad7287aa40108 # initialize rs1
li x21, 0xcfba267b91ace176 # initialize rs2
mulhu x24, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x308ed5d944bf5535 # initialize rs1
li x22, 0x7c78526f8dc1c9b7 # initialize rs2
mulhu x24, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x870951f3d46ecdc3 # initialize rs1
li x23, 0x0e9a49b3871bc4c6 # initialize rs2
mulhu x21, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x19398ccf1cdaee4e # initialize rs1
li x24, 0x47d795f1a6fbfa93 # initialize rs2
mulhu x31, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x2d032d736367026f # initialize rs1
li x25, 0x42eefc43856bcfda # initialize rs2
mulhu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xaf9207de945c6a59 # initialize rs1
li x26, 0xcccb2401a80154e4 # initialize rs2
mulhu x17, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x17e5a2237b0575ba # initialize rs1
li x27, 0x5f889f0f7ddc8b6f # initialize rs2
mulhu x6, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xcbc0d24245e96730 # initialize rs1
li x28, 0xdf8659e75659c9cd # initialize rs2
mulhu x13, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xcf33a6859c4ab2d2 # initialize rs1
li x29, 0xefb5e4647d4e494f # initialize rs2
mulhu x23, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xec215b43bca1b6a5 # initialize rs1
li x30, 0x7c0da2bee0da0ccb # initialize rs2
mulhu x19, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x33f13d6d50e36354 # initialize rs1
li x31, 0xfe1249153ed93416 # initialize rs2
mulhu x2, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xf2c0eb60ced0cc8b # initialize rs1
li x9, 0xed6bb107ede5fec0 # initialize rs2
mulhu x0, x0, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xa06766aa8b1c3b09 # initialize rs1
li x21, 0x06e32d76b52a1fa6 # initialize rs2
mulhu x1, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x927a4bc48fc29993 # initialize rs1
li x24, 0x537904b6e79f770f # initialize rs2
mulhu x2, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xd325a5317af6012a # initialize rs1
li x9, 0x0172de5de5367b38 # initialize rs2
mulhu x3, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6a1e242e15443e24 # initialize rs1
li x8, 0xf68073beaa051d48 # initialize rs2
mulhu x4, x4, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x0240f9a38f7ce7c7 # initialize rs1
li x16, 0x3cfe7f1bdb55f6a2 # initialize rs2
mulhu x5, x5, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xea4b7e3afa01602b # initialize rs1
li x18, 0x5701122b68645639 # initialize rs2
mulhu x6, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x310fdde54452461e # initialize rs1
li x22, 0xb4c47ce594f2701f # initialize rs2
mulhu x7, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x31f082732734c887 # initialize rs1
li x19, 0xfacd4dcd7bd2b05e # initialize rs2
mulhu x8, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xf0ce2008f8b71c43 # initialize rs1
li x25, 0x954dfb28847f9119 # initialize rs2
mulhu x9, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xea73908d54c455cb # initialize rs1
li x22, 0x3798329c9736cc34 # initialize rs2
mulhu x10, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xa11d78d1fdc71a4c # initialize rs1
li x10, 0xb907f7e4cd88a4f3 # initialize rs2
mulhu x11, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x3bf3bad9a3a622e6 # initialize rs1
li x7, 0x1931dc4a6c7f76d8 # initialize rs2
mulhu x12, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x11d2b0242f515c80 # initialize rs1
li x17, 0x1f386e4a06ae02bb # initialize rs2
mulhu x13, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xe85d5d86013938b2 # initialize rs1
li x11, 0x314ec36abd2dbdd5 # initialize rs2
mulhu x14, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x0aa79d3710b0c4f7 # initialize rs1
li x19, 0xe523073e1c8a5cc9 # initialize rs2
mulhu x15, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x7dc5ddc8291b4bc3 # initialize rs1
li x14, 0xd731c0ef1d6590fb # initialize rs2
mulhu x16, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x887ac4005dcdbbf5 # initialize rs1
li x8, 0x57e8b5ac2405bcce # initialize rs2
mulhu x17, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xba9b159082c46921 # initialize rs1
li x18, 0x5d8f446def5d235f # initialize rs2
mulhu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xe934e0cb02a9cce6 # initialize rs1
li x8, 0xab212ddf6859051e # initialize rs2
mulhu x19, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x0d761b58a7e8c63a # initialize rs1
li x11, 0x2ce1fb8573ff8577 # initialize rs2
mulhu x20, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xd7d8161f4f3a8e35 # initialize rs1
li x7, 0x3df610c0813964bd # initialize rs2
mulhu x21, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xb4e4f45fb471d75e # initialize rs1
li x6, 0x15b8331ca35bed46 # initialize rs2
mulhu x22, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x797a0f13a51bba7e # initialize rs1
li x22, 0xc284b28a7eaeab77 # initialize rs2
mulhu x23, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xac79096616875750 # initialize rs1
li x14, 0x450c7836ea00bf9b # initialize rs2
mulhu x24, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x7bd81e249568dfde # initialize rs1
li x3, 0xeac3677c64ef4dcf # initialize rs2
mulhu x25, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x12092ddce2780b1a # initialize rs1
li x27, 0x5ae6609621970cff # initialize rs2
mulhu x26, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x022e94a7079f4ffc # initialize rs1
li x25, 0x944bc96822b5aab5 # initialize rs2
mulhu x27, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xa64a74a554b855a1 # initialize rs1
li x22, 0x0f4147ebf7f218a9 # initialize rs2
mulhu x28, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x180206cf4e008744 # initialize rs1
li x12, 0x3e6c2aeb0975ae6d # initialize rs2
mulhu x29, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xba24b4e929be68ee # initialize rs1
li x3, 0xd4a6c4aedee515ce # initialize rs2
mulhu x30, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xe19441708914ee06 # initialize rs1
li x10, 0xfd6bea62ec82d2fa # initialize rs2
mulhu x31, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x14, 0x582f2c6a5ff9c0d7 # initialize rs1
li x0, 0xf469c2c790b64bd7 # initialize rs2
mulhu x0, x14, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x12, 0x39f2d10a4293904e # initialize rs1
li x1, 0x8eed8a9f6395566a # initialize rs2
mulhu x1, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x1, 0x475e2ef0b62d6a46 # initialize rs1
li x2, 0xc86d91b0f8146886 # initialize rs2
mulhu x2, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x21, 0xb324b4c1edeb0e30 # initialize rs1
li x3, 0xf79dd7b809ba6a14 # initialize rs2
mulhu x3, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x11, 0x029bb19c6969ae12 # initialize rs1
li x4, 0x0191e8d1232cfe04 # initialize rs2
mulhu x4, x11, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x13, 0x0bfe8524fc2e4d1f # initialize rs1
li x5, 0x6ebda442e486ed9f # initialize rs2
mulhu x5, x13, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0xae9bc1fbc5c128fb # initialize rs1
li x6, 0xc5d4fb1bf96900f4 # initialize rs2
mulhu x6, x26, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0xeb003f1d765972ef # initialize rs1
li x7, 0x03ec6034453f3382 # initialize rs2
mulhu x7, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x15, 0x47e3f324b19d9b58 # initialize rs1
li x8, 0xf5a8a63188cd2fcb # initialize rs2
mulhu x8, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x31, 0xb274ababad9a905b # initialize rs1
li x9, 0x76e64e1ed8ffded6 # initialize rs2
mulhu x9, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x21, 0x16cb33c4d8214a6b # initialize rs1
li x10, 0xb6396fd185864a26 # initialize rs2
mulhu x10, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x24, 0xa43aa1e4332c71e0 # initialize rs1
li x11, 0x7947543e4f22fba5 # initialize rs2
mulhu x11, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x30, 0x5ca4495544c07046 # initialize rs1
li x12, 0xccfcfd6ec2f72d80 # initialize rs2
mulhu x12, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x1, 0x636585788c3176bf # initialize rs1
li x13, 0xb5b6f463aa4719ce # initialize rs2
mulhu x13, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x15, 0xa426412041d8e27b # initialize rs1
li x14, 0x6b078573d45a6984 # initialize rs2
mulhu x14, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x1, 0xd596a40ba791f65a # initialize rs1
li x15, 0x0934a7f4307b304e # initialize rs2
mulhu x15, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x28, 0x42dd345be016a920 # initialize rs1
li x16, 0x8ad9c9e897f0442b # initialize rs2
mulhu x16, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x21, 0x6a12a113980503da # initialize rs1
li x17, 0x941af236db3ee70a # initialize rs2
mulhu x17, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x19, 0x40bdba7ab3d99254 # initialize rs1
li x18, 0xa098cc823765cf45 # initialize rs2
mulhu x18, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x15, 0xc0195c1e68581d8b # initialize rs1
li x19, 0xb43c8e097b49e864 # initialize rs2
mulhu x19, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x27, 0xb6e833d9029a8d6e # initialize rs1
li x20, 0xcb9ebda1aefa13a9 # initialize rs2
mulhu x20, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x30, 0xf85a00111c4d5b92 # initialize rs1
li x21, 0x2b9a5e9db57e3f26 # initialize rs2
mulhu x21, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x10, 0x75888a86c4c35530 # initialize rs1
li x22, 0xdef097406d16d49c # initialize rs2
mulhu x22, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x18, 0xaea56bc7e1572ffd # initialize rs1
li x23, 0x2dbeb643fa28240c # initialize rs2
mulhu x23, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x11, 0x0e270f810dd7af42 # initialize rs1
li x24, 0x80f0dc95c255211a # initialize rs2
mulhu x24, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x26, 0x6c040d37be36b31a # initialize rs1
li x25, 0x97134f205a8effcf # initialize rs2
mulhu x25, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x29, 0x7a8cfcbd5946bd86 # initialize rs1
li x26, 0x5310e1f09a1ba929 # initialize rs2
mulhu x26, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x18, 0x0c7f9dcf328800f6 # initialize rs1
li x27, 0x51b0b3278e8e4385 # initialize rs2
mulhu x27, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x16, 0xd4fc1b4c2446a2e5 # initialize rs1
li x28, 0x9302f3ca022b812c # initialize rs2
mulhu x28, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x20, 0xa3615a31d359e6e4 # initialize rs1
li x29, 0xfd5588c442fd7098 # initialize rs2
mulhu x29, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x21, 0x4104b6343ca769e9 # initialize rs1
li x30, 0xc0af75fd204ffede # initialize rs2
mulhu x30, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x13, 0xa19563bd7b268358 # initialize rs1
li x31, 0x1c5480cb93d30ff7 # initialize rs2
mulhu x31, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x0952a6ba01ba73bf # initialize rs1
li x0, 0x97ee641ac42624c3 # initialize rs2
mulhu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x8c14cad7c4b8f4fa # initialize rs1
li x1, 0xf9856c84599aaee9 # initialize rs2
mulhu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x3d7ca9dd107de4b3 # initialize rs1
li x2, 0x7b800278e83aa636 # initialize rs2
mulhu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x0e4ec27464e455bb # initialize rs1
li x3, 0x0f0b477126c64088 # initialize rs2
mulhu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x241e60728c6cecbe # initialize rs1
li x4, 0x34936338e91d87f7 # initialize rs2
mulhu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x7eb77660ad99ba5f # initialize rs1
li x5, 0xf00b954e3f65c384 # initialize rs2
mulhu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf8f32a0a95388cb2 # initialize rs1
li x6, 0x7d1e5627a1e3f289 # initialize rs2
mulhu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xd83141688404c34a # initialize rs1
li x7, 0xba755b5ab0392a94 # initialize rs2
mulhu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xb1f0797e18cba818 # initialize rs1
li x8, 0x01133fbd9a980047 # initialize rs2
mulhu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x3cd6538676b755b8 # initialize rs1
li x9, 0x37ea6148b3dfd1b5 # initialize rs2
mulhu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x161e186f7ea3886b # initialize rs1
li x10, 0x9f113f8459b998ff # initialize rs2
mulhu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x4d809aa7cdb80c7a # initialize rs1
li x11, 0x1cd618883120ce51 # initialize rs2
mulhu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x3c2d18ff5b2806d1 # initialize rs1
li x12, 0x6c1216aa2527f037 # initialize rs2
mulhu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x22b80150d91bfb18 # initialize rs1
li x13, 0x3864fb0996088fe0 # initialize rs2
mulhu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x60d66dba65735c76 # initialize rs1
li x14, 0xf6ef7f3e1696892a # initialize rs2
mulhu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x7f42d9c94f18c54e # initialize rs1
li x15, 0xeade9537352086c9 # initialize rs2
mulhu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xe19e97d0d9c4a380 # initialize rs1
li x16, 0xc0b0c42388ef70a7 # initialize rs2
mulhu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x2e75245ec5d6881b # initialize rs1
li x17, 0x6037c5f60782fe8f # initialize rs2
mulhu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x8c292cdc398a21ee # initialize rs1
li x18, 0xeeaacea5f7f7b1f4 # initialize rs2
mulhu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xab43bac7afadb7e3 # initialize rs1
li x19, 0xf05c4ddcea900ee7 # initialize rs2
mulhu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x061bd2f3c11700e3 # initialize rs1
li x20, 0xb47c5198eb0dc44f # initialize rs2
mulhu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc3642bfc734a820a # initialize rs1
li x21, 0x6eeb7f17e246579d # initialize rs2
mulhu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7662068e92a65dc4 # initialize rs1
li x22, 0x11f1ed47520bc54f # initialize rs2
mulhu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xc98c262dbf11d2ae # initialize rs1
li x23, 0x61881905ca2e3f61 # initialize rs2
mulhu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xc67e867be6abec39 # initialize rs1
li x24, 0x6c09b1894b945783 # initialize rs2
mulhu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x250dbe854b14b3e7 # initialize rs1
li x25, 0x46afa79fea48dcb9 # initialize rs2
mulhu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x97448bf2c4f2a5a4 # initialize rs1
li x26, 0x9587f348fc31a807 # initialize rs2
mulhu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x98e0aed1b91f9e2b # initialize rs1
li x27, 0xc1a8c327e5d701f5 # initialize rs2
mulhu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x86c062d767f3704d # initialize rs1
li x28, 0xc644815b6d91df5b # initialize rs2
mulhu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x1eef239a8cc160ea # initialize rs1
li x29, 0x87ac20ac39a4b953 # initialize rs2
mulhu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xc433cb35110ffabd # initialize rs1
li x30, 0x00f4a9b447f0d1ab # initialize rs2
mulhu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xc7b10710f91acf49 # initialize rs1
li x31, 0x413968954283a46f # initialize rs2
mulhu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x5, x22 # perform first operation
mulhu x14, x31, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x8, x18, x12 # perform first operation
mulhu x7, x15, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x14, x11 # perform first operation
mulhu x26, x1, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x20, x1, x30 # perform first operation
mulhu x10, x20, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x31, x28 # perform first operation
mulhu x31, x28, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x28, x1, x25 # perform first operation
mulhu x28, x23, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x7, x30, x1 # perform first operation
mulhu x7, x19, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x19, x27, x9 # perform first operation
mulhu x19, x29, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x18, x29 # perform first operation
mulhu x12, x10, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x17, x1 # perform first operation
mulhu x17, x18, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x31, x12, x1 # perform first operation
mulhu x1, x19, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x25, x6 # perform first operation
mulhu x7, x30, x18 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-divw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xb301bcf19508d005 # initialize rs1
li x29, 0x206c5db61adf9335 # initialize rs2
divw x9, x0, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xe006f5d4bbc326b2 # initialize rs1
li x21, 0x5db514af7eb2c2f3 # initialize rs2
divw x17, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xb2b3571b58f878e8 # initialize rs1
li x24, 0xfe8f3b178602326f # initialize rs2
divw x19, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xe913410636729624 # initialize rs1
li x17, 0xd20f6bb29a36dfcf # initialize rs2
divw x20, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x949b853ea590581c # initialize rs1
li x25, 0xe7fbb329b205295e # initialize rs2
divw x20, x4, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xaa59375dbd865c30 # initialize rs1
li x12, 0x85f88a891e9a1692 # initialize rs2
divw x3, x5, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x4292aee6d32d9065 # initialize rs1
li x8, 0xaa7c50f3236df2f3 # initialize rs2
divw x4, x6, x8 # perform operation
RVTEST_SIGUPD(x7, x0, x4, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe6e68c277193ff08 # initialize rs1
li x23, 0x5ec27e4a20a4805d # initialize rs2
divw x20, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x03a945599a4bebf8 # initialize rs1
li x2, 0x0ec54b206d230af8 # initialize rs2
divw x28, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xdb131604876a4b0f # initialize rs1
li x7, 0x3c217bec77415530 # initialize rs2
divw x5, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xfc6da81dc13fa11e # initialize rs1
li x20, 0xa02552c8f42ef0a9 # initialize rs2
divw x23, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x429f84ff6616dfa8 # initialize rs1
li x16, 0x99e46a8f6b991d14 # initialize rs2
divw x15, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x1e961c7c335a9838 # initialize rs1
li x3, 0xf1b3a7fcc184e4d2 # initialize rs2
divw x15, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xe86a4707b60a32bf # initialize rs1
li x25, 0x689243cc21be721a # initialize rs2
divw x17, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xb1f40fec62cf20f8 # initialize rs1
li x8, 0x2630d7dc3bd1142f # initialize rs2
divw x27, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xf75d0080c1a32ec2 # initialize rs1
li x11, 0xd9f5098e3ee2580f # initialize rs2
divw x20, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xf76dbb56872085a4 # initialize rs1
li x30, 0x8a62de925ca5a308 # initialize rs2
divw x2, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xd344db02f9e21c5a # initialize rs1
li x6, 0x690a027a621db092 # initialize rs2
divw x14, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xc2e44c3aa71354c8 # initialize rs1
li x7, 0x468bd408887251cd # initialize rs2
divw x2, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x749700e2963a1803 # initialize rs1
li x25, 0xf8a2880dba199335 # initialize rs2
divw x12, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xff78cab4effb508c # initialize rs1
li x22, 0x34e267154513ffb8 # initialize rs2
divw x26, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x16822a9cbbd1abda # initialize rs1
li x17, 0x87c815fb6f376e67 # initialize rs2
divw x20, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x14134c7d4d91dfe7 # initialize rs1
li x25, 0x7efabafbde066553 # initialize rs2
divw x3, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x1dd95468b74ef214 # initialize rs1
li x29, 0x5a550441d7f7c9ad # initialize rs2
divw x15, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x84c6418848eba78a # initialize rs1
li x28, 0xd26a549db5d2ab3a # initialize rs2
divw x17, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x870c55de2f50b597 # initialize rs1
li x19, 0xd63bb42cbc2fd759 # initialize rs2
divw x17, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x00a57b97d214da98 # initialize rs1
li x22, 0xacfce1e551129e14 # initialize rs2
divw x23, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xb6ba61b9e250c594 # initialize rs1
li x14, 0xff287b21642b9093 # initialize rs2
divw x23, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x736f848a81cb4159 # initialize rs1
li x9, 0x433c54366de7efd7 # initialize rs2
divw x1, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x02d37d3bdaca4c48 # initialize rs1
li x31, 0x24598fdae15d0fb3 # initialize rs2
divw x7, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xfcb89670626b4576 # initialize rs1
li x7, 0xf50dd6cd65a57c4b # initialize rs2
divw x6, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x3ebf069bbacbcaa6 # initialize rs1
li x30, 0x885b88ac396cae85 # initialize rs2
divw x10, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x22, 0x85011a418dd33a68 # initialize rs1
li x0, 0x69e5073100b417c5 # initialize rs2
divw x28, x22, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x9, 0x02e2ac5fc43c565d # initialize rs1
li x1, 0x1b5d78ef4f382889 # initialize rs2
divw x22, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x30, 0xb7f2f14da8f44d1d # initialize rs1
li x2, 0xf7b541127360e759 # initialize rs2
divw x28, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x18, 0x22d858ea2db6d81d # initialize rs1
li x3, 0xcb565842bbeb9708 # initialize rs2
divw x19, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x2d01709b42fc6a26 # initialize rs1
li x4, 0xa7e7344a8f317a69 # initialize rs2
divw x17, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x23, 0x3c7d765577276b5f # initialize rs1
li x5, 0xeceae81617ee6572 # initialize rs2
divw x6, x23, x5 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
li x11, 0xdc11574709857e43 # initialize rs1
li x6, 0x5c67f84147b862ef # initialize rs2
divw x23, x11, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x23, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x5, 0xa4351c6bb826082a # initialize rs1
li x7, 0x06da5a7ec014de7c # initialize rs2
divw x23, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x2, 0xff4324c4ff7e78ca # initialize rs1
li x8, 0x05f9e0e61f6b703b # initialize rs2
divw x31, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x16, 0x04d1280deaa7c06b # initialize rs1
li x9, 0x65e40fd1175aa2f5 # initialize rs2
divw x26, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x14, 0x7b50804a7cfe23dd # initialize rs1
li x10, 0x804e5bbf1da54266 # initialize rs2
divw x23, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x16, 0xc617884a8807ad8c # initialize rs1
li x11, 0x2d02f1f5d273f916 # initialize rs2
divw x21, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x18, 0x7292ad3a4671ba13 # initialize rs1
li x12, 0x3f17da41f5b0aa0c # initialize rs2
divw x2, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x21, 0xca2b54e44e1db398 # initialize rs1
li x13, 0x89098a10b06e3bd2 # initialize rs2
divw x3, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x24, 0xe9393aa124df4375 # initialize rs1
li x14, 0x899b60ca399c94af # initialize rs2
divw x12, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x7, 0x7072a77922411b56 # initialize rs1
li x15, 0x4be1f7e333faf486 # initialize rs2
divw x11, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x10, 0x6e6f20c4ab8338bc # initialize rs1
li x16, 0x673752bf2e831494 # initialize rs2
divw x17, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x31, 0xce4b883202bdda12 # initialize rs1
li x17, 0x8c09455fa0bc73b0 # initialize rs2
divw x27, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x7, 0xfb1338ba4134c646 # initialize rs1
li x18, 0x3e5f5d522489e969 # initialize rs2
divw x24, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x7, 0xbba027dcca816ee6 # initialize rs1
li x19, 0x1c1a2445a25304f3 # initialize rs2
divw x13, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x8, 0xf5863f51b0a804ad # initialize rs1
li x20, 0xa325f24e8a996989 # initialize rs2
divw x3, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x20, 0xff869bb348b34306 # initialize rs1
li x21, 0x39454ce279bb0f7d # initialize rs2
divw x2, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x30, 0xb2ec22b535b36496 # initialize rs1
li x22, 0xd26444f0dd260b21 # initialize rs2
divw x11, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x1, 0x2553b8e53a047568 # initialize rs1
li x23, 0xa0b8b77f07918fdd # initialize rs2
divw x5, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x23, 0xf16166df63611e38 # initialize rs1
li x24, 0x04e70b58c3e8f49f # initialize rs2
divw x2, x23, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x19, 0x936a28e511be069e # initialize rs1
li x25, 0xc477db46c9d5affc # initialize rs2
divw x8, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x17, 0xda5e4f6047e07483 # initialize rs1
li x26, 0xf0da2c66dbc3b9d0 # initialize rs2
divw x18, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x14, 0x5235cbdc62f2390e # initialize rs1
li x27, 0x64eae1acc1719a4e # initialize rs2
divw x18, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x2, 0x82915544d02f4d33 # initialize rs1
li x28, 0xc584dc21c9cc9de6 # initialize rs2
divw x15, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x18, 0x5c8a6ba6f23c928d # initialize rs1
li x29, 0x15872b100ebb1c83 # initialize rs2
divw x24, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x3, 0x88924101154d7869 # initialize rs1
li x30, 0x9b03815980eb3c55 # initialize rs2
divw x31, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x7, 0x054d98ae9039fb7a # initialize rs1
li x31, 0xf39feadcb1917b47 # initialize rs2
divw x17, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 504)

# Testcase cp_rd (Test destination rd = x0)
li x1, 0xe218f6fa4a854d3c # initialize rs1
li x28, 0xcdfc596d4ba96a44 # initialize rs2
divw x0, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x20, 0x4c5f925bde573b75 # initialize rs1
li x14, 0x9c835bfd46a77de1 # initialize rs2
divw x1, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x19, 0x79d0ca66298e01f5 # initialize rs1
li x8, 0x931dc22f8c3ae4c9 # initialize rs2
divw x2, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x19, 0x3cdbbc81c2282471 # initialize rs1
li x7, 0x6a0d1d673063b564 # initialize rs2
divw x3, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0x0f62032eb2925574 # initialize rs1
li x7, 0xc194f575b1f6ddd6 # initialize rs2
divw x4, x16, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x7c4d8eef120412b2 # initialize rs1
li x12, 0x24c3a41405170d59 # initialize rs2
divw x5, x18, x12 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x12, 0x57864b992c48ecec # initialize rs1
li x10, 0xea705e7118043642 # initialize rs2
divw x6, x12, x10 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x10, 0xa4fdae6c515c8f48 # initialize rs1
li x29, 0xa6c80cfebea5cfb7 # initialize rs2
divw x7, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x13, 0x6cd73985003d5a4c # initialize rs1
li x15, 0x0884f43482ba0a59 # initialize rs2
divw x8, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x7, 0x9b3fa30e2ee239bf # initialize rs1
li x21, 0x5d27bc1cc15f2aa4 # initialize rs2
divw x9, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x5, 0x9311de9a1c5bdb78 # initialize rs1
li x20, 0x556b36b31aba1dba # initialize rs2
divw x10, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x27, 0xa3b36c82ca7afdba # initialize rs1
li x11, 0xf6deded5afe9a729 # initialize rs2
divw x11, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x22, 0x10989e912ea8d60f # initialize rs1
li x29, 0x97cbaaefece03cf2 # initialize rs2
divw x12, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x19, 0x447aec180860ad8c # initialize rs1
li x12, 0x3abb9acbe4602563 # initialize rs2
divw x13, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x9, 0x15b8eccc63d62588 # initialize rs1
li x29, 0x8cde8975069f0d71 # initialize rs2
divw x14, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x30, 0x3c1b03f76e410b0e # initialize rs1
li x8, 0xb452a0bcbc2907a2 # initialize rs2
divw x15, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x14, 0x8d519e44cc8ce2ab # initialize rs1
li x9, 0x4a731eb153001c75 # initialize rs2
divw x16, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x27, 0x33569719d10f0089 # initialize rs1
li x6, 0x2b52aab86f8ff597 # initialize rs2
divw x17, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x2, 0x77af35d962d3ef06 # initialize rs1
li x13, 0x5a30d17866288719 # initialize rs2
divw x18, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x7, 0x78844daf7af5f2b4 # initialize rs1
li x24, 0x46fab683e95a64db # initialize rs2
divw x19, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x24, 0x0ec20f0f53998e31 # initialize rs1
li x11, 0xa560aeef37a154e4 # initialize rs2
divw x20, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x23, 0x6cac4b4835535dd3 # initialize rs1
li x25, 0x30bb318077e2e149 # initialize rs2
divw x21, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x29, 0x603b18ee33400d5e # initialize rs1
li x18, 0xfd5ef395d858f968 # initialize rs2
divw x22, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x21, 0x794446e75038b458 # initialize rs1
li x6, 0x9fb3020b81a6b2ae # initialize rs2
divw x23, x21, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x25, 0x0080c818f892e3cc # initialize rs1
li x26, 0x49f5dcfefea72f43 # initialize rs2
divw x24, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x20, 0x7a3b20bc0f5c5705 # initialize rs1
li x15, 0x02e38994305d3d4d # initialize rs2
divw x25, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x14, 0x439594779b212310 # initialize rs1
li x31, 0xa255db74146d30cc # initialize rs2
divw x26, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x26, 0x8becbb7642bdbbdf # initialize rs1
li x30, 0x1d6bc216e54cf2dc # initialize rs2
divw x27, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x13, 0xbadf06c7aef2c8e2 # initialize rs1
li x3, 0xea6c49506e3c3345 # initialize rs2
divw x28, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x6, 0x563f1dc04d4794ad # initialize rs1
li x3, 0xd25c53da62de8866 # initialize rs2
divw x29, x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x12, 0x9124cda4efe4af60 # initialize rs1
li x7, 0x50257897bb9a28b8 # initialize rs2
divw x30, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x11, 0xc563c55d179ed338 # initialize rs1
li x21, 0x7968729e7489ecb1 # initialize rs2
divw x31, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x20, 0x0000000000000000 # initialize rs1
li x31, 0x54f6f165a6cb880e # initialize rs2
divw x22, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x11, 0x0000000000000001 # initialize rs1
li x8, 0xf4857e94ca367a25 # initialize rs2
divw x12, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x31, 0x0000000000000002 # initialize rs1
li x30, 0xc0bcddf7ce182189 # initialize rs2
divw x20, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x9, 0x8000000000000000 # initialize rs1
li x25, 0xfba026dccf146fe3 # initialize rs2
divw x13, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
li x31, 0x923efb6f552e2457 # initialize rs2
divw x18, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x19, 0x7fffffffffffffff # initialize rs1
li x30, 0x2320fa3a7040aef5 # initialize rs2
divw x28, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x16, 0x7ffffffffffffffe # initialize rs1
li x15, 0x0555baa1bb951f00 # initialize rs2
divw x20, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x31, 0xffffffffffffffff # initialize rs1
li x2, 0x47c78671f111ed3b # initialize rs2
divw x15, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x7, 0x6c8f8d0e9a5258f9 # initialize rs2
divw x21, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x1b53637b40eb36d8 # initialize rs2
divw x27, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0xb826b40628d2e214 # initialize rs2
divw x12, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x14, 0x5555555555555555 # initialize rs1
li x2, 0x581193eccc441e89 # initialize rs2
divw x17, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x31, 0x00000000ffffffff # initialize rs1
li x28, 0x886c4771f130a6e7 # initialize rs2
divw x10, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x16, 0x00000000fffffffe # initialize rs1
li x11, 0x0a4be265f33f413e # initialize rs2
divw x14, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x10, 0x0000000100000000 # initialize rs1
li x27, 0x340a1dfa29f0c25a # initialize rs2
divw x23, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x23, 0x0000000100000001 # initialize rs1
li x27, 0x00d9737a0a198ab0 # initialize rs2
divw x11, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x13, 0xb1d5e720c447ce86 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
divw x18, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x18, 0x2276ba4ff0aa6bb9 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
divw x21, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x7, 0x22c689b0f00dc653 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
divw x25, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x22, 0xeaa3f2a33b5b60a9 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
divw x21, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x13, 0x39e3a38bb7715cbe # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
divw x30, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x29, 0xe8e41648c368314b # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
divw x26, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x13, 0x0c9b7ba641137ec1 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
divw x23, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x17, 0x42908203d2944080 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
divw x16, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x8, 0xcdf8da6d9a7931de # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
divw x17, x8, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x26, 0x4106d635bd46dbe8 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
divw x9, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x6, 0xd23692f113c173e5 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x26, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x27, 0x49cb04e59710a9da # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
divw x20, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x26, 0x7be4b9602605cd90 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
divw x6, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x22, 0x9729032b8f020ad0 # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
divw x21, x22, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x24, 0x101f22f1a0e21d41 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
divw x2, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x28, 0x548a46604ed2ac69 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
divw x21, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x21, 0x0000000000000000 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divw x13, x21, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x3, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
divw x30, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x14, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
divw x20, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x6, 0x0000000000000000 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
divw x8, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x20, 0x0000000000000000 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
divw x7, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000000000000 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
divw x10, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x20, 0x0000000000000000 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
divw x12, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x1, 0x0000000000000000 # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
divw x24, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x22, 0x0000000000000000 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
divw x18, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x12, 0x0000000000000000 # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
divw x3, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x0000000000000000 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x17, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x18, 0x0000000000000000 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
divw x13, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x8, 0x0000000000000000 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
divw x30, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
divw x25, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x27, 0x0000000000000000 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
divw x26, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x30, 0x0000000000000000 # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
divw x19, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x17, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
divw x21, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x8, 0x0000000000000001 # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
divw x19, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x24, 0x0000000000000001 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
divw x3, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x6, 0x0000000000000001 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
divw x16, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x1, 0x0000000000000001 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
divw x27, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
divw x13, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000000000001 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
divw x27, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x28, 0x0000000000000001 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
divw x13, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x17, 0x0000000000000001 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
divw x10, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x5, 0x0000000000000001 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
divw x11, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x0000000000000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x2, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x14, 0x0000000000000001 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
divw x22, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x29, 0x0000000000000001 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
divw x20, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x25, 0x0000000000000001 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
divw x29, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x16, 0x0000000000000001 # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
divw x13, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x12, 0x0000000000000001 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
divw x29, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x23, 0x0000000000000002 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
divw x25, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x30, 0x0000000000000002 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
divw x14, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x30, 0x0000000000000002 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
divw x9, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x16, 0x0000000000000002 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
divw x5, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x17, 0x0000000000000002 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
divw x8, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
divw x21, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000000000002 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
divw x26, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000002 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
divw x19, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x3, 0x0000000000000002 # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
divw x30, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x5, 0x0000000000000002 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
divw x16, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x0000000000000002 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x21, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x18, 0x0000000000000002 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
divw x2, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x26, 0x0000000000000002 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
divw x5, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x26, 0x0000000000000002 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
divw x23, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x21, 0x0000000000000002 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
divw x26, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x27, 0x0000000000000002 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
divw x21, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x17, 0x8000000000000000 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
divw x9, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x11, 0x8000000000000000 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
divw x6, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x31, 0x8000000000000000 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
divw x30, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x10, 0x8000000000000000 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
divw x6, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x1, 0x8000000000000000 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
divw x22, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
divw x23, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x20, 0x8000000000000000 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
divw x24, x20, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
divw x31, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x19, 0x8000000000000000 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
divw x15, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x13, 0x8000000000000000 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
divw x20, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x8000000000000000 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x26, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x17, 0x8000000000000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
divw x1, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
divw x5, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x8, 0x8000000000000000 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
divw x9, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x2, 0x8000000000000000 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
divw x8, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x10, 0x8000000000000000 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
divw x23, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x30, 0x8000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
divw x28, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x7, 0x8000000000000001 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
divw x21, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x5, 0x8000000000000001 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
divw x18, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x24, 0x8000000000000001 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
divw x7, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x20, 0x8000000000000001 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
divw x1, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x6, 0x8000000000000001 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
divw x5, x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x29, 0x8000000000000001 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
divw x10, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x18, 0x8000000000000001 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
divw x5, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x10, 0x8000000000000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
divw x16, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x27, 0x8000000000000001 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
divw x29, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x8000000000000001 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x21, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x16, 0x8000000000000001 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
divw x1, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x30, 0x8000000000000001 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
divw x10, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x8, 0x8000000000000001 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
divw x17, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x10, 0x8000000000000001 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
divw x28, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x2, 0x8000000000000001 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
divw x21, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x17, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divw x6, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x6, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
divw x2, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x16, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
divw x23, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x22, 0x7fffffffffffffff # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
divw x26, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x18, 0x7fffffffffffffff # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
divw x5, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x5, 0x7fffffffffffffff # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
divw x20, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x8, 0x7fffffffffffffff # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
divw x1, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x16, 0x7fffffffffffffff # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
divw x11, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x15, 0x7fffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
divw x9, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x28, 0x7fffffffffffffff # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
divw x22, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x7fffffffffffffff # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x3, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x23, 0x7fffffffffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
divw x29, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x16, 0x7fffffffffffffff # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
divw x26, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x25, 0x7fffffffffffffff # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
divw x26, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
divw x27, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x30, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
divw x5, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x21, 0x7ffffffffffffffe # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
divw x6, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x29, 0x7ffffffffffffffe # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
divw x31, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x29, 0x7ffffffffffffffe # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
divw x30, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x9, 0x7ffffffffffffffe # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
divw x15, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x1, 0x7ffffffffffffffe # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
divw x23, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x10, 0x7ffffffffffffffe # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
divw x15, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x28, 0x7ffffffffffffffe # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
divw x23, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
divw x28, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x20, 0x7ffffffffffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
divw x30, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x25, 0x7ffffffffffffffe # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
divw x24, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x7ffffffffffffffe # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x29, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x2, 0x7ffffffffffffffe # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
divw x24, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x3, 0x7ffffffffffffffe # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
divw x29, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
divw x10, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x27, 0x7ffffffffffffffe # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
divw x22, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x26, 0x7ffffffffffffffe # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
divw x21, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x26, 0xffffffffffffffff # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
divw x25, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x13, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
divw x28, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x20, 0xffffffffffffffff # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
divw x30, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x2, 0xffffffffffffffff # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
divw x23, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x20, 0xffffffffffffffff # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
divw x3, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x1, 0xffffffffffffffff # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
divw x15, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
divw x20, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
divw x23, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
divw x1, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x25, 0xffffffffffffffff # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
divw x21, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0xffffffffffffffff # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x17, x12, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x5, 0xffffffffffffffff # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
divw x30, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
divw x7, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x19, 0xffffffffffffffff # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
divw x14, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x19, 0xffffffffffffffff # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
divw x31, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x22, 0xffffffffffffffff # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
divw x20, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x12, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
divw x5, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x7, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
divw x22, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x25, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
divw x12, x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x7, 0xfffffffffffffffe # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
divw x12, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x13, 0xfffffffffffffffe # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
divw x1, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x10, 0xfffffffffffffffe # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
divw x7, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
divw x31, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0xfffffffffffffffe # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
divw x24, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
divw x6, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x22, 0xfffffffffffffffe # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
divw x2, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0xfffffffffffffffe # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x19, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0xfffffffffffffffe # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
divw x10, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x29, 0xfffffffffffffffe # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
divw x26, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
divw x5, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x31, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
divw x27, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x27, 0xfffffffffffffffe # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
divw x16, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
divw x11, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
divw x1, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
divw x16, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
divw x27, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
divw x17, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
divw x11, x5, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
divw x25, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
divw x30, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
divw x31, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
divw x2, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x29, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
divw x10, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
divw x23, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
divw x29, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
divw x20, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
divw x26, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
divw x25, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
divw x1, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
divw x24, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
divw x3, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
divw x6, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
divw x17, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
divw x9, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
divw x25, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
divw x9, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
divw x18, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x9, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
divw x8, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
divw x19, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
divw x18, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
divw x9, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
divw x28, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x1, 0x5555555555555555 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
divw x6, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x27, 0x5555555555555555 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
divw x30, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x30, 0x5555555555555555 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
divw x2, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x12, 0x5555555555555555 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
divw x16, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x20, 0x5555555555555555 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
divw x31, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x29, 0x5555555555555555 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
divw x19, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x20, 0x5555555555555555 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divw x23, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x30, 0x5555555555555555 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
divw x21, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x30, 0x5555555555555555 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
divw x8, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
divw x6, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x5555555555555555 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x23, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
divw x19, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x27, 0x5555555555555555 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
divw x9, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
divw x9, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x30, 0x5555555555555555 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
divw x20, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x11, 0x5555555555555555 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
divw x6, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x11, 0x00000000ffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
divw x24, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x11, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
divw x21, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x29, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
divw x8, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x3, 0x00000000ffffffff # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
divw x19, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x24, 0x00000000ffffffff # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
divw x3, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x26, 0x00000000ffffffff # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
divw x25, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x21, 0x00000000ffffffff # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
divw x17, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x26, 0x00000000ffffffff # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
divw x12, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x15, 0x00000000ffffffff # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
divw x6, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x23, 0x00000000ffffffff # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
divw x31, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x00000000ffffffff # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x12, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x16, 0x00000000ffffffff # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
divw x30, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x19, 0x00000000ffffffff # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
divw x13, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x22, 0x00000000ffffffff # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
divw x14, x22, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x1, 0x00000000ffffffff # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
divw x9, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x1, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
divw x18, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x25, 0x00000000fffffffe # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
divw x31, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x30, 0x00000000fffffffe # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
divw x22, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x2, 0x00000000fffffffe # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
divw x11, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x10, 0x00000000fffffffe # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
divw x19, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x23, 0x00000000fffffffe # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
divw x2, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x24, 0x00000000fffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
divw x9, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x12, 0x00000000fffffffe # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divw x13, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x5, 0x00000000fffffffe # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
divw x9, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x22, 0x00000000fffffffe # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
divw x21, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x13, 0x00000000fffffffe # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
divw x8, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x00000000fffffffe # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x29, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x26, 0x00000000fffffffe # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
divw x7, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x1, 0x00000000fffffffe # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
divw x30, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x31, 0x00000000fffffffe # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
divw x9, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x11, 0x00000000fffffffe # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
divw x22, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x24, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
divw x5, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x23, 0x0000000100000000 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divw x21, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x16, 0x0000000100000000 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
divw x28, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x19, 0x0000000100000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
divw x11, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x31, 0x0000000100000000 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
divw x14, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x18, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
divw x5, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000000 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
divw x9, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000100000000 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
divw x3, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x13, 0x0000000100000000 # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
divw x25, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x6, 0x0000000100000000 # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
divw x18, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000100000000 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
divw x16, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000100000000 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x19, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x23, 0x0000000100000000 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
divw x6, x23, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x10, 0x0000000100000000 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
divw x28, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x6, 0x0000000100000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
divw x1, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x3, 0x0000000100000000 # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
divw x17, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x30, 0x0000000100000000 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
divw x26, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x19, 0x0000000100000001 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
divw x7, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x25, 0x0000000100000001 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
divw x10, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x30, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
divw x18, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x30, 0x0000000100000001 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
divw x23, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x10, 0x0000000100000001 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
divw x2, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
divw x29, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000100000001 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
divw x31, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x25, 0x0000000100000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
divw x30, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x8, 0x0000000100000001 # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
divw x23, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000100000001 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
divw x21, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x0000000100000001 # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
divw x18, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x31, 0x0000000100000001 # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
divw x7, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x3, 0x0000000100000001 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
divw x25, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x22, 0x0000000100000001 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
divw x14, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x2, 0x0000000100000001 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
divw x27, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x10, 0x0000000100000001 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
divw x29, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xc59e6e8631973acd # initialize rs1
li x0, 0xba61e9b2acdad3b0 # initialize rs2
divw x20, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x63eb18af7aaa6e20 # initialize rs1
li x1, 0x880ca1c9d2d179e8 # initialize rs2
divw x24, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xdbf70fb47795e3d9 # initialize rs1
li x2, 0x50b58f5646cfe039 # initialize rs2
divw x10, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x8b2c68176214c50f # initialize rs1
li x3, 0x9fc2040c680bc4bc # initialize rs2
divw x5, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xcced7d56e11be486 # initialize rs1
li x4, 0x7a0ee023f5f3bc0a # initialize rs2
divw x11, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xdda004641a4ba3ed # initialize rs1
li x5, 0x9606255a3b970c9a # initialize rs2
divw x9, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3a0cdba649e35128 # initialize rs1
li x6, 0x0a89aeeb08bca8f6 # initialize rs2
divw x9, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x9, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe6df2d027207435b # initialize rs1
li x7, 0x7b6e6e455039c8f9 # initialize rs2
divw x25, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x4e81baf90cbb2017 # initialize rs1
li x8, 0xe7a08c2814973f9c # initialize rs2
divw x18, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xcc49f4f9face286f # initialize rs1
li x9, 0x8dbc892d6bbcd010 # initialize rs2
divw x23, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x48013bf5bec98165 # initialize rs1
li x10, 0x7b58feaec7292ad6 # initialize rs2
divw x8, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x252fdb6a58deb91d # initialize rs1
li x11, 0x56e67f8c729bdf1b # initialize rs2
divw x12, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x383c444a64f5b9e3 # initialize rs1
li x12, 0xb90db1578d11ff22 # initialize rs2
divw x1, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xe12af257ec3ed3f6 # initialize rs1
li x13, 0xb4de49abb2ea26a3 # initialize rs2
divw x14, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xdd5bd54ecde88ea3 # initialize rs1
li x14, 0x72fcf6f117986447 # initialize rs2
divw x5, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xe64473cd73009f8c # initialize rs1
li x15, 0xf791da27330e6c41 # initialize rs2
divw x20, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x028e2495bb4c6b57 # initialize rs1
li x16, 0x7f13efb2390378b6 # initialize rs2
divw x28, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x145d378803a5855f # initialize rs1
li x17, 0x1293f604db74c283 # initialize rs2
divw x10, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x191c9f167b7d1c54 # initialize rs1
li x18, 0xcbd21807f976e47a # initialize rs2
divw x17, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x4a0b6dd285ddf7ff # initialize rs1
li x19, 0xaf89eb8b6842f86e # initialize rs2
divw x28, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x41620482bbd35f9c # initialize rs1
li x20, 0xf17267073abb21ed # initialize rs2
divw x6, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x5950d7e6dac06449 # initialize rs1
li x21, 0x72897e02c780aa63 # initialize rs2
divw x1, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xd828e9266c8cce60 # initialize rs1
li x22, 0xd476505eacf6cc6f # initialize rs2
divw x23, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x1214d75ee39f99e2 # initialize rs1
li x23, 0xc0558aa176ae2b7f # initialize rs2
divw x22, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x70d6e0ef5bfa7a86 # initialize rs1
li x24, 0x9a7149d74d3cdd58 # initialize rs2
divw x13, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xa4d07710841af4b8 # initialize rs1
li x25, 0xb099a9a0964190d3 # initialize rs2
divw x18, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xf0c22baab5a0f65f # initialize rs1
li x26, 0x23b376eb05c8f9ed # initialize rs2
divw x14, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xf03e989dcff8d762 # initialize rs1
li x27, 0x421db4bcd405c4d9 # initialize rs2
divw x30, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x78493051702bcee3 # initialize rs1
li x28, 0x08263e85b457c074 # initialize rs2
divw x24, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x4bb3dfe90389d8d9 # initialize rs1
li x29, 0xa61621ee9425e637 # initialize rs2
divw x2, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x1585266c714c155d # initialize rs1
li x30, 0x89361e4d55db3603 # initialize rs2
divw x29, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xb0c4a48943b23908 # initialize rs1
li x31, 0xbf4167f52ade4a04 # initialize rs2
divw x15, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x441ffcdc4a3023f5 # initialize rs1
li x5, 0x2238e2084f9386e6 # initialize rs2
divw x0, x0, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x2b90a1b6ac5ee6ad # initialize rs1
li x30, 0x0fa1fc2d7f1f64e7 # initialize rs2
divw x1, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x9f470947e63538ee # initialize rs1
li x1, 0xc7028847d52cfaa9 # initialize rs2
divw x2, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x49feebc6fcc9b7e9 # initialize rs1
li x7, 0xf3289afaa0b0efbf # initialize rs2
divw x3, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x1b4db8ad9615890e # initialize rs1
li x13, 0x56923aa97f39a224 # initialize rs2
divw x4, x4, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xf72f43f451300821 # initialize rs1
li x19, 0x2050519ebaba0683 # initialize rs2
divw x5, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x09b630dc6aaabb5f # initialize rs1
li x12, 0x065895eb3ec8fd3d # initialize rs2
divw x6, x6, x12 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x054be0624bb38f06 # initialize rs1
li x3, 0x0f34dfa213a0675a # initialize rs2
divw x7, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x45bcef76d79df9dd # initialize rs1
li x10, 0xf97e37480df1119d # initialize rs2
divw x8, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xa77d494ebfc04167 # initialize rs1
li x27, 0x5427d116b24a46d7 # initialize rs2
divw x9, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x231a39b0c14f0152 # initialize rs1
li x5, 0x172ee78b0f4993ec # initialize rs2
divw x10, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xece92aa8966e7dac # initialize rs1
li x14, 0x315dfac1118b777d # initialize rs2
divw x11, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xc7e9629964c9b0d5 # initialize rs1
li x8, 0xbe951795b2c5e069 # initialize rs2
divw x12, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x960a7cbf26925a51 # initialize rs1
li x22, 0x3010b346af604fb7 # initialize rs2
divw x13, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xb1e502248e36b183 # initialize rs1
li x31, 0xceb81200d6952fd5 # initialize rs2
divw x14, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x3855815f3b39179b # initialize rs1
li x6, 0xe8ef4c8a72ec9b05 # initialize rs2
divw x15, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x26b2a31a52692dc2 # initialize rs1
li x10, 0x34cdb695d8547130 # initialize rs2
divw x16, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x3ada12de892b8200 # initialize rs1
li x5, 0x41853015b7e7b5aa # initialize rs2
divw x17, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xefce05cdfe364aff # initialize rs1
li x30, 0x91376279c6855d9f # initialize rs2
divw x18, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xea09cf0dd94d2e35 # initialize rs1
li x19, 0x054c94cfb93c14d7 # initialize rs2
divw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x562894a9fac4a626 # initialize rs1
li x28, 0x64d1ebc33026dbd7 # initialize rs2
divw x20, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x7dd858740ac3c8be # initialize rs1
li x31, 0xa9603885391f617a # initialize rs2
divw x21, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x6faa93fc2521b9e9 # initialize rs1
li x27, 0x11bf4e2d23e44841 # initialize rs2
divw x22, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xdc59e0834ed90c5b # initialize rs1
li x5, 0xfe5905a4825e2af3 # initialize rs2
divw x23, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x4abd68d410ec13f4 # initialize rs1
li x10, 0x3a4ed63bb46a3141 # initialize rs2
divw x24, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xc623db309d56cb64 # initialize rs1
li x17, 0x8a94a627c673642b # initialize rs2
divw x25, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x79ff7bdeff2e8ac0 # initialize rs1
li x22, 0x7c94ecdb8ac00031 # initialize rs2
divw x26, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x2f581b6f815163ca # initialize rs1
li x24, 0x5aa4bfd8d3182b59 # initialize rs2
divw x27, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xafc5d1f8efa1cb76 # initialize rs1
li x18, 0xb9d54f348837ee90 # initialize rs2
divw x28, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x35655214a7338f45 # initialize rs1
li x14, 0x15efa7406bad6c73 # initialize rs2
divw x29, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x63b52b4ed3a597f7 # initialize rs1
li x18, 0x6d112210f6344aea # initialize rs2
divw x30, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x1b4a5aa06e2aea9f # initialize rs1
li x8, 0x23cec373cd6ce4bf # initialize rs2
divw x31, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x7, 0xab5f4649790ab5f4 # initialize rs1
li x0, 0x968f239f6eb03fd5 # initialize rs2
divw x0, x7, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x6, 0xb8e3942e08f7b6e2 # initialize rs1
li x1, 0xeb582f61bc7c6aea # initialize rs2
divw x1, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x22, 0xb588a3d857009abe # initialize rs1
li x2, 0xadd35529726d1097 # initialize rs2
divw x2, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x1, 0x6b5566ca6ca65446 # initialize rs1
li x3, 0x60c0850a223ccacc # initialize rs2
divw x3, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x3, 0xe58603689bfed9bb # initialize rs1
li x4, 0xa3121e92b7a88323 # initialize rs2
divw x4, x3, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x23, 0x6dc975eb2fa01cbb # initialize rs1
li x5, 0x48ea45c8579f79e7 # initialize rs2
divw x5, x23, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x1, 0x260d7d0fb8cebb97 # initialize rs1
li x6, 0xc078a2c212c491ca # initialize rs2
divw x6, x1, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x1, 0xc4ce665c2a309e40 # initialize rs1
li x7, 0x753332cd52d708c5 # initialize rs2
divw x7, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x25, 0x1877d9f83b602a7b # initialize rs1
li x8, 0x9e159c602278ec16 # initialize rs2
divw x8, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x19, 0xd1f7fc60b1c8aadb # initialize rs1
li x9, 0xfa0616bfb9a20a97 # initialize rs2
divw x9, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x9, 0xe5584b1cd5c59890 # initialize rs1
li x10, 0xfdf65a3c66ea4a2d # initialize rs2
divw x10, x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x6, 0x5778d4b225fd297e # initialize rs1
li x11, 0x3eaa4d04f1036416 # initialize rs2
divw x11, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x3, 0x593a888a4b3fef19 # initialize rs1
li x12, 0x5f808b66c6fa4d65 # initialize rs2
divw x12, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x26, 0x99f623ceeeb3f4c5 # initialize rs1
li x13, 0x77e1db4bde9fe4ac # initialize rs2
divw x13, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x19, 0xd9757c0ac40c2632 # initialize rs1
li x14, 0x265fe4e4c82efd2b # initialize rs2
divw x14, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x26, 0x6140bb08c595e4f6 # initialize rs1
li x15, 0x5a550d3a9a32966c # initialize rs2
divw x15, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x9, 0x2725f0cac4cbc017 # initialize rs1
li x16, 0x9d403bf79db629d4 # initialize rs2
divw x16, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x29, 0x0e6cbd7562ee1d16 # initialize rs1
li x17, 0x525a3f013e854275 # initialize rs2
divw x17, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x30, 0x0d2af57ff6787158 # initialize rs1
li x18, 0x5906df976c9bd239 # initialize rs2
divw x18, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x31, 0xa242e3ce48a51d5d # initialize rs1
li x19, 0xa3a51afa777cc7f0 # initialize rs2
divw x19, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x19, 0xd4d2a8c06cac36fc # initialize rs1
li x20, 0x7050edd97539f048 # initialize rs2
divw x20, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x26, 0x8c48ab19e8cd8ddd # initialize rs1
li x21, 0xbd9a59540712a86c # initialize rs2
divw x21, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x31, 0x6c9eab946f68048e # initialize rs1
li x22, 0xceb29ca5c820ed6b # initialize rs2
divw x22, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x25, 0x5ef91181002d4a3d # initialize rs1
li x23, 0x334b1a8df7625de0 # initialize rs2
divw x23, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x13, 0xeb266c2642469f00 # initialize rs1
li x24, 0x382aabfad37b4456 # initialize rs2
divw x24, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x18, 0x20905d8f308476fc # initialize rs1
li x25, 0x8ca7746715c6d1ec # initialize rs2
divw x25, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x24, 0x67674bab89cf35d0 # initialize rs1
li x26, 0xb495ff90f7a8ea7a # initialize rs2
divw x26, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x9, 0x70ed230f11fd9b3c # initialize rs1
li x27, 0x3adb6b797db3f359 # initialize rs2
divw x27, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x31, 0x227efb62cb70ec68 # initialize rs1
li x28, 0xd92f99a6d098aab9 # initialize rs2
divw x28, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x6, 0x673fc1a043f88204 # initialize rs1
li x29, 0xa97a6e5c6a8af673 # initialize rs2
divw x29, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x29, 0x3690b1991abc5076 # initialize rs1
li x30, 0x571970284c521bf6 # initialize rs2
divw x30, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x2, 0x6120f3a80cd62f06 # initialize rs1
li x31, 0x7ec41f2bba044d70 # initialize rs2
divw x31, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xf8477c5276957dac # initialize rs1
li x0, 0x781e635fece4ee93 # initialize rs2
divw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x9dddbe93a956c351 # initialize rs1
li x1, 0xfe94ed3fafff9d01 # initialize rs2
divw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x5a63c54662145839 # initialize rs1
li x2, 0x5b20cead8d0fcd3c # initialize rs2
divw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x9c6e7ce8040491b3 # initialize rs1
li x3, 0xe8df4a0515ed30aa # initialize rs2
divw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x726675f59ab8d70b # initialize rs1
li x4, 0x538c99d6089aa353 # initialize rs2
divw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x0bd2896c522aa652 # initialize rs1
li x5, 0x9700ecc1b037d1af # initialize rs2
divw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xff929ba822c4312f # initialize rs1
li x6, 0xc1237418937dfa3b # initialize rs2
divw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x90f332e6519e9030 # initialize rs1
li x7, 0xcf97af8a043cf011 # initialize rs2
divw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x29bcd341ff5cdb94 # initialize rs1
li x8, 0x0526ef5a597a1db5 # initialize rs2
divw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x9d08cb6f85bdda1c # initialize rs1
li x9, 0x43036e431f96c56c # initialize rs2
divw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xabeb883aab56548b # initialize rs1
li x10, 0xd0530bad0a89f434 # initialize rs2
divw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x7901c78f2b87bee2 # initialize rs1
li x11, 0xcc0f0c6ceb816206 # initialize rs2
divw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x85c30a5a1eb4ad22 # initialize rs1
li x12, 0x817b2b2cdd75ede1 # initialize rs2
divw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xea716af944cd087f # initialize rs1
li x13, 0x2767dda0d66974cc # initialize rs2
divw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x534ed44438a4db4d # initialize rs1
li x14, 0x4ccdf4cf65c3f67e # initialize rs2
divw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x79b1247692b31dcd # initialize rs1
li x15, 0xa2be5af29cf098bc # initialize rs2
divw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x493c5c57ec22b3f8 # initialize rs1
li x16, 0x21a2b4a883de8c91 # initialize rs2
divw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xca39f962959597f0 # initialize rs1
li x17, 0x191845af26503779 # initialize rs2
divw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xf5b65027e511fb87 # initialize rs1
li x18, 0x296ee65a7001fef2 # initialize rs2
divw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xa6b2029ca439213d # initialize rs1
li x19, 0x404ed83f6e5c48d7 # initialize rs2
divw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x655c6aadb69c3342 # initialize rs1
li x20, 0x90592e5a30bab88d # initialize rs2
divw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xe85d6bc1739d29ca # initialize rs1
li x21, 0x28868cba55b326b6 # initialize rs2
divw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x94b00ed109b9cd19 # initialize rs1
li x22, 0x89e7c0c82a8ed97a # initialize rs2
divw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x577c2bcb2749f70d # initialize rs1
li x23, 0x7ecab303fcc36a37 # initialize rs2
divw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xd940075e3c11c8e6 # initialize rs1
li x24, 0x2144830ccde65876 # initialize rs2
divw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xe36dbf617d870118 # initialize rs1
li x25, 0x0e555b9da224a67e # initialize rs2
divw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xa42ecf40559f26b2 # initialize rs1
li x26, 0xbce37ab2e31a411d # initialize rs2
divw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x341161c61c02d1b2 # initialize rs1
li x27, 0x2334d4fd55bcff59 # initialize rs2
divw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xeb27c19895de966b # initialize rs1
li x28, 0x535aeb72539ea015 # initialize rs2
divw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x16a2b9b61327faf4 # initialize rs1
li x29, 0xc3ff1e8ceb29800a # initialize rs2
divw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd0fcc2f1add0476f # initialize rs1
li x30, 0xa660c01a94a35c83 # initialize rs2
divw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x235cad44cd0f3f90 # initialize rs1
li x31, 0x1ae4ec96e917770c # initialize rs2
divw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x26, x18 # perform first operation
divw x28, x1, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x29, x24, x31 # perform first operation
divw x10, x1, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x3, x17 # perform first operation
divw x6, x15, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x23, x8, x10 # perform first operation
divw x23, x23, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x9, x15 # perform first operation
divw x15, x21, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x19, x3 # perform first operation
divw x3, x14, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x14, x20 # perform first operation
divw x30, x6, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x9, x5, x2 # perform first operation
divw x9, x15, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x11, x25, x19 # perform first operation
divw x11, x1, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x11, x16, x25 # perform first operation
divw x16, x5, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x9, x25, x15 # perform first operation
divw x15, x1, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x18, x17, x6 # perform first operation
divw x5, x16, x2 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-mul.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x85558031f14a7e90 # initialize rs1
li x2, 0x485de21c77d32db8 # initialize rs2
mul x26, x0, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xe5b2ba61fdb32a80 # initialize rs1
li x2, 0x521af14e3e0ace47 # initialize rs2
mul x8, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x09960fe51fa6bf61 # initialize rs1
li x3, 0x41154fc6270fbeca # initialize rs2
mul x25, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x8e2b1214a3f82ab5 # initialize rs1
li x14, 0x88b923e9406720e0 # initialize rs2
mul x11, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x1c0984f74b85bca4 # initialize rs1
li x29, 0x17f6999229bf93ef # initialize rs2
mul x1, x4, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcb19d8daa53dd02f # initialize rs1
li x27, 0x9ece252fabaa1a99 # initialize rs2
mul x19, x5, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x19, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7d64b18097618499 # initialize rs1
li x31, 0xa8c89e501b571492 # initialize rs2
mul x29, x6, x31 # perform operation
RVTEST_SIGUPD(x7, x0, x29, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xcaa91f159268d865 # initialize rs1
li x18, 0x1e1f1f5d5313a2f0 # initialize rs2
mul x15, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xa09b3878d56d9139 # initialize rs1
li x25, 0x2f5317622f69ed12 # initialize rs2
mul x3, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xbd104bf002505130 # initialize rs1
li x3, 0xa88a8febd84761dd # initialize rs2
mul x28, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x4d9a1b8d2bc68259 # initialize rs1
li x28, 0x1b59ab7e042bd76a # initialize rs2
mul x31, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x73ce1d34fccd5425 # initialize rs1
li x15, 0x479c750ecf4bc615 # initialize rs2
mul x24, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x7845a6a47271588d # initialize rs1
li x3, 0x426542a0e452f0d6 # initialize rs2
mul x30, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xec072c45abfb1641 # initialize rs1
li x14, 0xd022b98dca4585bb # initialize rs2
mul x26, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x4b4f4902de8932a0 # initialize rs1
li x18, 0x42f10512b3837019 # initialize rs2
mul x16, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x14c8f53c5048016a # initialize rs1
li x14, 0xfb2b1e497da5c0d0 # initialize rs2
mul x24, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xf79bbca87c968d7e # initialize rs1
li x12, 0x5f4847074c380284 # initialize rs2
mul x23, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x738d6067fac2a18e # initialize rs1
li x14, 0x5adee5d93558a1b6 # initialize rs2
mul x21, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x0a569f5b39c34a63 # initialize rs1
li x30, 0xe641aebcdfdb07ff # initialize rs2
mul x8, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x438f530726f92a9f # initialize rs1
li x25, 0x473363fd932af80b # initialize rs2
mul x15, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x54ea7c159e521f42 # initialize rs1
li x11, 0xccc4e0cf5d2d45eb # initialize rs2
mul x30, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x8a5761058f27d906 # initialize rs1
li x31, 0x4b6a47e7208fee55 # initialize rs2
mul x19, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x55a5a7eb616f7a04 # initialize rs1
li x21, 0x0e2178710e667797 # initialize rs2
mul x16, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb8ecfa82864bfd72 # initialize rs1
li x18, 0xe74e912971c59e65 # initialize rs2
mul x7, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xb5e7151a6bd78490 # initialize rs1
li x12, 0xe0dfb59d4ab02f8b # initialize rs2
mul x13, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xe88d39ae513187fa # initialize rs1
li x2, 0x341e9dab79ab696a # initialize rs2
mul x27, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x2debd9db23e519f9 # initialize rs1
li x17, 0x416d6131f9d6afa4 # initialize rs2
mul x16, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x637a6407ae475083 # initialize rs1
li x15, 0xab4bba8e5c872f85 # initialize rs2
mul x11, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x5855878db671124d # initialize rs1
li x2, 0xc9a1ca76af0322b0 # initialize rs2
mul x26, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x3ce6fa5df0aebd88 # initialize rs1
li x22, 0x00e8b84223a47628 # initialize rs2
mul x23, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x1403d929aafcf2a3 # initialize rs1
li x2, 0x43c5306f38cd4177 # initialize rs2
mul x26, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x68902d6b519be338 # initialize rs1
li x22, 0x7283339ced8fb406 # initialize rs2
mul x5, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x27, 0x028695baa537c6fc # initialize rs1
li x0, 0x6e44599c8c0af779 # initialize rs2
mul x30, x27, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x21, 0xe9e126dfc0f5bddc # initialize rs1
li x1, 0x9a24b80e6760a224 # initialize rs2
mul x15, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x29, 0x494d03f4c5ee2daa # initialize rs1
li x2, 0xaefd5a285cd9d298 # initialize rs2
mul x18, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x15, 0xde6eeccf28e9f44c # initialize rs1
li x3, 0x510863bb9338c007 # initialize rs2
mul x29, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0x820c08391417b4b8 # initialize rs1
li x4, 0xbc7da84f4ab10e02 # initialize rs2
mul x15, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
li x2, 0xdeb92e4ba46ce421 # initialize rs1
li x5, 0xb12c164f52e49ba1 # initialize rs2
mul x23, x2, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0xc91646c4973f9818 # initialize rs1
li x6, 0x0fe01131a3d2d47b # initialize rs2
mul x17, x24, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x17, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x2729367ed8738c68 # initialize rs1
li x7, 0x3e0984d7ac5d824c # initialize rs2
mul x21, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x23, 0x63969d84f705f716 # initialize rs1
li x8, 0x5673506f1baa3112 # initialize rs2
mul x10, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x5, 0x20b30ebd62f9cd1c # initialize rs1
li x9, 0x97bfdc5ad3ea856e # initialize rs2
mul x14, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x25, 0x73e417bb385c1ef5 # initialize rs1
li x10, 0x1c6d2efa5fa83c3e # initialize rs2
mul x27, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x2, 0xd0e32727aece95a0 # initialize rs1
li x11, 0x490ea0b23a9eaa1e # initialize rs2
mul x20, x2, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x17, 0x73a8cd66c014adce # initialize rs1
li x12, 0xb55de30ee517579a # initialize rs2
mul x10, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x27, 0x778ecf9662118383 # initialize rs1
li x13, 0xdbb64e54c6f43bc5 # initialize rs2
mul x17, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x2, 0x3a7915239f2465e2 # initialize rs1
li x14, 0x89fb8acc9f4a2f65 # initialize rs2
mul x7, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x22, 0x55352de8935ffc2c # initialize rs1
li x15, 0xe7b4f4c1ec92b805 # initialize rs2
mul x6, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x26, 0xfc4659b90f7e1583 # initialize rs1
li x16, 0x4562a1724d397402 # initialize rs2
mul x29, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x22, 0x9d54eed5be49022d # initialize rs1
li x17, 0xe4b5cdb93d587221 # initialize rs2
mul x16, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x5, 0x2c747532fcafdc73 # initialize rs1
li x18, 0xcde980470ad3f950 # initialize rs2
mul x1, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x21, 0x513ce8fa1377ed60 # initialize rs1
li x19, 0x9f45fcbc8ad9373a # initialize rs2
mul x13, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x28, 0xaff35d298a86087b # initialize rs1
li x20, 0xb9c62d98048448be # initialize rs2
mul x6, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x23, 0x808e560239f5f7bf # initialize rs1
li x21, 0x188f80e7769b7826 # initialize rs2
mul x14, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x28, 0x13560cef908262aa # initialize rs1
li x22, 0xbbbf836cd7a07ce4 # initialize rs2
mul x8, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x20, 0x6143fbf8767c418a # initialize rs1
li x23, 0x2262c48481a5f677 # initialize rs2
mul x5, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x10, 0x872cb34da5ffd7f2 # initialize rs1
li x24, 0xa45051b3e9ddeb4b # initialize rs2
mul x29, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x16, 0x53700e7f6b427b48 # initialize rs1
li x25, 0x554aae1867e884af # initialize rs2
mul x8, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x3, 0xbf649885e7612852 # initialize rs1
li x26, 0xb8210b229330984a # initialize rs2
mul x23, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x16, 0x32f583761c9ee19a # initialize rs1
li x27, 0x4e48e6d06bf149df # initialize rs2
mul x19, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x22, 0xa5bc85ff0c912c14 # initialize rs1
li x28, 0xf90fa2b035b67c88 # initialize rs2
mul x7, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x19, 0xa08b185d3603f549 # initialize rs1
li x29, 0x535a15644dbfb62b # initialize rs2
mul x12, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x16, 0x93b45be51fb03afe # initialize rs1
li x30, 0x6185993f51cf8c17 # initialize rs2
mul x2, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x12, 0x4245875b16b66c7e # initialize rs1
li x31, 0x6a7186b38a9ec6f5 # initialize rs2
mul x18, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 504)

# Testcase cp_rd (Test destination rd = x0)
li x23, 0xdd43703e7dbe4682 # initialize rs1
li x27, 0xcb6604000b6a821d # initialize rs2
mul x0, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x31, 0xc05f17cf029d7090 # initialize rs1
li x15, 0x132428ba60dec141 # initialize rs2
mul x1, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x30, 0x58ba903e61dbb0cd # initialize rs1
li x7, 0x10d1f0afc8a5b76b # initialize rs2
mul x2, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x31, 0x3b14704ce4c6c298 # initialize rs1
li x22, 0x2dc296589848d0e2 # initialize rs2
mul x3, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x19, 0xf50c673f35c40870 # initialize rs1
li x5, 0xe7b6b5a84c732888 # initialize rs2
mul x4, x19, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
li x13, 0x52b0106f9961e307 # initialize rs1
li x15, 0x6f4670f80834f6f5 # initialize rs2
mul x5, x13, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x646eaa16544a9d6c # initialize rs1
li x26, 0x0a888d8a2346fa49 # initialize rs2
mul x6, x22, x26 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x13, 0x3200daa5165fd0bb # initialize rs1
li x6, 0x38cc83fa7c089236 # initialize rs2
mul x7, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x18, 0x57745bc3fe9eb928 # initialize rs1
li x12, 0x804add865b209e1b # initialize rs2
mul x8, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x29, 0xd77507f62bafdc2b # initialize rs1
li x14, 0x7c2ca2592fab2a0a # initialize rs2
mul x9, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x25, 0xd50c2e1e3d216e51 # initialize rs1
li x30, 0xccfa0697d8f82191 # initialize rs2
mul x10, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x15, 0x323e26a93d514b75 # initialize rs1
li x8, 0xc5af3a64626f720e # initialize rs2
mul x11, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x28, 0x9f15437ce518d279 # initialize rs1
li x29, 0xaad880a88481a861 # initialize rs2
mul x12, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x10, 0x742b26729d9c6367 # initialize rs1
li x31, 0x19ed16232792332d # initialize rs2
mul x13, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x28, 0x7feee5e2a14ad7ca # initialize rs1
li x13, 0x6784a2e7ef9fbe26 # initialize rs2
mul x14, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x1, 0x646fa8686a7d9b59 # initialize rs1
li x17, 0x4cfd41850fd2c27f # initialize rs2
mul x15, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x28, 0x5510c86c3936e96b # initialize rs1
li x6, 0x7659281110ad703c # initialize rs2
mul x16, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x6, 0x94314339486d91a7 # initialize rs1
li x8, 0xff86d6a1f60eb933 # initialize rs2
mul x17, x6, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x20, 0xfa3f55ff12b18cab # initialize rs1
li x19, 0x0893e62be72b6fa5 # initialize rs2
mul x18, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x5, 0x86e10d320ffc3446 # initialize rs1
li x10, 0x19a2037f212f6a52 # initialize rs2
mul x19, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x29, 0xfe63338d76f79742 # initialize rs1
li x14, 0xbd432a420da88ca7 # initialize rs2
mul x20, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x16, 0xe524a8d5a2546005 # initialize rs1
li x12, 0x73825cb0c1a6de2f # initialize rs2
mul x21, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x22, 0x5218a17a8694b695 # initialize rs1
li x7, 0x72e44d30d4a3ad1b # initialize rs2
mul x22, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x25, 0x50ad7947dd28ba9d # initialize rs1
li x1, 0x3f316f06d10940f6 # initialize rs2
mul x23, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x21, 0x44f33079b3acac51 # initialize rs1
li x17, 0x52cf85fddbd41d4a # initialize rs2
mul x24, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x29, 0x9a0a7d25b773e0a7 # initialize rs1
li x27, 0x77bf9f3f983baca5 # initialize rs2
mul x25, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x22, 0x688f534ec5783d50 # initialize rs1
li x9, 0x28b95ad3f343e2f7 # initialize rs2
mul x26, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x9, 0x84bd288729f31678 # initialize rs1
li x11, 0xf7212102484884f2 # initialize rs2
mul x27, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x19, 0xb4afba5fb7e1abfc # initialize rs1
li x24, 0x99b7fb3961fcdc8a # initialize rs2
mul x28, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x29, 0xcb8db8f5f625704f # initialize rs1
li x12, 0xa515ec9f70e3721f # initialize rs2
mul x29, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x24, 0x301f2bf55445dc43 # initialize rs1
li x26, 0x71cdb32b053aad1f # initialize rs2
mul x30, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x15, 0xabd45995c19adce2 # initialize rs1
li x12, 0x9d8b6ced047bee9f # initialize rs2
mul x31, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x8, 0x0000000000000000 # initialize rs1
li x11, 0x636e13eb8a1a35aa # initialize rs2
mul x23, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x29, 0x0000000000000001 # initialize rs1
li x13, 0xc85a0de04947d5be # initialize rs2
mul x7, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x12, 0x0000000000000002 # initialize rs1
li x17, 0x1ab660ca5cb20262 # initialize rs2
mul x19, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x25, 0x8000000000000000 # initialize rs1
li x8, 0x7a03b0730925d273 # initialize rs2
mul x23, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x17, 0x8000000000000001 # initialize rs1
li x13, 0x3ba073095ffbff0a # initialize rs2
mul x15, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x23, 0xb06557b2666cd0b2 # initialize rs2
mul x15, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x3, 0x59d6e7fc53f5c40a # initialize rs2
mul x15, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x16, 0x87b52091d9fe26c0 # initialize rs2
mul x15, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x17, 0xfffffffffffffffe # initialize rs1
li x19, 0xdaaf1f51a89e4462 # initialize rs2
mul x24, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0xd2a7c299deca27f8 # initialize rs2
mul x19, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x9a6546b494fc18f9 # initialize rs2
mul x29, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x16, 0x5555555555555555 # initialize rs1
li x23, 0xe901a1c3fd8f7ab4 # initialize rs2
mul x8, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x16, 0x00000000ffffffff # initialize rs1
li x11, 0x77fab77f46d729d5 # initialize rs2
mul x2, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x23, 0x00000000fffffffe # initialize rs1
li x28, 0xa251133a5ae77eba # initialize rs2
mul x7, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x16, 0x0000000100000000 # initialize rs1
li x8, 0x87b0569b5e034429 # initialize rs2
mul x21, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x26, 0x0000000100000001 # initialize rs1
li x20, 0xd561149eccf728b2 # initialize rs2
mul x31, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x1, 0x8f796404d0ecc232 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
mul x25, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x24, 0x27081f41b5767c49 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
mul x5, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x1, 0xfdcad3fadb6afc83 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
mul x8, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x1, 0xf761d4fc11ba8c44 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
mul x20, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x31, 0x04387ea37b22f740 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
mul x9, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x5, 0x6643fd1fb0866ff3 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
mul x7, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x7, 0xc2e7bfea0474cf64 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
mul x17, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x3, 0x4f81f5aa3bcba8ac # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
mul x25, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x1, 0xce13b2f6653c3ff4 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
mul x7, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x20, 0xef21fe322f7bc4b2 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
mul x3, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x1, 0xa6e8b27b6a8af6c9 # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x2, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x28, 0xbc0dba46b47358da # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mul x25, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x5, 0x791bf0ca6ad5f641 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
mul x11, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x10, 0x6deb463e1530ce18 # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
mul x1, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x5, 0x0db66d86bcb08da5 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
mul x23, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x18, 0xe9300a829b98237e # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
mul x1, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x5, 0x0000000000000000 # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
mul x17, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x27, 0x0000000000000000 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
mul x15, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x28, 0x0000000000000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
mul x8, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x31, 0x0000000000000000 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
mul x17, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x23, 0x0000000000000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
mul x10, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x21, 0x0000000000000000 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
mul x23, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000000000000 # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
mul x14, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000000 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
mul x28, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
mul x12, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000000000000 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
mul x10, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x0000000000000000 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x10, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x16, 0x0000000000000000 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
mul x30, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x19, 0x0000000000000000 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
mul x1, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
mul x14, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x6, 0x0000000000000000 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mul x22, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x24, 0x0000000000000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
mul x15, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x11, 0x0000000000000001 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
mul x30, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x21, 0x0000000000000001 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
mul x15, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x9, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
mul x14, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x14, 0x0000000000000001 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
mul x8, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x6, 0x0000000000000001 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
mul x10, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x16, 0x0000000000000001 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
mul x15, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000000000001 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mul x6, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x17, 0x0000000000000001 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mul x9, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x30, 0x0000000000000001 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
mul x11, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x28, 0x0000000000000001 # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
mul x14, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000000000001 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x21, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x29, 0x0000000000000001 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
mul x28, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x5, 0x0000000000000001 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
mul x26, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x19, 0x0000000000000001 # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
mul x24, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x11, 0x0000000000000001 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
mul x21, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x3, 0x0000000000000001 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
mul x14, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x14, 0x0000000000000002 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
mul x13, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x11, 0x0000000000000002 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
mul x22, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x18, 0x0000000000000002 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
mul x30, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x22, 0x0000000000000002 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
mul x25, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x17, 0x0000000000000002 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
mul x2, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x24, 0x0000000000000002 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
mul x31, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000000000002 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
mul x31, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000002 # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
mul x25, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x7, 0x0000000000000002 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
mul x6, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x25, 0x0000000000000002 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
mul x10, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000000000002 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x2, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x7, 0x0000000000000002 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
mul x18, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
mul x14, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x19, 0x0000000000000002 # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
mul x16, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x29, 0x0000000000000002 # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
mul x2, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x31, 0x0000000000000002 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
mul x11, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x21, 0x8000000000000000 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
mul x1, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x14, 0x8000000000000000 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
mul x10, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x29, 0x8000000000000000 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mul x2, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x5, 0x8000000000000000 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
mul x27, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x17, 0x8000000000000000 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
mul x27, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x12, 0x8000000000000000 # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
mul x21, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x20, 0x8000000000000000 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
mul x14, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x17, 0x8000000000000000 # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
mul x30, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x19, 0x8000000000000000 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
mul x13, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x25, 0x8000000000000000 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
mul x22, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x8000000000000000 # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x27, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x28, 0x8000000000000000 # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
mul x17, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x27, 0x8000000000000000 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
mul x9, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x5, 0x8000000000000000 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
mul x25, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x1, 0x8000000000000000 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
mul x23, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x1, 0x8000000000000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
mul x22, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x15, 0x8000000000000001 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
mul x10, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x29, 0x8000000000000001 # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
mul x9, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x13, 0x8000000000000001 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
mul x3, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x25, 0x8000000000000001 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
mul x13, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
mul x27, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
mul x13, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x3, 0x8000000000000001 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
mul x30, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x22, 0x8000000000000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
mul x18, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x14, 0x8000000000000001 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
mul x23, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x18, 0x8000000000000001 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
mul x25, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x8000000000000001 # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x29, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x14, 0x8000000000000001 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
mul x11, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x5, 0x8000000000000001 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
mul x9, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x17, 0x8000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mul x19, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x1, 0x8000000000000001 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
mul x13, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x27, 0x8000000000000001 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
mul x23, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x9, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
mul x15, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x12, 0x7fffffffffffffff # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
mul x24, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x22, 0x7fffffffffffffff # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
mul x29, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x10, 0x7fffffffffffffff # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
mul x24, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x7, 0x7fffffffffffffff # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
mul x5, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x9, 0x7fffffffffffffff # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
mul x25, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x23, 0x7fffffffffffffff # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
mul x30, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x10, 0x7fffffffffffffff # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
mul x11, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x9, 0x7fffffffffffffff # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
mul x27, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x12, 0x7fffffffffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
mul x22, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x7fffffffffffffff # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x13, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x27, 0x7fffffffffffffff # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
mul x23, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x1, 0x7fffffffffffffff # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
mul x12, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x1, 0x7fffffffffffffff # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
mul x6, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x26, 0x7fffffffffffffff # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
mul x3, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x5, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
mul x23, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x28, 0x7ffffffffffffffe # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
mul x24, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x14, 0x7ffffffffffffffe # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
mul x2, x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x27, 0x7ffffffffffffffe # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
mul x17, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x27, 0x7ffffffffffffffe # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
mul x3, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x12, 0x7ffffffffffffffe # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
mul x31, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x27, 0x7ffffffffffffffe # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mul x26, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x11, 0x7ffffffffffffffe # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mul x27, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x1, 0x7ffffffffffffffe # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
mul x29, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x5, 0x7ffffffffffffffe # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
mul x17, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x3, 0x7ffffffffffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
mul x1, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x7ffffffffffffffe # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x19, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x17, 0x7ffffffffffffffe # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mul x12, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x31, 0x7ffffffffffffffe # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
mul x28, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mul x15, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x27, 0x7ffffffffffffffe # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
mul x29, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x2, 0x7ffffffffffffffe # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
mul x14, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x23, 0xffffffffffffffff # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
mul x16, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x21, 0xffffffffffffffff # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
mul x28, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x23, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
mul x17, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x30, 0xffffffffffffffff # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mul x26, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x27, 0xffffffffffffffff # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
mul x31, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x1, 0xffffffffffffffff # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
mul x11, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x25, 0xffffffffffffffff # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
mul x12, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
mul x25, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x14, 0xffffffffffffffff # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
mul x8, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x7, 0xffffffffffffffff # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
mul x2, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0xffffffffffffffff # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x28, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x19, 0xffffffffffffffff # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
mul x20, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x14, 0xffffffffffffffff # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
mul x19, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x18, 0xffffffffffffffff # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
mul x6, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x10, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mul x30, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x19, 0xffffffffffffffff # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
mul x26, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x20, 0xfffffffffffffffe # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
mul x9, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x11, 0xfffffffffffffffe # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
mul x2, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x26, 0xfffffffffffffffe # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
mul x21, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x2, 0xfffffffffffffffe # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
mul x9, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x2, 0xfffffffffffffffe # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
mul x31, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x16, 0xfffffffffffffffe # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
mul x30, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
mul x10, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
mul x13, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
mul x26, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x15, 0xfffffffffffffffe # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
mul x3, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0xfffffffffffffffe # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x28, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x10, 0xfffffffffffffffe # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
mul x5, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
mul x29, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x22, 0xfffffffffffffffe # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
mul x26, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x31, 0xfffffffffffffffe # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mul x11, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x1, 0xfffffffffffffffe # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
mul x6, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
mul x6, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mul x26, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
mul x18, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
mul x21, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
mul x21, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
mul x7, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
mul x21, x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
mul x7, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
mul x13, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
mul x24, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x27, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
mul x11, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
mul x7, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
mul x28, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
mul x11, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
mul x15, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
mul x31, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
mul x24, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
mul x6, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
mul x3, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
mul x30, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
mul x29, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
mul x18, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
mul x26, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
mul x20, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
mul x1, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x20, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
mul x19, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
mul x25, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
mul x22, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
mul x29, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
mul x30, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x18, 0x5555555555555555 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
mul x19, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x14, 0x5555555555555555 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
mul x5, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x9, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
mul x14, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x27, 0x5555555555555555 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
mul x20, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x31, 0x5555555555555555 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
mul x16, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x1, 0x5555555555555555 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
mul x24, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x25, 0x5555555555555555 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
mul x7, x25, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x18, 0x5555555555555555 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mul x22, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x28, 0x5555555555555555 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
mul x26, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x13, 0x5555555555555555 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
mul x22, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x5555555555555555 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x1, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x22, 0x5555555555555555 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
mul x26, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x26, 0x5555555555555555 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
mul x2, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
mul x8, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x30, 0x5555555555555555 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
mul x11, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x11, 0x5555555555555555 # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
mul x2, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x12, 0x00000000ffffffff # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
mul x18, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x6, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
mul x18, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x5, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
mul x7, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x23, 0x00000000ffffffff # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
mul x27, x23, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x5, 0x00000000ffffffff # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
mul x9, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x10, 0x00000000ffffffff # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
mul x31, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0x00000000ffffffff # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
mul x30, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x21, 0x00000000ffffffff # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
mul x2, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x2, 0x00000000ffffffff # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
mul x9, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x5, 0x00000000ffffffff # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
mul x7, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x00000000ffffffff # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x20, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x12, 0x00000000ffffffff # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
mul x27, x12, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x28, 0x00000000ffffffff # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
mul x5, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x29, 0x00000000ffffffff # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
mul x10, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x8, 0x00000000ffffffff # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
mul x18, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x1, 0x00000000ffffffff # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
mul x12, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x9, 0x00000000fffffffe # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
mul x5, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x16, 0x00000000fffffffe # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
mul x8, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x7, 0x00000000fffffffe # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
mul x6, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x30, 0x00000000fffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
mul x10, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x10, 0x00000000fffffffe # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
mul x20, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
mul x12, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x22, 0x00000000fffffffe # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
mul x18, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x19, 0x00000000fffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
mul x1, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x5, 0x00000000fffffffe # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
mul x10, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x11, 0x00000000fffffffe # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
mul x3, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x2, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x17, 0x00000000fffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
mul x7, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x31, 0x00000000fffffffe # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
mul x1, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x19, 0x00000000fffffffe # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
mul x23, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x29, 0x00000000fffffffe # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
mul x6, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x10, 0x00000000fffffffe # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
mul x22, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
mul x19, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x18, 0x0000000100000000 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
mul x25, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x30, 0x0000000100000000 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
mul x27, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x22, 0x0000000100000000 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
mul x9, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x6, 0x0000000100000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
mul x26, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000100000000 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
mul x11, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
mul x19, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x7, 0x0000000100000000 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
mul x2, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000100000000 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
mul x3, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x23, 0x0000000100000000 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
mul x14, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000100000000 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x27, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x16, 0x0000000100000000 # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
mul x10, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x19, 0x0000000100000000 # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
mul x21, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x18, 0x0000000100000000 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
mul x30, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x16, 0x0000000100000000 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
mul x22, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x18, 0x0000000100000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
mul x21, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x7, 0x0000000100000001 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
mul x11, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x24, 0x0000000100000001 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
mul x25, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x5, 0x0000000100000001 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
mul x27, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x18, 0x0000000100000001 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
mul x26, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x14, 0x0000000100000001 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
mul x26, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000001 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
mul x2, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000100000001 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
mul x1, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x24, 0x0000000100000001 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
mul x16, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000100000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
mul x11, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x30, 0x0000000100000001 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
mul x6, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x0000000100000001 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
mul x20, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x9, 0x0000000100000001 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
mul x1, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x24, 0x0000000100000001 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
mul x17, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x18, 0x0000000100000001 # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
mul x13, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x15, 0x0000000100000001 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
mul x19, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x16, 0x0000000100000001 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
mul x30, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xc7578ba2eb9fb59d # initialize rs1
li x0, 0x9e44a46795802ebe # initialize rs2
mul x2, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xbd28a121fb371cd8 # initialize rs1
li x1, 0x619169d8a474a6d8 # initialize rs2
mul x30, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x2bda2365ed12cc6c # initialize rs1
li x2, 0x983ecea2142d7671 # initialize rs2
mul x24, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x78aad300f60e6b14 # initialize rs1
li x3, 0xd1cb9cd6ae9b78e4 # initialize rs2
mul x6, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9ec828f11a8d3fbb # initialize rs1
li x4, 0x83d9247dac617459 # initialize rs2
mul x17, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb32d89f78543eedb # initialize rs1
li x5, 0xc3a50a2eb5170e22 # initialize rs2
mul x30, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x8dcaa4245708086d # initialize rs1
li x6, 0xc5ea2cfab9fa4f40 # initialize rs2
mul x13, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xbfc7772e2a1c8f60 # initialize rs1
li x7, 0x674b2f421c93862f # initialize rs2
mul x17, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x3d654e537eb8eda7 # initialize rs1
li x8, 0x4091a4933a6875b6 # initialize rs2
mul x26, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xa55421f8211bc68a # initialize rs1
li x9, 0x3e66a2671b30fc34 # initialize rs2
mul x20, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xc056c9c35146909c # initialize rs1
li x10, 0xa0bcba407c794da1 # initialize rs2
mul x18, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x4bd304e4d778c4d8 # initialize rs1
li x11, 0x204f6174b25d1e94 # initialize rs2
mul x6, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x5665bdcfa9d095cb # initialize rs1
li x12, 0xca622eecf4abfbe6 # initialize rs2
mul x18, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xafef1d645e02debf # initialize rs1
li x13, 0xed443b5c3861a0f1 # initialize rs2
mul x29, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xa6814f5918f02df4 # initialize rs1
li x14, 0x4d6efabecb6f3370 # initialize rs2
mul x20, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x395ebd2c1ed38118 # initialize rs1
li x15, 0x636379cb845002fa # initialize rs2
mul x20, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x78b255d0563d8319 # initialize rs1
li x16, 0xf915f51120c7c944 # initialize rs2
mul x26, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x96922924eaabc586 # initialize rs1
li x17, 0x2deb7a93fc2d8288 # initialize rs2
mul x29, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xa3d768ab4f839fa6 # initialize rs1
li x18, 0xa1f2674bec7fcb21 # initialize rs2
mul x27, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xc2eb43ee76abbe6a # initialize rs1
li x19, 0xf079faf0382a80f6 # initialize rs2
mul x20, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x027f0adb2208b351 # initialize rs1
li x20, 0x0fc29554fbb06141 # initialize rs2
mul x14, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x96236735b3440d2f # initialize rs1
li x21, 0x0e4221ade4e0b047 # initialize rs2
mul x22, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x334c4c4ad0c0fd11 # initialize rs1
li x22, 0xa1aec849bc60b96a # initialize rs2
mul x8, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x66a751e10c6c9404 # initialize rs1
li x23, 0x42aefd111b549140 # initialize rs2
mul x22, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x7b013bebde022a6a # initialize rs1
li x24, 0x526797bae6423138 # initialize rs2
mul x22, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x0daeb1b7bbf4c4fe # initialize rs1
li x25, 0xfb93a67f2cf9ddf5 # initialize rs2
mul x23, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xeeb37dc8108db715 # initialize rs1
li x26, 0x74cfcff761daad63 # initialize rs2
mul x21, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x788357ab3a70d8f2 # initialize rs1
li x27, 0x94d8e642c5b3186c # initialize rs2
mul x7, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xdbdf0c0a8f480faf # initialize rs1
li x28, 0xff52e37570d89339 # initialize rs2
mul x30, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xdde4f0fdeceb2087 # initialize rs1
li x29, 0xf322d5b711b89e78 # initialize rs2
mul x23, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x79cf4e2c5a73dd5b # initialize rs1
li x30, 0xaa8866dfa421441b # initialize rs2
mul x28, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xbe28e2e8c7ea1278 # initialize rs1
li x31, 0x62569986a8154fcc # initialize rs2
mul x5, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xf2055550b0bcdac4 # initialize rs1
li x15, 0xd7c63137052a07b2 # initialize rs2
mul x0, x0, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x34abc82e7db2ade0 # initialize rs1
li x8, 0x3f7189535b394e2f # initialize rs2
mul x1, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x8fe49f31ad6f25db # initialize rs1
li x20, 0xd813f4fef35949c2 # initialize rs2
mul x2, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x4764802b2c5d3ed6 # initialize rs1
li x2, 0xeba5951f085e4cea # initialize rs2
mul x3, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x93bc6d575ce27b7b # initialize rs1
li x28, 0x5e297094e0d6a677 # initialize rs2
mul x4, x4, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8148e3d50098dea0 # initialize rs1
li x6, 0x24ac2f502e0469ef # initialize rs2
mul x5, x5, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
li x6, 0xdab4d41f75d92e53 # initialize rs1
li x18, 0xa00df124f64472ad # initialize rs2
mul x6, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xbc9bf9ae7ba17b65 # initialize rs1
li x11, 0xa9f755fa64fe05e9 # initialize rs2
mul x7, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xc65cf21d96fa1508 # initialize rs1
li x14, 0x9b28982ed9fed59a # initialize rs2
mul x8, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x2b2177ca5fe22c9d # initialize rs1
li x11, 0xd2de0ed4bd5fe764 # initialize rs2
mul x9, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xfb984017e0fbbbec # initialize rs1
li x23, 0x0b330fea945673a5 # initialize rs2
mul x10, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x4afcf1f85188b848 # initialize rs1
li x13, 0x7af49cac3c895e12 # initialize rs2
mul x11, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xf4d50f5e527f5757 # initialize rs1
li x18, 0x4a839f3c0d152b91 # initialize rs2
mul x12, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xd15483e4d1ab925d # initialize rs1
li x15, 0x9dc7983e588e50fc # initialize rs2
mul x13, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x905ca0805dde3006 # initialize rs1
li x10, 0xdbcef929c068d54b # initialize rs2
mul x14, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xd368c5a5c02b0854 # initialize rs1
li x12, 0x9e51d0505c4304d1 # initialize rs2
mul x15, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xf86b0bdffddbdf45 # initialize rs1
li x14, 0xdd2dcb9c4e8d8a8e # initialize rs2
mul x16, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xaca1dd9d5ef4d76c # initialize rs1
li x7, 0x00e841e13f8b1c7d # initialize rs2
mul x17, x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x7fbcec078a565ebb # initialize rs1
li x10, 0x053d1f8748d45719 # initialize rs2
mul x18, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xd5f6a34faf858cb0 # initialize rs1
li x25, 0xf97d3613a2b46089 # initialize rs2
mul x19, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xa136fade5c52f76e # initialize rs1
li x21, 0xcb29e2ea6b6d73c9 # initialize rs2
mul x20, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x9a0049c6278c1ad4 # initialize rs1
li x26, 0xca0f6ab320b5a5a2 # initialize rs2
mul x21, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x61a5b1092b302791 # initialize rs1
li x30, 0xafdc76fa11bc6f70 # initialize rs2
mul x22, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xcbee2de98b4f81cf # initialize rs1
li x13, 0x950601d77aa0cce6 # initialize rs2
mul x23, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x79c0656a8e3c2ead # initialize rs1
li x20, 0x9be4e334dbe2a375 # initialize rs2
mul x24, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xda7c1d1cec04d958 # initialize rs1
li x29, 0x9960199f03bc53ec # initialize rs2
mul x25, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x2181df928ea7bed1 # initialize rs1
li x21, 0x21365c02f120dd4f # initialize rs2
mul x26, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xef04271e907d174f # initialize rs1
li x19, 0x019e7ffd5a4c255f # initialize rs2
mul x27, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x87d9b5f339b8febb # initialize rs1
li x21, 0x056092c8b23fda1e # initialize rs2
mul x28, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xaf06ce27c9f6320d # initialize rs1
li x24, 0x5336719456f5b85b # initialize rs2
mul x29, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x3fc0bb73d2899603 # initialize rs1
li x8, 0x72a8c24447917ab6 # initialize rs2
mul x30, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xe05f318339683fd6 # initialize rs1
li x22, 0xfcfbf7cf19c851aa # initialize rs2
mul x31, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x28, 0xea95840f28a81a24 # initialize rs1
li x0, 0x55fb782d3b3e1177 # initialize rs2
mul x0, x28, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x8, 0x10b8f5a98f66a8ae # initialize rs1
li x1, 0x587ebc3020915ec1 # initialize rs2
mul x1, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x24, 0x46ce1c8a8af6f483 # initialize rs1
li x2, 0x9056b1ad197e8b68 # initialize rs2
mul x2, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x7, 0xfecd2f96945f25b5 # initialize rs1
li x3, 0xe5be32d602cfc302 # initialize rs2
mul x3, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x17, 0x1f5b7b49b4d4fefe # initialize rs1
li x4, 0x93e1bc7953a4945d # initialize rs2
mul x4, x17, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0x37b0c1f45936e8f1 # initialize rs1
li x5, 0xd1129137a213c5d4 # initialize rs2
mul x5, x28, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x23, 0x6310a8012459f5c1 # initialize rs1
li x6, 0x687bda4c4cfabace # initialize rs2
mul x6, x23, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x9b85132946007b72 # initialize rs1
li x7, 0x3963d7fa4b0c1d40 # initialize rs2
mul x7, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x19, 0x771e5127c75f69a6 # initialize rs1
li x8, 0x2960da03ed0d0526 # initialize rs2
mul x8, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x30, 0x90576e12c54baca3 # initialize rs1
li x9, 0xc1fa3a1635228600 # initialize rs2
mul x9, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x19, 0x6cf40bd7dd067f50 # initialize rs1
li x10, 0x912da9986dd76d01 # initialize rs2
mul x10, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x22, 0xb3e34e7205ac4a70 # initialize rs1
li x11, 0xd2b1864090ec4da9 # initialize rs2
mul x11, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x7, 0x714c8225d30989b5 # initialize rs1
li x12, 0xb45984bb49f416ae # initialize rs2
mul x12, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x11, 0x865a59cec87710f7 # initialize rs1
li x13, 0xa0065536bc8ce515 # initialize rs2
mul x13, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x21, 0xec70f15aae23b2e5 # initialize rs1
li x14, 0x043713e96deb2c06 # initialize rs2
mul x14, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x10, 0x8732e8f07d7cbcbd # initialize rs1
li x15, 0x65b30d61b11ba027 # initialize rs2
mul x15, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x18, 0x34e63cb09bd1d11a # initialize rs1
li x16, 0x3b09cdb0ab73dc68 # initialize rs2
mul x16, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x24, 0x5f41a1c240fc9f3a # initialize rs1
li x17, 0x71410dac9913b217 # initialize rs2
mul x17, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x8, 0x91c3ef9e38cd61c0 # initialize rs1
li x18, 0x5620f0db5ae02247 # initialize rs2
mul x18, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x15, 0xa66c2f190cc2b8a5 # initialize rs1
li x19, 0x6fb4504035707eb2 # initialize rs2
mul x19, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x21, 0x9c3f87df9aa9d8b0 # initialize rs1
li x20, 0xab15f72b7e7c3fbb # initialize rs2
mul x20, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x5, 0x733b4cb32d610df1 # initialize rs1
li x21, 0xedc5ff6760884282 # initialize rs2
mul x21, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x28, 0x8eb26c79f5fb64c9 # initialize rs1
li x22, 0x729dbcc2f57ef0e3 # initialize rs2
mul x22, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x26, 0x514dc58143ea5832 # initialize rs1
li x23, 0x401dd294c6525dcd # initialize rs2
mul x23, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x2bc4a0ece342cae4 # initialize rs1
li x24, 0x8296b7318fd9a6ac # initialize rs2
mul x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x1, 0x3d3061c1894eb32e # initialize rs1
li x25, 0xc829a8f50863ff06 # initialize rs2
mul x25, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x13, 0xa4255d88e243dcf9 # initialize rs1
li x26, 0xee79de95f770cb8b # initialize rs2
mul x26, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x26, 0x4823910695f6afa9 # initialize rs1
li x27, 0x4d633794971a0512 # initialize rs2
mul x27, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x23, 0xff5a7903132b3d34 # initialize rs1
li x28, 0xf0c24d94ee9cdb5a # initialize rs2
mul x28, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x20, 0xa26dee6995d3acf4 # initialize rs1
li x29, 0x518e16dd0b17b440 # initialize rs2
mul x29, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x10, 0x9b66cab85b893847 # initialize rs1
li x30, 0xd1e9536cb52e39ba # initialize rs2
mul x30, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x29, 0xaf0719c1f8e19b66 # initialize rs1
li x31, 0xc838b736699e76ee # initialize rs2
mul x31, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x08b1eaf51da0b2b3 # initialize rs1
li x0, 0xd7eca822dfae6fdc # initialize rs2
mul x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x4cfa66f1f1696b7b # initialize rs1
li x1, 0xadaa7e7c5084f583 # initialize rs2
mul x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x88e3aa086a582da8 # initialize rs1
li x2, 0x80445eef7eacd149 # initialize rs2
mul x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x1a1819d88bda0724 # initialize rs1
li x3, 0x697645dc565cb5dc # initialize rs2
mul x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x394fcd70b6759ea6 # initialize rs1
li x4, 0x1e6a62305c8685b7 # initialize rs2
mul x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xae383bc262b78838 # initialize rs1
li x5, 0xf46f1b454c2bcb47 # initialize rs2
mul x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x137ee89bc6b042d2 # initialize rs1
li x6, 0xd02419044bb2fd95 # initialize rs2
mul x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb37f742cfbe3c5fa # initialize rs1
li x7, 0x591d39bc853f8204 # initialize rs2
mul x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x7c9022273634d611 # initialize rs1
li x8, 0x2cbf1728c3c9f74d # initialize rs2
mul x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x127aea31ad4c2ee4 # initialize rs1
li x9, 0x6c0d1c89b6c3ce07 # initialize rs2
mul x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xae1a30ac7d920185 # initialize rs1
li x10, 0x2223b212cd213b76 # initialize rs2
mul x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xc30fb8dfe9b5f573 # initialize rs1
li x11, 0xf0a1ecf1f517effd # initialize rs2
mul x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x7be19b6dfd16b80d # initialize rs1
li x12, 0x72216eb25b0eafb0 # initialize rs2
mul x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x9e00ac487c713942 # initialize rs1
li x13, 0x0280d86eb657e9e3 # initialize rs2
mul x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xd73fbb925bec829e # initialize rs1
li x14, 0x392b7c070871dcdb # initialize rs2
mul x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xc87e5393672e558e # initialize rs1
li x15, 0x4fe4f8159a766b43 # initialize rs2
mul x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x936b95495989754e # initialize rs1
li x16, 0xbd170cafffc9281e # initialize rs2
mul x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xe764aeddb7e86dee # initialize rs1
li x17, 0x81a4c1f538677f68 # initialize rs2
mul x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x1304991ce640134a # initialize rs1
li x18, 0x65e1bab87175a1ab # initialize rs2
mul x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x766efa65c446bdd9 # initialize rs1
li x19, 0x71d958546288cfe5 # initialize rs2
mul x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x5817e01c49b44da3 # initialize rs1
li x20, 0xb8bb3be6a7d53ad6 # initialize rs2
mul x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xbccb2c920ff2ed19 # initialize rs1
li x21, 0xfe4e094a007f8b98 # initialize rs2
mul x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x96ee095ef0c0fb28 # initialize rs1
li x22, 0x8b677c5988914e30 # initialize rs2
mul x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xb5bef4ee31661aa6 # initialize rs1
li x23, 0x44add840d0451398 # initialize rs2
mul x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xbc3dc37f8514c008 # initialize rs1
li x24, 0x8646f8f4baa3d450 # initialize rs2
mul x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x4a7ae247289027ce # initialize rs1
li x25, 0x6ddb2c75f2feade2 # initialize rs2
mul x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x19a5b2608a1cff40 # initialize rs1
li x26, 0x0195fc96cc96fe56 # initialize rs2
mul x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xca9b7cdc225999dd # initialize rs1
li x27, 0x776abede07205a29 # initialize rs2
mul x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x1203d2ea910cb368 # initialize rs1
li x28, 0xfdd6546e727b6105 # initialize rs2
mul x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x7d0e50df9c5c2373 # initialize rs1
li x29, 0x11dc86b56ad189b4 # initialize rs2
mul x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x44d15660c1e10ccd # initialize rs1
li x30, 0x5fad2b23e28f3329 # initialize rs2
mul x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x591fc01d59bd20f3 # initialize rs1
li x31, 0x006fca5e40960cbd # initialize rs2
mul x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x10, x21 # perform first operation
mul x18, x22, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x13, x17 # perform first operation
mul x29, x18, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x15, x10 # perform first operation
mul x20, x12, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x12, x25 # perform first operation
mul x19, x8, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x28, x22 # perform first operation
mul x1, x19, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x28, x22 # perform first operation
mul x28, x9, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x26, x30, x18 # perform first operation
mul x26, x7, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x25, x29, x11 # perform first operation
mul x25, x10, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x29, x12, x16 # perform first operation
mul x29, x22, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x2, x10, x26 # perform first operation
mul x10, x15, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x24, x17, x19 # perform first operation
mul x19, x11, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x5, x2, x16 # perform first operation
mul x18, x9, x8 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-remuw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xfa6dd540bcdd4c77 # initialize rs1
li x29, 0xfb243328f0475ac5 # initialize rs2
remuw x21, x0, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xb8e892532e4c6f0a # initialize rs1
li x2, 0x83d38c270924a5b5 # initialize rs2
remuw x25, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xbf3e7563e13d76de # initialize rs1
li x13, 0x41fd1ea44c369c9b # initialize rs2
remuw x23, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x781295111d8ce88b # initialize rs1
li x26, 0x524bddc8624e0c8b # initialize rs2
remuw x29, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xec333af48483e900 # initialize rs1
li x1, 0x3fe883657d7f62e5 # initialize rs2
remuw x20, x4, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xaabb15c7051c2415 # initialize rs1
li x14, 0x44fe0024cb9a1957 # initialize rs2
remuw x23, x5, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x1d87566721cfe60c # initialize rs1
li x11, 0xf1cfa2df0b7f64a4 # initialize rs2
remuw x5, x6, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x5, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x67072b58942c7a1e # initialize rs1
li x25, 0xe61c1a734b2567da # initialize rs2
remuw x15, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x79b59c6a715e81e9 # initialize rs1
li x31, 0x89cb316eaf26a63f # initialize rs2
remuw x14, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x6cfb6e21867e5a62 # initialize rs1
li x20, 0x1f2c1d54d020a944 # initialize rs2
remuw x11, x9, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x73e5af6693174627 # initialize rs1
li x23, 0x1246817bdb4d42d5 # initialize rs2
remuw x17, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x48215ff5d8c2a7c0 # initialize rs1
li x12, 0xc661fc99595ac6d6 # initialize rs2
remuw x21, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x3d9064bd37291021 # initialize rs1
li x13, 0xf1739fabc79fcee0 # initialize rs2
remuw x10, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x58043745d9d342b3 # initialize rs1
li x20, 0x9a18340a2613cf65 # initialize rs2
remuw x21, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xe295f45f71c711ca # initialize rs1
li x31, 0xbc2df36bf8a9499d # initialize rs2
remuw x1, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xd24f831b7f91daea # initialize rs1
li x9, 0x2807a7805eec3042 # initialize rs2
remuw x29, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xccc0128ee64f8a34 # initialize rs1
li x26, 0x258966376449f9b2 # initialize rs2
remuw x3, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x14abb13fc30ab221 # initialize rs1
li x20, 0x10065acbe232f77e # initialize rs2
remuw x30, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xbff6f78ee3d4b87f # initialize rs1
li x23, 0x9fa88419f8937080 # initialize rs2
remuw x20, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xc3721eabec94ebbc # initialize rs1
li x21, 0xd0a8b915a305f1bb # initialize rs2
remuw x26, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xa4ed05b243c9474f # initialize rs1
li x22, 0x82ade4a51244fd4b # initialize rs2
remuw x30, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x42542e89dafc8b69 # initialize rs1
li x25, 0x09b45df72f4df4d7 # initialize rs2
remuw x30, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x611e994c5fc4656a # initialize rs1
li x19, 0x9810613e4b09fe0e # initialize rs2
remuw x25, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x7019d64994ec90e7 # initialize rs1
li x13, 0x4b1826ed5f155dbe # initialize rs2
remuw x8, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xc4945df3e2391a61 # initialize rs1
li x17, 0x9436f2b912c0f94b # initialize rs2
remuw x9, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xc3d989e6d13f28b5 # initialize rs1
li x6, 0x34dd7df3bb6ebae4 # initialize rs2
remuw x20, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x4611a309e04191db # initialize rs1
li x13, 0xc68d6e9b01144d06 # initialize rs2
remuw x29, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x59d326ad519a6dc3 # initialize rs1
li x6, 0xaee8a638bd5af051 # initialize rs2
remuw x16, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x9cd01e406a8bf50f # initialize rs1
li x19, 0x17664b6a3563e544 # initialize rs2
remuw x10, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xc3d61bb697e98c85 # initialize rs1
li x31, 0x55af8fc117f26df0 # initialize rs2
remuw x16, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x1326bf7aeb07ee24 # initialize rs1
li x31, 0x0fc676f599099ceb # initialize rs2
remuw x25, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x89624dbc50fc76af # initialize rs1
li x14, 0xab9d6687849eff01 # initialize rs2
remuw x28, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x28, 0x70eaa7255a50d815 # initialize rs1
li x0, 0x756aaf280fe95232 # initialize rs2
remuw x14, x28, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x14, 0xb803cde587b6b7e9 # initialize rs1
li x1, 0x03e21e17f8af96c5 # initialize rs2
remuw x13, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x28, 0x7267c2e877a7a6ee # initialize rs1
li x2, 0x34e2ce6a90effedc # initialize rs2
remuw x27, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x5, 0xf6cc8ddcc20dfab6 # initialize rs1
li x3, 0xdd026c4a530d4a2e # initialize rs2
remuw x11, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x95e1d7064579b5dc # initialize rs1
li x4, 0x32c4f68717a499c1 # initialize rs2
remuw x17, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x27, 0x23726b0b3b86385d # initialize rs1
li x5, 0x63dc5fed244189f7 # initialize rs2
remuw x4, x27, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0x62bab80883a23b00 # initialize rs1
li x6, 0x640ab9b988549eea # initialize rs2
remuw x26, x24, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x26, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x19, 0x6435a1dbc3641809 # initialize rs1
li x7, 0xfbd4081db240d91d # initialize rs2
remuw x27, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x11, 0x4e7dc39b4e8d391a # initialize rs1
li x8, 0xdd0615e965af24df # initialize rs2
remuw x14, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x28, 0x34ecfa2562c52a11 # initialize rs1
li x9, 0xc49f5f0eabe5c55e # initialize rs2
remuw x3, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x15, 0x5982062c8d17021f # initialize rs1
li x10, 0x7695f8e24b1040e6 # initialize rs2
remuw x22, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x22, 0x0bde6495df14aacb # initialize rs1
li x11, 0xa2d6b6ca1223e958 # initialize rs2
remuw x23, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x5, 0xb7af62d7bd962619 # initialize rs1
li x12, 0x5f84e4c51c0b3e89 # initialize rs2
remuw x18, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x29, 0x6153f12ec5a1ce23 # initialize rs1
li x13, 0x3ed50ee08250a42a # initialize rs2
remuw x22, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x15, 0x509f9c7b4c2b4f67 # initialize rs1
li x14, 0x2a41ecd59818a84c # initialize rs2
remuw x8, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x21, 0x0680acaa2d8c35ae # initialize rs1
li x15, 0xe55140c6d0c4d1d4 # initialize rs2
remuw x6, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x7, 0xb3ed677cf43f7704 # initialize rs1
li x16, 0x731d8062870c99d5 # initialize rs2
remuw x28, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x28, 0x076389c43bed0e3e # initialize rs1
li x17, 0x554cc311bcd2e8e1 # initialize rs2
remuw x8, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x13, 0x900ca3dae7e64c69 # initialize rs1
li x18, 0xacd1c9efbeb774cc # initialize rs2
remuw x26, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x7, 0x5d1a7e85ee499ebf # initialize rs1
li x19, 0x7b8e80a842eaf777 # initialize rs2
remuw x15, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x31, 0xcfa97ea9c022b438 # initialize rs1
li x20, 0xd224b953642b796c # initialize rs2
remuw x26, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x29, 0x98ce99593e4d662b # initialize rs1
li x21, 0x337b9deb044b40f9 # initialize rs2
remuw x30, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x23, 0xe9c35030dc08e50c # initialize rs1
li x22, 0x2c8cafe4a57f5357 # initialize rs2
remuw x1, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x3, 0xcb682f1be34b4430 # initialize rs1
li x23, 0xca44c752b4df81ec # initialize rs2
remuw x28, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x20, 0x7622546bc8dd470e # initialize rs1
li x24, 0x517a17dfdfcbdeee # initialize rs2
remuw x19, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x6, 0x8d167b3390020083 # initialize rs1
li x25, 0x992be784e0d7117e # initialize rs2
remuw x15, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x28, 0xb146cff7bf25248d # initialize rs1
li x26, 0xb81c7960edf82d33 # initialize rs2
remuw x24, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x25, 0x4aa8e1c08224d54e # initialize rs1
li x27, 0xa3fccc13c9deff24 # initialize rs2
remuw x14, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x21, 0x7993ae2a17344a9a # initialize rs1
li x28, 0xe4fca0f4e2fbe2d5 # initialize rs2
remuw x10, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x12, 0xc6e65767352e0a0c # initialize rs1
li x29, 0xaec5f7732db883a5 # initialize rs2
remuw x25, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x22, 0xd50ad8a7f9ab22cc # initialize rs1
li x30, 0x9daf3069980e9625 # initialize rs2
remuw x1, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x1, 0x13df349263a38172 # initialize rs1
li x31, 0x5d25a62e33d86e06 # initialize rs2
remuw x16, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 504)

# Testcase cp_rd (Test destination rd = x0)
li x2, 0x18632649100eb1ed # initialize rs1
li x24, 0x88b137d4d1df1505 # initialize rs2
remuw x0, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x10, 0xdb7ea86a1b9d76df # initialize rs1
li x14, 0x7170da05e708f08d # initialize rs2
remuw x1, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x7, 0x35cc9f47518b70db # initialize rs1
li x22, 0xff98fa9531ce95f2 # initialize rs2
remuw x2, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x31, 0x5701769e51765186 # initialize rs1
li x26, 0xd5e2d60ec76e9cea # initialize rs2
remuw x3, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x21, 0x2def6faf392cec4a # initialize rs1
li x10, 0x645e45dd6d955d69 # initialize rs2
remuw x4, x21, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x13, 0xa13cf5c46b64ba75 # initialize rs1
li x7, 0x0d6459aa38cd248a # initialize rs2
remuw x5, x13, x7 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x75c5c0abc1e3a985 # initialize rs1
li x21, 0x844c52db56ed5e59 # initialize rs2
remuw x6, x4, x21 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x62c3d4f38165ef4e # initialize rs1
li x8, 0x639a3353688abaf4 # initialize rs2
remuw x7, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x18, 0x8745e8670c57fe43 # initialize rs1
li x24, 0xfc38a6f141d0c056 # initialize rs2
remuw x8, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x15, 0x2bae3fadd72f87ae # initialize rs1
li x16, 0x6febfaf8ee4d28b2 # initialize rs2
remuw x9, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x8, 0xb634288ff18564b4 # initialize rs1
li x17, 0xdda620632390a32d # initialize rs2
remuw x10, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x19, 0xfebfc2165b876402 # initialize rs1
li x23, 0xd2c3886b87401568 # initialize rs2
remuw x11, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x25, 0x6722270d86e781fe # initialize rs1
li x19, 0x1ec6aa0464cc2eca # initialize rs2
remuw x12, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x16, 0x467d466b821b1b99 # initialize rs1
li x30, 0x202df764791cc649 # initialize rs2
remuw x13, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x13, 0x9ff58548c52ff1bc # initialize rs1
li x22, 0x7533adcd2b0ccb1a # initialize rs2
remuw x14, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x5, 0xd30d29d020900215 # initialize rs1
li x23, 0xc784b252917032a6 # initialize rs2
remuw x15, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x11, 0x00c8012517dacf23 # initialize rs1
li x14, 0xfeed8942064c35c3 # initialize rs2
remuw x16, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x17, 0x6a62cceba01898f4 # initialize rs1
li x28, 0xfbd7e3ef45b8d733 # initialize rs2
remuw x17, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x16, 0x12efa2452ffce1f8 # initialize rs1
li x21, 0x2b1bb544b241ab70 # initialize rs2
remuw x18, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x22, 0x7fc41bb07fcd427b # initialize rs1
li x28, 0x103c890b591a60a5 # initialize rs2
remuw x19, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x5, 0x965f007a6e25f226 # initialize rs1
li x7, 0x356a994ce0978efa # initialize rs2
remuw x20, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x20, 0xb7c1ebe49b99c557 # initialize rs1
li x26, 0xf78468905315dd9f # initialize rs2
remuw x21, x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x22, 0xab1e6c117c039c1d # initialize rs1
li x20, 0x5b3c84d2b08d05e1 # initialize rs2
remuw x22, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x1, 0xd2ca6dc3c8377642 # initialize rs1
li x6, 0x57d5dad172097e45 # initialize rs2
remuw x23, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x20, 0xdff6d7be57827912 # initialize rs1
li x6, 0xf4487afcb355804e # initialize rs2
remuw x24, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x19, 0x06b1d8eb83a5d9c5 # initialize rs1
li x23, 0x22a877074ccb961c # initialize rs2
remuw x25, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x24, 0x490e20d10378c80b # initialize rs1
li x20, 0x717d5b9fd268f116 # initialize rs2
remuw x26, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x19, 0x5899bee8a961d5d0 # initialize rs1
li x8, 0xf74a32ba4d9f3318 # initialize rs2
remuw x27, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x29, 0xf91ebe0a25f9bc4f # initialize rs1
li x31, 0x6723e9ceae9fbd83 # initialize rs2
remuw x28, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x1, 0x36c4e8fb31eb8b6c # initialize rs1
li x10, 0x4c237b9490cf8d50 # initialize rs2
remuw x29, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x22, 0x7dec8e2d986af6c5 # initialize rs1
li x28, 0x29592ac117fe59b2 # initialize rs2
remuw x30, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x18, 0x1bcd26523a5dc4fa # initialize rs1
li x14, 0x98fe270a7cf14471 # initialize rs2
remuw x31, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x6, 0x0000000000000000 # initialize rs1
li x9, 0x8f57d9a23c4d3d68 # initialize rs2
remuw x12, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x17, 0x0000000000000001 # initialize rs1
li x22, 0xe4fbc18e0a450a84 # initialize rs2
remuw x29, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x8, 0x0000000000000002 # initialize rs1
li x13, 0x6b10491830e0d478 # initialize rs2
remuw x23, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x31, 0x8000000000000000 # initialize rs1
li x14, 0x34d2a805362359ee # initialize rs2
remuw x26, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x13, 0x8000000000000001 # initialize rs1
li x21, 0x37a18c1a1bc73fe8 # initialize rs2
remuw x18, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x25, 0x7fffffffffffffff # initialize rs1
li x27, 0x7db4535dddfab65e # initialize rs2
remuw x17, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x1, 0x7ffffffffffffffe # initialize rs1
li x20, 0xf70fae2a7989a628 # initialize rs2
remuw x9, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x25, 0xffffffffffffffff # initialize rs1
li x3, 0xb4bffe776a4189df # initialize rs2
remuw x28, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x5, 0xfffffffffffffffe # initialize rs1
li x14, 0xdf681d4c7b788dd1 # initialize rs2
remuw x7, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x750ac88b0800b71b # initialize rs2
remuw x22, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x1a9264d3489c5b5c # initialize rs2
remuw x25, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
li x26, 0xd1ca42f4e6bca46a # initialize rs2
remuw x13, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x11, 0x3c3333a42f500576 # initialize rs2
remuw x26, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x31, 0x00000000fffffffe # initialize rs1
li x25, 0x8ee40f0c1b51d1fe # initialize rs2
remuw x16, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x2, 0x0000000100000000 # initialize rs1
li x3, 0x2d1ac97dd71fbab0 # initialize rs2
remuw x29, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x10, 0x0000000100000001 # initialize rs1
li x21, 0x2033bcfcc1e4e4bf # initialize rs2
remuw x5, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x1, 0xa2684aaa1161ccda # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
remuw x2, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x29, 0xce35b3b80aa8eb1d # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
remuw x25, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x27, 0x84dfa4678ac56e16 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
remuw x12, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x24, 0x0aefcb3c5f6cc824 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
remuw x7, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x23, 0xdcb6edbac8a69ab8 # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
remuw x14, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x31, 0xc8335124380a0841 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
remuw x24, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x7, 0xff7a571fe7461c4e # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
remuw x21, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x1, 0x64abc59a27727f8e # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
remuw x25, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x7, 0xa1762f738c462232 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
remuw x20, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x22, 0x8538b9dd22ce8b9b # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
remuw x17, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x7, 0x38392cf4966e9e3f # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x20, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x25, 0x2d200d1c8520e960 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
remuw x22, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x2, 0x45026ac7267664f6 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
remuw x19, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x12, 0x35cc7837b5826080 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
remuw x2, x12, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x25, 0x903c1f1222ebc69d # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
remuw x28, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x16, 0x4c99674f7ad26864 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
remuw x14, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x30, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
remuw x31, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x12, 0x0000000000000000 # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
remuw x19, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x1, 0x0000000000000000 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
remuw x28, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x12, 0x0000000000000000 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
remuw x23, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x20, 0x0000000000000000 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
remuw x12, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000000 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
remuw x24, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
remuw x11, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x12, 0x0000000000000000 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
remuw x3, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x23, 0x0000000000000000 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
remuw x1, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000000000000 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
remuw x15, x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x0000000000000000 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x7, x23, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x6, 0x0000000000000000 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
remuw x12, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x28, 0x0000000000000000 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
remuw x9, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x24, 0x0000000000000000 # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
remuw x14, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x19, 0x0000000000000000 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
remuw x25, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x30, 0x0000000000000000 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
remuw x18, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x3, 0x0000000000000001 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
remuw x14, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x15, 0x0000000000000001 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
remuw x27, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x19, 0x0000000000000001 # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
remuw x1, x19, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x29, 0x0000000000000001 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
remuw x24, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x25, 0x0000000000000001 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
remuw x24, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x10, 0x0000000000000001 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
remuw x7, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x18, 0x0000000000000001 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
remuw x21, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x17, 0x0000000000000001 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
remuw x27, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000000000001 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
remuw x17, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x31, 0x0000000000000001 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remuw x8, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000000000001 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x29, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x22, 0x0000000000000001 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
remuw x3, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
remuw x7, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x20, 0x0000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
remuw x14, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x26, 0x0000000000000001 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
remuw x16, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x13, 0x0000000000000001 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
remuw x11, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x23, 0x0000000000000002 # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
remuw x27, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x26, 0x0000000000000002 # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
remuw x20, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x17, 0x0000000000000002 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
remuw x16, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x15, 0x0000000000000002 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
remuw x3, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x2, 0x0000000000000002 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
remuw x31, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x28, 0x0000000000000002 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
remuw x12, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000000000002 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
remuw x13, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x2, 0x0000000000000002 # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
remuw x15, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x20, 0x0000000000000002 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
remuw x31, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x28, 0x0000000000000002 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
remuw x19, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x0000000000000002 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x1, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x11, 0x0000000000000002 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
remuw x17, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x24, 0x0000000000000002 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
remuw x26, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x20, 0x0000000000000002 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
remuw x13, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x20, 0x0000000000000002 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
remuw x21, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x19, 0x0000000000000002 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
remuw x31, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x2, 0x8000000000000000 # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
remuw x18, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x26, 0x8000000000000000 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
remuw x13, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x8, 0x8000000000000000 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
remuw x27, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
remuw x18, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x24, 0x8000000000000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
remuw x1, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x27, 0x8000000000000000 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
remuw x10, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x19, 0x8000000000000000 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
remuw x30, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x13, 0x8000000000000000 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
remuw x26, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x8, 0x8000000000000000 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
remuw x22, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x25, 0x8000000000000000 # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
remuw x3, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x8000000000000000 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x12, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x28, 0x8000000000000000 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
remuw x13, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x22, 0x8000000000000000 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
remuw x30, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x8, 0x8000000000000000 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
remuw x1, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x20, 0x8000000000000000 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
remuw x27, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x11, 0x8000000000000000 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
remuw x9, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x1, 0x8000000000000001 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
remuw x16, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x8, 0x8000000000000001 # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
remuw x25, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x26, 0x8000000000000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
remuw x11, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x17, 0x8000000000000001 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
remuw x13, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x16, 0x8000000000000001 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
remuw x12, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x18, 0x8000000000000001 # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
remuw x8, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x12, 0x8000000000000001 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
remuw x13, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x28, 0x8000000000000001 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
remuw x21, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x1, 0x8000000000000001 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
remuw x21, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x9, 0x8000000000000001 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
remuw x18, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x8000000000000001 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x30, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x14, 0x8000000000000001 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
remuw x23, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x25, 0x8000000000000001 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
remuw x28, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x19, 0x8000000000000001 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
remuw x3, x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x16, 0x8000000000000001 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
remuw x7, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x2, 0x8000000000000001 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
remuw x30, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x13, 0x7fffffffffffffff # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
remuw x3, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x23, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
remuw x14, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x15, 0x7fffffffffffffff # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
remuw x28, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x30, 0x7fffffffffffffff # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
remuw x7, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x24, 0x7fffffffffffffff # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
remuw x7, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x29, 0x7fffffffffffffff # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
remuw x24, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x22, 0x7fffffffffffffff # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
remuw x13, x22, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
remuw x3, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x25, 0x7fffffffffffffff # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
remuw x5, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x28, 0x7fffffffffffffff # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
remuw x19, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x7fffffffffffffff # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x8, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x8, 0x7fffffffffffffff # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
remuw x23, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x1, 0x7fffffffffffffff # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remuw x27, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x21, 0x7fffffffffffffff # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
remuw x6, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x3, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
remuw x11, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x1, 0x7fffffffffffffff # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
remuw x29, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x19, 0x7ffffffffffffffe # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
remuw x11, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x14, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
remuw x2, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x10, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
remuw x28, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x28, 0x7ffffffffffffffe # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
remuw x9, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x14, 0x7ffffffffffffffe # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
remuw x5, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x25, 0x7ffffffffffffffe # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
remuw x10, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x18, 0x7ffffffffffffffe # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
remuw x11, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x5, 0x7ffffffffffffffe # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
remuw x20, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x22, 0x7ffffffffffffffe # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
remuw x30, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x23, 0x7ffffffffffffffe # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
remuw x2, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x7ffffffffffffffe # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x26, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x1, 0x7ffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
remuw x22, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
remuw x10, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
remuw x15, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x6, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
remuw x27, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x25, 0x7ffffffffffffffe # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
remuw x13, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x14, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
remuw x28, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x29, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
remuw x10, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x25, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
remuw x19, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x13, 0xffffffffffffffff # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
remuw x14, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x2, 0xffffffffffffffff # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
remuw x26, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x10, 0xffffffffffffffff # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
remuw x7, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
remuw x28, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x16, 0xffffffffffffffff # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
remuw x1, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x10, 0xffffffffffffffff # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
remuw x26, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x24, 0xffffffffffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remuw x29, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0xffffffffffffffff # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x20, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x22, 0xffffffffffffffff # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
remuw x15, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x26, 0xffffffffffffffff # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
remuw x1, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
remuw x28, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x31, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
remuw x29, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x21, 0xffffffffffffffff # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
remuw x1, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x21, 0xfffffffffffffffe # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
remuw x13, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x29, 0xfffffffffffffffe # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
remuw x6, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x2, 0xfffffffffffffffe # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remuw x24, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x1, 0xfffffffffffffffe # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
remuw x2, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x7, 0xfffffffffffffffe # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
remuw x16, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x22, 0xfffffffffffffffe # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
remuw x2, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x19, 0xfffffffffffffffe # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
remuw x14, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x31, 0xfffffffffffffffe # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
remuw x5, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
remuw x8, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x20, 0xfffffffffffffffe # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remuw x1, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0xfffffffffffffffe # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x2, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x26, 0xfffffffffffffffe # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
remuw x3, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
remuw x3, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
remuw x26, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x8, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
remuw x27, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x25, 0xfffffffffffffffe # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
remuw x29, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
remuw x12, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
remuw x18, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
remuw x6, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
remuw x8, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
remuw x17, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
remuw x3, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
remuw x2, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
remuw x23, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
remuw x19, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
remuw x21, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x22, x3, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
remuw x5, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
remuw x23, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
remuw x23, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
remuw x9, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
remuw x23, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
remuw x28, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
remuw x20, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
remuw x12, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
remuw x28, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
remuw x26, x12, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
remuw x14, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
remuw x11, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
remuw x29, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
remuw x1, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
remuw x31, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x8, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
remuw x15, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
remuw x14, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
remuw x14, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
remuw x8, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
remuw x17, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x9, 0x5555555555555555 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
remuw x11, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x20, 0x5555555555555555 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
remuw x28, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x22, 0x5555555555555555 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
remuw x3, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x2, 0x5555555555555555 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
remuw x29, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x10, 0x5555555555555555 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
remuw x16, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
remuw x23, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x15, 0x5555555555555555 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
remuw x21, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x26, 0x5555555555555555 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
remuw x29, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x20, 0x5555555555555555 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
remuw x10, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x26, 0x5555555555555555 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
remuw x6, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x5555555555555555 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x11, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
remuw x24, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x22, 0x5555555555555555 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
remuw x12, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x16, 0x5555555555555555 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
remuw x15, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x24, 0x5555555555555555 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
remuw x14, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x1, 0x5555555555555555 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
remuw x17, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x23, 0x00000000ffffffff # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
remuw x24, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x20, 0x00000000ffffffff # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
remuw x29, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x9, 0x00000000ffffffff # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
remuw x8, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x8, 0x00000000ffffffff # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
remuw x19, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x20, 0x00000000ffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
remuw x3, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
remuw x12, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x15, 0x00000000ffffffff # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
remuw x13, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x23, 0x00000000ffffffff # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
remuw x25, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x19, 0x00000000ffffffff # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
remuw x28, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x24, 0x00000000ffffffff # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
remuw x15, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x00000000ffffffff # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x31, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x2, 0x00000000ffffffff # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
remuw x14, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x14, 0x00000000ffffffff # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
remuw x25, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x29, 0x00000000ffffffff # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
remuw x15, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x18, 0x00000000ffffffff # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
remuw x26, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x28, 0x00000000ffffffff # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
remuw x3, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x21, 0x00000000fffffffe # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
remuw x3, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x27, 0x00000000fffffffe # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
remuw x22, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x6, 0x00000000fffffffe # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
remuw x12, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x14, 0x00000000fffffffe # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
remuw x9, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x25, 0x00000000fffffffe # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
remuw x5, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
remuw x9, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x16, 0x00000000fffffffe # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
remuw x19, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
remuw x21, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x25, 0x00000000fffffffe # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
remuw x28, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x30, 0x00000000fffffffe # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
remuw x20, x30, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x15, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x27, 0x00000000fffffffe # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
remuw x10, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x6, 0x00000000fffffffe # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
remuw x23, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x28, 0x00000000fffffffe # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
remuw x30, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x10, 0x00000000fffffffe # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
remuw x29, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x2, 0x00000000fffffffe # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
remuw x11, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x23, 0x0000000100000000 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
remuw x25, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x15, 0x0000000100000000 # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
remuw x1, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x13, 0x0000000100000000 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
remuw x20, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x1, 0x0000000100000000 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
remuw x13, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x14, 0x0000000100000000 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
remuw x18, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x9, 0x0000000100000000 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
remuw x29, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x31, 0x0000000100000000 # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
remuw x29, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x25, 0x0000000100000000 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
remuw x14, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000100000000 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
remuw x10, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x8, 0x0000000100000000 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
remuw x25, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000100000000 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x25, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x19, 0x0000000100000000 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
remuw x6, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x26, 0x0000000100000000 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
remuw x16, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x5, 0x0000000100000000 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
remuw x13, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x5, 0x0000000100000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
remuw x24, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x27, 0x0000000100000000 # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
remuw x2, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x6, 0x0000000100000001 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
remuw x23, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x14, 0x0000000100000001 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
remuw x16, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x3, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
remuw x28, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x19, 0x0000000100000001 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
remuw x25, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x20, 0x0000000100000001 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
remuw x10, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x28, 0x0000000100000001 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
remuw x14, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x20, 0x0000000100000001 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
remuw x13, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x13, 0x0000000100000001 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
remuw x1, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000100000001 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
remuw x20, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x22, 0x0000000100000001 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
remuw x27, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x0000000100000001 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
remuw x18, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x27, 0x0000000100000001 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
remuw x25, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x27, 0x0000000100000001 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
remuw x29, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x22, 0x0000000100000001 # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
remuw x29, x22, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x27, 0x0000000100000001 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
remuw x1, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x3, 0x0000000100000001 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
remuw x7, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x262f86007d10ce13 # initialize rs1
li x0, 0x13b73c101246e062 # initialize rs2
remuw x18, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x6e4df81d7bb8de37 # initialize rs1
li x1, 0x15d0e02bebfb7c70 # initialize rs2
remuw x18, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xb4b152824fd6efb5 # initialize rs1
li x2, 0x9af5ae4d0921173d # initialize rs2
remuw x10, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x6a0cb51d4c02a6ed # initialize rs1
li x3, 0x62ab24706e424746 # initialize rs2
remuw x16, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x08d94e1e18e19583 # initialize rs1
li x4, 0x96d0368c1ec12ba9 # initialize rs2
remuw x27, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe61025f77c6c54f3 # initialize rs1
li x5, 0x292929f3ae627ad6 # initialize rs2
remuw x1, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xdf4a433310e80c99 # initialize rs1
li x6, 0x6a7833f9b9674802 # initialize rs2
remuw x20, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x20, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x578b0eb02e38937d # initialize rs1
li x7, 0x66113ec01281e1b6 # initialize rs2
remuw x2, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x25b984364b5d1a08 # initialize rs1
li x8, 0x71d4d6d2ab9a3838 # initialize rs2
remuw x5, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x87d1b166fce55cd0 # initialize rs1
li x9, 0xf780397d45cf64dd # initialize rs2
remuw x31, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xa8cb89f52ddb79a3 # initialize rs1
li x10, 0xa81b20ebfb2d32c5 # initialize rs2
remuw x30, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xe98ee28c92db0801 # initialize rs1
li x11, 0xc95d178ee2b617c0 # initialize rs2
remuw x16, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x2b5c76a1b66d3196 # initialize rs1
li x12, 0xe1d04a37e65d53a5 # initialize rs2
remuw x8, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xbe8efc2f116e4c01 # initialize rs1
li x13, 0xef1e5579ede3758a # initialize rs2
remuw x6, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xc9ab50d867d7c859 # initialize rs1
li x14, 0xa9472b32021423c0 # initialize rs2
remuw x17, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xc065e5a2745addaa # initialize rs1
li x15, 0x887b51b4594cb035 # initialize rs2
remuw x16, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x9def7cf30a7e114b # initialize rs1
li x16, 0xb350e1820d20e892 # initialize rs2
remuw x14, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x13190f2596f68a40 # initialize rs1
li x17, 0x39d9a8641e4140fb # initialize rs2
remuw x2, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x3c9e73540b1274ca # initialize rs1
li x18, 0xb7822dc77835cf34 # initialize rs2
remuw x9, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xd7fe3a2a1678ee66 # initialize rs1
li x19, 0x26325b2e1544271c # initialize rs2
remuw x6, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x39d8fffe38cd4699 # initialize rs1
li x20, 0xe424072acc41de2d # initialize rs2
remuw x29, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x5800a9914feb6c21 # initialize rs1
li x21, 0xe6c36feac6092ec4 # initialize rs2
remuw x28, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x96c9affa83d81fb3 # initialize rs1
li x22, 0x4dda1421224b8be9 # initialize rs2
remuw x19, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x5acf270bf48a8007 # initialize rs1
li x23, 0xeca655a91d3ee5f1 # initialize rs2
remuw x24, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x0fc6ab500ed66710 # initialize rs1
li x24, 0x5b8969ba117b8ab1 # initialize rs2
remuw x20, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xabacf1b25f25718a # initialize rs1
li x25, 0x123f60e6fc2f2cbc # initialize rs2
remuw x1, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x9d35f5351fbc99a3 # initialize rs1
li x26, 0x99b29428407f1590 # initialize rs2
remuw x12, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x03944f1b27cc4e5b # initialize rs1
li x27, 0x8997d3460c21519a # initialize rs2
remuw x12, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xf2e374da943389cd # initialize rs1
li x28, 0x6a7b9dcb25f465a0 # initialize rs2
remuw x27, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x229d18d09b5c0da9 # initialize rs1
li x29, 0xbdf2921241b741b7 # initialize rs2
remuw x14, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xe28171e437f1ba85 # initialize rs1
li x30, 0xa1204656f896ebe4 # initialize rs2
remuw x10, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x66a36230d47194b5 # initialize rs1
li x31, 0x0fd89bffc268bd53 # initialize rs2
remuw x26, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x7b1a2be41ef7b828 # initialize rs1
li x7, 0xa97e10fb96c06ef6 # initialize rs2
remuw x0, x0, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x6e3aaea67f37546a # initialize rs1
li x3, 0x6a8fc4ac6c24dd7d # initialize rs2
remuw x1, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x587de0a03f1c4179 # initialize rs1
li x24, 0x2c07440a4fe8a47d # initialize rs2
remuw x2, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xdc7b592a1997a7e8 # initialize rs1
li x1, 0x4da14668859f6fdf # initialize rs2
remuw x3, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xa8293260cd1d7023 # initialize rs1
li x19, 0xb222d6e0ab2de1a0 # initialize rs2
remuw x4, x4, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x6bc93ef8bc41d982 # initialize rs1
li x16, 0xd32e351da0be37c5 # initialize rs2
remuw x5, x5, x16 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x46353b83188c04d7 # initialize rs1
li x8, 0x8683fbb9154307b6 # initialize rs2
remuw x6, x6, x8 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa063ac0baef8fd1b # initialize rs1
li x10, 0x0afea2023634c5f4 # initialize rs2
remuw x7, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x45b51b73c381b567 # initialize rs1
li x15, 0x01f92b6c163dc32d # initialize rs2
remuw x8, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xfc42b8c43d6a2f5e # initialize rs1
li x11, 0x38f7524a40a9e737 # initialize rs2
remuw x9, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x3831dc7072f54d18 # initialize rs1
li x21, 0x6e51bbb9395c10d8 # initialize rs2
remuw x10, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xc2e967a5244913d2 # initialize rs1
li x28, 0x050d4be02758fb23 # initialize rs2
remuw x11, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x22848c8b6fa39f6a # initialize rs1
li x6, 0x4ea822eac58bf7fc # initialize rs2
remuw x12, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xa8761cb6b72cc385 # initialize rs1
li x3, 0x3d60d32cc501cd3a # initialize rs2
remuw x13, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x25cae0f0ad5be989 # initialize rs1
li x22, 0x6b99161e45b1c894 # initialize rs2
remuw x14, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xa9ba4d96df923161 # initialize rs1
li x31, 0xca6779bef3db6fcf # initialize rs2
remuw x15, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xfb69a70d451a27f5 # initialize rs1
li x17, 0x5af517e11ddbaeed # initialize rs2
remuw x16, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xf2d6c7645eeb5f93 # initialize rs1
li x5, 0x821acf673faaaa14 # initialize rs2
remuw x17, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xf01a3ca3581ab1e2 # initialize rs1
li x6, 0x3db9cece2c2143f6 # initialize rs2
remuw x18, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x4fc7181eaf48b2ea # initialize rs1
li x3, 0x5bbde60b3321f01a # initialize rs2
remuw x19, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xa7b290a6e00623e7 # initialize rs1
li x19, 0xac42124fa4f27bb5 # initialize rs2
remuw x20, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x1414f75c01257c1b # initialize rs1
li x8, 0x91e1025a14bc256d # initialize rs2
remuw x21, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x316f23f83b878b03 # initialize rs1
li x29, 0xe9bfe560b7673170 # initialize rs2
remuw x22, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x7b7124e74dfba028 # initialize rs1
li x24, 0xe14e4af0b4da9053 # initialize rs2
remuw x23, x23, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x34338e7103eae0d2 # initialize rs1
li x15, 0x20108c116a5fcca9 # initialize rs2
remuw x24, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x1ecccb48525b55e3 # initialize rs1
li x1, 0x71e360d2162a7218 # initialize rs2
remuw x25, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xca18b94c0d5a2f23 # initialize rs1
li x15, 0x36c0cd931cdc998a # initialize rs2
remuw x26, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x0764fec16f565529 # initialize rs1
li x30, 0x57fd4b3b30c7175c # initialize rs2
remuw x27, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xbb462535af92ef00 # initialize rs1
li x26, 0x5a5a9188b221ac58 # initialize rs2
remuw x28, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x26548cbd92d1f6b8 # initialize rs1
li x25, 0x94ec3e57d8e1ceda # initialize rs2
remuw x29, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x5da8e607c408b68b # initialize rs1
li x21, 0xa6405d903a44ed13 # initialize rs2
remuw x30, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x850180899074afd9 # initialize rs1
li x13, 0xa0b20f41cebbd9bd # initialize rs2
remuw x31, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x26, 0xd76747ee36de1a24 # initialize rs1
li x0, 0xbfc64e9453554187 # initialize rs2
remuw x0, x26, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x12, 0x89d42f9f14071a45 # initialize rs1
li x1, 0x0fa669477d7ae514 # initialize rs2
remuw x1, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x3, 0xa62f585f35ca3f3e # initialize rs1
li x2, 0x240903b05de21908 # initialize rs2
remuw x2, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x9, 0xf7395249544a5090 # initialize rs1
li x3, 0x31e2b7cdd098b7d0 # initialize rs2
remuw x3, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x3, 0x50874ac9c3916210 # initialize rs1
li x4, 0xf27be190c101464e # initialize rs2
remuw x4, x3, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x16, 0x7ce10255d52704a6 # initialize rs1
li x5, 0xc282e2775dbbbe91 # initialize rs2
remuw x5, x16, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x19c24ba286b21f10 # initialize rs1
li x6, 0xfa08581856fb76fc # initialize rs2
remuw x6, x22, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x21, 0xbfd46e38dd5f18da # initialize rs1
li x7, 0x221c6c1f4838f849 # initialize rs2
remuw x7, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x15, 0x63a65be74df8115a # initialize rs1
li x8, 0x2e93d5085646c552 # initialize rs2
remuw x8, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x11, 0x0eec7ec078113091 # initialize rs1
li x9, 0x35cee434a64a8c58 # initialize rs2
remuw x9, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x7, 0x53754827b6da802e # initialize rs1
li x10, 0x63eab8b57948df29 # initialize rs2
remuw x10, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x21, 0xfa4f970182eaeb19 # initialize rs1
li x11, 0x04adf6a86548a254 # initialize rs2
remuw x11, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x29, 0xeb2dbfcf28756628 # initialize rs1
li x12, 0xb5c361b11c648e7f # initialize rs2
remuw x12, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x22, 0xf6ae0860aba919a2 # initialize rs1
li x13, 0x53d0f1cc41418787 # initialize rs2
remuw x13, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x22, 0xc4da7ad44b6e839a # initialize rs1
li x14, 0xc0d4e0e481a7fe05 # initialize rs2
remuw x14, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x30, 0xc573039e783f6764 # initialize rs1
li x15, 0x7bb706a0d74922e8 # initialize rs2
remuw x15, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x1, 0x075c728bc3ec3636 # initialize rs1
li x16, 0x30e577785721dfe4 # initialize rs2
remuw x16, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x20, 0x39f31bdb6b7fd452 # initialize rs1
li x17, 0x61df7eeb35aed130 # initialize rs2
remuw x17, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x20, 0x2c8c00b35c85d215 # initialize rs1
li x18, 0x82df5f9457cd5d08 # initialize rs2
remuw x18, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x8, 0x9b90a7c053260af1 # initialize rs1
li x19, 0xe1f3dc8a45349ba8 # initialize rs2
remuw x19, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x1, 0x8c46ed6a0d63fee3 # initialize rs1
li x20, 0x7725bedbcadce91f # initialize rs2
remuw x20, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x7, 0x74d24a4871e01a4f # initialize rs1
li x21, 0x785e9be8c5b2f1a3 # initialize rs2
remuw x21, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x23, 0xc26c57a16d0a0885 # initialize rs1
li x22, 0xf4523530f5bbf5a4 # initialize rs2
remuw x22, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x6, 0xf5758f2c0f034a3b # initialize rs1
li x23, 0xceec445a95cf9221 # initialize rs2
remuw x23, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x25, 0xa8a59a49a2972885 # initialize rs1
li x24, 0x15dd9ff9d627dc99 # initialize rs2
remuw x24, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x9, 0x65eac9074936d38a # initialize rs1
li x25, 0x112038620411f9f5 # initialize rs2
remuw x25, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x9904e5743d1c733d # initialize rs1
li x26, 0xb530f6319c9b878f # initialize rs2
remuw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x11, 0x243849026f980b9a # initialize rs1
li x27, 0xca7cbcf7a826ad79 # initialize rs2
remuw x27, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x27, 0x3bbe65928053a74f # initialize rs1
li x28, 0x2e5da4cafca15001 # initialize rs2
remuw x28, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x3, 0x8cba824d95f61405 # initialize rs1
li x29, 0xa2de034e477735df # initialize rs2
remuw x29, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x2, 0x293df33a28dbab20 # initialize rs1
li x30, 0x6b5313812037a3f9 # initialize rs2
remuw x30, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x16, 0xe7447e31c7e0c45e # initialize rs1
li x31, 0x822bbc6613109133 # initialize rs2
remuw x31, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x901163fdf616fcf8 # initialize rs1
li x0, 0xc4f3485794adc746 # initialize rs2
remuw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x3175a48d4ce3cacd # initialize rs1
li x1, 0xe2dd0a483b5a8d19 # initialize rs2
remuw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xc4de4482b1cd1f15 # initialize rs1
li x2, 0xfa60fc0582d9956f # initialize rs2
remuw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xbbbf0b6beb29e8ac # initialize rs1
li x3, 0x3e6c50ac35538bbf # initialize rs2
remuw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf66f284dbeacd77d # initialize rs1
li x4, 0x1c0524b809ff88b8 # initialize rs2
remuw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1adcf1675912f330 # initialize rs1
li x5, 0x051286828798fa0a # initialize rs2
remuw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x59c935d01858ae06 # initialize rs1
li x6, 0x983029857c61aeb2 # initialize rs2
remuw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4cbac20d2861ccc4 # initialize rs1
li x7, 0x7a0f3925ec275c6c # initialize rs2
remuw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x12ea6bdf85122b60 # initialize rs1
li x8, 0xfe1e19050e510cea # initialize rs2
remuw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xe76fea520316233f # initialize rs1
li x9, 0xc843ad3a1fdee1e5 # initialize rs2
remuw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x34b2c7cb0fb89b89 # initialize rs1
li x10, 0xc980e4cc9c082a4f # initialize rs2
remuw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xab3e36bea99fa4dc # initialize rs1
li x11, 0x3b95b9d1c7547e1a # initialize rs2
remuw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xc4cf6c5431ce5f54 # initialize rs1
li x12, 0xf59da7136448cf78 # initialize rs2
remuw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xc7046f7317f29300 # initialize rs1
li x13, 0x7e2bb1d6f403e68e # initialize rs2
remuw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x77d01a1fb5d71c36 # initialize rs1
li x14, 0x291347d55fffa3f1 # initialize rs2
remuw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x772392a5335c4b51 # initialize rs1
li x15, 0x4e487c49d5de6807 # initialize rs2
remuw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xa4d4c0df9ea6e83e # initialize rs1
li x16, 0x62de01d4e1fddf99 # initialize rs2
remuw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xe6a10d626e8ae2fc # initialize rs1
li x17, 0x0104a71370be632f # initialize rs2
remuw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xcf6818058a01e647 # initialize rs1
li x18, 0xa70a65c8ea6091b4 # initialize rs2
remuw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x28873eef4fbabfc0 # initialize rs1
li x19, 0xf70169697dd706d5 # initialize rs2
remuw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x7d47e7fa496308d8 # initialize rs1
li x20, 0x06a2108bdafad23d # initialize rs2
remuw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x8443aa75581cc1f1 # initialize rs1
li x21, 0x0ffdcc5d1e37533d # initialize rs2
remuw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7dd07a44dcd44393 # initialize rs1
li x22, 0x13621c292e188701 # initialize rs2
remuw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xc37f3863ad833b6a # initialize rs1
li x23, 0x8b69d8cec5ca191d # initialize rs2
remuw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xe5cb118b358423f6 # initialize rs1
li x24, 0xec40539f934f8bf3 # initialize rs2
remuw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xa0db9e30ffd40519 # initialize rs1
li x25, 0xd48b99af160b49ed # initialize rs2
remuw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x9165d249e4ea8714 # initialize rs1
li x26, 0x81d67a81f4d0126e # initialize rs2
remuw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x51a4060a6f19731c # initialize rs1
li x27, 0xdb390a92994e60f2 # initialize rs2
remuw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xe62b75ed0fa9ad36 # initialize rs1
li x28, 0xfcd710732c9a755e # initialize rs2
remuw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xed172d79f1784955 # initialize rs1
li x29, 0xb77deabd4d231ff0 # initialize rs2
remuw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x71333c8dba6c2913 # initialize rs1
li x30, 0xccf55ea9c91b3bda # initialize rs2
remuw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x7923452c8d7d16a5 # initialize rs1
li x31, 0xf350e412ba62090d # initialize rs2
remuw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x5, x31, x12 # perform first operation
remuw x2, x28, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x29, x12 # perform first operation
remuw x18, x24, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x25, x16, x8 # perform first operation
remuw x22, x21, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x5, x20, x1 # perform first operation
remuw x5, x5, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x5, x23, x9 # perform first operation
remuw x13, x9, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x20, x5, x14 # perform first operation
remuw x5, x9, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x1, x21, x20 # perform first operation
remuw x1, x27, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x14, x22, x3 # perform first operation
remuw x14, x9, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x20, x14, x19 # perform first operation
remuw x20, x16, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x23, x18 # perform first operation
remuw x23, x30, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x1, x3, x18 # perform first operation
remuw x18, x25, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x18, x12, x11 # perform first operation
remuw x24, x20, x13 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-div.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x7897c16a83b6da86 # initialize rs1
li x31, 0x26046df90bae4d65 # initialize rs2
div x14, x0, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x7dee2b3f0662808d # initialize rs1
li x25, 0xd1f2c81cb3070d9b # initialize rs2
div x17, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x36562aececc7c673 # initialize rs1
li x21, 0xda14c10795171767 # initialize rs2
div x18, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb60d15d125c5e2ae # initialize rs1
li x2, 0x130701e426d47ce5 # initialize rs2
div x25, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xd9d0358c0d5adea5 # initialize rs1
li x5, 0x11fd35269319bc40 # initialize rs2
div x12, x4, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
li x5, 0x14c0b7bfa9719ed7 # initialize rs1
li x1, 0xb3ed5592a7f8bbc0 # initialize rs2
div x8, x5, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2a057eae898f097e # initialize rs1
li x7, 0x0ffbcf301f7c552d # initialize rs2
div x28, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
li x7, 0x7dd1f3389e835d84 # initialize rs1
li x13, 0x55181bf0798844ef # initialize rs2
div x20, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9781ba241af1c9a3 # initialize rs1
li x22, 0x71accdb8bc3319a5 # initialize rs2
div x18, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xf3a43b880221f846 # initialize rs1
li x11, 0x6bd555c1029b19ed # initialize rs2
div x14, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x4bf16ee4a5c33ab0 # initialize rs1
li x25, 0x8a787c4ea3294cd2 # initialize rs2
div x29, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x2239be39b86db408 # initialize rs1
li x2, 0x40130358e2afc51d # initialize rs2
div x31, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x4a713342bcc63234 # initialize rs1
li x1, 0xb34e5c45932a5b6c # initialize rs2
div x17, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xf63a6dc4add4d2db # initialize rs1
li x30, 0x37483847cbfbe95c # initialize rs2
div x5, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xb6f790cf392926be # initialize rs1
li x1, 0xb809895807251c97 # initialize rs2
div x30, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xe04e03b65f04a476 # initialize rs1
li x14, 0xfdd5966b215b4ba2 # initialize rs2
div x17, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xd60b651b4ebe4009 # initialize rs1
li x18, 0x2d7928a9db1228eb # initialize rs2
div x12, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x9c7b088508587515 # initialize rs1
li x20, 0x26cac266ebf1228c # initialize rs2
div x24, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x086f7406da1c117a # initialize rs1
li x10, 0xb8efe13c850c95b8 # initialize rs2
div x12, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x2ef1366065d5219f # initialize rs1
li x16, 0x0baa6b3bc08b30d5 # initialize rs2
div x10, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x829f8632605ce10d # initialize rs1
li x27, 0x7257502bf913ae8a # initialize rs2
div x1, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xcd5aef89b94d8b78 # initialize rs1
li x26, 0x5c6c04c76d11fc5f # initialize rs2
div x3, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xab88db1ef3e1598e # initialize rs1
li x25, 0x5107f3bdf27b289b # initialize rs2
div x7, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xa27c55e2cc94dd07 # initialize rs1
li x25, 0x92a76ea39c7f8046 # initialize rs2
div x5, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x0854b91c7ce61af2 # initialize rs1
li x1, 0x03f42b8ce1f9d136 # initialize rs2
div x29, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x4ddf861ac6a7d2b3 # initialize rs1
li x8, 0xd4f154043154f496 # initialize rs2
div x1, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x98e0194eff136083 # initialize rs1
li x6, 0x26e33d7ddf0ebfc9 # initialize rs2
div x27, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x38e1b7826f02b0d4 # initialize rs1
li x19, 0x9931a4671f8501b3 # initialize rs2
div x21, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x27f407a344644e65 # initialize rs1
li x6, 0xcfa2e29079db5e4c # initialize rs2
div x20, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xabd7f71b3c6497ed # initialize rs1
li x23, 0x10bab5c064bedb83 # initialize rs2
div x12, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x9a934ea440191a87 # initialize rs1
li x8, 0x1a7f94ba7d046919 # initialize rs2
div x2, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x17f2a744fc636bb0 # initialize rs1
li x7, 0xed32c817080e83b1 # initialize rs2
div x9, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x6, 0x9ce5356ff0383a97 # initialize rs1
li x0, 0x129829ecc5bbc582 # initialize rs2
div x18, x6, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x27, 0x93b42bab5e42a24a # initialize rs1
li x1, 0x719914cab250cb09 # initialize rs2
div x13, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x1, 0xa532b56ff58be9ab # initialize rs1
li x2, 0x3927260961e51eaa # initialize rs2
div x11, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x10, 0x28493d64f9c567c2 # initialize rs1
li x3, 0x564925f96717756a # initialize rs2
div x9, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x30, 0xacda3e3370a17a23 # initialize rs1
li x4, 0xed0adc4d6d567481 # initialize rs2
div x11, x30, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x19, 0x5f69c7e13fe2d419 # initialize rs1
li x5, 0x556778d64aff2dbb # initialize rs2
div x27, x19, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x27, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x27, 0xd64207e1f63c8a62 # initialize rs1
li x6, 0x1e871b3510d2942c # initialize rs2
div x18, x27, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x18, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x9f93624c3d35617f # initialize rs1
li x7, 0xec3bc2b54440b2fd # initialize rs2
div x1, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x23, 0xcda4ed3f68cae7fc # initialize rs1
li x8, 0x00aadf1e4dbb0000 # initialize rs2
div x20, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x2, 0x35a759d8aedafd6b # initialize rs1
li x9, 0x5080dd9d6c2b74e9 # initialize rs2
div x27, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x17, 0x79610c84a55771d4 # initialize rs1
li x10, 0x6a1444b18f291baf # initialize rs2
div x12, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x17, 0x0b5ea0e25a5185c9 # initialize rs1
li x11, 0xf1baafe527d8e080 # initialize rs2
div x3, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x15, 0x48f6b476dcfafecc # initialize rs1
li x12, 0xff8022fbe4afd05f # initialize rs2
div x31, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x22, 0x34726916b0f79c9c # initialize rs1
li x13, 0xd048ac9ad80bfe75 # initialize rs2
div x20, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x2, 0x1b0f99319a5f549d # initialize rs1
li x14, 0x62333e334c1e27e9 # initialize rs2
div x1, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x31, 0x40e12a61131de26b # initialize rs1
li x15, 0x12cac3227a97a43f # initialize rs2
div x22, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x24, 0xfe784f4e83e27675 # initialize rs1
li x16, 0x7e2395b42d5851ea # initialize rs2
div x18, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x31, 0x619283925ec117d5 # initialize rs1
li x17, 0x57217766e664885c # initialize rs2
div x12, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x11, 0x78075dfa5dd69bcd # initialize rs1
li x18, 0x61e84ce1c7aee3da # initialize rs2
div x28, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x24, 0x50341e36f003b8c7 # initialize rs1
li x19, 0x0ec667adccf651ce # initialize rs2
div x7, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x10, 0x64f4055318a38340 # initialize rs1
li x20, 0x0fd93a2d525476aa # initialize rs2
div x17, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x30, 0xa1129cc214d949b4 # initialize rs1
li x21, 0x84ad930391848949 # initialize rs2
div x15, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x23, 0xc5b57a1df2db9cf2 # initialize rs1
li x22, 0xef618713d295bcd7 # initialize rs2
div x31, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x15, 0x0747d1dd2979fe95 # initialize rs1
li x23, 0xb2a2fd1e868a986c # initialize rs2
div x8, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x14, 0xf9d6d6e192f15188 # initialize rs1
li x24, 0x417bb5235df7930a # initialize rs2
div x2, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x22, 0x6a14c74b3342ff4d # initialize rs1
li x25, 0xbc9340c1afc24bf1 # initialize rs2
div x23, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x22, 0xe60864fa93ddb7a9 # initialize rs1
li x26, 0xd856fffa8010797b # initialize rs2
div x2, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x3, 0x2061c6b030312729 # initialize rs1
li x27, 0x48536065c3b401a9 # initialize rs2
div x13, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x30, 0x66084c563153d33c # initialize rs1
li x28, 0xb9046dea278052cb # initialize rs2
div x11, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x15, 0xb986b2072d7db790 # initialize rs1
li x29, 0x6432c9b53e54ca40 # initialize rs2
div x25, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x11, 0xaf405e396ec7f1b8 # initialize rs1
li x30, 0x81d558446441068d # initialize rs2
div x31, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x11, 0xdecd86e12e75b2ed # initialize rs1
li x31, 0x26259f87e1fca4a6 # initialize rs2
div x22, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 504)

# Testcase cp_rd (Test destination rd = x0)
li x10, 0x8c1de679c3cdd2c8 # initialize rs1
li x28, 0x09d12b14257d5dba # initialize rs2
div x0, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x5, 0x4cbdc9fe62af1877 # initialize rs1
li x17, 0x4b25c30017060645 # initialize rs2
div x1, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x30, 0x180cfe131f12a180 # initialize rs1
li x13, 0xec538762c3300610 # initialize rs2
div x2, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x14, 0x735623f95215df89 # initialize rs1
li x31, 0xb11260de752707ad # initialize rs2
div x3, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0x1d9e448903684719 # initialize rs1
li x27, 0xa9a4b3042813b3ee # initialize rs2
div x4, x7, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x13, 0x7a3443a1cb1bb9ae # initialize rs1
li x19, 0x77b28cdd3c4d86e6 # initialize rs2
div x5, x13, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x17, 0xc9bfd6fd85f91b85 # initialize rs1
li x4, 0x4a7ff60b56bfe951 # initialize rs2
div x6, x17, x4 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x9, 0x0617d2fc215a254c # initialize rs1
li x5, 0x005565c99b8389ba # initialize rs2
div x7, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x11, 0x742cf1d1b8e2b5b3 # initialize rs1
li x9, 0x036c6976c8cbbdc6 # initialize rs2
div x8, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x11, 0xb37f4234fa26e823 # initialize rs1
li x10, 0x92d05cefcad379ff # initialize rs2
div x9, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x26, 0x6324489c375583d9 # initialize rs1
li x3, 0x14b1a9344bc974e8 # initialize rs2
div x10, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x22, 0x5d372c6c4ef03d9c # initialize rs1
li x8, 0xd26e105f77a00e2f # initialize rs2
div x11, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x29, 0x0719fc0c5858cf17 # initialize rs1
li x28, 0x6fa927d43f098756 # initialize rs2
div x12, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x6, 0x0e762ce0482c7fc7 # initialize rs1
li x11, 0x10686668dec539bf # initialize rs2
div x13, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x13, 0xec33c8c37f49b97d # initialize rs1
li x3, 0x6b3643acc177f3e5 # initialize rs2
div x14, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x8, 0xc6d111e7673b5cc8 # initialize rs1
li x19, 0x627d368c55283440 # initialize rs2
div x15, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x5, 0xc4657ad5b6e833bd # initialize rs1
li x20, 0xa81290c5976ca548 # initialize rs2
div x16, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x28, 0x0187c77097b3213c # initialize rs1
li x13, 0x634da2cfd627cfa8 # initialize rs2
div x17, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x9, 0xaac9b4654a010486 # initialize rs1
li x8, 0xdc0c080fb7946fdd # initialize rs2
div x18, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x10, 0xd28d80ea528fa893 # initialize rs1
li x1, 0x1d2ade845e19df29 # initialize rs2
div x19, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x7, 0x06f55b65081d3fac # initialize rs1
li x20, 0xda071daeec31fc16 # initialize rs2
div x20, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x7, 0x4d172e1271aeb707 # initialize rs1
li x2, 0x55b595db83ef8c86 # initialize rs2
div x21, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x16, 0x230c7563f489319c # initialize rs1
li x17, 0x0327cd963b3f72ae # initialize rs2
div x22, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x27, 0x0c7d88d289603c42 # initialize rs1
li x19, 0x6cd76378ae804b16 # initialize rs2
div x23, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x11, 0xc68c546d03d4115c # initialize rs1
li x24, 0x724e33ccefcb41a3 # initialize rs2
div x24, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x5, 0xe560712cf4140a95 # initialize rs1
li x25, 0x73bcaf49d1033115 # initialize rs2
div x25, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x30, 0xc8e1189d682a2aaa # initialize rs1
li x28, 0xa92e3357f1759bb4 # initialize rs2
div x26, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x6, 0xffa54abfb0ea71aa # initialize rs1
li x2, 0xc2941ef3f72c0304 # initialize rs2
div x27, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x19, 0xd328909702b825db # initialize rs1
li x21, 0x8b8e369de8505c6b # initialize rs2
div x28, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x27, 0xa4fd8d937f582453 # initialize rs1
li x28, 0xeb9e826bd3a9ab10 # initialize rs2
div x29, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x16, 0xcea385f5fa181fbd # initialize rs1
li x23, 0xc3d560bdaba9508f # initialize rs2
div x30, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0x2084392c65b16b09 # initialize rs1
li x3, 0x2185d0f9bfc9027e # initialize rs2
div x31, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x23, 0x0000000000000000 # initialize rs1
li x9, 0x37abcf8bc689daa0 # initialize rs2
div x6, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x15, 0x0000000000000001 # initialize rs1
li x28, 0x4d9697743351c778 # initialize rs2
div x21, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x30, 0x0000000000000002 # initialize rs1
li x28, 0x17683e4882631d99 # initialize rs2
div x7, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x18, 0x8000000000000000 # initialize rs1
li x11, 0x91fae001df93409e # initialize rs2
div x1, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x9, 0x8000000000000001 # initialize rs1
li x12, 0x9680b35ded5efee1 # initialize rs2
div x19, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x5, 0x7fffffffffffffff # initialize rs1
li x30, 0xab0871108ea7f659 # initialize rs2
div x21, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x27, 0x7ffffffffffffffe # initialize rs1
li x23, 0xe69b9ce1726ef08e # initialize rs2
div x16, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x17, 0xffffffffffffffff # initialize rs1
li x7, 0xf350e5e017c52f75 # initialize rs2
div x11, x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
li x28, 0x857325f4f6804350 # initialize rs2
div x23, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x8f4e15dab8d2a259 # initialize rs2
div x8, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x60c0a1e0187d90a1 # initialize rs2
div x21, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x12, 0x5555555555555555 # initialize rs1
li x1, 0x6888ecbfb6931b91 # initialize rs2
div x5, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x11, 0x00000000ffffffff # initialize rs1
li x29, 0xd3005c73324b7153 # initialize rs2
div x18, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x5, 0x00000000fffffffe # initialize rs1
li x8, 0x686a383b9a2d962a # initialize rs2
div x27, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x22, 0x0000000100000000 # initialize rs1
li x1, 0xc2b265637c9c1909 # initialize rs2
div x6, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x24, 0x0000000100000001 # initialize rs1
li x10, 0xb5bdd2b1cda2f365 # initialize rs2
div x30, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x17, 0x37232f7a588dd4ad # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
div x2, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x15, 0xed89c2e5b6fb9b19 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
div x27, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x10, 0xa6422cfa6453f5aa # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
div x16, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x6, 0x3c45246aaaf7e3a2 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
div x1, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x5, 0xb13652af896bd216 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
div x9, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x13, 0xd2cf1f1846ed38df # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
div x8, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x11, 0x701eb11ec05acae5 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
div x27, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x7, 0xbbd8c850f8c0273b # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
div x16, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x11, 0x6e9776b9ff4ad27e # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
div x14, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x26, 0x2d2d46f1975efdec # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
div x5, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x11, 0x828b8ae43b86fe81 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x31, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x3, 0x151de682bc002513 # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
div x11, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x21, 0xe908d99023b78082 # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
div x24, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x12, 0xa939fc8cf4df1b72 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
div x31, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x10, 0x363208f52b9929ef # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
div x9, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x16, 0x433ccda720b161d4 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
div x24, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x22, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
div x7, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x25, 0x0000000000000000 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
div x16, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x6, 0x0000000000000000 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
div x20, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x26, 0x0000000000000000 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
div x28, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x23, 0x0000000000000000 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
div x27, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000000000000 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
div x18, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000000000000 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
div x15, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000000 # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
div x20, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x23, 0x0000000000000000 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
div x1, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000000000000 # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
div x27, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x0000000000000000 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x16, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x1, 0x0000000000000000 # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
div x3, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x15, 0x0000000000000000 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
div x12, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x8, 0x0000000000000000 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
div x16, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x14, 0x0000000000000000 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
div x24, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x1, 0x0000000000000000 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
div x23, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x7, 0x0000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
div x17, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x20, 0x0000000000000001 # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
div x8, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x29, 0x0000000000000001 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
div x14, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x19, 0x0000000000000001 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
div x10, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x6, 0x0000000000000001 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
div x31, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000001 # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
div x31, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x3, 0x0000000000000001 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
div x13, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
div x25, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x28, 0x0000000000000001 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
div x26, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x23, 0x0000000000000001 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
div x25, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x0000000000000001 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x12, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x13, 0x0000000000000001 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
div x10, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x12, 0x0000000000000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
div x8, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x23, 0x0000000000000001 # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
div x28, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x15, 0x0000000000000001 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
div x29, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x22, 0x0000000000000001 # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
div x31, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x15, 0x0000000000000002 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
div x18, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x18, 0x0000000000000002 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
div x30, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x23, 0x0000000000000002 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
div x10, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x28, 0x0000000000000002 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
div x10, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x11, 0x0000000000000002 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
div x10, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000002 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
div x26, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000000000002 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
div x19, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x6, 0x0000000000000002 # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
div x2, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x10, 0x0000000000000002 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
div x22, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x1, 0x0000000000000002 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
div x6, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000000000002 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x17, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x31, 0x0000000000000002 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
div x5, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x15, 0x0000000000000002 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
div x20, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x28, 0x0000000000000002 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
div x1, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x21, 0x0000000000000002 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
div x9, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x30, 0x0000000000000002 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
div x7, x30, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x11, 0x8000000000000000 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
div x25, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x18, 0x8000000000000000 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
div x6, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x17, 0x8000000000000000 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
div x22, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x27, 0x8000000000000000 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
div x6, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x30, 0x8000000000000000 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
div x9, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x19, 0x8000000000000000 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
div x1, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x25, 0x8000000000000000 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
div x11, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x21, 0x8000000000000000 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
div x17, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x12, 0x8000000000000000 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
div x8, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x24, 0x8000000000000000 # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
div x12, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x8000000000000000 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x7, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x1, 0x8000000000000000 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
div x30, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x30, 0x8000000000000000 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
div x28, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x16, 0x8000000000000000 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
div x31, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x22, 0x8000000000000000 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
div x20, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x24, 0x8000000000000000 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
div x18, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x12, 0x8000000000000001 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
div x26, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x25, 0x8000000000000001 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
div x23, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x13, 0x8000000000000001 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
div x11, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x3, 0x8000000000000001 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
div x2, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x6, 0x8000000000000001 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
div x22, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x7, 0x8000000000000001 # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
div x12, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x10, 0x8000000000000001 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
div x2, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x15, 0x8000000000000001 # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
div x1, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x6, 0xfffffffffffffffe # initialize rs2
div x2, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x3, 0x8000000000000001 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
div x14, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x8000000000000001 # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x26, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x3, 0x8000000000000001 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
div x26, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x30, 0x8000000000000001 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
div x11, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x8, 0x8000000000000001 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
div x29, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x19, 0x8000000000000001 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
div x2, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x20, 0x8000000000000001 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
div x2, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x28, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
div x12, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x13, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
div x28, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x17, 0x7fffffffffffffff # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
div x8, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x8, 0x7fffffffffffffff # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
div x23, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x19, 0x7fffffffffffffff # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
div x10, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
div x15, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x13, 0x7fffffffffffffff # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
div x26, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x19, 0x7fffffffffffffff # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
div x9, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x6, 0x7fffffffffffffff # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
div x2, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x7, 0x7fffffffffffffff # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
div x17, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x7fffffffffffffff # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x2, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x24, 0x7fffffffffffffff # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
div x15, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x8, 0x7fffffffffffffff # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
div x25, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x27, 0x7fffffffffffffff # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
div x22, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x2, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
div x24, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x12, 0x7fffffffffffffff # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
div x21, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x31, 0x7ffffffffffffffe # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
div x14, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x23, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
div x24, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x28, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
div x2, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
div x27, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x14, 0x7ffffffffffffffe # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
div x18, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x6, 0x7ffffffffffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
div x5, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x19, 0x7ffffffffffffffe # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
div x17, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x15, 0x7ffffffffffffffe # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
div x9, x15, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x18, 0x7ffffffffffffffe # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
div x8, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x12, 0x7ffffffffffffffe # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
div x28, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x7ffffffffffffffe # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x24, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x20, 0x7ffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
div x3, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x21, 0x7ffffffffffffffe # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
div x3, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x8, 0x7ffffffffffffffe # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
div x27, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x3, 0x7ffffffffffffffe # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
div x21, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x5, 0x7ffffffffffffffe # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
div x19, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x24, 0xffffffffffffffff # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
div x25, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x27, 0xffffffffffffffff # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
div x22, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x10, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
div x27, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x5, 0xffffffffffffffff # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
div x19, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x30, 0xffffffffffffffff # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
div x27, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x29, 0xffffffffffffffff # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
div x23, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x26, 0xffffffffffffffff # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
div x30, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x31, 0xffffffffffffffff # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
div x28, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x25, 0xffffffffffffffff # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
div x2, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x2, 0xffffffffffffffff # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
div x29, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0xffffffffffffffff # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x24, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x24, 0xffffffffffffffff # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
div x16, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x6, 0xffffffffffffffff # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
div x21, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
div x25, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x8, 0xffffffffffffffff # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
div x9, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x12, 0xffffffffffffffff # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
div x29, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x16, 0xfffffffffffffffe # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
div x20, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x14, 0xfffffffffffffffe # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
div x26, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x13, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
div x9, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x8, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
div x27, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x13, 0xfffffffffffffffe # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
div x16, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
div x15, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
div x23, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x24, 0xfffffffffffffffe # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
div x2, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x6, 0xfffffffffffffffe # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
div x13, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x6, 0xfffffffffffffffe # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
div x9, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0xfffffffffffffffe # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x29, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x1, 0xfffffffffffffffe # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
div x17, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x31, 0xfffffffffffffffe # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
div x13, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x3, 0xfffffffffffffffe # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
div x8, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x9, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
div x19, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x12, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
div x14, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
div x29, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
div x18, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
div x9, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
div x11, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
div x9, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
div x2, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
div x20, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
div x21, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
div x1, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
div x22, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x29, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
div x2, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
div x29, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
div x20, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
div x25, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
div x30, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
div x22, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
div x1, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
div x21, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
div x10, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
div x22, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
div x2, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
div x13, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
div x28, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
div x3, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
div x8, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x5, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
div x1, x30, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
div x18, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
div x19, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
div x27, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
div x16, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x27, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
div x18, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x24, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
div x10, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x10, 0x5555555555555555 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
div x29, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x2, 0x5555555555555555 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
div x24, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x31, 0x5555555555555555 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
div x8, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x28, 0x5555555555555555 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
div x10, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x11, 0x5555555555555555 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
div x19, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x9, 0x5555555555555555 # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
div x2, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x15, 0x5555555555555555 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
div x8, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x27, 0x5555555555555555 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
div x10, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x5555555555555555 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x26, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x21, 0x5555555555555555 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
div x3, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x20, 0x5555555555555555 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
div x28, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x21, 0x5555555555555555 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
div x29, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x31, 0x5555555555555555 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
div x17, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x21, 0x5555555555555555 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
div x10, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x12, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
div x19, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x17, 0x00000000ffffffff # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
div x14, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x24, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
div x2, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x26, 0x00000000ffffffff # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
div x22, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x17, 0x00000000ffffffff # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
div x13, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
div x3, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x30, 0x00000000ffffffff # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
div x16, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
div x19, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x15, 0x00000000ffffffff # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
div x17, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x11, 0x00000000ffffffff # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
div x13, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x00000000ffffffff # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x6, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x16, 0x00000000ffffffff # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
div x28, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x20, 0x00000000ffffffff # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
div x25, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x11, 0x00000000ffffffff # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
div x31, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x6, 0x00000000ffffffff # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
div x16, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x8, 0x00000000ffffffff # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
div x18, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x21, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
div x26, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x11, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
div x30, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x22, 0x00000000fffffffe # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
div x19, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x15, 0x00000000fffffffe # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
div x30, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x30, 0x00000000fffffffe # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
div x17, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x6, 0x00000000fffffffe # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
div x11, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
div x9, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x28, 0x00000000fffffffe # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
div x27, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x2, 0x00000000fffffffe # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
div x11, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x2, 0x00000000fffffffe # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
div x17, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x00000000fffffffe # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x29, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x18, 0x00000000fffffffe # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
div x15, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x16, 0x00000000fffffffe # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
div x25, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x13, 0x00000000fffffffe # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
div x14, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x30, 0x00000000fffffffe # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
div x5, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x18, 0x00000000fffffffe # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
div x1, x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x19, 0x0000000100000000 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
div x8, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x31, 0x0000000100000000 # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
div x17, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x24, 0x0000000100000000 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
div x6, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x10, 0x0000000100000000 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
div x12, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x31, 0x0000000100000000 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
div x23, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x29, 0x0000000100000000 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
div x26, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000100000000 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
div x24, x12, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x24, 0x0000000100000000 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
div x27, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000100000000 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
div x26, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x13, 0x0000000100000000 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
div x25, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000100000000 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x1, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x5, 0x0000000100000000 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
div x25, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x8, 0x0000000100000000 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
div x12, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x17, 0x0000000100000000 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
div x3, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x23, 0x0000000100000000 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
div x11, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x28, 0x0000000100000000 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
div x3, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x5, 0x0000000100000001 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
div x24, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x16, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
div x6, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x5, 0x0000000100000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
div x13, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x27, 0x0000000100000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
div x19, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x14, 0x0000000100000001 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
div x24, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x2, 0x0000000100000001 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
div x3, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x26, 0x0000000100000001 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
div x7, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x3, 0x0000000100000001 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
div x2, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000100000001 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
div x7, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000100000001 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
div x23, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x0000000100000001 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
div x9, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x25, 0x0000000100000001 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
div x2, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x23, 0x0000000100000001 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
div x30, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x19, 0x0000000100000001 # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
div x10, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x15, 0x0000000100000001 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
div x21, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x2, 0x0000000100000001 # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
div x19, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x4b0f834f49050a61 # initialize rs1
li x0, 0x9575fc862a3d319d # initialize rs2
div x2, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xd2dd7f2cb6fadb66 # initialize rs1
li x1, 0x6afca63de0af516d # initialize rs2
div x31, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x573155f59f8e15c2 # initialize rs1
li x2, 0xc96b0dfa7569648d # initialize rs2
div x5, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x7f37346474c25262 # initialize rs1
li x3, 0xde2f4119a187ac5b # initialize rs2
div x24, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9e83da2c6fd8c369 # initialize rs1
li x4, 0xcde93b43bfd66409 # initialize rs2
div x14, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xdf01e495f1796de4 # initialize rs1
li x5, 0x7dc6e3ab0475e53c # initialize rs2
div x11, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5a1090f78f5313ab # initialize rs1
li x6, 0x120cef484094362e # initialize rs2
div x29, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x29, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7512534e12406904 # initialize rs1
li x7, 0xa11d3b5eb6c75db8 # initialize rs2
div x29, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x6ad8e24bdd82f834 # initialize rs1
li x8, 0x7ec9773b661744a7 # initialize rs2
div x17, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xa9199949716127c3 # initialize rs1
li x9, 0x9370df33c0db3dc4 # initialize rs2
div x1, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x9c72c73c140dec6a # initialize rs1
li x10, 0x2b6455a9f406304d # initialize rs2
div x29, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x8fe5281a2d465f12 # initialize rs1
li x11, 0xb17ddf69dd1ae98b # initialize rs2
div x7, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xa31ad685b8525a9a # initialize rs1
li x12, 0xaca449719418b95f # initialize rs2
div x14, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x0ec28bf57d2440f0 # initialize rs1
li x13, 0xd07efa373dc65de0 # initialize rs2
div x30, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x56f1cffa7ee1e0f4 # initialize rs1
li x14, 0x6f69c5ced7d923cd # initialize rs2
div x12, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x1d90b1db052bee34 # initialize rs1
li x15, 0xbf37d2698940ad85 # initialize rs2
div x23, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x4c7271ac17f7b106 # initialize rs1
li x16, 0x2c70743a14b00ebf # initialize rs2
div x29, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x6d2babd0bb08b011 # initialize rs1
li x17, 0x4bfd422b887a9d2d # initialize rs2
div x29, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xf10e9106f7ad79eb # initialize rs1
li x18, 0x52fff5d048f9d07c # initialize rs2
div x20, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x8cb5feac6bf75ae8 # initialize rs1
li x19, 0x31549f2b9eb3b975 # initialize rs2
div x18, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xe462070538c85574 # initialize rs1
li x20, 0x391491b4b7f60f2c # initialize rs2
div x5, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x23e138ae98580ec7 # initialize rs1
li x21, 0xb7903be26bfd67d3 # initialize rs2
div x20, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x46c1f525cf90eadf # initialize rs1
li x22, 0xd113fd3301169ce1 # initialize rs2
div x8, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x98e34102f4d03d31 # initialize rs1
li x23, 0xddfe6a3fa74e0761 # initialize rs2
div x3, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x73c18050e0e9c579 # initialize rs1
li x24, 0x3257090c4c1d358d # initialize rs2
div x2, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xaecb11bb7271f501 # initialize rs1
li x25, 0xd3d3730bd4003bfb # initialize rs2
div x16, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x9f5f75df844ba6a7 # initialize rs1
li x26, 0x6c1e05bf8b687ef2 # initialize rs2
div x5, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xa15827c22f806e9d # initialize rs1
li x27, 0x2d1adfe5be891307 # initialize rs2
div x12, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x893d9613669259a5 # initialize rs1
li x28, 0xb8d05be5ed03248c # initialize rs2
div x25, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xacc0c488fbc35843 # initialize rs1
li x29, 0xdcbc1215fa24b0ae # initialize rs2
div x3, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x156dc6cbd940f1aa # initialize rs1
li x30, 0x47a34d63aeb28f28 # initialize rs2
div x7, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xd417f1d75ccc9888 # initialize rs1
li x31, 0x061ee94c87252cf8 # initialize rs2
div x10, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x35893677a277d409 # initialize rs1
li x26, 0xce0746c2566d50c3 # initialize rs2
div x0, x0, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xcf7accd831bbbee3 # initialize rs1
li x17, 0x5f1c696c1f2dcdc2 # initialize rs2
div x1, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x6b66a4ab534c409d # initialize rs1
li x10, 0xf89602d6540ee1b8 # initialize rs2
div x2, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xa2098d7d3c0bd144 # initialize rs1
li x3, 0x9d24e15b90c074db # initialize rs2
div x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbf4f9b49790d9a12 # initialize rs1
li x30, 0xae830df442111cae # initialize rs2
div x4, x4, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1fc63a95810e8744 # initialize rs1
li x25, 0x2642a6b2ccd9af7c # initialize rs2
div x5, x5, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xc65a64f54c263c74 # initialize rs1
li x1, 0x3e30b7ac2314d74f # initialize rs2
div x6, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc6f0344a633193e5 # initialize rs1
li x28, 0xe888117473f16455 # initialize rs2
div x7, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xa5ea570db2595f3e # initialize rs1
li x16, 0x116577b70447057e # initialize rs2
div x8, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x0821b7da1c19c1e7 # initialize rs1
li x23, 0xaae02f7a931f831c # initialize rs2
div x9, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xea8d1d053d391914 # initialize rs1
li x17, 0x498c8a9b3dd5bd19 # initialize rs2
div x10, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x981bca6dfc59c67e # initialize rs1
li x27, 0xcd81aa8eaa7d0247 # initialize rs2
div x11, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x87f3b9a023fd8eef # initialize rs1
li x10, 0x1fc0ba8d998a30b4 # initialize rs2
div x12, x12, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xc4222f5e6f66619b # initialize rs1
li x31, 0x2404615ecc41cbe0 # initialize rs2
div x13, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x2d57672c05d167f6 # initialize rs1
li x5, 0x6b09763ba32a36c8 # initialize rs2
div x14, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x2e1b21a605370612 # initialize rs1
li x2, 0xdf7f4fa261e73496 # initialize rs2
div x15, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x5d4c0a094e24f358 # initialize rs1
li x6, 0x0267789566c340fa # initialize rs2
div x16, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x34dc2f80bd3c798c # initialize rs1
li x3, 0x58bf685d49203026 # initialize rs2
div x17, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xaf7526a6f49aba1e # initialize rs1
li x11, 0xcbeade353da84f8a # initialize rs2
div x18, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x1030dcf34b21b5cf # initialize rs1
li x18, 0x7bd6e176c200cad2 # initialize rs2
div x19, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x64abcd4586e49734 # initialize rs1
li x5, 0xbc40ce34984de79b # initialize rs2
div x20, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xfb160991e3510a8b # initialize rs1
li x29, 0xf98adeeeaa919d32 # initialize rs2
div x21, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xf0464fd5688d3715 # initialize rs1
li x24, 0xe4f3d1fd38c751c8 # initialize rs2
div x22, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xf6f7dada65acf0c8 # initialize rs1
li x16, 0x171ec1a7d0cc4dc7 # initialize rs2
div x23, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xb3672601cae2eed3 # initialize rs1
li x28, 0x15d10f0d859b8e4b # initialize rs2
div x24, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x110cf135e2d37ea6 # initialize rs1
li x21, 0x2a43cd8c3b57f7e4 # initialize rs2
div x25, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x0f53b5dfac84847f # initialize rs1
li x11, 0xa1f696a5e0c50c35 # initialize rs2
div x26, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x5bbb415921e25ae1 # initialize rs1
li x9, 0x04a46dfea8a730eb # initialize rs2
div x27, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x4de1da8e3b50712a # initialize rs1
li x30, 0xf0edba23bafe0791 # initialize rs2
div x28, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xe463f22865cf69f0 # initialize rs1
li x3, 0x7dead488fd8210b9 # initialize rs2
div x29, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x76db4bf982fc1acf # initialize rs1
li x13, 0x2cbdc9dd461765b2 # initialize rs2
div x30, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x73a4bea6be9baacb # initialize rs1
li x29, 0x42c7dd6a6b04127a # initialize rs2
div x31, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x3, 0xe18b61937d2edf17 # initialize rs1
li x0, 0xc693831d9629241a # initialize rs2
div x0, x3, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x2, 0xe6424d1236bdf11a # initialize rs1
li x1, 0x8c52def47439054e # initialize rs2
div x1, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x13, 0xa4ea505d9c5294c6 # initialize rs1
li x2, 0x52c685662ce0146d # initialize rs2
div x2, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x24, 0x1527c4ee6b71c387 # initialize rs1
li x3, 0x47a1dd3c3943768b # initialize rs2
div x3, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x2, 0xe8498c8207e8e3c1 # initialize rs1
li x4, 0x47dba94967dfc3e6 # initialize rs2
div x4, x2, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x20, 0xf01fcc3ee7f4b5ce # initialize rs1
li x5, 0xb057941cb7a3e08b # initialize rs2
div x5, x20, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0xa8878a4298e74d97 # initialize rs1
li x6, 0x8082e07b21749823 # initialize rs2
div x6, x9, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x3, 0x7276e72bceb45630 # initialize rs1
li x7, 0xdb82b57d7b8bbfe2 # initialize rs2
div x7, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x27, 0x3b3e0910d3609b25 # initialize rs1
li x8, 0x2623366fa2b092a1 # initialize rs2
div x8, x27, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x12, 0x0c2360492b23d0b3 # initialize rs1
li x9, 0x81ca1ab6897335f3 # initialize rs2
div x9, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x22, 0x9b1f5b5fa8759ec1 # initialize rs1
li x10, 0xb0eabf260a8f94bc # initialize rs2
div x10, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x1, 0x27a51d19c5c721ac # initialize rs1
li x11, 0x3e7532547e23e7d6 # initialize rs2
div x11, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x7, 0xe30908117816ea9d # initialize rs1
li x12, 0xc52db3839dc71f95 # initialize rs2
div x12, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x16, 0x3f349843cd0fc19f # initialize rs1
li x13, 0x3cc76c8873e70db9 # initialize rs2
div x13, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x19, 0x184876ac0fc66b2d # initialize rs1
li x14, 0xbaed2e9d86c1fe86 # initialize rs2
div x14, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x26, 0x65da289ba7e864f3 # initialize rs1
li x15, 0xac1043343f86ffbf # initialize rs2
div x15, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x22, 0xb4edb7a7e9d441e1 # initialize rs1
li x16, 0xb4f3d6cc58a4df25 # initialize rs2
div x16, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x28, 0xe2cceb7458f8f4fc # initialize rs1
li x17, 0x05919942181f3551 # initialize rs2
div x17, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x2, 0x8f307807d0949033 # initialize rs1
li x18, 0x31826208cae1bcb0 # initialize rs2
div x18, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x14, 0x06715efd8413f357 # initialize rs1
li x19, 0x287656672974036c # initialize rs2
div x19, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x11, 0x1e012efb72893ce0 # initialize rs1
li x20, 0x3de1b4a7650f8540 # initialize rs2
div x20, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x3, 0x9ce398f994dfe008 # initialize rs1
li x21, 0x722f96eae0a1f99c # initialize rs2
div x21, x3, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x28, 0x86a5ece36bc5a073 # initialize rs1
li x22, 0x181ef771d0990cdf # initialize rs2
div x22, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x14, 0x733fe3b66a96dde3 # initialize rs1
li x23, 0x7e24c8b9abc36b97 # initialize rs2
div x23, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x28, 0xba8907bd2fd2fc5b # initialize rs1
li x24, 0x6e0f3b51550aa497 # initialize rs2
div x24, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x16, 0x79d0c7bb850851a8 # initialize rs1
li x25, 0x05649905c9005fea # initialize rs2
div x25, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x2, 0x4e38ef6a1ebe5556 # initialize rs1
li x26, 0x040b25cfccf3db94 # initialize rs2
div x26, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x23, 0x0904f165edc20c37 # initialize rs1
li x27, 0x0f69e82521cb4449 # initialize rs2
div x27, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x29, 0x29ee34d71a023997 # initialize rs1
li x28, 0xde5cc3a7a0788fbc # initialize rs2
div x28, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x14, 0xd6b8a89cb8744031 # initialize rs1
li x29, 0xd2559c19fe40d9f4 # initialize rs2
div x29, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x6, 0xbc590185cfd68a31 # initialize rs1
li x30, 0xde41bceb6fc2b2aa # initialize rs2
div x30, x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x18, 0x0459df310f80205c # initialize rs1
li x31, 0x0ea9a431341d700b # initialize rs2
div x31, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x714dcd7462a6abe2 # initialize rs1
li x0, 0x2dfa2c13c6e032df # initialize rs2
div x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x037702cc5e2f9f64 # initialize rs1
li x1, 0xfd8de74f8087b162 # initialize rs2
div x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x3c2a19f3bf551106 # initialize rs1
li x2, 0x7cdab036870632f6 # initialize rs2
div x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x47e59b66f4f3013e # initialize rs1
li x3, 0x6e6548c2bd8eb727 # initialize rs2
div x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8de6faa8e9fcdc7e # initialize rs1
li x4, 0x29145c9f69957a5b # initialize rs2
div x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xc7425587056298b9 # initialize rs1
li x5, 0x1f0f7bb9b2db41b3 # initialize rs2
div x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x73781c4b86ef5eda # initialize rs1
li x6, 0xc397ba3569dcaf1f # initialize rs2
div x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x30335a3d715ec6de # initialize rs1
li x7, 0x4bba92041e7d60bb # initialize rs2
div x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x6e0a8d7881f26796 # initialize rs1
li x8, 0x48d4fbf9d8b684c3 # initialize rs2
div x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x457a879aaa1be881 # initialize rs1
li x9, 0x3df3c6f0fefbce41 # initialize rs2
div x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x74057c49998b1e1e # initialize rs1
li x10, 0x52122c1745f730a7 # initialize rs2
div x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xb59d2601ccf5c0d5 # initialize rs1
li x11, 0xb5058d6d15ae58da # initialize rs2
div x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xc5f5bb862bab2d43 # initialize rs1
li x12, 0xca16097717c94e7c # initialize rs2
div x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x999cfb138388526a # initialize rs1
li x13, 0xd2173c91f69d2a08 # initialize rs2
div x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x6b280e7802568087 # initialize rs1
li x14, 0xf018fac3ca9fe1e0 # initialize rs2
div x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe2a650257e559a8b # initialize rs1
li x15, 0xe19bb313537ce9f1 # initialize rs2
div x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x9bbcf516563cc6a3 # initialize rs1
li x16, 0x7c24dab67450402f # initialize rs2
div x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x344f1663c9e9f830 # initialize rs1
li x17, 0x09db83adda060d33 # initialize rs2
div x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x7ffffa4373243291 # initialize rs1
li x18, 0xebbc18b9146882b9 # initialize rs2
div x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x24ad8a2429491811 # initialize rs1
li x19, 0x80d8e7e5e0c21b9d # initialize rs2
div x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xba01c16579859af7 # initialize rs1
li x20, 0x462a1b2bc8e3a776 # initialize rs2
div x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc1bff243e70717f6 # initialize rs1
li x21, 0xaa8c9a1dc98fa992 # initialize rs2
div x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7378d0327ca1e382 # initialize rs1
li x22, 0x2cba6032ae11d79d # initialize rs2
div x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x3a37c239bdb53568 # initialize rs1
li x23, 0x5f52b3b9bf6a8854 # initialize rs2
div x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xbc83130f75781a3e # initialize rs1
li x24, 0x8e35c2949af8b17c # initialize rs2
div x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x84140df24de4cbde # initialize rs1
li x25, 0x9ca5dad11fc492df # initialize rs2
div x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xbbcb55779a011cd7 # initialize rs1
li x26, 0x3d215f31eaf4c695 # initialize rs2
div x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x8d26f7c37b9be4d6 # initialize rs1
li x27, 0x9c22891e6bafba02 # initialize rs2
div x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x16d6b3ab4466cd39 # initialize rs1
li x28, 0x4d91d378cad74385 # initialize rs2
div x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xbd37417f6d37c41e # initialize rs1
li x29, 0x183e1bb64cf48092 # initialize rs2
div x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x57dbedb2ee0cba81 # initialize rs1
li x30, 0x63af83148298f2da # initialize rs2
div x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x12c5afdbc6c62e04 # initialize rs1
li x31, 0xb90fe05cf13d020c # initialize rs2
div x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x12, x16, x23 # perform first operation
div x18, x6, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x23, x16, x18 # perform first operation
div x19, x8, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x6, x21 # perform first operation
div x7, x29, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x13, x7, x17 # perform first operation
div x7, x13, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x3, x25, x20 # perform first operation
div x1, x11, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x31, x20 # perform first operation
div x8, x22, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x5, x3, x21 # perform first operation
div x5, x10, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x3, x12, x10 # perform first operation
div x3, x27, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x24, x10 # perform first operation
div x27, x11, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x18, x14, x11 # perform first operation
div x14, x12, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x9, x23, x15 # perform first operation
div x15, x28, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x31, x19, x12 # perform first operation
div x5, x27, x25 # perform second (triggering) operation

#.EQU SIGSIZE,4096
.EQU SIGSIZE,53248 #combined


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
