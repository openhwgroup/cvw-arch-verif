///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/F//WALLY-COV-fnmadd.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:22.803671
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmadd.s f18, f28, f1, f3 # perform first operation
fnmadd.s f20, f18, f14, f12 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmadd.s f7, f29, f21, f14 # perform first operation
fnmadd.s f25, f1, f7, f12 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.s f16, f18, f25, f26 # perform first operation
fnmadd.s f16, f20, f29, f18 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.s f11, f22, f13, f8 # perform first operation
fnmadd.s f11, f14, f2, f24 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.s f17, f12, f7, f2 # perform first operation
fnmadd.s f12, f31, f8, f2 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.s f6, f28, f26, f20 # perform first operation
fnmadd.s f26, f9, f23, f12 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x6b097e4a5ae52cdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7ada304d96b4648 # load x3 with value 0xb7ada304d96b4648
sw x3, 0(x2) # store 0xb7ada304d96b4648 in memory
flw f0, 0(x2) # load 0xb7ada304d96b4648 from memory into f0
li x3, 0x654b85d49aaf64af # load x3 with value 0x654b85d49aaf64af
sw x3, 0(x2) # store 0x654b85d49aaf64af in memory
flw f4, 0(x2) # load 0x654b85d49aaf64af from memory into f4
li x3, 0xcac85586b7e4f2fe # load x3 with value 0xcac85586b7e4f2fe
sw x3, 0(x2) # store 0xcac85586b7e4f2fe in memory
flw f30, 0(x2) # load 0xcac85586b7e4f2fe from memory into f30
fnmadd.s f0, f0, f4, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x60e22954e0120878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd0afb25865b386a # load x3 with value 0xfd0afb25865b386a
sw x3, 0(x2) # store 0xfd0afb25865b386a in memory
flw f1, 0(x2) # load 0xfd0afb25865b386a from memory into f1
li x3, 0xffb3d04c007c5e2a # load x3 with value 0xffb3d04c007c5e2a
sw x3, 0(x2) # store 0xffb3d04c007c5e2a in memory
flw f30, 0(x2) # load 0xffb3d04c007c5e2a from memory into f30
li x3, 0xe37453fb7365efe6 # load x3 with value 0xe37453fb7365efe6
sw x3, 0(x2) # store 0xe37453fb7365efe6 in memory
flw f20, 0(x2) # load 0xe37453fb7365efe6 from memory into f20
fnmadd.s f1, f1, f30, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x1b076a97b9658ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9782e911cd9a73f # load x3 with value 0xc9782e911cd9a73f
sw x3, 0(x2) # store 0xc9782e911cd9a73f in memory
flw f2, 0(x2) # load 0xc9782e911cd9a73f from memory into f2
li x3, 0x741a63f6e43e1bf5 # load x3 with value 0x741a63f6e43e1bf5
sw x3, 0(x2) # store 0x741a63f6e43e1bf5 in memory
flw f14, 0(x2) # load 0x741a63f6e43e1bf5 from memory into f14
li x3, 0xe2ebadce390ac5a7 # load x3 with value 0xe2ebadce390ac5a7
sw x3, 0(x2) # store 0xe2ebadce390ac5a7 in memory
flw f9, 0(x2) # load 0xe2ebadce390ac5a7 from memory into f9
fnmadd.s f2, f2, f14, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x64cad1ec8ba90f3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7234aa8ad1bd503e # load x3 with value 0x7234aa8ad1bd503e
sw x3, 0(x2) # store 0x7234aa8ad1bd503e in memory
flw f3, 0(x2) # load 0x7234aa8ad1bd503e from memory into f3
li x3, 0xd517ba1ff74919b5 # load x3 with value 0xd517ba1ff74919b5
sw x3, 0(x2) # store 0xd517ba1ff74919b5 in memory
flw f17, 0(x2) # load 0xd517ba1ff74919b5 from memory into f17
li x3, 0x3e4d55c00a2145cf # load x3 with value 0x3e4d55c00a2145cf
sw x3, 0(x2) # store 0x3e4d55c00a2145cf in memory
flw f9, 0(x2) # load 0x3e4d55c00a2145cf from memory into f9
fnmadd.s f3, f3, f17, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x6a4c299589b9bb2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbb2fb5e2a3a8b95f # load x3 with value 0xbb2fb5e2a3a8b95f
sw x3, 0(x2) # store 0xbb2fb5e2a3a8b95f in memory
flw f4, 0(x2) # load 0xbb2fb5e2a3a8b95f from memory into f4
li x3, 0x18136837f2078361 # load x3 with value 0x18136837f2078361
sw x3, 0(x2) # store 0x18136837f2078361 in memory
flw f28, 0(x2) # load 0x18136837f2078361 from memory into f28
li x3, 0x45a9497319a6d80b # load x3 with value 0x45a9497319a6d80b
sw x3, 0(x2) # store 0x45a9497319a6d80b in memory
flw f30, 0(x2) # load 0x45a9497319a6d80b from memory into f30
fnmadd.s f4, f4, f28, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xfbed8460d3e5796f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83af4406e79e5be1 # load x3 with value 0x83af4406e79e5be1
sw x3, 0(x2) # store 0x83af4406e79e5be1 in memory
flw f5, 0(x2) # load 0x83af4406e79e5be1 from memory into f5
li x3, 0x1d746d79f046b545 # load x3 with value 0x1d746d79f046b545
sw x3, 0(x2) # store 0x1d746d79f046b545 in memory
flw f18, 0(x2) # load 0x1d746d79f046b545 from memory into f18
li x3, 0x580191a2c0c1fe0e # load x3 with value 0x580191a2c0c1fe0e
sw x3, 0(x2) # store 0x580191a2c0c1fe0e in memory
flw f19, 0(x2) # load 0x580191a2c0c1fe0e from memory into f19
fnmadd.s f5, f5, f18, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x6a41d70e0c6c1db9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9c409d3369d2d9e # load x3 with value 0xb9c409d3369d2d9e
sw x3, 0(x2) # store 0xb9c409d3369d2d9e in memory
flw f6, 0(x2) # load 0xb9c409d3369d2d9e from memory into f6
li x3, 0xc5b5394d126fdfd2 # load x3 with value 0xc5b5394d126fdfd2
sw x3, 0(x2) # store 0xc5b5394d126fdfd2 in memory
flw f13, 0(x2) # load 0xc5b5394d126fdfd2 from memory into f13
li x3, 0xbd86edad76c7408c # load x3 with value 0xbd86edad76c7408c
sw x3, 0(x2) # store 0xbd86edad76c7408c in memory
flw f2, 0(x2) # load 0xbd86edad76c7408c from memory into f2
fnmadd.s f6, f6, f13, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xc54dcadd891927bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb5c730a7cbf76304 # load x3 with value 0xb5c730a7cbf76304
sw x3, 0(x2) # store 0xb5c730a7cbf76304 in memory
flw f7, 0(x2) # load 0xb5c730a7cbf76304 from memory into f7
li x3, 0xccd06db2b263916a # load x3 with value 0xccd06db2b263916a
sw x3, 0(x2) # store 0xccd06db2b263916a in memory
flw f18, 0(x2) # load 0xccd06db2b263916a from memory into f18
li x3, 0xebe0c40f1d699e22 # load x3 with value 0xebe0c40f1d699e22
sw x3, 0(x2) # store 0xebe0c40f1d699e22 in memory
flw f6, 0(x2) # load 0xebe0c40f1d699e22 from memory into f6
fnmadd.s f7, f7, f18, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x9b6bdd9a31a5c458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe605338687ab4f60 # load x3 with value 0xe605338687ab4f60
sw x3, 0(x2) # store 0xe605338687ab4f60 in memory
flw f8, 0(x2) # load 0xe605338687ab4f60 from memory into f8
li x3, 0xb1d69d5ef777c338 # load x3 with value 0xb1d69d5ef777c338
sw x3, 0(x2) # store 0xb1d69d5ef777c338 in memory
flw f14, 0(x2) # load 0xb1d69d5ef777c338 from memory into f14
li x3, 0x1ab0afbccc88855d # load x3 with value 0x1ab0afbccc88855d
sw x3, 0(x2) # store 0x1ab0afbccc88855d in memory
flw f28, 0(x2) # load 0x1ab0afbccc88855d from memory into f28
fnmadd.s f8, f8, f14, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x342e1c59cc17019f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8dcd83b2dc40208 # load x3 with value 0xc8dcd83b2dc40208
sw x3, 0(x2) # store 0xc8dcd83b2dc40208 in memory
flw f9, 0(x2) # load 0xc8dcd83b2dc40208 from memory into f9
li x3, 0xdcc7ea0e7a5476dd # load x3 with value 0xdcc7ea0e7a5476dd
sw x3, 0(x2) # store 0xdcc7ea0e7a5476dd in memory
flw f23, 0(x2) # load 0xdcc7ea0e7a5476dd from memory into f23
li x3, 0x5e8aeae98c51c63a # load x3 with value 0x5e8aeae98c51c63a
sw x3, 0(x2) # store 0x5e8aeae98c51c63a in memory
flw f15, 0(x2) # load 0x5e8aeae98c51c63a from memory into f15
fnmadd.s f9, f9, f23, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x3cb149a07587f5d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6885f074eddac57 # load x3 with value 0xd6885f074eddac57
sw x3, 0(x2) # store 0xd6885f074eddac57 in memory
flw f10, 0(x2) # load 0xd6885f074eddac57 from memory into f10
li x3, 0x40c576a324439617 # load x3 with value 0x40c576a324439617
sw x3, 0(x2) # store 0x40c576a324439617 in memory
flw f7, 0(x2) # load 0x40c576a324439617 from memory into f7
li x3, 0xe8105edd8c245dbe # load x3 with value 0xe8105edd8c245dbe
sw x3, 0(x2) # store 0xe8105edd8c245dbe in memory
flw f13, 0(x2) # load 0xe8105edd8c245dbe from memory into f13
fnmadd.s f10, f10, f7, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x93c785c85c8761b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x222cc56b711c9b44 # load x3 with value 0x222cc56b711c9b44
sw x3, 0(x2) # store 0x222cc56b711c9b44 in memory
flw f11, 0(x2) # load 0x222cc56b711c9b44 from memory into f11
li x3, 0x6a386d6f779f5d9d # load x3 with value 0x6a386d6f779f5d9d
sw x3, 0(x2) # store 0x6a386d6f779f5d9d in memory
flw f25, 0(x2) # load 0x6a386d6f779f5d9d from memory into f25
li x3, 0x34c2a304c3c806cf # load x3 with value 0x34c2a304c3c806cf
sw x3, 0(x2) # store 0x34c2a304c3c806cf in memory
flw f22, 0(x2) # load 0x34c2a304c3c806cf from memory into f22
fnmadd.s f11, f11, f25, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x9ecd8cb675b8987f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2e010d70315c951 # load x3 with value 0xa2e010d70315c951
sw x3, 0(x2) # store 0xa2e010d70315c951 in memory
flw f12, 0(x2) # load 0xa2e010d70315c951 from memory into f12
li x3, 0xff214e20fd44653e # load x3 with value 0xff214e20fd44653e
sw x3, 0(x2) # store 0xff214e20fd44653e in memory
flw f5, 0(x2) # load 0xff214e20fd44653e from memory into f5
li x3, 0xbf4f135e6856af4f # load x3 with value 0xbf4f135e6856af4f
sw x3, 0(x2) # store 0xbf4f135e6856af4f in memory
flw f19, 0(x2) # load 0xbf4f135e6856af4f from memory into f19
fnmadd.s f12, f12, f5, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x8377becf86c908fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b5622e40c40f9e7 # load x3 with value 0x6b5622e40c40f9e7
sw x3, 0(x2) # store 0x6b5622e40c40f9e7 in memory
flw f13, 0(x2) # load 0x6b5622e40c40f9e7 from memory into f13
li x3, 0x2b844aa0a1ce72fb # load x3 with value 0x2b844aa0a1ce72fb
sw x3, 0(x2) # store 0x2b844aa0a1ce72fb in memory
flw f2, 0(x2) # load 0x2b844aa0a1ce72fb from memory into f2
li x3, 0x3033bf22b0aac381 # load x3 with value 0x3033bf22b0aac381
sw x3, 0(x2) # store 0x3033bf22b0aac381 in memory
flw f31, 0(x2) # load 0x3033bf22b0aac381 from memory into f31
fnmadd.s f13, f13, f2, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x3d5f8c08741c7a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25d0b2bc0a19dd63 # load x3 with value 0x25d0b2bc0a19dd63
sw x3, 0(x2) # store 0x25d0b2bc0a19dd63 in memory
flw f14, 0(x2) # load 0x25d0b2bc0a19dd63 from memory into f14
li x3, 0x454e4068f45e3d64 # load x3 with value 0x454e4068f45e3d64
sw x3, 0(x2) # store 0x454e4068f45e3d64 in memory
flw f12, 0(x2) # load 0x454e4068f45e3d64 from memory into f12
li x3, 0xae14b8706c3e7cce # load x3 with value 0xae14b8706c3e7cce
sw x3, 0(x2) # store 0xae14b8706c3e7cce in memory
flw f23, 0(x2) # load 0xae14b8706c3e7cce from memory into f23
fnmadd.s f14, f14, f12, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x75b68e013d7e3edd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3305683b3149ebb # load x3 with value 0xf3305683b3149ebb
sw x3, 0(x2) # store 0xf3305683b3149ebb in memory
flw f15, 0(x2) # load 0xf3305683b3149ebb from memory into f15
li x3, 0xee4f8f50f95b6cce # load x3 with value 0xee4f8f50f95b6cce
sw x3, 0(x2) # store 0xee4f8f50f95b6cce in memory
flw f17, 0(x2) # load 0xee4f8f50f95b6cce from memory into f17
li x3, 0xf752db105078d651 # load x3 with value 0xf752db105078d651
sw x3, 0(x2) # store 0xf752db105078d651 in memory
flw f9, 0(x2) # load 0xf752db105078d651 from memory into f9
fnmadd.s f15, f15, f17, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x52d474d09a1f680d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x318ebbd4dbc251c7 # load x3 with value 0x318ebbd4dbc251c7
sw x3, 0(x2) # store 0x318ebbd4dbc251c7 in memory
flw f16, 0(x2) # load 0x318ebbd4dbc251c7 from memory into f16
li x3, 0x93444b2eed2b75a4 # load x3 with value 0x93444b2eed2b75a4
sw x3, 0(x2) # store 0x93444b2eed2b75a4 in memory
flw f18, 0(x2) # load 0x93444b2eed2b75a4 from memory into f18
li x3, 0xbcdc6d6923f9789f # load x3 with value 0xbcdc6d6923f9789f
sw x3, 0(x2) # store 0xbcdc6d6923f9789f in memory
flw f4, 0(x2) # load 0xbcdc6d6923f9789f from memory into f4
fnmadd.s f16, f16, f18, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x9b72e2057efc32e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa0424b73b39f8f2 # load x3 with value 0xaa0424b73b39f8f2
sw x3, 0(x2) # store 0xaa0424b73b39f8f2 in memory
flw f17, 0(x2) # load 0xaa0424b73b39f8f2 from memory into f17
li x3, 0xa5795e712245fb59 # load x3 with value 0xa5795e712245fb59
sw x3, 0(x2) # store 0xa5795e712245fb59 in memory
flw f21, 0(x2) # load 0xa5795e712245fb59 from memory into f21
li x3, 0xb5fe20f8c5c26d4d # load x3 with value 0xb5fe20f8c5c26d4d
sw x3, 0(x2) # store 0xb5fe20f8c5c26d4d in memory
flw f31, 0(x2) # load 0xb5fe20f8c5c26d4d from memory into f31
fnmadd.s f17, f17, f21, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x135e476e41cfca1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4191d4bd5d9b3e4f # load x3 with value 0x4191d4bd5d9b3e4f
sw x3, 0(x2) # store 0x4191d4bd5d9b3e4f in memory
flw f18, 0(x2) # load 0x4191d4bd5d9b3e4f from memory into f18
li x3, 0x8ac07de1d6db8390 # load x3 with value 0x8ac07de1d6db8390
sw x3, 0(x2) # store 0x8ac07de1d6db8390 in memory
flw f12, 0(x2) # load 0x8ac07de1d6db8390 from memory into f12
li x3, 0x40163d82e4b8ed30 # load x3 with value 0x40163d82e4b8ed30
sw x3, 0(x2) # store 0x40163d82e4b8ed30 in memory
flw f17, 0(x2) # load 0x40163d82e4b8ed30 from memory into f17
fnmadd.s f18, f18, f12, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x4de1dbfece3125a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec84612e4b98a2b0 # load x3 with value 0xec84612e4b98a2b0
sw x3, 0(x2) # store 0xec84612e4b98a2b0 in memory
flw f19, 0(x2) # load 0xec84612e4b98a2b0 from memory into f19
li x3, 0x5b558371afdaeba7 # load x3 with value 0x5b558371afdaeba7
sw x3, 0(x2) # store 0x5b558371afdaeba7 in memory
flw f30, 0(x2) # load 0x5b558371afdaeba7 from memory into f30
li x3, 0x7d5c178d74ca2907 # load x3 with value 0x7d5c178d74ca2907
sw x3, 0(x2) # store 0x7d5c178d74ca2907 in memory
flw f4, 0(x2) # load 0x7d5c178d74ca2907 from memory into f4
fnmadd.s f19, f19, f30, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x345f79ef2d1b5bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85dcd5e380fbb1e9 # load x3 with value 0x85dcd5e380fbb1e9
sw x3, 0(x2) # store 0x85dcd5e380fbb1e9 in memory
flw f20, 0(x2) # load 0x85dcd5e380fbb1e9 from memory into f20
li x3, 0x95e1e9404174658 # load x3 with value 0x95e1e9404174658
sw x3, 0(x2) # store 0x95e1e9404174658 in memory
flw f1, 0(x2) # load 0x95e1e9404174658 from memory into f1
li x3, 0x8b8b137ac18c4a0d # load x3 with value 0x8b8b137ac18c4a0d
sw x3, 0(x2) # store 0x8b8b137ac18c4a0d in memory
flw f22, 0(x2) # load 0x8b8b137ac18c4a0d from memory into f22
fnmadd.s f20, f20, f1, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x998192802fbaaddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65b589e00e4cdd04 # load x3 with value 0x65b589e00e4cdd04
sw x3, 0(x2) # store 0x65b589e00e4cdd04 in memory
flw f21, 0(x2) # load 0x65b589e00e4cdd04 from memory into f21
li x3, 0x8ad44d33f5dc4ac2 # load x3 with value 0x8ad44d33f5dc4ac2
sw x3, 0(x2) # store 0x8ad44d33f5dc4ac2 in memory
flw f31, 0(x2) # load 0x8ad44d33f5dc4ac2 from memory into f31
li x3, 0x87517ea6439d2048 # load x3 with value 0x87517ea6439d2048
sw x3, 0(x2) # store 0x87517ea6439d2048 in memory
flw f17, 0(x2) # load 0x87517ea6439d2048 from memory into f17
fnmadd.s f21, f21, f31, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x1d33c3279345288a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63b2ac1730f4d185 # load x3 with value 0x63b2ac1730f4d185
sw x3, 0(x2) # store 0x63b2ac1730f4d185 in memory
flw f22, 0(x2) # load 0x63b2ac1730f4d185 from memory into f22
li x3, 0x7c30ea95b14f7c39 # load x3 with value 0x7c30ea95b14f7c39
sw x3, 0(x2) # store 0x7c30ea95b14f7c39 in memory
flw f23, 0(x2) # load 0x7c30ea95b14f7c39 from memory into f23
li x3, 0x867311ff6ce38478 # load x3 with value 0x867311ff6ce38478
sw x3, 0(x2) # store 0x867311ff6ce38478 in memory
flw f26, 0(x2) # load 0x867311ff6ce38478 from memory into f26
fnmadd.s f22, f22, f23, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x69b3fd253b4c97f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x329ef76f54bf4fd4 # load x3 with value 0x329ef76f54bf4fd4
sw x3, 0(x2) # store 0x329ef76f54bf4fd4 in memory
flw f23, 0(x2) # load 0x329ef76f54bf4fd4 from memory into f23
li x3, 0xe9d2e33d97368e3d # load x3 with value 0xe9d2e33d97368e3d
sw x3, 0(x2) # store 0xe9d2e33d97368e3d in memory
flw f4, 0(x2) # load 0xe9d2e33d97368e3d from memory into f4
li x3, 0x40b258e18946c2a8 # load x3 with value 0x40b258e18946c2a8
sw x3, 0(x2) # store 0x40b258e18946c2a8 in memory
flw f18, 0(x2) # load 0x40b258e18946c2a8 from memory into f18
fnmadd.s f23, f23, f4, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x3f9b2c7f0cf5f61f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x30865c61df246e2a # load x3 with value 0x30865c61df246e2a
sw x3, 0(x2) # store 0x30865c61df246e2a in memory
flw f24, 0(x2) # load 0x30865c61df246e2a from memory into f24
li x3, 0x2c6941647d478bfb # load x3 with value 0x2c6941647d478bfb
sw x3, 0(x2) # store 0x2c6941647d478bfb in memory
flw f20, 0(x2) # load 0x2c6941647d478bfb from memory into f20
li x3, 0x929bb059afb9c77b # load x3 with value 0x929bb059afb9c77b
sw x3, 0(x2) # store 0x929bb059afb9c77b in memory
flw f17, 0(x2) # load 0x929bb059afb9c77b from memory into f17
fnmadd.s f24, f24, f20, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x77087d5fed23a7fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50daa0443f72d645 # load x3 with value 0x50daa0443f72d645
sw x3, 0(x2) # store 0x50daa0443f72d645 in memory
flw f25, 0(x2) # load 0x50daa0443f72d645 from memory into f25
li x3, 0xca0d2dd059eb4863 # load x3 with value 0xca0d2dd059eb4863
sw x3, 0(x2) # store 0xca0d2dd059eb4863 in memory
flw f11, 0(x2) # load 0xca0d2dd059eb4863 from memory into f11
li x3, 0x6661cc548dcf511a # load x3 with value 0x6661cc548dcf511a
sw x3, 0(x2) # store 0x6661cc548dcf511a in memory
flw f22, 0(x2) # load 0x6661cc548dcf511a from memory into f22
fnmadd.s f25, f25, f11, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x610cfb4fdc605761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa401fe5561069644 # load x3 with value 0xa401fe5561069644
sw x3, 0(x2) # store 0xa401fe5561069644 in memory
flw f26, 0(x2) # load 0xa401fe5561069644 from memory into f26
li x3, 0xf3fc5fb55fb99e42 # load x3 with value 0xf3fc5fb55fb99e42
sw x3, 0(x2) # store 0xf3fc5fb55fb99e42 in memory
flw f5, 0(x2) # load 0xf3fc5fb55fb99e42 from memory into f5
li x3, 0xfb78595dc615ec2 # load x3 with value 0xfb78595dc615ec2
sw x3, 0(x2) # store 0xfb78595dc615ec2 in memory
flw f19, 0(x2) # load 0xfb78595dc615ec2 from memory into f19
fnmadd.s f26, f26, f5, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x172bf2aaead7bfe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16cd3e32eb6fee6c # load x3 with value 0x16cd3e32eb6fee6c
sw x3, 0(x2) # store 0x16cd3e32eb6fee6c in memory
flw f27, 0(x2) # load 0x16cd3e32eb6fee6c from memory into f27
li x3, 0xdd96d7e645898b09 # load x3 with value 0xdd96d7e645898b09
sw x3, 0(x2) # store 0xdd96d7e645898b09 in memory
flw f16, 0(x2) # load 0xdd96d7e645898b09 from memory into f16
li x3, 0x1a32ed235d1e5df0 # load x3 with value 0x1a32ed235d1e5df0
sw x3, 0(x2) # store 0x1a32ed235d1e5df0 in memory
flw f31, 0(x2) # load 0x1a32ed235d1e5df0 from memory into f31
fnmadd.s f27, f27, f16, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x68eb9f1b04096103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc728b62ec64089d8 # load x3 with value 0xc728b62ec64089d8
sw x3, 0(x2) # store 0xc728b62ec64089d8 in memory
flw f28, 0(x2) # load 0xc728b62ec64089d8 from memory into f28
li x3, 0xe1b1ceefa04ade28 # load x3 with value 0xe1b1ceefa04ade28
sw x3, 0(x2) # store 0xe1b1ceefa04ade28 in memory
flw f31, 0(x2) # load 0xe1b1ceefa04ade28 from memory into f31
li x3, 0x12d9267cb37bb8ef # load x3 with value 0x12d9267cb37bb8ef
sw x3, 0(x2) # store 0x12d9267cb37bb8ef in memory
flw f19, 0(x2) # load 0x12d9267cb37bb8ef from memory into f19
fnmadd.s f28, f28, f31, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x247249bc3ce569e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46313a1d0939129d # load x3 with value 0x46313a1d0939129d
sw x3, 0(x2) # store 0x46313a1d0939129d in memory
flw f29, 0(x2) # load 0x46313a1d0939129d from memory into f29
li x3, 0xfd117abea30a6a67 # load x3 with value 0xfd117abea30a6a67
sw x3, 0(x2) # store 0xfd117abea30a6a67 in memory
flw f13, 0(x2) # load 0xfd117abea30a6a67 from memory into f13
li x3, 0xe62db3db6b992d86 # load x3 with value 0xe62db3db6b992d86
sw x3, 0(x2) # store 0xe62db3db6b992d86 in memory
flw f17, 0(x2) # load 0xe62db3db6b992d86 from memory into f17
fnmadd.s f29, f29, f13, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x6bde35d69777f1b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbcd575a741598fd0 # load x3 with value 0xbcd575a741598fd0
sw x3, 0(x2) # store 0xbcd575a741598fd0 in memory
flw f30, 0(x2) # load 0xbcd575a741598fd0 from memory into f30
li x3, 0xecaff55617636697 # load x3 with value 0xecaff55617636697
sw x3, 0(x2) # store 0xecaff55617636697 in memory
flw f12, 0(x2) # load 0xecaff55617636697 from memory into f12
li x3, 0x6b66fad39cc1febe # load x3 with value 0x6b66fad39cc1febe
sw x3, 0(x2) # store 0x6b66fad39cc1febe in memory
flw f28, 0(x2) # load 0x6b66fad39cc1febe from memory into f28
fnmadd.s f30, f30, f12, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x3ed65f8c45a21e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x941ad5b30b65ec98 # load x3 with value 0x941ad5b30b65ec98
sw x3, 0(x2) # store 0x941ad5b30b65ec98 in memory
flw f31, 0(x2) # load 0x941ad5b30b65ec98 from memory into f31
li x3, 0x1e18bbf5e5902be4 # load x3 with value 0x1e18bbf5e5902be4
sw x3, 0(x2) # store 0x1e18bbf5e5902be4 in memory
flw f19, 0(x2) # load 0x1e18bbf5e5902be4 from memory into f19
li x3, 0x636f100ef8616563 # load x3 with value 0x636f100ef8616563
sw x3, 0(x2) # store 0x636f100ef8616563 in memory
flw f29, 0(x2) # load 0x636f100ef8616563 from memory into f29
fnmadd.s f31, f31, f19, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xf44f87d962b33d5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfeccaf71fbaf7ecc # load x3 with value 0xfeccaf71fbaf7ecc
sw x3, 0(x2) # store 0xfeccaf71fbaf7ecc in memory
flw f20, 0(x2) # load 0xfeccaf71fbaf7ecc from memory into f20
li x3, 0xf0560505d2dff96c # load x3 with value 0xf0560505d2dff96c
sw x3, 0(x2) # store 0xf0560505d2dff96c in memory
flw f0, 0(x2) # load 0xf0560505d2dff96c from memory into f0
li x3, 0xb5508aac6b45b442 # load x3 with value 0xb5508aac6b45b442
sw x3, 0(x2) # store 0xb5508aac6b45b442 in memory
flw f26, 0(x2) # load 0xb5508aac6b45b442 from memory into f26
fnmadd.s f0, f20, f0, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xc5b6deae6de67bc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb174ddbf9e06f539 # load x3 with value 0xb174ddbf9e06f539
sw x3, 0(x2) # store 0xb174ddbf9e06f539 in memory
flw f22, 0(x2) # load 0xb174ddbf9e06f539 from memory into f22
li x3, 0x2dfef0ffcceb41ef # load x3 with value 0x2dfef0ffcceb41ef
sw x3, 0(x2) # store 0x2dfef0ffcceb41ef in memory
flw f1, 0(x2) # load 0x2dfef0ffcceb41ef from memory into f1
li x3, 0x3b11360233d32a44 # load x3 with value 0x3b11360233d32a44
sw x3, 0(x2) # store 0x3b11360233d32a44 in memory
flw f10, 0(x2) # load 0x3b11360233d32a44 from memory into f10
fnmadd.s f1, f22, f1, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x9b6b4219ab1d31b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f44029c019bc3e5 # load x3 with value 0x7f44029c019bc3e5
sw x3, 0(x2) # store 0x7f44029c019bc3e5 in memory
flw f22, 0(x2) # load 0x7f44029c019bc3e5 from memory into f22
li x3, 0xaf7c784f28a4c10 # load x3 with value 0xaf7c784f28a4c10
sw x3, 0(x2) # store 0xaf7c784f28a4c10 in memory
flw f2, 0(x2) # load 0xaf7c784f28a4c10 from memory into f2
li x3, 0x6021753eed96d9af # load x3 with value 0x6021753eed96d9af
sw x3, 0(x2) # store 0x6021753eed96d9af in memory
flw f26, 0(x2) # load 0x6021753eed96d9af from memory into f26
fnmadd.s f2, f22, f2, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0xa9cf6bc3a1691ea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeefbb8bdd9a7ca9e # load x3 with value 0xeefbb8bdd9a7ca9e
sw x3, 0(x2) # store 0xeefbb8bdd9a7ca9e in memory
flw f18, 0(x2) # load 0xeefbb8bdd9a7ca9e from memory into f18
li x3, 0x8466d7981515df4 # load x3 with value 0x8466d7981515df4
sw x3, 0(x2) # store 0x8466d7981515df4 in memory
flw f3, 0(x2) # load 0x8466d7981515df4 from memory into f3
li x3, 0x5de37a749d04953 # load x3 with value 0x5de37a749d04953
sw x3, 0(x2) # store 0x5de37a749d04953 in memory
flw f11, 0(x2) # load 0x5de37a749d04953 from memory into f11
fnmadd.s f3, f18, f3, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x9f173ed896330d30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x898551cfcf62d28d # load x3 with value 0x898551cfcf62d28d
sw x3, 0(x2) # store 0x898551cfcf62d28d in memory
flw f19, 0(x2) # load 0x898551cfcf62d28d from memory into f19
li x3, 0xad32f57587f14f1e # load x3 with value 0xad32f57587f14f1e
sw x3, 0(x2) # store 0xad32f57587f14f1e in memory
flw f4, 0(x2) # load 0xad32f57587f14f1e from memory into f4
li x3, 0x2ebaf0cd1774ae6b # load x3 with value 0x2ebaf0cd1774ae6b
sw x3, 0(x2) # store 0x2ebaf0cd1774ae6b in memory
flw f10, 0(x2) # load 0x2ebaf0cd1774ae6b from memory into f10
fnmadd.s f4, f19, f4, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x67d754d1141f6c7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2792278440071da4 # load x3 with value 0x2792278440071da4
sw x3, 0(x2) # store 0x2792278440071da4 in memory
flw f11, 0(x2) # load 0x2792278440071da4 from memory into f11
li x3, 0x32e75ad997e70a14 # load x3 with value 0x32e75ad997e70a14
sw x3, 0(x2) # store 0x32e75ad997e70a14 in memory
flw f5, 0(x2) # load 0x32e75ad997e70a14 from memory into f5
li x3, 0x8e73a25afedc9045 # load x3 with value 0x8e73a25afedc9045
sw x3, 0(x2) # store 0x8e73a25afedc9045 in memory
flw f27, 0(x2) # load 0x8e73a25afedc9045 from memory into f27
fnmadd.s f5, f11, f5, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x4e0b9918c0268d43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a6ea0a25753710c # load x3 with value 0x6a6ea0a25753710c
sw x3, 0(x2) # store 0x6a6ea0a25753710c in memory
flw f21, 0(x2) # load 0x6a6ea0a25753710c from memory into f21
li x3, 0x9fb41a94eca1968c # load x3 with value 0x9fb41a94eca1968c
sw x3, 0(x2) # store 0x9fb41a94eca1968c in memory
flw f6, 0(x2) # load 0x9fb41a94eca1968c from memory into f6
li x3, 0x788a41c8654b9b22 # load x3 with value 0x788a41c8654b9b22
sw x3, 0(x2) # store 0x788a41c8654b9b22 in memory
flw f6, 0(x2) # load 0x788a41c8654b9b22 from memory into f6
fnmadd.s f6, f21, f6, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xeda10e1b88618797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd01dbf884e1ac56a # load x3 with value 0xd01dbf884e1ac56a
sw x3, 0(x2) # store 0xd01dbf884e1ac56a in memory
flw f2, 0(x2) # load 0xd01dbf884e1ac56a from memory into f2
li x3, 0x82166bc468495b4f # load x3 with value 0x82166bc468495b4f
sw x3, 0(x2) # store 0x82166bc468495b4f in memory
flw f7, 0(x2) # load 0x82166bc468495b4f from memory into f7
li x3, 0xb8d7ed6047941cc1 # load x3 with value 0xb8d7ed6047941cc1
sw x3, 0(x2) # store 0xb8d7ed6047941cc1 in memory
flw f16, 0(x2) # load 0xb8d7ed6047941cc1 from memory into f16
fnmadd.s f7, f2, f7, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xe9398f820ef1ec86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8aed69ec1b4498a1 # load x3 with value 0x8aed69ec1b4498a1
sw x3, 0(x2) # store 0x8aed69ec1b4498a1 in memory
flw f16, 0(x2) # load 0x8aed69ec1b4498a1 from memory into f16
li x3, 0x825d80dc8345f976 # load x3 with value 0x825d80dc8345f976
sw x3, 0(x2) # store 0x825d80dc8345f976 in memory
flw f8, 0(x2) # load 0x825d80dc8345f976 from memory into f8
li x3, 0xc5d84e52700d23f9 # load x3 with value 0xc5d84e52700d23f9
sw x3, 0(x2) # store 0xc5d84e52700d23f9 in memory
flw f9, 0(x2) # load 0xc5d84e52700d23f9 from memory into f9
fnmadd.s f8, f16, f8, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x64248a9dcd723a47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23816dc89ac9b16e # load x3 with value 0x23816dc89ac9b16e
sw x3, 0(x2) # store 0x23816dc89ac9b16e in memory
flw f27, 0(x2) # load 0x23816dc89ac9b16e from memory into f27
li x3, 0x929ea9b2264cae31 # load x3 with value 0x929ea9b2264cae31
sw x3, 0(x2) # store 0x929ea9b2264cae31 in memory
flw f9, 0(x2) # load 0x929ea9b2264cae31 from memory into f9
li x3, 0x372747cc9f6e4655 # load x3 with value 0x372747cc9f6e4655
sw x3, 0(x2) # store 0x372747cc9f6e4655 in memory
flw f2, 0(x2) # load 0x372747cc9f6e4655 from memory into f2
fnmadd.s f9, f27, f9, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xa439d9925277e21a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6e141b194095e42 # load x3 with value 0xc6e141b194095e42
sw x3, 0(x2) # store 0xc6e141b194095e42 in memory
flw f20, 0(x2) # load 0xc6e141b194095e42 from memory into f20
li x3, 0x469bdda43563c2c # load x3 with value 0x469bdda43563c2c
sw x3, 0(x2) # store 0x469bdda43563c2c in memory
flw f10, 0(x2) # load 0x469bdda43563c2c from memory into f10
li x3, 0x51861d1b173485c # load x3 with value 0x51861d1b173485c
sw x3, 0(x2) # store 0x51861d1b173485c in memory
flw f7, 0(x2) # load 0x51861d1b173485c from memory into f7
fnmadd.s f10, f20, f10, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0xdbe10c19a7bd6987 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d183fd7991be3c5 # load x3 with value 0x3d183fd7991be3c5
sw x3, 0(x2) # store 0x3d183fd7991be3c5 in memory
flw f25, 0(x2) # load 0x3d183fd7991be3c5 from memory into f25
li x3, 0x44e3460f567c7246 # load x3 with value 0x44e3460f567c7246
sw x3, 0(x2) # store 0x44e3460f567c7246 in memory
flw f11, 0(x2) # load 0x44e3460f567c7246 from memory into f11
li x3, 0x6e56867e550d3490 # load x3 with value 0x6e56867e550d3490
sw x3, 0(x2) # store 0x6e56867e550d3490 in memory
flw f5, 0(x2) # load 0x6e56867e550d3490 from memory into f5
fnmadd.s f11, f25, f11, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xf5b48363288af733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78cfc3b1ff568a32 # load x3 with value 0x78cfc3b1ff568a32
sw x3, 0(x2) # store 0x78cfc3b1ff568a32 in memory
flw f23, 0(x2) # load 0x78cfc3b1ff568a32 from memory into f23
li x3, 0x7ad5fd192676eb3e # load x3 with value 0x7ad5fd192676eb3e
sw x3, 0(x2) # store 0x7ad5fd192676eb3e in memory
flw f12, 0(x2) # load 0x7ad5fd192676eb3e from memory into f12
li x3, 0xba3b819324a4ca21 # load x3 with value 0xba3b819324a4ca21
sw x3, 0(x2) # store 0xba3b819324a4ca21 in memory
flw f9, 0(x2) # load 0xba3b819324a4ca21 from memory into f9
fnmadd.s f12, f23, f12, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x0ab2475ea4d7794f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1da2ba02f64226e8 # load x3 with value 0x1da2ba02f64226e8
sw x3, 0(x2) # store 0x1da2ba02f64226e8 in memory
flw f23, 0(x2) # load 0x1da2ba02f64226e8 from memory into f23
li x3, 0xc63b1e2f986fabde # load x3 with value 0xc63b1e2f986fabde
sw x3, 0(x2) # store 0xc63b1e2f986fabde in memory
flw f13, 0(x2) # load 0xc63b1e2f986fabde from memory into f13
li x3, 0xfcfb35c042dfb832 # load x3 with value 0xfcfb35c042dfb832
sw x3, 0(x2) # store 0xfcfb35c042dfb832 in memory
flw f6, 0(x2) # load 0xfcfb35c042dfb832 from memory into f6
fnmadd.s f13, f23, f13, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xc3583c6f27558abe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1833ffe40d4f6ddc # load x3 with value 0x1833ffe40d4f6ddc
sw x3, 0(x2) # store 0x1833ffe40d4f6ddc in memory
flw f23, 0(x2) # load 0x1833ffe40d4f6ddc from memory into f23
li x3, 0xf5ae6a992158f120 # load x3 with value 0xf5ae6a992158f120
sw x3, 0(x2) # store 0xf5ae6a992158f120 in memory
flw f14, 0(x2) # load 0xf5ae6a992158f120 from memory into f14
li x3, 0xb33b2d3ed800d69b # load x3 with value 0xb33b2d3ed800d69b
sw x3, 0(x2) # store 0xb33b2d3ed800d69b in memory
flw f16, 0(x2) # load 0xb33b2d3ed800d69b from memory into f16
fnmadd.s f14, f23, f14, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x5f9fdc8c5ec2142a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c5de49bb9f4cb9f # load x3 with value 0x8c5de49bb9f4cb9f
sw x3, 0(x2) # store 0x8c5de49bb9f4cb9f in memory
flw f21, 0(x2) # load 0x8c5de49bb9f4cb9f from memory into f21
li x3, 0x2e94d2a7868dccba # load x3 with value 0x2e94d2a7868dccba
sw x3, 0(x2) # store 0x2e94d2a7868dccba in memory
flw f15, 0(x2) # load 0x2e94d2a7868dccba from memory into f15
li x3, 0x25fa6ee030b5ba9d # load x3 with value 0x25fa6ee030b5ba9d
sw x3, 0(x2) # store 0x25fa6ee030b5ba9d in memory
flw f20, 0(x2) # load 0x25fa6ee030b5ba9d from memory into f20
fnmadd.s f15, f21, f15, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0xe3e45c9dadd994cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8ef8fb4bdd1d12d6 # load x3 with value 0x8ef8fb4bdd1d12d6
sw x3, 0(x2) # store 0x8ef8fb4bdd1d12d6 in memory
flw f28, 0(x2) # load 0x8ef8fb4bdd1d12d6 from memory into f28
li x3, 0x3e71b4bbd5ad15a9 # load x3 with value 0x3e71b4bbd5ad15a9
sw x3, 0(x2) # store 0x3e71b4bbd5ad15a9 in memory
flw f16, 0(x2) # load 0x3e71b4bbd5ad15a9 from memory into f16
li x3, 0x5cb8a0e15e756855 # load x3 with value 0x5cb8a0e15e756855
sw x3, 0(x2) # store 0x5cb8a0e15e756855 in memory
flw f31, 0(x2) # load 0x5cb8a0e15e756855 from memory into f31
fnmadd.s f16, f28, f16, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x4efa531e648498ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd8c5c8f3085e303 # load x3 with value 0xdd8c5c8f3085e303
sw x3, 0(x2) # store 0xdd8c5c8f3085e303 in memory
flw f14, 0(x2) # load 0xdd8c5c8f3085e303 from memory into f14
li x3, 0x83925ce0bf4ef33e # load x3 with value 0x83925ce0bf4ef33e
sw x3, 0(x2) # store 0x83925ce0bf4ef33e in memory
flw f17, 0(x2) # load 0x83925ce0bf4ef33e from memory into f17
li x3, 0x547b72f8035672fd # load x3 with value 0x547b72f8035672fd
sw x3, 0(x2) # store 0x547b72f8035672fd in memory
flw f2, 0(x2) # load 0x547b72f8035672fd from memory into f2
fnmadd.s f17, f14, f17, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x545bc3577a451635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51c9e39af7a5c67a # load x3 with value 0x51c9e39af7a5c67a
sw x3, 0(x2) # store 0x51c9e39af7a5c67a in memory
flw f4, 0(x2) # load 0x51c9e39af7a5c67a from memory into f4
li x3, 0x7d70e585ebb01e3c # load x3 with value 0x7d70e585ebb01e3c
sw x3, 0(x2) # store 0x7d70e585ebb01e3c in memory
flw f18, 0(x2) # load 0x7d70e585ebb01e3c from memory into f18
li x3, 0xe2206c0778a35993 # load x3 with value 0xe2206c0778a35993
sw x3, 0(x2) # store 0xe2206c0778a35993 in memory
flw f25, 0(x2) # load 0xe2206c0778a35993 from memory into f25
fnmadd.s f18, f4, f18, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x4cff24e89c044131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb742bf94b4b8516 # load x3 with value 0xb742bf94b4b8516
sw x3, 0(x2) # store 0xb742bf94b4b8516 in memory
flw f26, 0(x2) # load 0xb742bf94b4b8516 from memory into f26
li x3, 0x7be6f58ff2976665 # load x3 with value 0x7be6f58ff2976665
sw x3, 0(x2) # store 0x7be6f58ff2976665 in memory
flw f19, 0(x2) # load 0x7be6f58ff2976665 from memory into f19
li x3, 0xf30119e06d8163ab # load x3 with value 0xf30119e06d8163ab
sw x3, 0(x2) # store 0xf30119e06d8163ab in memory
flw f27, 0(x2) # load 0xf30119e06d8163ab from memory into f27
fnmadd.s f19, f26, f19, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x019a13a6167c3b79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf89492eea9d475fc # load x3 with value 0xf89492eea9d475fc
sw x3, 0(x2) # store 0xf89492eea9d475fc in memory
flw f8, 0(x2) # load 0xf89492eea9d475fc from memory into f8
li x3, 0xd7374ef5226057b5 # load x3 with value 0xd7374ef5226057b5
sw x3, 0(x2) # store 0xd7374ef5226057b5 in memory
flw f20, 0(x2) # load 0xd7374ef5226057b5 from memory into f20
li x3, 0x76926fb6ca304c15 # load x3 with value 0x76926fb6ca304c15
sw x3, 0(x2) # store 0x76926fb6ca304c15 in memory
flw f13, 0(x2) # load 0x76926fb6ca304c15 from memory into f13
fnmadd.s f20, f8, f20, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0xb1fe30dfc00d030a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a0cd326087c84b # load x3 with value 0x8a0cd326087c84b
sw x3, 0(x2) # store 0x8a0cd326087c84b in memory
flw f16, 0(x2) # load 0x8a0cd326087c84b from memory into f16
li x3, 0xf2b368c7a4c79526 # load x3 with value 0xf2b368c7a4c79526
sw x3, 0(x2) # store 0xf2b368c7a4c79526 in memory
flw f21, 0(x2) # load 0xf2b368c7a4c79526 from memory into f21
li x3, 0x52d462600e869dc8 # load x3 with value 0x52d462600e869dc8
sw x3, 0(x2) # store 0x52d462600e869dc8 in memory
flw f23, 0(x2) # load 0x52d462600e869dc8 from memory into f23
fnmadd.s f21, f16, f21, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x458af1874f80054d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69937023f81751f # load x3 with value 0x69937023f81751f
sw x3, 0(x2) # store 0x69937023f81751f in memory
flw f6, 0(x2) # load 0x69937023f81751f from memory into f6
li x3, 0xb648543871efeb49 # load x3 with value 0xb648543871efeb49
sw x3, 0(x2) # store 0xb648543871efeb49 in memory
flw f22, 0(x2) # load 0xb648543871efeb49 from memory into f22
li x3, 0xb2837cebc8dac822 # load x3 with value 0xb2837cebc8dac822
sw x3, 0(x2) # store 0xb2837cebc8dac822 in memory
flw f10, 0(x2) # load 0xb2837cebc8dac822 from memory into f10
fnmadd.s f22, f6, f22, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0xcbb4983fddc6a2a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ade82ac6cadf80c # load x3 with value 0x6ade82ac6cadf80c
sw x3, 0(x2) # store 0x6ade82ac6cadf80c in memory
flw f5, 0(x2) # load 0x6ade82ac6cadf80c from memory into f5
li x3, 0x81d8cd3e6f260576 # load x3 with value 0x81d8cd3e6f260576
sw x3, 0(x2) # store 0x81d8cd3e6f260576 in memory
flw f23, 0(x2) # load 0x81d8cd3e6f260576 from memory into f23
li x3, 0xe941002425ee8d70 # load x3 with value 0xe941002425ee8d70
sw x3, 0(x2) # store 0xe941002425ee8d70 in memory
flw f20, 0(x2) # load 0xe941002425ee8d70 from memory into f20
fnmadd.s f23, f5, f23, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xcae56eb73165a047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff12a6c3f1713ec1 # load x3 with value 0xff12a6c3f1713ec1
sw x3, 0(x2) # store 0xff12a6c3f1713ec1 in memory
flw f19, 0(x2) # load 0xff12a6c3f1713ec1 from memory into f19
li x3, 0xe6440fde242a8823 # load x3 with value 0xe6440fde242a8823
sw x3, 0(x2) # store 0xe6440fde242a8823 in memory
flw f24, 0(x2) # load 0xe6440fde242a8823 from memory into f24
li x3, 0xa9ba85f582d6bbdb # load x3 with value 0xa9ba85f582d6bbdb
sw x3, 0(x2) # store 0xa9ba85f582d6bbdb in memory
flw f26, 0(x2) # load 0xa9ba85f582d6bbdb from memory into f26
fnmadd.s f24, f19, f24, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xdd20853164547b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f0f813b2f1fbeed # load x3 with value 0x6f0f813b2f1fbeed
sw x3, 0(x2) # store 0x6f0f813b2f1fbeed in memory
flw f29, 0(x2) # load 0x6f0f813b2f1fbeed from memory into f29
li x3, 0xe45c52d0b3a8a056 # load x3 with value 0xe45c52d0b3a8a056
sw x3, 0(x2) # store 0xe45c52d0b3a8a056 in memory
flw f25, 0(x2) # load 0xe45c52d0b3a8a056 from memory into f25
li x3, 0xba9d8e6a6f60bcac # load x3 with value 0xba9d8e6a6f60bcac
sw x3, 0(x2) # store 0xba9d8e6a6f60bcac in memory
flw f31, 0(x2) # load 0xba9d8e6a6f60bcac from memory into f31
fnmadd.s f25, f29, f25, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xed0fbc3dbfe9185b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8baf59bb0857d492 # load x3 with value 0x8baf59bb0857d492
sw x3, 0(x2) # store 0x8baf59bb0857d492 in memory
flw f19, 0(x2) # load 0x8baf59bb0857d492 from memory into f19
li x3, 0x7ebf04ee1be552ed # load x3 with value 0x7ebf04ee1be552ed
sw x3, 0(x2) # store 0x7ebf04ee1be552ed in memory
flw f26, 0(x2) # load 0x7ebf04ee1be552ed from memory into f26
li x3, 0x79a968c7bacb345b # load x3 with value 0x79a968c7bacb345b
sw x3, 0(x2) # store 0x79a968c7bacb345b in memory
flw f27, 0(x2) # load 0x79a968c7bacb345b from memory into f27
fnmadd.s f26, f19, f26, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0x38a673f625399ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8eda4dd8b10027c # load x3 with value 0xd8eda4dd8b10027c
sw x3, 0(x2) # store 0xd8eda4dd8b10027c in memory
flw f2, 0(x2) # load 0xd8eda4dd8b10027c from memory into f2
li x3, 0x21c1b2555d4580ea # load x3 with value 0x21c1b2555d4580ea
sw x3, 0(x2) # store 0x21c1b2555d4580ea in memory
flw f27, 0(x2) # load 0x21c1b2555d4580ea from memory into f27
li x3, 0x89ae7b13dd797d9c # load x3 with value 0x89ae7b13dd797d9c
sw x3, 0(x2) # store 0x89ae7b13dd797d9c in memory
flw f24, 0(x2) # load 0x89ae7b13dd797d9c from memory into f24
fnmadd.s f27, f2, f27, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x5abc065145e5bc02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe08896df9c19714a # load x3 with value 0xe08896df9c19714a
sw x3, 0(x2) # store 0xe08896df9c19714a in memory
flw f5, 0(x2) # load 0xe08896df9c19714a from memory into f5
li x3, 0xb8c9877541029d35 # load x3 with value 0xb8c9877541029d35
sw x3, 0(x2) # store 0xb8c9877541029d35 in memory
flw f28, 0(x2) # load 0xb8c9877541029d35 from memory into f28
li x3, 0x9604e9539a743c5 # load x3 with value 0x9604e9539a743c5
sw x3, 0(x2) # store 0x9604e9539a743c5 in memory
flw f18, 0(x2) # load 0x9604e9539a743c5 from memory into f18
fnmadd.s f28, f5, f28, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x4fddae765ab7d0e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14ab075f0cb65e3e # load x3 with value 0x14ab075f0cb65e3e
sw x3, 0(x2) # store 0x14ab075f0cb65e3e in memory
flw f18, 0(x2) # load 0x14ab075f0cb65e3e from memory into f18
li x3, 0x28a27c1417344152 # load x3 with value 0x28a27c1417344152
sw x3, 0(x2) # store 0x28a27c1417344152 in memory
flw f29, 0(x2) # load 0x28a27c1417344152 from memory into f29
li x3, 0x4f10ac8f7870f807 # load x3 with value 0x4f10ac8f7870f807
sw x3, 0(x2) # store 0x4f10ac8f7870f807 in memory
flw f8, 0(x2) # load 0x4f10ac8f7870f807 from memory into f8
fnmadd.s f29, f18, f29, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x003914759fc9bf45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd85515f578c4133 # load x3 with value 0xbd85515f578c4133
sw x3, 0(x2) # store 0xbd85515f578c4133 in memory
flw f3, 0(x2) # load 0xbd85515f578c4133 from memory into f3
li x3, 0x8a60a8a6b2473538 # load x3 with value 0x8a60a8a6b2473538
sw x3, 0(x2) # store 0x8a60a8a6b2473538 in memory
flw f30, 0(x2) # load 0x8a60a8a6b2473538 from memory into f30
li x3, 0xeb54c8c675938857 # load x3 with value 0xeb54c8c675938857
sw x3, 0(x2) # store 0xeb54c8c675938857 in memory
flw f21, 0(x2) # load 0xeb54c8c675938857 from memory into f21
fnmadd.s f30, f3, f30, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x5a5201f7314f3292 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x682e1a81700b2c2e # load x3 with value 0x682e1a81700b2c2e
sw x3, 0(x2) # store 0x682e1a81700b2c2e in memory
flw f3, 0(x2) # load 0x682e1a81700b2c2e from memory into f3
li x3, 0x512f4826cfc1e1ad # load x3 with value 0x512f4826cfc1e1ad
sw x3, 0(x2) # store 0x512f4826cfc1e1ad in memory
flw f31, 0(x2) # load 0x512f4826cfc1e1ad from memory into f31
li x3, 0x338e9749f58173ab # load x3 with value 0x338e9749f58173ab
sw x3, 0(x2) # store 0x338e9749f58173ab in memory
flw f7, 0(x2) # load 0x338e9749f58173ab from memory into f7
fnmadd.s f31, f3, f31, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x9, 0x482baea0e1d252f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xbc4e7a440dfd98c3 # load x3 with value 0xbc4e7a440dfd98c3
sw x3, 0(x2) # store 0xbc4e7a440dfd98c3 in memory
flw f19, 0(x2) # load 0xbc4e7a440dfd98c3 from memory into f19
li x3, 0x7bb53996bac219bf # load x3 with value 0x7bb53996bac219bf
sw x3, 0(x2) # store 0x7bb53996bac219bf in memory
flw f4, 0(x2) # load 0x7bb53996bac219bf from memory into f4
fnmadd.s f9, f15, f19, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x8, 0x2dba191b095a15de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x3a0e14704ad4078b # load x3 with value 0x3a0e14704ad4078b
sw x3, 0(x2) # store 0x3a0e14704ad4078b in memory
flw f31, 0(x2) # load 0x3a0e14704ad4078b from memory into f31
li x3, 0xaecf45b7f3d64f4e # load x3 with value 0xaecf45b7f3d64f4e
sw x3, 0(x2) # store 0xaecf45b7f3d64f4e in memory
flw f1, 0(x2) # load 0xaecf45b7f3d64f4e from memory into f1
fnmadd.s f8, f7, f31, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x21, 0xb3281aa1ff280e1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x2414eb660f3525e5 # load x3 with value 0x2414eb660f3525e5
sw x3, 0(x2) # store 0x2414eb660f3525e5 in memory
flw f17, 0(x2) # load 0x2414eb660f3525e5 from memory into f17
li x3, 0x9524e93d78e8e34a # load x3 with value 0x9524e93d78e8e34a
sw x3, 0(x2) # store 0x9524e93d78e8e34a in memory
flw f12, 0(x2) # load 0x9524e93d78e8e34a from memory into f12
fnmadd.s f21, f18, f17, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x6, 0xf2e89cabe4a06365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x454b8f8432bad339 # load x3 with value 0x454b8f8432bad339
sw x3, 0(x2) # store 0x454b8f8432bad339 in memory
flw f3, 0(x2) # load 0x454b8f8432bad339 from memory into f3
li x3, 0x796c40710427af97 # load x3 with value 0x796c40710427af97
sw x3, 0(x2) # store 0x796c40710427af97 in memory
flw f16, 0(x2) # load 0x796c40710427af97 from memory into f16
fnmadd.s f6, f10, f3, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x8, 0xa2e6c0817f4c777e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x52efce81ea807f9d # load x3 with value 0x52efce81ea807f9d
sw x3, 0(x2) # store 0x52efce81ea807f9d in memory
flw f2, 0(x2) # load 0x52efce81ea807f9d from memory into f2
li x3, 0x8bf0ea9287526eed # load x3 with value 0x8bf0ea9287526eed
sw x3, 0(x2) # store 0x8bf0ea9287526eed in memory
flw f12, 0(x2) # load 0x8bf0ea9287526eed from memory into f12
fnmadd.s f8, f15, f2, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x13, 0x86a760ce3f81a1ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x2724889e23c7fc62 # load x3 with value 0x2724889e23c7fc62
sw x3, 0(x2) # store 0x2724889e23c7fc62 in memory
flw f31, 0(x2) # load 0x2724889e23c7fc62 from memory into f31
li x3, 0x11b4077970b660fe # load x3 with value 0x11b4077970b660fe
sw x3, 0(x2) # store 0x11b4077970b660fe in memory
flw f8, 0(x2) # load 0x11b4077970b660fe from memory into f8
fnmadd.s f13, f4, f31, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x21, 0x36ddaf95d4488a39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x42a83a69787b4823 # load x3 with value 0x42a83a69787b4823
sw x3, 0(x2) # store 0x42a83a69787b4823 in memory
flw f24, 0(x2) # load 0x42a83a69787b4823 from memory into f24
li x3, 0xa4bc298e9b2e2411 # load x3 with value 0xa4bc298e9b2e2411
sw x3, 0(x2) # store 0xa4bc298e9b2e2411 in memory
flw f23, 0(x2) # load 0xa4bc298e9b2e2411 from memory into f23
fnmadd.s f21, f17, f24, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x2, 0x51e550c0f49556a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xec2df9a6c40cb102 # load x3 with value 0xec2df9a6c40cb102
sw x3, 0(x2) # store 0xec2df9a6c40cb102 in memory
flw f31, 0(x2) # load 0xec2df9a6c40cb102 from memory into f31
li x3, 0xd5c22dd67907ea69 # load x3 with value 0xd5c22dd67907ea69
sw x3, 0(x2) # store 0xd5c22dd67907ea69 in memory
flw f26, 0(x2) # load 0xd5c22dd67907ea69 from memory into f26
fnmadd.s f2, f15, f31, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x30, 0xd6d0bb9a13ae8023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0xea8f8df7cda16201 # load x3 with value 0xea8f8df7cda16201
sw x3, 0(x2) # store 0xea8f8df7cda16201 in memory
flw f17, 0(x2) # load 0xea8f8df7cda16201 from memory into f17
li x3, 0x54b0e8a689f164d # load x3 with value 0x54b0e8a689f164d
sw x3, 0(x2) # store 0x54b0e8a689f164d in memory
flw f23, 0(x2) # load 0x54b0e8a689f164d from memory into f23
fnmadd.s f30, f15, f17, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x28, 0x903eb74f3d877d0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x81a489125746659d # load x3 with value 0x81a489125746659d
sw x3, 0(x2) # store 0x81a489125746659d in memory
flw f3, 0(x2) # load 0x81a489125746659d from memory into f3
li x3, 0x1ace7089914e632e # load x3 with value 0x1ace7089914e632e
sw x3, 0(x2) # store 0x1ace7089914e632e in memory
flw f27, 0(x2) # load 0x1ace7089914e632e from memory into f27
fnmadd.s f28, f18, f3, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x18, 0xfd9f698fc6ca0441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x49ca60e87d540393 # load x3 with value 0x49ca60e87d540393
sw x3, 0(x2) # store 0x49ca60e87d540393 in memory
flw f7, 0(x2) # load 0x49ca60e87d540393 from memory into f7
li x3, 0x89dd24d4f6222bc4 # load x3 with value 0x89dd24d4f6222bc4
sw x3, 0(x2) # store 0x89dd24d4f6222bc4 in memory
flw f22, 0(x2) # load 0x89dd24d4f6222bc4 from memory into f22
fnmadd.s f18, f20, f7, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x13, 0xc2c7fd31760bb09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x716bb3009c521c20 # load x3 with value 0x716bb3009c521c20
sw x3, 0(x2) # store 0x716bb3009c521c20 in memory
flw f18, 0(x2) # load 0x716bb3009c521c20 from memory into f18
li x3, 0xdcbf287cf4ce488e # load x3 with value 0xdcbf287cf4ce488e
sw x3, 0(x2) # store 0xdcbf287cf4ce488e in memory
flw f4, 0(x2) # load 0xdcbf287cf4ce488e from memory into f4
fnmadd.s f13, f2, f18, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x12, 0x141e5fd6434c8c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xd0fe3910b257be39 # load x3 with value 0xd0fe3910b257be39
sw x3, 0(x2) # store 0xd0fe3910b257be39 in memory
flw f30, 0(x2) # load 0xd0fe3910b257be39 from memory into f30
li x3, 0xfa34c80ff3bec918 # load x3 with value 0xfa34c80ff3bec918
sw x3, 0(x2) # store 0xfa34c80ff3bec918 in memory
flw f9, 0(x2) # load 0xfa34c80ff3bec918 from memory into f9
fnmadd.s f12, f1, f30, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x28, 0x30aef410e590e955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xfff55dbdea7ef87e # load x3 with value 0xfff55dbdea7ef87e
sw x3, 0(x2) # store 0xfff55dbdea7ef87e in memory
flw f25, 0(x2) # load 0xfff55dbdea7ef87e from memory into f25
li x3, 0x4ca1b2bce9dc6b23 # load x3 with value 0x4ca1b2bce9dc6b23
sw x3, 0(x2) # store 0x4ca1b2bce9dc6b23 in memory
flw f3, 0(x2) # load 0x4ca1b2bce9dc6b23 from memory into f3
fnmadd.s f28, f19, f25, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x26, 0x880a417a27cfc6fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x6b188b5ab0227cb # load x3 with value 0x6b188b5ab0227cb
sw x3, 0(x2) # store 0x6b188b5ab0227cb in memory
flw f2, 0(x2) # load 0x6b188b5ab0227cb from memory into f2
li x3, 0x22cca38a01f5a7e0 # load x3 with value 0x22cca38a01f5a7e0
sw x3, 0(x2) # store 0x22cca38a01f5a7e0 in memory
flw f18, 0(x2) # load 0x22cca38a01f5a7e0 from memory into f18
fnmadd.s f26, f4, f2, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x10, 0x0e8c8138137cebf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x62d8a56eb7781626 # load x3 with value 0x62d8a56eb7781626
sw x3, 0(x2) # store 0x62d8a56eb7781626 in memory
flw f26, 0(x2) # load 0x62d8a56eb7781626 from memory into f26
li x3, 0x2064b035c892f3fe # load x3 with value 0x2064b035c892f3fe
sw x3, 0(x2) # store 0x2064b035c892f3fe in memory
flw f23, 0(x2) # load 0x2064b035c892f3fe from memory into f23
fnmadd.s f10, f19, f26, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x2, 0xa8ccc79d367d0e26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xd5f1bbb532ae8293 # load x3 with value 0xd5f1bbb532ae8293
sw x3, 0(x2) # store 0xd5f1bbb532ae8293 in memory
flw f16, 0(x2) # load 0xd5f1bbb532ae8293 from memory into f16
li x3, 0x752b906c44fcc4eb # load x3 with value 0x752b906c44fcc4eb
sw x3, 0(x2) # store 0x752b906c44fcc4eb in memory
flw f17, 0(x2) # load 0x752b906c44fcc4eb from memory into f17
fnmadd.s f2, f31, f16, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x28, 0x77207750d56641a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x631ee00cc56d181c # load x3 with value 0x631ee00cc56d181c
sw x3, 0(x2) # store 0x631ee00cc56d181c in memory
flw f15, 0(x2) # load 0x631ee00cc56d181c from memory into f15
li x3, 0xe3c1bba066d41b7b # load x3 with value 0xe3c1bba066d41b7b
sw x3, 0(x2) # store 0xe3c1bba066d41b7b in memory
flw f29, 0(x2) # load 0xe3c1bba066d41b7b from memory into f29
fnmadd.s f28, f24, f15, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x22, 0x041a2d29c249004d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x63e9e32ffffcadf3 # load x3 with value 0x63e9e32ffffcadf3
sw x3, 0(x2) # store 0x63e9e32ffffcadf3 in memory
flw f5, 0(x2) # load 0x63e9e32ffffcadf3 from memory into f5
li x3, 0x28ec2a58c853079f # load x3 with value 0x28ec2a58c853079f
sw x3, 0(x2) # store 0x28ec2a58c853079f in memory
flw f19, 0(x2) # load 0x28ec2a58c853079f from memory into f19
fnmadd.s f22, f25, f5, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x2, 0x94214ee7ee79fbf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0xe7150c55b23b40d3 # load x3 with value 0xe7150c55b23b40d3
sw x3, 0(x2) # store 0xe7150c55b23b40d3 in memory
flw f8, 0(x2) # load 0xe7150c55b23b40d3 from memory into f8
li x3, 0x83a32ec1d4047cdd # load x3 with value 0x83a32ec1d4047cdd
sw x3, 0(x2) # store 0x83a32ec1d4047cdd in memory
flw f3, 0(x2) # load 0x83a32ec1d4047cdd from memory into f3
fnmadd.s f2, f22, f8, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x20, 0x62fee153f08d72b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xd078cf33215906ac # load x3 with value 0xd078cf33215906ac
sw x3, 0(x2) # store 0xd078cf33215906ac in memory
flw f9, 0(x2) # load 0xd078cf33215906ac from memory into f9
li x3, 0x454720539d611f24 # load x3 with value 0x454720539d611f24
sw x3, 0(x2) # store 0x454720539d611f24 in memory
flw f6, 0(x2) # load 0x454720539d611f24 from memory into f6
fnmadd.s f20, f28, f9, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x22, 0x22f81c9460f18488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x4731f53340e1866a # load x3 with value 0x4731f53340e1866a
sw x3, 0(x2) # store 0x4731f53340e1866a in memory
flw f29, 0(x2) # load 0x4731f53340e1866a from memory into f29
li x3, 0x31b4d41afbc39087 # load x3 with value 0x31b4d41afbc39087
sw x3, 0(x2) # store 0x31b4d41afbc39087 in memory
flw f20, 0(x2) # load 0x31b4d41afbc39087 from memory into f20
fnmadd.s f22, f16, f29, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x3, 0xbea14a19cf4ac7d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x9107d87b1e7d91fc # load x3 with value 0x9107d87b1e7d91fc
sw x3, 0(x2) # store 0x9107d87b1e7d91fc in memory
flw f19, 0(x2) # load 0x9107d87b1e7d91fc from memory into f19
li x3, 0xf054355c65591f7c # load x3 with value 0xf054355c65591f7c
sw x3, 0(x2) # store 0xf054355c65591f7c in memory
flw f18, 0(x2) # load 0xf054355c65591f7c from memory into f18
fnmadd.s f3, f4, f19, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x8, 0x6cf9ac6e3f3533c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x6fb7f20b28be3020 # load x3 with value 0x6fb7f20b28be3020
sw x3, 0(x2) # store 0x6fb7f20b28be3020 in memory
flw f23, 0(x2) # load 0x6fb7f20b28be3020 from memory into f23
li x3, 0x29eb52760e3f39b4 # load x3 with value 0x29eb52760e3f39b4
sw x3, 0(x2) # store 0x29eb52760e3f39b4 in memory
flw f4, 0(x2) # load 0x29eb52760e3f39b4 from memory into f4
fnmadd.s f8, f24, f23, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x17, 0xc88eb621f616488b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x1b4323df6155daee # load x3 with value 0x1b4323df6155daee
sw x3, 0(x2) # store 0x1b4323df6155daee in memory
flw f9, 0(x2) # load 0x1b4323df6155daee from memory into f9
li x3, 0x21e04a4eac8f38d6 # load x3 with value 0x21e04a4eac8f38d6
sw x3, 0(x2) # store 0x21e04a4eac8f38d6 in memory
flw f4, 0(x2) # load 0x21e04a4eac8f38d6 from memory into f4
fnmadd.s f17, f13, f9, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x30, 0x43d792a98ef0dac6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xeca226188dcb19a2 # load x3 with value 0xeca226188dcb19a2
sw x3, 0(x2) # store 0xeca226188dcb19a2 in memory
flw f4, 0(x2) # load 0xeca226188dcb19a2 from memory into f4
li x3, 0x34525373b45eac79 # load x3 with value 0x34525373b45eac79
sw x3, 0(x2) # store 0x34525373b45eac79 in memory
flw f9, 0(x2) # load 0x34525373b45eac79 from memory into f9
fnmadd.s f30, f2, f4, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x12, 0x990c7d43ed146501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x636fef1acf741049 # load x3 with value 0x636fef1acf741049
sw x3, 0(x2) # store 0x636fef1acf741049 in memory
flw f29, 0(x2) # load 0x636fef1acf741049 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xb5c5d7ad86047562 # load x3 with value 0xb5c5d7ad86047562
sw x3, 0(x2) # store 0xb5c5d7ad86047562 in memory
flw f16, 0(x2) # load 0xb5c5d7ad86047562 from memory into f16
fnmadd.s f12, f29, f31, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x4, 0xb16ba2e0e2e974bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc0ec5b5b0ce65f2 # load x3 with value 0xdc0ec5b5b0ce65f2
sw x3, 0(x2) # store 0xdc0ec5b5b0ce65f2 in memory
flw f2, 0(x2) # load 0xdc0ec5b5b0ce65f2 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xb8cf87e14ce4ae6d # load x3 with value 0xb8cf87e14ce4ae6d
sw x3, 0(x2) # store 0xb8cf87e14ce4ae6d in memory
flw f22, 0(x2) # load 0xb8cf87e14ce4ae6d from memory into f22
fnmadd.s f4, f2, f16, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x28, 0x3461b4ab339ea8e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef818d2cfc5cc8ef # load x3 with value 0xef818d2cfc5cc8ef
sw x3, 0(x2) # store 0xef818d2cfc5cc8ef in memory
flw f27, 0(x2) # load 0xef818d2cfc5cc8ef from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x8e860aba2684d202 # load x3 with value 0x8e860aba2684d202
sw x3, 0(x2) # store 0x8e860aba2684d202 in memory
flw f16, 0(x2) # load 0x8e860aba2684d202 from memory into f16
fnmadd.s f28, f27, f13, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x24, 0xf470d86b1ffbf68a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3e58102be0c7876 # load x3 with value 0xd3e58102be0c7876
sw x3, 0(x2) # store 0xd3e58102be0c7876 in memory
flw f3, 0(x2) # load 0xd3e58102be0c7876 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0xbe38ff7391645855 # load x3 with value 0xbe38ff7391645855
sw x3, 0(x2) # store 0xbe38ff7391645855 in memory
flw f1, 0(x2) # load 0xbe38ff7391645855 from memory into f1
fnmadd.s f24, f3, f30, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x26, 0xc8b60f828af44b14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef51d75845693501 # load x3 with value 0xef51d75845693501
sw x3, 0(x2) # store 0xef51d75845693501 in memory
flw f19, 0(x2) # load 0xef51d75845693501 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0xca40a9dcd618dbac # load x3 with value 0xca40a9dcd618dbac
sw x3, 0(x2) # store 0xca40a9dcd618dbac in memory
flw f28, 0(x2) # load 0xca40a9dcd618dbac from memory into f28
fnmadd.s f26, f19, f11, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x23, 0x0afa978871d4910a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe4d049fb30c3f465 # load x3 with value 0xe4d049fb30c3f465
sw x3, 0(x2) # store 0xe4d049fb30c3f465 in memory
flw f25, 0(x2) # load 0xe4d049fb30c3f465 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7779c0d085f417e4 # load x3 with value 0x7779c0d085f417e4
sw x3, 0(x2) # store 0x7779c0d085f417e4 in memory
flw f2, 0(x2) # load 0x7779c0d085f417e4 from memory into f2
fnmadd.s f23, f25, f21, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x15, 0xb8a78fefadaa82b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6de9791758539630 # load x3 with value 0x6de9791758539630
sw x3, 0(x2) # store 0x6de9791758539630 in memory
flw f29, 0(x2) # load 0x6de9791758539630 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0xa35412ea4569a55 # load x3 with value 0xa35412ea4569a55
sw x3, 0(x2) # store 0xa35412ea4569a55 in memory
flw f9, 0(x2) # load 0xa35412ea4569a55 from memory into f9
fnmadd.s f15, f29, f6, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x7, 0xdb786666c75617d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc284659c4df0acf # load x3 with value 0xdc284659c4df0acf
sw x3, 0(x2) # store 0xdc284659c4df0acf in memory
flw f16, 0(x2) # load 0xdc284659c4df0acf from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xb93b33dc71a7af6a # load x3 with value 0xb93b33dc71a7af6a
sw x3, 0(x2) # store 0xb93b33dc71a7af6a in memory
flw f13, 0(x2) # load 0xb93b33dc71a7af6a from memory into f13
fnmadd.s f7, f16, f10, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x31, 0x98226565cbf0a52c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48a1de7ade9c5610 # load x3 with value 0x48a1de7ade9c5610
sw x3, 0(x2) # store 0x48a1de7ade9c5610 in memory
flw f15, 0(x2) # load 0x48a1de7ade9c5610 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xbb90d2b275415597 # load x3 with value 0xbb90d2b275415597
sw x3, 0(x2) # store 0xbb90d2b275415597 in memory
flw f24, 0(x2) # load 0xbb90d2b275415597 from memory into f24
fnmadd.s f31, f15, f16, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x1, 0x2f7abf85adafb012 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbdefe095de5cc12d # load x3 with value 0xbdefe095de5cc12d
sw x3, 0(x2) # store 0xbdefe095de5cc12d in memory
flw f30, 0(x2) # load 0xbdefe095de5cc12d from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x81025dcb3fc9b325 # load x3 with value 0x81025dcb3fc9b325
sw x3, 0(x2) # store 0x81025dcb3fc9b325 in memory
flw f14, 0(x2) # load 0x81025dcb3fc9b325 from memory into f14
fnmadd.s f1, f30, f31, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x12, 0xdd9d23d751783331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4068278009c4f78 # load x3 with value 0xc4068278009c4f78
sw x3, 0(x2) # store 0xc4068278009c4f78 in memory
flw f29, 0(x2) # load 0xc4068278009c4f78 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x5da84071ce69606f # load x3 with value 0x5da84071ce69606f
sw x3, 0(x2) # store 0x5da84071ce69606f in memory
flw f17, 0(x2) # load 0x5da84071ce69606f from memory into f17
fnmadd.s f12, f29, f3, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x17, 0x30ede176df432c5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb5dd27272660944e # load x3 with value 0xb5dd27272660944e
sw x3, 0(x2) # store 0xb5dd27272660944e in memory
flw f20, 0(x2) # load 0xb5dd27272660944e from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xcb6b19df45e5a191 # load x3 with value 0xcb6b19df45e5a191
sw x3, 0(x2) # store 0xcb6b19df45e5a191 in memory
flw f7, 0(x2) # load 0xcb6b19df45e5a191 from memory into f7
fnmadd.s f17, f20, f18, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x8, 0x5b1ff84a44c7a194 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1f857a7c1dfa380 # load x3 with value 0xf1f857a7c1dfa380
sw x3, 0(x2) # store 0xf1f857a7c1dfa380 in memory
flw f21, 0(x2) # load 0xf1f857a7c1dfa380 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xca85757a5018b6f # load x3 with value 0xca85757a5018b6f
sw x3, 0(x2) # store 0xca85757a5018b6f in memory
flw f2, 0(x2) # load 0xca85757a5018b6f from memory into f2
fnmadd.s f8, f21, f20, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x28, 0xfde9c0a86fb64ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c8a3ad18af72ff # load x3 with value 0x3c8a3ad18af72ff
sw x3, 0(x2) # store 0x3c8a3ad18af72ff in memory
flw f23, 0(x2) # load 0x3c8a3ad18af72ff from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x359cc234651a87ca # load x3 with value 0x359cc234651a87ca
sw x3, 0(x2) # store 0x359cc234651a87ca in memory
flw f10, 0(x2) # load 0x359cc234651a87ca from memory into f10
fnmadd.s f28, f23, f1, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x15, 0x9a4e0bc74240fb97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x493606d50493d884 # load x3 with value 0x493606d50493d884
sw x3, 0(x2) # store 0x493606d50493d884 in memory
flw f4, 0(x2) # load 0x493606d50493d884 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x9f3213618be1ffb2 # load x3 with value 0x9f3213618be1ffb2
sw x3, 0(x2) # store 0x9f3213618be1ffb2 in memory
flw f18, 0(x2) # load 0x9f3213618be1ffb2 from memory into f18
fnmadd.s f15, f4, f14, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x10, 0xa9c79847d8e7ea8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x127d2ba46515fa7a # load x3 with value 0x127d2ba46515fa7a
sw x3, 0(x2) # store 0x127d2ba46515fa7a in memory
flw f12, 0(x2) # load 0x127d2ba46515fa7a from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xdad58994deefe9f3 # load x3 with value 0xdad58994deefe9f3
sw x3, 0(x2) # store 0xdad58994deefe9f3 in memory
flw f20, 0(x2) # load 0xdad58994deefe9f3 from memory into f20
fnmadd.s f10, f12, f30, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x8, 0x4d1586c562b3d0a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2343fc89b488a8 # load x3 with value 0xd2343fc89b488a8
sw x3, 0(x2) # store 0xd2343fc89b488a8 in memory
flw f10, 0(x2) # load 0xd2343fc89b488a8 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xa9b7236fab476a50 # load x3 with value 0xa9b7236fab476a50
sw x3, 0(x2) # store 0xa9b7236fab476a50 in memory
flw f7, 0(x2) # load 0xa9b7236fab476a50 from memory into f7
fnmadd.s f8, f10, f21, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x19, 0xdeb0dee83f504d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c8dd8b5ea56f504 # load x3 with value 0x8c8dd8b5ea56f504
sw x3, 0(x2) # store 0x8c8dd8b5ea56f504 in memory
flw f28, 0(x2) # load 0x8c8dd8b5ea56f504 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x7a298be883db8683 # load x3 with value 0x7a298be883db8683
sw x3, 0(x2) # store 0x7a298be883db8683 in memory
flw f22, 0(x2) # load 0x7a298be883db8683 from memory into f22
fnmadd.s f19, f28, f3, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x17, 0xafb9f458fdb25c11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc24f46ac1d19ca30 # load x3 with value 0xc24f46ac1d19ca30
sw x3, 0(x2) # store 0xc24f46ac1d19ca30 in memory
flw f10, 0(x2) # load 0xc24f46ac1d19ca30 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xcef607653a6eb1bf # load x3 with value 0xcef607653a6eb1bf
sw x3, 0(x2) # store 0xcef607653a6eb1bf in memory
flw f28, 0(x2) # load 0xcef607653a6eb1bf from memory into f28
fnmadd.s f17, f10, f23, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x17, 0xfb15a7220bf0f2bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd46db6c30f5caf7f # load x3 with value 0xd46db6c30f5caf7f
sw x3, 0(x2) # store 0xd46db6c30f5caf7f in memory
flw f29, 0(x2) # load 0xd46db6c30f5caf7f from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xaeeb7155e2adc0d1 # load x3 with value 0xaeeb7155e2adc0d1
sw x3, 0(x2) # store 0xaeeb7155e2adc0d1 in memory
flw f13, 0(x2) # load 0xaeeb7155e2adc0d1 from memory into f13
fnmadd.s f17, f29, f7, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x8, 0x27d34f596818330d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a5279f893012a2e # load x3 with value 0x3a5279f893012a2e
sw x3, 0(x2) # store 0x3a5279f893012a2e in memory
flw f20, 0(x2) # load 0x3a5279f893012a2e from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x4ddd557078abc2a3 # load x3 with value 0x4ddd557078abc2a3
sw x3, 0(x2) # store 0x4ddd557078abc2a3 in memory
flw f12, 0(x2) # load 0x4ddd557078abc2a3 from memory into f12
fnmadd.s f8, f20, f29, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x16, 0x9569f01fb00f8658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93e302a8ca8db210 # load x3 with value 0x93e302a8ca8db210
sw x3, 0(x2) # store 0x93e302a8ca8db210 in memory
flw f19, 0(x2) # load 0x93e302a8ca8db210 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xe6816da76738a86b # load x3 with value 0xe6816da76738a86b
sw x3, 0(x2) # store 0xe6816da76738a86b in memory
flw f2, 0(x2) # load 0xe6816da76738a86b from memory into f2
fnmadd.s f16, f19, f23, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x16, 0x3c9a88bc2474f496 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef8346adcd06e1f4 # load x3 with value 0xef8346adcd06e1f4
sw x3, 0(x2) # store 0xef8346adcd06e1f4 in memory
flw f8, 0(x2) # load 0xef8346adcd06e1f4 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x1e40de45502c74b8 # load x3 with value 0x1e40de45502c74b8
sw x3, 0(x2) # store 0x1e40de45502c74b8 in memory
flw f20, 0(x2) # load 0x1e40de45502c74b8 from memory into f20
fnmadd.s f16, f8, f25, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x6, 0x46a7b96feb1422cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d9ef7a9c4c2a423 # load x3 with value 0x6d9ef7a9c4c2a423
sw x3, 0(x2) # store 0x6d9ef7a9c4c2a423 in memory
flw f1, 0(x2) # load 0x6d9ef7a9c4c2a423 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xc70bf73a3430aed0 # load x3 with value 0xc70bf73a3430aed0
sw x3, 0(x2) # store 0xc70bf73a3430aed0 in memory
flw f30, 0(x2) # load 0xc70bf73a3430aed0 from memory into f30
fnmadd.s f6, f1, f7, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x22, 0xf9ed28487007ba9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa39edf2e8a6c2d4 # load x3 with value 0xfa39edf2e8a6c2d4
sw x3, 0(x2) # store 0xfa39edf2e8a6c2d4 in memory
flw f16, 0(x2) # load 0xfa39edf2e8a6c2d4 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0xc19976e7d7b533f4 # load x3 with value 0xc19976e7d7b533f4
sw x3, 0(x2) # store 0xc19976e7d7b533f4 in memory
flw f24, 0(x2) # load 0xc19976e7d7b533f4 from memory into f24
fnmadd.s f22, f16, f27, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x20, 0x1b08cd5ceb44fcf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb94714beede43b2d # load x3 with value 0xb94714beede43b2d
sw x3, 0(x2) # store 0xb94714beede43b2d in memory
flw f12, 0(x2) # load 0xb94714beede43b2d from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x3710e9fa96fe96fa # load x3 with value 0x3710e9fa96fe96fa
sw x3, 0(x2) # store 0x3710e9fa96fe96fa in memory
flw f5, 0(x2) # load 0x3710e9fa96fe96fa from memory into f5
fnmadd.s f20, f12, f21, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x1, 0xa5af65158baa4587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x560e931f9fc6bbe9 # load x3 with value 0x560e931f9fc6bbe9
sw x3, 0(x2) # store 0x560e931f9fc6bbe9 in memory
flw f28, 0(x2) # load 0x560e931f9fc6bbe9 from memory into f28
li x3, 0xfc7936fe7d589509 # load x3 with value 0xfc7936fe7d589509
sw x3, 0(x2) # store 0xfc7936fe7d589509 in memory
flw f2, 0(x2) # load 0xfc7936fe7d589509 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.s f1, f28, f2, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x12, 0x9284f2be5cb11ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x12576519db1fd71 # load x3 with value 0x12576519db1fd71
sw x3, 0(x2) # store 0x12576519db1fd71 in memory
flw f13, 0(x2) # load 0x12576519db1fd71 from memory into f13
li x3, 0x98d581d75f43a6f4 # load x3 with value 0x98d581d75f43a6f4
sw x3, 0(x2) # store 0x98d581d75f43a6f4 in memory
flw f31, 0(x2) # load 0x98d581d75f43a6f4 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmadd.s f12, f13, f31, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x8, 0x53c8a55f474a3b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7a20544aa2fc855 # load x3 with value 0xc7a20544aa2fc855
sw x3, 0(x2) # store 0xc7a20544aa2fc855 in memory
flw f19, 0(x2) # load 0xc7a20544aa2fc855 from memory into f19
li x3, 0xa1cd0245c60baebc # load x3 with value 0xa1cd0245c60baebc
sw x3, 0(x2) # store 0xa1cd0245c60baebc in memory
flw f16, 0(x2) # load 0xa1cd0245c60baebc from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmadd.s f8, f19, f16, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x13, 0x4b028b594bf0c2bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d3a1fef04faea6a # load x3 with value 0x7d3a1fef04faea6a
sw x3, 0(x2) # store 0x7d3a1fef04faea6a in memory
flw f12, 0(x2) # load 0x7d3a1fef04faea6a from memory into f12
li x3, 0x1ee178a7f0a84ae2 # load x3 with value 0x1ee178a7f0a84ae2
sw x3, 0(x2) # store 0x1ee178a7f0a84ae2 in memory
flw f3, 0(x2) # load 0x1ee178a7f0a84ae2 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f13, f12, f3, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x31, 0xae0123ea77dfa439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x285b4c67b0b6a8e7 # load x3 with value 0x285b4c67b0b6a8e7
sw x3, 0(x2) # store 0x285b4c67b0b6a8e7 in memory
flw f6, 0(x2) # load 0x285b4c67b0b6a8e7 from memory into f6
li x3, 0x5d42654ef109297 # load x3 with value 0x5d42654ef109297
sw x3, 0(x2) # store 0x5d42654ef109297 in memory
flw f16, 0(x2) # load 0x5d42654ef109297 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f31, f6, f16, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x19, 0xa65c9885fd04e9a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99e976de7f81015e # load x3 with value 0x99e976de7f81015e
sw x3, 0(x2) # store 0x99e976de7f81015e in memory
flw f23, 0(x2) # load 0x99e976de7f81015e from memory into f23
li x3, 0xeeb4079b3bcab741 # load x3 with value 0xeeb4079b3bcab741
sw x3, 0(x2) # store 0xeeb4079b3bcab741 in memory
flw f4, 0(x2) # load 0xeeb4079b3bcab741 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmadd.s f19, f23, f4, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x3, 0xf7561f454a8f12c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6941aaba83d50c98 # load x3 with value 0x6941aaba83d50c98
sw x3, 0(x2) # store 0x6941aaba83d50c98 in memory
flw f19, 0(x2) # load 0x6941aaba83d50c98 from memory into f19
li x3, 0x64123cbb84a08b05 # load x3 with value 0x64123cbb84a08b05
sw x3, 0(x2) # store 0x64123cbb84a08b05 in memory
flw f14, 0(x2) # load 0x64123cbb84a08b05 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmadd.s f3, f19, f14, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x12, 0x959ff5c43ea9c168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x204316d539a25179 # load x3 with value 0x204316d539a25179
sw x3, 0(x2) # store 0x204316d539a25179 in memory
flw f4, 0(x2) # load 0x204316d539a25179 from memory into f4
li x3, 0x8c97d756dcb5519d # load x3 with value 0x8c97d756dcb5519d
sw x3, 0(x2) # store 0x8c97d756dcb5519d in memory
flw f13, 0(x2) # load 0x8c97d756dcb5519d from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmadd.s f12, f4, f13, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x22, 0xc7b6ebe28de7ab36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdfb02988c700ab49 # load x3 with value 0xdfb02988c700ab49
sw x3, 0(x2) # store 0xdfb02988c700ab49 in memory
flw f8, 0(x2) # load 0xdfb02988c700ab49 from memory into f8
li x3, 0x9ad3aa4442fa851e # load x3 with value 0x9ad3aa4442fa851e
sw x3, 0(x2) # store 0x9ad3aa4442fa851e in memory
flw f16, 0(x2) # load 0x9ad3aa4442fa851e from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmadd.s f22, f8, f16, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x10, 0x89a3d1e5da76dfea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3804921609701fe # load x3 with value 0xd3804921609701fe
sw x3, 0(x2) # store 0xd3804921609701fe in memory
flw f8, 0(x2) # load 0xd3804921609701fe from memory into f8
li x3, 0xde768edc2e786aed # load x3 with value 0xde768edc2e786aed
sw x3, 0(x2) # store 0xde768edc2e786aed in memory
flw f25, 0(x2) # load 0xde768edc2e786aed from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fnmadd.s f10, f8, f25, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x10, 0x43cb48144a3ef46a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9d52e6d468847b4 # load x3 with value 0xa9d52e6d468847b4
sw x3, 0(x2) # store 0xa9d52e6d468847b4 in memory
flw f17, 0(x2) # load 0xa9d52e6d468847b4 from memory into f17
li x3, 0x39b9e1a8d20efcf0 # load x3 with value 0x39b9e1a8d20efcf0
sw x3, 0(x2) # store 0x39b9e1a8d20efcf0 in memory
flw f2, 0(x2) # load 0x39b9e1a8d20efcf0 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f10, f17, f2, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x10, 0x0e57a89255e51c0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x18dde0db9168b581 # load x3 with value 0x18dde0db9168b581
sw x3, 0(x2) # store 0x18dde0db9168b581 in memory
flw f21, 0(x2) # load 0x18dde0db9168b581 from memory into f21
li x3, 0xae4e0f089ae4b2ec # load x3 with value 0xae4e0f089ae4b2ec
sw x3, 0(x2) # store 0xae4e0f089ae4b2ec in memory
flw f28, 0(x2) # load 0xae4e0f089ae4b2ec from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmadd.s f10, f21, f28, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x24, 0x906d703c3ce58cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ea361bff24cdb61 # load x3 with value 0x9ea361bff24cdb61
sw x3, 0(x2) # store 0x9ea361bff24cdb61 in memory
flw f29, 0(x2) # load 0x9ea361bff24cdb61 from memory into f29
li x3, 0xb0c1a2909d552142 # load x3 with value 0xb0c1a2909d552142
sw x3, 0(x2) # store 0xb0c1a2909d552142 in memory
flw f15, 0(x2) # load 0xb0c1a2909d552142 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmadd.s f24, f29, f15, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x6, 0xa806c8f00a52a71e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4477e9c1d8800f13 # load x3 with value 0x4477e9c1d8800f13
sw x3, 0(x2) # store 0x4477e9c1d8800f13 in memory
flw f20, 0(x2) # load 0x4477e9c1d8800f13 from memory into f20
li x3, 0x66dbdd2e6e6f1054 # load x3 with value 0x66dbdd2e6e6f1054
sw x3, 0(x2) # store 0x66dbdd2e6e6f1054 in memory
flw f10, 0(x2) # load 0x66dbdd2e6e6f1054 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmadd.s f6, f20, f10, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x19, 0x8b9901b4c4693d44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe092429e39f9cc69 # load x3 with value 0xe092429e39f9cc69
sw x3, 0(x2) # store 0xe092429e39f9cc69 in memory
flw f30, 0(x2) # load 0xe092429e39f9cc69 from memory into f30
li x3, 0x1d16fddd2e11c9e3 # load x3 with value 0x1d16fddd2e11c9e3
sw x3, 0(x2) # store 0x1d16fddd2e11c9e3 in memory
flw f25, 0(x2) # load 0x1d16fddd2e11c9e3 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmadd.s f19, f30, f25, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x8, 0x55f613e48a3812f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16ff2bfa66bcfbee # load x3 with value 0x16ff2bfa66bcfbee
sw x3, 0(x2) # store 0x16ff2bfa66bcfbee in memory
flw f5, 0(x2) # load 0x16ff2bfa66bcfbee from memory into f5
li x3, 0xf5b713216746d53c # load x3 with value 0xf5b713216746d53c
sw x3, 0(x2) # store 0xf5b713216746d53c in memory
flw f12, 0(x2) # load 0xf5b713216746d53c from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmadd.s f8, f5, f12, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x21, 0x4a8f16e7e95929b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x740e25b4e32daa9c # load x3 with value 0x740e25b4e32daa9c
sw x3, 0(x2) # store 0x740e25b4e32daa9c in memory
flw f9, 0(x2) # load 0x740e25b4e32daa9c from memory into f9
li x3, 0x60a339694eff080 # load x3 with value 0x60a339694eff080
sw x3, 0(x2) # store 0x60a339694eff080 in memory
flw f8, 0(x2) # load 0x60a339694eff080 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmadd.s f21, f9, f8, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x17, 0x932ac743d500c7c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcabcbaafa2ac5529 # load x3 with value 0xcabcbaafa2ac5529
sw x3, 0(x2) # store 0xcabcbaafa2ac5529 in memory
flw f27, 0(x2) # load 0xcabcbaafa2ac5529 from memory into f27
li x3, 0x776d6fa4fdf54bbc # load x3 with value 0x776d6fa4fdf54bbc
sw x3, 0(x2) # store 0x776d6fa4fdf54bbc in memory
flw f22, 0(x2) # load 0x776d6fa4fdf54bbc from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f17, f27, f22, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x26, 0x7707877ee6d7bd7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5710a362c4b6e7b9 # load x3 with value 0x5710a362c4b6e7b9
sw x3, 0(x2) # store 0x5710a362c4b6e7b9 in memory
flw f14, 0(x2) # load 0x5710a362c4b6e7b9 from memory into f14
li x3, 0x23b2b0b2c4e25968 # load x3 with value 0x23b2b0b2c4e25968
sw x3, 0(x2) # store 0x23b2b0b2c4e25968 in memory
flw f8, 0(x2) # load 0x23b2b0b2c4e25968 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f26, f14, f8, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x4, 0x1971052d9e83f520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x546a26b412151b10 # load x3 with value 0x546a26b412151b10
sw x3, 0(x2) # store 0x546a26b412151b10 in memory
flw f31, 0(x2) # load 0x546a26b412151b10 from memory into f31
li x3, 0xc1c241ab6abcb07e # load x3 with value 0xc1c241ab6abcb07e
sw x3, 0(x2) # store 0xc1c241ab6abcb07e in memory
flw f5, 0(x2) # load 0xc1c241ab6abcb07e from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f4, f31, f5, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x21, 0xa00f03f4bfd1b5af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf50777c4611cafcf # load x3 with value 0xf50777c4611cafcf
sw x3, 0(x2) # store 0xf50777c4611cafcf in memory
flw f17, 0(x2) # load 0xf50777c4611cafcf from memory into f17
li x3, 0xab6f9e24023e09e7 # load x3 with value 0xab6f9e24023e09e7
sw x3, 0(x2) # store 0xab6f9e24023e09e7 in memory
flw f18, 0(x2) # load 0xab6f9e24023e09e7 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fnmadd.s f21, f17, f18, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x5, 0xe0b75eca411329a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15b586e3c8bd3e78 # load x3 with value 0x15b586e3c8bd3e78
sw x3, 0(x2) # store 0x15b586e3c8bd3e78 in memory
flw f11, 0(x2) # load 0x15b586e3c8bd3e78 from memory into f11
li x3, 0x72b679e13baf8e6b # load x3 with value 0x72b679e13baf8e6b
sw x3, 0(x2) # store 0x72b679e13baf8e6b in memory
flw f29, 0(x2) # load 0x72b679e13baf8e6b from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmadd.s f5, f11, f29, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x21, 0xe13776c1ab8115ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc58c0f2e7395665e # load x3 with value 0xc58c0f2e7395665e
sw x3, 0(x2) # store 0xc58c0f2e7395665e in memory
flw f24, 0(x2) # load 0xc58c0f2e7395665e from memory into f24
li x3, 0x1768431aece20dfc # load x3 with value 0x1768431aece20dfc
sw x3, 0(x2) # store 0x1768431aece20dfc in memory
flw f23, 0(x2) # load 0x1768431aece20dfc from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmadd.s f21, f24, f23, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x9, 0x10b224566c66f6e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3376a28b2e6af4b3 # load x3 with value 0x3376a28b2e6af4b3
sw x3, 0(x2) # store 0x3376a28b2e6af4b3 in memory
flw f24, 0(x2) # load 0x3376a28b2e6af4b3 from memory into f24
li x3, 0xb5311fc0b79d5248 # load x3 with value 0xb5311fc0b79d5248
sw x3, 0(x2) # store 0xb5311fc0b79d5248 in memory
flw f1, 0(x2) # load 0xb5311fc0b79d5248 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f9, f24, f1, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x26, 0x74a60af0ca6d19a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x354d6c905a888873 # load x3 with value 0x354d6c905a888873
sw x3, 0(x2) # store 0x354d6c905a888873 in memory
flw f15, 0(x2) # load 0x354d6c905a888873 from memory into f15
li x3, 0x9047dd7f77e1b491 # load x3 with value 0x9047dd7f77e1b491
sw x3, 0(x2) # store 0x9047dd7f77e1b491 in memory
flw f10, 0(x2) # load 0x9047dd7f77e1b491 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmadd.s f26, f15, f10, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x22, 0x2a8ec7793b5e0cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b0bd6105b21ab0b # load x3 with value 0x1b0bd6105b21ab0b
sw x3, 0(x2) # store 0x1b0bd6105b21ab0b in memory
flw f5, 0(x2) # load 0x1b0bd6105b21ab0b from memory into f5
li x3, 0x693e0942fb773443 # load x3 with value 0x693e0942fb773443
sw x3, 0(x2) # store 0x693e0942fb773443 in memory
flw f24, 0(x2) # load 0x693e0942fb773443 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmadd.s f22, f5, f24, f8 # perform operation

# Testcase cp_frm
li x17, 0xd0ae9e42a35816ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8de9ba310acbdad # load x3 with value 0xf8de9ba310acbdad
sw x3, 0(x2) # store 0xf8de9ba310acbdad in memory
flw f1, 0(x2) # load 0xf8de9ba310acbdad from memory into f1
li x3, 0xe3f6bb1138f2c904 # load x3 with value 0xe3f6bb1138f2c904
sw x3, 0(x2) # store 0xe3f6bb1138f2c904 in memory
flw f23, 0(x2) # load 0xe3f6bb1138f2c904 from memory into f23
li x3, 0x00000003 # load x3 with value 0x00000003
sw x3, 0(x2) # store 0x00000003 in memory
flw f3, 0(x2) # load 0x00000003 from memory into f3
fnmadd.s f17, f1, f23, f3, dyn # perform operation
fnmadd.s f17, f1, f23, f3, rdn # perform operation
fnmadd.s f17, f1, f23, f3, rmm # perform operation
fnmadd.s f17, f1, f23, f3, rne # perform operation
fnmadd.s f17, f1, f23, f3, rtz # perform operation
fnmadd.s f17, f1, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x9, 0x27fd9174937898c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xbb87aa0f35bd0d93 # load x3 with value 0xbb87aa0f35bd0d93
sw x3, 0(x2) # store 0xbb87aa0f35bd0d93 in memory
flw f1, 0(x2) # load 0xbb87aa0f35bd0d93 from memory into f1
fnmadd.s f9, f15, f17, f1, dyn # perform operation
fnmadd.s f9, f15, f17, f1, rdn # perform operation
fnmadd.s f9, f15, f17, f1, rmm # perform operation
fnmadd.s f9, f15, f17, f1, rne # perform operation
fnmadd.s f9, f15, f17, f1, rtz # perform operation
fnmadd.s f9, f15, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x28, 0xadd053789b0c380a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x2623e0f530f35a1e # load x3 with value 0x2623e0f530f35a1e
sw x3, 0(x2) # store 0x2623e0f530f35a1e in memory
flw f1, 0(x2) # load 0x2623e0f530f35a1e from memory into f1
fnmadd.s f28, f4, f5, f1, dyn # perform operation
fnmadd.s f28, f4, f5, f1, rdn # perform operation
fnmadd.s f28, f4, f5, f1, rmm # perform operation
fnmadd.s f28, f4, f5, f1, rne # perform operation
fnmadd.s f28, f4, f5, f1, rtz # perform operation
fnmadd.s f28, f4, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f4, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x13, 0xe91834e2af35e23d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x6073477e431c90f3 # load x3 with value 0x6073477e431c90f3
sw x3, 0(x2) # store 0x6073477e431c90f3 in memory
flw f24, 0(x2) # load 0x6073477e431c90f3 from memory into f24
fnmadd.s f13, f17, f12, f24, dyn # perform operation
fnmadd.s f13, f17, f12, f24, rdn # perform operation
fnmadd.s f13, f17, f12, f24, rmm # perform operation
fnmadd.s f13, f17, f12, f24, rne # perform operation
fnmadd.s f13, f17, f12, f24, rtz # perform operation
fnmadd.s f13, f17, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x28, 0x4f94d170c28df953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xa7890325cb09f786 # load x3 with value 0xa7890325cb09f786
sw x3, 0(x2) # store 0xa7890325cb09f786 in memory
flw f18, 0(x2) # load 0xa7890325cb09f786 from memory into f18
fnmadd.s f28, f19, f9, f18, dyn # perform operation
fnmadd.s f28, f19, f9, f18, rdn # perform operation
fnmadd.s f28, f19, f9, f18, rmm # perform operation
fnmadd.s f28, f19, f9, f18, rne # perform operation
fnmadd.s f28, f19, f9, f18, rtz # perform operation
fnmadd.s f28, f19, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x19, 0x0c7914cb4ddeec20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x331c36b1effb4add # load x3 with value 0x331c36b1effb4add
sw x3, 0(x2) # store 0x331c36b1effb4add in memory
flw f20, 0(x2) # load 0x331c36b1effb4add from memory into f20
fnmadd.s f19, f29, f23, f20, dyn # perform operation
fnmadd.s f19, f29, f23, f20, rdn # perform operation
fnmadd.s f19, f29, f23, f20, rmm # perform operation
fnmadd.s f19, f29, f23, f20, rne # perform operation
fnmadd.s f19, f29, f23, f20, rtz # perform operation
fnmadd.s f19, f29, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x5, 0x45efe41dc9fc811f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x24d8035fdfde3ee2 # load x3 with value 0x24d8035fdfde3ee2
sw x3, 0(x2) # store 0x24d8035fdfde3ee2 in memory
flw f6, 0(x2) # load 0x24d8035fdfde3ee2 from memory into f6
fnmadd.s f5, f23, f4, f6, dyn # perform operation
fnmadd.s f5, f23, f4, f6, rdn # perform operation
fnmadd.s f5, f23, f4, f6, rmm # perform operation
fnmadd.s f5, f23, f4, f6, rne # perform operation
fnmadd.s f5, f23, f4, f6, rtz # perform operation
fnmadd.s f5, f23, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x18, 0x4ca5c1ea741b1ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x213f5a2ae830bf12 # load x3 with value 0x213f5a2ae830bf12
sw x3, 0(x2) # store 0x213f5a2ae830bf12 in memory
flw f17, 0(x2) # load 0x213f5a2ae830bf12 from memory into f17
fnmadd.s f18, f24, f28, f17, dyn # perform operation
fnmadd.s f18, f24, f28, f17, rdn # perform operation
fnmadd.s f18, f24, f28, f17, rmm # perform operation
fnmadd.s f18, f24, f28, f17, rne # perform operation
fnmadd.s f18, f24, f28, f17, rtz # perform operation
fnmadd.s f18, f24, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x28, 0xdb4e5c974dcdf5fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xc30459e9603f6827 # load x3 with value 0xc30459e9603f6827
sw x3, 0(x2) # store 0xc30459e9603f6827 in memory
flw f20, 0(x2) # load 0xc30459e9603f6827 from memory into f20
fnmadd.s f28, f6, f16, f20, dyn # perform operation
fnmadd.s f28, f6, f16, f20, rdn # perform operation
fnmadd.s f28, f6, f16, f20, rmm # perform operation
fnmadd.s f28, f6, f16, f20, rne # perform operation
fnmadd.s f28, f6, f16, f20, rtz # perform operation
fnmadd.s f28, f6, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f6, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f6, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x12, 0xd439f13f2f6f7c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xba54033af48742a1 # load x3 with value 0xba54033af48742a1
sw x3, 0(x2) # store 0xba54033af48742a1 in memory
flw f8, 0(x2) # load 0xba54033af48742a1 from memory into f8
fnmadd.s f12, f4, f14, f8, dyn # perform operation
fnmadd.s f12, f4, f14, f8, rdn # perform operation
fnmadd.s f12, f4, f14, f8, rmm # perform operation
fnmadd.s f12, f4, f14, f8, rne # perform operation
fnmadd.s f12, f4, f14, f8, rtz # perform operation
fnmadd.s f12, f4, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f4, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x27, 0x4e681bec49cd1347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xd1e863bfbf21cbcb # load x3 with value 0xd1e863bfbf21cbcb
sw x3, 0(x2) # store 0xd1e863bfbf21cbcb in memory
flw f8, 0(x2) # load 0xd1e863bfbf21cbcb from memory into f8
fnmadd.s f27, f28, f5, f8, dyn # perform operation
fnmadd.s f27, f28, f5, f8, rdn # perform operation
fnmadd.s f27, f28, f5, f8, rmm # perform operation
fnmadd.s f27, f28, f5, f8, rne # perform operation
fnmadd.s f27, f28, f5, f8, rtz # perform operation
fnmadd.s f27, f28, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x8, 0x06e6157c73837127 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xe126822b682f6446 # load x3 with value 0xe126822b682f6446
sw x3, 0(x2) # store 0xe126822b682f6446 in memory
flw f21, 0(x2) # load 0xe126822b682f6446 from memory into f21
fnmadd.s f8, f28, f3, f21, dyn # perform operation
fnmadd.s f8, f28, f3, f21, rdn # perform operation
fnmadd.s f8, f28, f3, f21, rmm # perform operation
fnmadd.s f8, f28, f3, f21, rne # perform operation
fnmadd.s f8, f28, f3, f21, rtz # perform operation
fnmadd.s f8, f28, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f28, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f28, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f28, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f28, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f28, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x20, 0x8537f77e3b1fdf58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xdfb2e65392ea7689 # load x3 with value 0xdfb2e65392ea7689
sw x3, 0(x2) # store 0xdfb2e65392ea7689 in memory
flw f12, 0(x2) # load 0xdfb2e65392ea7689 from memory into f12
fnmadd.s f20, f23, f28, f12, dyn # perform operation
fnmadd.s f20, f23, f28, f12, rdn # perform operation
fnmadd.s f20, f23, f28, f12, rmm # perform operation
fnmadd.s f20, f23, f28, f12, rne # perform operation
fnmadd.s f20, f23, f28, f12, rtz # perform operation
fnmadd.s f20, f23, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x16, 0xcf382ee0ddd34bbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x6662fcf826290543 # load x3 with value 0x6662fcf826290543
sw x3, 0(x2) # store 0x6662fcf826290543 in memory
flw f7, 0(x2) # load 0x6662fcf826290543 from memory into f7
fnmadd.s f16, f27, f25, f7, dyn # perform operation
fnmadd.s f16, f27, f25, f7, rdn # perform operation
fnmadd.s f16, f27, f25, f7, rmm # perform operation
fnmadd.s f16, f27, f25, f7, rne # perform operation
fnmadd.s f16, f27, f25, f7, rtz # perform operation
fnmadd.s f16, f27, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x22, 0x78dc6cf10180836d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x91e43d08663f5395 # load x3 with value 0x91e43d08663f5395
sw x3, 0(x2) # store 0x91e43d08663f5395 in memory
flw f30, 0(x2) # load 0x91e43d08663f5395 from memory into f30
fnmadd.s f22, f6, f14, f30, dyn # perform operation
fnmadd.s f22, f6, f14, f30, rdn # perform operation
fnmadd.s f22, f6, f14, f30, rmm # perform operation
fnmadd.s f22, f6, f14, f30, rne # perform operation
fnmadd.s f22, f6, f14, f30, rtz # perform operation
fnmadd.s f22, f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x29, 0xe1c0fa2b51dea186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xb6bd504134031ffe # load x3 with value 0xb6bd504134031ffe
sw x3, 0(x2) # store 0xb6bd504134031ffe in memory
flw f10, 0(x2) # load 0xb6bd504134031ffe from memory into f10
fnmadd.s f29, f5, f9, f10, dyn # perform operation
fnmadd.s f29, f5, f9, f10, rdn # perform operation
fnmadd.s f29, f5, f9, f10, rmm # perform operation
fnmadd.s f29, f5, f9, f10, rne # perform operation
fnmadd.s f29, f5, f9, f10, rtz # perform operation
fnmadd.s f29, f5, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x3, 0x613e74c18231f711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xa95dd28d75756257 # load x3 with value 0xa95dd28d75756257
sw x3, 0(x2) # store 0xa95dd28d75756257 in memory
flw f22, 0(x2) # load 0xa95dd28d75756257 from memory into f22
fnmadd.s f3, f30, f16, f22, dyn # perform operation
fnmadd.s f3, f30, f16, f22, rdn # perform operation
fnmadd.s f3, f30, f16, f22, rmm # perform operation
fnmadd.s f3, f30, f16, f22, rne # perform operation
fnmadd.s f3, f30, f16, f22, rtz # perform operation
fnmadd.s f3, f30, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x24, 0x1501d6c5985b50bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x3580b44f35782ed9 # load x3 with value 0x3580b44f35782ed9
sw x3, 0(x2) # store 0x3580b44f35782ed9 in memory
flw f15, 0(x2) # load 0x3580b44f35782ed9 from memory into f15
fnmadd.s f24, f7, f21, f15, dyn # perform operation
fnmadd.s f24, f7, f21, f15, rdn # perform operation
fnmadd.s f24, f7, f21, f15, rmm # perform operation
fnmadd.s f24, f7, f21, f15, rne # perform operation
fnmadd.s f24, f7, f21, f15, rtz # perform operation
fnmadd.s f24, f7, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x23, 0x1ba84ef0c440679a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x50e6f80ef3ffec82 # load x3 with value 0x50e6f80ef3ffec82
sw x3, 0(x2) # store 0x50e6f80ef3ffec82 in memory
flw f7, 0(x2) # load 0x50e6f80ef3ffec82 from memory into f7
fnmadd.s f23, f5, f14, f7, dyn # perform operation
fnmadd.s f23, f5, f14, f7, rdn # perform operation
fnmadd.s f23, f5, f14, f7, rmm # perform operation
fnmadd.s f23, f5, f14, f7, rne # perform operation
fnmadd.s f23, f5, f14, f7, rtz # perform operation
fnmadd.s f23, f5, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f5, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x17, 0x8eefe49c003ce7f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x2ac05b9aa8ba3c2e # load x3 with value 0x2ac05b9aa8ba3c2e
sw x3, 0(x2) # store 0x2ac05b9aa8ba3c2e in memory
flw f9, 0(x2) # load 0x2ac05b9aa8ba3c2e from memory into f9
fnmadd.s f17, f18, f27, f9, dyn # perform operation
fnmadd.s f17, f18, f27, f9, rdn # perform operation
fnmadd.s f17, f18, f27, f9, rmm # perform operation
fnmadd.s f17, f18, f27, f9, rne # perform operation
fnmadd.s f17, f18, f27, f9, rtz # perform operation
fnmadd.s f17, f18, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x28, 0x4a8c3972b0058b24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xe21dca6a57b4aa04 # load x3 with value 0xe21dca6a57b4aa04
sw x3, 0(x2) # store 0xe21dca6a57b4aa04 in memory
flw f25, 0(x2) # load 0xe21dca6a57b4aa04 from memory into f25
fnmadd.s f28, f11, f7, f25, dyn # perform operation
fnmadd.s f28, f11, f7, f25, rdn # perform operation
fnmadd.s f28, f11, f7, f25, rmm # perform operation
fnmadd.s f28, f11, f7, f25, rne # perform operation
fnmadd.s f28, f11, f7, f25, rtz # perform operation
fnmadd.s f28, f11, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f11, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f11, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x29, 0x20e376f4ca35d702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xe792a3daa5c013a8 # load x3 with value 0xe792a3daa5c013a8
sw x3, 0(x2) # store 0xe792a3daa5c013a8 in memory
flw f30, 0(x2) # load 0xe792a3daa5c013a8 from memory into f30
fnmadd.s f29, f2, f23, f30, dyn # perform operation
fnmadd.s f29, f2, f23, f30, rdn # perform operation
fnmadd.s f29, f2, f23, f30, rmm # perform operation
fnmadd.s f29, f2, f23, f30, rne # perform operation
fnmadd.s f29, f2, f23, f30, rtz # perform operation
fnmadd.s f29, f2, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f2, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x18, 0x56f22f01bba629b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x28f00d2bd27a8b87 # load x3 with value 0x28f00d2bd27a8b87
sw x3, 0(x2) # store 0x28f00d2bd27a8b87 in memory
flw f30, 0(x2) # load 0x28f00d2bd27a8b87 from memory into f30
fnmadd.s f18, f7, f20, f30, dyn # perform operation
fnmadd.s f18, f7, f20, f30, rdn # perform operation
fnmadd.s f18, f7, f20, f30, rmm # perform operation
fnmadd.s f18, f7, f20, f30, rne # perform operation
fnmadd.s f18, f7, f20, f30, rtz # perform operation
fnmadd.s f18, f7, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f7, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f7, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x3, 0xb53297af46f07130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xbeca63b4288dae46 # load x3 with value 0xbeca63b4288dae46
sw x3, 0(x2) # store 0xbeca63b4288dae46 in memory
flw f29, 0(x2) # load 0xbeca63b4288dae46 from memory into f29
fnmadd.s f3, f22, f6, f29, dyn # perform operation
fnmadd.s f3, f22, f6, f29, rdn # perform operation
fnmadd.s f3, f22, f6, f29, rmm # perform operation
fnmadd.s f3, f22, f6, f29, rne # perform operation
fnmadd.s f3, f22, f6, f29, rtz # perform operation
fnmadd.s f3, f22, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x13, 0xcaa4aaac8fa29b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x3c45b1a5ad7d72f # load x3 with value 0x3c45b1a5ad7d72f
sw x3, 0(x2) # store 0x3c45b1a5ad7d72f in memory
flw f22, 0(x2) # load 0x3c45b1a5ad7d72f from memory into f22
fnmadd.s f13, f23, f4, f22, dyn # perform operation
fnmadd.s f13, f23, f4, f22, rdn # perform operation
fnmadd.s f13, f23, f4, f22, rmm # perform operation
fnmadd.s f13, f23, f4, f22, rne # perform operation
fnmadd.s f13, f23, f4, f22, rtz # perform operation
fnmadd.s f13, f23, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f23, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x13, 0x45dd631b6fc939b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x2fc7ccf6f3fb0a79 # load x3 with value 0x2fc7ccf6f3fb0a79
sw x3, 0(x2) # store 0x2fc7ccf6f3fb0a79 in memory
flw f25, 0(x2) # load 0x2fc7ccf6f3fb0a79 from memory into f25
fnmadd.s f13, f22, f26, f25, dyn # perform operation
fnmadd.s f13, f22, f26, f25, rdn # perform operation
fnmadd.s f13, f22, f26, f25, rmm # perform operation
fnmadd.s f13, f22, f26, f25, rne # perform operation
fnmadd.s f13, f22, f26, f25, rtz # perform operation
fnmadd.s f13, f22, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x11, 0x916a7ca4d48fea0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xa431381e2cb9a603 # load x3 with value 0xa431381e2cb9a603
sw x3, 0(x2) # store 0xa431381e2cb9a603 in memory
flw f24, 0(x2) # load 0xa431381e2cb9a603 from memory into f24
fnmadd.s f11, f22, f28, f24, dyn # perform operation
fnmadd.s f11, f22, f28, f24, rdn # perform operation
fnmadd.s f11, f22, f28, f24, rmm # perform operation
fnmadd.s f11, f22, f28, f24, rne # perform operation
fnmadd.s f11, f22, f28, f24, rtz # perform operation
fnmadd.s f11, f22, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x10, 0x78dc423c5e7dcda0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x79de57221b910718 # load x3 with value 0x79de57221b910718
sw x3, 0(x2) # store 0x79de57221b910718 in memory
flw f24, 0(x2) # load 0x79de57221b910718 from memory into f24
fnmadd.s f10, f17, f31, f24, dyn # perform operation
fnmadd.s f10, f17, f31, f24, rdn # perform operation
fnmadd.s f10, f17, f31, f24, rmm # perform operation
fnmadd.s f10, f17, f31, f24, rne # perform operation
fnmadd.s f10, f17, f31, f24, rtz # perform operation
fnmadd.s f10, f17, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f17, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f17, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f17, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f17, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f17, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x7, 0x2b3b343a3fd51781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xbcf3cf8cc0bafa4b # load x3 with value 0xbcf3cf8cc0bafa4b
sw x3, 0(x2) # store 0xbcf3cf8cc0bafa4b in memory
flw f4, 0(x2) # load 0xbcf3cf8cc0bafa4b from memory into f4
fnmadd.s f7, f26, f17, f4, dyn # perform operation
fnmadd.s f7, f26, f17, f4, rdn # perform operation
fnmadd.s f7, f26, f17, f4, rmm # perform operation
fnmadd.s f7, f26, f17, f4, rne # perform operation
fnmadd.s f7, f26, f17, f4, rtz # perform operation
fnmadd.s f7, f26, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f26, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f26, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x13, 0x286d14b7b86bf77d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x19a2b03aee63dcf5 # load x3 with value 0x19a2b03aee63dcf5
sw x3, 0(x2) # store 0x19a2b03aee63dcf5 in memory
flw f26, 0(x2) # load 0x19a2b03aee63dcf5 from memory into f26
fnmadd.s f13, f23, f19, f26, dyn # perform operation
fnmadd.s f13, f23, f19, f26, rdn # perform operation
fnmadd.s f13, f23, f19, f26, rmm # perform operation
fnmadd.s f13, f23, f19, f26, rne # perform operation
fnmadd.s f13, f23, f19, f26, rtz # perform operation
fnmadd.s f13, f23, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f23, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f23, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x2, 0xc1557b714893f688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x7631ec9e9030acfe # load x3 with value 0x7631ec9e9030acfe
sw x3, 0(x2) # store 0x7631ec9e9030acfe in memory
flw f1, 0(x2) # load 0x7631ec9e9030acfe from memory into f1
fnmadd.s f2, f18, f6, f1, dyn # perform operation
fnmadd.s f2, f18, f6, f1, rdn # perform operation
fnmadd.s f2, f18, f6, f1, rmm # perform operation
fnmadd.s f2, f18, f6, f1, rne # perform operation
fnmadd.s f2, f18, f6, f1, rtz # perform operation
fnmadd.s f2, f18, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f18, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f18, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x9, 0xeb5c7143e373c583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0xbc779fdc736f638e # load x3 with value 0xbc779fdc736f638e
sw x3, 0(x2) # store 0xbc779fdc736f638e in memory
flw f18, 0(x2) # load 0xbc779fdc736f638e from memory into f18
fnmadd.s f9, f21, f2, f18, dyn # perform operation
fnmadd.s f9, f21, f2, f18, rdn # perform operation
fnmadd.s f9, f21, f2, f18, rmm # perform operation
fnmadd.s f9, f21, f2, f18, rne # perform operation
fnmadd.s f9, f21, f2, f18, rtz # perform operation
fnmadd.s f9, f21, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x3, 0xa2fec4f74b4422f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x4ebd849f92b375e4 # load x3 with value 0x4ebd849f92b375e4
sw x3, 0(x2) # store 0x4ebd849f92b375e4 in memory
flw f20, 0(x2) # load 0x4ebd849f92b375e4 from memory into f20
fnmadd.s f3, f15, f22, f20, dyn # perform operation
fnmadd.s f3, f15, f22, f20, rdn # perform operation
fnmadd.s f3, f15, f22, f20, rmm # perform operation
fnmadd.s f3, f15, f22, f20, rne # perform operation
fnmadd.s f3, f15, f22, f20, rtz # perform operation
fnmadd.s f3, f15, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x13, 0xed758c6f48f8c3b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x43fc6b649a5833de # load x3 with value 0x43fc6b649a5833de
sw x3, 0(x2) # store 0x43fc6b649a5833de in memory
flw f18, 0(x2) # load 0x43fc6b649a5833de from memory into f18
fnmadd.s f13, f21, f7, f18, dyn # perform operation
fnmadd.s f13, f21, f7, f18, rdn # perform operation
fnmadd.s f13, f21, f7, f18, rmm # perform operation
fnmadd.s f13, f21, f7, f18, rne # perform operation
fnmadd.s f13, f21, f7, f18, rtz # perform operation
fnmadd.s f13, f21, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f21, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x25, 0xbae1d740ef531040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x8cf39678772750e9 # load x3 with value 0x8cf39678772750e9
sw x3, 0(x2) # store 0x8cf39678772750e9 in memory
flw f18, 0(x2) # load 0x8cf39678772750e9 from memory into f18
fnmadd.s f25, f28, f7, f18, dyn # perform operation
fnmadd.s f25, f28, f7, f18, rdn # perform operation
fnmadd.s f25, f28, f7, f18, rmm # perform operation
fnmadd.s f25, f28, f7, f18, rne # perform operation
fnmadd.s f25, f28, f7, f18, rtz # perform operation
fnmadd.s f25, f28, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x28, 0x6f26bbefd3a9a54e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xeba30ab0b8183e63 # load x3 with value 0xeba30ab0b8183e63
sw x3, 0(x2) # store 0xeba30ab0b8183e63 in memory
flw f15, 0(x2) # load 0xeba30ab0b8183e63 from memory into f15
fnmadd.s f28, f20, f21, f15, dyn # perform operation
fnmadd.s f28, f20, f21, f15, rdn # perform operation
fnmadd.s f28, f20, f21, f15, rmm # perform operation
fnmadd.s f28, f20, f21, f15, rne # perform operation
fnmadd.s f28, f20, f21, f15, rtz # perform operation
fnmadd.s f28, f20, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x26, 0x18605b948f9dae1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xad6aa020c8786f8e # load x3 with value 0xad6aa020c8786f8e
sw x3, 0(x2) # store 0xad6aa020c8786f8e in memory
flw f10, 0(x2) # load 0xad6aa020c8786f8e from memory into f10
fnmadd.s f26, f3, f18, f10, dyn # perform operation
fnmadd.s f26, f3, f18, f10, rdn # perform operation
fnmadd.s f26, f3, f18, f10, rmm # perform operation
fnmadd.s f26, f3, f18, f10, rne # perform operation
fnmadd.s f26, f3, f18, f10, rtz # perform operation
fnmadd.s f26, f3, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x4, 0xcb0fad4e63040bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x5a00b578cd28cee9 # load x3 with value 0x5a00b578cd28cee9
sw x3, 0(x2) # store 0x5a00b578cd28cee9 in memory
flw f5, 0(x2) # load 0x5a00b578cd28cee9 from memory into f5
fnmadd.s f4, f23, f12, f5, dyn # perform operation
fnmadd.s f4, f23, f12, f5, rdn # perform operation
fnmadd.s f4, f23, f12, f5, rmm # perform operation
fnmadd.s f4, f23, f12, f5, rne # perform operation
fnmadd.s f4, f23, f12, f5, rtz # perform operation
fnmadd.s f4, f23, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x16, 0x4c8302e7802c6cc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xaef8f62674324779 # load x3 with value 0xaef8f62674324779
sw x3, 0(x2) # store 0xaef8f62674324779 in memory
flw f9, 0(x2) # load 0xaef8f62674324779 from memory into f9
fnmadd.s f16, f24, f14, f9, dyn # perform operation
fnmadd.s f16, f24, f14, f9, rdn # perform operation
fnmadd.s f16, f24, f14, f9, rmm # perform operation
fnmadd.s f16, f24, f14, f9, rne # perform operation
fnmadd.s f16, f24, f14, f9, rtz # perform operation
fnmadd.s f16, f24, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x15, 0xdeb228e4f487e5d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x1871880d454f45ca # load x3 with value 0x1871880d454f45ca
sw x3, 0(x2) # store 0x1871880d454f45ca in memory
flw f7, 0(x2) # load 0x1871880d454f45ca from memory into f7
fnmadd.s f15, f16, f25, f7, dyn # perform operation
fnmadd.s f15, f16, f25, f7, rdn # perform operation
fnmadd.s f15, f16, f25, f7, rmm # perform operation
fnmadd.s f15, f16, f25, f7, rne # perform operation
fnmadd.s f15, f16, f25, f7, rtz # perform operation
fnmadd.s f15, f16, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f16, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x23, 0x40968e4fbd5d2288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xc12fdf114c3bbb2e # load x3 with value 0xc12fdf114c3bbb2e
sw x3, 0(x2) # store 0xc12fdf114c3bbb2e in memory
flw f15, 0(x2) # load 0xc12fdf114c3bbb2e from memory into f15
fnmadd.s f23, f31, f11, f15, dyn # perform operation
fnmadd.s f23, f31, f11, f15, rdn # perform operation
fnmadd.s f23, f31, f11, f15, rmm # perform operation
fnmadd.s f23, f31, f11, f15, rne # perform operation
fnmadd.s f23, f31, f11, f15, rtz # perform operation
fnmadd.s f23, f31, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x12, 0xccea6403cc495e8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xbb0b89108c135f5 # load x3 with value 0xbb0b89108c135f5
sw x3, 0(x2) # store 0xbb0b89108c135f5 in memory
flw f30, 0(x2) # load 0xbb0b89108c135f5 from memory into f30
fnmadd.s f12, f3, f16, f30, dyn # perform operation
fnmadd.s f12, f3, f16, f30, rdn # perform operation
fnmadd.s f12, f3, f16, f30, rmm # perform operation
fnmadd.s f12, f3, f16, f30, rne # perform operation
fnmadd.s f12, f3, f16, f30, rtz # perform operation
fnmadd.s f12, f3, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x27, 0x74e8359fbde13dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xe1aaba8e1bc9bd5b # load x3 with value 0xe1aaba8e1bc9bd5b
sw x3, 0(x2) # store 0xe1aaba8e1bc9bd5b in memory
flw f2, 0(x2) # load 0xe1aaba8e1bc9bd5b from memory into f2
fnmadd.s f27, f14, f10, f2, dyn # perform operation
fnmadd.s f27, f14, f10, f2, rdn # perform operation
fnmadd.s f27, f14, f10, f2, rmm # perform operation
fnmadd.s f27, f14, f10, f2, rne # perform operation
fnmadd.s f27, f14, f10, f2, rtz # perform operation
fnmadd.s f27, f14, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x27, 0x0d95c1b43aa7a576 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x2e891c9d3215aff3 # load x3 with value 0x2e891c9d3215aff3
sw x3, 0(x2) # store 0x2e891c9d3215aff3 in memory
flw f31, 0(x2) # load 0x2e891c9d3215aff3 from memory into f31
fnmadd.s f27, f3, f30, f31, dyn # perform operation
fnmadd.s f27, f3, f30, f31, rdn # perform operation
fnmadd.s f27, f3, f30, f31, rmm # perform operation
fnmadd.s f27, f3, f30, f31, rne # perform operation
fnmadd.s f27, f3, f30, f31, rtz # perform operation
fnmadd.s f27, f3, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f3, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x12, 0x8ead9b7d933b2ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xfdf18e376943b4a2 # load x3 with value 0xfdf18e376943b4a2
sw x3, 0(x2) # store 0xfdf18e376943b4a2 in memory
flw f15, 0(x2) # load 0xfdf18e376943b4a2 from memory into f15
fnmadd.s f12, f21, f2, f15, dyn # perform operation
fnmadd.s f12, f21, f2, f15, rdn # perform operation
fnmadd.s f12, f21, f2, f15, rmm # perform operation
fnmadd.s f12, f21, f2, f15, rne # perform operation
fnmadd.s f12, f21, f2, f15, rtz # perform operation
fnmadd.s f12, f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f21, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x14, 0xd603ef9d135c2927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x158f7cf8a8700e5f # load x3 with value 0x158f7cf8a8700e5f
sw x3, 0(x2) # store 0x158f7cf8a8700e5f in memory
flw f20, 0(x2) # load 0x158f7cf8a8700e5f from memory into f20
fnmadd.s f14, f7, f11, f20, dyn # perform operation
fnmadd.s f14, f7, f11, f20, rdn # perform operation
fnmadd.s f14, f7, f11, f20, rmm # perform operation
fnmadd.s f14, f7, f11, f20, rne # perform operation
fnmadd.s f14, f7, f11, f20, rtz # perform operation
fnmadd.s f14, f7, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x1, 0x1430274e0d20e9cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xe80229638437f419 # load x3 with value 0xe80229638437f419
sw x3, 0(x2) # store 0xe80229638437f419 in memory
flw f3, 0(x2) # load 0xe80229638437f419 from memory into f3
fnmadd.s f1, f21, f28, f3, dyn # perform operation
fnmadd.s f1, f21, f28, f3, rdn # perform operation
fnmadd.s f1, f21, f28, f3, rmm # perform operation
fnmadd.s f1, f21, f28, f3, rne # perform operation
fnmadd.s f1, f21, f28, f3, rtz # perform operation
fnmadd.s f1, f21, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x27, 0x07d5c21cc9965954 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x1a72cfa9af6fe5bf # load x3 with value 0x1a72cfa9af6fe5bf
sw x3, 0(x2) # store 0x1a72cfa9af6fe5bf in memory
flw f23, 0(x2) # load 0x1a72cfa9af6fe5bf from memory into f23
fnmadd.s f27, f6, f3, f23, dyn # perform operation
fnmadd.s f27, f6, f3, f23, rdn # perform operation
fnmadd.s f27, f6, f3, f23, rmm # perform operation
fnmadd.s f27, f6, f3, f23, rne # perform operation
fnmadd.s f27, f6, f3, f23, rtz # perform operation
fnmadd.s f27, f6, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x24, 0x74742e2511a53154 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xfe7d6df975bb0bcb # load x3 with value 0xfe7d6df975bb0bcb
sw x3, 0(x2) # store 0xfe7d6df975bb0bcb in memory
flw f20, 0(x2) # load 0xfe7d6df975bb0bcb from memory into f20
fnmadd.s f24, f26, f1, f20, dyn # perform operation
fnmadd.s f24, f26, f1, f20, rdn # perform operation
fnmadd.s f24, f26, f1, f20, rmm # perform operation
fnmadd.s f24, f26, f1, f20, rne # perform operation
fnmadd.s f24, f26, f1, f20, rtz # perform operation
fnmadd.s f24, f26, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x18, 0xad2b406f71809f63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x61e7634121598f6c # load x3 with value 0x61e7634121598f6c
sw x3, 0(x2) # store 0x61e7634121598f6c in memory
flw f10, 0(x2) # load 0x61e7634121598f6c from memory into f10
fnmadd.s f18, f24, f15, f10, dyn # perform operation
fnmadd.s f18, f24, f15, f10, rdn # perform operation
fnmadd.s f18, f24, f15, f10, rmm # perform operation
fnmadd.s f18, f24, f15, f10, rne # perform operation
fnmadd.s f18, f24, f15, f10, rtz # perform operation
fnmadd.s f18, f24, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x2, 0xf5d570c1ab19181b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x2a4a6fa5cd724d8e # load x3 with value 0x2a4a6fa5cd724d8e
sw x3, 0(x2) # store 0x2a4a6fa5cd724d8e in memory
flw f10, 0(x2) # load 0x2a4a6fa5cd724d8e from memory into f10
fnmadd.s f2, f25, f19, f10, dyn # perform operation
fnmadd.s f2, f25, f19, f10, rdn # perform operation
fnmadd.s f2, f25, f19, f10, rmm # perform operation
fnmadd.s f2, f25, f19, f10, rne # perform operation
fnmadd.s f2, f25, f19, f10, rtz # perform operation
fnmadd.s f2, f25, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f25, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x30, 0x92a767f24133dffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xa8b90c79be213ff3 # load x3 with value 0xa8b90c79be213ff3
sw x3, 0(x2) # store 0xa8b90c79be213ff3 in memory
flw f22, 0(x2) # load 0xa8b90c79be213ff3 from memory into f22
fnmadd.s f30, f27, f8, f22, dyn # perform operation
fnmadd.s f30, f27, f8, f22, rdn # perform operation
fnmadd.s f30, f27, f8, f22, rmm # perform operation
fnmadd.s f30, f27, f8, f22, rne # perform operation
fnmadd.s f30, f27, f8, f22, rtz # perform operation
fnmadd.s f30, f27, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f27, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x31, 0x4fe07c671d150e15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x859d6f31e6489a37 # load x3 with value 0x859d6f31e6489a37
sw x3, 0(x2) # store 0x859d6f31e6489a37 in memory
flw f26, 0(x2) # load 0x859d6f31e6489a37 from memory into f26
fnmadd.s f31, f14, f30, f26, dyn # perform operation
fnmadd.s f31, f14, f30, f26, rdn # perform operation
fnmadd.s f31, f14, f30, f26, rmm # perform operation
fnmadd.s f31, f14, f30, f26, rne # perform operation
fnmadd.s f31, f14, f30, f26, rtz # perform operation
fnmadd.s f31, f14, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x1, 0x44345c027e0e32fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x2a96e9a5ea7d8219 # load x3 with value 0x2a96e9a5ea7d8219
sw x3, 0(x2) # store 0x2a96e9a5ea7d8219 in memory
flw f26, 0(x2) # load 0x2a96e9a5ea7d8219 from memory into f26
fnmadd.s f1, f6, f30, f26, dyn # perform operation
fnmadd.s f1, f6, f30, f26, rdn # perform operation
fnmadd.s f1, f6, f30, f26, rmm # perform operation
fnmadd.s f1, f6, f30, f26, rne # perform operation
fnmadd.s f1, f6, f30, f26, rtz # perform operation
fnmadd.s f1, f6, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x8, 0x7cdf8237fa2588f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xc08c440319269072 # load x3 with value 0xc08c440319269072
sw x3, 0(x2) # store 0xc08c440319269072 in memory
flw f29, 0(x2) # load 0xc08c440319269072 from memory into f29
fnmadd.s f8, f18, f17, f29, dyn # perform operation
fnmadd.s f8, f18, f17, f29, rdn # perform operation
fnmadd.s f8, f18, f17, f29, rmm # perform operation
fnmadd.s f8, f18, f17, f29, rne # perform operation
fnmadd.s f8, f18, f17, f29, rtz # perform operation
fnmadd.s f8, f18, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x30, 0x21cbce8cf35cb5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x1059f00b9262e7ce # load x3 with value 0x1059f00b9262e7ce
sw x3, 0(x2) # store 0x1059f00b9262e7ce in memory
flw f15, 0(x2) # load 0x1059f00b9262e7ce from memory into f15
fnmadd.s f30, f6, f10, f15, dyn # perform operation
fnmadd.s f30, f6, f10, f15, rdn # perform operation
fnmadd.s f30, f6, f10, f15, rmm # perform operation
fnmadd.s f30, f6, f10, f15, rne # perform operation
fnmadd.s f30, f6, f10, f15, rtz # perform operation
fnmadd.s f30, f6, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x18, 0x4c878cda7bde065a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x5016877ca522cbf9 # load x3 with value 0x5016877ca522cbf9
sw x3, 0(x2) # store 0x5016877ca522cbf9 in memory
flw f5, 0(x2) # load 0x5016877ca522cbf9 from memory into f5
fnmadd.s f18, f21, f31, f5, dyn # perform operation
fnmadd.s f18, f21, f31, f5, rdn # perform operation
fnmadd.s f18, f21, f31, f5, rmm # perform operation
fnmadd.s f18, f21, f31, f5, rne # perform operation
fnmadd.s f18, f21, f31, f5, rtz # perform operation
fnmadd.s f18, f21, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x16, 0x7bc5d4b64931a881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xbe7d7a23fc59c7ce # load x3 with value 0xbe7d7a23fc59c7ce
sw x3, 0(x2) # store 0xbe7d7a23fc59c7ce in memory
flw f24, 0(x2) # load 0xbe7d7a23fc59c7ce from memory into f24
fnmadd.s f16, f13, f6, f24, dyn # perform operation
fnmadd.s f16, f13, f6, f24, rdn # perform operation
fnmadd.s f16, f13, f6, f24, rmm # perform operation
fnmadd.s f16, f13, f6, f24, rne # perform operation
fnmadd.s f16, f13, f6, f24, rtz # perform operation
fnmadd.s f16, f13, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x3, 0x76abbac711da2ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xc8b7903c0b38b392 # load x3 with value 0xc8b7903c0b38b392
sw x3, 0(x2) # store 0xc8b7903c0b38b392 in memory
flw f15, 0(x2) # load 0xc8b7903c0b38b392 from memory into f15
fnmadd.s f3, f16, f4, f15, dyn # perform operation
fnmadd.s f3, f16, f4, f15, rdn # perform operation
fnmadd.s f3, f16, f4, f15, rmm # perform operation
fnmadd.s f3, f16, f4, f15, rne # perform operation
fnmadd.s f3, f16, f4, f15, rtz # perform operation
fnmadd.s f3, f16, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x4, 0x058a5935abd8fd98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xb8507cd5b2c78dc3 # load x3 with value 0xb8507cd5b2c78dc3
sw x3, 0(x2) # store 0xb8507cd5b2c78dc3 in memory
flw f3, 0(x2) # load 0xb8507cd5b2c78dc3 from memory into f3
fnmadd.s f4, f28, f18, f3, dyn # perform operation
fnmadd.s f4, f28, f18, f3, rdn # perform operation
fnmadd.s f4, f28, f18, f3, rmm # perform operation
fnmadd.s f4, f28, f18, f3, rne # perform operation
fnmadd.s f4, f28, f18, f3, rtz # perform operation
fnmadd.s f4, f28, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x14, 0xc05c3f3b5e029a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x4357835f5bfbf23 # load x3 with value 0x4357835f5bfbf23
sw x3, 0(x2) # store 0x4357835f5bfbf23 in memory
flw f15, 0(x2) # load 0x4357835f5bfbf23 from memory into f15
fnmadd.s f14, f3, f19, f15, dyn # perform operation
fnmadd.s f14, f3, f19, f15, rdn # perform operation
fnmadd.s f14, f3, f19, f15, rmm # perform operation
fnmadd.s f14, f3, f19, f15, rne # perform operation
fnmadd.s f14, f3, f19, f15, rtz # perform operation
fnmadd.s f14, f3, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f3, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f3, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f3, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f3, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f3, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x15, 0xfe779bd1810445b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x7f90bac0039274dc # load x3 with value 0x7f90bac0039274dc
sw x3, 0(x2) # store 0x7f90bac0039274dc in memory
flw f19, 0(x2) # load 0x7f90bac0039274dc from memory into f19
fnmadd.s f15, f21, f24, f19, dyn # perform operation
fnmadd.s f15, f21, f24, f19, rdn # perform operation
fnmadd.s f15, f21, f24, f19, rmm # perform operation
fnmadd.s f15, f21, f24, f19, rne # perform operation
fnmadd.s f15, f21, f24, f19, rtz # perform operation
fnmadd.s f15, f21, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x16, 0xc89c72f7193bd76c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x24836a6f271bec36 # load x3 with value 0x24836a6f271bec36
sw x3, 0(x2) # store 0x24836a6f271bec36 in memory
flw f7, 0(x2) # load 0x24836a6f271bec36 from memory into f7
fnmadd.s f16, f24, f9, f7, dyn # perform operation
fnmadd.s f16, f24, f9, f7, rdn # perform operation
fnmadd.s f16, f24, f9, f7, rmm # perform operation
fnmadd.s f16, f24, f9, f7, rne # perform operation
fnmadd.s f16, f24, f9, f7, rtz # perform operation
fnmadd.s f16, f24, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x21, 0x37ac148fecc8a125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x2b218817fdb20ae3 # load x3 with value 0x2b218817fdb20ae3
sw x3, 0(x2) # store 0x2b218817fdb20ae3 in memory
flw f11, 0(x2) # load 0x2b218817fdb20ae3 from memory into f11
fnmadd.s f21, f26, f27, f11, dyn # perform operation
fnmadd.s f21, f26, f27, f11, rdn # perform operation
fnmadd.s f21, f26, f27, f11, rmm # perform operation
fnmadd.s f21, f26, f27, f11, rne # perform operation
fnmadd.s f21, f26, f27, f11, rtz # perform operation
fnmadd.s f21, f26, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f26, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f26, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f26, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f26, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f26, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x22, 0x2f9f183fbeaea1b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xb8265a825157cf0b # load x3 with value 0xb8265a825157cf0b
sw x3, 0(x2) # store 0xb8265a825157cf0b in memory
flw f6, 0(x2) # load 0xb8265a825157cf0b from memory into f6
fnmadd.s f22, f25, f14, f6, dyn # perform operation
fnmadd.s f22, f25, f14, f6, rdn # perform operation
fnmadd.s f22, f25, f14, f6, rmm # perform operation
fnmadd.s f22, f25, f14, f6, rne # perform operation
fnmadd.s f22, f25, f14, f6, rtz # perform operation
fnmadd.s f22, f25, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x25, 0xdbf50a3606844e04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xd0af5bf73160476a # load x3 with value 0xd0af5bf73160476a
sw x3, 0(x2) # store 0xd0af5bf73160476a in memory
flw f4, 0(x2) # load 0xd0af5bf73160476a from memory into f4
fnmadd.s f25, f26, f15, f4, dyn # perform operation
fnmadd.s f25, f26, f15, f4, rdn # perform operation
fnmadd.s f25, f26, f15, f4, rmm # perform operation
fnmadd.s f25, f26, f15, f4, rne # perform operation
fnmadd.s f25, f26, f15, f4, rtz # perform operation
fnmadd.s f25, f26, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x12, 0x966518094ad04166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0xe14177621d47e72c # load x3 with value 0xe14177621d47e72c
sw x3, 0(x2) # store 0xe14177621d47e72c in memory
flw f3, 0(x2) # load 0xe14177621d47e72c from memory into f3
fnmadd.s f12, f1, f2, f3, dyn # perform operation
fnmadd.s f12, f1, f2, f3, rdn # perform operation
fnmadd.s f12, f1, f2, f3, rmm # perform operation
fnmadd.s f12, f1, f2, f3, rne # perform operation
fnmadd.s f12, f1, f2, f3, rtz # perform operation
fnmadd.s f12, f1, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f1, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x23, 0x59b022cc16ac4be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xb0ad75104505d956 # load x3 with value 0xb0ad75104505d956
sw x3, 0(x2) # store 0xb0ad75104505d956 in memory
flw f8, 0(x2) # load 0xb0ad75104505d956 from memory into f8
fnmadd.s f23, f11, f13, f8, dyn # perform operation
fnmadd.s f23, f11, f13, f8, rdn # perform operation
fnmadd.s f23, f11, f13, f8, rmm # perform operation
fnmadd.s f23, f11, f13, f8, rne # perform operation
fnmadd.s f23, f11, f13, f8, rtz # perform operation
fnmadd.s f23, f11, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f11, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f11, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f11, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f11, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f11, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x6, 0xac485204b183ceae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x717b6fcd8042fb47 # load x3 with value 0x717b6fcd8042fb47
sw x3, 0(x2) # store 0x717b6fcd8042fb47 in memory
flw f31, 0(x2) # load 0x717b6fcd8042fb47 from memory into f31
fnmadd.s f6, f15, f30, f31, dyn # perform operation
fnmadd.s f6, f15, f30, f31, rdn # perform operation
fnmadd.s f6, f15, f30, f31, rmm # perform operation
fnmadd.s f6, f15, f30, f31, rne # perform operation
fnmadd.s f6, f15, f30, f31, rtz # perform operation
fnmadd.s f6, f15, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x3, 0xfbb75d180c115659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xbfd1c88d4ccd06f # load x3 with value 0xbfd1c88d4ccd06f
sw x3, 0(x2) # store 0xbfd1c88d4ccd06f in memory
flw f27, 0(x2) # load 0xbfd1c88d4ccd06f from memory into f27
fnmadd.s f3, f1, f23, f27, dyn # perform operation
fnmadd.s f3, f1, f23, f27, rdn # perform operation
fnmadd.s f3, f1, f23, f27, rmm # perform operation
fnmadd.s f3, f1, f23, f27, rne # perform operation
fnmadd.s f3, f1, f23, f27, rtz # perform operation
fnmadd.s f3, f1, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x8, 0x5deb52437e00b6cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xa2188cc4f40f914a # load x3 with value 0xa2188cc4f40f914a
sw x3, 0(x2) # store 0xa2188cc4f40f914a in memory
flw f26, 0(x2) # load 0xa2188cc4f40f914a from memory into f26
fnmadd.s f8, f23, f7, f26, dyn # perform operation
fnmadd.s f8, f23, f7, f26, rdn # perform operation
fnmadd.s f8, f23, f7, f26, rmm # perform operation
fnmadd.s f8, f23, f7, f26, rne # perform operation
fnmadd.s f8, f23, f7, f26, rtz # perform operation
fnmadd.s f8, f23, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x30, 0xa8d8eecc7305e326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x486697feff7c7738 # load x3 with value 0x486697feff7c7738
sw x3, 0(x2) # store 0x486697feff7c7738 in memory
flw f27, 0(x2) # load 0x486697feff7c7738 from memory into f27
fnmadd.s f30, f6, f22, f27, dyn # perform operation
fnmadd.s f30, f6, f22, f27, rdn # perform operation
fnmadd.s f30, f6, f22, f27, rmm # perform operation
fnmadd.s f30, f6, f22, f27, rne # perform operation
fnmadd.s f30, f6, f22, f27, rtz # perform operation
fnmadd.s f30, f6, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x7, 0xafc6a7ee1e71595d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xf1535dada80d5fdd # load x3 with value 0xf1535dada80d5fdd
sw x3, 0(x2) # store 0xf1535dada80d5fdd in memory
flw f29, 0(x2) # load 0xf1535dada80d5fdd from memory into f29
fnmadd.s f7, f30, f9, f29, dyn # perform operation
fnmadd.s f7, f30, f9, f29, rdn # perform operation
fnmadd.s f7, f30, f9, f29, rmm # perform operation
fnmadd.s f7, f30, f9, f29, rne # perform operation
fnmadd.s f7, f30, f9, f29, rtz # perform operation
fnmadd.s f7, f30, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x24, 0x63a318309bb9e791 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x2dced6455dace35 # load x3 with value 0x2dced6455dace35
sw x3, 0(x2) # store 0x2dced6455dace35 in memory
flw f5, 0(x2) # load 0x2dced6455dace35 from memory into f5
fnmadd.s f24, f21, f15, f5, dyn # perform operation
fnmadd.s f24, f21, f15, f5, rdn # perform operation
fnmadd.s f24, f21, f15, f5, rmm # perform operation
fnmadd.s f24, f21, f15, f5, rne # perform operation
fnmadd.s f24, f21, f15, f5, rtz # perform operation
fnmadd.s f24, f21, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x23, 0x9b4e208540643a92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x1a11bb1a735faf86 # load x3 with value 0x1a11bb1a735faf86
sw x3, 0(x2) # store 0x1a11bb1a735faf86 in memory
flw f24, 0(x2) # load 0x1a11bb1a735faf86 from memory into f24
fnmadd.s f23, f3, f12, f24, dyn # perform operation
fnmadd.s f23, f3, f12, f24, rdn # perform operation
fnmadd.s f23, f3, f12, f24, rmm # perform operation
fnmadd.s f23, f3, f12, f24, rne # perform operation
fnmadd.s f23, f3, f12, f24, rtz # perform operation
fnmadd.s f23, f3, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x13, 0xfacc303b57f15e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xa86c7fd7d7d682ad # load x3 with value 0xa86c7fd7d7d682ad
sw x3, 0(x2) # store 0xa86c7fd7d7d682ad in memory
flw f14, 0(x2) # load 0xa86c7fd7d7d682ad from memory into f14
fnmadd.s f13, f30, f10, f14, dyn # perform operation
fnmadd.s f13, f30, f10, f14, rdn # perform operation
fnmadd.s f13, f30, f10, f14, rmm # perform operation
fnmadd.s f13, f30, f10, f14, rne # perform operation
fnmadd.s f13, f30, f10, f14, rtz # perform operation
fnmadd.s f13, f30, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f30, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x11, 0xeb7c7d3739849843 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xbb658ebb64de5b70 # load x3 with value 0xbb658ebb64de5b70
sw x3, 0(x2) # store 0xbb658ebb64de5b70 in memory
flw f3, 0(x2) # load 0xbb658ebb64de5b70 from memory into f3
fnmadd.s f11, f30, f28, f3, dyn # perform operation
fnmadd.s f11, f30, f28, f3, rdn # perform operation
fnmadd.s f11, f30, f28, f3, rmm # perform operation
fnmadd.s f11, f30, f28, f3, rne # perform operation
fnmadd.s f11, f30, f28, f3, rtz # perform operation
fnmadd.s f11, f30, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x14, 0x21ded810d1923f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x4113fbe33fb56e5 # load x3 with value 0x4113fbe33fb56e5
sw x3, 0(x2) # store 0x4113fbe33fb56e5 in memory
flw f25, 0(x2) # load 0x4113fbe33fb56e5 from memory into f25
fnmadd.s f14, f18, f13, f25, dyn # perform operation
fnmadd.s f14, f18, f13, f25, rdn # perform operation
fnmadd.s f14, f18, f13, f25, rmm # perform operation
fnmadd.s f14, f18, f13, f25, rne # perform operation
fnmadd.s f14, f18, f13, f25, rtz # perform operation
fnmadd.s f14, f18, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x3, 0x3414076bdbeedce1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x4f4e0a8dfd1c1862 # load x3 with value 0x4f4e0a8dfd1c1862
sw x3, 0(x2) # store 0x4f4e0a8dfd1c1862 in memory
flw f22, 0(x2) # load 0x4f4e0a8dfd1c1862 from memory into f22
fnmadd.s f3, f14, f10, f22, dyn # perform operation
fnmadd.s f3, f14, f10, f22, rdn # perform operation
fnmadd.s f3, f14, f10, f22, rmm # perform operation
fnmadd.s f3, f14, f10, f22, rne # perform operation
fnmadd.s f3, f14, f10, f22, rtz # perform operation
fnmadd.s f3, f14, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f14, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f14, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f14, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f14, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f14, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x2, 0xf1ba9d9f35e3c017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xd5ce29ef48c7e961 # load x3 with value 0xd5ce29ef48c7e961
sw x3, 0(x2) # store 0xd5ce29ef48c7e961 in memory
flw f13, 0(x2) # load 0xd5ce29ef48c7e961 from memory into f13
fnmadd.s f2, f15, f29, f13, dyn # perform operation
fnmadd.s f2, f15, f29, f13, rdn # perform operation
fnmadd.s f2, f15, f29, f13, rmm # perform operation
fnmadd.s f2, f15, f29, f13, rne # perform operation
fnmadd.s f2, f15, f29, f13, rtz # perform operation
fnmadd.s f2, f15, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x24, 0xf0899669563f6f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x218c5284a6d255eb # load x3 with value 0x218c5284a6d255eb
sw x3, 0(x2) # store 0x218c5284a6d255eb in memory
flw f29, 0(x2) # load 0x218c5284a6d255eb from memory into f29
fnmadd.s f24, f3, f28, f29, dyn # perform operation
fnmadd.s f24, f3, f28, f29, rdn # perform operation
fnmadd.s f24, f3, f28, f29, rmm # perform operation
fnmadd.s f24, f3, f28, f29, rne # perform operation
fnmadd.s f24, f3, f28, f29, rtz # perform operation
fnmadd.s f24, f3, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x15, 0xc13c12c97ce4fc42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x1808ec3eee8e0296 # load x3 with value 0x1808ec3eee8e0296
sw x3, 0(x2) # store 0x1808ec3eee8e0296 in memory
flw f2, 0(x2) # load 0x1808ec3eee8e0296 from memory into f2
fnmadd.s f15, f18, f13, f2, dyn # perform operation
fnmadd.s f15, f18, f13, f2, rdn # perform operation
fnmadd.s f15, f18, f13, f2, rmm # perform operation
fnmadd.s f15, f18, f13, f2, rne # perform operation
fnmadd.s f15, f18, f13, f2, rtz # perform operation
fnmadd.s f15, f18, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x14, 0x203dee0527529cc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x953c87810e09835e # load x3 with value 0x953c87810e09835e
sw x3, 0(x2) # store 0x953c87810e09835e in memory
flw f2, 0(x2) # load 0x953c87810e09835e from memory into f2
fnmadd.s f14, f23, f21, f2, dyn # perform operation
fnmadd.s f14, f23, f21, f2, rdn # perform operation
fnmadd.s f14, f23, f21, f2, rmm # perform operation
fnmadd.s f14, f23, f21, f2, rne # perform operation
fnmadd.s f14, f23, f21, f2, rtz # perform operation
fnmadd.s f14, f23, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x15, 0xac8ca544e5184e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x3e3cf8aee125da5e # load x3 with value 0x3e3cf8aee125da5e
sw x3, 0(x2) # store 0x3e3cf8aee125da5e in memory
flw f25, 0(x2) # load 0x3e3cf8aee125da5e from memory into f25
fnmadd.s f15, f12, f4, f25, dyn # perform operation
fnmadd.s f15, f12, f4, f25, rdn # perform operation
fnmadd.s f15, f12, f4, f25, rmm # perform operation
fnmadd.s f15, f12, f4, f25, rne # perform operation
fnmadd.s f15, f12, f4, f25, rtz # perform operation
fnmadd.s f15, f12, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x17, 0x5c6c2335c830c4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x5c231954dd0454c3 # load x3 with value 0x5c231954dd0454c3
sw x3, 0(x2) # store 0x5c231954dd0454c3 in memory
flw f5, 0(x2) # load 0x5c231954dd0454c3 from memory into f5
fnmadd.s f17, f24, f14, f5, dyn # perform operation
fnmadd.s f17, f24, f14, f5, rdn # perform operation
fnmadd.s f17, f24, f14, f5, rmm # perform operation
fnmadd.s f17, f24, f14, f5, rne # perform operation
fnmadd.s f17, f24, f14, f5, rtz # perform operation
fnmadd.s f17, f24, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f24, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f24, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x25, 0x42f5c5f101b8bd6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xaa906571ce5f4715 # load x3 with value 0xaa906571ce5f4715
sw x3, 0(x2) # store 0xaa906571ce5f4715 in memory
flw f6, 0(x2) # load 0xaa906571ce5f4715 from memory into f6
fnmadd.s f25, f31, f14, f6, dyn # perform operation
fnmadd.s f25, f31, f14, f6, rdn # perform operation
fnmadd.s f25, f31, f14, f6, rmm # perform operation
fnmadd.s f25, f31, f14, f6, rne # perform operation
fnmadd.s f25, f31, f14, f6, rtz # perform operation
fnmadd.s f25, f31, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x16, 0x2206ddde4374f514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xde3b5df236d0c047 # load x3 with value 0xde3b5df236d0c047
sw x3, 0(x2) # store 0xde3b5df236d0c047 in memory
flw f3, 0(x2) # load 0xde3b5df236d0c047 from memory into f3
fnmadd.s f16, f6, f5, f3, dyn # perform operation
fnmadd.s f16, f6, f5, f3, rdn # perform operation
fnmadd.s f16, f6, f5, f3, rmm # perform operation
fnmadd.s f16, f6, f5, f3, rne # perform operation
fnmadd.s f16, f6, f5, f3, rtz # perform operation
fnmadd.s f16, f6, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f6, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x23, 0x47d60e1f659352c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x13fbd2584280e698 # load x3 with value 0x13fbd2584280e698
sw x3, 0(x2) # store 0x13fbd2584280e698 in memory
flw f26, 0(x2) # load 0x13fbd2584280e698 from memory into f26
fnmadd.s f23, f20, f15, f26, dyn # perform operation
fnmadd.s f23, f20, f15, f26, rdn # perform operation
fnmadd.s f23, f20, f15, f26, rmm # perform operation
fnmadd.s f23, f20, f15, f26, rne # perform operation
fnmadd.s f23, f20, f15, f26, rtz # perform operation
fnmadd.s f23, f20, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x13, 0x6eae15ab7bb05ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x71bf7842d0fec5b9 # load x3 with value 0x71bf7842d0fec5b9
sw x3, 0(x2) # store 0x71bf7842d0fec5b9 in memory
flw f28, 0(x2) # load 0x71bf7842d0fec5b9 from memory into f28
fnmadd.s f13, f26, f18, f28, dyn # perform operation
fnmadd.s f13, f26, f18, f28, rdn # perform operation
fnmadd.s f13, f26, f18, f28, rmm # perform operation
fnmadd.s f13, f26, f18, f28, rne # perform operation
fnmadd.s f13, f26, f18, f28, rtz # perform operation
fnmadd.s f13, f26, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x24, 0x22f5f82ea60e9e35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x4c1d8e04da04534 # load x3 with value 0x4c1d8e04da04534
sw x3, 0(x2) # store 0x4c1d8e04da04534 in memory
flw f21, 0(x2) # load 0x4c1d8e04da04534 from memory into f21
fnmadd.s f24, f23, f16, f21, dyn # perform operation
fnmadd.s f24, f23, f16, f21, rdn # perform operation
fnmadd.s f24, f23, f16, f21, rmm # perform operation
fnmadd.s f24, f23, f16, f21, rne # perform operation
fnmadd.s f24, f23, f16, f21, rtz # perform operation
fnmadd.s f24, f23, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f23, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x19, 0x71b4f2ec3ca03f1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x7d3e6ecc257fa3 # load x3 with value 0x7d3e6ecc257fa3
sw x3, 0(x2) # store 0x7d3e6ecc257fa3 in memory
flw f25, 0(x2) # load 0x7d3e6ecc257fa3 from memory into f25
fnmadd.s f19, f31, f2, f25, dyn # perform operation
fnmadd.s f19, f31, f2, f25, rdn # perform operation
fnmadd.s f19, f31, f2, f25, rmm # perform operation
fnmadd.s f19, f31, f2, f25, rne # perform operation
fnmadd.s f19, f31, f2, f25, rtz # perform operation
fnmadd.s f19, f31, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x1, 0xfdd05a5c8deb768d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x8f525d41b9bd773e # load x3 with value 0x8f525d41b9bd773e
sw x3, 0(x2) # store 0x8f525d41b9bd773e in memory
flw f5, 0(x2) # load 0x8f525d41b9bd773e from memory into f5
fnmadd.s f1, f14, f4, f5, dyn # perform operation
fnmadd.s f1, f14, f4, f5, rdn # perform operation
fnmadd.s f1, f14, f4, f5, rmm # perform operation
fnmadd.s f1, f14, f4, f5, rne # perform operation
fnmadd.s f1, f14, f4, f5, rtz # perform operation
fnmadd.s f1, f14, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x22, 0x1a4abd403e950e04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x3545dadb01263643 # load x3 with value 0x3545dadb01263643
sw x3, 0(x2) # store 0x3545dadb01263643 in memory
flw f15, 0(x2) # load 0x3545dadb01263643 from memory into f15
fnmadd.s f22, f18, f28, f15, dyn # perform operation
fnmadd.s f22, f18, f28, f15, rdn # perform operation
fnmadd.s f22, f18, f28, f15, rmm # perform operation
fnmadd.s f22, f18, f28, f15, rne # perform operation
fnmadd.s f22, f18, f28, f15, rtz # perform operation
fnmadd.s f22, f18, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x29, 0xcf76aacc6e6ff34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x9f30521694634322 # load x3 with value 0x9f30521694634322
sw x3, 0(x2) # store 0x9f30521694634322 in memory
flw f11, 0(x2) # load 0x9f30521694634322 from memory into f11
fnmadd.s f29, f7, f22, f11, dyn # perform operation
fnmadd.s f29, f7, f22, f11, rdn # perform operation
fnmadd.s f29, f7, f22, f11, rmm # perform operation
fnmadd.s f29, f7, f22, f11, rne # perform operation
fnmadd.s f29, f7, f22, f11, rtz # perform operation
fnmadd.s f29, f7, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x14, 0x433575cfb6ae865c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x37c95dea3b1d32d # load x3 with value 0x37c95dea3b1d32d
sw x3, 0(x2) # store 0x37c95dea3b1d32d in memory
flw f18, 0(x2) # load 0x37c95dea3b1d32d from memory into f18
fnmadd.s f14, f4, f6, f18, dyn # perform operation
fnmadd.s f14, f4, f6, f18, rdn # perform operation
fnmadd.s f14, f4, f6, f18, rmm # perform operation
fnmadd.s f14, f4, f6, f18, rne # perform operation
fnmadd.s f14, f4, f6, f18, rtz # perform operation
fnmadd.s f14, f4, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f4, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f4, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f4, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f4, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f4, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x15, 0x2992b51369d9e33f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x5db69b628055f3bb # load x3 with value 0x5db69b628055f3bb
sw x3, 0(x2) # store 0x5db69b628055f3bb in memory
flw f17, 0(x2) # load 0x5db69b628055f3bb from memory into f17
fnmadd.s f15, f16, f8, f17, dyn # perform operation
fnmadd.s f15, f16, f8, f17, rdn # perform operation
fnmadd.s f15, f16, f8, f17, rmm # perform operation
fnmadd.s f15, f16, f8, f17, rne # perform operation
fnmadd.s f15, f16, f8, f17, rtz # perform operation
fnmadd.s f15, f16, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f16, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f16, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x5, 0x2f984a05bc9eeb1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x6d16d732dd46a7fa # load x3 with value 0x6d16d732dd46a7fa
sw x3, 0(x2) # store 0x6d16d732dd46a7fa in memory
flw f3, 0(x2) # load 0x6d16d732dd46a7fa from memory into f3
fnmadd.s f5, f31, f28, f3, dyn # perform operation
fnmadd.s f5, f31, f28, f3, rdn # perform operation
fnmadd.s f5, f31, f28, f3, rmm # perform operation
fnmadd.s f5, f31, f28, f3, rne # perform operation
fnmadd.s f5, f31, f28, f3, rtz # perform operation
fnmadd.s f5, f31, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x23, 0x17a0765fa5d5b1b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x1fa37893b70f1e86 # load x3 with value 0x1fa37893b70f1e86
sw x3, 0(x2) # store 0x1fa37893b70f1e86 in memory
flw f3, 0(x2) # load 0x1fa37893b70f1e86 from memory into f3
fnmadd.s f23, f16, f30, f3, dyn # perform operation
fnmadd.s f23, f16, f30, f3, rdn # perform operation
fnmadd.s f23, f16, f30, f3, rmm # perform operation
fnmadd.s f23, f16, f30, f3, rne # perform operation
fnmadd.s f23, f16, f30, f3, rtz # perform operation
fnmadd.s f23, f16, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x16, 0xadc99f7fcad5e725 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x6f79b6be1cb8530e # load x3 with value 0x6f79b6be1cb8530e
sw x3, 0(x2) # store 0x6f79b6be1cb8530e in memory
flw f11, 0(x2) # load 0x6f79b6be1cb8530e from memory into f11
fnmadd.s f16, f1, f6, f11, dyn # perform operation
fnmadd.s f16, f1, f6, f11, rdn # perform operation
fnmadd.s f16, f1, f6, f11, rmm # perform operation
fnmadd.s f16, f1, f6, f11, rne # perform operation
fnmadd.s f16, f1, f6, f11, rtz # perform operation
fnmadd.s f16, f1, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x17, 0x076038bd44bd0e1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xb9ca19063feb881a # load x3 with value 0xb9ca19063feb881a
sw x3, 0(x2) # store 0xb9ca19063feb881a in memory
flw f18, 0(x2) # load 0xb9ca19063feb881a from memory into f18
fnmadd.s f17, f19, f5, f18, dyn # perform operation
fnmadd.s f17, f19, f5, f18, rdn # perform operation
fnmadd.s f17, f19, f5, f18, rmm # perform operation
fnmadd.s f17, f19, f5, f18, rne # perform operation
fnmadd.s f17, f19, f5, f18, rtz # perform operation
fnmadd.s f17, f19, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x15, 0xd017ffc491e7ed8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x2c35360ed4ac739b # load x3 with value 0x2c35360ed4ac739b
sw x3, 0(x2) # store 0x2c35360ed4ac739b in memory
flw f24, 0(x2) # load 0x2c35360ed4ac739b from memory into f24
fnmadd.s f15, f9, f5, f24, dyn # perform operation
fnmadd.s f15, f9, f5, f24, rdn # perform operation
fnmadd.s f15, f9, f5, f24, rmm # perform operation
fnmadd.s f15, f9, f5, f24, rne # perform operation
fnmadd.s f15, f9, f5, f24, rtz # perform operation
fnmadd.s f15, f9, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x10, 0x4a0b09e122f4b822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0xf6587a99e36a851f # load x3 with value 0xf6587a99e36a851f
sw x3, 0(x2) # store 0xf6587a99e36a851f in memory
flw f17, 0(x2) # load 0xf6587a99e36a851f from memory into f17
fnmadd.s f10, f15, f12, f17, dyn # perform operation
fnmadd.s f10, f15, f12, f17, rdn # perform operation
fnmadd.s f10, f15, f12, f17, rmm # perform operation
fnmadd.s f10, f15, f12, f17, rne # perform operation
fnmadd.s f10, f15, f12, f17, rtz # perform operation
fnmadd.s f10, f15, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x18, 0x4fb8a4fea8bdb64b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x7a2dede8130ad25a # load x3 with value 0x7a2dede8130ad25a
sw x3, 0(x2) # store 0x7a2dede8130ad25a in memory
flw f24, 0(x2) # load 0x7a2dede8130ad25a from memory into f24
fnmadd.s f18, f30, f10, f24, dyn # perform operation
fnmadd.s f18, f30, f10, f24, rdn # perform operation
fnmadd.s f18, f30, f10, f24, rmm # perform operation
fnmadd.s f18, f30, f10, f24, rne # perform operation
fnmadd.s f18, f30, f10, f24, rtz # perform operation
fnmadd.s f18, f30, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f30, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f30, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f30, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f30, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f30, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x14, 0x5ed39ce27d0103da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x1b670840c9d81c8b # load x3 with value 0x1b670840c9d81c8b
sw x3, 0(x2) # store 0x1b670840c9d81c8b in memory
flw f15, 0(x2) # load 0x1b670840c9d81c8b from memory into f15
fnmadd.s f14, f23, f9, f15, dyn # perform operation
fnmadd.s f14, f23, f9, f15, rdn # perform operation
fnmadd.s f14, f23, f9, f15, rmm # perform operation
fnmadd.s f14, f23, f9, f15, rne # perform operation
fnmadd.s f14, f23, f9, f15, rtz # perform operation
fnmadd.s f14, f23, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x28, 0x2f1c5fb5e083035b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x9e98fc3b4e18f8c3 # load x3 with value 0x9e98fc3b4e18f8c3
sw x3, 0(x2) # store 0x9e98fc3b4e18f8c3 in memory
flw f31, 0(x2) # load 0x9e98fc3b4e18f8c3 from memory into f31
fnmadd.s f28, f21, f27, f31, dyn # perform operation
fnmadd.s f28, f21, f27, f31, rdn # perform operation
fnmadd.s f28, f21, f27, f31, rmm # perform operation
fnmadd.s f28, f21, f27, f31, rne # perform operation
fnmadd.s f28, f21, f27, f31, rtz # perform operation
fnmadd.s f28, f21, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x9, 0xd9595a43482708fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x8d9f2cf5b896312a # load x3 with value 0x8d9f2cf5b896312a
sw x3, 0(x2) # store 0x8d9f2cf5b896312a in memory
flw f30, 0(x2) # load 0x8d9f2cf5b896312a from memory into f30
fnmadd.s f9, f3, f16, f30, dyn # perform operation
fnmadd.s f9, f3, f16, f30, rdn # perform operation
fnmadd.s f9, f3, f16, f30, rmm # perform operation
fnmadd.s f9, f3, f16, f30, rne # perform operation
fnmadd.s f9, f3, f16, f30, rtz # perform operation
fnmadd.s f9, f3, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x26, 0xf7c303bbf03ef338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x66fd231227c791b1 # load x3 with value 0x66fd231227c791b1
sw x3, 0(x2) # store 0x66fd231227c791b1 in memory
flw f10, 0(x2) # load 0x66fd231227c791b1 from memory into f10
fnmadd.s f26, f31, f18, f10, dyn # perform operation
fnmadd.s f26, f31, f18, f10, rdn # perform operation
fnmadd.s f26, f31, f18, f10, rmm # perform operation
fnmadd.s f26, f31, f18, f10, rne # perform operation
fnmadd.s f26, f31, f18, f10, rtz # perform operation
fnmadd.s f26, f31, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x12, 0xce3d04f95dcf14de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x6b8f215bf7242683 # load x3 with value 0x6b8f215bf7242683
sw x3, 0(x2) # store 0x6b8f215bf7242683 in memory
flw f24, 0(x2) # load 0x6b8f215bf7242683 from memory into f24
fnmadd.s f12, f10, f27, f24, dyn # perform operation
fnmadd.s f12, f10, f27, f24, rdn # perform operation
fnmadd.s f12, f10, f27, f24, rmm # perform operation
fnmadd.s f12, f10, f27, f24, rne # perform operation
fnmadd.s f12, f10, f27, f24, rtz # perform operation
fnmadd.s f12, f10, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x3, 0x268ceee83f720387 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xdfa59ed106302a7f # load x3 with value 0xdfa59ed106302a7f
sw x3, 0(x2) # store 0xdfa59ed106302a7f in memory
flw f26, 0(x2) # load 0xdfa59ed106302a7f from memory into f26
fnmadd.s f3, f5, f7, f26, dyn # perform operation
fnmadd.s f3, f5, f7, f26, rdn # perform operation
fnmadd.s f3, f5, f7, f26, rmm # perform operation
fnmadd.s f3, f5, f7, f26, rne # perform operation
fnmadd.s f3, f5, f7, f26, rtz # perform operation
fnmadd.s f3, f5, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x17, 0x0dbf3f8bbe26396e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x2d91942ee91eb784 # load x3 with value 0x2d91942ee91eb784
sw x3, 0(x2) # store 0x2d91942ee91eb784 in memory
flw f2, 0(x2) # load 0x2d91942ee91eb784 from memory into f2
fnmadd.s f17, f1, f6, f2, dyn # perform operation
fnmadd.s f17, f1, f6, f2, rdn # perform operation
fnmadd.s f17, f1, f6, f2, rmm # perform operation
fnmadd.s f17, f1, f6, f2, rne # perform operation
fnmadd.s f17, f1, f6, f2, rtz # perform operation
fnmadd.s f17, f1, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x28, 0x07e5ae06ebe6f3c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x47db9d4408383c22 # load x3 with value 0x47db9d4408383c22
sw x3, 0(x2) # store 0x47db9d4408383c22 in memory
flw f16, 0(x2) # load 0x47db9d4408383c22 from memory into f16
fnmadd.s f28, f30, f9, f16, dyn # perform operation
fnmadd.s f28, f30, f9, f16, rdn # perform operation
fnmadd.s f28, f30, f9, f16, rmm # perform operation
fnmadd.s f28, f30, f9, f16, rne # perform operation
fnmadd.s f28, f30, f9, f16, rtz # perform operation
fnmadd.s f28, f30, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x4, 0xf2f2a5ce0c5c3724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x3dbcd716f64bd3f9 # load x3 with value 0x3dbcd716f64bd3f9
sw x3, 0(x2) # store 0x3dbcd716f64bd3f9 in memory
flw f24, 0(x2) # load 0x3dbcd716f64bd3f9 from memory into f24
fnmadd.s f4, f7, f28, f24, dyn # perform operation
fnmadd.s f4, f7, f28, f24, rdn # perform operation
fnmadd.s f4, f7, f28, f24, rmm # perform operation
fnmadd.s f4, f7, f28, f24, rne # perform operation
fnmadd.s f4, f7, f28, f24, rtz # perform operation
fnmadd.s f4, f7, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f7, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f7, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x6, 0x2737febd32bf9436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x3efa4bd8b3b7c551 # load x3 with value 0x3efa4bd8b3b7c551
sw x3, 0(x2) # store 0x3efa4bd8b3b7c551 in memory
flw f27, 0(x2) # load 0x3efa4bd8b3b7c551 from memory into f27
fnmadd.s f6, f4, f21, f27, dyn # perform operation
fnmadd.s f6, f4, f21, f27, rdn # perform operation
fnmadd.s f6, f4, f21, f27, rmm # perform operation
fnmadd.s f6, f4, f21, f27, rne # perform operation
fnmadd.s f6, f4, f21, f27, rtz # perform operation
fnmadd.s f6, f4, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f4, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x28, 0xe565929fa822c870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x677e34b05b3ee4d3 # load x3 with value 0x677e34b05b3ee4d3
sw x3, 0(x2) # store 0x677e34b05b3ee4d3 in memory
flw f3, 0(x2) # load 0x677e34b05b3ee4d3 from memory into f3
fnmadd.s f28, f12, f21, f3, dyn # perform operation
fnmadd.s f28, f12, f21, f3, rdn # perform operation
fnmadd.s f28, f12, f21, f3, rmm # perform operation
fnmadd.s f28, f12, f21, f3, rne # perform operation
fnmadd.s f28, f12, f21, f3, rtz # perform operation
fnmadd.s f28, f12, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x12, 0x6760b169b5e70615 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x9f096c67b93d02c6 # load x3 with value 0x9f096c67b93d02c6
sw x3, 0(x2) # store 0x9f096c67b93d02c6 in memory
flw f31, 0(x2) # load 0x9f096c67b93d02c6 from memory into f31
fnmadd.s f12, f28, f10, f31, dyn # perform operation
fnmadd.s f12, f28, f10, f31, rdn # perform operation
fnmadd.s f12, f28, f10, f31, rmm # perform operation
fnmadd.s f12, f28, f10, f31, rne # perform operation
fnmadd.s f12, f28, f10, f31, rtz # perform operation
fnmadd.s f12, f28, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x2, 0x2e27d20f77554163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xaefeae74edb3b996 # load x3 with value 0xaefeae74edb3b996
sw x3, 0(x2) # store 0xaefeae74edb3b996 in memory
flw f5, 0(x2) # load 0xaefeae74edb3b996 from memory into f5
fnmadd.s f2, f8, f3, f5, dyn # perform operation
fnmadd.s f2, f8, f3, f5, rdn # perform operation
fnmadd.s f2, f8, f3, f5, rmm # perform operation
fnmadd.s f2, f8, f3, f5, rne # perform operation
fnmadd.s f2, f8, f3, f5, rtz # perform operation
fnmadd.s f2, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x11, 0x1c4beb6e41ef2b3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x7d49d0c8043a90cd # load x3 with value 0x7d49d0c8043a90cd
sw x3, 0(x2) # store 0x7d49d0c8043a90cd in memory
flw f2, 0(x2) # load 0x7d49d0c8043a90cd from memory into f2
fnmadd.s f11, f18, f26, f2, dyn # perform operation
fnmadd.s f11, f18, f26, f2, rdn # perform operation
fnmadd.s f11, f18, f26, f2, rmm # perform operation
fnmadd.s f11, f18, f26, f2, rne # perform operation
fnmadd.s f11, f18, f26, f2, rtz # perform operation
fnmadd.s f11, f18, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x25, 0xa59fd9cec31f757c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xd00ef0b3e57de532 # load x3 with value 0xd00ef0b3e57de532
sw x3, 0(x2) # store 0xd00ef0b3e57de532 in memory
flw f15, 0(x2) # load 0xd00ef0b3e57de532 from memory into f15
fnmadd.s f25, f5, f1, f15, dyn # perform operation
fnmadd.s f25, f5, f1, f15, rdn # perform operation
fnmadd.s f25, f5, f1, f15, rmm # perform operation
fnmadd.s f25, f5, f1, f15, rne # perform operation
fnmadd.s f25, f5, f1, f15, rtz # perform operation
fnmadd.s f25, f5, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x14, 0x8ff8e79cc4127c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x53fdadbba648e62b # load x3 with value 0x53fdadbba648e62b
sw x3, 0(x2) # store 0x53fdadbba648e62b in memory
flw f1, 0(x2) # load 0x53fdadbba648e62b from memory into f1
fnmadd.s f14, f21, f29, f1, dyn # perform operation
fnmadd.s f14, f21, f29, f1, rdn # perform operation
fnmadd.s f14, f21, f29, f1, rmm # perform operation
fnmadd.s f14, f21, f29, f1, rne # perform operation
fnmadd.s f14, f21, f29, f1, rtz # perform operation
fnmadd.s f14, f21, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x23, 0x777edd4ea97696bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x22364c50c13952cf # load x3 with value 0x22364c50c13952cf
sw x3, 0(x2) # store 0x22364c50c13952cf in memory
flw f6, 0(x2) # load 0x22364c50c13952cf from memory into f6
fnmadd.s f23, f27, f14, f6, dyn # perform operation
fnmadd.s f23, f27, f14, f6, rdn # perform operation
fnmadd.s f23, f27, f14, f6, rmm # perform operation
fnmadd.s f23, f27, f14, f6, rne # perform operation
fnmadd.s f23, f27, f14, f6, rtz # perform operation
fnmadd.s f23, f27, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x11, 0x7ba30fd90be0676d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x43215d8e37f53b98 # load x3 with value 0x43215d8e37f53b98
sw x3, 0(x2) # store 0x43215d8e37f53b98 in memory
flw f2, 0(x2) # load 0x43215d8e37f53b98 from memory into f2
fnmadd.s f11, f25, f8, f2, dyn # perform operation
fnmadd.s f11, f25, f8, f2, rdn # perform operation
fnmadd.s f11, f25, f8, f2, rmm # perform operation
fnmadd.s f11, f25, f8, f2, rne # perform operation
fnmadd.s f11, f25, f8, f2, rtz # perform operation
fnmadd.s f11, f25, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x1, 0x6f33cdf63f75aabb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xdce309d4c9644b22 # load x3 with value 0xdce309d4c9644b22
sw x3, 0(x2) # store 0xdce309d4c9644b22 in memory
flw f22, 0(x2) # load 0xdce309d4c9644b22 from memory into f22
fnmadd.s f1, f24, f2, f22, dyn # perform operation
fnmadd.s f1, f24, f2, f22, rdn # perform operation
fnmadd.s f1, f24, f2, f22, rmm # perform operation
fnmadd.s f1, f24, f2, f22, rne # perform operation
fnmadd.s f1, f24, f2, f22, rtz # perform operation
fnmadd.s f1, f24, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f24, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x26, 0x068d014278be557a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xb086129bcebbfc8e # load x3 with value 0xb086129bcebbfc8e
sw x3, 0(x2) # store 0xb086129bcebbfc8e in memory
flw f10, 0(x2) # load 0xb086129bcebbfc8e from memory into f10
fnmadd.s f26, f31, f5, f10, dyn # perform operation
fnmadd.s f26, f31, f5, f10, rdn # perform operation
fnmadd.s f26, f31, f5, f10, rmm # perform operation
fnmadd.s f26, f31, f5, f10, rne # perform operation
fnmadd.s f26, f31, f5, f10, rtz # perform operation
fnmadd.s f26, f31, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x2, 0x335d223c5a15d532 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x79acaf6dc0a77276 # load x3 with value 0x79acaf6dc0a77276
sw x3, 0(x2) # store 0x79acaf6dc0a77276 in memory
flw f22, 0(x2) # load 0x79acaf6dc0a77276 from memory into f22
fnmadd.s f2, f29, f3, f22, dyn # perform operation
fnmadd.s f2, f29, f3, f22, rdn # perform operation
fnmadd.s f2, f29, f3, f22, rmm # perform operation
fnmadd.s f2, f29, f3, f22, rne # perform operation
fnmadd.s f2, f29, f3, f22, rtz # perform operation
fnmadd.s f2, f29, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x27, 0xa8c9da4a42f89883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x8cb17d04a8ee8fa9 # load x3 with value 0x8cb17d04a8ee8fa9
sw x3, 0(x2) # store 0x8cb17d04a8ee8fa9 in memory
flw f3, 0(x2) # load 0x8cb17d04a8ee8fa9 from memory into f3
fnmadd.s f27, f8, f10, f3, dyn # perform operation
fnmadd.s f27, f8, f10, f3, rdn # perform operation
fnmadd.s f27, f8, f10, f3, rmm # perform operation
fnmadd.s f27, f8, f10, f3, rne # perform operation
fnmadd.s f27, f8, f10, f3, rtz # perform operation
fnmadd.s f27, f8, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x17, 0x4523d22cf0c34ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x353cd6a76407e20c # load x3 with value 0x353cd6a76407e20c
sw x3, 0(x2) # store 0x353cd6a76407e20c in memory
flw f2, 0(x2) # load 0x353cd6a76407e20c from memory into f2
fnmadd.s f17, f3, f15, f2, dyn # perform operation
fnmadd.s f17, f3, f15, f2, rdn # perform operation
fnmadd.s f17, f3, f15, f2, rmm # perform operation
fnmadd.s f17, f3, f15, f2, rne # perform operation
fnmadd.s f17, f3, f15, f2, rtz # perform operation
fnmadd.s f17, f3, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f3, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f3, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f3, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f3, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f3, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x3, 0x1f3876983dc022a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0xfda9bfff151c1f61 # load x3 with value 0xfda9bfff151c1f61
sw x3, 0(x2) # store 0xfda9bfff151c1f61 in memory
flw f17, 0(x2) # load 0xfda9bfff151c1f61 from memory into f17
fnmadd.s f3, f2, f4, f17, dyn # perform operation
fnmadd.s f3, f2, f4, f17, rdn # perform operation
fnmadd.s f3, f2, f4, f17, rmm # perform operation
fnmadd.s f3, f2, f4, f17, rne # perform operation
fnmadd.s f3, f2, f4, f17, rtz # perform operation
fnmadd.s f3, f2, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f2, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f2, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f2, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f2, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f2, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x8, 0xa8d07cf4ccdbd52a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xd64890e2db3f039b # load x3 with value 0xd64890e2db3f039b
sw x3, 0(x2) # store 0xd64890e2db3f039b in memory
flw f29, 0(x2) # load 0xd64890e2db3f039b from memory into f29
fnmadd.s f8, f20, f24, f29, dyn # perform operation
fnmadd.s f8, f20, f24, f29, rdn # perform operation
fnmadd.s f8, f20, f24, f29, rmm # perform operation
fnmadd.s f8, f20, f24, f29, rne # perform operation
fnmadd.s f8, f20, f24, f29, rtz # perform operation
fnmadd.s f8, f20, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x20, 0x0a4948565e7507b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xc254f479397d2f98 # load x3 with value 0xc254f479397d2f98
sw x3, 0(x2) # store 0xc254f479397d2f98 in memory
flw f30, 0(x2) # load 0xc254f479397d2f98 from memory into f30
fnmadd.s f20, f22, f27, f30, dyn # perform operation
fnmadd.s f20, f22, f27, f30, rdn # perform operation
fnmadd.s f20, f22, f27, f30, rmm # perform operation
fnmadd.s f20, f22, f27, f30, rne # perform operation
fnmadd.s f20, f22, f27, f30, rtz # perform operation
fnmadd.s f20, f22, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x6, 0x687f0afa406facd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xad4cf3f004a347a5 # load x3 with value 0xad4cf3f004a347a5
sw x3, 0(x2) # store 0xad4cf3f004a347a5 in memory
flw f16, 0(x2) # load 0xad4cf3f004a347a5 from memory into f16
fnmadd.s f6, f27, f24, f16, dyn # perform operation
fnmadd.s f6, f27, f24, f16, rdn # perform operation
fnmadd.s f6, f27, f24, f16, rmm # perform operation
fnmadd.s f6, f27, f24, f16, rne # perform operation
fnmadd.s f6, f27, f24, f16, rtz # perform operation
fnmadd.s f6, f27, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f27, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f27, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f27, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f27, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f27, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x15, 0x7ad9b789e5840eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xc803fc14005f8046 # load x3 with value 0xc803fc14005f8046
sw x3, 0(x2) # store 0xc803fc14005f8046 in memory
flw f30, 0(x2) # load 0xc803fc14005f8046 from memory into f30
fnmadd.s f15, f5, f31, f30, dyn # perform operation
fnmadd.s f15, f5, f31, f30, rdn # perform operation
fnmadd.s f15, f5, f31, f30, rmm # perform operation
fnmadd.s f15, f5, f31, f30, rne # perform operation
fnmadd.s f15, f5, f31, f30, rtz # perform operation
fnmadd.s f15, f5, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f5, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f5, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f5, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f5, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f5, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x15, 0x180ed9279591da95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x6f30abf1bea35097 # load x3 with value 0x6f30abf1bea35097
sw x3, 0(x2) # store 0x6f30abf1bea35097 in memory
flw f26, 0(x2) # load 0x6f30abf1bea35097 from memory into f26
fnmadd.s f15, f28, f12, f26, dyn # perform operation
fnmadd.s f15, f28, f12, f26, rdn # perform operation
fnmadd.s f15, f28, f12, f26, rmm # perform operation
fnmadd.s f15, f28, f12, f26, rne # perform operation
fnmadd.s f15, f28, f12, f26, rtz # perform operation
fnmadd.s f15, f28, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f28, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f28, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x7, 0x2d6dc3cdf613534c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x61a6903c1633f0ef # load x3 with value 0x61a6903c1633f0ef
sw x3, 0(x2) # store 0x61a6903c1633f0ef in memory
flw f24, 0(x2) # load 0x61a6903c1633f0ef from memory into f24
fnmadd.s f7, f17, f26, f24, dyn # perform operation
fnmadd.s f7, f17, f26, f24, rdn # perform operation
fnmadd.s f7, f17, f26, f24, rmm # perform operation
fnmadd.s f7, f17, f26, f24, rne # perform operation
fnmadd.s f7, f17, f26, f24, rtz # perform operation
fnmadd.s f7, f17, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f17, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f17, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f17, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f17, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f17, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x29, 0xe8bbcfc9edc1924b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x3ece95f88673e6c0 # load x3 with value 0x3ece95f88673e6c0
sw x3, 0(x2) # store 0x3ece95f88673e6c0 in memory
flw f10, 0(x2) # load 0x3ece95f88673e6c0 from memory into f10
fnmadd.s f29, f7, f30, f10, dyn # perform operation
fnmadd.s f29, f7, f30, f10, rdn # perform operation
fnmadd.s f29, f7, f30, f10, rmm # perform operation
fnmadd.s f29, f7, f30, f10, rne # perform operation
fnmadd.s f29, f7, f30, f10, rtz # perform operation
fnmadd.s f29, f7, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x18, 0x2bd53fa12453510d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x459139ef431c329 # load x3 with value 0x459139ef431c329
sw x3, 0(x2) # store 0x459139ef431c329 in memory
flw f10, 0(x2) # load 0x459139ef431c329 from memory into f10
fnmadd.s f18, f16, f5, f10, dyn # perform operation
fnmadd.s f18, f16, f5, f10, rdn # perform operation
fnmadd.s f18, f16, f5, f10, rmm # perform operation
fnmadd.s f18, f16, f5, f10, rne # perform operation
fnmadd.s f18, f16, f5, f10, rtz # perform operation
fnmadd.s f18, f16, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x29, 0x0d1b99693fca1732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x1e6c36f976d56320 # load x3 with value 0x1e6c36f976d56320
sw x3, 0(x2) # store 0x1e6c36f976d56320 in memory
flw f20, 0(x2) # load 0x1e6c36f976d56320 from memory into f20
fnmadd.s f29, f8, f18, f20, dyn # perform operation
fnmadd.s f29, f8, f18, f20, rdn # perform operation
fnmadd.s f29, f8, f18, f20, rmm # perform operation
fnmadd.s f29, f8, f18, f20, rne # perform operation
fnmadd.s f29, f8, f18, f20, rtz # perform operation
fnmadd.s f29, f8, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x2, 0x8a095de9822a9b15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x74c99355f7c35e13 # load x3 with value 0x74c99355f7c35e13
sw x3, 0(x2) # store 0x74c99355f7c35e13 in memory
flw f11, 0(x2) # load 0x74c99355f7c35e13 from memory into f11
fnmadd.s f2, f22, f12, f11, dyn # perform operation
fnmadd.s f2, f22, f12, f11, rdn # perform operation
fnmadd.s f2, f22, f12, f11, rmm # perform operation
fnmadd.s f2, f22, f12, f11, rne # perform operation
fnmadd.s f2, f22, f12, f11, rtz # perform operation
fnmadd.s f2, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x29, 0x93c788b6da0708ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xfc0c50446ff4373f # load x3 with value 0xfc0c50446ff4373f
sw x3, 0(x2) # store 0xfc0c50446ff4373f in memory
flw f19, 0(x2) # load 0xfc0c50446ff4373f from memory into f19
fnmadd.s f29, f23, f20, f19, dyn # perform operation
fnmadd.s f29, f23, f20, f19, rdn # perform operation
fnmadd.s f29, f23, f20, f19, rmm # perform operation
fnmadd.s f29, f23, f20, f19, rne # perform operation
fnmadd.s f29, f23, f20, f19, rtz # perform operation
fnmadd.s f29, f23, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x23, 0xb446876454cea184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x1ff1ba1739e75c82 # load x3 with value 0x1ff1ba1739e75c82
sw x3, 0(x2) # store 0x1ff1ba1739e75c82 in memory
flw f17, 0(x2) # load 0x1ff1ba1739e75c82 from memory into f17
fnmadd.s f23, f21, f1, f17, dyn # perform operation
fnmadd.s f23, f21, f1, f17, rdn # perform operation
fnmadd.s f23, f21, f1, f17, rmm # perform operation
fnmadd.s f23, f21, f1, f17, rne # perform operation
fnmadd.s f23, f21, f1, f17, rtz # perform operation
fnmadd.s f23, f21, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x13, 0x008d2f928ef54284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x3a60193b29b592bd # load x3 with value 0x3a60193b29b592bd
sw x3, 0(x2) # store 0x3a60193b29b592bd in memory
flw f25, 0(x2) # load 0x3a60193b29b592bd from memory into f25
fnmadd.s f13, f10, f7, f25, dyn # perform operation
fnmadd.s f13, f10, f7, f25, rdn # perform operation
fnmadd.s f13, f10, f7, f25, rmm # perform operation
fnmadd.s f13, f10, f7, f25, rne # perform operation
fnmadd.s f13, f10, f7, f25, rtz # perform operation
fnmadd.s f13, f10, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f10, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f10, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f10, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f10, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f10, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x24, 0xf1276714810aa752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xecb2381d353eeb6e # load x3 with value 0xecb2381d353eeb6e
sw x3, 0(x2) # store 0xecb2381d353eeb6e in memory
flw f17, 0(x2) # load 0xecb2381d353eeb6e from memory into f17
fnmadd.s f24, f7, f11, f17, dyn # perform operation
fnmadd.s f24, f7, f11, f17, rdn # perform operation
fnmadd.s f24, f7, f11, f17, rmm # perform operation
fnmadd.s f24, f7, f11, f17, rne # perform operation
fnmadd.s f24, f7, f11, f17, rtz # perform operation
fnmadd.s f24, f7, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x2, 0x4cb4404e528af7f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0xe54239345f9d8fea # load x3 with value 0xe54239345f9d8fea
sw x3, 0(x2) # store 0xe54239345f9d8fea in memory
flw f13, 0(x2) # load 0xe54239345f9d8fea from memory into f13
fnmadd.s f2, f25, f31, f13, dyn # perform operation
fnmadd.s f2, f25, f31, f13, rdn # perform operation
fnmadd.s f2, f25, f31, f13, rmm # perform operation
fnmadd.s f2, f25, f31, f13, rne # perform operation
fnmadd.s f2, f25, f31, f13, rtz # perform operation
fnmadd.s f2, f25, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f25, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x31, 0xc907ff0e706e9e50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xb3e5845ff944e982 # load x3 with value 0xb3e5845ff944e982
sw x3, 0(x2) # store 0xb3e5845ff944e982 in memory
flw f12, 0(x2) # load 0xb3e5845ff944e982 from memory into f12
fnmadd.s f31, f27, f24, f12, dyn # perform operation
fnmadd.s f31, f27, f24, f12, rdn # perform operation
fnmadd.s f31, f27, f24, f12, rmm # perform operation
fnmadd.s f31, f27, f24, f12, rne # perform operation
fnmadd.s f31, f27, f24, f12, rtz # perform operation
fnmadd.s f31, f27, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x12, 0x837e7d197f196ec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x2dea256fb1646551 # load x3 with value 0x2dea256fb1646551
sw x3, 0(x2) # store 0x2dea256fb1646551 in memory
flw f27, 0(x2) # load 0x2dea256fb1646551 from memory into f27
fnmadd.s f12, f13, f19, f27, dyn # perform operation
fnmadd.s f12, f13, f19, f27, rdn # perform operation
fnmadd.s f12, f13, f19, f27, rmm # perform operation
fnmadd.s f12, f13, f19, f27, rne # perform operation
fnmadd.s f12, f13, f19, f27, rtz # perform operation
fnmadd.s f12, f13, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x6, 0x766a99b7a62b98d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x5c9657e9ba78f76 # load x3 with value 0x5c9657e9ba78f76
sw x3, 0(x2) # store 0x5c9657e9ba78f76 in memory
flw f5, 0(x2) # load 0x5c9657e9ba78f76 from memory into f5
fnmadd.s f6, f9, f21, f5, dyn # perform operation
fnmadd.s f6, f9, f21, f5, rdn # perform operation
fnmadd.s f6, f9, f21, f5, rmm # perform operation
fnmadd.s f6, f9, f21, f5, rne # perform operation
fnmadd.s f6, f9, f21, f5, rtz # perform operation
fnmadd.s f6, f9, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f9, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f9, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f9, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f9, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f9, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x26, 0x915046b12d36e298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x7b0e8bf2aac16401 # load x3 with value 0x7b0e8bf2aac16401
sw x3, 0(x2) # store 0x7b0e8bf2aac16401 in memory
flw f29, 0(x2) # load 0x7b0e8bf2aac16401 from memory into f29
fnmadd.s f26, f15, f10, f29, dyn # perform operation
fnmadd.s f26, f15, f10, f29, rdn # perform operation
fnmadd.s f26, f15, f10, f29, rmm # perform operation
fnmadd.s f26, f15, f10, f29, rne # perform operation
fnmadd.s f26, f15, f10, f29, rtz # perform operation
fnmadd.s f26, f15, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f15, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x25, 0x299f24d967c27940 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xf123f46c2cad6c8b # load x3 with value 0xf123f46c2cad6c8b
sw x3, 0(x2) # store 0xf123f46c2cad6c8b in memory
flw f7, 0(x2) # load 0xf123f46c2cad6c8b from memory into f7
fnmadd.s f25, f26, f18, f7, dyn # perform operation
fnmadd.s f25, f26, f18, f7, rdn # perform operation
fnmadd.s f25, f26, f18, f7, rmm # perform operation
fnmadd.s f25, f26, f18, f7, rne # perform operation
fnmadd.s f25, f26, f18, f7, rtz # perform operation
fnmadd.s f25, f26, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x9, 0xaaa215b82e7d47db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0xd525dda8cadc7da9 # load x3 with value 0xd525dda8cadc7da9
sw x3, 0(x2) # store 0xd525dda8cadc7da9 in memory
flw f17, 0(x2) # load 0xd525dda8cadc7da9 from memory into f17
fnmadd.s f9, f19, f22, f17, dyn # perform operation
fnmadd.s f9, f19, f22, f17, rdn # perform operation
fnmadd.s f9, f19, f22, f17, rmm # perform operation
fnmadd.s f9, f19, f22, f17, rne # perform operation
fnmadd.s f9, f19, f22, f17, rtz # perform operation
fnmadd.s f9, f19, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x31, 0xd86be1ecbfdb4220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xbd4066843cc30468 # load x3 with value 0xbd4066843cc30468
sw x3, 0(x2) # store 0xbd4066843cc30468 in memory
flw f22, 0(x2) # load 0xbd4066843cc30468 from memory into f22
fnmadd.s f31, f2, f23, f22, dyn # perform operation
fnmadd.s f31, f2, f23, f22, rdn # perform operation
fnmadd.s f31, f2, f23, f22, rmm # perform operation
fnmadd.s f31, f2, f23, f22, rne # perform operation
fnmadd.s f31, f2, f23, f22, rtz # perform operation
fnmadd.s f31, f2, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x30, 0xb2e7a57e2fff8524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x2acef0563f14c8c9 # load x3 with value 0x2acef0563f14c8c9
sw x3, 0(x2) # store 0x2acef0563f14c8c9 in memory
flw f26, 0(x2) # load 0x2acef0563f14c8c9 from memory into f26
fnmadd.s f30, f29, f16, f26, dyn # perform operation
fnmadd.s f30, f29, f16, f26, rdn # perform operation
fnmadd.s f30, f29, f16, f26, rmm # perform operation
fnmadd.s f30, f29, f16, f26, rne # perform operation
fnmadd.s f30, f29, f16, f26, rtz # perform operation
fnmadd.s f30, f29, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f29, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x15, 0x06c84e998611d7d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x62aeba1d763acc84 # load x3 with value 0x62aeba1d763acc84
sw x3, 0(x2) # store 0x62aeba1d763acc84 in memory
flw f29, 0(x2) # load 0x62aeba1d763acc84 from memory into f29
fnmadd.s f15, f22, f28, f29, dyn # perform operation
fnmadd.s f15, f22, f28, f29, rdn # perform operation
fnmadd.s f15, f22, f28, f29, rmm # perform operation
fnmadd.s f15, f22, f28, f29, rne # perform operation
fnmadd.s f15, f22, f28, f29, rtz # perform operation
fnmadd.s f15, f22, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x11, 0x624177074b141e24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xec94e5b745394cca # load x3 with value 0xec94e5b745394cca
sw x3, 0(x2) # store 0xec94e5b745394cca in memory
flw f21, 0(x2) # load 0xec94e5b745394cca from memory into f21
fnmadd.s f11, f23, f27, f21, dyn # perform operation
fnmadd.s f11, f23, f27, f21, rdn # perform operation
fnmadd.s f11, f23, f27, f21, rmm # perform operation
fnmadd.s f11, f23, f27, f21, rne # perform operation
fnmadd.s f11, f23, f27, f21, rtz # perform operation
fnmadd.s f11, f23, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x5, 0xf94ca98858174bf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xb6eb420c132b9376 # load x3 with value 0xb6eb420c132b9376
sw x3, 0(x2) # store 0xb6eb420c132b9376 in memory
flw f11, 0(x2) # load 0xb6eb420c132b9376 from memory into f11
fnmadd.s f5, f29, f8, f11, dyn # perform operation
fnmadd.s f5, f29, f8, f11, rdn # perform operation
fnmadd.s f5, f29, f8, f11, rmm # perform operation
fnmadd.s f5, f29, f8, f11, rne # perform operation
fnmadd.s f5, f29, f8, f11, rtz # perform operation
fnmadd.s f5, f29, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f29, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x20, 0xc83d59694d891a64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x4dcea3e693e91df2 # load x3 with value 0x4dcea3e693e91df2
sw x3, 0(x2) # store 0x4dcea3e693e91df2 in memory
flw f22, 0(x2) # load 0x4dcea3e693e91df2 from memory into f22
fnmadd.s f20, f26, f17, f22, dyn # perform operation
fnmadd.s f20, f26, f17, f22, rdn # perform operation
fnmadd.s f20, f26, f17, f22, rmm # perform operation
fnmadd.s f20, f26, f17, f22, rne # perform operation
fnmadd.s f20, f26, f17, f22, rtz # perform operation
fnmadd.s f20, f26, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x25, 0x73a4e7f879c343da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0xbf7870977a803eb8 # load x3 with value 0xbf7870977a803eb8
sw x3, 0(x2) # store 0xbf7870977a803eb8 in memory
flw f30, 0(x2) # load 0xbf7870977a803eb8 from memory into f30
fnmadd.s f25, f31, f22, f30, dyn # perform operation
fnmadd.s f25, f31, f22, f30, rdn # perform operation
fnmadd.s f25, f31, f22, f30, rmm # perform operation
fnmadd.s f25, f31, f22, f30, rne # perform operation
fnmadd.s f25, f31, f22, f30, rtz # perform operation
fnmadd.s f25, f31, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x19, 0x53d4c80d25585e60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x73523011cf3bf747 # load x3 with value 0x73523011cf3bf747
sw x3, 0(x2) # store 0x73523011cf3bf747 in memory
flw f26, 0(x2) # load 0x73523011cf3bf747 from memory into f26
fnmadd.s f19, f1, f28, f26, dyn # perform operation
fnmadd.s f19, f1, f28, f26, rdn # perform operation
fnmadd.s f19, f1, f28, f26, rmm # perform operation
fnmadd.s f19, f1, f28, f26, rne # perform operation
fnmadd.s f19, f1, f28, f26, rtz # perform operation
fnmadd.s f19, f1, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x16, 0xdb7f5a9041ec120e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x7779c811c7ab8158 # load x3 with value 0x7779c811c7ab8158
sw x3, 0(x2) # store 0x7779c811c7ab8158 in memory
flw f31, 0(x2) # load 0x7779c811c7ab8158 from memory into f31
fnmadd.s f16, f9, f15, f31, dyn # perform operation
fnmadd.s f16, f9, f15, f31, rdn # perform operation
fnmadd.s f16, f9, f15, f31, rmm # perform operation
fnmadd.s f16, f9, f15, f31, rne # perform operation
fnmadd.s f16, f9, f15, f31, rtz # perform operation
fnmadd.s f16, f9, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x28, 0x0952fc2e9a690982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xcc38fdf8bef53a16 # load x3 with value 0xcc38fdf8bef53a16
sw x3, 0(x2) # store 0xcc38fdf8bef53a16 in memory
flw f24, 0(x2) # load 0xcc38fdf8bef53a16 from memory into f24
fnmadd.s f28, f17, f15, f24, dyn # perform operation
fnmadd.s f28, f17, f15, f24, rdn # perform operation
fnmadd.s f28, f17, f15, f24, rmm # perform operation
fnmadd.s f28, f17, f15, f24, rne # perform operation
fnmadd.s f28, f17, f15, f24, rtz # perform operation
fnmadd.s f28, f17, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f17, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x9, 0xbfd5a07a8daa9527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7ff39356f34d1aec # load x3 with value 0x7ff39356f34d1aec
sw x3, 0(x2) # store 0x7ff39356f34d1aec in memory
flw f26, 0(x2) # load 0x7ff39356f34d1aec from memory into f26
fnmadd.s f9, f22, f23, f26, dyn # perform operation
fnmadd.s f9, f22, f23, f26, rdn # perform operation
fnmadd.s f9, f22, f23, f26, rmm # perform operation
fnmadd.s f9, f22, f23, f26, rne # perform operation
fnmadd.s f9, f22, f23, f26, rtz # perform operation
fnmadd.s f9, f22, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f22, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x9, 0x4dff030528a9db60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x553a7339c6bda18a # load x3 with value 0x553a7339c6bda18a
sw x3, 0(x2) # store 0x553a7339c6bda18a in memory
flw f19, 0(x2) # load 0x553a7339c6bda18a from memory into f19
fnmadd.s f9, f18, f23, f19, dyn # perform operation
fnmadd.s f9, f18, f23, f19, rdn # perform operation
fnmadd.s f9, f18, f23, f19, rmm # perform operation
fnmadd.s f9, f18, f23, f19, rne # perform operation
fnmadd.s f9, f18, f23, f19, rtz # perform operation
fnmadd.s f9, f18, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x31, 0xa0a0443183c4d368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x41d1e88cb6e96acd # load x3 with value 0x41d1e88cb6e96acd
sw x3, 0(x2) # store 0x41d1e88cb6e96acd in memory
flw f4, 0(x2) # load 0x41d1e88cb6e96acd from memory into f4
fnmadd.s f31, f28, f6, f4, dyn # perform operation
fnmadd.s f31, f28, f6, f4, rdn # perform operation
fnmadd.s f31, f28, f6, f4, rmm # perform operation
fnmadd.s f31, f28, f6, f4, rne # perform operation
fnmadd.s f31, f28, f6, f4, rtz # perform operation
fnmadd.s f31, f28, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x3, 0xb05b2375d163282d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x291a852af95b7e3e # load x3 with value 0x291a852af95b7e3e
sw x3, 0(x2) # store 0x291a852af95b7e3e in memory
flw f29, 0(x2) # load 0x291a852af95b7e3e from memory into f29
fnmadd.s f3, f31, f21, f29, dyn # perform operation
fnmadd.s f3, f31, f21, f29, rdn # perform operation
fnmadd.s f3, f31, f21, f29, rmm # perform operation
fnmadd.s f3, f31, f21, f29, rne # perform operation
fnmadd.s f3, f31, f21, f29, rtz # perform operation
fnmadd.s f3, f31, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x22, 0x9bf4bbd1399764a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xfd331759d28fc0df # load x3 with value 0xfd331759d28fc0df
sw x3, 0(x2) # store 0xfd331759d28fc0df in memory
flw f6, 0(x2) # load 0xfd331759d28fc0df from memory into f6
fnmadd.s f22, f20, f7, f6, dyn # perform operation
fnmadd.s f22, f20, f7, f6, rdn # perform operation
fnmadd.s f22, f20, f7, f6, rmm # perform operation
fnmadd.s f22, f20, f7, f6, rne # perform operation
fnmadd.s f22, f20, f7, f6, rtz # perform operation
fnmadd.s f22, f20, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x31, 0xc32a770c8dffe1a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x5c77473eb0f83930 # load x3 with value 0x5c77473eb0f83930
sw x3, 0(x2) # store 0x5c77473eb0f83930 in memory
flw f10, 0(x2) # load 0x5c77473eb0f83930 from memory into f10
fnmadd.s f31, f12, f23, f10, dyn # perform operation
fnmadd.s f31, f12, f23, f10, rdn # perform operation
fnmadd.s f31, f12, f23, f10, rmm # perform operation
fnmadd.s f31, f12, f23, f10, rne # perform operation
fnmadd.s f31, f12, f23, f10, rtz # perform operation
fnmadd.s f31, f12, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x24, 0xa342828946afd793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xbc7cfafe946fcb49 # load x3 with value 0xbc7cfafe946fcb49
sw x3, 0(x2) # store 0xbc7cfafe946fcb49 in memory
flw f18, 0(x2) # load 0xbc7cfafe946fcb49 from memory into f18
fnmadd.s f24, f16, f9, f18, dyn # perform operation
fnmadd.s f24, f16, f9, f18, rdn # perform operation
fnmadd.s f24, f16, f9, f18, rmm # perform operation
fnmadd.s f24, f16, f9, f18, rne # perform operation
fnmadd.s f24, f16, f9, f18, rtz # perform operation
fnmadd.s f24, f16, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x12, 0x0353ea3e8da882ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x1a61c52fb9315873 # load x3 with value 0x1a61c52fb9315873
sw x3, 0(x2) # store 0x1a61c52fb9315873 in memory
flw f9, 0(x2) # load 0x1a61c52fb9315873 from memory into f9
fnmadd.s f12, f13, f30, f9, dyn # perform operation
fnmadd.s f12, f13, f30, f9, rdn # perform operation
fnmadd.s f12, f13, f30, f9, rmm # perform operation
fnmadd.s f12, f13, f30, f9, rne # perform operation
fnmadd.s f12, f13, f30, f9, rtz # perform operation
fnmadd.s f12, f13, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x4, 0xce85fe24de76092e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xb682a103a26686c7 # load x3 with value 0xb682a103a26686c7
sw x3, 0(x2) # store 0xb682a103a26686c7 in memory
flw f17, 0(x2) # load 0xb682a103a26686c7 from memory into f17
fnmadd.s f4, f8, f11, f17, dyn # perform operation
fnmadd.s f4, f8, f11, f17, rdn # perform operation
fnmadd.s f4, f8, f11, f17, rmm # perform operation
fnmadd.s f4, f8, f11, f17, rne # perform operation
fnmadd.s f4, f8, f11, f17, rtz # perform operation
fnmadd.s f4, f8, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f8, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f8, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f8, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f8, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f8, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x14, 0x6df0c28452b9da32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x2499e4057d11a4b5 # load x3 with value 0x2499e4057d11a4b5
sw x3, 0(x2) # store 0x2499e4057d11a4b5 in memory
flw f9, 0(x2) # load 0x2499e4057d11a4b5 from memory into f9
fnmadd.s f14, f5, f17, f9, dyn # perform operation
fnmadd.s f14, f5, f17, f9, rdn # perform operation
fnmadd.s f14, f5, f17, f9, rmm # perform operation
fnmadd.s f14, f5, f17, f9, rne # perform operation
fnmadd.s f14, f5, f17, f9, rtz # perform operation
fnmadd.s f14, f5, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x21, 0xf27cc3bae55e9007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x65b763182414dd98 # load x3 with value 0x65b763182414dd98
sw x3, 0(x2) # store 0x65b763182414dd98 in memory
flw f2, 0(x2) # load 0x65b763182414dd98 from memory into f2
fnmadd.s f21, f23, f1, f2, dyn # perform operation
fnmadd.s f21, f23, f1, f2, rdn # perform operation
fnmadd.s f21, f23, f1, f2, rmm # perform operation
fnmadd.s f21, f23, f1, f2, rne # perform operation
fnmadd.s f21, f23, f1, f2, rtz # perform operation
fnmadd.s f21, f23, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x25, 0x27c0aeade56171b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x69ae4e99f5dda32a # load x3 with value 0x69ae4e99f5dda32a
sw x3, 0(x2) # store 0x69ae4e99f5dda32a in memory
flw f6, 0(x2) # load 0x69ae4e99f5dda32a from memory into f6
fnmadd.s f25, f5, f27, f6, dyn # perform operation
fnmadd.s f25, f5, f27, f6, rdn # perform operation
fnmadd.s f25, f5, f27, f6, rmm # perform operation
fnmadd.s f25, f5, f27, f6, rne # perform operation
fnmadd.s f25, f5, f27, f6, rtz # perform operation
fnmadd.s f25, f5, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x23, 0x178f75b5b95313f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x6f77ac8ebb6e6abf # load x3 with value 0x6f77ac8ebb6e6abf
sw x3, 0(x2) # store 0x6f77ac8ebb6e6abf in memory
flw f5, 0(x2) # load 0x6f77ac8ebb6e6abf from memory into f5
fnmadd.s f23, f10, f30, f5, dyn # perform operation
fnmadd.s f23, f10, f30, f5, rdn # perform operation
fnmadd.s f23, f10, f30, f5, rmm # perform operation
fnmadd.s f23, f10, f30, f5, rne # perform operation
fnmadd.s f23, f10, f30, f5, rtz # perform operation
fnmadd.s f23, f10, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x27, 0x90e08c4ade7d1cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xcd9ca2e9ee29f7db # load x3 with value 0xcd9ca2e9ee29f7db
sw x3, 0(x2) # store 0xcd9ca2e9ee29f7db in memory
flw f22, 0(x2) # load 0xcd9ca2e9ee29f7db from memory into f22
fnmadd.s f27, f28, f8, f22, dyn # perform operation
fnmadd.s f27, f28, f8, f22, rdn # perform operation
fnmadd.s f27, f28, f8, f22, rmm # perform operation
fnmadd.s f27, f28, f8, f22, rne # perform operation
fnmadd.s f27, f28, f8, f22, rtz # perform operation
fnmadd.s f27, f28, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x7, 0xf6f79e565fe808d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0xcc96bd00e5ff49a # load x3 with value 0xcc96bd00e5ff49a
sw x3, 0(x2) # store 0xcc96bd00e5ff49a in memory
flw f17, 0(x2) # load 0xcc96bd00e5ff49a from memory into f17
fnmadd.s f7, f19, f28, f17, dyn # perform operation
fnmadd.s f7, f19, f28, f17, rdn # perform operation
fnmadd.s f7, f19, f28, f17, rmm # perform operation
fnmadd.s f7, f19, f28, f17, rne # perform operation
fnmadd.s f7, f19, f28, f17, rtz # perform operation
fnmadd.s f7, f19, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f19, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x24, 0x5fafddc88875111e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x77c582129136504b # load x3 with value 0x77c582129136504b
sw x3, 0(x2) # store 0x77c582129136504b in memory
flw f26, 0(x2) # load 0x77c582129136504b from memory into f26
fnmadd.s f24, f20, f19, f26, dyn # perform operation
fnmadd.s f24, f20, f19, f26, rdn # perform operation
fnmadd.s f24, f20, f19, f26, rmm # perform operation
fnmadd.s f24, f20, f19, f26, rne # perform operation
fnmadd.s f24, f20, f19, f26, rtz # perform operation
fnmadd.s f24, f20, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x7, 0xe1c195b3eae98a1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xf4f7bb0e5baca161 # load x3 with value 0xf4f7bb0e5baca161
sw x3, 0(x2) # store 0xf4f7bb0e5baca161 in memory
flw f8, 0(x2) # load 0xf4f7bb0e5baca161 from memory into f8
fnmadd.s f7, f13, f20, f8, dyn # perform operation
fnmadd.s f7, f13, f20, f8, rdn # perform operation
fnmadd.s f7, f13, f20, f8, rmm # perform operation
fnmadd.s f7, f13, f20, f8, rne # perform operation
fnmadd.s f7, f13, f20, f8, rtz # perform operation
fnmadd.s f7, f13, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f13, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f13, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x14, 0xe8b2dbb1c10e9863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x64989b4795b24c97 # load x3 with value 0x64989b4795b24c97
sw x3, 0(x2) # store 0x64989b4795b24c97 in memory
flw f23, 0(x2) # load 0x64989b4795b24c97 from memory into f23
fnmadd.s f14, f24, f17, f23, dyn # perform operation
fnmadd.s f14, f24, f17, f23, rdn # perform operation
fnmadd.s f14, f24, f17, f23, rmm # perform operation
fnmadd.s f14, f24, f17, f23, rne # perform operation
fnmadd.s f14, f24, f17, f23, rtz # perform operation
fnmadd.s f14, f24, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x17, 0xebaa45d157f094a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0xe42cd7dbec7ec710 # load x3 with value 0xe42cd7dbec7ec710
sw x3, 0(x2) # store 0xe42cd7dbec7ec710 in memory
flw f3, 0(x2) # load 0xe42cd7dbec7ec710 from memory into f3
fnmadd.s f17, f4, f19, f3, dyn # perform operation
fnmadd.s f17, f4, f19, f3, rdn # perform operation
fnmadd.s f17, f4, f19, f3, rmm # perform operation
fnmadd.s f17, f4, f19, f3, rne # perform operation
fnmadd.s f17, f4, f19, f3, rtz # perform operation
fnmadd.s f17, f4, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f4, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f4, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x16, 0x14c09b0c89704f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xe46111343da38ce7 # load x3 with value 0xe46111343da38ce7
sw x3, 0(x2) # store 0xe46111343da38ce7 in memory
flw f22, 0(x2) # load 0xe46111343da38ce7 from memory into f22
fnmadd.s f16, f4, f2, f22, dyn # perform operation
fnmadd.s f16, f4, f2, f22, rdn # perform operation
fnmadd.s f16, f4, f2, f22, rmm # perform operation
fnmadd.s f16, f4, f2, f22, rne # perform operation
fnmadd.s f16, f4, f2, f22, rtz # perform operation
fnmadd.s f16, f4, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f4, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x29, 0x0fe3476340591af8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x71ef8794810aeb52 # load x3 with value 0x71ef8794810aeb52
sw x3, 0(x2) # store 0x71ef8794810aeb52 in memory
flw f15, 0(x2) # load 0x71ef8794810aeb52 from memory into f15
fnmadd.s f29, f17, f7, f15, dyn # perform operation
fnmadd.s f29, f17, f7, f15, rdn # perform operation
fnmadd.s f29, f17, f7, f15, rmm # perform operation
fnmadd.s f29, f17, f7, f15, rne # perform operation
fnmadd.s f29, f17, f7, f15, rtz # perform operation
fnmadd.s f29, f17, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f17, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x20, 0xaeea6642a1277ced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xc1028d79f10236e4 # load x3 with value 0xc1028d79f10236e4
sw x3, 0(x2) # store 0xc1028d79f10236e4 in memory
flw f4, 0(x2) # load 0xc1028d79f10236e4 from memory into f4
fnmadd.s f20, f5, f11, f4, dyn # perform operation
fnmadd.s f20, f5, f11, f4, rdn # perform operation
fnmadd.s f20, f5, f11, f4, rmm # perform operation
fnmadd.s f20, f5, f11, f4, rne # perform operation
fnmadd.s f20, f5, f11, f4, rtz # perform operation
fnmadd.s f20, f5, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x8, 0xef16ad33c9f33995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x2be274314f71cabb # load x3 with value 0x2be274314f71cabb
sw x3, 0(x2) # store 0x2be274314f71cabb in memory
flw f29, 0(x2) # load 0x2be274314f71cabb from memory into f29
fnmadd.s f8, f19, f4, f29, dyn # perform operation
fnmadd.s f8, f19, f4, f29, rdn # perform operation
fnmadd.s f8, f19, f4, f29, rmm # perform operation
fnmadd.s f8, f19, f4, f29, rne # perform operation
fnmadd.s f8, f19, f4, f29, rtz # perform operation
fnmadd.s f8, f19, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x9, 0xc1b8d3fdf467b868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xcd816e8416e0d3a1 # load x3 with value 0xcd816e8416e0d3a1
sw x3, 0(x2) # store 0xcd816e8416e0d3a1 in memory
flw f18, 0(x2) # load 0xcd816e8416e0d3a1 from memory into f18
fnmadd.s f9, f3, f15, f18, dyn # perform operation
fnmadd.s f9, f3, f15, f18, rdn # perform operation
fnmadd.s f9, f3, f15, f18, rmm # perform operation
fnmadd.s f9, f3, f15, f18, rne # perform operation
fnmadd.s f9, f3, f15, f18, rtz # perform operation
fnmadd.s f9, f3, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x3, 0xd26bba00f8470198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xc0bdb51c3fb075ba # load x3 with value 0xc0bdb51c3fb075ba
sw x3, 0(x2) # store 0xc0bdb51c3fb075ba in memory
flw f26, 0(x2) # load 0xc0bdb51c3fb075ba from memory into f26
fnmadd.s f3, f19, f5, f26, dyn # perform operation
fnmadd.s f3, f19, f5, f26, rdn # perform operation
fnmadd.s f3, f19, f5, f26, rmm # perform operation
fnmadd.s f3, f19, f5, f26, rne # perform operation
fnmadd.s f3, f19, f5, f26, rtz # perform operation
fnmadd.s f3, f19, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f19, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f19, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x1, 0x3108d345545ad000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x7fc57575b9fd4eef # load x3 with value 0x7fc57575b9fd4eef
sw x3, 0(x2) # store 0x7fc57575b9fd4eef in memory
flw f5, 0(x2) # load 0x7fc57575b9fd4eef from memory into f5
fnmadd.s f1, f21, f12, f5, dyn # perform operation
fnmadd.s f1, f21, f12, f5, rdn # perform operation
fnmadd.s f1, f21, f12, f5, rmm # perform operation
fnmadd.s f1, f21, f12, f5, rne # perform operation
fnmadd.s f1, f21, f12, f5, rtz # perform operation
fnmadd.s f1, f21, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x21, 0xac624727d76aa85d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xba72fe5c8610f97b # load x3 with value 0xba72fe5c8610f97b
sw x3, 0(x2) # store 0xba72fe5c8610f97b in memory
flw f29, 0(x2) # load 0xba72fe5c8610f97b from memory into f29
fnmadd.s f21, f19, f7, f29, dyn # perform operation
fnmadd.s f21, f19, f7, f29, rdn # perform operation
fnmadd.s f21, f19, f7, f29, rmm # perform operation
fnmadd.s f21, f19, f7, f29, rne # perform operation
fnmadd.s f21, f19, f7, f29, rtz # perform operation
fnmadd.s f21, f19, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f19, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x1, 0x2f139aceacc64caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x51ac429a35ba1015 # load x3 with value 0x51ac429a35ba1015
sw x3, 0(x2) # store 0x51ac429a35ba1015 in memory
flw f4, 0(x2) # load 0x51ac429a35ba1015 from memory into f4
fnmadd.s f1, f31, f7, f4, dyn # perform operation
fnmadd.s f1, f31, f7, f4, rdn # perform operation
fnmadd.s f1, f31, f7, f4, rmm # perform operation
fnmadd.s f1, f31, f7, f4, rne # perform operation
fnmadd.s f1, f31, f7, f4, rtz # perform operation
fnmadd.s f1, f31, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x21, 0xb575cdb13a555071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x319021c6b9230de # load x3 with value 0x319021c6b9230de
sw x3, 0(x2) # store 0x319021c6b9230de in memory
flw f19, 0(x2) # load 0x319021c6b9230de from memory into f19
fnmadd.s f21, f6, f24, f19, dyn # perform operation
fnmadd.s f21, f6, f24, f19, rdn # perform operation
fnmadd.s f21, f6, f24, f19, rmm # perform operation
fnmadd.s f21, f6, f24, f19, rne # perform operation
fnmadd.s f21, f6, f24, f19, rtz # perform operation
fnmadd.s f21, f6, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x21, 0x1daedd076c33bd4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x3a3becac914a6eec # load x3 with value 0x3a3becac914a6eec
sw x3, 0(x2) # store 0x3a3becac914a6eec in memory
flw f18, 0(x2) # load 0x3a3becac914a6eec from memory into f18
fnmadd.s f21, f13, f28, f18, dyn # perform operation
fnmadd.s f21, f13, f28, f18, rdn # perform operation
fnmadd.s f21, f13, f28, f18, rmm # perform operation
fnmadd.s f21, f13, f28, f18, rne # perform operation
fnmadd.s f21, f13, f28, f18, rtz # perform operation
fnmadd.s f21, f13, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f13, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x13, 0xa257a675e14378fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xd76c131995ddc8ec # load x3 with value 0xd76c131995ddc8ec
sw x3, 0(x2) # store 0xd76c131995ddc8ec in memory
flw f15, 0(x2) # load 0xd76c131995ddc8ec from memory into f15
fnmadd.s f13, f20, f26, f15, dyn # perform operation
fnmadd.s f13, f20, f26, f15, rdn # perform operation
fnmadd.s f13, f20, f26, f15, rmm # perform operation
fnmadd.s f13, f20, f26, f15, rne # perform operation
fnmadd.s f13, f20, f26, f15, rtz # perform operation
fnmadd.s f13, f20, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x11, 0xbd00ab8ebafdddf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xd5f964520a6a2033 # load x3 with value 0xd5f964520a6a2033
sw x3, 0(x2) # store 0xd5f964520a6a2033 in memory
flw f29, 0(x2) # load 0xd5f964520a6a2033 from memory into f29
fnmadd.s f11, f18, f7, f29, dyn # perform operation
fnmadd.s f11, f18, f7, f29, rdn # perform operation
fnmadd.s f11, f18, f7, f29, rmm # perform operation
fnmadd.s f11, f18, f7, f29, rne # perform operation
fnmadd.s f11, f18, f7, f29, rtz # perform operation
fnmadd.s f11, f18, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x28, 0x8917a4d6edca589b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x86b236ebdfa2c100 # load x3 with value 0x86b236ebdfa2c100
sw x3, 0(x2) # store 0x86b236ebdfa2c100 in memory
flw f31, 0(x2) # load 0x86b236ebdfa2c100 from memory into f31
fnmadd.s f28, f5, f21, f31, dyn # perform operation
fnmadd.s f28, f5, f21, f31, rdn # perform operation
fnmadd.s f28, f5, f21, f31, rmm # perform operation
fnmadd.s f28, f5, f21, f31, rne # perform operation
fnmadd.s f28, f5, f21, f31, rtz # perform operation
fnmadd.s f28, f5, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f5, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f5, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x2, 0xa38bfca74e421143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xe82656e2ef0d3a54 # load x3 with value 0xe82656e2ef0d3a54
sw x3, 0(x2) # store 0xe82656e2ef0d3a54 in memory
flw f8, 0(x2) # load 0xe82656e2ef0d3a54 from memory into f8
fnmadd.s f2, f23, f3, f8, dyn # perform operation
fnmadd.s f2, f23, f3, f8, rdn # perform operation
fnmadd.s f2, f23, f3, f8, rmm # perform operation
fnmadd.s f2, f23, f3, f8, rne # perform operation
fnmadd.s f2, f23, f3, f8, rtz # perform operation
fnmadd.s f2, f23, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x31, 0x1917019e33ee0f9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x1c00f1a240cdbaf5 # load x3 with value 0x1c00f1a240cdbaf5
sw x3, 0(x2) # store 0x1c00f1a240cdbaf5 in memory
flw f3, 0(x2) # load 0x1c00f1a240cdbaf5 from memory into f3
fnmadd.s f31, f9, f7, f3, dyn # perform operation
fnmadd.s f31, f9, f7, f3, rdn # perform operation
fnmadd.s f31, f9, f7, f3, rmm # perform operation
fnmadd.s f31, f9, f7, f3, rne # perform operation
fnmadd.s f31, f9, f7, f3, rtz # perform operation
fnmadd.s f31, f9, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x17, 0xa75c872995ff88ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x3f0dfd22ea442d60 # load x3 with value 0x3f0dfd22ea442d60
sw x3, 0(x2) # store 0x3f0dfd22ea442d60 in memory
flw f2, 0(x2) # load 0x3f0dfd22ea442d60 from memory into f2
fnmadd.s f17, f21, f12, f2, dyn # perform operation
fnmadd.s f17, f21, f12, f2, rdn # perform operation
fnmadd.s f17, f21, f12, f2, rmm # perform operation
fnmadd.s f17, f21, f12, f2, rne # perform operation
fnmadd.s f17, f21, f12, f2, rtz # perform operation
fnmadd.s f17, f21, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f21, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x6, 0x2182513ecc86fbd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x6ef4ab7c3df63c41 # load x3 with value 0x6ef4ab7c3df63c41
sw x3, 0(x2) # store 0x6ef4ab7c3df63c41 in memory
flw f17, 0(x2) # load 0x6ef4ab7c3df63c41 from memory into f17
fnmadd.s f6, f11, f9, f17, dyn # perform operation
fnmadd.s f6, f11, f9, f17, rdn # perform operation
fnmadd.s f6, f11, f9, f17, rmm # perform operation
fnmadd.s f6, f11, f9, f17, rne # perform operation
fnmadd.s f6, f11, f9, f17, rtz # perform operation
fnmadd.s f6, f11, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x10, 0x5b15c26e7ac7b133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xdac2e324f41cb84c # load x3 with value 0xdac2e324f41cb84c
sw x3, 0(x2) # store 0xdac2e324f41cb84c in memory
flw f15, 0(x2) # load 0xdac2e324f41cb84c from memory into f15
fnmadd.s f10, f26, f5, f15, dyn # perform operation
fnmadd.s f10, f26, f5, f15, rdn # perform operation
fnmadd.s f10, f26, f5, f15, rmm # perform operation
fnmadd.s f10, f26, f5, f15, rne # perform operation
fnmadd.s f10, f26, f5, f15, rtz # perform operation
fnmadd.s f10, f26, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x18, 0x5830cca4ff9d76fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x32ce98c672b1fd25 # load x3 with value 0x32ce98c672b1fd25
sw x3, 0(x2) # store 0x32ce98c672b1fd25 in memory
flw f25, 0(x2) # load 0x32ce98c672b1fd25 from memory into f25
fnmadd.s f18, f11, f26, f25, dyn # perform operation
fnmadd.s f18, f11, f26, f25, rdn # perform operation
fnmadd.s f18, f11, f26, f25, rmm # perform operation
fnmadd.s f18, f11, f26, f25, rne # perform operation
fnmadd.s f18, f11, f26, f25, rtz # perform operation
fnmadd.s f18, f11, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x4, 0xaaac28fb605fa977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x2f0421687b72a5e8 # load x3 with value 0x2f0421687b72a5e8
sw x3, 0(x2) # store 0x2f0421687b72a5e8 in memory
flw f17, 0(x2) # load 0x2f0421687b72a5e8 from memory into f17
fnmadd.s f4, f19, f18, f17, dyn # perform operation
fnmadd.s f4, f19, f18, f17, rdn # perform operation
fnmadd.s f4, f19, f18, f17, rmm # perform operation
fnmadd.s f4, f19, f18, f17, rne # perform operation
fnmadd.s f4, f19, f18, f17, rtz # perform operation
fnmadd.s f4, f19, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f19, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f19, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x25, 0xcc35fe3e6d4a433d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xadc213fcb863bc77 # load x3 with value 0xadc213fcb863bc77
sw x3, 0(x2) # store 0xadc213fcb863bc77 in memory
flw f7, 0(x2) # load 0xadc213fcb863bc77 from memory into f7
fnmadd.s f25, f14, f11, f7, dyn # perform operation
fnmadd.s f25, f14, f11, f7, rdn # perform operation
fnmadd.s f25, f14, f11, f7, rmm # perform operation
fnmadd.s f25, f14, f11, f7, rne # perform operation
fnmadd.s f25, f14, f11, f7, rtz # perform operation
fnmadd.s f25, f14, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x30, 0xc242ad245ec9f751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x8044b209c036e986 # load x3 with value 0x8044b209c036e986
sw x3, 0(x2) # store 0x8044b209c036e986 in memory
flw f15, 0(x2) # load 0x8044b209c036e986 from memory into f15
fnmadd.s f30, f4, f7, f15, dyn # perform operation
fnmadd.s f30, f4, f7, f15, rdn # perform operation
fnmadd.s f30, f4, f7, f15, rmm # perform operation
fnmadd.s f30, f4, f7, f15, rne # perform operation
fnmadd.s f30, f4, f7, f15, rtz # perform operation
fnmadd.s f30, f4, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f4, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x26, 0x7aed3bd5c8c83bb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xfcc5bfe9674d07cf # load x3 with value 0xfcc5bfe9674d07cf
sw x3, 0(x2) # store 0xfcc5bfe9674d07cf in memory
flw f23, 0(x2) # load 0xfcc5bfe9674d07cf from memory into f23
fnmadd.s f26, f13, f5, f23, dyn # perform operation
fnmadd.s f26, f13, f5, f23, rdn # perform operation
fnmadd.s f26, f13, f5, f23, rmm # perform operation
fnmadd.s f26, f13, f5, f23, rne # perform operation
fnmadd.s f26, f13, f5, f23, rtz # perform operation
fnmadd.s f26, f13, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x3, 0x94165c2bc790ac63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x89d0e6f9533d183 # load x3 with value 0x89d0e6f9533d183
sw x3, 0(x2) # store 0x89d0e6f9533d183 in memory
flw f18, 0(x2) # load 0x89d0e6f9533d183 from memory into f18
fnmadd.s f3, f23, f13, f18, dyn # perform operation
fnmadd.s f3, f23, f13, f18, rdn # perform operation
fnmadd.s f3, f23, f13, f18, rmm # perform operation
fnmadd.s f3, f23, f13, f18, rne # perform operation
fnmadd.s f3, f23, f13, f18, rtz # perform operation
fnmadd.s f3, f23, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x1, 0xc2072b24efe85734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x5e18f8bf64d3ef89 # load x3 with value 0x5e18f8bf64d3ef89
sw x3, 0(x2) # store 0x5e18f8bf64d3ef89 in memory
flw f14, 0(x2) # load 0x5e18f8bf64d3ef89 from memory into f14
fnmadd.s f1, f20, f7, f14, dyn # perform operation
fnmadd.s f1, f20, f7, f14, rdn # perform operation
fnmadd.s f1, f20, f7, f14, rmm # perform operation
fnmadd.s f1, f20, f7, f14, rne # perform operation
fnmadd.s f1, f20, f7, f14, rtz # perform operation
fnmadd.s f1, f20, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f20, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x25, 0xef3325bae57c3d7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x67a22d84fee782d4 # load x3 with value 0x67a22d84fee782d4
sw x3, 0(x2) # store 0x67a22d84fee782d4 in memory
flw f18, 0(x2) # load 0x67a22d84fee782d4 from memory into f18
fnmadd.s f25, f13, f23, f18, dyn # perform operation
fnmadd.s f25, f13, f23, f18, rdn # perform operation
fnmadd.s f25, f13, f23, f18, rmm # perform operation
fnmadd.s f25, f13, f23, f18, rne # perform operation
fnmadd.s f25, f13, f23, f18, rtz # perform operation
fnmadd.s f25, f13, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f13, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x8, 0xbd95dba996d00dcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x4db6ef52113a302 # load x3 with value 0x4db6ef52113a302
sw x3, 0(x2) # store 0x4db6ef52113a302 in memory
flw f18, 0(x2) # load 0x4db6ef52113a302 from memory into f18
fnmadd.s f8, f3, f24, f18, dyn # perform operation
fnmadd.s f8, f3, f24, f18, rdn # perform operation
fnmadd.s f8, f3, f24, f18, rmm # perform operation
fnmadd.s f8, f3, f24, f18, rne # perform operation
fnmadd.s f8, f3, f24, f18, rtz # perform operation
fnmadd.s f8, f3, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f3, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x9, 0xf06c2c43cd0e7c53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xeff4c87963c75b05 # load x3 with value 0xeff4c87963c75b05
sw x3, 0(x2) # store 0xeff4c87963c75b05 in memory
flw f4, 0(x2) # load 0xeff4c87963c75b05 from memory into f4
fnmadd.s f9, f29, f20, f4, dyn # perform operation
fnmadd.s f9, f29, f20, f4, rdn # perform operation
fnmadd.s f9, f29, f20, f4, rmm # perform operation
fnmadd.s f9, f29, f20, f4, rne # perform operation
fnmadd.s f9, f29, f20, f4, rtz # perform operation
fnmadd.s f9, f29, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f29, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f29, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f29, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f29, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f29, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x14, 0x7324e93af0252614 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xfea9a4415041e7f8 # load x3 with value 0xfea9a4415041e7f8
sw x3, 0(x2) # store 0xfea9a4415041e7f8 in memory
flw f8, 0(x2) # load 0xfea9a4415041e7f8 from memory into f8
fnmadd.s f14, f20, f30, f8, dyn # perform operation
fnmadd.s f14, f20, f30, f8, rdn # perform operation
fnmadd.s f14, f20, f30, f8, rmm # perform operation
fnmadd.s f14, f20, f30, f8, rne # perform operation
fnmadd.s f14, f20, f30, f8, rtz # perform operation
fnmadd.s f14, f20, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x30, 0x9c5c877112937a0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x8f1ce65c14471c5b # load x3 with value 0x8f1ce65c14471c5b
sw x3, 0(x2) # store 0x8f1ce65c14471c5b in memory
flw f23, 0(x2) # load 0x8f1ce65c14471c5b from memory into f23
fnmadd.s f30, f5, f3, f23, dyn # perform operation
fnmadd.s f30, f5, f3, f23, rdn # perform operation
fnmadd.s f30, f5, f3, f23, rmm # perform operation
fnmadd.s f30, f5, f3, f23, rne # perform operation
fnmadd.s f30, f5, f3, f23, rtz # perform operation
fnmadd.s f30, f5, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f5, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f5, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f5, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f5, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f5, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x22, 0xeda8665e7fcd4a75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x6a41a1cfd99d587c # load x3 with value 0x6a41a1cfd99d587c
sw x3, 0(x2) # store 0x6a41a1cfd99d587c in memory
flw f5, 0(x2) # load 0x6a41a1cfd99d587c from memory into f5
fnmadd.s f22, f6, f21, f5, dyn # perform operation
fnmadd.s f22, f6, f21, f5, rdn # perform operation
fnmadd.s f22, f6, f21, f5, rmm # perform operation
fnmadd.s f22, f6, f21, f5, rne # perform operation
fnmadd.s f22, f6, f21, f5, rtz # perform operation
fnmadd.s f22, f6, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x6, 0x463e47b2aff75940 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xc9d23a6579204f74 # load x3 with value 0xc9d23a6579204f74
sw x3, 0(x2) # store 0xc9d23a6579204f74 in memory
flw f12, 0(x2) # load 0xc9d23a6579204f74 from memory into f12
fnmadd.s f6, f28, f4, f12, dyn # perform operation
fnmadd.s f6, f28, f4, f12, rdn # perform operation
fnmadd.s f6, f28, f4, f12, rmm # perform operation
fnmadd.s f6, f28, f4, f12, rne # perform operation
fnmadd.s f6, f28, f4, f12, rtz # perform operation
fnmadd.s f6, f28, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x1, 0xae2d7a7605f03f3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x5f6e55dc4e15504 # load x3 with value 0x5f6e55dc4e15504
sw x3, 0(x2) # store 0x5f6e55dc4e15504 in memory
flw f12, 0(x2) # load 0x5f6e55dc4e15504 from memory into f12
fnmadd.s f1, f3, f27, f12, dyn # perform operation
fnmadd.s f1, f3, f27, f12, rdn # perform operation
fnmadd.s f1, f3, f27, f12, rmm # perform operation
fnmadd.s f1, f3, f27, f12, rne # perform operation
fnmadd.s f1, f3, f27, f12, rtz # perform operation
fnmadd.s f1, f3, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f3, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x29, 0xbb4cd28484233825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xa4bcf4e8ce748202 # load x3 with value 0xa4bcf4e8ce748202
sw x3, 0(x2) # store 0xa4bcf4e8ce748202 in memory
flw f28, 0(x2) # load 0xa4bcf4e8ce748202 from memory into f28
fnmadd.s f29, f26, f19, f28, dyn # perform operation
fnmadd.s f29, f26, f19, f28, rdn # perform operation
fnmadd.s f29, f26, f19, f28, rmm # perform operation
fnmadd.s f29, f26, f19, f28, rne # perform operation
fnmadd.s f29, f26, f19, f28, rtz # perform operation
fnmadd.s f29, f26, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x9, 0xd91dd83b9d91d396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7ae0cf1617c8838c # load x3 with value 0x7ae0cf1617c8838c
sw x3, 0(x2) # store 0x7ae0cf1617c8838c in memory
flw f6, 0(x2) # load 0x7ae0cf1617c8838c from memory into f6
fnmadd.s f9, f12, f1, f6, dyn # perform operation
fnmadd.s f9, f12, f1, f6, rdn # perform operation
fnmadd.s f9, f12, f1, f6, rmm # perform operation
fnmadd.s f9, f12, f1, f6, rne # perform operation
fnmadd.s f9, f12, f1, f6, rtz # perform operation
fnmadd.s f9, f12, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x28, 0xc835c0a5003683e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x3b7edd39502abd61 # load x3 with value 0x3b7edd39502abd61
sw x3, 0(x2) # store 0x3b7edd39502abd61 in memory
flw f12, 0(x2) # load 0x3b7edd39502abd61 from memory into f12
fnmadd.s f28, f13, f7, f12, dyn # perform operation
fnmadd.s f28, f13, f7, f12, rdn # perform operation
fnmadd.s f28, f13, f7, f12, rmm # perform operation
fnmadd.s f28, f13, f7, f12, rne # perform operation
fnmadd.s f28, f13, f7, f12, rtz # perform operation
fnmadd.s f28, f13, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f13, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f13, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x15, 0xfeb01c3b90f374de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xd6fdb63415138fd0 # load x3 with value 0xd6fdb63415138fd0
sw x3, 0(x2) # store 0xd6fdb63415138fd0 in memory
flw f22, 0(x2) # load 0xd6fdb63415138fd0 from memory into f22
fnmadd.s f15, f12, f4, f22, dyn # perform operation
fnmadd.s f15, f12, f4, f22, rdn # perform operation
fnmadd.s f15, f12, f4, f22, rmm # perform operation
fnmadd.s f15, f12, f4, f22, rne # perform operation
fnmadd.s f15, f12, f4, f22, rtz # perform operation
fnmadd.s f15, f12, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x9, 0xf8c6303541680e85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x792873ebce3daab9 # load x3 with value 0x792873ebce3daab9
sw x3, 0(x2) # store 0x792873ebce3daab9 in memory
flw f2, 0(x2) # load 0x792873ebce3daab9 from memory into f2
fnmadd.s f9, f8, f31, f2, dyn # perform operation
fnmadd.s f9, f8, f31, f2, rdn # perform operation
fnmadd.s f9, f8, f31, f2, rmm # perform operation
fnmadd.s f9, f8, f31, f2, rne # perform operation
fnmadd.s f9, f8, f31, f2, rtz # perform operation
fnmadd.s f9, f8, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x6, 0x0a2ee1906decba0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xec7d46537188990c # load x3 with value 0xec7d46537188990c
sw x3, 0(x2) # store 0xec7d46537188990c in memory
flw f27, 0(x2) # load 0xec7d46537188990c from memory into f27
fnmadd.s f6, f21, f17, f27, dyn # perform operation
fnmadd.s f6, f21, f17, f27, rdn # perform operation
fnmadd.s f6, f21, f17, f27, rmm # perform operation
fnmadd.s f6, f21, f17, f27, rne # perform operation
fnmadd.s f6, f21, f17, f27, rtz # perform operation
fnmadd.s f6, f21, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f21, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x2, 0xf94b2787dde6ddc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x70138f2d8dba763e # load x3 with value 0x70138f2d8dba763e
sw x3, 0(x2) # store 0x70138f2d8dba763e in memory
flw f22, 0(x2) # load 0x70138f2d8dba763e from memory into f22
fnmadd.s f2, f27, f31, f22, dyn # perform operation
fnmadd.s f2, f27, f31, f22, rdn # perform operation
fnmadd.s f2, f27, f31, f22, rmm # perform operation
fnmadd.s f2, f27, f31, f22, rne # perform operation
fnmadd.s f2, f27, f31, f22, rtz # perform operation
fnmadd.s f2, f27, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x9, 0xc59132fefda14cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xf8e607e748472915 # load x3 with value 0xf8e607e748472915
sw x3, 0(x2) # store 0xf8e607e748472915 in memory
flw f31, 0(x2) # load 0xf8e607e748472915 from memory into f31
fnmadd.s f9, f4, f1, f31, dyn # perform operation
fnmadd.s f9, f4, f1, f31, rdn # perform operation
fnmadd.s f9, f4, f1, f31, rmm # perform operation
fnmadd.s f9, f4, f1, f31, rne # perform operation
fnmadd.s f9, f4, f1, f31, rtz # perform operation
fnmadd.s f9, f4, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f4, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f4, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f4, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f4, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f4, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x6, 0xc0dfb4d8c97859ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xfc5e545e1794c289 # load x3 with value 0xfc5e545e1794c289
sw x3, 0(x2) # store 0xfc5e545e1794c289 in memory
flw f10, 0(x2) # load 0xfc5e545e1794c289 from memory into f10
fnmadd.s f6, f7, f8, f10, dyn # perform operation
fnmadd.s f6, f7, f8, f10, rdn # perform operation
fnmadd.s f6, f7, f8, f10, rmm # perform operation
fnmadd.s f6, f7, f8, f10, rne # perform operation
fnmadd.s f6, f7, f8, f10, rtz # perform operation
fnmadd.s f6, f7, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x31, 0xa6908c2b84a51092 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x6805591b2e8a6114 # load x3 with value 0x6805591b2e8a6114
sw x3, 0(x2) # store 0x6805591b2e8a6114 in memory
flw f8, 0(x2) # load 0x6805591b2e8a6114 from memory into f8
fnmadd.s f31, f18, f7, f8, dyn # perform operation
fnmadd.s f31, f18, f7, f8, rdn # perform operation
fnmadd.s f31, f18, f7, f8, rmm # perform operation
fnmadd.s f31, f18, f7, f8, rne # perform operation
fnmadd.s f31, f18, f7, f8, rtz # perform operation
fnmadd.s f31, f18, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x8, 0xf1710116613ced64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xd35713a03eaaa153 # load x3 with value 0xd35713a03eaaa153
sw x3, 0(x2) # store 0xd35713a03eaaa153 in memory
flw f12, 0(x2) # load 0xd35713a03eaaa153 from memory into f12
fnmadd.s f8, f16, f28, f12, dyn # perform operation
fnmadd.s f8, f16, f28, f12, rdn # perform operation
fnmadd.s f8, f16, f28, f12, rmm # perform operation
fnmadd.s f8, f16, f28, f12, rne # perform operation
fnmadd.s f8, f16, f28, f12, rtz # perform operation
fnmadd.s f8, f16, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f16, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x28, 0x216e34c551c4ea80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xfe5ccbb0b90969c6 # load x3 with value 0xfe5ccbb0b90969c6
sw x3, 0(x2) # store 0xfe5ccbb0b90969c6 in memory
flw f31, 0(x2) # load 0xfe5ccbb0b90969c6 from memory into f31
fnmadd.s f28, f13, f5, f31, dyn # perform operation
fnmadd.s f28, f13, f5, f31, rdn # perform operation
fnmadd.s f28, f13, f5, f31, rmm # perform operation
fnmadd.s f28, f13, f5, f31, rne # perform operation
fnmadd.s f28, f13, f5, f31, rtz # perform operation
fnmadd.s f28, f13, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f13, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f13, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x26, 0x29a43ae8d760bc3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x554662157b49fb78 # load x3 with value 0x554662157b49fb78
sw x3, 0(x2) # store 0x554662157b49fb78 in memory
flw f9, 0(x2) # load 0x554662157b49fb78 from memory into f9
fnmadd.s f26, f25, f19, f9, dyn # perform operation
fnmadd.s f26, f25, f19, f9, rdn # perform operation
fnmadd.s f26, f25, f19, f9, rmm # perform operation
fnmadd.s f26, f25, f19, f9, rne # perform operation
fnmadd.s f26, f25, f19, f9, rtz # perform operation
fnmadd.s f26, f25, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x12, 0xbdeceb8715230331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x829f0a96a734f60 # load x3 with value 0x829f0a96a734f60
sw x3, 0(x2) # store 0x829f0a96a734f60 in memory
flw f4, 0(x2) # load 0x829f0a96a734f60 from memory into f4
fnmadd.s f12, f20, f17, f4, dyn # perform operation
fnmadd.s f12, f20, f17, f4, rdn # perform operation
fnmadd.s f12, f20, f17, f4, rmm # perform operation
fnmadd.s f12, f20, f17, f4, rne # perform operation
fnmadd.s f12, f20, f17, f4, rtz # perform operation
fnmadd.s f12, f20, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f20, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f20, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x6, 0xee2703c57d8b2d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x726197eaa7552044 # load x3 with value 0x726197eaa7552044
sw x3, 0(x2) # store 0x726197eaa7552044 in memory
flw f21, 0(x2) # load 0x726197eaa7552044 from memory into f21
fnmadd.s f6, f12, f1, f21, dyn # perform operation
fnmadd.s f6, f12, f1, f21, rdn # perform operation
fnmadd.s f6, f12, f1, f21, rmm # perform operation
fnmadd.s f6, f12, f1, f21, rne # perform operation
fnmadd.s f6, f12, f1, f21, rtz # perform operation
fnmadd.s f6, f12, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x26, 0xe555b7acb83a08d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x7f9e34546932338d # load x3 with value 0x7f9e34546932338d
sw x3, 0(x2) # store 0x7f9e34546932338d in memory
flw f24, 0(x2) # load 0x7f9e34546932338d from memory into f24
fnmadd.s f26, f21, f19, f24, dyn # perform operation
fnmadd.s f26, f21, f19, f24, rdn # perform operation
fnmadd.s f26, f21, f19, f24, rmm # perform operation
fnmadd.s f26, f21, f19, f24, rne # perform operation
fnmadd.s f26, f21, f19, f24, rtz # perform operation
fnmadd.s f26, f21, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x4, 0x0de7809766a3d982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x18e2e7a8148ec56e # load x3 with value 0x18e2e7a8148ec56e
sw x3, 0(x2) # store 0x18e2e7a8148ec56e in memory
flw f24, 0(x2) # load 0x18e2e7a8148ec56e from memory into f24
fnmadd.s f4, f17, f30, f24, dyn # perform operation
fnmadd.s f4, f17, f30, f24, rdn # perform operation
fnmadd.s f4, f17, f30, f24, rmm # perform operation
fnmadd.s f4, f17, f30, f24, rne # perform operation
fnmadd.s f4, f17, f30, f24, rtz # perform operation
fnmadd.s f4, f17, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x19, 0xa846bb96b4804560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x421c78ddf7002347 # load x3 with value 0x421c78ddf7002347
sw x3, 0(x2) # store 0x421c78ddf7002347 in memory
flw f15, 0(x2) # load 0x421c78ddf7002347 from memory into f15
fnmadd.s f19, f12, f3, f15, dyn # perform operation
fnmadd.s f19, f12, f3, f15, rdn # perform operation
fnmadd.s f19, f12, f3, f15, rmm # perform operation
fnmadd.s f19, f12, f3, f15, rne # perform operation
fnmadd.s f19, f12, f3, f15, rtz # perform operation
fnmadd.s f19, f12, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f12, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x9, 0x3ce98457af578259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x56bd2a1053ef4d8c # load x3 with value 0x56bd2a1053ef4d8c
sw x3, 0(x2) # store 0x56bd2a1053ef4d8c in memory
flw f14, 0(x2) # load 0x56bd2a1053ef4d8c from memory into f14
fnmadd.s f9, f5, f15, f14, dyn # perform operation
fnmadd.s f9, f5, f15, f14, rdn # perform operation
fnmadd.s f9, f5, f15, f14, rmm # perform operation
fnmadd.s f9, f5, f15, f14, rne # perform operation
fnmadd.s f9, f5, f15, f14, rtz # perform operation
fnmadd.s f9, f5, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x26, 0x1ade04db2206e7c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xe131a1be9599cc86 # load x3 with value 0xe131a1be9599cc86
sw x3, 0(x2) # store 0xe131a1be9599cc86 in memory
flw f1, 0(x2) # load 0xe131a1be9599cc86 from memory into f1
fnmadd.s f26, f24, f7, f1, dyn # perform operation
fnmadd.s f26, f24, f7, f1, rdn # perform operation
fnmadd.s f26, f24, f7, f1, rmm # perform operation
fnmadd.s f26, f24, f7, f1, rne # perform operation
fnmadd.s f26, f24, f7, f1, rtz # perform operation
fnmadd.s f26, f24, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x6, 0x6dcc9754311ddfae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xb62cdeca54c6710 # load x3 with value 0xb62cdeca54c6710
sw x3, 0(x2) # store 0xb62cdeca54c6710 in memory
flw f2, 0(x2) # load 0xb62cdeca54c6710 from memory into f2
fnmadd.s f6, f10, f26, f2, dyn # perform operation
fnmadd.s f6, f10, f26, f2, rdn # perform operation
fnmadd.s f6, f10, f26, f2, rmm # perform operation
fnmadd.s f6, f10, f26, f2, rne # perform operation
fnmadd.s f6, f10, f26, f2, rtz # perform operation
fnmadd.s f6, f10, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x17, 0x8f8ffcc37bbb8e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x1bf758f334ee687 # load x3 with value 0x1bf758f334ee687
sw x3, 0(x2) # store 0x1bf758f334ee687 in memory
flw f14, 0(x2) # load 0x1bf758f334ee687 from memory into f14
fnmadd.s f17, f7, f8, f14, dyn # perform operation
fnmadd.s f17, f7, f8, f14, rdn # perform operation
fnmadd.s f17, f7, f8, f14, rmm # perform operation
fnmadd.s f17, f7, f8, f14, rne # perform operation
fnmadd.s f17, f7, f8, f14, rtz # perform operation
fnmadd.s f17, f7, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x6, 0x9e6639eef417a16f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x6dab0aa8b56c8aec # load x3 with value 0x6dab0aa8b56c8aec
sw x3, 0(x2) # store 0x6dab0aa8b56c8aec in memory
flw f24, 0(x2) # load 0x6dab0aa8b56c8aec from memory into f24
fnmadd.s f6, f19, f29, f24, dyn # perform operation
fnmadd.s f6, f19, f29, f24, rdn # perform operation
fnmadd.s f6, f19, f29, f24, rmm # perform operation
fnmadd.s f6, f19, f29, f24, rne # perform operation
fnmadd.s f6, f19, f29, f24, rtz # perform operation
fnmadd.s f6, f19, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f19, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x27, 0xad346414fed53b09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x9f59a21442c1b22b # load x3 with value 0x9f59a21442c1b22b
sw x3, 0(x2) # store 0x9f59a21442c1b22b in memory
flw f23, 0(x2) # load 0x9f59a21442c1b22b from memory into f23
fnmadd.s f27, f29, f3, f23, dyn # perform operation
fnmadd.s f27, f29, f3, f23, rdn # perform operation
fnmadd.s f27, f29, f3, f23, rmm # perform operation
fnmadd.s f27, f29, f3, f23, rne # perform operation
fnmadd.s f27, f29, f3, f23, rtz # perform operation
fnmadd.s f27, f29, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x25, 0x0dff492440cbc9f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xb7a64c23ae01c72a # load x3 with value 0xb7a64c23ae01c72a
sw x3, 0(x2) # store 0xb7a64c23ae01c72a in memory
flw f28, 0(x2) # load 0xb7a64c23ae01c72a from memory into f28
fnmadd.s f25, f13, f9, f28, dyn # perform operation
fnmadd.s f25, f13, f9, f28, rdn # perform operation
fnmadd.s f25, f13, f9, f28, rmm # perform operation
fnmadd.s f25, f13, f9, f28, rne # perform operation
fnmadd.s f25, f13, f9, f28, rtz # perform operation
fnmadd.s f25, f13, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f13, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f13, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f13, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f13, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f13, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x14, 0x076de12b2408275a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x9f4546d222f54c99 # load x3 with value 0x9f4546d222f54c99
sw x3, 0(x2) # store 0x9f4546d222f54c99 in memory
flw f5, 0(x2) # load 0x9f4546d222f54c99 from memory into f5
fnmadd.s f14, f18, f16, f5, dyn # perform operation
fnmadd.s f14, f18, f16, f5, rdn # perform operation
fnmadd.s f14, f18, f16, f5, rmm # perform operation
fnmadd.s f14, f18, f16, f5, rne # perform operation
fnmadd.s f14, f18, f16, f5, rtz # perform operation
fnmadd.s f14, f18, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x30, 0xac2e21d96d1a1da2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x535237b555ec0b85 # load x3 with value 0x535237b555ec0b85
sw x3, 0(x2) # store 0x535237b555ec0b85 in memory
flw f28, 0(x2) # load 0x535237b555ec0b85 from memory into f28
fnmadd.s f30, f26, f2, f28, dyn # perform operation
fnmadd.s f30, f26, f2, f28, rdn # perform operation
fnmadd.s f30, f26, f2, f28, rmm # perform operation
fnmadd.s f30, f26, f2, f28, rne # perform operation
fnmadd.s f30, f26, f2, f28, rtz # perform operation
fnmadd.s f30, f26, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x22, 0x7962479dbdcbc338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0xe7dee30fdb307113 # load x3 with value 0xe7dee30fdb307113
sw x3, 0(x2) # store 0xe7dee30fdb307113 in memory
flw f9, 0(x2) # load 0xe7dee30fdb307113 from memory into f9
fnmadd.s f22, f20, f16, f9, dyn # perform operation
fnmadd.s f22, f20, f16, f9, rdn # perform operation
fnmadd.s f22, f20, f16, f9, rmm # perform operation
fnmadd.s f22, f20, f16, f9, rne # perform operation
fnmadd.s f22, f20, f16, f9, rtz # perform operation
fnmadd.s f22, f20, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x17, 0x5fd79d089d1d4a7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xaac796ba5272c655 # load x3 with value 0xaac796ba5272c655
sw x3, 0(x2) # store 0xaac796ba5272c655 in memory
flw f9, 0(x2) # load 0xaac796ba5272c655 from memory into f9
fnmadd.s f17, f4, f6, f9, dyn # perform operation
fnmadd.s f17, f4, f6, f9, rdn # perform operation
fnmadd.s f17, f4, f6, f9, rmm # perform operation
fnmadd.s f17, f4, f6, f9, rne # perform operation
fnmadd.s f17, f4, f6, f9, rtz # perform operation
fnmadd.s f17, f4, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f4, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f4, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f4, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f4, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f4, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x20, 0x38692fc5e3d75ae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x94efc257404bb2e3 # load x3 with value 0x94efc257404bb2e3
sw x3, 0(x2) # store 0x94efc257404bb2e3 in memory
flw f28, 0(x2) # load 0x94efc257404bb2e3 from memory into f28
fnmadd.s f20, f4, f2, f28, dyn # perform operation
fnmadd.s f20, f4, f2, f28, rdn # perform operation
fnmadd.s f20, f4, f2, f28, rmm # perform operation
fnmadd.s f20, f4, f2, f28, rne # perform operation
fnmadd.s f20, f4, f2, f28, rtz # perform operation
fnmadd.s f20, f4, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f4, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x14, 0x948a37592129b76f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xd46369ffd5ae4554 # load x3 with value 0xd46369ffd5ae4554
sw x3, 0(x2) # store 0xd46369ffd5ae4554 in memory
flw f29, 0(x2) # load 0xd46369ffd5ae4554 from memory into f29
fnmadd.s f14, f30, f16, f29, dyn # perform operation
fnmadd.s f14, f30, f16, f29, rdn # perform operation
fnmadd.s f14, f30, f16, f29, rmm # perform operation
fnmadd.s f14, f30, f16, f29, rne # perform operation
fnmadd.s f14, f30, f16, f29, rtz # perform operation
fnmadd.s f14, f30, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x15, 0x45a644748002387b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xdf9451c1bd096ca4 # load x3 with value 0xdf9451c1bd096ca4
sw x3, 0(x2) # store 0xdf9451c1bd096ca4 in memory
flw f13, 0(x2) # load 0xdf9451c1bd096ca4 from memory into f13
fnmadd.s f15, f8, f28, f13, dyn # perform operation
fnmadd.s f15, f8, f28, f13, rdn # perform operation
fnmadd.s f15, f8, f28, f13, rmm # perform operation
fnmadd.s f15, f8, f28, f13, rne # perform operation
fnmadd.s f15, f8, f28, f13, rtz # perform operation
fnmadd.s f15, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x24, 0xd1da79ebdc5fe96b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xcdde21444c6f2a55 # load x3 with value 0xcdde21444c6f2a55
sw x3, 0(x2) # store 0xcdde21444c6f2a55 in memory
flw f4, 0(x2) # load 0xcdde21444c6f2a55 from memory into f4
fnmadd.s f24, f15, f12, f4, dyn # perform operation
fnmadd.s f24, f15, f12, f4, rdn # perform operation
fnmadd.s f24, f15, f12, f4, rmm # perform operation
fnmadd.s f24, f15, f12, f4, rne # perform operation
fnmadd.s f24, f15, f12, f4, rtz # perform operation
fnmadd.s f24, f15, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x1, 0x2264cb7b1868af05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x598422710756b384 # load x3 with value 0x598422710756b384
sw x3, 0(x2) # store 0x598422710756b384 in memory
flw f3, 0(x2) # load 0x598422710756b384 from memory into f3
fnmadd.s f1, f27, f13, f3, dyn # perform operation
fnmadd.s f1, f27, f13, f3, rdn # perform operation
fnmadd.s f1, f27, f13, f3, rmm # perform operation
fnmadd.s f1, f27, f13, f3, rne # perform operation
fnmadd.s f1, f27, f13, f3, rtz # perform operation
fnmadd.s f1, f27, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x31, 0x84057ea27ca34a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x5eef885fa4c42f78 # load x3 with value 0x5eef885fa4c42f78
sw x3, 0(x2) # store 0x5eef885fa4c42f78 in memory
flw f13, 0(x2) # load 0x5eef885fa4c42f78 from memory into f13
fnmadd.s f31, f30, f29, f13, dyn # perform operation
fnmadd.s f31, f30, f29, f13, rdn # perform operation
fnmadd.s f31, f30, f29, f13, rmm # perform operation
fnmadd.s f31, f30, f29, f13, rne # perform operation
fnmadd.s f31, f30, f29, f13, rtz # perform operation
fnmadd.s f31, f30, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x24, 0x1bb7758d11403042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xa1d9d36f49142249 # load x3 with value 0xa1d9d36f49142249
sw x3, 0(x2) # store 0xa1d9d36f49142249 in memory
flw f23, 0(x2) # load 0xa1d9d36f49142249 from memory into f23
fnmadd.s f24, f6, f14, f23, dyn # perform operation
fnmadd.s f24, f6, f14, f23, rdn # perform operation
fnmadd.s f24, f6, f14, f23, rmm # perform operation
fnmadd.s f24, f6, f14, f23, rne # perform operation
fnmadd.s f24, f6, f14, f23, rtz # perform operation
fnmadd.s f24, f6, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x5, 0xc3891c31443ff579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x91b23532df390c5f # load x3 with value 0x91b23532df390c5f
sw x3, 0(x2) # store 0x91b23532df390c5f in memory
flw f29, 0(x2) # load 0x91b23532df390c5f from memory into f29
fnmadd.s f5, f20, f27, f29, dyn # perform operation
fnmadd.s f5, f20, f27, f29, rdn # perform operation
fnmadd.s f5, f20, f27, f29, rmm # perform operation
fnmadd.s f5, f20, f27, f29, rne # perform operation
fnmadd.s f5, f20, f27, f29, rtz # perform operation
fnmadd.s f5, f20, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f20, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f20, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x24, 0x1585386221194a0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xcf8b4c7b6b908483 # load x3 with value 0xcf8b4c7b6b908483
sw x3, 0(x2) # store 0xcf8b4c7b6b908483 in memory
flw f25, 0(x2) # load 0xcf8b4c7b6b908483 from memory into f25
fnmadd.s f24, f18, f28, f25, dyn # perform operation
fnmadd.s f24, f18, f28, f25, rdn # perform operation
fnmadd.s f24, f18, f28, f25, rmm # perform operation
fnmadd.s f24, f18, f28, f25, rne # perform operation
fnmadd.s f24, f18, f28, f25, rtz # perform operation
fnmadd.s f24, f18, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x14, 0x25f228223d54889d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x6441ea0dd875fa5f # load x3 with value 0x6441ea0dd875fa5f
sw x3, 0(x2) # store 0x6441ea0dd875fa5f in memory
flw f20, 0(x2) # load 0x6441ea0dd875fa5f from memory into f20
fnmadd.s f14, f18, f7, f20, dyn # perform operation
fnmadd.s f14, f18, f7, f20, rdn # perform operation
fnmadd.s f14, f18, f7, f20, rmm # perform operation
fnmadd.s f14, f18, f7, f20, rne # perform operation
fnmadd.s f14, f18, f7, f20, rtz # perform operation
fnmadd.s f14, f18, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x29, 0x0d6fcf4fa4163629 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xceb5a2ba077a7711 # load x3 with value 0xceb5a2ba077a7711
sw x3, 0(x2) # store 0xceb5a2ba077a7711 in memory
flw f25, 0(x2) # load 0xceb5a2ba077a7711 from memory into f25
fnmadd.s f29, f13, f9, f25, dyn # perform operation
fnmadd.s f29, f13, f9, f25, rdn # perform operation
fnmadd.s f29, f13, f9, f25, rmm # perform operation
fnmadd.s f29, f13, f9, f25, rne # perform operation
fnmadd.s f29, f13, f9, f25, rtz # perform operation
fnmadd.s f29, f13, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x16, 0x4a38354a3d716cd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xe0aabf2f37e2d225 # load x3 with value 0xe0aabf2f37e2d225
sw x3, 0(x2) # store 0xe0aabf2f37e2d225 in memory
flw f2, 0(x2) # load 0xe0aabf2f37e2d225 from memory into f2
fnmadd.s f16, f13, f15, f2, dyn # perform operation
fnmadd.s f16, f13, f15, f2, rdn # perform operation
fnmadd.s f16, f13, f15, f2, rmm # perform operation
fnmadd.s f16, f13, f15, f2, rne # perform operation
fnmadd.s f16, f13, f15, f2, rtz # perform operation
fnmadd.s f16, f13, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x5, 0x41671e071ab72a41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x8990b1d86f931f4c # load x3 with value 0x8990b1d86f931f4c
sw x3, 0(x2) # store 0x8990b1d86f931f4c in memory
flw f2, 0(x2) # load 0x8990b1d86f931f4c from memory into f2
fnmadd.s f5, f12, f31, f2, dyn # perform operation
fnmadd.s f5, f12, f31, f2, rdn # perform operation
fnmadd.s f5, f12, f31, f2, rmm # perform operation
fnmadd.s f5, f12, f31, f2, rne # perform operation
fnmadd.s f5, f12, f31, f2, rtz # perform operation
fnmadd.s f5, f12, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x9, 0x1ae02329c8fb0ae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x6f39af1c3e3517e5 # load x3 with value 0x6f39af1c3e3517e5
sw x3, 0(x2) # store 0x6f39af1c3e3517e5 in memory
flw f13, 0(x2) # load 0x6f39af1c3e3517e5 from memory into f13
fnmadd.s f9, f24, f2, f13, dyn # perform operation
fnmadd.s f9, f24, f2, f13, rdn # perform operation
fnmadd.s f9, f24, f2, f13, rmm # perform operation
fnmadd.s f9, f24, f2, f13, rne # perform operation
fnmadd.s f9, f24, f2, f13, rtz # perform operation
fnmadd.s f9, f24, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x13, 0x73946c82a244d9f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x58c0e55858e2b2b5 # load x3 with value 0x58c0e55858e2b2b5
sw x3, 0(x2) # store 0x58c0e55858e2b2b5 in memory
flw f29, 0(x2) # load 0x58c0e55858e2b2b5 from memory into f29
fnmadd.s f13, f28, f23, f29, dyn # perform operation
fnmadd.s f13, f28, f23, f29, rdn # perform operation
fnmadd.s f13, f28, f23, f29, rmm # perform operation
fnmadd.s f13, f28, f23, f29, rne # perform operation
fnmadd.s f13, f28, f23, f29, rtz # perform operation
fnmadd.s f13, f28, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x3, 0xa04fb90a6c1b25de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x838a3ef44b0053f7 # load x3 with value 0x838a3ef44b0053f7
sw x3, 0(x2) # store 0x838a3ef44b0053f7 in memory
flw f30, 0(x2) # load 0x838a3ef44b0053f7 from memory into f30
fnmadd.s f3, f7, f24, f30, dyn # perform operation
fnmadd.s f3, f7, f24, f30, rdn # perform operation
fnmadd.s f3, f7, f24, f30, rmm # perform operation
fnmadd.s f3, f7, f24, f30, rne # perform operation
fnmadd.s f3, f7, f24, f30, rtz # perform operation
fnmadd.s f3, f7, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f7, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x22, 0x7526eb164e6b7abd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xc7be47fd8335cda9 # load x3 with value 0xc7be47fd8335cda9
sw x3, 0(x2) # store 0xc7be47fd8335cda9 in memory
flw f25, 0(x2) # load 0xc7be47fd8335cda9 from memory into f25
fnmadd.s f22, f19, f27, f25, dyn # perform operation
fnmadd.s f22, f19, f27, f25, rdn # perform operation
fnmadd.s f22, f19, f27, f25, rmm # perform operation
fnmadd.s f22, f19, f27, f25, rne # perform operation
fnmadd.s f22, f19, f27, f25, rtz # perform operation
fnmadd.s f22, f19, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x6, 0x9549126b62b42b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xcaf5b63bcb717db1 # load x3 with value 0xcaf5b63bcb717db1
sw x3, 0(x2) # store 0xcaf5b63bcb717db1 in memory
flw f13, 0(x2) # load 0xcaf5b63bcb717db1 from memory into f13
fnmadd.s f6, f12, f2, f13, dyn # perform operation
fnmadd.s f6, f12, f2, f13, rdn # perform operation
fnmadd.s f6, f12, f2, f13, rmm # perform operation
fnmadd.s f6, f12, f2, f13, rne # perform operation
fnmadd.s f6, f12, f2, f13, rtz # perform operation
fnmadd.s f6, f12, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x16, 0x92b4979f1fd0c9e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0xad280bc0d15acd54 # load x3 with value 0xad280bc0d15acd54
sw x3, 0(x2) # store 0xad280bc0d15acd54 in memory
flw f2, 0(x2) # load 0xad280bc0d15acd54 from memory into f2
fnmadd.s f16, f20, f5, f2, dyn # perform operation
fnmadd.s f16, f20, f5, f2, rdn # perform operation
fnmadd.s f16, f20, f5, f2, rmm # perform operation
fnmadd.s f16, f20, f5, f2, rne # perform operation
fnmadd.s f16, f20, f5, f2, rtz # perform operation
fnmadd.s f16, f20, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x12, 0xf24506f103487b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x395edf7b96cd2ffc # load x3 with value 0x395edf7b96cd2ffc
sw x3, 0(x2) # store 0x395edf7b96cd2ffc in memory
flw f3, 0(x2) # load 0x395edf7b96cd2ffc from memory into f3
fnmadd.s f12, f5, f21, f3, dyn # perform operation
fnmadd.s f12, f5, f21, f3, rdn # perform operation
fnmadd.s f12, f5, f21, f3, rmm # perform operation
fnmadd.s f12, f5, f21, f3, rne # perform operation
fnmadd.s f12, f5, f21, f3, rtz # perform operation
fnmadd.s f12, f5, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x31, 0x8b1c273622800f8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0xb62a1c26c51b5337 # load x3 with value 0xb62a1c26c51b5337
sw x3, 0(x2) # store 0xb62a1c26c51b5337 in memory
flw f13, 0(x2) # load 0xb62a1c26c51b5337 from memory into f13
fnmadd.s f31, f20, f8, f13, dyn # perform operation
fnmadd.s f31, f20, f8, f13, rdn # perform operation
fnmadd.s f31, f20, f8, f13, rmm # perform operation
fnmadd.s f31, f20, f8, f13, rne # perform operation
fnmadd.s f31, f20, f8, f13, rtz # perform operation
fnmadd.s f31, f20, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x18, 0x612b6dd24a9bcf9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x7b17c953bd7f754b # load x3 with value 0x7b17c953bd7f754b
sw x3, 0(x2) # store 0x7b17c953bd7f754b in memory
flw f16, 0(x2) # load 0x7b17c953bd7f754b from memory into f16
fnmadd.s f18, f24, f4, f16, dyn # perform operation
fnmadd.s f18, f24, f4, f16, rdn # perform operation
fnmadd.s f18, f24, f4, f16, rmm # perform operation
fnmadd.s f18, f24, f4, f16, rne # perform operation
fnmadd.s f18, f24, f4, f16, rtz # perform operation
fnmadd.s f18, f24, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x18, 0x8ef1b6d8be9b483a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x8f8e20fe50b64f8 # load x3 with value 0x8f8e20fe50b64f8
sw x3, 0(x2) # store 0x8f8e20fe50b64f8 in memory
flw f27, 0(x2) # load 0x8f8e20fe50b64f8 from memory into f27
fnmadd.s f18, f1, f15, f27, dyn # perform operation
fnmadd.s f18, f1, f15, f27, rdn # perform operation
fnmadd.s f18, f1, f15, f27, rmm # perform operation
fnmadd.s f18, f1, f15, f27, rne # perform operation
fnmadd.s f18, f1, f15, f27, rtz # perform operation
fnmadd.s f18, f1, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x25, 0x9be98ad6eeb8d82e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xb580ca599e572ceb # load x3 with value 0xb580ca599e572ceb
sw x3, 0(x2) # store 0xb580ca599e572ceb in memory
flw f5, 0(x2) # load 0xb580ca599e572ceb from memory into f5
fnmadd.s f25, f12, f13, f5, dyn # perform operation
fnmadd.s f25, f12, f13, f5, rdn # perform operation
fnmadd.s f25, f12, f13, f5, rmm # perform operation
fnmadd.s f25, f12, f13, f5, rne # perform operation
fnmadd.s f25, f12, f13, f5, rtz # perform operation
fnmadd.s f25, f12, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x8, 0xe80c705ad5d67d91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x4249d5cf6ee6f3d2 # load x3 with value 0x4249d5cf6ee6f3d2
sw x3, 0(x2) # store 0x4249d5cf6ee6f3d2 in memory
flw f11, 0(x2) # load 0x4249d5cf6ee6f3d2 from memory into f11
fnmadd.s f8, f2, f27, f11, dyn # perform operation
fnmadd.s f8, f2, f27, f11, rdn # perform operation
fnmadd.s f8, f2, f27, f11, rmm # perform operation
fnmadd.s f8, f2, f27, f11, rne # perform operation
fnmadd.s f8, f2, f27, f11, rtz # perform operation
fnmadd.s f8, f2, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x28, 0xc44c0a6add91281b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xfc3aa2e320865f7 # load x3 with value 0xfc3aa2e320865f7
sw x3, 0(x2) # store 0xfc3aa2e320865f7 in memory
flw f16, 0(x2) # load 0xfc3aa2e320865f7 from memory into f16
fnmadd.s f28, f26, f4, f16, dyn # perform operation
fnmadd.s f28, f26, f4, f16, rdn # perform operation
fnmadd.s f28, f26, f4, f16, rmm # perform operation
fnmadd.s f28, f26, f4, f16, rne # perform operation
fnmadd.s f28, f26, f4, f16, rtz # perform operation
fnmadd.s f28, f26, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x12, 0xb6cd17f98f9e8144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x662ce5acba8c7e50 # load x3 with value 0x662ce5acba8c7e50
sw x3, 0(x2) # store 0x662ce5acba8c7e50 in memory
flw f31, 0(x2) # load 0x662ce5acba8c7e50 from memory into f31
fnmadd.s f12, f10, f11, f31, dyn # perform operation
fnmadd.s f12, f10, f11, f31, rdn # perform operation
fnmadd.s f12, f10, f11, f31, rmm # perform operation
fnmadd.s f12, f10, f11, f31, rne # perform operation
fnmadd.s f12, f10, f11, f31, rtz # perform operation
fnmadd.s f12, f10, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x8, 0x9fee9f4f2e35dd09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0xbd89a49f8416e8c6 # load x3 with value 0xbd89a49f8416e8c6
sw x3, 0(x2) # store 0xbd89a49f8416e8c6 in memory
flw f21, 0(x2) # load 0xbd89a49f8416e8c6 from memory into f21
fnmadd.s f8, f2, f28, f21, dyn # perform operation
fnmadd.s f8, f2, f28, f21, rdn # perform operation
fnmadd.s f8, f2, f28, f21, rmm # perform operation
fnmadd.s f8, f2, f28, f21, rne # perform operation
fnmadd.s f8, f2, f28, f21, rtz # perform operation
fnmadd.s f8, f2, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x22, 0xc876b6560df92bb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x617f54601a3ca9a5 # load x3 with value 0x617f54601a3ca9a5
sw x3, 0(x2) # store 0x617f54601a3ca9a5 in memory
flw f20, 0(x2) # load 0x617f54601a3ca9a5 from memory into f20
fnmadd.s f22, f23, f15, f20, dyn # perform operation
fnmadd.s f22, f23, f15, f20, rdn # perform operation
fnmadd.s f22, f23, f15, f20, rmm # perform operation
fnmadd.s f22, f23, f15, f20, rne # perform operation
fnmadd.s f22, f23, f15, f20, rtz # perform operation
fnmadd.s f22, f23, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f23, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x14, 0x6accc31dc3ddeddc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x2dabbcf3f1b1eef8 # load x3 with value 0x2dabbcf3f1b1eef8
sw x3, 0(x2) # store 0x2dabbcf3f1b1eef8 in memory
flw f19, 0(x2) # load 0x2dabbcf3f1b1eef8 from memory into f19
fnmadd.s f14, f21, f26, f19, dyn # perform operation
fnmadd.s f14, f21, f26, f19, rdn # perform operation
fnmadd.s f14, f21, f26, f19, rmm # perform operation
fnmadd.s f14, f21, f26, f19, rne # perform operation
fnmadd.s f14, f21, f26, f19, rtz # perform operation
fnmadd.s f14, f21, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x25, 0x5c1195659cedf875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x106acb7de1631a4c # load x3 with value 0x106acb7de1631a4c
sw x3, 0(x2) # store 0x106acb7de1631a4c in memory
flw f2, 0(x2) # load 0x106acb7de1631a4c from memory into f2
fnmadd.s f25, f9, f26, f2, dyn # perform operation
fnmadd.s f25, f9, f26, f2, rdn # perform operation
fnmadd.s f25, f9, f26, f2, rmm # perform operation
fnmadd.s f25, f9, f26, f2, rne # perform operation
fnmadd.s f25, f9, f26, f2, rtz # perform operation
fnmadd.s f25, f9, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x5, 0x239de3d9f6d064cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xfab474bbe8e75eb0 # load x3 with value 0xfab474bbe8e75eb0
sw x3, 0(x2) # store 0xfab474bbe8e75eb0 in memory
flw f10, 0(x2) # load 0xfab474bbe8e75eb0 from memory into f10
fnmadd.s f5, f25, f12, f10, dyn # perform operation
fnmadd.s f5, f25, f12, f10, rdn # perform operation
fnmadd.s f5, f25, f12, f10, rmm # perform operation
fnmadd.s f5, f25, f12, f10, rne # perform operation
fnmadd.s f5, f25, f12, f10, rtz # perform operation
fnmadd.s f5, f25, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x25, 0x34bcde785db282a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xec04ae35b05dbcd4 # load x3 with value 0xec04ae35b05dbcd4
sw x3, 0(x2) # store 0xec04ae35b05dbcd4 in memory
flw f21, 0(x2) # load 0xec04ae35b05dbcd4 from memory into f21
fnmadd.s f25, f17, f5, f21, dyn # perform operation
fnmadd.s f25, f17, f5, f21, rdn # perform operation
fnmadd.s f25, f17, f5, f21, rmm # perform operation
fnmadd.s f25, f17, f5, f21, rne # perform operation
fnmadd.s f25, f17, f5, f21, rtz # perform operation
fnmadd.s f25, f17, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x18, 0x3e532fe22dbd4723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x9433000773173cb9 # load x3 with value 0x9433000773173cb9
sw x3, 0(x2) # store 0x9433000773173cb9 in memory
flw f13, 0(x2) # load 0x9433000773173cb9 from memory into f13
fnmadd.s f18, f21, f5, f13, dyn # perform operation
fnmadd.s f18, f21, f5, f13, rdn # perform operation
fnmadd.s f18, f21, f5, f13, rmm # perform operation
fnmadd.s f18, f21, f5, f13, rne # perform operation
fnmadd.s f18, f21, f5, f13, rtz # perform operation
fnmadd.s f18, f21, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x27, 0xc4fbda17e1511f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xf178ca0d408d2cf7 # load x3 with value 0xf178ca0d408d2cf7
sw x3, 0(x2) # store 0xf178ca0d408d2cf7 in memory
flw f28, 0(x2) # load 0xf178ca0d408d2cf7 from memory into f28
fnmadd.s f27, f12, f20, f28, dyn # perform operation
fnmadd.s f27, f12, f20, f28, rdn # perform operation
fnmadd.s f27, f12, f20, f28, rmm # perform operation
fnmadd.s f27, f12, f20, f28, rne # perform operation
fnmadd.s f27, f12, f20, f28, rtz # perform operation
fnmadd.s f27, f12, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x17, 0xf4d2c4952c6652e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x3eecc5f7a93938ee # load x3 with value 0x3eecc5f7a93938ee
sw x3, 0(x2) # store 0x3eecc5f7a93938ee in memory
flw f23, 0(x2) # load 0x3eecc5f7a93938ee from memory into f23
fnmadd.s f17, f8, f18, f23, dyn # perform operation
fnmadd.s f17, f8, f18, f23, rdn # perform operation
fnmadd.s f17, f8, f18, f23, rmm # perform operation
fnmadd.s f17, f8, f18, f23, rne # perform operation
fnmadd.s f17, f8, f18, f23, rtz # perform operation
fnmadd.s f17, f8, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x27, 0x5a5965a057c25eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xd50059029ce08900 # load x3 with value 0xd50059029ce08900
sw x3, 0(x2) # store 0xd50059029ce08900 in memory
flw f22, 0(x2) # load 0xd50059029ce08900 from memory into f22
fnmadd.s f27, f5, f13, f22, dyn # perform operation
fnmadd.s f27, f5, f13, f22, rdn # perform operation
fnmadd.s f27, f5, f13, f22, rmm # perform operation
fnmadd.s f27, f5, f13, f22, rne # perform operation
fnmadd.s f27, f5, f13, f22, rtz # perform operation
fnmadd.s f27, f5, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x9, 0xa2ec05c0ade50794 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xe832bddbeaaab6ba # load x3 with value 0xe832bddbeaaab6ba
sw x3, 0(x2) # store 0xe832bddbeaaab6ba in memory
flw f19, 0(x2) # load 0xe832bddbeaaab6ba from memory into f19
fnmadd.s f9, f2, f7, f19, dyn # perform operation
fnmadd.s f9, f2, f7, f19, rdn # perform operation
fnmadd.s f9, f2, f7, f19, rmm # perform operation
fnmadd.s f9, f2, f7, f19, rne # perform operation
fnmadd.s f9, f2, f7, f19, rtz # perform operation
fnmadd.s f9, f2, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x29, 0xc9f6d5c84003394d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xedaef07c20920fc9 # load x3 with value 0xedaef07c20920fc9
sw x3, 0(x2) # store 0xedaef07c20920fc9 in memory
flw f26, 0(x2) # load 0xedaef07c20920fc9 from memory into f26
fnmadd.s f29, f13, f7, f26, dyn # perform operation
fnmadd.s f29, f13, f7, f26, rdn # perform operation
fnmadd.s f29, f13, f7, f26, rmm # perform operation
fnmadd.s f29, f13, f7, f26, rne # perform operation
fnmadd.s f29, f13, f7, f26, rtz # perform operation
fnmadd.s f29, f13, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x16, 0xe052bb84a552c3f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x79e7cce26976147f # load x3 with value 0x79e7cce26976147f
sw x3, 0(x2) # store 0x79e7cce26976147f in memory
flw f12, 0(x2) # load 0x79e7cce26976147f from memory into f12
fnmadd.s f16, f10, f3, f12, dyn # perform operation
fnmadd.s f16, f10, f3, f12, rdn # perform operation
fnmadd.s f16, f10, f3, f12, rmm # perform operation
fnmadd.s f16, f10, f3, f12, rne # perform operation
fnmadd.s f16, f10, f3, f12, rtz # perform operation
fnmadd.s f16, f10, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f10, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x15, 0x56cf0fc85180ed53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x830f6b068a99357 # load x3 with value 0x830f6b068a99357
sw x3, 0(x2) # store 0x830f6b068a99357 in memory
flw f23, 0(x2) # load 0x830f6b068a99357 from memory into f23
fnmadd.s f15, f21, f1, f23, dyn # perform operation
fnmadd.s f15, f21, f1, f23, rdn # perform operation
fnmadd.s f15, f21, f1, f23, rmm # perform operation
fnmadd.s f15, f21, f1, f23, rne # perform operation
fnmadd.s f15, f21, f1, f23, rtz # perform operation
fnmadd.s f15, f21, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x14, 0x0396e685d86b209a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xbac78f71cdaee0d1 # load x3 with value 0xbac78f71cdaee0d1
sw x3, 0(x2) # store 0xbac78f71cdaee0d1 in memory
flw f24, 0(x2) # load 0xbac78f71cdaee0d1 from memory into f24
fnmadd.s f14, f22, f1, f24, dyn # perform operation
fnmadd.s f14, f22, f1, f24, rdn # perform operation
fnmadd.s f14, f22, f1, f24, rmm # perform operation
fnmadd.s f14, f22, f1, f24, rne # perform operation
fnmadd.s f14, f22, f1, f24, rtz # perform operation
fnmadd.s f14, f22, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x30, 0xd8d49f99b56c7ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x5b9ec3050d744ae9 # load x3 with value 0x5b9ec3050d744ae9
sw x3, 0(x2) # store 0x5b9ec3050d744ae9 in memory
flw f9, 0(x2) # load 0x5b9ec3050d744ae9 from memory into f9
fnmadd.s f30, f14, f16, f9, dyn # perform operation
fnmadd.s f30, f14, f16, f9, rdn # perform operation
fnmadd.s f30, f14, f16, f9, rmm # perform operation
fnmadd.s f30, f14, f16, f9, rne # perform operation
fnmadd.s f30, f14, f16, f9, rtz # perform operation
fnmadd.s f30, f14, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f14, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x18, 0x9678f145afc04419 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0xaed302c138bf6f24 # load x3 with value 0xaed302c138bf6f24
sw x3, 0(x2) # store 0xaed302c138bf6f24 in memory
flw f25, 0(x2) # load 0xaed302c138bf6f24 from memory into f25
fnmadd.s f18, f28, f17, f25, dyn # perform operation
fnmadd.s f18, f28, f17, f25, rdn # perform operation
fnmadd.s f18, f28, f17, f25, rmm # perform operation
fnmadd.s f18, f28, f17, f25, rne # perform operation
fnmadd.s f18, f28, f17, f25, rtz # perform operation
fnmadd.s f18, f28, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x11, 0x30ba0acd4c43885d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x2edd7148ada49a8c # load x3 with value 0x2edd7148ada49a8c
sw x3, 0(x2) # store 0x2edd7148ada49a8c in memory
flw f27, 0(x2) # load 0x2edd7148ada49a8c from memory into f27
fnmadd.s f11, f4, f21, f27, dyn # perform operation
fnmadd.s f11, f4, f21, f27, rdn # perform operation
fnmadd.s f11, f4, f21, f27, rmm # perform operation
fnmadd.s f11, f4, f21, f27, rne # perform operation
fnmadd.s f11, f4, f21, f27, rtz # perform operation
fnmadd.s f11, f4, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f4, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f4, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x2, 0x30b8ba265b702752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x82a4124404700cd4 # load x3 with value 0x82a4124404700cd4
sw x3, 0(x2) # store 0x82a4124404700cd4 in memory
flw f5, 0(x2) # load 0x82a4124404700cd4 from memory into f5
fnmadd.s f2, f20, f27, f5, dyn # perform operation
fnmadd.s f2, f20, f27, f5, rdn # perform operation
fnmadd.s f2, f20, f27, f5, rmm # perform operation
fnmadd.s f2, f20, f27, f5, rne # perform operation
fnmadd.s f2, f20, f27, f5, rtz # perform operation
fnmadd.s f2, f20, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x22, 0x723f7189c474f13c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x94115eb1e996c813 # load x3 with value 0x94115eb1e996c813
sw x3, 0(x2) # store 0x94115eb1e996c813 in memory
flw f9, 0(x2) # load 0x94115eb1e996c813 from memory into f9
fnmadd.s f22, f30, f15, f9, dyn # perform operation
fnmadd.s f22, f30, f15, f9, rdn # perform operation
fnmadd.s f22, f30, f15, f9, rmm # perform operation
fnmadd.s f22, f30, f15, f9, rne # perform operation
fnmadd.s f22, f30, f15, f9, rtz # perform operation
fnmadd.s f22, f30, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f30, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x15, 0xe8a0dfa3e806fbd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x39c10655d8da9f17 # load x3 with value 0x39c10655d8da9f17
sw x3, 0(x2) # store 0x39c10655d8da9f17 in memory
flw f30, 0(x2) # load 0x39c10655d8da9f17 from memory into f30
fnmadd.s f15, f19, f12, f30, dyn # perform operation
fnmadd.s f15, f19, f12, f30, rdn # perform operation
fnmadd.s f15, f19, f12, f30, rmm # perform operation
fnmadd.s f15, f19, f12, f30, rne # perform operation
fnmadd.s f15, f19, f12, f30, rtz # perform operation
fnmadd.s f15, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f19, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x16, 0xd59722bb146acc31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0xb40af0bf7af5dd7e # load x3 with value 0xb40af0bf7af5dd7e
sw x3, 0(x2) # store 0xb40af0bf7af5dd7e in memory
flw f17, 0(x2) # load 0xb40af0bf7af5dd7e from memory into f17
fnmadd.s f16, f30, f27, f17, dyn # perform operation
fnmadd.s f16, f30, f27, f17, rdn # perform operation
fnmadd.s f16, f30, f27, f17, rmm # perform operation
fnmadd.s f16, f30, f27, f17, rne # perform operation
fnmadd.s f16, f30, f27, f17, rtz # perform operation
fnmadd.s f16, f30, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x25, 0xb60a5cff65bc2a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x802b19ca271bd4d2 # load x3 with value 0x802b19ca271bd4d2
sw x3, 0(x2) # store 0x802b19ca271bd4d2 in memory
flw f11, 0(x2) # load 0x802b19ca271bd4d2 from memory into f11
fnmadd.s f25, f19, f18, f11, dyn # perform operation
fnmadd.s f25, f19, f18, f11, rdn # perform operation
fnmadd.s f25, f19, f18, f11, rmm # perform operation
fnmadd.s f25, f19, f18, f11, rne # perform operation
fnmadd.s f25, f19, f18, f11, rtz # perform operation
fnmadd.s f25, f19, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f19, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x30, 0x8343584c205bbdb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x4d56dd9aff58de4f # load x3 with value 0x4d56dd9aff58de4f
sw x3, 0(x2) # store 0x4d56dd9aff58de4f in memory
flw f23, 0(x2) # load 0x4d56dd9aff58de4f from memory into f23
fnmadd.s f30, f22, f25, f23, dyn # perform operation
fnmadd.s f30, f22, f25, f23, rdn # perform operation
fnmadd.s f30, f22, f25, f23, rmm # perform operation
fnmadd.s f30, f22, f25, f23, rne # perform operation
fnmadd.s f30, f22, f25, f23, rtz # perform operation
fnmadd.s f30, f22, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x22, 0x9a7cd2b416fd2023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x9bb817a9ae66b47e # load x3 with value 0x9bb817a9ae66b47e
sw x3, 0(x2) # store 0x9bb817a9ae66b47e in memory
flw f25, 0(x2) # load 0x9bb817a9ae66b47e from memory into f25
fnmadd.s f22, f8, f19, f25, dyn # perform operation
fnmadd.s f22, f8, f19, f25, rdn # perform operation
fnmadd.s f22, f8, f19, f25, rmm # perform operation
fnmadd.s f22, f8, f19, f25, rne # perform operation
fnmadd.s f22, f8, f19, f25, rtz # perform operation
fnmadd.s f22, f8, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x4, 0x28e0c55e641f233d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xe5c54211688076ba # load x3 with value 0xe5c54211688076ba
sw x3, 0(x2) # store 0xe5c54211688076ba in memory
flw f27, 0(x2) # load 0xe5c54211688076ba from memory into f27
fnmadd.s f4, f23, f3, f27, dyn # perform operation
fnmadd.s f4, f23, f3, f27, rdn # perform operation
fnmadd.s f4, f23, f3, f27, rmm # perform operation
fnmadd.s f4, f23, f3, f27, rne # perform operation
fnmadd.s f4, f23, f3, f27, rtz # perform operation
fnmadd.s f4, f23, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x17, 0x1c04b2295e046ea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0xc1ca9783f125faa9 # load x3 with value 0xc1ca9783f125faa9
sw x3, 0(x2) # store 0xc1ca9783f125faa9 in memory
flw f24, 0(x2) # load 0xc1ca9783f125faa9 from memory into f24
fnmadd.s f17, f26, f12, f24, dyn # perform operation
fnmadd.s f17, f26, f12, f24, rdn # perform operation
fnmadd.s f17, f26, f12, f24, rmm # perform operation
fnmadd.s f17, f26, f12, f24, rne # perform operation
fnmadd.s f17, f26, f12, f24, rtz # perform operation
fnmadd.s f17, f26, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x14, 0x7da61482fa43223b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xf23d305874936948 # load x3 with value 0xf23d305874936948
sw x3, 0(x2) # store 0xf23d305874936948 in memory
flw f11, 0(x2) # load 0xf23d305874936948 from memory into f11
fnmadd.s f14, f24, f8, f11, dyn # perform operation
fnmadd.s f14, f24, f8, f11, rdn # perform operation
fnmadd.s f14, f24, f8, f11, rmm # perform operation
fnmadd.s f14, f24, f8, f11, rne # perform operation
fnmadd.s f14, f24, f8, f11, rtz # perform operation
fnmadd.s f14, f24, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x3, 0x12d0476ae424be14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x7e595b5a5d2a6d9b # load x3 with value 0x7e595b5a5d2a6d9b
sw x3, 0(x2) # store 0x7e595b5a5d2a6d9b in memory
flw f2, 0(x2) # load 0x7e595b5a5d2a6d9b from memory into f2
fnmadd.s f3, f9, f13, f2, dyn # perform operation
fnmadd.s f3, f9, f13, f2, rdn # perform operation
fnmadd.s f3, f9, f13, f2, rmm # perform operation
fnmadd.s f3, f9, f13, f2, rne # perform operation
fnmadd.s f3, f9, f13, f2, rtz # perform operation
fnmadd.s f3, f9, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x9, 0x657b83b493e81a7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x647cd3acf2c5cefa # load x3 with value 0x647cd3acf2c5cefa
sw x3, 0(x2) # store 0x647cd3acf2c5cefa in memory
flw f27, 0(x2) # load 0x647cd3acf2c5cefa from memory into f27
fnmadd.s f9, f13, f8, f27, dyn # perform operation
fnmadd.s f9, f13, f8, f27, rdn # perform operation
fnmadd.s f9, f13, f8, f27, rmm # perform operation
fnmadd.s f9, f13, f8, f27, rne # perform operation
fnmadd.s f9, f13, f8, f27, rtz # perform operation
fnmadd.s f9, f13, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f13, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x10, 0xd0f7302f26577d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xb90d1aa8da3d7140 # load x3 with value 0xb90d1aa8da3d7140
sw x3, 0(x2) # store 0xb90d1aa8da3d7140 in memory
flw f18, 0(x2) # load 0xb90d1aa8da3d7140 from memory into f18
fnmadd.s f10, f30, f4, f18, dyn # perform operation
fnmadd.s f10, f30, f4, f18, rdn # perform operation
fnmadd.s f10, f30, f4, f18, rmm # perform operation
fnmadd.s f10, f30, f4, f18, rne # perform operation
fnmadd.s f10, f30, f4, f18, rtz # perform operation
fnmadd.s f10, f30, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x18, 0xa44bfc6937e2e92e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x2bb4997c17f7e613 # load x3 with value 0x2bb4997c17f7e613
sw x3, 0(x2) # store 0x2bb4997c17f7e613 in memory
flw f3, 0(x2) # load 0x2bb4997c17f7e613 from memory into f3
fnmadd.s f18, f14, f9, f3, dyn # perform operation
fnmadd.s f18, f14, f9, f3, rdn # perform operation
fnmadd.s f18, f14, f9, f3, rmm # perform operation
fnmadd.s f18, f14, f9, f3, rne # perform operation
fnmadd.s f18, f14, f9, f3, rtz # perform operation
fnmadd.s f18, f14, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x20, 0x3183118d215fa1ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0xe73df8e574841e0 # load x3 with value 0xe73df8e574841e0
sw x3, 0(x2) # store 0xe73df8e574841e0 in memory
flw f24, 0(x2) # load 0xe73df8e574841e0 from memory into f24
fnmadd.s f20, f10, f29, f24, dyn # perform operation
fnmadd.s f20, f10, f29, f24, rdn # perform operation
fnmadd.s f20, f10, f29, f24, rmm # perform operation
fnmadd.s f20, f10, f29, f24, rne # perform operation
fnmadd.s f20, f10, f29, f24, rtz # perform operation
fnmadd.s f20, f10, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f10, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f10, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x2, 0x858bafa6d6f39e8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x3b973329f7dadd9d # load x3 with value 0x3b973329f7dadd9d
sw x3, 0(x2) # store 0x3b973329f7dadd9d in memory
flw f24, 0(x2) # load 0x3b973329f7dadd9d from memory into f24
fnmadd.s f2, f30, f28, f24, dyn # perform operation
fnmadd.s f2, f30, f28, f24, rdn # perform operation
fnmadd.s f2, f30, f28, f24, rmm # perform operation
fnmadd.s f2, f30, f28, f24, rne # perform operation
fnmadd.s f2, f30, f28, f24, rtz # perform operation
fnmadd.s f2, f30, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x31, 0xc1d41d57c00c7cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x80f9fcd0eb836884 # load x3 with value 0x80f9fcd0eb836884
sw x3, 0(x2) # store 0x80f9fcd0eb836884 in memory
flw f28, 0(x2) # load 0x80f9fcd0eb836884 from memory into f28
fnmadd.s f31, f1, f27, f28, dyn # perform operation
fnmadd.s f31, f1, f27, f28, rdn # perform operation
fnmadd.s f31, f1, f27, f28, rmm # perform operation
fnmadd.s f31, f1, f27, f28, rne # perform operation
fnmadd.s f31, f1, f27, f28, rtz # perform operation
fnmadd.s f31, f1, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x28, 0x10ed2995ba560db1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x1e7c6ddcd5a0964c # load x3 with value 0x1e7c6ddcd5a0964c
sw x3, 0(x2) # store 0x1e7c6ddcd5a0964c in memory
flw f31, 0(x2) # load 0x1e7c6ddcd5a0964c from memory into f31
fnmadd.s f28, f8, f3, f31, dyn # perform operation
fnmadd.s f28, f8, f3, f31, rdn # perform operation
fnmadd.s f28, f8, f3, f31, rmm # perform operation
fnmadd.s f28, f8, f3, f31, rne # perform operation
fnmadd.s f28, f8, f3, f31, rtz # perform operation
fnmadd.s f28, f8, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x4, 0xddb190ac1506c400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x453da2d3b8af3b1e # load x3 with value 0x453da2d3b8af3b1e
sw x3, 0(x2) # store 0x453da2d3b8af3b1e in memory
flw f25, 0(x2) # load 0x453da2d3b8af3b1e from memory into f25
fnmadd.s f4, f13, f11, f25, dyn # perform operation
fnmadd.s f4, f13, f11, f25, rdn # perform operation
fnmadd.s f4, f13, f11, f25, rmm # perform operation
fnmadd.s f4, f13, f11, f25, rne # perform operation
fnmadd.s f4, f13, f11, f25, rtz # perform operation
fnmadd.s f4, f13, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x11, 0x86c04d5c94347c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x668bddbd75e20ef1 # load x3 with value 0x668bddbd75e20ef1
sw x3, 0(x2) # store 0x668bddbd75e20ef1 in memory
flw f10, 0(x2) # load 0x668bddbd75e20ef1 from memory into f10
fnmadd.s f11, f18, f12, f10, dyn # perform operation
fnmadd.s f11, f18, f12, f10, rdn # perform operation
fnmadd.s f11, f18, f12, f10, rmm # perform operation
fnmadd.s f11, f18, f12, f10, rne # perform operation
fnmadd.s f11, f18, f12, f10, rtz # perform operation
fnmadd.s f11, f18, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x29, 0x4ca0e9405e75a337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xa498d4c613b4e272 # load x3 with value 0xa498d4c613b4e272
sw x3, 0(x2) # store 0xa498d4c613b4e272 in memory
flw f14, 0(x2) # load 0xa498d4c613b4e272 from memory into f14
fnmadd.s f29, f11, f1, f14, dyn # perform operation
fnmadd.s f29, f11, f1, f14, rdn # perform operation
fnmadd.s f29, f11, f1, f14, rmm # perform operation
fnmadd.s f29, f11, f1, f14, rne # perform operation
fnmadd.s f29, f11, f1, f14, rtz # perform operation
fnmadd.s f29, f11, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x14, 0x0af909449b4ca74a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xa26fd86a9919d468 # load x3 with value 0xa26fd86a9919d468
sw x3, 0(x2) # store 0xa26fd86a9919d468 in memory
flw f15, 0(x2) # load 0xa26fd86a9919d468 from memory into f15
fnmadd.s f14, f30, f13, f15, dyn # perform operation
fnmadd.s f14, f30, f13, f15, rdn # perform operation
fnmadd.s f14, f30, f13, f15, rmm # perform operation
fnmadd.s f14, f30, f13, f15, rne # perform operation
fnmadd.s f14, f30, f13, f15, rtz # perform operation
fnmadd.s f14, f30, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x19, 0x6f0e52906d2b20a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0xa96232ccdf104f36 # load x3 with value 0xa96232ccdf104f36
sw x3, 0(x2) # store 0xa96232ccdf104f36 in memory
flw f12, 0(x2) # load 0xa96232ccdf104f36 from memory into f12
fnmadd.s f19, f20, f24, f12, dyn # perform operation
fnmadd.s f19, f20, f24, f12, rdn # perform operation
fnmadd.s f19, f20, f24, f12, rmm # perform operation
fnmadd.s f19, f20, f24, f12, rne # perform operation
fnmadd.s f19, f20, f24, f12, rtz # perform operation
fnmadd.s f19, f20, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x8, 0x817f7d1286d75516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xcd092951052d8997 # load x3 with value 0xcd092951052d8997
sw x3, 0(x2) # store 0xcd092951052d8997 in memory
flw f30, 0(x2) # load 0xcd092951052d8997 from memory into f30
fnmadd.s f8, f19, f12, f30, dyn # perform operation
fnmadd.s f8, f19, f12, f30, rdn # perform operation
fnmadd.s f8, f19, f12, f30, rmm # perform operation
fnmadd.s f8, f19, f12, f30, rne # perform operation
fnmadd.s f8, f19, f12, f30, rtz # perform operation
fnmadd.s f8, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x24, 0x68282e356bc3c0c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x7b744920744391c4 # load x3 with value 0x7b744920744391c4
sw x3, 0(x2) # store 0x7b744920744391c4 in memory
flw f22, 0(x2) # load 0x7b744920744391c4 from memory into f22
fnmadd.s f24, f26, f15, f22, dyn # perform operation
fnmadd.s f24, f26, f15, f22, rdn # perform operation
fnmadd.s f24, f26, f15, f22, rmm # perform operation
fnmadd.s f24, f26, f15, f22, rne # perform operation
fnmadd.s f24, f26, f15, f22, rtz # perform operation
fnmadd.s f24, f26, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x22, 0xb8be7389b66d72d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xc9e1d553f4b603b3 # load x3 with value 0xc9e1d553f4b603b3
sw x3, 0(x2) # store 0xc9e1d553f4b603b3 in memory
flw f26, 0(x2) # load 0xc9e1d553f4b603b3 from memory into f26
fnmadd.s f22, f8, f7, f26, dyn # perform operation
fnmadd.s f22, f8, f7, f26, rdn # perform operation
fnmadd.s f22, f8, f7, f26, rmm # perform operation
fnmadd.s f22, f8, f7, f26, rne # perform operation
fnmadd.s f22, f8, f7, f26, rtz # perform operation
fnmadd.s f22, f8, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x21, 0x3e1dde089c0c8bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x4bb30a332b1e731b # load x3 with value 0x4bb30a332b1e731b
sw x3, 0(x2) # store 0x4bb30a332b1e731b in memory
flw f11, 0(x2) # load 0x4bb30a332b1e731b from memory into f11
fnmadd.s f21, f3, f19, f11, dyn # perform operation
fnmadd.s f21, f3, f19, f11, rdn # perform operation
fnmadd.s f21, f3, f19, f11, rmm # perform operation
fnmadd.s f21, f3, f19, f11, rne # perform operation
fnmadd.s f21, f3, f19, f11, rtz # perform operation
fnmadd.s f21, f3, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x4, 0x30b2279d79b77c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xc5e4f42b5c29bd8b # load x3 with value 0xc5e4f42b5c29bd8b
sw x3, 0(x2) # store 0xc5e4f42b5c29bd8b in memory
flw f5, 0(x2) # load 0xc5e4f42b5c29bd8b from memory into f5
fnmadd.s f4, f7, f14, f5, dyn # perform operation
fnmadd.s f4, f7, f14, f5, rdn # perform operation
fnmadd.s f4, f7, f14, f5, rmm # perform operation
fnmadd.s f4, f7, f14, f5, rne # perform operation
fnmadd.s f4, f7, f14, f5, rtz # perform operation
fnmadd.s f4, f7, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f7, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f7, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x26, 0x960706c403e3778c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x83f9bc361b34e8f3 # load x3 with value 0x83f9bc361b34e8f3
sw x3, 0(x2) # store 0x83f9bc361b34e8f3 in memory
flw f14, 0(x2) # load 0x83f9bc361b34e8f3 from memory into f14
fnmadd.s f26, f11, f13, f14, dyn # perform operation
fnmadd.s f26, f11, f13, f14, rdn # perform operation
fnmadd.s f26, f11, f13, f14, rmm # perform operation
fnmadd.s f26, f11, f13, f14, rne # perform operation
fnmadd.s f26, f11, f13, f14, rtz # perform operation
fnmadd.s f26, f11, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f11, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f11, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x23, 0xcf516f603cead394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xd6214e9c92af9900 # load x3 with value 0xd6214e9c92af9900
sw x3, 0(x2) # store 0xd6214e9c92af9900 in memory
flw f22, 0(x2) # load 0xd6214e9c92af9900 from memory into f22
fnmadd.s f23, f19, f28, f22, dyn # perform operation
fnmadd.s f23, f19, f28, f22, rdn # perform operation
fnmadd.s f23, f19, f28, f22, rmm # perform operation
fnmadd.s f23, f19, f28, f22, rne # perform operation
fnmadd.s f23, f19, f28, f22, rtz # perform operation
fnmadd.s f23, f19, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x1, 0x1d5c4faca28efd89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xa2af31115c33d8d2 # load x3 with value 0xa2af31115c33d8d2
sw x3, 0(x2) # store 0xa2af31115c33d8d2 in memory
flw f9, 0(x2) # load 0xa2af31115c33d8d2 from memory into f9
fnmadd.s f1, f14, f30, f9, dyn # perform operation
fnmadd.s f1, f14, f30, f9, rdn # perform operation
fnmadd.s f1, f14, f30, f9, rmm # perform operation
fnmadd.s f1, f14, f30, f9, rne # perform operation
fnmadd.s f1, f14, f30, f9, rtz # perform operation
fnmadd.s f1, f14, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x16, 0x1e314875a46e6865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x59f7c99f90374524 # load x3 with value 0x59f7c99f90374524
sw x3, 0(x2) # store 0x59f7c99f90374524 in memory
flw f1, 0(x2) # load 0x59f7c99f90374524 from memory into f1
fnmadd.s f16, f19, f14, f1, dyn # perform operation
fnmadd.s f16, f19, f14, f1, rdn # perform operation
fnmadd.s f16, f19, f14, f1, rmm # perform operation
fnmadd.s f16, f19, f14, f1, rne # perform operation
fnmadd.s f16, f19, f14, f1, rtz # perform operation
fnmadd.s f16, f19, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x20, 0x1d1563f05f41bf53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x9be9abda61cb345d # load x3 with value 0x9be9abda61cb345d
sw x3, 0(x2) # store 0x9be9abda61cb345d in memory
flw f18, 0(x2) # load 0x9be9abda61cb345d from memory into f18
fnmadd.s f20, f24, f17, f18, dyn # perform operation
fnmadd.s f20, f24, f17, f18, rdn # perform operation
fnmadd.s f20, f24, f17, f18, rmm # perform operation
fnmadd.s f20, f24, f17, f18, rne # perform operation
fnmadd.s f20, f24, f17, f18, rtz # perform operation
fnmadd.s f20, f24, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f24, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f24, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f24, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f24, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f24, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x13, 0x8305ad7be5f41cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x683f662f7a77c293 # load x3 with value 0x683f662f7a77c293
sw x3, 0(x2) # store 0x683f662f7a77c293 in memory
flw f4, 0(x2) # load 0x683f662f7a77c293 from memory into f4
fnmadd.s f13, f24, f20, f4, dyn # perform operation
fnmadd.s f13, f24, f20, f4, rdn # perform operation
fnmadd.s f13, f24, f20, f4, rmm # perform operation
fnmadd.s f13, f24, f20, f4, rne # perform operation
fnmadd.s f13, f24, f20, f4, rtz # perform operation
fnmadd.s f13, f24, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x18, 0xbc3ca0b173270d66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xa2a9268705b1247b # load x3 with value 0xa2a9268705b1247b
sw x3, 0(x2) # store 0xa2a9268705b1247b in memory
flw f28, 0(x2) # load 0xa2a9268705b1247b from memory into f28
fnmadd.s f18, f16, f5, f28, dyn # perform operation
fnmadd.s f18, f16, f5, f28, rdn # perform operation
fnmadd.s f18, f16, f5, f28, rmm # perform operation
fnmadd.s f18, f16, f5, f28, rne # perform operation
fnmadd.s f18, f16, f5, f28, rtz # perform operation
fnmadd.s f18, f16, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x22, 0x48eb3c17835188de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xd0f1288f08725a9c # load x3 with value 0xd0f1288f08725a9c
sw x3, 0(x2) # store 0xd0f1288f08725a9c in memory
flw f24, 0(x2) # load 0xd0f1288f08725a9c from memory into f24
fnmadd.s f22, f6, f15, f24, dyn # perform operation
fnmadd.s f22, f6, f15, f24, rdn # perform operation
fnmadd.s f22, f6, f15, f24, rmm # perform operation
fnmadd.s f22, f6, f15, f24, rne # perform operation
fnmadd.s f22, f6, f15, f24, rtz # perform operation
fnmadd.s f22, f6, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x18, 0xb7a9d97c325d4518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x763d17843f706f71 # load x3 with value 0x763d17843f706f71
sw x3, 0(x2) # store 0x763d17843f706f71 in memory
flw f15, 0(x2) # load 0x763d17843f706f71 from memory into f15
fnmadd.s f18, f4, f7, f15, dyn # perform operation
fnmadd.s f18, f4, f7, f15, rdn # perform operation
fnmadd.s f18, f4, f7, f15, rmm # perform operation
fnmadd.s f18, f4, f7, f15, rne # perform operation
fnmadd.s f18, f4, f7, f15, rtz # perform operation
fnmadd.s f18, f4, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f4, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f4, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x23, 0x4dcfb2814a731abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xefbf0469aa25aac8 # load x3 with value 0xefbf0469aa25aac8
sw x3, 0(x2) # store 0xefbf0469aa25aac8 in memory
flw f11, 0(x2) # load 0xefbf0469aa25aac8 from memory into f11
fnmadd.s f23, f13, f14, f11, dyn # perform operation
fnmadd.s f23, f13, f14, f11, rdn # perform operation
fnmadd.s f23, f13, f14, f11, rmm # perform operation
fnmadd.s f23, f13, f14, f11, rne # perform operation
fnmadd.s f23, f13, f14, f11, rtz # perform operation
fnmadd.s f23, f13, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x27, 0x52f70e8ce12e9f37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x7fcc34cd5079ee51 # load x3 with value 0x7fcc34cd5079ee51
sw x3, 0(x2) # store 0x7fcc34cd5079ee51 in memory
flw f31, 0(x2) # load 0x7fcc34cd5079ee51 from memory into f31
fnmadd.s f27, f9, f7, f31, dyn # perform operation
fnmadd.s f27, f9, f7, f31, rdn # perform operation
fnmadd.s f27, f9, f7, f31, rmm # perform operation
fnmadd.s f27, f9, f7, f31, rne # perform operation
fnmadd.s f27, f9, f7, f31, rtz # perform operation
fnmadd.s f27, f9, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f9, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x5, 0x8b2fece4a1888c72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x5bcf6173ef019bdf # load x3 with value 0x5bcf6173ef019bdf
sw x3, 0(x2) # store 0x5bcf6173ef019bdf in memory
flw f20, 0(x2) # load 0x5bcf6173ef019bdf from memory into f20
fnmadd.s f5, f7, f22, f20, dyn # perform operation
fnmadd.s f5, f7, f22, f20, rdn # perform operation
fnmadd.s f5, f7, f22, f20, rmm # perform operation
fnmadd.s f5, f7, f22, f20, rne # perform operation
fnmadd.s f5, f7, f22, f20, rtz # perform operation
fnmadd.s f5, f7, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x12, 0x1fa8fe40fcbaa95a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x62f13e5cba4d2857 # load x3 with value 0x62f13e5cba4d2857
sw x3, 0(x2) # store 0x62f13e5cba4d2857 in memory
flw f26, 0(x2) # load 0x62f13e5cba4d2857 from memory into f26
fnmadd.s f12, f4, f10, f26, dyn # perform operation
fnmadd.s f12, f4, f10, f26, rdn # perform operation
fnmadd.s f12, f4, f10, f26, rmm # perform operation
fnmadd.s f12, f4, f10, f26, rne # perform operation
fnmadd.s f12, f4, f10, f26, rtz # perform operation
fnmadd.s f12, f4, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f4, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f4, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x14, 0xe6d0d3e98625272e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x7f44ecf073efd6e9 # load x3 with value 0x7f44ecf073efd6e9
sw x3, 0(x2) # store 0x7f44ecf073efd6e9 in memory
flw f8, 0(x2) # load 0x7f44ecf073efd6e9 from memory into f8
fnmadd.s f14, f22, f3, f8, dyn # perform operation
fnmadd.s f14, f22, f3, f8, rdn # perform operation
fnmadd.s f14, f22, f3, f8, rmm # perform operation
fnmadd.s f14, f22, f3, f8, rne # perform operation
fnmadd.s f14, f22, f3, f8, rtz # perform operation
fnmadd.s f14, f22, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x23, 0xa828c7cb1ff3dba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x2e0652f918902fcb # load x3 with value 0x2e0652f918902fcb
sw x3, 0(x2) # store 0x2e0652f918902fcb in memory
flw f26, 0(x2) # load 0x2e0652f918902fcb from memory into f26
fnmadd.s f23, f7, f5, f26, dyn # perform operation
fnmadd.s f23, f7, f5, f26, rdn # perform operation
fnmadd.s f23, f7, f5, f26, rmm # perform operation
fnmadd.s f23, f7, f5, f26, rne # perform operation
fnmadd.s f23, f7, f5, f26, rtz # perform operation
fnmadd.s f23, f7, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x11, 0x5e49086f18384738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xd176a80d648f0b93 # load x3 with value 0xd176a80d648f0b93
sw x3, 0(x2) # store 0xd176a80d648f0b93 in memory
flw f6, 0(x2) # load 0xd176a80d648f0b93 from memory into f6
fnmadd.s f11, f5, f12, f6, dyn # perform operation
fnmadd.s f11, f5, f12, f6, rdn # perform operation
fnmadd.s f11, f5, f12, f6, rmm # perform operation
fnmadd.s f11, f5, f12, f6, rne # perform operation
fnmadd.s f11, f5, f12, f6, rtz # perform operation
fnmadd.s f11, f5, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x31, 0x677058b445ebb52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x6b6f2f3df4f98e4c # load x3 with value 0x6b6f2f3df4f98e4c
sw x3, 0(x2) # store 0x6b6f2f3df4f98e4c in memory
flw f15, 0(x2) # load 0x6b6f2f3df4f98e4c from memory into f15
fnmadd.s f31, f7, f24, f15, dyn # perform operation
fnmadd.s f31, f7, f24, f15, rdn # perform operation
fnmadd.s f31, f7, f24, f15, rmm # perform operation
fnmadd.s f31, f7, f24, f15, rne # perform operation
fnmadd.s f31, f7, f24, f15, rtz # perform operation
fnmadd.s f31, f7, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x29, 0xdb9de55b7b6d22a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x3e70c3e773d5e9a2 # load x3 with value 0x3e70c3e773d5e9a2
sw x3, 0(x2) # store 0x3e70c3e773d5e9a2 in memory
flw f4, 0(x2) # load 0x3e70c3e773d5e9a2 from memory into f4
fnmadd.s f29, f25, f20, f4, dyn # perform operation
fnmadd.s f29, f25, f20, f4, rdn # perform operation
fnmadd.s f29, f25, f20, f4, rmm # perform operation
fnmadd.s f29, f25, f20, f4, rne # perform operation
fnmadd.s f29, f25, f20, f4, rtz # perform operation
fnmadd.s f29, f25, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x29, 0x84c0e8be624d8af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xb3c161230391eefd # load x3 with value 0xb3c161230391eefd
sw x3, 0(x2) # store 0xb3c161230391eefd in memory
flw f31, 0(x2) # load 0xb3c161230391eefd from memory into f31
fnmadd.s f29, f15, f8, f31, dyn # perform operation
fnmadd.s f29, f15, f8, f31, rdn # perform operation
fnmadd.s f29, f15, f8, f31, rmm # perform operation
fnmadd.s f29, f15, f8, f31, rne # perform operation
fnmadd.s f29, f15, f8, f31, rtz # perform operation
fnmadd.s f29, f15, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x29, 0x3a3ef824b730b478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x9231cf4fb0b2eefa # load x3 with value 0x9231cf4fb0b2eefa
sw x3, 0(x2) # store 0x9231cf4fb0b2eefa in memory
flw f28, 0(x2) # load 0x9231cf4fb0b2eefa from memory into f28
fnmadd.s f29, f9, f1, f28, dyn # perform operation
fnmadd.s f29, f9, f1, f28, rdn # perform operation
fnmadd.s f29, f9, f1, f28, rmm # perform operation
fnmadd.s f29, f9, f1, f28, rne # perform operation
fnmadd.s f29, f9, f1, f28, rtz # perform operation
fnmadd.s f29, f9, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x23, 0xe26e002ac43055d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x5fa47a6fbedbe6eb # load x3 with value 0x5fa47a6fbedbe6eb
sw x3, 0(x2) # store 0x5fa47a6fbedbe6eb in memory
flw f2, 0(x2) # load 0x5fa47a6fbedbe6eb from memory into f2
fnmadd.s f23, f16, f31, f2, dyn # perform operation
fnmadd.s f23, f16, f31, f2, rdn # perform operation
fnmadd.s f23, f16, f31, f2, rmm # perform operation
fnmadd.s f23, f16, f31, f2, rne # perform operation
fnmadd.s f23, f16, f31, f2, rtz # perform operation
fnmadd.s f23, f16, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x19, 0xad37f3fbe5d2212f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xd7aa03225bd4a269 # load x3 with value 0xd7aa03225bd4a269
sw x3, 0(x2) # store 0xd7aa03225bd4a269 in memory
flw f16, 0(x2) # load 0xd7aa03225bd4a269 from memory into f16
fnmadd.s f19, f20, f11, f16, dyn # perform operation
fnmadd.s f19, f20, f11, f16, rdn # perform operation
fnmadd.s f19, f20, f11, f16, rmm # perform operation
fnmadd.s f19, f20, f11, f16, rne # perform operation
fnmadd.s f19, f20, f11, f16, rtz # perform operation
fnmadd.s f19, f20, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x25, 0x1e2e189a2fd2aa2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x9fa27b162b33cd8e # load x3 with value 0x9fa27b162b33cd8e
sw x3, 0(x2) # store 0x9fa27b162b33cd8e in memory
flw f23, 0(x2) # load 0x9fa27b162b33cd8e from memory into f23
fnmadd.s f25, f20, f8, f23, dyn # perform operation
fnmadd.s f25, f20, f8, f23, rdn # perform operation
fnmadd.s f25, f20, f8, f23, rmm # perform operation
fnmadd.s f25, f20, f8, f23, rne # perform operation
fnmadd.s f25, f20, f8, f23, rtz # perform operation
fnmadd.s f25, f20, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x5, 0xfff1518fb38f84b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xe4ad8b3c76949a98 # load x3 with value 0xe4ad8b3c76949a98
sw x3, 0(x2) # store 0xe4ad8b3c76949a98 in memory
flw f7, 0(x2) # load 0xe4ad8b3c76949a98 from memory into f7
fnmadd.s f5, f31, f3, f7, dyn # perform operation
fnmadd.s f5, f31, f3, f7, rdn # perform operation
fnmadd.s f5, f31, f3, f7, rmm # perform operation
fnmadd.s f5, f31, f3, f7, rne # perform operation
fnmadd.s f5, f31, f3, f7, rtz # perform operation
fnmadd.s f5, f31, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x4, 0x12e43fb4bdb799fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xb948a4d13be07c27 # load x3 with value 0xb948a4d13be07c27
sw x3, 0(x2) # store 0xb948a4d13be07c27 in memory
flw f15, 0(x2) # load 0xb948a4d13be07c27 from memory into f15
fnmadd.s f4, f30, f12, f15, dyn # perform operation
fnmadd.s f4, f30, f12, f15, rdn # perform operation
fnmadd.s f4, f30, f12, f15, rmm # perform operation
fnmadd.s f4, f30, f12, f15, rne # perform operation
fnmadd.s f4, f30, f12, f15, rtz # perform operation
fnmadd.s f4, f30, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f30, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x27, 0xfb2d47860408ad82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x3bb54b6b3ae0dfb5 # load x3 with value 0x3bb54b6b3ae0dfb5
sw x3, 0(x2) # store 0x3bb54b6b3ae0dfb5 in memory
flw f28, 0(x2) # load 0x3bb54b6b3ae0dfb5 from memory into f28
fnmadd.s f27, f10, f29, f28, dyn # perform operation
fnmadd.s f27, f10, f29, f28, rdn # perform operation
fnmadd.s f27, f10, f29, f28, rmm # perform operation
fnmadd.s f27, f10, f29, f28, rne # perform operation
fnmadd.s f27, f10, f29, f28, rtz # perform operation
fnmadd.s f27, f10, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x5, 0x3f07d0120738fecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x4b4f56fe72b53e0f # load x3 with value 0x4b4f56fe72b53e0f
sw x3, 0(x2) # store 0x4b4f56fe72b53e0f in memory
flw f27, 0(x2) # load 0x4b4f56fe72b53e0f from memory into f27
fnmadd.s f5, f2, f29, f27, dyn # perform operation
fnmadd.s f5, f2, f29, f27, rdn # perform operation
fnmadd.s f5, f2, f29, f27, rmm # perform operation
fnmadd.s f5, f2, f29, f27, rne # perform operation
fnmadd.s f5, f2, f29, f27, rtz # perform operation
fnmadd.s f5, f2, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x8, 0x691d2024fc326354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0xde59a597c41425d4 # load x3 with value 0xde59a597c41425d4
sw x3, 0(x2) # store 0xde59a597c41425d4 in memory
flw f16, 0(x2) # load 0xde59a597c41425d4 from memory into f16
fnmadd.s f8, f12, f4, f16, dyn # perform operation
fnmadd.s f8, f12, f4, f16, rdn # perform operation
fnmadd.s f8, f12, f4, f16, rmm # perform operation
fnmadd.s f8, f12, f4, f16, rne # perform operation
fnmadd.s f8, f12, f4, f16, rtz # perform operation
fnmadd.s f8, f12, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x11, 0xce0d8096d2427216 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x4f39850b49898f9b # load x3 with value 0x4f39850b49898f9b
sw x3, 0(x2) # store 0x4f39850b49898f9b in memory
flw f23, 0(x2) # load 0x4f39850b49898f9b from memory into f23
fnmadd.s f11, f22, f9, f23, dyn # perform operation
fnmadd.s f11, f22, f9, f23, rdn # perform operation
fnmadd.s f11, f22, f9, f23, rmm # perform operation
fnmadd.s f11, f22, f9, f23, rne # perform operation
fnmadd.s f11, f22, f9, f23, rtz # perform operation
fnmadd.s f11, f22, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x20, 0x08b4afb98a54379c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x487359ed40b07630 # load x3 with value 0x487359ed40b07630
sw x3, 0(x2) # store 0x487359ed40b07630 in memory
flw f29, 0(x2) # load 0x487359ed40b07630 from memory into f29
fnmadd.s f20, f31, f27, f29, dyn # perform operation
fnmadd.s f20, f31, f27, f29, rdn # perform operation
fnmadd.s f20, f31, f27, f29, rmm # perform operation
fnmadd.s f20, f31, f27, f29, rne # perform operation
fnmadd.s f20, f31, f27, f29, rtz # perform operation
fnmadd.s f20, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f31, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x28, 0x881c245972c87d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x87c294eddb62f2b5 # load x3 with value 0x87c294eddb62f2b5
sw x3, 0(x2) # store 0x87c294eddb62f2b5 in memory
flw f19, 0(x2) # load 0x87c294eddb62f2b5 from memory into f19
fnmadd.s f28, f6, f10, f19, dyn # perform operation
fnmadd.s f28, f6, f10, f19, rdn # perform operation
fnmadd.s f28, f6, f10, f19, rmm # perform operation
fnmadd.s f28, f6, f10, f19, rne # perform operation
fnmadd.s f28, f6, f10, f19, rtz # perform operation
fnmadd.s f28, f6, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f6, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f6, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x3, 0xe8ba0e475a43bf11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x9e24c7fb9878d188 # load x3 with value 0x9e24c7fb9878d188
sw x3, 0(x2) # store 0x9e24c7fb9878d188 in memory
flw f24, 0(x2) # load 0x9e24c7fb9878d188 from memory into f24
fnmadd.s f3, f1, f10, f24, dyn # perform operation
fnmadd.s f3, f1, f10, f24, rdn # perform operation
fnmadd.s f3, f1, f10, f24, rmm # perform operation
fnmadd.s f3, f1, f10, f24, rne # perform operation
fnmadd.s f3, f1, f10, f24, rtz # perform operation
fnmadd.s f3, f1, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x7, 0x8940dc92d420df69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x3158d3563e34371e # load x3 with value 0x3158d3563e34371e
sw x3, 0(x2) # store 0x3158d3563e34371e in memory
flw f12, 0(x2) # load 0x3158d3563e34371e from memory into f12
fnmadd.s f7, f16, f13, f12, dyn # perform operation
fnmadd.s f7, f16, f13, f12, rdn # perform operation
fnmadd.s f7, f16, f13, f12, rmm # perform operation
fnmadd.s f7, f16, f13, f12, rne # perform operation
fnmadd.s f7, f16, f13, f12, rtz # perform operation
fnmadd.s f7, f16, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x6, 0x85dcc25abf9b0635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x706542f189690e78 # load x3 with value 0x706542f189690e78
sw x3, 0(x2) # store 0x706542f189690e78 in memory
flw f26, 0(x2) # load 0x706542f189690e78 from memory into f26
fnmadd.s f6, f30, f21, f26, dyn # perform operation
fnmadd.s f6, f30, f21, f26, rdn # perform operation
fnmadd.s f6, f30, f21, f26, rmm # perform operation
fnmadd.s f6, f30, f21, f26, rne # perform operation
fnmadd.s f6, f30, f21, f26, rtz # perform operation
fnmadd.s f6, f30, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x9, 0x78e102ad146bb8d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x22396c4ecea03b56 # load x3 with value 0x22396c4ecea03b56
sw x3, 0(x2) # store 0x22396c4ecea03b56 in memory
flw f15, 0(x2) # load 0x22396c4ecea03b56 from memory into f15
fnmadd.s f9, f17, f21, f15, dyn # perform operation
fnmadd.s f9, f17, f21, f15, rdn # perform operation
fnmadd.s f9, f17, f21, f15, rmm # perform operation
fnmadd.s f9, f17, f21, f15, rne # perform operation
fnmadd.s f9, f17, f21, f15, rtz # perform operation
fnmadd.s f9, f17, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f17, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f17, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x7, 0x6b11cc05f7740eaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xac28a4301ff763e3 # load x3 with value 0xac28a4301ff763e3
sw x3, 0(x2) # store 0xac28a4301ff763e3 in memory
flw f19, 0(x2) # load 0xac28a4301ff763e3 from memory into f19
fnmadd.s f7, f23, f14, f19, dyn # perform operation
fnmadd.s f7, f23, f14, f19, rdn # perform operation
fnmadd.s f7, f23, f14, f19, rmm # perform operation
fnmadd.s f7, f23, f14, f19, rne # perform operation
fnmadd.s f7, f23, f14, f19, rtz # perform operation
fnmadd.s f7, f23, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x11, 0x0c62e1920b31d185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x7a22c1c86ce595b7 # load x3 with value 0x7a22c1c86ce595b7
sw x3, 0(x2) # store 0x7a22c1c86ce595b7 in memory
flw f1, 0(x2) # load 0x7a22c1c86ce595b7 from memory into f1
fnmadd.s f11, f31, f13, f1, dyn # perform operation
fnmadd.s f11, f31, f13, f1, rdn # perform operation
fnmadd.s f11, f31, f13, f1, rmm # perform operation
fnmadd.s f11, f31, f13, f1, rne # perform operation
fnmadd.s f11, f31, f13, f1, rtz # perform operation
fnmadd.s f11, f31, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f31, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f31, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f31, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f31, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f31, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x13, 0xe4f9d95141f61aa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x5a497f601706e4d7 # load x3 with value 0x5a497f601706e4d7
sw x3, 0(x2) # store 0x5a497f601706e4d7 in memory
flw f22, 0(x2) # load 0x5a497f601706e4d7 from memory into f22
fnmadd.s f13, f26, f14, f22, dyn # perform operation
fnmadd.s f13, f26, f14, f22, rdn # perform operation
fnmadd.s f13, f26, f14, f22, rmm # perform operation
fnmadd.s f13, f26, f14, f22, rne # perform operation
fnmadd.s f13, f26, f14, f22, rtz # perform operation
fnmadd.s f13, f26, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x4, 0xdb6279d89ed7409f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xc3bf41ad5cbbfa8d # load x3 with value 0xc3bf41ad5cbbfa8d
sw x3, 0(x2) # store 0xc3bf41ad5cbbfa8d in memory
flw f2, 0(x2) # load 0xc3bf41ad5cbbfa8d from memory into f2
fnmadd.s f4, f12, f10, f2, dyn # perform operation
fnmadd.s f4, f12, f10, f2, rdn # perform operation
fnmadd.s f4, f12, f10, f2, rmm # perform operation
fnmadd.s f4, f12, f10, f2, rne # perform operation
fnmadd.s f4, f12, f10, f2, rtz # perform operation
fnmadd.s f4, f12, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f12, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x22, 0x65834cf364cfd0d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x15148817bd6b41a1 # load x3 with value 0x15148817bd6b41a1
sw x3, 0(x2) # store 0x15148817bd6b41a1 in memory
flw f10, 0(x2) # load 0x15148817bd6b41a1 from memory into f10
fnmadd.s f22, f19, f29, f10, dyn # perform operation
fnmadd.s f22, f19, f29, f10, rdn # perform operation
fnmadd.s f22, f19, f29, f10, rmm # perform operation
fnmadd.s f22, f19, f29, f10, rne # perform operation
fnmadd.s f22, f19, f29, f10, rtz # perform operation
fnmadd.s f22, f19, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x19, 0x568a195a04a81df8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x58c38687ffdfb864 # load x3 with value 0x58c38687ffdfb864
sw x3, 0(x2) # store 0x58c38687ffdfb864 in memory
flw f18, 0(x2) # load 0x58c38687ffdfb864 from memory into f18
fnmadd.s f19, f22, f6, f18, dyn # perform operation
fnmadd.s f19, f22, f6, f18, rdn # perform operation
fnmadd.s f19, f22, f6, f18, rmm # perform operation
fnmadd.s f19, f22, f6, f18, rne # perform operation
fnmadd.s f19, f22, f6, f18, rtz # perform operation
fnmadd.s f19, f22, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x25, 0xd5c1f69483082b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x25b3c7d4056129cf # load x3 with value 0x25b3c7d4056129cf
sw x3, 0(x2) # store 0x25b3c7d4056129cf in memory
flw f28, 0(x2) # load 0x25b3c7d4056129cf from memory into f28
fnmadd.s f25, f11, f10, f28, dyn # perform operation
fnmadd.s f25, f11, f10, f28, rdn # perform operation
fnmadd.s f25, f11, f10, f28, rmm # perform operation
fnmadd.s f25, f11, f10, f28, rne # perform operation
fnmadd.s f25, f11, f10, f28, rtz # perform operation
fnmadd.s f25, f11, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x26, 0xa7aaa85f9c11cced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x8d994014f40f3d60 # load x3 with value 0x8d994014f40f3d60
sw x3, 0(x2) # store 0x8d994014f40f3d60 in memory
flw f9, 0(x2) # load 0x8d994014f40f3d60 from memory into f9
fnmadd.s f26, f16, f8, f9, dyn # perform operation
fnmadd.s f26, f16, f8, f9, rdn # perform operation
fnmadd.s f26, f16, f8, f9, rmm # perform operation
fnmadd.s f26, f16, f8, f9, rne # perform operation
fnmadd.s f26, f16, f8, f9, rtz # perform operation
fnmadd.s f26, f16, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x7, 0x44d4e727a485ee73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x25c92fc9a336aa22 # load x3 with value 0x25c92fc9a336aa22
sw x3, 0(x2) # store 0x25c92fc9a336aa22 in memory
flw f23, 0(x2) # load 0x25c92fc9a336aa22 from memory into f23
fnmadd.s f7, f2, f30, f23, dyn # perform operation
fnmadd.s f7, f2, f30, f23, rdn # perform operation
fnmadd.s f7, f2, f30, f23, rmm # perform operation
fnmadd.s f7, f2, f30, f23, rne # perform operation
fnmadd.s f7, f2, f30, f23, rtz # perform operation
fnmadd.s f7, f2, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x21, 0xe3ba39b24b7e18fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xa31c7bdc17eed9d9 # load x3 with value 0xa31c7bdc17eed9d9
sw x3, 0(x2) # store 0xa31c7bdc17eed9d9 in memory
flw f20, 0(x2) # load 0xa31c7bdc17eed9d9 from memory into f20
fnmadd.s f21, f29, f10, f20, dyn # perform operation
fnmadd.s f21, f29, f10, f20, rdn # perform operation
fnmadd.s f21, f29, f10, f20, rmm # perform operation
fnmadd.s f21, f29, f10, f20, rne # perform operation
fnmadd.s f21, f29, f10, f20, rtz # perform operation
fnmadd.s f21, f29, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x22, 0xf087af2b9b35af38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x5d0f1ec6b3b6fff5 # load x3 with value 0x5d0f1ec6b3b6fff5
sw x3, 0(x2) # store 0x5d0f1ec6b3b6fff5 in memory
flw f12, 0(x2) # load 0x5d0f1ec6b3b6fff5 from memory into f12
fnmadd.s f22, f15, f30, f12, dyn # perform operation
fnmadd.s f22, f15, f30, f12, rdn # perform operation
fnmadd.s f22, f15, f30, f12, rmm # perform operation
fnmadd.s f22, f15, f30, f12, rne # perform operation
fnmadd.s f22, f15, f30, f12, rtz # perform operation
fnmadd.s f22, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x24, 0xde7e82fbbe9eb161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xbcee53f061038a34 # load x3 with value 0xbcee53f061038a34
sw x3, 0(x2) # store 0xbcee53f061038a34 in memory
flw f23, 0(x2) # load 0xbcee53f061038a34 from memory into f23
fnmadd.s f24, f18, f28, f23, dyn # perform operation
fnmadd.s f24, f18, f28, f23, rdn # perform operation
fnmadd.s f24, f18, f28, f23, rmm # perform operation
fnmadd.s f24, f18, f28, f23, rne # perform operation
fnmadd.s f24, f18, f28, f23, rtz # perform operation
fnmadd.s f24, f18, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x21, 0xc3e8268912cfe995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xa6acbb7d942b900a # load x3 with value 0xa6acbb7d942b900a
sw x3, 0(x2) # store 0xa6acbb7d942b900a in memory
flw f12, 0(x2) # load 0xa6acbb7d942b900a from memory into f12
fnmadd.s f21, f29, f30, f12, dyn # perform operation
fnmadd.s f21, f29, f30, f12, rdn # perform operation
fnmadd.s f21, f29, f30, f12, rmm # perform operation
fnmadd.s f21, f29, f30, f12, rne # perform operation
fnmadd.s f21, f29, f30, f12, rtz # perform operation
fnmadd.s f21, f29, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x4, 0x7f308bd59c572e2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x8df0d507b4f63855 # load x3 with value 0x8df0d507b4f63855
sw x3, 0(x2) # store 0x8df0d507b4f63855 in memory
flw f9, 0(x2) # load 0x8df0d507b4f63855 from memory into f9
fnmadd.s f4, f13, f12, f9, dyn # perform operation
fnmadd.s f4, f13, f12, f9, rdn # perform operation
fnmadd.s f4, f13, f12, f9, rmm # perform operation
fnmadd.s f4, f13, f12, f9, rne # perform operation
fnmadd.s f4, f13, f12, f9, rtz # perform operation
fnmadd.s f4, f13, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x1, 0x03dabc9a23c740e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x4101254c5240e37e # load x3 with value 0x4101254c5240e37e
sw x3, 0(x2) # store 0x4101254c5240e37e in memory
flw f18, 0(x2) # load 0x4101254c5240e37e from memory into f18
fnmadd.s f1, f14, f26, f18, dyn # perform operation
fnmadd.s f1, f14, f26, f18, rdn # perform operation
fnmadd.s f1, f14, f26, f18, rmm # perform operation
fnmadd.s f1, f14, f26, f18, rne # perform operation
fnmadd.s f1, f14, f26, f18, rtz # perform operation
fnmadd.s f1, f14, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x5, 0xa316582f17d9ee05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xba102423e00ddd32 # load x3 with value 0xba102423e00ddd32
sw x3, 0(x2) # store 0xba102423e00ddd32 in memory
flw f27, 0(x2) # load 0xba102423e00ddd32 from memory into f27
fnmadd.s f5, f6, f9, f27, dyn # perform operation
fnmadd.s f5, f6, f9, f27, rdn # perform operation
fnmadd.s f5, f6, f9, f27, rmm # perform operation
fnmadd.s f5, f6, f9, f27, rne # perform operation
fnmadd.s f5, f6, f9, f27, rtz # perform operation
fnmadd.s f5, f6, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x19, 0x01c5654e4c01f30a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xa5f24b48f1967b69 # load x3 with value 0xa5f24b48f1967b69
sw x3, 0(x2) # store 0xa5f24b48f1967b69 in memory
flw f26, 0(x2) # load 0xa5f24b48f1967b69 from memory into f26
fnmadd.s f19, f5, f22, f26, dyn # perform operation
fnmadd.s f19, f5, f22, f26, rdn # perform operation
fnmadd.s f19, f5, f22, f26, rmm # perform operation
fnmadd.s f19, f5, f22, f26, rne # perform operation
fnmadd.s f19, f5, f22, f26, rtz # perform operation
fnmadd.s f19, f5, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x28, 0xa36e43c2a383c22d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xa86a890e352148f9 # load x3 with value 0xa86a890e352148f9
sw x3, 0(x2) # store 0xa86a890e352148f9 in memory
flw f21, 0(x2) # load 0xa86a890e352148f9 from memory into f21
fnmadd.s f28, f6, f5, f21, dyn # perform operation
fnmadd.s f28, f6, f5, f21, rdn # perform operation
fnmadd.s f28, f6, f5, f21, rmm # perform operation
fnmadd.s f28, f6, f5, f21, rne # perform operation
fnmadd.s f28, f6, f5, f21, rtz # perform operation
fnmadd.s f28, f6, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f6, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f6, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x12, 0x237520b9777e5671 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xa01a633614312d17 # load x3 with value 0xa01a633614312d17
sw x3, 0(x2) # store 0xa01a633614312d17 in memory
flw f5, 0(x2) # load 0xa01a633614312d17 from memory into f5
fnmadd.s f12, f21, f15, f5, dyn # perform operation
fnmadd.s f12, f21, f15, f5, rdn # perform operation
fnmadd.s f12, f21, f15, f5, rmm # perform operation
fnmadd.s f12, f21, f15, f5, rne # perform operation
fnmadd.s f12, f21, f15, f5, rtz # perform operation
fnmadd.s f12, f21, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f21, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f21, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x28, 0xf30b05d30f7a3fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xe0451ba9355da519 # load x3 with value 0xe0451ba9355da519
sw x3, 0(x2) # store 0xe0451ba9355da519 in memory
flw f1, 0(x2) # load 0xe0451ba9355da519 from memory into f1
fnmadd.s f28, f26, f2, f1, dyn # perform operation
fnmadd.s f28, f26, f2, f1, rdn # perform operation
fnmadd.s f28, f26, f2, f1, rmm # perform operation
fnmadd.s f28, f26, f2, f1, rne # perform operation
fnmadd.s f28, f26, f2, f1, rtz # perform operation
fnmadd.s f28, f26, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x26, 0x89678a2fa43df3c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x7c09ea91d1bf5445 # load x3 with value 0x7c09ea91d1bf5445
sw x3, 0(x2) # store 0x7c09ea91d1bf5445 in memory
flw f5, 0(x2) # load 0x7c09ea91d1bf5445 from memory into f5
fnmadd.s f26, f21, f18, f5, dyn # perform operation
fnmadd.s f26, f21, f18, f5, rdn # perform operation
fnmadd.s f26, f21, f18, f5, rmm # perform operation
fnmadd.s f26, f21, f18, f5, rne # perform operation
fnmadd.s f26, f21, f18, f5, rtz # perform operation
fnmadd.s f26, f21, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x14, 0x4596da7a4bafdf6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x96a99225f61cd5f7 # load x3 with value 0x96a99225f61cd5f7
sw x3, 0(x2) # store 0x96a99225f61cd5f7 in memory
flw f26, 0(x2) # load 0x96a99225f61cd5f7 from memory into f26
fnmadd.s f14, f27, f5, f26, dyn # perform operation
fnmadd.s f14, f27, f5, f26, rdn # perform operation
fnmadd.s f14, f27, f5, f26, rmm # perform operation
fnmadd.s f14, f27, f5, f26, rne # perform operation
fnmadd.s f14, f27, f5, f26, rtz # perform operation
fnmadd.s f14, f27, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x13, 0xad08763d2ff0d304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x108525da635f9b62 # load x3 with value 0x108525da635f9b62
sw x3, 0(x2) # store 0x108525da635f9b62 in memory
flw f20, 0(x2) # load 0x108525da635f9b62 from memory into f20
fnmadd.s f13, f6, f8, f20, dyn # perform operation
fnmadd.s f13, f6, f8, f20, rdn # perform operation
fnmadd.s f13, f6, f8, f20, rmm # perform operation
fnmadd.s f13, f6, f8, f20, rne # perform operation
fnmadd.s f13, f6, f8, f20, rtz # perform operation
fnmadd.s f13, f6, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x28, 0x517d70742c0fcc66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x99f6f2a1a07d169e # load x3 with value 0x99f6f2a1a07d169e
sw x3, 0(x2) # store 0x99f6f2a1a07d169e in memory
flw f11, 0(x2) # load 0x99f6f2a1a07d169e from memory into f11
fnmadd.s f28, f27, f2, f11, dyn # perform operation
fnmadd.s f28, f27, f2, f11, rdn # perform operation
fnmadd.s f28, f27, f2, f11, rmm # perform operation
fnmadd.s f28, f27, f2, f11, rne # perform operation
fnmadd.s f28, f27, f2, f11, rtz # perform operation
fnmadd.s f28, f27, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x12, 0x4cd4884f9124591f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xb51006b100217849 # load x3 with value 0xb51006b100217849
sw x3, 0(x2) # store 0xb51006b100217849 in memory
flw f10, 0(x2) # load 0xb51006b100217849 from memory into f10
fnmadd.s f12, f6, f19, f10, dyn # perform operation
fnmadd.s f12, f6, f19, f10, rdn # perform operation
fnmadd.s f12, f6, f19, f10, rmm # perform operation
fnmadd.s f12, f6, f19, f10, rne # perform operation
fnmadd.s f12, f6, f19, f10, rtz # perform operation
fnmadd.s f12, f6, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x2, 0xc759a1397c17bb5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x96b885c7bce9c03a # load x3 with value 0x96b885c7bce9c03a
sw x3, 0(x2) # store 0x96b885c7bce9c03a in memory
flw f15, 0(x2) # load 0x96b885c7bce9c03a from memory into f15
fnmadd.s f2, f13, f26, f15, dyn # perform operation
fnmadd.s f2, f13, f26, f15, rdn # perform operation
fnmadd.s f2, f13, f26, f15, rmm # perform operation
fnmadd.s f2, f13, f26, f15, rne # perform operation
fnmadd.s f2, f13, f26, f15, rtz # perform operation
fnmadd.s f2, f13, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x20, 0x28ba44bfb8e9f44b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x86534a81016e709d # load x3 with value 0x86534a81016e709d
sw x3, 0(x2) # store 0x86534a81016e709d in memory
flw f6, 0(x2) # load 0x86534a81016e709d from memory into f6
fnmadd.s f20, f28, f18, f6, dyn # perform operation
fnmadd.s f20, f28, f18, f6, rdn # perform operation
fnmadd.s f20, f28, f18, f6, rmm # perform operation
fnmadd.s f20, f28, f18, f6, rne # perform operation
fnmadd.s f20, f28, f18, f6, rtz # perform operation
fnmadd.s f20, f28, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x1, 0x2269bbcbb5f95461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x78bed62b1f103142 # load x3 with value 0x78bed62b1f103142
sw x3, 0(x2) # store 0x78bed62b1f103142 in memory
flw f19, 0(x2) # load 0x78bed62b1f103142 from memory into f19
fnmadd.s f1, f26, f6, f19, dyn # perform operation
fnmadd.s f1, f26, f6, f19, rdn # perform operation
fnmadd.s f1, f26, f6, f19, rmm # perform operation
fnmadd.s f1, f26, f6, f19, rne # perform operation
fnmadd.s f1, f26, f6, f19, rtz # perform operation
fnmadd.s f1, f26, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x8, 0xa2fb5ae98e3c5baa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0xf3729b067e04da46 # load x3 with value 0xf3729b067e04da46
sw x3, 0(x2) # store 0xf3729b067e04da46 in memory
flw f28, 0(x2) # load 0xf3729b067e04da46 from memory into f28
fnmadd.s f8, f15, f20, f28, dyn # perform operation
fnmadd.s f8, f15, f20, f28, rdn # perform operation
fnmadd.s f8, f15, f20, f28, rmm # perform operation
fnmadd.s f8, f15, f20, f28, rne # perform operation
fnmadd.s f8, f15, f20, f28, rtz # perform operation
fnmadd.s f8, f15, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x30, 0xd23f0cb7ef5df31a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xcdd1e72be5ced4fb # load x3 with value 0xcdd1e72be5ced4fb
sw x3, 0(x2) # store 0xcdd1e72be5ced4fb in memory
flw f23, 0(x2) # load 0xcdd1e72be5ced4fb from memory into f23
fnmadd.s f30, f2, f10, f23, dyn # perform operation
fnmadd.s f30, f2, f10, f23, rdn # perform operation
fnmadd.s f30, f2, f10, f23, rmm # perform operation
fnmadd.s f30, f2, f10, f23, rne # perform operation
fnmadd.s f30, f2, f10, f23, rtz # perform operation
fnmadd.s f30, f2, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x12, 0x5c9f74580df7d679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x94e9dd1ebe31673d # load x3 with value 0x94e9dd1ebe31673d
sw x3, 0(x2) # store 0x94e9dd1ebe31673d in memory
flw f26, 0(x2) # load 0x94e9dd1ebe31673d from memory into f26
fnmadd.s f12, f14, f24, f26, dyn # perform operation
fnmadd.s f12, f14, f24, f26, rdn # perform operation
fnmadd.s f12, f14, f24, f26, rmm # perform operation
fnmadd.s f12, f14, f24, f26, rne # perform operation
fnmadd.s f12, f14, f24, f26, rtz # perform operation
fnmadd.s f12, f14, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x7, 0x8af427950d843f81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xb23d07d0729d1aea # load x3 with value 0xb23d07d0729d1aea
sw x3, 0(x2) # store 0xb23d07d0729d1aea in memory
flw f26, 0(x2) # load 0xb23d07d0729d1aea from memory into f26
fnmadd.s f7, f16, f4, f26, dyn # perform operation
fnmadd.s f7, f16, f4, f26, rdn # perform operation
fnmadd.s f7, f16, f4, f26, rmm # perform operation
fnmadd.s f7, f16, f4, f26, rne # perform operation
fnmadd.s f7, f16, f4, f26, rtz # perform operation
fnmadd.s f7, f16, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f4, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x18, 0x34a57537d0f1e20e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xc5c0c39774c775ab # load x3 with value 0xc5c0c39774c775ab
sw x3, 0(x2) # store 0xc5c0c39774c775ab in memory
flw f4, 0(x2) # load 0xc5c0c39774c775ab from memory into f4
fnmadd.s f18, f13, f1, f4, dyn # perform operation
fnmadd.s f18, f13, f1, f4, rdn # perform operation
fnmadd.s f18, f13, f1, f4, rmm # perform operation
fnmadd.s f18, f13, f1, f4, rne # perform operation
fnmadd.s f18, f13, f1, f4, rtz # perform operation
fnmadd.s f18, f13, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x2, 0xdabe9fc55c9d50d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xb2ed5cb0d02c8959 # load x3 with value 0xb2ed5cb0d02c8959
sw x3, 0(x2) # store 0xb2ed5cb0d02c8959 in memory
flw f16, 0(x2) # load 0xb2ed5cb0d02c8959 from memory into f16
fnmadd.s f2, f19, f14, f16, dyn # perform operation
fnmadd.s f2, f19, f14, f16, rdn # perform operation
fnmadd.s f2, f19, f14, f16, rmm # perform operation
fnmadd.s f2, f19, f14, f16, rne # perform operation
fnmadd.s f2, f19, f14, f16, rtz # perform operation
fnmadd.s f2, f19, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f19, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x22, 0xacf27b8f4bec537f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x936fcb366165246e # load x3 with value 0x936fcb366165246e
sw x3, 0(x2) # store 0x936fcb366165246e in memory
flw f1, 0(x2) # load 0x936fcb366165246e from memory into f1
fnmadd.s f22, f26, f15, f1, dyn # perform operation
fnmadd.s f22, f26, f15, f1, rdn # perform operation
fnmadd.s f22, f26, f15, f1, rmm # perform operation
fnmadd.s f22, f26, f15, f1, rne # perform operation
fnmadd.s f22, f26, f15, f1, rtz # perform operation
fnmadd.s f22, f26, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f26, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x2, 0x13098fd9e0731640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x51a8561707e0a767 # load x3 with value 0x51a8561707e0a767
sw x3, 0(x2) # store 0x51a8561707e0a767 in memory
flw f24, 0(x2) # load 0x51a8561707e0a767 from memory into f24
fnmadd.s f2, f23, f11, f24, dyn # perform operation
fnmadd.s f2, f23, f11, f24, rdn # perform operation
fnmadd.s f2, f23, f11, f24, rmm # perform operation
fnmadd.s f2, f23, f11, f24, rne # perform operation
fnmadd.s f2, f23, f11, f24, rtz # perform operation
fnmadd.s f2, f23, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x9, 0x5c0cd42a0a325e9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x8287fc8a2907d8e9 # load x3 with value 0x8287fc8a2907d8e9
sw x3, 0(x2) # store 0x8287fc8a2907d8e9 in memory
flw f31, 0(x2) # load 0x8287fc8a2907d8e9 from memory into f31
fnmadd.s f9, f2, f11, f31, dyn # perform operation
fnmadd.s f9, f2, f11, f31, rdn # perform operation
fnmadd.s f9, f2, f11, f31, rmm # perform operation
fnmadd.s f9, f2, f11, f31, rne # perform operation
fnmadd.s f9, f2, f11, f31, rtz # perform operation
fnmadd.s f9, f2, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f2, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f2, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f2, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f2, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f2, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x22, 0x0f8c739370fadba2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xed0aebea2c7ae908 # load x3 with value 0xed0aebea2c7ae908
sw x3, 0(x2) # store 0xed0aebea2c7ae908 in memory
flw f19, 0(x2) # load 0xed0aebea2c7ae908 from memory into f19
fnmadd.s f22, f10, f11, f19, dyn # perform operation
fnmadd.s f22, f10, f11, f19, rdn # perform operation
fnmadd.s f22, f10, f11, f19, rmm # perform operation
fnmadd.s f22, f10, f11, f19, rne # perform operation
fnmadd.s f22, f10, f11, f19, rtz # perform operation
fnmadd.s f22, f10, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x7, 0x22cd0c3f275da03d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xcee2398f7de158d5 # load x3 with value 0xcee2398f7de158d5
sw x3, 0(x2) # store 0xcee2398f7de158d5 in memory
flw f15, 0(x2) # load 0xcee2398f7de158d5 from memory into f15
fnmadd.s f7, f20, f23, f15, dyn # perform operation
fnmadd.s f7, f20, f23, f15, rdn # perform operation
fnmadd.s f7, f20, f23, f15, rmm # perform operation
fnmadd.s f7, f20, f23, f15, rne # perform operation
fnmadd.s f7, f20, f23, f15, rtz # perform operation
fnmadd.s f7, f20, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x19, 0x8d45aaefd138be71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xb1c00eec11ab2084 # load x3 with value 0xb1c00eec11ab2084
sw x3, 0(x2) # store 0xb1c00eec11ab2084 in memory
flw f27, 0(x2) # load 0xb1c00eec11ab2084 from memory into f27
fnmadd.s f19, f2, f29, f27, dyn # perform operation
fnmadd.s f19, f2, f29, f27, rdn # perform operation
fnmadd.s f19, f2, f29, f27, rmm # perform operation
fnmadd.s f19, f2, f29, f27, rne # perform operation
fnmadd.s f19, f2, f29, f27, rtz # perform operation
fnmadd.s f19, f2, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x12, 0x0bb1140ad6391665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x89a6e3abfeaa159e # load x3 with value 0x89a6e3abfeaa159e
sw x3, 0(x2) # store 0x89a6e3abfeaa159e in memory
flw f11, 0(x2) # load 0x89a6e3abfeaa159e from memory into f11
fnmadd.s f12, f17, f24, f11, dyn # perform operation
fnmadd.s f12, f17, f24, f11, rdn # perform operation
fnmadd.s f12, f17, f24, f11, rmm # perform operation
fnmadd.s f12, f17, f24, f11, rne # perform operation
fnmadd.s f12, f17, f24, f11, rtz # perform operation
fnmadd.s f12, f17, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x19, 0x28e1c1ce7a7bb673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xc350f52d6f24fa0b # load x3 with value 0xc350f52d6f24fa0b
sw x3, 0(x2) # store 0xc350f52d6f24fa0b in memory
flw f30, 0(x2) # load 0xc350f52d6f24fa0b from memory into f30
fnmadd.s f19, f14, f8, f30, dyn # perform operation
fnmadd.s f19, f14, f8, f30, rdn # perform operation
fnmadd.s f19, f14, f8, f30, rmm # perform operation
fnmadd.s f19, f14, f8, f30, rne # perform operation
fnmadd.s f19, f14, f8, f30, rtz # perform operation
fnmadd.s f19, f14, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x31, 0xd615b2a81a33a181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x17bbaaa646c061ff # load x3 with value 0x17bbaaa646c061ff
sw x3, 0(x2) # store 0x17bbaaa646c061ff in memory
flw f10, 0(x2) # load 0x17bbaaa646c061ff from memory into f10
fnmadd.s f31, f19, f4, f10, dyn # perform operation
fnmadd.s f31, f19, f4, f10, rdn # perform operation
fnmadd.s f31, f19, f4, f10, rmm # perform operation
fnmadd.s f31, f19, f4, f10, rne # perform operation
fnmadd.s f31, f19, f4, f10, rtz # perform operation
fnmadd.s f31, f19, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f19, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x3, 0x2bd2fe4ef36822fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xb137c4f468b75964 # load x3 with value 0xb137c4f468b75964
sw x3, 0(x2) # store 0xb137c4f468b75964 in memory
flw f17, 0(x2) # load 0xb137c4f468b75964 from memory into f17
fnmadd.s f3, f7, f12, f17, dyn # perform operation
fnmadd.s f3, f7, f12, f17, rdn # perform operation
fnmadd.s f3, f7, f12, f17, rmm # perform operation
fnmadd.s f3, f7, f12, f17, rne # perform operation
fnmadd.s f3, f7, f12, f17, rtz # perform operation
fnmadd.s f3, f7, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f7, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f7, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x19, 0xcf95f31fe55c1027 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x5b51cb2ccd1c35fd # load x3 with value 0x5b51cb2ccd1c35fd
sw x3, 0(x2) # store 0x5b51cb2ccd1c35fd in memory
flw f15, 0(x2) # load 0x5b51cb2ccd1c35fd from memory into f15
fnmadd.s f19, f24, f10, f15, dyn # perform operation
fnmadd.s f19, f24, f10, f15, rdn # perform operation
fnmadd.s f19, f24, f10, f15, rmm # perform operation
fnmadd.s f19, f24, f10, f15, rne # perform operation
fnmadd.s f19, f24, f10, f15, rtz # perform operation
fnmadd.s f19, f24, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x29, 0xcb30795b45f43ded # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xdc02b68a3aca02b5 # load x3 with value 0xdc02b68a3aca02b5
sw x3, 0(x2) # store 0xdc02b68a3aca02b5 in memory
flw f10, 0(x2) # load 0xdc02b68a3aca02b5 from memory into f10
fnmadd.s f29, f6, f19, f10, dyn # perform operation
fnmadd.s f29, f6, f19, f10, rdn # perform operation
fnmadd.s f29, f6, f19, f10, rmm # perform operation
fnmadd.s f29, f6, f19, f10, rne # perform operation
fnmadd.s f29, f6, f19, f10, rtz # perform operation
fnmadd.s f29, f6, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x29, 0xb6f7e86bb8535521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x5b568fccaed9f292 # load x3 with value 0x5b568fccaed9f292
sw x3, 0(x2) # store 0x5b568fccaed9f292 in memory
flw f24, 0(x2) # load 0x5b568fccaed9f292 from memory into f24
fnmadd.s f29, f27, f23, f24, dyn # perform operation
fnmadd.s f29, f27, f23, f24, rdn # perform operation
fnmadd.s f29, f27, f23, f24, rmm # perform operation
fnmadd.s f29, f27, f23, f24, rne # perform operation
fnmadd.s f29, f27, f23, f24, rtz # perform operation
fnmadd.s f29, f27, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x6, 0x678fd763ec3a8cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0xb1c4770fdd1490e0 # load x3 with value 0xb1c4770fdd1490e0
sw x3, 0(x2) # store 0xb1c4770fdd1490e0 in memory
flw f2, 0(x2) # load 0xb1c4770fdd1490e0 from memory into f2
fnmadd.s f6, f1, f24, f2, dyn # perform operation
fnmadd.s f6, f1, f24, f2, rdn # perform operation
fnmadd.s f6, f1, f24, f2, rmm # perform operation
fnmadd.s f6, f1, f24, f2, rne # perform operation
fnmadd.s f6, f1, f24, f2, rtz # perform operation
fnmadd.s f6, f1, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f1, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f1, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f1, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f1, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f1, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x23, 0x8a456e1da023095f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x7301fda228e36683 # load x3 with value 0x7301fda228e36683
sw x3, 0(x2) # store 0x7301fda228e36683 in memory
flw f12, 0(x2) # load 0x7301fda228e36683 from memory into f12
fnmadd.s f23, f20, f17, f12, dyn # perform operation
fnmadd.s f23, f20, f17, f12, rdn # perform operation
fnmadd.s f23, f20, f17, f12, rmm # perform operation
fnmadd.s f23, f20, f17, f12, rne # perform operation
fnmadd.s f23, f20, f17, f12, rtz # perform operation
fnmadd.s f23, f20, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x3, 0x14426b9f9c95b454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x1fdc3f90ccde439f # load x3 with value 0x1fdc3f90ccde439f
sw x3, 0(x2) # store 0x1fdc3f90ccde439f in memory
flw f7, 0(x2) # load 0x1fdc3f90ccde439f from memory into f7
fnmadd.s f3, f8, f24, f7, dyn # perform operation
fnmadd.s f3, f8, f24, f7, rdn # perform operation
fnmadd.s f3, f8, f24, f7, rmm # perform operation
fnmadd.s f3, f8, f24, f7, rne # perform operation
fnmadd.s f3, f8, f24, f7, rtz # perform operation
fnmadd.s f3, f8, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f8, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x2, 0xd177f4bdf63d73bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xfbf0b89e560b918e # load x3 with value 0xfbf0b89e560b918e
sw x3, 0(x2) # store 0xfbf0b89e560b918e in memory
flw f29, 0(x2) # load 0xfbf0b89e560b918e from memory into f29
fnmadd.s f2, f27, f7, f29, dyn # perform operation
fnmadd.s f2, f27, f7, f29, rdn # perform operation
fnmadd.s f2, f27, f7, f29, rmm # perform operation
fnmadd.s f2, f27, f7, f29, rne # perform operation
fnmadd.s f2, f27, f7, f29, rtz # perform operation
fnmadd.s f2, f27, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x19, 0xc95a3490817d63ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x109f30f8f8856372 # load x3 with value 0x109f30f8f8856372
sw x3, 0(x2) # store 0x109f30f8f8856372 in memory
flw f25, 0(x2) # load 0x109f30f8f8856372 from memory into f25
fnmadd.s f19, f2, f3, f25, dyn # perform operation
fnmadd.s f19, f2, f3, f25, rdn # perform operation
fnmadd.s f19, f2, f3, f25, rmm # perform operation
fnmadd.s f19, f2, f3, f25, rne # perform operation
fnmadd.s f19, f2, f3, f25, rtz # perform operation
fnmadd.s f19, f2, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x9, 0x717b63d48e4dbc52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x2205beb09ce76d17 # load x3 with value 0x2205beb09ce76d17
sw x3, 0(x2) # store 0x2205beb09ce76d17 in memory
flw f25, 0(x2) # load 0x2205beb09ce76d17 from memory into f25
fnmadd.s f9, f19, f28, f25, dyn # perform operation
fnmadd.s f9, f19, f28, f25, rdn # perform operation
fnmadd.s f9, f19, f28, f25, rmm # perform operation
fnmadd.s f9, f19, f28, f25, rne # perform operation
fnmadd.s f9, f19, f28, f25, rtz # perform operation
fnmadd.s f9, f19, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x8, 0x50c466676354075f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0xbd73105792009741 # load x3 with value 0xbd73105792009741
sw x3, 0(x2) # store 0xbd73105792009741 in memory
flw f11, 0(x2) # load 0xbd73105792009741 from memory into f11
fnmadd.s f8, f2, f6, f11, dyn # perform operation
fnmadd.s f8, f2, f6, f11, rdn # perform operation
fnmadd.s f8, f2, f6, f11, rmm # perform operation
fnmadd.s f8, f2, f6, f11, rne # perform operation
fnmadd.s f8, f2, f6, f11, rtz # perform operation
fnmadd.s f8, f2, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x7, 0x3a8409de12967a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xe8066b40f7c9c8ca # load x3 with value 0xe8066b40f7c9c8ca
sw x3, 0(x2) # store 0xe8066b40f7c9c8ca in memory
flw f8, 0(x2) # load 0xe8066b40f7c9c8ca from memory into f8
fnmadd.s f7, f16, f25, f8, dyn # perform operation
fnmadd.s f7, f16, f25, f8, rdn # perform operation
fnmadd.s f7, f16, f25, f8, rmm # perform operation
fnmadd.s f7, f16, f25, f8, rne # perform operation
fnmadd.s f7, f16, f25, f8, rtz # perform operation
fnmadd.s f7, f16, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x13, 0x6423c1baf19bcd16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x47dc5ea491227a13 # load x3 with value 0x47dc5ea491227a13
sw x3, 0(x2) # store 0x47dc5ea491227a13 in memory
flw f3, 0(x2) # load 0x47dc5ea491227a13 from memory into f3
fnmadd.s f13, f18, f2, f3, dyn # perform operation
fnmadd.s f13, f18, f2, f3, rdn # perform operation
fnmadd.s f13, f18, f2, f3, rmm # perform operation
fnmadd.s f13, f18, f2, f3, rne # perform operation
fnmadd.s f13, f18, f2, f3, rtz # perform operation
fnmadd.s f13, f18, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x22, 0xfab852897cf93be0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xf6553d0a49a21754 # load x3 with value 0xf6553d0a49a21754
sw x3, 0(x2) # store 0xf6553d0a49a21754 in memory
flw f17, 0(x2) # load 0xf6553d0a49a21754 from memory into f17
fnmadd.s f22, f5, f7, f17, dyn # perform operation
fnmadd.s f22, f5, f7, f17, rdn # perform operation
fnmadd.s f22, f5, f7, f17, rmm # perform operation
fnmadd.s f22, f5, f7, f17, rne # perform operation
fnmadd.s f22, f5, f7, f17, rtz # perform operation
fnmadd.s f22, f5, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f5, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f5, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x19, 0xf88d2af40a7fc57d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x6a113d659492393d # load x3 with value 0x6a113d659492393d
sw x3, 0(x2) # store 0x6a113d659492393d in memory
flw f31, 0(x2) # load 0x6a113d659492393d from memory into f31
fnmadd.s f19, f16, f1, f31, dyn # perform operation
fnmadd.s f19, f16, f1, f31, rdn # perform operation
fnmadd.s f19, f16, f1, f31, rmm # perform operation
fnmadd.s f19, f16, f1, f31, rne # perform operation
fnmadd.s f19, f16, f1, f31, rtz # perform operation
fnmadd.s f19, f16, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x16, 0xf83a2a97786db163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x9a08fa4e494ca1e0 # load x3 with value 0x9a08fa4e494ca1e0
sw x3, 0(x2) # store 0x9a08fa4e494ca1e0 in memory
flw f8, 0(x2) # load 0x9a08fa4e494ca1e0 from memory into f8
fnmadd.s f16, f6, f12, f8, dyn # perform operation
fnmadd.s f16, f6, f12, f8, rdn # perform operation
fnmadd.s f16, f6, f12, f8, rmm # perform operation
fnmadd.s f16, f6, f12, f8, rne # perform operation
fnmadd.s f16, f6, f12, f8, rtz # perform operation
fnmadd.s f16, f6, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f6, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x7, 0x33eb9cce47d9bec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xafd361d3a176e3f5 # load x3 with value 0xafd361d3a176e3f5
sw x3, 0(x2) # store 0xafd361d3a176e3f5 in memory
flw f13, 0(x2) # load 0xafd361d3a176e3f5 from memory into f13
fnmadd.s f7, f5, f23, f13, dyn # perform operation
fnmadd.s f7, f5, f23, f13, rdn # perform operation
fnmadd.s f7, f5, f23, f13, rmm # perform operation
fnmadd.s f7, f5, f23, f13, rne # perform operation
fnmadd.s f7, f5, f23, f13, rtz # perform operation
fnmadd.s f7, f5, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x21, 0x336c6dc8d5cda162 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x96306a8a671d29bc # load x3 with value 0x96306a8a671d29bc
sw x3, 0(x2) # store 0x96306a8a671d29bc in memory
flw f10, 0(x2) # load 0x96306a8a671d29bc from memory into f10
fnmadd.s f21, f14, f29, f10, dyn # perform operation
fnmadd.s f21, f14, f29, f10, rdn # perform operation
fnmadd.s f21, f14, f29, f10, rmm # perform operation
fnmadd.s f21, f14, f29, f10, rne # perform operation
fnmadd.s f21, f14, f29, f10, rtz # perform operation
fnmadd.s f21, f14, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x10, 0x148f20fc6091938d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x646e6cd007643ebd # load x3 with value 0x646e6cd007643ebd
sw x3, 0(x2) # store 0x646e6cd007643ebd in memory
flw f20, 0(x2) # load 0x646e6cd007643ebd from memory into f20
fnmadd.s f10, f28, f3, f20, dyn # perform operation
fnmadd.s f10, f28, f3, f20, rdn # perform operation
fnmadd.s f10, f28, f3, f20, rmm # perform operation
fnmadd.s f10, f28, f3, f20, rne # perform operation
fnmadd.s f10, f28, f3, f20, rtz # perform operation
fnmadd.s f10, f28, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x30, 0xa0d767324a118488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x5b65076fdc87807b # load x3 with value 0x5b65076fdc87807b
sw x3, 0(x2) # store 0x5b65076fdc87807b in memory
flw f22, 0(x2) # load 0x5b65076fdc87807b from memory into f22
fnmadd.s f30, f8, f31, f22, dyn # perform operation
fnmadd.s f30, f8, f31, f22, rdn # perform operation
fnmadd.s f30, f8, f31, f22, rmm # perform operation
fnmadd.s f30, f8, f31, f22, rne # perform operation
fnmadd.s f30, f8, f31, f22, rtz # perform operation
fnmadd.s f30, f8, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f8, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x4, 0x11a74729f769a49b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x6f589c237fd0488f # load x3 with value 0x6f589c237fd0488f
sw x3, 0(x2) # store 0x6f589c237fd0488f in memory
flw f23, 0(x2) # load 0x6f589c237fd0488f from memory into f23
fnmadd.s f4, f9, f28, f23, dyn # perform operation
fnmadd.s f4, f9, f28, f23, rdn # perform operation
fnmadd.s f4, f9, f28, f23, rmm # perform operation
fnmadd.s f4, f9, f28, f23, rne # perform operation
fnmadd.s f4, f9, f28, f23, rtz # perform operation
fnmadd.s f4, f9, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f9, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f9, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f9, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f9, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f9, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x10, 0xfdfb71b9669e581d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x9ab95cf74f4d2e1d # load x3 with value 0x9ab95cf74f4d2e1d
sw x3, 0(x2) # store 0x9ab95cf74f4d2e1d in memory
flw f29, 0(x2) # load 0x9ab95cf74f4d2e1d from memory into f29
fnmadd.s f10, f16, f28, f29, dyn # perform operation
fnmadd.s f10, f16, f28, f29, rdn # perform operation
fnmadd.s f10, f16, f28, f29, rmm # perform operation
fnmadd.s f10, f16, f28, f29, rne # perform operation
fnmadd.s f10, f16, f28, f29, rtz # perform operation
fnmadd.s f10, f16, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x31, 0xb4d6cc5dc4c8c862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xc6222142dbef1755 # load x3 with value 0xc6222142dbef1755
sw x3, 0(x2) # store 0xc6222142dbef1755 in memory
flw f21, 0(x2) # load 0xc6222142dbef1755 from memory into f21
fnmadd.s f31, f23, f13, f21, dyn # perform operation
fnmadd.s f31, f23, f13, f21, rdn # perform operation
fnmadd.s f31, f23, f13, f21, rmm # perform operation
fnmadd.s f31, f23, f13, f21, rne # perform operation
fnmadd.s f31, f23, f13, f21, rtz # perform operation
fnmadd.s f31, f23, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f23, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f23, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f23, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f23, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f23, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x13, 0x249d885b6db053a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x282a24c6493aed67 # load x3 with value 0x282a24c6493aed67
sw x3, 0(x2) # store 0x282a24c6493aed67 in memory
flw f22, 0(x2) # load 0x282a24c6493aed67 from memory into f22
fnmadd.s f13, f18, f27, f22, dyn # perform operation
fnmadd.s f13, f18, f27, f22, rdn # perform operation
fnmadd.s f13, f18, f27, f22, rmm # perform operation
fnmadd.s f13, f18, f27, f22, rne # perform operation
fnmadd.s f13, f18, f27, f22, rtz # perform operation
fnmadd.s f13, f18, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x15, 0xf07d9b20dca19487 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x8db6b4cefbda4260 # load x3 with value 0x8db6b4cefbda4260
sw x3, 0(x2) # store 0x8db6b4cefbda4260 in memory
flw f24, 0(x2) # load 0x8db6b4cefbda4260 from memory into f24
fnmadd.s f15, f27, f26, f24, dyn # perform operation
fnmadd.s f15, f27, f26, f24, rdn # perform operation
fnmadd.s f15, f27, f26, f24, rmm # perform operation
fnmadd.s f15, f27, f26, f24, rne # perform operation
fnmadd.s f15, f27, f26, f24, rtz # perform operation
fnmadd.s f15, f27, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x8, 0xfe4f1d7a1bc63cf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x8988b7d4acd680e0 # load x3 with value 0x8988b7d4acd680e0
sw x3, 0(x2) # store 0x8988b7d4acd680e0 in memory
flw f16, 0(x2) # load 0x8988b7d4acd680e0 from memory into f16
fnmadd.s f8, f10, f5, f16, dyn # perform operation
fnmadd.s f8, f10, f5, f16, rdn # perform operation
fnmadd.s f8, f10, f5, f16, rmm # perform operation
fnmadd.s f8, f10, f5, f16, rne # perform operation
fnmadd.s f8, f10, f5, f16, rtz # perform operation
fnmadd.s f8, f10, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x12, 0x27a64eac129cb7a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x6274e5bb2a0cd099 # load x3 with value 0x6274e5bb2a0cd099
sw x3, 0(x2) # store 0x6274e5bb2a0cd099 in memory
flw f6, 0(x2) # load 0x6274e5bb2a0cd099 from memory into f6
fnmadd.s f12, f8, f26, f6, dyn # perform operation
fnmadd.s f12, f8, f26, f6, rdn # perform operation
fnmadd.s f12, f8, f26, f6, rmm # perform operation
fnmadd.s f12, f8, f26, f6, rne # perform operation
fnmadd.s f12, f8, f26, f6, rtz # perform operation
fnmadd.s f12, f8, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x1, 0x17375cffaf0332e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x407e5abb64f3e99c # load x3 with value 0x407e5abb64f3e99c
sw x3, 0(x2) # store 0x407e5abb64f3e99c in memory
flw f10, 0(x2) # load 0x407e5abb64f3e99c from memory into f10
fnmadd.s f1, f18, f11, f10, dyn # perform operation
fnmadd.s f1, f18, f11, f10, rdn # perform operation
fnmadd.s f1, f18, f11, f10, rmm # perform operation
fnmadd.s f1, f18, f11, f10, rne # perform operation
fnmadd.s f1, f18, f11, f10, rtz # perform operation
fnmadd.s f1, f18, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x17, 0x4a5fcf6649fa828d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x693b8760b89ab7f8 # load x3 with value 0x693b8760b89ab7f8
sw x3, 0(x2) # store 0x693b8760b89ab7f8 in memory
flw f11, 0(x2) # load 0x693b8760b89ab7f8 from memory into f11
fnmadd.s f17, f29, f27, f11, dyn # perform operation
fnmadd.s f17, f29, f27, f11, rdn # perform operation
fnmadd.s f17, f29, f27, f11, rmm # perform operation
fnmadd.s f17, f29, f27, f11, rne # perform operation
fnmadd.s f17, f29, f27, f11, rtz # perform operation
fnmadd.s f17, f29, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f29, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x2, 0xfca01e57e6506277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x5074e910885318ad # load x3 with value 0x5074e910885318ad
sw x3, 0(x2) # store 0x5074e910885318ad in memory
flw f8, 0(x2) # load 0x5074e910885318ad from memory into f8
fnmadd.s f2, f17, f1, f8, dyn # perform operation
fnmadd.s f2, f17, f1, f8, rdn # perform operation
fnmadd.s f2, f17, f1, f8, rmm # perform operation
fnmadd.s f2, f17, f1, f8, rne # perform operation
fnmadd.s f2, f17, f1, f8, rtz # perform operation
fnmadd.s f2, f17, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x16, 0xb909ba6a3e08abb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x456c6e01e7a64c99 # load x3 with value 0x456c6e01e7a64c99
sw x3, 0(x2) # store 0x456c6e01e7a64c99 in memory
flw f18, 0(x2) # load 0x456c6e01e7a64c99 from memory into f18
fnmadd.s f16, f29, f11, f18, dyn # perform operation
fnmadd.s f16, f29, f11, f18, rdn # perform operation
fnmadd.s f16, f29, f11, f18, rmm # perform operation
fnmadd.s f16, f29, f11, f18, rne # perform operation
fnmadd.s f16, f29, f11, f18, rtz # perform operation
fnmadd.s f16, f29, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x22, 0x6f0a7532d2eabfc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xa6ed65b555054fe4 # load x3 with value 0xa6ed65b555054fe4
sw x3, 0(x2) # store 0xa6ed65b555054fe4 in memory
flw f1, 0(x2) # load 0xa6ed65b555054fe4 from memory into f1
fnmadd.s f22, f30, f6, f1, dyn # perform operation
fnmadd.s f22, f30, f6, f1, rdn # perform operation
fnmadd.s f22, f30, f6, f1, rmm # perform operation
fnmadd.s f22, f30, f6, f1, rne # perform operation
fnmadd.s f22, f30, f6, f1, rtz # perform operation
fnmadd.s f22, f30, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f30, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x7, 0xf2b9ab03d4797c00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x3794b59ae9126845 # load x3 with value 0x3794b59ae9126845
sw x3, 0(x2) # store 0x3794b59ae9126845 in memory
flw f8, 0(x2) # load 0x3794b59ae9126845 from memory into f8
fnmadd.s f7, f17, f9, f8, dyn # perform operation
fnmadd.s f7, f17, f9, f8, rdn # perform operation
fnmadd.s f7, f17, f9, f8, rmm # perform operation
fnmadd.s f7, f17, f9, f8, rne # perform operation
fnmadd.s f7, f17, f9, f8, rtz # perform operation
fnmadd.s f7, f17, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f17, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f17, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f17, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f17, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f17, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x14, 0x5ccb386431582705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xb8c3d80f6d928a5e # load x3 with value 0xb8c3d80f6d928a5e
sw x3, 0(x2) # store 0xb8c3d80f6d928a5e in memory
flw f28, 0(x2) # load 0xb8c3d80f6d928a5e from memory into f28
fnmadd.s f14, f13, f25, f28, dyn # perform operation
fnmadd.s f14, f13, f25, f28, rdn # perform operation
fnmadd.s f14, f13, f25, f28, rmm # perform operation
fnmadd.s f14, f13, f25, f28, rne # perform operation
fnmadd.s f14, f13, f25, f28, rtz # perform operation
fnmadd.s f14, f13, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x28, 0x6adc78021ab31533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xd279d802ba6b5791 # load x3 with value 0xd279d802ba6b5791
sw x3, 0(x2) # store 0xd279d802ba6b5791 in memory
flw f25, 0(x2) # load 0xd279d802ba6b5791 from memory into f25
fnmadd.s f28, f26, f21, f25, dyn # perform operation
fnmadd.s f28, f26, f21, f25, rdn # perform operation
fnmadd.s f28, f26, f21, f25, rmm # perform operation
fnmadd.s f28, f26, f21, f25, rne # perform operation
fnmadd.s f28, f26, f21, f25, rtz # perform operation
fnmadd.s f28, f26, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x20, 0xfbf03bd51c5914dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xa26f08a84d03049b # load x3 with value 0xa26f08a84d03049b
sw x3, 0(x2) # store 0xa26f08a84d03049b in memory
flw f8, 0(x2) # load 0xa26f08a84d03049b from memory into f8
fnmadd.s f20, f2, f28, f8, dyn # perform operation
fnmadd.s f20, f2, f28, f8, rdn # perform operation
fnmadd.s f20, f2, f28, f8, rmm # perform operation
fnmadd.s f20, f2, f28, f8, rne # perform operation
fnmadd.s f20, f2, f28, f8, rtz # perform operation
fnmadd.s f20, f2, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x30, 0x1a62d85a265b7cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x2bd7ad15b7abfe1a # load x3 with value 0x2bd7ad15b7abfe1a
sw x3, 0(x2) # store 0x2bd7ad15b7abfe1a in memory
flw f15, 0(x2) # load 0x2bd7ad15b7abfe1a from memory into f15
fnmadd.s f30, f7, f17, f15, dyn # perform operation
fnmadd.s f30, f7, f17, f15, rdn # perform operation
fnmadd.s f30, f7, f17, f15, rmm # perform operation
fnmadd.s f30, f7, f17, f15, rne # perform operation
fnmadd.s f30, f7, f17, f15, rtz # perform operation
fnmadd.s f30, f7, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x21, 0x1b02a2f01f19a4e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x7c1f10ffd4470d97 # load x3 with value 0x7c1f10ffd4470d97
sw x3, 0(x2) # store 0x7c1f10ffd4470d97 in memory
flw f19, 0(x2) # load 0x7c1f10ffd4470d97 from memory into f19
fnmadd.s f21, f28, f27, f19, dyn # perform operation
fnmadd.s f21, f28, f27, f19, rdn # perform operation
fnmadd.s f21, f28, f27, f19, rmm # perform operation
fnmadd.s f21, f28, f27, f19, rne # perform operation
fnmadd.s f21, f28, f27, f19, rtz # perform operation
fnmadd.s f21, f28, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f28, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x25, 0x35777fd085b4875a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xc0236d74867244f9 # load x3 with value 0xc0236d74867244f9
sw x3, 0(x2) # store 0xc0236d74867244f9 in memory
flw f26, 0(x2) # load 0xc0236d74867244f9 from memory into f26
fnmadd.s f25, f20, f14, f26, dyn # perform operation
fnmadd.s f25, f20, f14, f26, rdn # perform operation
fnmadd.s f25, f20, f14, f26, rmm # perform operation
fnmadd.s f25, f20, f14, f26, rne # perform operation
fnmadd.s f25, f20, f14, f26, rtz # perform operation
fnmadd.s f25, f20, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x10, 0xd53a2911bdeea346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xbfec3969155c0feb # load x3 with value 0xbfec3969155c0feb
sw x3, 0(x2) # store 0xbfec3969155c0feb in memory
flw f29, 0(x2) # load 0xbfec3969155c0feb from memory into f29
fnmadd.s f10, f26, f30, f29, dyn # perform operation
fnmadd.s f10, f26, f30, f29, rdn # perform operation
fnmadd.s f10, f26, f30, f29, rmm # perform operation
fnmadd.s f10, f26, f30, f29, rne # perform operation
fnmadd.s f10, f26, f30, f29, rtz # perform operation
fnmadd.s f10, f26, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x14, 0x3a4001b6069e80da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x8c7e29949d6e4a26 # load x3 with value 0x8c7e29949d6e4a26
sw x3, 0(x2) # store 0x8c7e29949d6e4a26 in memory
flw f8, 0(x2) # load 0x8c7e29949d6e4a26 from memory into f8
fnmadd.s f14, f5, f1, f8, dyn # perform operation
fnmadd.s f14, f5, f1, f8, rdn # perform operation
fnmadd.s f14, f5, f1, f8, rmm # perform operation
fnmadd.s f14, f5, f1, f8, rne # perform operation
fnmadd.s f14, f5, f1, f8, rtz # perform operation
fnmadd.s f14, f5, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f5, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f5, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f5, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f5, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f5, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x23, 0xbe1504dca833238e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xbad2deb5210e2fd7 # load x3 with value 0xbad2deb5210e2fd7
sw x3, 0(x2) # store 0xbad2deb5210e2fd7 in memory
flw f28, 0(x2) # load 0xbad2deb5210e2fd7 from memory into f28
fnmadd.s f23, f24, f26, f28, dyn # perform operation
fnmadd.s f23, f24, f26, f28, rdn # perform operation
fnmadd.s f23, f24, f26, f28, rmm # perform operation
fnmadd.s f23, f24, f26, f28, rne # perform operation
fnmadd.s f23, f24, f26, f28, rtz # perform operation
fnmadd.s f23, f24, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f24, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x8, 0x3b1f04d99754550f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x6372b6de754c8617 # load x3 with value 0x6372b6de754c8617
sw x3, 0(x2) # store 0x6372b6de754c8617 in memory
flw f25, 0(x2) # load 0x6372b6de754c8617 from memory into f25
fnmadd.s f8, f23, f31, f25, dyn # perform operation
fnmadd.s f8, f23, f31, f25, rdn # perform operation
fnmadd.s f8, f23, f31, f25, rmm # perform operation
fnmadd.s f8, f23, f31, f25, rne # perform operation
fnmadd.s f8, f23, f31, f25, rtz # perform operation
fnmadd.s f8, f23, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x20, 0x2e88a60591a9d33d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0xbb8d8176e5cf2b8e # load x3 with value 0xbb8d8176e5cf2b8e
sw x3, 0(x2) # store 0xbb8d8176e5cf2b8e in memory
flw f8, 0(x2) # load 0xbb8d8176e5cf2b8e from memory into f8
fnmadd.s f20, f1, f21, f8, dyn # perform operation
fnmadd.s f20, f1, f21, f8, rdn # perform operation
fnmadd.s f20, f1, f21, f8, rmm # perform operation
fnmadd.s f20, f1, f21, f8, rne # perform operation
fnmadd.s f20, f1, f21, f8, rtz # perform operation
fnmadd.s f20, f1, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f1, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x14, 0x1893f7491f6bbfa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x54ed307a65944c68 # load x3 with value 0x54ed307a65944c68
sw x3, 0(x2) # store 0x54ed307a65944c68 in memory
flw f27, 0(x2) # load 0x54ed307a65944c68 from memory into f27
fnmadd.s f14, f22, f20, f27, dyn # perform operation
fnmadd.s f14, f22, f20, f27, rdn # perform operation
fnmadd.s f14, f22, f20, f27, rmm # perform operation
fnmadd.s f14, f22, f20, f27, rne # perform operation
fnmadd.s f14, f22, f20, f27, rtz # perform operation
fnmadd.s f14, f22, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x21, 0xbf0250005bddd3bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x2c276693660d7249 # load x3 with value 0x2c276693660d7249
sw x3, 0(x2) # store 0x2c276693660d7249 in memory
flw f26, 0(x2) # load 0x2c276693660d7249 from memory into f26
fnmadd.s f21, f7, f6, f26, dyn # perform operation
fnmadd.s f21, f7, f6, f26, rdn # perform operation
fnmadd.s f21, f7, f6, f26, rmm # perform operation
fnmadd.s f21, f7, f6, f26, rne # perform operation
fnmadd.s f21, f7, f6, f26, rtz # perform operation
fnmadd.s f21, f7, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f7, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f7, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f7, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f7, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f7, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x5, 0x4c9aa9b0db0a80bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x515f6f1a522889f4 # load x3 with value 0x515f6f1a522889f4
sw x3, 0(x2) # store 0x515f6f1a522889f4 in memory
flw f10, 0(x2) # load 0x515f6f1a522889f4 from memory into f10
fnmadd.s f5, f11, f15, f10, dyn # perform operation
fnmadd.s f5, f11, f15, f10, rdn # perform operation
fnmadd.s f5, f11, f15, f10, rmm # perform operation
fnmadd.s f5, f11, f15, f10, rne # perform operation
fnmadd.s f5, f11, f15, f10, rtz # perform operation
fnmadd.s f5, f11, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x17, 0x796cf84abf597fbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x3396bb4b1204aec9 # load x3 with value 0x3396bb4b1204aec9
sw x3, 0(x2) # store 0x3396bb4b1204aec9 in memory
flw f29, 0(x2) # load 0x3396bb4b1204aec9 from memory into f29
fnmadd.s f17, f16, f21, f29, dyn # perform operation
fnmadd.s f17, f16, f21, f29, rdn # perform operation
fnmadd.s f17, f16, f21, f29, rmm # perform operation
fnmadd.s f17, f16, f21, f29, rne # perform operation
fnmadd.s f17, f16, f21, f29, rtz # perform operation
fnmadd.s f17, f16, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f16, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x7, 0x43e734c41509883e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x8603ff36af270a69 # load x3 with value 0x8603ff36af270a69
sw x3, 0(x2) # store 0x8603ff36af270a69 in memory
flw f26, 0(x2) # load 0x8603ff36af270a69 from memory into f26
fnmadd.s f7, f8, f20, f26, dyn # perform operation
fnmadd.s f7, f8, f20, f26, rdn # perform operation
fnmadd.s f7, f8, f20, f26, rmm # perform operation
fnmadd.s f7, f8, f20, f26, rne # perform operation
fnmadd.s f7, f8, f20, f26, rtz # perform operation
fnmadd.s f7, f8, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x14, 0x8348e2df1287229f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0xcd47d57120bc481d # load x3 with value 0xcd47d57120bc481d
sw x3, 0(x2) # store 0xcd47d57120bc481d in memory
flw f18, 0(x2) # load 0xcd47d57120bc481d from memory into f18
fnmadd.s f14, f29, f8, f18, dyn # perform operation
fnmadd.s f14, f29, f8, f18, rdn # perform operation
fnmadd.s f14, f29, f8, f18, rmm # perform operation
fnmadd.s f14, f29, f8, f18, rne # perform operation
fnmadd.s f14, f29, f8, f18, rtz # perform operation
fnmadd.s f14, f29, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x19, 0x2cf60c2bc43bb70d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x3d6cafd5ce57a04 # load x3 with value 0x3d6cafd5ce57a04
sw x3, 0(x2) # store 0x3d6cafd5ce57a04 in memory
flw f20, 0(x2) # load 0x3d6cafd5ce57a04 from memory into f20
fnmadd.s f19, f24, f25, f20, dyn # perform operation
fnmadd.s f19, f24, f25, f20, rdn # perform operation
fnmadd.s f19, f24, f25, f20, rmm # perform operation
fnmadd.s f19, f24, f25, f20, rne # perform operation
fnmadd.s f19, f24, f25, f20, rtz # perform operation
fnmadd.s f19, f24, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x31, 0xda25a9a697de52fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0xf5c1838d44b049ad # load x3 with value 0xf5c1838d44b049ad
sw x3, 0(x2) # store 0xf5c1838d44b049ad in memory
flw f11, 0(x2) # load 0xf5c1838d44b049ad from memory into f11
fnmadd.s f31, f12, f16, f11, dyn # perform operation
fnmadd.s f31, f12, f16, f11, rdn # perform operation
fnmadd.s f31, f12, f16, f11, rmm # perform operation
fnmadd.s f31, f12, f16, f11, rne # perform operation
fnmadd.s f31, f12, f16, f11, rtz # perform operation
fnmadd.s f31, f12, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x12, 0x24d1e99336037a8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x8bf044302c69426b # load x3 with value 0x8bf044302c69426b
sw x3, 0(x2) # store 0x8bf044302c69426b in memory
flw f11, 0(x2) # load 0x8bf044302c69426b from memory into f11
fnmadd.s f12, f22, f3, f11, dyn # perform operation
fnmadd.s f12, f22, f3, f11, rdn # perform operation
fnmadd.s f12, f22, f3, f11, rmm # perform operation
fnmadd.s f12, f22, f3, f11, rne # perform operation
fnmadd.s f12, f22, f3, f11, rtz # perform operation
fnmadd.s f12, f22, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x28, 0xd808b5da802e8843 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xd9ee2a4efa02aa04 # load x3 with value 0xd9ee2a4efa02aa04
sw x3, 0(x2) # store 0xd9ee2a4efa02aa04 in memory
flw f23, 0(x2) # load 0xd9ee2a4efa02aa04 from memory into f23
fnmadd.s f28, f30, f17, f23, dyn # perform operation
fnmadd.s f28, f30, f17, f23, rdn # perform operation
fnmadd.s f28, f30, f17, f23, rmm # perform operation
fnmadd.s f28, f30, f17, f23, rne # perform operation
fnmadd.s f28, f30, f17, f23, rtz # perform operation
fnmadd.s f28, f30, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x4, 0xcd10d94a3e479a0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x82f5260442d5ea84 # load x3 with value 0x82f5260442d5ea84
sw x3, 0(x2) # store 0x82f5260442d5ea84 in memory
flw f18, 0(x2) # load 0x82f5260442d5ea84 from memory into f18
fnmadd.s f4, f16, f1, f18, dyn # perform operation
fnmadd.s f4, f16, f1, f18, rdn # perform operation
fnmadd.s f4, f16, f1, f18, rmm # perform operation
fnmadd.s f4, f16, f1, f18, rne # perform operation
fnmadd.s f4, f16, f1, f18, rtz # perform operation
fnmadd.s f4, f16, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f16, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f16, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x10, 0x4359431eb3d9cf19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0xd39a0ba7af799e9f # load x3 with value 0xd39a0ba7af799e9f
sw x3, 0(x2) # store 0xd39a0ba7af799e9f in memory
flw f17, 0(x2) # load 0xd39a0ba7af799e9f from memory into f17
fnmadd.s f10, f12, f8, f17, dyn # perform operation
fnmadd.s f10, f12, f8, f17, rdn # perform operation
fnmadd.s f10, f12, f8, f17, rmm # perform operation
fnmadd.s f10, f12, f8, f17, rne # perform operation
fnmadd.s f10, f12, f8, f17, rtz # perform operation
fnmadd.s f10, f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f12, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x10, 0x7cd112ba64c88b85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x9e93450602882e34 # load x3 with value 0x9e93450602882e34
sw x3, 0(x2) # store 0x9e93450602882e34 in memory
flw f6, 0(x2) # load 0x9e93450602882e34 from memory into f6
fnmadd.s f10, f26, f16, f6, dyn # perform operation
fnmadd.s f10, f26, f16, f6, rdn # perform operation
fnmadd.s f10, f26, f16, f6, rmm # perform operation
fnmadd.s f10, f26, f16, f6, rne # perform operation
fnmadd.s f10, f26, f16, f6, rtz # perform operation
fnmadd.s f10, f26, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x8, 0xc33cea15b094bd92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xd80bab0dfa2052c # load x3 with value 0xd80bab0dfa2052c
sw x3, 0(x2) # store 0xd80bab0dfa2052c in memory
flw f9, 0(x2) # load 0xd80bab0dfa2052c from memory into f9
fnmadd.s f8, f12, f23, f9, dyn # perform operation
fnmadd.s f8, f12, f23, f9, rdn # perform operation
fnmadd.s f8, f12, f23, f9, rmm # perform operation
fnmadd.s f8, f12, f23, f9, rne # perform operation
fnmadd.s f8, f12, f23, f9, rtz # perform operation
fnmadd.s f8, f12, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x24, 0x48f36faf1e396594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0xf5837d4fb54b3618 # load x3 with value 0xf5837d4fb54b3618
sw x3, 0(x2) # store 0xf5837d4fb54b3618 in memory
flw f6, 0(x2) # load 0xf5837d4fb54b3618 from memory into f6
fnmadd.s f24, f4, f23, f6, dyn # perform operation
fnmadd.s f24, f4, f23, f6, rdn # perform operation
fnmadd.s f24, f4, f23, f6, rmm # perform operation
fnmadd.s f24, f4, f23, f6, rne # perform operation
fnmadd.s f24, f4, f23, f6, rtz # perform operation
fnmadd.s f24, f4, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f4, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f4, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f4, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f4, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f4, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x23, 0xcefb14d3374905fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x58b6da4122bc0987 # load x3 with value 0x58b6da4122bc0987
sw x3, 0(x2) # store 0x58b6da4122bc0987 in memory
flw f10, 0(x2) # load 0x58b6da4122bc0987 from memory into f10
fnmadd.s f23, f30, f25, f10, dyn # perform operation
fnmadd.s f23, f30, f25, f10, rdn # perform operation
fnmadd.s f23, f30, f25, f10, rmm # perform operation
fnmadd.s f23, f30, f25, f10, rne # perform operation
fnmadd.s f23, f30, f25, f10, rtz # perform operation
fnmadd.s f23, f30, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x31, 0x4b60ddf1e000eb75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x616257061d217bae # load x3 with value 0x616257061d217bae
sw x3, 0(x2) # store 0x616257061d217bae in memory
flw f9, 0(x2) # load 0x616257061d217bae from memory into f9
fnmadd.s f31, f25, f27, f9, dyn # perform operation
fnmadd.s f31, f25, f27, f9, rdn # perform operation
fnmadd.s f31, f25, f27, f9, rmm # perform operation
fnmadd.s f31, f25, f27, f9, rne # perform operation
fnmadd.s f31, f25, f27, f9, rtz # perform operation
fnmadd.s f31, f25, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f25, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f25, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f25, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f25, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f25, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x10, 0x8eed2d84aadb7f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xd766240bd40b381c # load x3 with value 0xd766240bd40b381c
sw x3, 0(x2) # store 0xd766240bd40b381c in memory
flw f5, 0(x2) # load 0xd766240bd40b381c from memory into f5
fnmadd.s f10, f1, f12, f5, dyn # perform operation
fnmadd.s f10, f1, f12, f5, rdn # perform operation
fnmadd.s f10, f1, f12, f5, rmm # perform operation
fnmadd.s f10, f1, f12, f5, rne # perform operation
fnmadd.s f10, f1, f12, f5, rtz # perform operation
fnmadd.s f10, f1, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x26, 0x707d77824bc6e550 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xad047986bd5cc046 # load x3 with value 0xad047986bd5cc046
sw x3, 0(x2) # store 0xad047986bd5cc046 in memory
flw f18, 0(x2) # load 0xad047986bd5cc046 from memory into f18
fnmadd.s f26, f13, f3, f18, dyn # perform operation
fnmadd.s f26, f13, f3, f18, rdn # perform operation
fnmadd.s f26, f13, f3, f18, rmm # perform operation
fnmadd.s f26, f13, f3, f18, rne # perform operation
fnmadd.s f26, f13, f3, f18, rtz # perform operation
fnmadd.s f26, f13, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x15, 0xebe71ae17b015313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x9addf0c60875e111 # load x3 with value 0x9addf0c60875e111
sw x3, 0(x2) # store 0x9addf0c60875e111 in memory
flw f30, 0(x2) # load 0x9addf0c60875e111 from memory into f30
fnmadd.s f15, f26, f7, f30, dyn # perform operation
fnmadd.s f15, f26, f7, f30, rdn # perform operation
fnmadd.s f15, f26, f7, f30, rmm # perform operation
fnmadd.s f15, f26, f7, f30, rne # perform operation
fnmadd.s f15, f26, f7, f30, rtz # perform operation
fnmadd.s f15, f26, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x2, 0xcd191393534005bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x4bda61e1fdd9428f # load x3 with value 0x4bda61e1fdd9428f
sw x3, 0(x2) # store 0x4bda61e1fdd9428f in memory
flw f7, 0(x2) # load 0x4bda61e1fdd9428f from memory into f7
fnmadd.s f2, f31, f18, f7, dyn # perform operation
fnmadd.s f2, f31, f18, f7, rdn # perform operation
fnmadd.s f2, f31, f18, f7, rmm # perform operation
fnmadd.s f2, f31, f18, f7, rne # perform operation
fnmadd.s f2, f31, f18, f7, rtz # perform operation
fnmadd.s f2, f31, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x24, 0x6110c4e893fbbf7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0xb43b163cf1aec29 # load x3 with value 0xb43b163cf1aec29
sw x3, 0(x2) # store 0xb43b163cf1aec29 in memory
flw f4, 0(x2) # load 0xb43b163cf1aec29 from memory into f4
fnmadd.s f24, f29, f21, f4, dyn # perform operation
fnmadd.s f24, f29, f21, f4, rdn # perform operation
fnmadd.s f24, f29, f21, f4, rmm # perform operation
fnmadd.s f24, f29, f21, f4, rne # perform operation
fnmadd.s f24, f29, f21, f4, rtz # perform operation
fnmadd.s f24, f29, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x15, 0x67b6cca7bb2b87a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x20cbd7800d34c1bd # load x3 with value 0x20cbd7800d34c1bd
sw x3, 0(x2) # store 0x20cbd7800d34c1bd in memory
flw f30, 0(x2) # load 0x20cbd7800d34c1bd from memory into f30
fnmadd.s f15, f3, f5, f30, dyn # perform operation
fnmadd.s f15, f3, f5, f30, rdn # perform operation
fnmadd.s f15, f3, f5, f30, rmm # perform operation
fnmadd.s f15, f3, f5, f30, rne # perform operation
fnmadd.s f15, f3, f5, f30, rtz # perform operation
fnmadd.s f15, f3, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x3, 0xafc937ee032a1c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x3b42069d4e80d63e # load x3 with value 0x3b42069d4e80d63e
sw x3, 0(x2) # store 0x3b42069d4e80d63e in memory
flw f10, 0(x2) # load 0x3b42069d4e80d63e from memory into f10
fnmadd.s f3, f23, f27, f10, dyn # perform operation
fnmadd.s f3, f23, f27, f10, rdn # perform operation
fnmadd.s f3, f23, f27, f10, rmm # perform operation
fnmadd.s f3, f23, f27, f10, rne # perform operation
fnmadd.s f3, f23, f27, f10, rtz # perform operation
fnmadd.s f3, f23, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x13, 0x69563116221ee9b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x8742f194b4432ae # load x3 with value 0x8742f194b4432ae
sw x3, 0(x2) # store 0x8742f194b4432ae in memory
flw f7, 0(x2) # load 0x8742f194b4432ae from memory into f7
fnmadd.s f13, f24, f21, f7, dyn # perform operation
fnmadd.s f13, f24, f21, f7, rdn # perform operation
fnmadd.s f13, f24, f21, f7, rmm # perform operation
fnmadd.s f13, f24, f21, f7, rne # perform operation
fnmadd.s f13, f24, f21, f7, rtz # perform operation
fnmadd.s f13, f24, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x28, 0x6fb21de520ee2492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x8539c4acc16bdb3a # load x3 with value 0x8539c4acc16bdb3a
sw x3, 0(x2) # store 0x8539c4acc16bdb3a in memory
flw f23, 0(x2) # load 0x8539c4acc16bdb3a from memory into f23
fnmadd.s f28, f29, f9, f23, dyn # perform operation
fnmadd.s f28, f29, f9, f23, rdn # perform operation
fnmadd.s f28, f29, f9, f23, rmm # perform operation
fnmadd.s f28, f29, f9, f23, rne # perform operation
fnmadd.s f28, f29, f9, f23, rtz # perform operation
fnmadd.s f28, f29, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x9, 0x8167f8a641e21e79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x884a5e3cee3696da # load x3 with value 0x884a5e3cee3696da
sw x3, 0(x2) # store 0x884a5e3cee3696da in memory
flw f8, 0(x2) # load 0x884a5e3cee3696da from memory into f8
fnmadd.s f9, f20, f2, f8, dyn # perform operation
fnmadd.s f9, f20, f2, f8, rdn # perform operation
fnmadd.s f9, f20, f2, f8, rmm # perform operation
fnmadd.s f9, f20, f2, f8, rne # perform operation
fnmadd.s f9, f20, f2, f8, rtz # perform operation
fnmadd.s f9, f20, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x25, 0x65055b51b2a84967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x87a164497255657e # load x3 with value 0x87a164497255657e
sw x3, 0(x2) # store 0x87a164497255657e in memory
flw f7, 0(x2) # load 0x87a164497255657e from memory into f7
fnmadd.s f25, f12, f17, f7, dyn # perform operation
fnmadd.s f25, f12, f17, f7, rdn # perform operation
fnmadd.s f25, f12, f17, f7, rmm # perform operation
fnmadd.s f25, f12, f17, f7, rne # perform operation
fnmadd.s f25, f12, f17, f7, rtz # perform operation
fnmadd.s f25, f12, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x29, 0x739dbfdab199e8b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x4d9fee8d274c2e20 # load x3 with value 0x4d9fee8d274c2e20
sw x3, 0(x2) # store 0x4d9fee8d274c2e20 in memory
flw f22, 0(x2) # load 0x4d9fee8d274c2e20 from memory into f22
fnmadd.s f29, f12, f19, f22, dyn # perform operation
fnmadd.s f29, f12, f19, f22, rdn # perform operation
fnmadd.s f29, f12, f19, f22, rmm # perform operation
fnmadd.s f29, f12, f19, f22, rne # perform operation
fnmadd.s f29, f12, f19, f22, rtz # perform operation
fnmadd.s f29, f12, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x30, 0x4c33ddf46095f11e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x734e78a721cd6dc3 # load x3 with value 0x734e78a721cd6dc3
sw x3, 0(x2) # store 0x734e78a721cd6dc3 in memory
flw f12, 0(x2) # load 0x734e78a721cd6dc3 from memory into f12
fnmadd.s f30, f2, f14, f12, dyn # perform operation
fnmadd.s f30, f2, f14, f12, rdn # perform operation
fnmadd.s f30, f2, f14, f12, rmm # perform operation
fnmadd.s f30, f2, f14, f12, rne # perform operation
fnmadd.s f30, f2, f14, f12, rtz # perform operation
fnmadd.s f30, f2, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x21, 0xb2cfc8fa61c32c12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x944562cc6ab9434f # load x3 with value 0x944562cc6ab9434f
sw x3, 0(x2) # store 0x944562cc6ab9434f in memory
flw f29, 0(x2) # load 0x944562cc6ab9434f from memory into f29
fnmadd.s f21, f23, f10, f29, dyn # perform operation
fnmadd.s f21, f23, f10, f29, rdn # perform operation
fnmadd.s f21, f23, f10, f29, rmm # perform operation
fnmadd.s f21, f23, f10, f29, rne # perform operation
fnmadd.s f21, f23, f10, f29, rtz # perform operation
fnmadd.s f21, f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x19, 0x038054bf66177d2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x26af764f710b8a44 # load x3 with value 0x26af764f710b8a44
sw x3, 0(x2) # store 0x26af764f710b8a44 in memory
flw f15, 0(x2) # load 0x26af764f710b8a44 from memory into f15
fnmadd.s f19, f25, f3, f15, dyn # perform operation
fnmadd.s f19, f25, f3, f15, rdn # perform operation
fnmadd.s f19, f25, f3, f15, rmm # perform operation
fnmadd.s f19, f25, f3, f15, rne # perform operation
fnmadd.s f19, f25, f3, f15, rtz # perform operation
fnmadd.s f19, f25, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x4, 0x33d1f11d2f87f677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x7a1eeaa3896c91f9 # load x3 with value 0x7a1eeaa3896c91f9
sw x3, 0(x2) # store 0x7a1eeaa3896c91f9 in memory
flw f29, 0(x2) # load 0x7a1eeaa3896c91f9 from memory into f29
fnmadd.s f4, f18, f7, f29, dyn # perform operation
fnmadd.s f4, f18, f7, f29, rdn # perform operation
fnmadd.s f4, f18, f7, f29, rmm # perform operation
fnmadd.s f4, f18, f7, f29, rne # perform operation
fnmadd.s f4, f18, f7, f29, rtz # perform operation
fnmadd.s f4, f18, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f18, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x2, 0xbc764d8142ec5855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x4ebd4c7a0ef640b1 # load x3 with value 0x4ebd4c7a0ef640b1
sw x3, 0(x2) # store 0x4ebd4c7a0ef640b1 in memory
flw f13, 0(x2) # load 0x4ebd4c7a0ef640b1 from memory into f13
fnmadd.s f2, f30, f1, f13, dyn # perform operation
fnmadd.s f2, f30, f1, f13, rdn # perform operation
fnmadd.s f2, f30, f1, f13, rmm # perform operation
fnmadd.s f2, f30, f1, f13, rne # perform operation
fnmadd.s f2, f30, f1, f13, rtz # perform operation
fnmadd.s f2, f30, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x19, 0xcf5b679e988ddb2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x9e2bada33d2488bc # load x3 with value 0x9e2bada33d2488bc
sw x3, 0(x2) # store 0x9e2bada33d2488bc in memory
flw f31, 0(x2) # load 0x9e2bada33d2488bc from memory into f31
fnmadd.s f19, f4, f9, f31, dyn # perform operation
fnmadd.s f19, f4, f9, f31, rdn # perform operation
fnmadd.s f19, f4, f9, f31, rmm # perform operation
fnmadd.s f19, f4, f9, f31, rne # perform operation
fnmadd.s f19, f4, f9, f31, rtz # perform operation
fnmadd.s f19, f4, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f4, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f4, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x11, 0xeb928b3e81b05b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x9d353d9cfd89d87f # load x3 with value 0x9d353d9cfd89d87f
sw x3, 0(x2) # store 0x9d353d9cfd89d87f in memory
flw f13, 0(x2) # load 0x9d353d9cfd89d87f from memory into f13
fnmadd.s f11, f30, f18, f13, dyn # perform operation
fnmadd.s f11, f30, f18, f13, rdn # perform operation
fnmadd.s f11, f30, f18, f13, rmm # perform operation
fnmadd.s f11, f30, f18, f13, rne # perform operation
fnmadd.s f11, f30, f18, f13, rtz # perform operation
fnmadd.s f11, f30, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x28, 0x60a85ac5324858a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xf6226230c677537a # load x3 with value 0xf6226230c677537a
sw x3, 0(x2) # store 0xf6226230c677537a in memory
flw f1, 0(x2) # load 0xf6226230c677537a from memory into f1
fnmadd.s f28, f21, f12, f1, dyn # perform operation
fnmadd.s f28, f21, f12, f1, rdn # perform operation
fnmadd.s f28, f21, f12, f1, rmm # perform operation
fnmadd.s f28, f21, f12, f1, rne # perform operation
fnmadd.s f28, f21, f12, f1, rtz # perform operation
fnmadd.s f28, f21, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x10, 0xe05bb99063237278 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x8e05217489329ecc # load x3 with value 0x8e05217489329ecc
sw x3, 0(x2) # store 0x8e05217489329ecc in memory
flw f14, 0(x2) # load 0x8e05217489329ecc from memory into f14
fnmadd.s f10, f26, f30, f14, dyn # perform operation
fnmadd.s f10, f26, f30, f14, rdn # perform operation
fnmadd.s f10, f26, f30, f14, rmm # perform operation
fnmadd.s f10, f26, f30, f14, rne # perform operation
fnmadd.s f10, f26, f30, f14, rtz # perform operation
fnmadd.s f10, f26, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x1, 0x6edf04b6ed34aebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xc49e795f9c94776c # load x3 with value 0xc49e795f9c94776c
sw x3, 0(x2) # store 0xc49e795f9c94776c in memory
flw f13, 0(x2) # load 0xc49e795f9c94776c from memory into f13
fnmadd.s f1, f23, f27, f13, dyn # perform operation
fnmadd.s f1, f23, f27, f13, rdn # perform operation
fnmadd.s f1, f23, f27, f13, rmm # perform operation
fnmadd.s f1, f23, f27, f13, rne # perform operation
fnmadd.s f1, f23, f27, f13, rtz # perform operation
fnmadd.s f1, f23, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x12, 0xdd1eab69470b4d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0xa2ff6443f071bb21 # load x3 with value 0xa2ff6443f071bb21
sw x3, 0(x2) # store 0xa2ff6443f071bb21 in memory
flw f9, 0(x2) # load 0xa2ff6443f071bb21 from memory into f9
fnmadd.s f12, f13, f5, f9, dyn # perform operation
fnmadd.s f12, f13, f5, f9, rdn # perform operation
fnmadd.s f12, f13, f5, f9, rmm # perform operation
fnmadd.s f12, f13, f5, f9, rne # perform operation
fnmadd.s f12, f13, f5, f9, rtz # perform operation
fnmadd.s f12, f13, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x13, 0x62d032953de671f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xb944add32b4480b2 # load x3 with value 0xb944add32b4480b2
sw x3, 0(x2) # store 0xb944add32b4480b2 in memory
flw f25, 0(x2) # load 0xb944add32b4480b2 from memory into f25
fnmadd.s f13, f2, f18, f25, dyn # perform operation
fnmadd.s f13, f2, f18, f25, rdn # perform operation
fnmadd.s f13, f2, f18, f25, rmm # perform operation
fnmadd.s f13, f2, f18, f25, rne # perform operation
fnmadd.s f13, f2, f18, f25, rtz # perform operation
fnmadd.s f13, f2, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x17, 0x52871657c35f691e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x7e6c8917a235d44f # load x3 with value 0x7e6c8917a235d44f
sw x3, 0(x2) # store 0x7e6c8917a235d44f in memory
flw f20, 0(x2) # load 0x7e6c8917a235d44f from memory into f20
fnmadd.s f17, f25, f31, f20, dyn # perform operation
fnmadd.s f17, f25, f31, f20, rdn # perform operation
fnmadd.s f17, f25, f31, f20, rmm # perform operation
fnmadd.s f17, f25, f31, f20, rne # perform operation
fnmadd.s f17, f25, f31, f20, rtz # perform operation
fnmadd.s f17, f25, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x5, 0x8ddf2c201f59cb4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xdb6e1a2a2795d222 # load x3 with value 0xdb6e1a2a2795d222
sw x3, 0(x2) # store 0xdb6e1a2a2795d222 in memory
flw f30, 0(x2) # load 0xdb6e1a2a2795d222 from memory into f30
fnmadd.s f5, f17, f27, f30, dyn # perform operation
fnmadd.s f5, f17, f27, f30, rdn # perform operation
fnmadd.s f5, f17, f27, f30, rmm # perform operation
fnmadd.s f5, f17, f27, f30, rne # perform operation
fnmadd.s f5, f17, f27, f30, rtz # perform operation
fnmadd.s f5, f17, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x2, 0x3f2537ac866ac3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x96bea565d6141a12 # load x3 with value 0x96bea565d6141a12
sw x3, 0(x2) # store 0x96bea565d6141a12 in memory
flw f26, 0(x2) # load 0x96bea565d6141a12 from memory into f26
fnmadd.s f2, f13, f11, f26, dyn # perform operation
fnmadd.s f2, f13, f11, f26, rdn # perform operation
fnmadd.s f2, f13, f11, f26, rmm # perform operation
fnmadd.s f2, f13, f11, f26, rne # perform operation
fnmadd.s f2, f13, f11, f26, rtz # perform operation
fnmadd.s f2, f13, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x1, 0xf116d8605e2d7b55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xbb07661dd9577244 # load x3 with value 0xbb07661dd9577244
sw x3, 0(x2) # store 0xbb07661dd9577244 in memory
flw f10, 0(x2) # load 0xbb07661dd9577244 from memory into f10
fnmadd.s f1, f22, f19, f10, dyn # perform operation
fnmadd.s f1, f22, f19, f10, rdn # perform operation
fnmadd.s f1, f22, f19, f10, rmm # perform operation
fnmadd.s f1, f22, f19, f10, rne # perform operation
fnmadd.s f1, f22, f19, f10, rtz # perform operation
fnmadd.s f1, f22, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f22, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f22, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f22, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f22, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f22, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x8, 0xf172ff086d8474d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x5d06b6581723369c # load x3 with value 0x5d06b6581723369c
sw x3, 0(x2) # store 0x5d06b6581723369c in memory
flw f22, 0(x2) # load 0x5d06b6581723369c from memory into f22
fnmadd.s f8, f16, f4, f22, dyn # perform operation
fnmadd.s f8, f16, f4, f22, rdn # perform operation
fnmadd.s f8, f16, f4, f22, rmm # perform operation
fnmadd.s f8, f16, f4, f22, rne # perform operation
fnmadd.s f8, f16, f4, f22, rtz # perform operation
fnmadd.s f8, f16, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f16, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f16, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x5, 0x92e0f8bbab1c9454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x80c09a345ba1bb9c # load x3 with value 0x80c09a345ba1bb9c
sw x3, 0(x2) # store 0x80c09a345ba1bb9c in memory
flw f22, 0(x2) # load 0x80c09a345ba1bb9c from memory into f22
fnmadd.s f5, f25, f13, f22, dyn # perform operation
fnmadd.s f5, f25, f13, f22, rdn # perform operation
fnmadd.s f5, f25, f13, f22, rmm # perform operation
fnmadd.s f5, f25, f13, f22, rne # perform operation
fnmadd.s f5, f25, f13, f22, rtz # perform operation
fnmadd.s f5, f25, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x31, 0x17b9c3a30394b863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x340cc7b3f5339ede # load x3 with value 0x340cc7b3f5339ede
sw x3, 0(x2) # store 0x340cc7b3f5339ede in memory
flw f11, 0(x2) # load 0x340cc7b3f5339ede from memory into f11
fnmadd.s f31, f10, f30, f11, dyn # perform operation
fnmadd.s f31, f10, f30, f11, rdn # perform operation
fnmadd.s f31, f10, f30, f11, rmm # perform operation
fnmadd.s f31, f10, f30, f11, rne # perform operation
fnmadd.s f31, f10, f30, f11, rtz # perform operation
fnmadd.s f31, f10, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x6, 0xdd154195c4e162a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x898a062d3f6b851f # load x3 with value 0x898a062d3f6b851f
sw x3, 0(x2) # store 0x898a062d3f6b851f in memory
flw f4, 0(x2) # load 0x898a062d3f6b851f from memory into f4
fnmadd.s f6, f12, f18, f4, dyn # perform operation
fnmadd.s f6, f12, f18, f4, rdn # perform operation
fnmadd.s f6, f12, f18, f4, rmm # perform operation
fnmadd.s f6, f12, f18, f4, rne # perform operation
fnmadd.s f6, f12, f18, f4, rtz # perform operation
fnmadd.s f6, f12, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x29, 0x25315e8a642ec55c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x5f5597c3f41b3b1f # load x3 with value 0x5f5597c3f41b3b1f
sw x3, 0(x2) # store 0x5f5597c3f41b3b1f in memory
flw f24, 0(x2) # load 0x5f5597c3f41b3b1f from memory into f24
fnmadd.s f29, f6, f14, f24, dyn # perform operation
fnmadd.s f29, f6, f14, f24, rdn # perform operation
fnmadd.s f29, f6, f14, f24, rmm # perform operation
fnmadd.s f29, f6, f14, f24, rne # perform operation
fnmadd.s f29, f6, f14, f24, rtz # perform operation
fnmadd.s f29, f6, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x30, 0x38803f675c2c31b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x1411243e4b55ca9 # load x3 with value 0x1411243e4b55ca9
sw x3, 0(x2) # store 0x1411243e4b55ca9 in memory
flw f24, 0(x2) # load 0x1411243e4b55ca9 from memory into f24
fnmadd.s f30, f22, f15, f24, dyn # perform operation
fnmadd.s f30, f22, f15, f24, rdn # perform operation
fnmadd.s f30, f22, f15, f24, rmm # perform operation
fnmadd.s f30, f22, f15, f24, rne # perform operation
fnmadd.s f30, f22, f15, f24, rtz # perform operation
fnmadd.s f30, f22, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x27, 0x4553eb50a536279d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xb95b91e47bef8ae # load x3 with value 0xb95b91e47bef8ae
sw x3, 0(x2) # store 0xb95b91e47bef8ae in memory
flw f28, 0(x2) # load 0xb95b91e47bef8ae from memory into f28
fnmadd.s f27, f15, f26, f28, dyn # perform operation
fnmadd.s f27, f15, f26, f28, rdn # perform operation
fnmadd.s f27, f15, f26, f28, rmm # perform operation
fnmadd.s f27, f15, f26, f28, rne # perform operation
fnmadd.s f27, f15, f26, f28, rtz # perform operation
fnmadd.s f27, f15, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x30, 0xe96834bb7ab1f95f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xc3c90103973a3b50 # load x3 with value 0xc3c90103973a3b50
sw x3, 0(x2) # store 0xc3c90103973a3b50 in memory
flw f11, 0(x2) # load 0xc3c90103973a3b50 from memory into f11
fnmadd.s f30, f9, f25, f11, dyn # perform operation
fnmadd.s f30, f9, f25, f11, rdn # perform operation
fnmadd.s f30, f9, f25, f11, rmm # perform operation
fnmadd.s f30, f9, f25, f11, rne # perform operation
fnmadd.s f30, f9, f25, f11, rtz # perform operation
fnmadd.s f30, f9, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x1, 0xd71fae8e73af0920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x76c029da15d90fe7 # load x3 with value 0x76c029da15d90fe7
sw x3, 0(x2) # store 0x76c029da15d90fe7 in memory
flw f23, 0(x2) # load 0x76c029da15d90fe7 from memory into f23
fnmadd.s f1, f7, f24, f23, dyn # perform operation
fnmadd.s f1, f7, f24, f23, rdn # perform operation
fnmadd.s f1, f7, f24, f23, rmm # perform operation
fnmadd.s f1, f7, f24, f23, rne # perform operation
fnmadd.s f1, f7, f24, f23, rtz # perform operation
fnmadd.s f1, f7, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x20, 0xcf3fc798ebad15eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0xf456a90b434c0d6d # load x3 with value 0xf456a90b434c0d6d
sw x3, 0(x2) # store 0xf456a90b434c0d6d in memory
flw f11, 0(x2) # load 0xf456a90b434c0d6d from memory into f11
fnmadd.s f20, f22, f13, f11, dyn # perform operation
fnmadd.s f20, f22, f13, f11, rdn # perform operation
fnmadd.s f20, f22, f13, f11, rmm # perform operation
fnmadd.s f20, f22, f13, f11, rne # perform operation
fnmadd.s f20, f22, f13, f11, rtz # perform operation
fnmadd.s f20, f22, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x3, 0xe5ee73425108e9ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x43f46e5b9749b036 # load x3 with value 0x43f46e5b9749b036
sw x3, 0(x2) # store 0x43f46e5b9749b036 in memory
flw f9, 0(x2) # load 0x43f46e5b9749b036 from memory into f9
fnmadd.s f3, f12, f6, f9, dyn # perform operation
fnmadd.s f3, f12, f6, f9, rdn # perform operation
fnmadd.s f3, f12, f6, f9, rmm # perform operation
fnmadd.s f3, f12, f6, f9, rne # perform operation
fnmadd.s f3, f12, f6, f9, rtz # perform operation
fnmadd.s f3, f12, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x13, 0x369ef2da5e427bc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x1bb4d273342145bf # load x3 with value 0x1bb4d273342145bf
sw x3, 0(x2) # store 0x1bb4d273342145bf in memory
flw f4, 0(x2) # load 0x1bb4d273342145bf from memory into f4
fnmadd.s f13, f9, f11, f4, dyn # perform operation
fnmadd.s f13, f9, f11, f4, rdn # perform operation
fnmadd.s f13, f9, f11, f4, rmm # perform operation
fnmadd.s f13, f9, f11, f4, rne # perform operation
fnmadd.s f13, f9, f11, f4, rtz # perform operation
fnmadd.s f13, f9, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x25, 0xa727966acc46d130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x7f5a286e600b7289 # load x3 with value 0x7f5a286e600b7289
sw x3, 0(x2) # store 0x7f5a286e600b7289 in memory
flw f12, 0(x2) # load 0x7f5a286e600b7289 from memory into f12
fnmadd.s f25, f14, f19, f12, dyn # perform operation
fnmadd.s f25, f14, f19, f12, rdn # perform operation
fnmadd.s f25, f14, f19, f12, rmm # perform operation
fnmadd.s f25, f14, f19, f12, rne # perform operation
fnmadd.s f25, f14, f19, f12, rtz # perform operation
fnmadd.s f25, f14, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x11, 0xc95f14c931919def # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xc9c57d2119e6c55a # load x3 with value 0xc9c57d2119e6c55a
sw x3, 0(x2) # store 0xc9c57d2119e6c55a in memory
flw f25, 0(x2) # load 0xc9c57d2119e6c55a from memory into f25
fnmadd.s f11, f5, f20, f25, dyn # perform operation
fnmadd.s f11, f5, f20, f25, rdn # perform operation
fnmadd.s f11, f5, f20, f25, rmm # perform operation
fnmadd.s f11, f5, f20, f25, rne # perform operation
fnmadd.s f11, f5, f20, f25, rtz # perform operation
fnmadd.s f11, f5, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x21, 0xa58a28215d086f76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xe0b26dc4564615ac # load x3 with value 0xe0b26dc4564615ac
sw x3, 0(x2) # store 0xe0b26dc4564615ac in memory
flw f26, 0(x2) # load 0xe0b26dc4564615ac from memory into f26
fnmadd.s f21, f9, f7, f26, dyn # perform operation
fnmadd.s f21, f9, f7, f26, rdn # perform operation
fnmadd.s f21, f9, f7, f26, rmm # perform operation
fnmadd.s f21, f9, f7, f26, rne # perform operation
fnmadd.s f21, f9, f7, f26, rtz # perform operation
fnmadd.s f21, f9, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f9, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f9, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x4, 0x19de374b53b6ef91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0xe314689d813b1196 # load x3 with value 0xe314689d813b1196
sw x3, 0(x2) # store 0xe314689d813b1196 in memory
flw f12, 0(x2) # load 0xe314689d813b1196 from memory into f12
fnmadd.s f4, f15, f27, f12, dyn # perform operation
fnmadd.s f4, f15, f27, f12, rdn # perform operation
fnmadd.s f4, f15, f27, f12, rmm # perform operation
fnmadd.s f4, f15, f27, f12, rne # perform operation
fnmadd.s f4, f15, f27, f12, rtz # perform operation
fnmadd.s f4, f15, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f15, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f15, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x22, 0x41d93fe1a5cb9857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x10365175e26a2230 # load x3 with value 0x10365175e26a2230
sw x3, 0(x2) # store 0x10365175e26a2230 in memory
flw f13, 0(x2) # load 0x10365175e26a2230 from memory into f13
fnmadd.s f22, f2, f11, f13, dyn # perform operation
fnmadd.s f22, f2, f11, f13, rdn # perform operation
fnmadd.s f22, f2, f11, f13, rmm # perform operation
fnmadd.s f22, f2, f11, f13, rne # perform operation
fnmadd.s f22, f2, f11, f13, rtz # perform operation
fnmadd.s f22, f2, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f2, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f2, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f2, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f2, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f2, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x28, 0x4ca5d6746b0d2cdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x8651ac36dff0be8 # load x3 with value 0x8651ac36dff0be8
sw x3, 0(x2) # store 0x8651ac36dff0be8 in memory
flw f19, 0(x2) # load 0x8651ac36dff0be8 from memory into f19
fnmadd.s f28, f31, f25, f19, dyn # perform operation
fnmadd.s f28, f31, f25, f19, rdn # perform operation
fnmadd.s f28, f31, f25, f19, rmm # perform operation
fnmadd.s f28, f31, f25, f19, rne # perform operation
fnmadd.s f28, f31, f25, f19, rtz # perform operation
fnmadd.s f28, f31, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f31, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x28, 0x8d1fdaeb52f6ba62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x765fd706abee572c # load x3 with value 0x765fd706abee572c
sw x3, 0(x2) # store 0x765fd706abee572c in memory
flw f9, 0(x2) # load 0x765fd706abee572c from memory into f9
fnmadd.s f28, f21, f1, f9, dyn # perform operation
fnmadd.s f28, f21, f1, f9, rdn # perform operation
fnmadd.s f28, f21, f1, f9, rmm # perform operation
fnmadd.s f28, f21, f1, f9, rne # perform operation
fnmadd.s f28, f21, f1, f9, rtz # perform operation
fnmadd.s f28, f21, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x4, 0x369f8aab3186b42f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xbcfdf3ea7110fb51 # load x3 with value 0xbcfdf3ea7110fb51
sw x3, 0(x2) # store 0xbcfdf3ea7110fb51 in memory
flw f6, 0(x2) # load 0xbcfdf3ea7110fb51 from memory into f6
fnmadd.s f4, f28, f15, f6, dyn # perform operation
fnmadd.s f4, f28, f15, f6, rdn # perform operation
fnmadd.s f4, f28, f15, f6, rmm # perform operation
fnmadd.s f4, f28, f15, f6, rne # perform operation
fnmadd.s f4, f28, f15, f6, rtz # perform operation
fnmadd.s f4, f28, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x27, 0x91eb16f6efe48087 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x3e97e5da91fb1a8b # load x3 with value 0x3e97e5da91fb1a8b
sw x3, 0(x2) # store 0x3e97e5da91fb1a8b in memory
flw f19, 0(x2) # load 0x3e97e5da91fb1a8b from memory into f19
fnmadd.s f27, f14, f2, f19, dyn # perform operation
fnmadd.s f27, f14, f2, f19, rdn # perform operation
fnmadd.s f27, f14, f2, f19, rmm # perform operation
fnmadd.s f27, f14, f2, f19, rne # perform operation
fnmadd.s f27, f14, f2, f19, rtz # perform operation
fnmadd.s f27, f14, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x25, 0x832e5c77768462d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x682f2554568df508 # load x3 with value 0x682f2554568df508
sw x3, 0(x2) # store 0x682f2554568df508 in memory
flw f7, 0(x2) # load 0x682f2554568df508 from memory into f7
fnmadd.s f25, f21, f2, f7, dyn # perform operation
fnmadd.s f25, f21, f2, f7, rdn # perform operation
fnmadd.s f25, f21, f2, f7, rmm # perform operation
fnmadd.s f25, f21, f2, f7, rne # perform operation
fnmadd.s f25, f21, f2, f7, rtz # perform operation
fnmadd.s f25, f21, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f21, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f21, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f21, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f21, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f21, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x12, 0x20b3368871e5a664 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xe120089b3f8fafd1 # load x3 with value 0xe120089b3f8fafd1
sw x3, 0(x2) # store 0xe120089b3f8fafd1 in memory
flw f30, 0(x2) # load 0xe120089b3f8fafd1 from memory into f30
fnmadd.s f12, f10, f13, f30, dyn # perform operation
fnmadd.s f12, f10, f13, f30, rdn # perform operation
fnmadd.s f12, f10, f13, f30, rmm # perform operation
fnmadd.s f12, f10, f13, f30, rne # perform operation
fnmadd.s f12, f10, f13, f30, rtz # perform operation
fnmadd.s f12, f10, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x9, 0x7e0ad8b329ecf8d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x6ed00c978c09e10a # load x3 with value 0x6ed00c978c09e10a
sw x3, 0(x2) # store 0x6ed00c978c09e10a in memory
flw f10, 0(x2) # load 0x6ed00c978c09e10a from memory into f10
fnmadd.s f9, f20, f14, f10, dyn # perform operation
fnmadd.s f9, f20, f14, f10, rdn # perform operation
fnmadd.s f9, f20, f14, f10, rmm # perform operation
fnmadd.s f9, f20, f14, f10, rne # perform operation
fnmadd.s f9, f20, f14, f10, rtz # perform operation
fnmadd.s f9, f20, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x12, 0xd55d483b2c98a3f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x82f7a0d13ff5b8b1 # load x3 with value 0x82f7a0d13ff5b8b1
sw x3, 0(x2) # store 0x82f7a0d13ff5b8b1 in memory
flw f16, 0(x2) # load 0x82f7a0d13ff5b8b1 from memory into f16
fnmadd.s f12, f9, f1, f16, dyn # perform operation
fnmadd.s f12, f9, f1, f16, rdn # perform operation
fnmadd.s f12, f9, f1, f16, rmm # perform operation
fnmadd.s f12, f9, f1, f16, rne # perform operation
fnmadd.s f12, f9, f1, f16, rtz # perform operation
fnmadd.s f12, f9, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f9, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f9, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f9, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f9, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f9, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x10, 0x9f41189c5709b0df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x65d8dd66de7d0b21 # load x3 with value 0x65d8dd66de7d0b21
sw x3, 0(x2) # store 0x65d8dd66de7d0b21 in memory
flw f26, 0(x2) # load 0x65d8dd66de7d0b21 from memory into f26
fnmadd.s f10, f15, f27, f26, dyn # perform operation
fnmadd.s f10, f15, f27, f26, rdn # perform operation
fnmadd.s f10, f15, f27, f26, rmm # perform operation
fnmadd.s f10, f15, f27, f26, rne # perform operation
fnmadd.s f10, f15, f27, f26, rtz # perform operation
fnmadd.s f10, f15, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x11, 0xb2ee5ae6edb765c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x45394fe18a0a2b3a # load x3 with value 0x45394fe18a0a2b3a
sw x3, 0(x2) # store 0x45394fe18a0a2b3a in memory
flw f9, 0(x2) # load 0x45394fe18a0a2b3a from memory into f9
fnmadd.s f11, f10, f8, f9, dyn # perform operation
fnmadd.s f11, f10, f8, f9, rdn # perform operation
fnmadd.s f11, f10, f8, f9, rmm # perform operation
fnmadd.s f11, f10, f8, f9, rne # perform operation
fnmadd.s f11, f10, f8, f9, rtz # perform operation
fnmadd.s f11, f10, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x16, 0xbfd8f3659f07eb5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x51a033b359282dae # load x3 with value 0x51a033b359282dae
sw x3, 0(x2) # store 0x51a033b359282dae in memory
flw f28, 0(x2) # load 0x51a033b359282dae from memory into f28
fnmadd.s f16, f15, f8, f28, dyn # perform operation
fnmadd.s f16, f15, f8, f28, rdn # perform operation
fnmadd.s f16, f15, f8, f28, rmm # perform operation
fnmadd.s f16, f15, f8, f28, rne # perform operation
fnmadd.s f16, f15, f8, f28, rtz # perform operation
fnmadd.s f16, f15, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x7, 0x3e517104aa968d88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xd019891c248d78a6 # load x3 with value 0xd019891c248d78a6
sw x3, 0(x2) # store 0xd019891c248d78a6 in memory
flw f17, 0(x2) # load 0xd019891c248d78a6 from memory into f17
fnmadd.s f7, f11, f6, f17, dyn # perform operation
fnmadd.s f7, f11, f6, f17, rdn # perform operation
fnmadd.s f7, f11, f6, f17, rmm # perform operation
fnmadd.s f7, f11, f6, f17, rne # perform operation
fnmadd.s f7, f11, f6, f17, rtz # perform operation
fnmadd.s f7, f11, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x3, 0x16f2d2de837f27e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x55d2f21e6a278ed2 # load x3 with value 0x55d2f21e6a278ed2
sw x3, 0(x2) # store 0x55d2f21e6a278ed2 in memory
flw f13, 0(x2) # load 0x55d2f21e6a278ed2 from memory into f13
fnmadd.s f3, f2, f10, f13, dyn # perform operation
fnmadd.s f3, f2, f10, f13, rdn # perform operation
fnmadd.s f3, f2, f10, f13, rmm # perform operation
fnmadd.s f3, f2, f10, f13, rne # perform operation
fnmadd.s f3, f2, f10, f13, rtz # perform operation
fnmadd.s f3, f2, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f2, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x17, 0x65a703a27bb37d50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x1ddddd78481dde0f # load x3 with value 0x1ddddd78481dde0f
sw x3, 0(x2) # store 0x1ddddd78481dde0f in memory
flw f4, 0(x2) # load 0x1ddddd78481dde0f from memory into f4
fnmadd.s f17, f7, f15, f4, dyn # perform operation
fnmadd.s f17, f7, f15, f4, rdn # perform operation
fnmadd.s f17, f7, f15, f4, rmm # perform operation
fnmadd.s f17, f7, f15, f4, rne # perform operation
fnmadd.s f17, f7, f15, f4, rtz # perform operation
fnmadd.s f17, f7, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x29, 0x6206ddd8813a33ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x323cd5f1160d9b77 # load x3 with value 0x323cd5f1160d9b77
sw x3, 0(x2) # store 0x323cd5f1160d9b77 in memory
flw f6, 0(x2) # load 0x323cd5f1160d9b77 from memory into f6
fnmadd.s f29, f10, f13, f6, dyn # perform operation
fnmadd.s f29, f10, f13, f6, rdn # perform operation
fnmadd.s f29, f10, f13, f6, rmm # perform operation
fnmadd.s f29, f10, f13, f6, rne # perform operation
fnmadd.s f29, f10, f13, f6, rtz # perform operation
fnmadd.s f29, f10, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x16, 0x7caf677e09d56ec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xe10dcf65c3556ceb # load x3 with value 0xe10dcf65c3556ceb
sw x3, 0(x2) # store 0xe10dcf65c3556ceb in memory
flw f15, 0(x2) # load 0xe10dcf65c3556ceb from memory into f15
fnmadd.s f16, f21, f2, f15, dyn # perform operation
fnmadd.s f16, f21, f2, f15, rdn # perform operation
fnmadd.s f16, f21, f2, f15, rmm # perform operation
fnmadd.s f16, f21, f2, f15, rne # perform operation
fnmadd.s f16, f21, f2, f15, rtz # perform operation
fnmadd.s f16, f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f21, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x4, 0x098410f9b68b26e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x44b17b5a4c2d46e3 # load x3 with value 0x44b17b5a4c2d46e3
sw x3, 0(x2) # store 0x44b17b5a4c2d46e3 in memory
flw f6, 0(x2) # load 0x44b17b5a4c2d46e3 from memory into f6
fnmadd.s f4, f11, f12, f6, dyn # perform operation
fnmadd.s f4, f11, f12, f6, rdn # perform operation
fnmadd.s f4, f11, f12, f6, rmm # perform operation
fnmadd.s f4, f11, f12, f6, rne # perform operation
fnmadd.s f4, f11, f12, f6, rtz # perform operation
fnmadd.s f4, f11, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f11, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x26, 0x8d69054667245afb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x7c6db4950b36f5c7 # load x3 with value 0x7c6db4950b36f5c7
sw x3, 0(x2) # store 0x7c6db4950b36f5c7 in memory
flw f25, 0(x2) # load 0x7c6db4950b36f5c7 from memory into f25
fnmadd.s f26, f22, f16, f25, dyn # perform operation
fnmadd.s f26, f22, f16, f25, rdn # perform operation
fnmadd.s f26, f22, f16, f25, rmm # perform operation
fnmadd.s f26, f22, f16, f25, rne # perform operation
fnmadd.s f26, f22, f16, f25, rtz # perform operation
fnmadd.s f26, f22, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x28, 0xa5a5238496cf2a04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xce631480d96b4db8 # load x3 with value 0xce631480d96b4db8
sw x3, 0(x2) # store 0xce631480d96b4db8 in memory
flw f25, 0(x2) # load 0xce631480d96b4db8 from memory into f25
fnmadd.s f28, f8, f16, f25, dyn # perform operation
fnmadd.s f28, f8, f16, f25, rdn # perform operation
fnmadd.s f28, f8, f16, f25, rmm # perform operation
fnmadd.s f28, f8, f16, f25, rne # perform operation
fnmadd.s f28, f8, f16, f25, rtz # perform operation
fnmadd.s f28, f8, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x27, 0x7c489143856d40c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x8d8403027dd4dd72 # load x3 with value 0x8d8403027dd4dd72
sw x3, 0(x2) # store 0x8d8403027dd4dd72 in memory
flw f31, 0(x2) # load 0x8d8403027dd4dd72 from memory into f31
fnmadd.s f27, f3, f2, f31, dyn # perform operation
fnmadd.s f27, f3, f2, f31, rdn # perform operation
fnmadd.s f27, f3, f2, f31, rmm # perform operation
fnmadd.s f27, f3, f2, f31, rne # perform operation
fnmadd.s f27, f3, f2, f31, rtz # perform operation
fnmadd.s f27, f3, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f3, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x3, 0x2bb3bd46fcdfcdc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x23e5423b81fa1e87 # load x3 with value 0x23e5423b81fa1e87
sw x3, 0(x2) # store 0x23e5423b81fa1e87 in memory
flw f12, 0(x2) # load 0x23e5423b81fa1e87 from memory into f12
fnmadd.s f3, f18, f26, f12, dyn # perform operation
fnmadd.s f3, f18, f26, f12, rdn # perform operation
fnmadd.s f3, f18, f26, f12, rmm # perform operation
fnmadd.s f3, f18, f26, f12, rne # perform operation
fnmadd.s f3, f18, f26, f12, rtz # perform operation
fnmadd.s f3, f18, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x14, 0xb7d366285346e686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xb42878325cdd4c8a # load x3 with value 0xb42878325cdd4c8a
sw x3, 0(x2) # store 0xb42878325cdd4c8a in memory
flw f27, 0(x2) # load 0xb42878325cdd4c8a from memory into f27
fnmadd.s f14, f9, f10, f27, dyn # perform operation
fnmadd.s f14, f9, f10, f27, rdn # perform operation
fnmadd.s f14, f9, f10, f27, rmm # perform operation
fnmadd.s f14, f9, f10, f27, rne # perform operation
fnmadd.s f14, f9, f10, f27, rtz # perform operation
fnmadd.s f14, f9, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x28, 0xa311af1d3646af97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x33a1ca8815ce7033 # load x3 with value 0x33a1ca8815ce7033
sw x3, 0(x2) # store 0x33a1ca8815ce7033 in memory
flw f20, 0(x2) # load 0x33a1ca8815ce7033 from memory into f20
fnmadd.s f28, f4, f16, f20, dyn # perform operation
fnmadd.s f28, f4, f16, f20, rdn # perform operation
fnmadd.s f28, f4, f16, f20, rmm # perform operation
fnmadd.s f28, f4, f16, f20, rne # perform operation
fnmadd.s f28, f4, f16, f20, rtz # perform operation
fnmadd.s f28, f4, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f4, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f4, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f4, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f4, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f4, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x23, 0x6fc949d31314b04e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x963e64bd68989c25 # load x3 with value 0x963e64bd68989c25
sw x3, 0(x2) # store 0x963e64bd68989c25 in memory
flw f12, 0(x2) # load 0x963e64bd68989c25 from memory into f12
fnmadd.s f23, f19, f26, f12, dyn # perform operation
fnmadd.s f23, f19, f26, f12, rdn # perform operation
fnmadd.s f23, f19, f26, f12, rmm # perform operation
fnmadd.s f23, f19, f26, f12, rne # perform operation
fnmadd.s f23, f19, f26, f12, rtz # perform operation
fnmadd.s f23, f19, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x7, 0xa1cff2b4db55a38d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xd2292e3ff5b02db6 # load x3 with value 0xd2292e3ff5b02db6
sw x3, 0(x2) # store 0xd2292e3ff5b02db6 in memory
flw f18, 0(x2) # load 0xd2292e3ff5b02db6 from memory into f18
fnmadd.s f7, f20, f28, f18, dyn # perform operation
fnmadd.s f7, f20, f28, f18, rdn # perform operation
fnmadd.s f7, f20, f28, f18, rmm # perform operation
fnmadd.s f7, f20, f28, f18, rne # perform operation
fnmadd.s f7, f20, f28, f18, rtz # perform operation
fnmadd.s f7, f20, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x10, 0xe2c33bb675e471f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7d9d36b8132ee718 # load x3 with value 0x7d9d36b8132ee718
sw x3, 0(x2) # store 0x7d9d36b8132ee718 in memory
flw f17, 0(x2) # load 0x7d9d36b8132ee718 from memory into f17
fnmadd.s f10, f30, f20, f17, dyn # perform operation
fnmadd.s f10, f30, f20, f17, rdn # perform operation
fnmadd.s f10, f30, f20, f17, rmm # perform operation
fnmadd.s f10, f30, f20, f17, rne # perform operation
fnmadd.s f10, f30, f20, f17, rtz # perform operation
fnmadd.s f10, f30, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x11, 0xff3fa8e5b9c60236 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x454a14a4899d3d8c # load x3 with value 0x454a14a4899d3d8c
sw x3, 0(x2) # store 0x454a14a4899d3d8c in memory
flw f16, 0(x2) # load 0x454a14a4899d3d8c from memory into f16
fnmadd.s f11, f14, f24, f16, dyn # perform operation
fnmadd.s f11, f14, f24, f16, rdn # perform operation
fnmadd.s f11, f14, f24, f16, rmm # perform operation
fnmadd.s f11, f14, f24, f16, rne # perform operation
fnmadd.s f11, f14, f24, f16, rtz # perform operation
fnmadd.s f11, f14, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x28, 0xd6eb90573f743a05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0xdfc1194525501cd3 # load x3 with value 0xdfc1194525501cd3
sw x3, 0(x2) # store 0xdfc1194525501cd3 in memory
flw f8, 0(x2) # load 0xdfc1194525501cd3 from memory into f8
fnmadd.s f28, f19, f30, f8, dyn # perform operation
fnmadd.s f28, f19, f30, f8, rdn # perform operation
fnmadd.s f28, f19, f30, f8, rmm # perform operation
fnmadd.s f28, f19, f30, f8, rne # perform operation
fnmadd.s f28, f19, f30, f8, rtz # perform operation
fnmadd.s f28, f19, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x12, 0x6ed3675a6e1fb06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x6e360f09438d287 # load x3 with value 0x6e360f09438d287
sw x3, 0(x2) # store 0x6e360f09438d287 in memory
flw f28, 0(x2) # load 0x6e360f09438d287 from memory into f28
fnmadd.s f12, f2, f8, f28, dyn # perform operation
fnmadd.s f12, f2, f8, f28, rdn # perform operation
fnmadd.s f12, f2, f8, f28, rmm # perform operation
fnmadd.s f12, f2, f8, f28, rne # perform operation
fnmadd.s f12, f2, f8, f28, rtz # perform operation
fnmadd.s f12, f2, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x19, 0x81ff6c7ca22f1d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xe6f6ca2ad4a3007c # load x3 with value 0xe6f6ca2ad4a3007c
sw x3, 0(x2) # store 0xe6f6ca2ad4a3007c in memory
flw f16, 0(x2) # load 0xe6f6ca2ad4a3007c from memory into f16
fnmadd.s f19, f2, f27, f16, dyn # perform operation
fnmadd.s f19, f2, f27, f16, rdn # perform operation
fnmadd.s f19, f2, f27, f16, rmm # perform operation
fnmadd.s f19, f2, f27, f16, rne # perform operation
fnmadd.s f19, f2, f27, f16, rtz # perform operation
fnmadd.s f19, f2, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x23, 0x77ca6f0e54aaf501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x65113bca0f9ab8f5 # load x3 with value 0x65113bca0f9ab8f5
sw x3, 0(x2) # store 0x65113bca0f9ab8f5 in memory
flw f15, 0(x2) # load 0x65113bca0f9ab8f5 from memory into f15
fnmadd.s f23, f2, f10, f15, dyn # perform operation
fnmadd.s f23, f2, f10, f15, rdn # perform operation
fnmadd.s f23, f2, f10, f15, rmm # perform operation
fnmadd.s f23, f2, f10, f15, rne # perform operation
fnmadd.s f23, f2, f10, f15, rtz # perform operation
fnmadd.s f23, f2, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x31, 0x5b448d0d5becdf5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x79dd60e2bcc0b8db # load x3 with value 0x79dd60e2bcc0b8db
sw x3, 0(x2) # store 0x79dd60e2bcc0b8db in memory
flw f28, 0(x2) # load 0x79dd60e2bcc0b8db from memory into f28
fnmadd.s f31, f7, f13, f28, dyn # perform operation
fnmadd.s f31, f7, f13, f28, rdn # perform operation
fnmadd.s f31, f7, f13, f28, rmm # perform operation
fnmadd.s f31, f7, f13, f28, rne # perform operation
fnmadd.s f31, f7, f13, f28, rtz # perform operation
fnmadd.s f31, f7, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x13, 0x7941a759a3af1c43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x7054eae73abc96c3 # load x3 with value 0x7054eae73abc96c3
sw x3, 0(x2) # store 0x7054eae73abc96c3 in memory
flw f23, 0(x2) # load 0x7054eae73abc96c3 from memory into f23
fnmadd.s f13, f24, f4, f23, dyn # perform operation
fnmadd.s f13, f24, f4, f23, rdn # perform operation
fnmadd.s f13, f24, f4, f23, rmm # perform operation
fnmadd.s f13, f24, f4, f23, rne # perform operation
fnmadd.s f13, f24, f4, f23, rtz # perform operation
fnmadd.s f13, f24, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x28, 0x41be9a98c5432be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0xf623065f3bc9500c # load x3 with value 0xf623065f3bc9500c
sw x3, 0(x2) # store 0xf623065f3bc9500c in memory
flw f8, 0(x2) # load 0xf623065f3bc9500c from memory into f8
fnmadd.s f28, f20, f9, f8, dyn # perform operation
fnmadd.s f28, f20, f9, f8, rdn # perform operation
fnmadd.s f28, f20, f9, f8, rmm # perform operation
fnmadd.s f28, f20, f9, f8, rne # perform operation
fnmadd.s f28, f20, f9, f8, rtz # perform operation
fnmadd.s f28, f20, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x17, 0x9364b6064bdb2089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0xa140475c835fb4b # load x3 with value 0xa140475c835fb4b
sw x3, 0(x2) # store 0xa140475c835fb4b in memory
flw f3, 0(x2) # load 0xa140475c835fb4b from memory into f3
fnmadd.s f17, f23, f18, f3, dyn # perform operation
fnmadd.s f17, f23, f18, f3, rdn # perform operation
fnmadd.s f17, f23, f18, f3, rmm # perform operation
fnmadd.s f17, f23, f18, f3, rne # perform operation
fnmadd.s f17, f23, f18, f3, rtz # perform operation
fnmadd.s f17, f23, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x27, 0xab1335fbcb773fd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xb31e4ccbd4998dd3 # load x3 with value 0xb31e4ccbd4998dd3
sw x3, 0(x2) # store 0xb31e4ccbd4998dd3 in memory
flw f10, 0(x2) # load 0xb31e4ccbd4998dd3 from memory into f10
fnmadd.s f27, f12, f8, f10, dyn # perform operation
fnmadd.s f27, f12, f8, f10, rdn # perform operation
fnmadd.s f27, f12, f8, f10, rmm # perform operation
fnmadd.s f27, f12, f8, f10, rne # perform operation
fnmadd.s f27, f12, f8, f10, rtz # perform operation
fnmadd.s f27, f12, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x8, 0xf59f4487a8e8299d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x967fd6434d2e7dc8 # load x3 with value 0x967fd6434d2e7dc8
sw x3, 0(x2) # store 0x967fd6434d2e7dc8 in memory
flw f10, 0(x2) # load 0x967fd6434d2e7dc8 from memory into f10
fnmadd.s f8, f29, f13, f10, dyn # perform operation
fnmadd.s f8, f29, f13, f10, rdn # perform operation
fnmadd.s f8, f29, f13, f10, rmm # perform operation
fnmadd.s f8, f29, f13, f10, rne # perform operation
fnmadd.s f8, f29, f13, f10, rtz # perform operation
fnmadd.s f8, f29, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x4, 0x62c9e8765d271020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x31c32a57398773d # load x3 with value 0x31c32a57398773d
sw x3, 0(x2) # store 0x31c32a57398773d in memory
flw f16, 0(x2) # load 0x31c32a57398773d from memory into f16
fnmadd.s f4, f22, f2, f16, dyn # perform operation
fnmadd.s f4, f22, f2, f16, rdn # perform operation
fnmadd.s f4, f22, f2, f16, rmm # perform operation
fnmadd.s f4, f22, f2, f16, rne # perform operation
fnmadd.s f4, f22, f2, f16, rtz # perform operation
fnmadd.s f4, f22, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f22, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f22, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f22, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f22, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f22, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x20, 0x9f55ce3315b520b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x92e13472b358b82c # load x3 with value 0x92e13472b358b82c
sw x3, 0(x2) # store 0x92e13472b358b82c in memory
flw f30, 0(x2) # load 0x92e13472b358b82c from memory into f30
fnmadd.s f20, f19, f9, f30, dyn # perform operation
fnmadd.s f20, f19, f9, f30, rdn # perform operation
fnmadd.s f20, f19, f9, f30, rmm # perform operation
fnmadd.s f20, f19, f9, f30, rne # perform operation
fnmadd.s f20, f19, f9, f30, rtz # perform operation
fnmadd.s f20, f19, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x2, 0xd4da058be2ec5944 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xa7032f71427730e8 # load x3 with value 0xa7032f71427730e8
sw x3, 0(x2) # store 0xa7032f71427730e8 in memory
flw f25, 0(x2) # load 0xa7032f71427730e8 from memory into f25
fnmadd.s f2, f14, f8, f25, dyn # perform operation
fnmadd.s f2, f14, f8, f25, rdn # perform operation
fnmadd.s f2, f14, f8, f25, rmm # perform operation
fnmadd.s f2, f14, f8, f25, rne # perform operation
fnmadd.s f2, f14, f8, f25, rtz # perform operation
fnmadd.s f2, f14, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x21, 0xf5bd67957b58a369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xcab12e8a3d97d450 # load x3 with value 0xcab12e8a3d97d450
sw x3, 0(x2) # store 0xcab12e8a3d97d450 in memory
flw f31, 0(x2) # load 0xcab12e8a3d97d450 from memory into f31
fnmadd.s f21, f20, f4, f31, dyn # perform operation
fnmadd.s f21, f20, f4, f31, rdn # perform operation
fnmadd.s f21, f20, f4, f31, rmm # perform operation
fnmadd.s f21, f20, f4, f31, rne # perform operation
fnmadd.s f21, f20, f4, f31, rtz # perform operation
fnmadd.s f21, f20, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x4, 0x9b213c21e1272dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x3b00c15c71941a4d # load x3 with value 0x3b00c15c71941a4d
sw x3, 0(x2) # store 0x3b00c15c71941a4d in memory
flw f13, 0(x2) # load 0x3b00c15c71941a4d from memory into f13
fnmadd.s f4, f2, f9, f13, dyn # perform operation
fnmadd.s f4, f2, f9, f13, rdn # perform operation
fnmadd.s f4, f2, f9, f13, rmm # perform operation
fnmadd.s f4, f2, f9, f13, rne # perform operation
fnmadd.s f4, f2, f9, f13, rtz # perform operation
fnmadd.s f4, f2, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f2, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x29, 0x46016f6a3880f2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x2f369f3fb884a218 # load x3 with value 0x2f369f3fb884a218
sw x3, 0(x2) # store 0x2f369f3fb884a218 in memory
flw f4, 0(x2) # load 0x2f369f3fb884a218 from memory into f4
fnmadd.s f29, f8, f5, f4, dyn # perform operation
fnmadd.s f29, f8, f5, f4, rdn # perform operation
fnmadd.s f29, f8, f5, f4, rmm # perform operation
fnmadd.s f29, f8, f5, f4, rne # perform operation
fnmadd.s f29, f8, f5, f4, rtz # perform operation
fnmadd.s f29, f8, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x12, 0xb8bb353b9e1fbc4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xc24ff6094aa63e59 # load x3 with value 0xc24ff6094aa63e59
sw x3, 0(x2) # store 0xc24ff6094aa63e59 in memory
flw f16, 0(x2) # load 0xc24ff6094aa63e59 from memory into f16
fnmadd.s f12, f21, f8, f16, dyn # perform operation
fnmadd.s f12, f21, f8, f16, rdn # perform operation
fnmadd.s f12, f21, f8, f16, rmm # perform operation
fnmadd.s f12, f21, f8, f16, rne # perform operation
fnmadd.s f12, f21, f8, f16, rtz # perform operation
fnmadd.s f12, f21, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f21, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x24, 0x4e5dbcb6169f8529 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x4c33d39665323d41 # load x3 with value 0x4c33d39665323d41
sw x3, 0(x2) # store 0x4c33d39665323d41 in memory
flw f6, 0(x2) # load 0x4c33d39665323d41 from memory into f6
fnmadd.s f24, f18, f23, f6, dyn # perform operation
fnmadd.s f24, f18, f23, f6, rdn # perform operation
fnmadd.s f24, f18, f23, f6, rmm # perform operation
fnmadd.s f24, f18, f23, f6, rne # perform operation
fnmadd.s f24, f18, f23, f6, rtz # perform operation
fnmadd.s f24, f18, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x23, 0xc84c5f462224c23d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xc7b37b8929b3bb7b # load x3 with value 0xc7b37b8929b3bb7b
sw x3, 0(x2) # store 0xc7b37b8929b3bb7b in memory
flw f4, 0(x2) # load 0xc7b37b8929b3bb7b from memory into f4
fnmadd.s f23, f31, f9, f4, dyn # perform operation
fnmadd.s f23, f31, f9, f4, rdn # perform operation
fnmadd.s f23, f31, f9, f4, rmm # perform operation
fnmadd.s f23, f31, f9, f4, rne # perform operation
fnmadd.s f23, f31, f9, f4, rtz # perform operation
fnmadd.s f23, f31, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x4, 0x74c7cdf77e6fc5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x83716afab02dcff6 # load x3 with value 0x83716afab02dcff6
sw x3, 0(x2) # store 0x83716afab02dcff6 in memory
flw f30, 0(x2) # load 0x83716afab02dcff6 from memory into f30
fnmadd.s f4, f12, f18, f30, dyn # perform operation
fnmadd.s f4, f12, f18, f30, rdn # perform operation
fnmadd.s f4, f12, f18, f30, rmm # perform operation
fnmadd.s f4, f12, f18, f30, rne # perform operation
fnmadd.s f4, f12, f18, f30, rtz # perform operation
fnmadd.s f4, f12, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f12, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x25, 0x48f2bb8fc75fb905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xbe901202a3f5a30c # load x3 with value 0xbe901202a3f5a30c
sw x3, 0(x2) # store 0xbe901202a3f5a30c in memory
flw f14, 0(x2) # load 0xbe901202a3f5a30c from memory into f14
fnmadd.s f25, f23, f3, f14, dyn # perform operation
fnmadd.s f25, f23, f3, f14, rdn # perform operation
fnmadd.s f25, f23, f3, f14, rmm # perform operation
fnmadd.s f25, f23, f3, f14, rne # perform operation
fnmadd.s f25, f23, f3, f14, rtz # perform operation
fnmadd.s f25, f23, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f23, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x3, 0x3b1940e5a896f051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0xd219972dc06984cb # load x3 with value 0xd219972dc06984cb
sw x3, 0(x2) # store 0xd219972dc06984cb in memory
flw f25, 0(x2) # load 0xd219972dc06984cb from memory into f25
fnmadd.s f3, f17, f27, f25, dyn # perform operation
fnmadd.s f3, f17, f27, f25, rdn # perform operation
fnmadd.s f3, f17, f27, f25, rmm # perform operation
fnmadd.s f3, f17, f27, f25, rne # perform operation
fnmadd.s f3, f17, f27, f25, rtz # perform operation
fnmadd.s f3, f17, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x10, 0x7731aa5e0c9294bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x13300fb3a4338a26 # load x3 with value 0x13300fb3a4338a26
sw x3, 0(x2) # store 0x13300fb3a4338a26 in memory
flw f13, 0(x2) # load 0x13300fb3a4338a26 from memory into f13
fnmadd.s f10, f23, f3, f13, dyn # perform operation
fnmadd.s f10, f23, f3, f13, rdn # perform operation
fnmadd.s f10, f23, f3, f13, rmm # perform operation
fnmadd.s f10, f23, f3, f13, rne # perform operation
fnmadd.s f10, f23, f3, f13, rtz # perform operation
fnmadd.s f10, f23, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x14, 0xe274c00f122b6b54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x5aa0940f15145d0b # load x3 with value 0x5aa0940f15145d0b
sw x3, 0(x2) # store 0x5aa0940f15145d0b in memory
flw f11, 0(x2) # load 0x5aa0940f15145d0b from memory into f11
fnmadd.s f14, f16, f12, f11, dyn # perform operation
fnmadd.s f14, f16, f12, f11, rdn # perform operation
fnmadd.s f14, f16, f12, f11, rmm # perform operation
fnmadd.s f14, f16, f12, f11, rne # perform operation
fnmadd.s f14, f16, f12, f11, rtz # perform operation
fnmadd.s f14, f16, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x14, 0x4bd4147490be1ffe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x6c280aa5692947d3 # load x3 with value 0x6c280aa5692947d3
sw x3, 0(x2) # store 0x6c280aa5692947d3 in memory
flw f3, 0(x2) # load 0x6c280aa5692947d3 from memory into f3
fnmadd.s f14, f24, f31, f3, dyn # perform operation
fnmadd.s f14, f24, f31, f3, rdn # perform operation
fnmadd.s f14, f24, f31, f3, rmm # perform operation
fnmadd.s f14, f24, f31, f3, rne # perform operation
fnmadd.s f14, f24, f31, f3, rtz # perform operation
fnmadd.s f14, f24, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x7, 0x2664ffba77ab5627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x460fa4c54c208eba # load x3 with value 0x460fa4c54c208eba
sw x3, 0(x2) # store 0x460fa4c54c208eba in memory
flw f31, 0(x2) # load 0x460fa4c54c208eba from memory into f31
fnmadd.s f7, f20, f15, f31, dyn # perform operation
fnmadd.s f7, f20, f15, f31, rdn # perform operation
fnmadd.s f7, f20, f15, f31, rmm # perform operation
fnmadd.s f7, f20, f15, f31, rne # perform operation
fnmadd.s f7, f20, f15, f31, rtz # perform operation
fnmadd.s f7, f20, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x5, 0x08d85185c98b0974 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xb5acf974fe4e1523 # load x3 with value 0xb5acf974fe4e1523
sw x3, 0(x2) # store 0xb5acf974fe4e1523 in memory
flw f21, 0(x2) # load 0xb5acf974fe4e1523 from memory into f21
fnmadd.s f5, f13, f26, f21, dyn # perform operation
fnmadd.s f5, f13, f26, f21, rdn # perform operation
fnmadd.s f5, f13, f26, f21, rmm # perform operation
fnmadd.s f5, f13, f26, f21, rne # perform operation
fnmadd.s f5, f13, f26, f21, rtz # perform operation
fnmadd.s f5, f13, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x2, 0x156316145f7609a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x38f17defc5d2a082 # load x3 with value 0x38f17defc5d2a082
sw x3, 0(x2) # store 0x38f17defc5d2a082 in memory
flw f17, 0(x2) # load 0x38f17defc5d2a082 from memory into f17
fnmadd.s f2, f1, f9, f17, dyn # perform operation
fnmadd.s f2, f1, f9, f17, rdn # perform operation
fnmadd.s f2, f1, f9, f17, rmm # perform operation
fnmadd.s f2, f1, f9, f17, rne # perform operation
fnmadd.s f2, f1, f9, f17, rtz # perform operation
fnmadd.s f2, f1, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f1, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x13, 0x64d1e52724f73727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x786847364217d363 # load x3 with value 0x786847364217d363
sw x3, 0(x2) # store 0x786847364217d363 in memory
flw f19, 0(x2) # load 0x786847364217d363 from memory into f19
fnmadd.s f13, f23, f6, f19, dyn # perform operation
fnmadd.s f13, f23, f6, f19, rdn # perform operation
fnmadd.s f13, f23, f6, f19, rmm # perform operation
fnmadd.s f13, f23, f6, f19, rne # perform operation
fnmadd.s f13, f23, f6, f19, rtz # perform operation
fnmadd.s f13, f23, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f23, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f23, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x24, 0x3b74c85c4623f708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x66ea834c1d5eb6e1 # load x3 with value 0x66ea834c1d5eb6e1
sw x3, 0(x2) # store 0x66ea834c1d5eb6e1 in memory
flw f19, 0(x2) # load 0x66ea834c1d5eb6e1 from memory into f19
fnmadd.s f24, f25, f4, f19, dyn # perform operation
fnmadd.s f24, f25, f4, f19, rdn # perform operation
fnmadd.s f24, f25, f4, f19, rmm # perform operation
fnmadd.s f24, f25, f4, f19, rne # perform operation
fnmadd.s f24, f25, f4, f19, rtz # perform operation
fnmadd.s f24, f25, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x20, 0xd412c144fb2ad5b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xc6a2d951341b74e7 # load x3 with value 0xc6a2d951341b74e7
sw x3, 0(x2) # store 0xc6a2d951341b74e7 in memory
flw f17, 0(x2) # load 0xc6a2d951341b74e7 from memory into f17
fnmadd.s f20, f28, f5, f17, dyn # perform operation
fnmadd.s f20, f28, f5, f17, rdn # perform operation
fnmadd.s f20, f28, f5, f17, rmm # perform operation
fnmadd.s f20, f28, f5, f17, rne # perform operation
fnmadd.s f20, f28, f5, f17, rtz # perform operation
fnmadd.s f20, f28, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x27, 0xbb669e3de1595d05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xbcbc6c9b4f8d97f5 # load x3 with value 0xbcbc6c9b4f8d97f5
sw x3, 0(x2) # store 0xbcbc6c9b4f8d97f5 in memory
flw f5, 0(x2) # load 0xbcbc6c9b4f8d97f5 from memory into f5
fnmadd.s f27, f17, f7, f5, dyn # perform operation
fnmadd.s f27, f17, f7, f5, rdn # perform operation
fnmadd.s f27, f17, f7, f5, rmm # perform operation
fnmadd.s f27, f17, f7, f5, rne # perform operation
fnmadd.s f27, f17, f7, f5, rtz # perform operation
fnmadd.s f27, f17, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f17, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x27, 0xa6ceb9c794449de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x7984e39ddd8f38b2 # load x3 with value 0x7984e39ddd8f38b2
sw x3, 0(x2) # store 0x7984e39ddd8f38b2 in memory
flw f8, 0(x2) # load 0x7984e39ddd8f38b2 from memory into f8
fnmadd.s f27, f10, f9, f8, dyn # perform operation
fnmadd.s f27, f10, f9, f8, rdn # perform operation
fnmadd.s f27, f10, f9, f8, rmm # perform operation
fnmadd.s f27, f10, f9, f8, rne # perform operation
fnmadd.s f27, f10, f9, f8, rtz # perform operation
fnmadd.s f27, f10, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x3, 0x43c35643505b61f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x1758202a6e47015c # load x3 with value 0x1758202a6e47015c
sw x3, 0(x2) # store 0x1758202a6e47015c in memory
flw f15, 0(x2) # load 0x1758202a6e47015c from memory into f15
fnmadd.s f3, f27, f26, f15, dyn # perform operation
fnmadd.s f3, f27, f26, f15, rdn # perform operation
fnmadd.s f3, f27, f26, f15, rmm # perform operation
fnmadd.s f3, f27, f26, f15, rne # perform operation
fnmadd.s f3, f27, f26, f15, rtz # perform operation
fnmadd.s f3, f27, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x16, 0x8dd666f128188b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xf8d8ed12bdec13bd # load x3 with value 0xf8d8ed12bdec13bd
sw x3, 0(x2) # store 0xf8d8ed12bdec13bd in memory
flw f12, 0(x2) # load 0xf8d8ed12bdec13bd from memory into f12
fnmadd.s f16, f24, f5, f12, dyn # perform operation
fnmadd.s f16, f24, f5, f12, rdn # perform operation
fnmadd.s f16, f24, f5, f12, rmm # perform operation
fnmadd.s f16, f24, f5, f12, rne # perform operation
fnmadd.s f16, f24, f5, f12, rtz # perform operation
fnmadd.s f16, f24, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x29, 0x10990ea806466e06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x126056394c03c01d # load x3 with value 0x126056394c03c01d
sw x3, 0(x2) # store 0x126056394c03c01d in memory
flw f21, 0(x2) # load 0x126056394c03c01d from memory into f21
fnmadd.s f29, f23, f16, f21, dyn # perform operation
fnmadd.s f29, f23, f16, f21, rdn # perform operation
fnmadd.s f29, f23, f16, f21, rmm # perform operation
fnmadd.s f29, f23, f16, f21, rne # perform operation
fnmadd.s f29, f23, f16, f21, rtz # perform operation
fnmadd.s f29, f23, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x12, 0xebbbd0311e868885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x3bf32d3d090fb092 # load x3 with value 0x3bf32d3d090fb092
sw x3, 0(x2) # store 0x3bf32d3d090fb092 in memory
flw f9, 0(x2) # load 0x3bf32d3d090fb092 from memory into f9
fnmadd.s f12, f7, f1, f9, dyn # perform operation
fnmadd.s f12, f7, f1, f9, rdn # perform operation
fnmadd.s f12, f7, f1, f9, rmm # perform operation
fnmadd.s f12, f7, f1, f9, rne # perform operation
fnmadd.s f12, f7, f1, f9, rtz # perform operation
fnmadd.s f12, f7, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f7, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f7, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x31, 0x5beb3e47247ce138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x1ccb6957d6fd27d9 # load x3 with value 0x1ccb6957d6fd27d9
sw x3, 0(x2) # store 0x1ccb6957d6fd27d9 in memory
flw f23, 0(x2) # load 0x1ccb6957d6fd27d9 from memory into f23
fnmadd.s f31, f17, f1, f23, dyn # perform operation
fnmadd.s f31, f17, f1, f23, rdn # perform operation
fnmadd.s f31, f17, f1, f23, rmm # perform operation
fnmadd.s f31, f17, f1, f23, rne # perform operation
fnmadd.s f31, f17, f1, f23, rtz # perform operation
fnmadd.s f31, f17, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x1, 0x8891dc386931aad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xb6a7a7fa257ef441 # load x3 with value 0xb6a7a7fa257ef441
sw x3, 0(x2) # store 0xb6a7a7fa257ef441 in memory
flw f3, 0(x2) # load 0xb6a7a7fa257ef441 from memory into f3
fnmadd.s f1, f12, f8, f3, dyn # perform operation
fnmadd.s f1, f12, f8, f3, rdn # perform operation
fnmadd.s f1, f12, f8, f3, rmm # perform operation
fnmadd.s f1, f12, f8, f3, rne # perform operation
fnmadd.s f1, f12, f8, f3, rtz # perform operation
fnmadd.s f1, f12, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x31, 0xd2dc6f023a934e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x9410114e99775688 # load x3 with value 0x9410114e99775688
sw x3, 0(x2) # store 0x9410114e99775688 in memory
flw f14, 0(x2) # load 0x9410114e99775688 from memory into f14
fnmadd.s f31, f26, f25, f14, dyn # perform operation
fnmadd.s f31, f26, f25, f14, rdn # perform operation
fnmadd.s f31, f26, f25, f14, rmm # perform operation
fnmadd.s f31, f26, f25, f14, rne # perform operation
fnmadd.s f31, f26, f25, f14, rtz # perform operation
fnmadd.s f31, f26, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f26, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f26, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x18, 0xf58033430a6d83c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x2826c35bacae53f1 # load x3 with value 0x2826c35bacae53f1
sw x3, 0(x2) # store 0x2826c35bacae53f1 in memory
flw f6, 0(x2) # load 0x2826c35bacae53f1 from memory into f6
fnmadd.s f18, f14, f25, f6, dyn # perform operation
fnmadd.s f18, f14, f25, f6, rdn # perform operation
fnmadd.s f18, f14, f25, f6, rmm # perform operation
fnmadd.s f18, f14, f25, f6, rne # perform operation
fnmadd.s f18, f14, f25, f6, rtz # perform operation
fnmadd.s f18, f14, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x26, 0xe2230bdc1742aaf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xeb56e4b4d2d2de4 # load x3 with value 0xeb56e4b4d2d2de4
sw x3, 0(x2) # store 0xeb56e4b4d2d2de4 in memory
flw f11, 0(x2) # load 0xeb56e4b4d2d2de4 from memory into f11
fnmadd.s f26, f8, f9, f11, dyn # perform operation
fnmadd.s f26, f8, f9, f11, rdn # perform operation
fnmadd.s f26, f8, f9, f11, rmm # perform operation
fnmadd.s f26, f8, f9, f11, rne # perform operation
fnmadd.s f26, f8, f9, f11, rtz # perform operation
fnmadd.s f26, f8, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f8, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f8, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f8, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f8, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f8, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x4, 0xd0a17c3e0538d2e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xdb26370d3c40fb7c # load x3 with value 0xdb26370d3c40fb7c
sw x3, 0(x2) # store 0xdb26370d3c40fb7c in memory
flw f8, 0(x2) # load 0xdb26370d3c40fb7c from memory into f8
fnmadd.s f4, f17, f20, f8, dyn # perform operation
fnmadd.s f4, f17, f20, f8, rdn # perform operation
fnmadd.s f4, f17, f20, f8, rmm # perform operation
fnmadd.s f4, f17, f20, f8, rne # perform operation
fnmadd.s f4, f17, f20, f8, rtz # perform operation
fnmadd.s f4, f17, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f17, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x29, 0xda78e56ec3e1bd19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x33c0d569374189ec # load x3 with value 0x33c0d569374189ec
sw x3, 0(x2) # store 0x33c0d569374189ec in memory
flw f16, 0(x2) # load 0x33c0d569374189ec from memory into f16
fnmadd.s f29, f10, f18, f16, dyn # perform operation
fnmadd.s f29, f10, f18, f16, rdn # perform operation
fnmadd.s f29, f10, f18, f16, rmm # perform operation
fnmadd.s f29, f10, f18, f16, rne # perform operation
fnmadd.s f29, f10, f18, f16, rtz # perform operation
fnmadd.s f29, f10, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x4, 0x206348ee6cd6bc66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x439a7bb05de77d68 # load x3 with value 0x439a7bb05de77d68
sw x3, 0(x2) # store 0x439a7bb05de77d68 in memory
flw f15, 0(x2) # load 0x439a7bb05de77d68 from memory into f15
fnmadd.s f4, f12, f3, f15, dyn # perform operation
fnmadd.s f4, f12, f3, f15, rdn # perform operation
fnmadd.s f4, f12, f3, f15, rmm # perform operation
fnmadd.s f4, f12, f3, f15, rne # perform operation
fnmadd.s f4, f12, f3, f15, rtz # perform operation
fnmadd.s f4, f12, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f12, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f12, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x3, 0xe682605ab9890d17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x5af8af0eb1a6a35b # load x3 with value 0x5af8af0eb1a6a35b
sw x3, 0(x2) # store 0x5af8af0eb1a6a35b in memory
flw f16, 0(x2) # load 0x5af8af0eb1a6a35b from memory into f16
fnmadd.s f3, f20, f25, f16, dyn # perform operation
fnmadd.s f3, f20, f25, f16, rdn # perform operation
fnmadd.s f3, f20, f25, f16, rmm # perform operation
fnmadd.s f3, f20, f25, f16, rne # perform operation
fnmadd.s f3, f20, f25, f16, rtz # perform operation
fnmadd.s f3, f20, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f20, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x24, 0xc76d0981b1fd7dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x1cc3d5176e0e5895 # load x3 with value 0x1cc3d5176e0e5895
sw x3, 0(x2) # store 0x1cc3d5176e0e5895 in memory
flw f8, 0(x2) # load 0x1cc3d5176e0e5895 from memory into f8
fnmadd.s f24, f25, f2, f8, dyn # perform operation
fnmadd.s f24, f25, f2, f8, rdn # perform operation
fnmadd.s f24, f25, f2, f8, rmm # perform operation
fnmadd.s f24, f25, f2, f8, rne # perform operation
fnmadd.s f24, f25, f2, f8, rtz # perform operation
fnmadd.s f24, f25, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f25, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f25, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x11, 0x006fb159c07f4c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x5338ee05d3a55c2c # load x3 with value 0x5338ee05d3a55c2c
sw x3, 0(x2) # store 0x5338ee05d3a55c2c in memory
flw f28, 0(x2) # load 0x5338ee05d3a55c2c from memory into f28
fnmadd.s f11, f9, f12, f28, dyn # perform operation
fnmadd.s f11, f9, f12, f28, rdn # perform operation
fnmadd.s f11, f9, f12, f28, rmm # perform operation
fnmadd.s f11, f9, f12, f28, rne # perform operation
fnmadd.s f11, f9, f12, f28, rtz # perform operation
fnmadd.s f11, f9, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f9, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x13, 0x972d85e5a95a5076 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0xcbd70403e723a982 # load x3 with value 0xcbd70403e723a982
sw x3, 0(x2) # store 0xcbd70403e723a982 in memory
flw f20, 0(x2) # load 0xcbd70403e723a982 from memory into f20
fnmadd.s f13, f24, f3, f20, dyn # perform operation
fnmadd.s f13, f24, f3, f20, rdn # perform operation
fnmadd.s f13, f24, f3, f20, rmm # perform operation
fnmadd.s f13, f24, f3, f20, rne # perform operation
fnmadd.s f13, f24, f3, f20, rtz # perform operation
fnmadd.s f13, f24, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x25, 0x692fd5deb84b3795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x6c0d6987da22b461 # load x3 with value 0x6c0d6987da22b461
sw x3, 0(x2) # store 0x6c0d6987da22b461 in memory
flw f16, 0(x2) # load 0x6c0d6987da22b461 from memory into f16
fnmadd.s f25, f17, f1, f16, dyn # perform operation
fnmadd.s f25, f17, f1, f16, rdn # perform operation
fnmadd.s f25, f17, f1, f16, rmm # perform operation
fnmadd.s f25, f17, f1, f16, rne # perform operation
fnmadd.s f25, f17, f1, f16, rtz # perform operation
fnmadd.s f25, f17, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x22, 0x7191b4ed93d63e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xa9fcb7fc98ce0d41 # load x3 with value 0xa9fcb7fc98ce0d41
sw x3, 0(x2) # store 0xa9fcb7fc98ce0d41 in memory
flw f25, 0(x2) # load 0xa9fcb7fc98ce0d41 from memory into f25
fnmadd.s f22, f21, f11, f25, dyn # perform operation
fnmadd.s f22, f21, f11, f25, rdn # perform operation
fnmadd.s f22, f21, f11, f25, rmm # perform operation
fnmadd.s f22, f21, f11, f25, rne # perform operation
fnmadd.s f22, f21, f11, f25, rtz # perform operation
fnmadd.s f22, f21, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f21, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f21, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x21, 0xa5743e1e7fa69c49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xa9c02fa91bde57e1 # load x3 with value 0xa9c02fa91bde57e1
sw x3, 0(x2) # store 0xa9c02fa91bde57e1 in memory
flw f17, 0(x2) # load 0xa9c02fa91bde57e1 from memory into f17
fnmadd.s f21, f3, f8, f17, dyn # perform operation
fnmadd.s f21, f3, f8, f17, rdn # perform operation
fnmadd.s f21, f3, f8, f17, rmm # perform operation
fnmadd.s f21, f3, f8, f17, rne # perform operation
fnmadd.s f21, f3, f8, f17, rtz # perform operation
fnmadd.s f21, f3, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x12, 0x4df7782c68131c06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x1aa0da5380dd03f9 # load x3 with value 0x1aa0da5380dd03f9
sw x3, 0(x2) # store 0x1aa0da5380dd03f9 in memory
flw f30, 0(x2) # load 0x1aa0da5380dd03f9 from memory into f30
fnmadd.s f12, f2, f22, f30, dyn # perform operation
fnmadd.s f12, f2, f22, f30, rdn # perform operation
fnmadd.s f12, f2, f22, f30, rmm # perform operation
fnmadd.s f12, f2, f22, f30, rne # perform operation
fnmadd.s f12, f2, f22, f30, rtz # perform operation
fnmadd.s f12, f2, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x29, 0x90832ae617f4d0cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x24b2bdc29159942f # load x3 with value 0x24b2bdc29159942f
sw x3, 0(x2) # store 0x24b2bdc29159942f in memory
flw f25, 0(x2) # load 0x24b2bdc29159942f from memory into f25
fnmadd.s f29, f16, f3, f25, dyn # perform operation
fnmadd.s f29, f16, f3, f25, rdn # perform operation
fnmadd.s f29, f16, f3, f25, rmm # perform operation
fnmadd.s f29, f16, f3, f25, rne # perform operation
fnmadd.s f29, f16, f3, f25, rtz # perform operation
fnmadd.s f29, f16, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x31, 0xf12d268c653e5eee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xf074f036168cfd04 # load x3 with value 0xf074f036168cfd04
sw x3, 0(x2) # store 0xf074f036168cfd04 in memory
flw f24, 0(x2) # load 0xf074f036168cfd04 from memory into f24
fnmadd.s f31, f4, f16, f24, dyn # perform operation
fnmadd.s f31, f4, f16, f24, rdn # perform operation
fnmadd.s f31, f4, f16, f24, rmm # perform operation
fnmadd.s f31, f4, f16, f24, rne # perform operation
fnmadd.s f31, f4, f16, f24, rtz # perform operation
fnmadd.s f31, f4, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f4, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x21, 0xbe7e59edc59dd6a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x441941d726026478 # load x3 with value 0x441941d726026478
sw x3, 0(x2) # store 0x441941d726026478 in memory
flw f6, 0(x2) # load 0x441941d726026478 from memory into f6
fnmadd.s f21, f4, f1, f6, dyn # perform operation
fnmadd.s f21, f4, f1, f6, rdn # perform operation
fnmadd.s f21, f4, f1, f6, rmm # perform operation
fnmadd.s f21, f4, f1, f6, rne # perform operation
fnmadd.s f21, f4, f1, f6, rtz # perform operation
fnmadd.s f21, f4, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f4, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f4, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f4, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f4, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f4, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x15, 0xe4ed497c4319addf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x4840b4e561472277 # load x3 with value 0x4840b4e561472277
sw x3, 0(x2) # store 0x4840b4e561472277 in memory
flw f26, 0(x2) # load 0x4840b4e561472277 from memory into f26
fnmadd.s f15, f16, f6, f26, dyn # perform operation
fnmadd.s f15, f16, f6, f26, rdn # perform operation
fnmadd.s f15, f16, f6, f26, rmm # perform operation
fnmadd.s f15, f16, f6, f26, rne # perform operation
fnmadd.s f15, f16, f6, f26, rtz # perform operation
fnmadd.s f15, f16, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f16, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f16, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f16, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f16, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f16, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x18, 0x35c94624b622455b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x1e0a189cdc285e17 # load x3 with value 0x1e0a189cdc285e17
sw x3, 0(x2) # store 0x1e0a189cdc285e17 in memory
flw f6, 0(x2) # load 0x1e0a189cdc285e17 from memory into f6
fnmadd.s f18, f19, f16, f6, dyn # perform operation
fnmadd.s f18, f19, f16, f6, rdn # perform operation
fnmadd.s f18, f19, f16, f6, rmm # perform operation
fnmadd.s f18, f19, f16, f6, rne # perform operation
fnmadd.s f18, f19, f16, f6, rtz # perform operation
fnmadd.s f18, f19, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f19, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x5, 0x361ed2c6ddbfbc7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x436c6e37305d3a0a # load x3 with value 0x436c6e37305d3a0a
sw x3, 0(x2) # store 0x436c6e37305d3a0a in memory
flw f29, 0(x2) # load 0x436c6e37305d3a0a from memory into f29
fnmadd.s f5, f12, f21, f29, dyn # perform operation
fnmadd.s f5, f12, f21, f29, rdn # perform operation
fnmadd.s f5, f12, f21, f29, rmm # perform operation
fnmadd.s f5, f12, f21, f29, rne # perform operation
fnmadd.s f5, f12, f21, f29, rtz # perform operation
fnmadd.s f5, f12, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x23, 0x7186ef37195c0d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x5d808c099481854f # load x3 with value 0x5d808c099481854f
sw x3, 0(x2) # store 0x5d808c099481854f in memory
flw f6, 0(x2) # load 0x5d808c099481854f from memory into f6
fnmadd.s f23, f20, f3, f6, dyn # perform operation
fnmadd.s f23, f20, f3, f6, rdn # perform operation
fnmadd.s f23, f20, f3, f6, rmm # perform operation
fnmadd.s f23, f20, f3, f6, rne # perform operation
fnmadd.s f23, f20, f3, f6, rtz # perform operation
fnmadd.s f23, f20, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x24, 0xf3da23f8e6e17d09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xdd604a8ad6ed874d # load x3 with value 0xdd604a8ad6ed874d
sw x3, 0(x2) # store 0xdd604a8ad6ed874d in memory
flw f25, 0(x2) # load 0xdd604a8ad6ed874d from memory into f25
fnmadd.s f24, f16, f8, f25, dyn # perform operation
fnmadd.s f24, f16, f8, f25, rdn # perform operation
fnmadd.s f24, f16, f8, f25, rmm # perform operation
fnmadd.s f24, f16, f8, f25, rne # perform operation
fnmadd.s f24, f16, f8, f25, rtz # perform operation
fnmadd.s f24, f16, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x13, 0x6a44baa6f21cf205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x1125188260ea131 # load x3 with value 0x1125188260ea131
sw x3, 0(x2) # store 0x1125188260ea131 in memory
flw f28, 0(x2) # load 0x1125188260ea131 from memory into f28
fnmadd.s f13, f12, f23, f28, dyn # perform operation
fnmadd.s f13, f12, f23, f28, rdn # perform operation
fnmadd.s f13, f12, f23, f28, rmm # perform operation
fnmadd.s f13, f12, f23, f28, rne # perform operation
fnmadd.s f13, f12, f23, f28, rtz # perform operation
fnmadd.s f13, f12, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x22, 0x5b0f0c3927301e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x1bee7c4ff5a9282b # load x3 with value 0x1bee7c4ff5a9282b
sw x3, 0(x2) # store 0x1bee7c4ff5a9282b in memory
flw f30, 0(x2) # load 0x1bee7c4ff5a9282b from memory into f30
fnmadd.s f22, f26, f8, f30, dyn # perform operation
fnmadd.s f22, f26, f8, f30, rdn # perform operation
fnmadd.s f22, f26, f8, f30, rmm # perform operation
fnmadd.s f22, f26, f8, f30, rne # perform operation
fnmadd.s f22, f26, f8, f30, rtz # perform operation
fnmadd.s f22, f26, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f26, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x25, 0x5a17efa1247d6f70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x3bad9911448b17d5 # load x3 with value 0x3bad9911448b17d5
sw x3, 0(x2) # store 0x3bad9911448b17d5 in memory
flw f28, 0(x2) # load 0x3bad9911448b17d5 from memory into f28
fnmadd.s f25, f21, f7, f28, dyn # perform operation
fnmadd.s f25, f21, f7, f28, rdn # perform operation
fnmadd.s f25, f21, f7, f28, rmm # perform operation
fnmadd.s f25, f21, f7, f28, rne # perform operation
fnmadd.s f25, f21, f7, f28, rtz # perform operation
fnmadd.s f25, f21, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f21, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f21, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f21, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f21, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f21, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x24, 0x311d6c4623d0bc03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xa12ed6946545dc03 # load x3 with value 0xa12ed6946545dc03
sw x3, 0(x2) # store 0xa12ed6946545dc03 in memory
flw f17, 0(x2) # load 0xa12ed6946545dc03 from memory into f17
fnmadd.s f24, f10, f20, f17, dyn # perform operation
fnmadd.s f24, f10, f20, f17, rdn # perform operation
fnmadd.s f24, f10, f20, f17, rmm # perform operation
fnmadd.s f24, f10, f20, f17, rne # perform operation
fnmadd.s f24, f10, f20, f17, rtz # perform operation
fnmadd.s f24, f10, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f10, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x19, 0x539bee73c43f17cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xd2794be03aff8d3a # load x3 with value 0xd2794be03aff8d3a
sw x3, 0(x2) # store 0xd2794be03aff8d3a in memory
flw f14, 0(x2) # load 0xd2794be03aff8d3a from memory into f14
fnmadd.s f19, f30, f13, f14, dyn # perform operation
fnmadd.s f19, f30, f13, f14, rdn # perform operation
fnmadd.s f19, f30, f13, f14, rmm # perform operation
fnmadd.s f19, f30, f13, f14, rne # perform operation
fnmadd.s f19, f30, f13, f14, rtz # perform operation
fnmadd.s f19, f30, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x19, 0x6d7a297f72ff182e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x6c9c4ddb47445a64 # load x3 with value 0x6c9c4ddb47445a64
sw x3, 0(x2) # store 0x6c9c4ddb47445a64 in memory
flw f7, 0(x2) # load 0x6c9c4ddb47445a64 from memory into f7
fnmadd.s f19, f25, f13, f7, dyn # perform operation
fnmadd.s f19, f25, f13, f7, rdn # perform operation
fnmadd.s f19, f25, f13, f7, rmm # perform operation
fnmadd.s f19, f25, f13, f7, rne # perform operation
fnmadd.s f19, f25, f13, f7, rtz # perform operation
fnmadd.s f19, f25, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x7, 0xb9e8f1260abbf88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x622878128e8f157e # load x3 with value 0x622878128e8f157e
sw x3, 0(x2) # store 0x622878128e8f157e in memory
flw f8, 0(x2) # load 0x622878128e8f157e from memory into f8
fnmadd.s f7, f1, f30, f8, dyn # perform operation
fnmadd.s f7, f1, f30, f8, rdn # perform operation
fnmadd.s f7, f1, f30, f8, rmm # perform operation
fnmadd.s f7, f1, f30, f8, rne # perform operation
fnmadd.s f7, f1, f30, f8, rtz # perform operation
fnmadd.s f7, f1, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x10, 0x463dcabc7983d64a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x686c73a58c2808a # load x3 with value 0x686c73a58c2808a
sw x3, 0(x2) # store 0x686c73a58c2808a in memory
flw f9, 0(x2) # load 0x686c73a58c2808a from memory into f9
fnmadd.s f10, f19, f13, f9, dyn # perform operation
fnmadd.s f10, f19, f13, f9, rdn # perform operation
fnmadd.s f10, f19, f13, f9, rmm # perform operation
fnmadd.s f10, f19, f13, f9, rne # perform operation
fnmadd.s f10, f19, f13, f9, rtz # perform operation
fnmadd.s f10, f19, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f19, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x16, 0x76b68837cb2576fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x7f2d414f7bc395d3 # load x3 with value 0x7f2d414f7bc395d3
sw x3, 0(x2) # store 0x7f2d414f7bc395d3 in memory
flw f10, 0(x2) # load 0x7f2d414f7bc395d3 from memory into f10
fnmadd.s f16, f13, f22, f10, dyn # perform operation
fnmadd.s f16, f13, f22, f10, rdn # perform operation
fnmadd.s f16, f13, f22, f10, rmm # perform operation
fnmadd.s f16, f13, f22, f10, rne # perform operation
fnmadd.s f16, f13, f22, f10, rtz # perform operation
fnmadd.s f16, f13, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f13, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x20, 0xfa6d96f2a5aa1b25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xfc824b5681b08a5f # load x3 with value 0xfc824b5681b08a5f
sw x3, 0(x2) # store 0xfc824b5681b08a5f in memory
flw f23, 0(x2) # load 0xfc824b5681b08a5f from memory into f23
fnmadd.s f20, f6, f24, f23, dyn # perform operation
fnmadd.s f20, f6, f24, f23, rdn # perform operation
fnmadd.s f20, f6, f24, f23, rmm # perform operation
fnmadd.s f20, f6, f24, f23, rne # perform operation
fnmadd.s f20, f6, f24, f23, rtz # perform operation
fnmadd.s f20, f6, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x3, 0xa222e9a03e888270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x1aa7f494bbdd8989 # load x3 with value 0x1aa7f494bbdd8989
sw x3, 0(x2) # store 0x1aa7f494bbdd8989 in memory
flw f4, 0(x2) # load 0x1aa7f494bbdd8989 from memory into f4
fnmadd.s f3, f30, f14, f4, dyn # perform operation
fnmadd.s f3, f30, f14, f4, rdn # perform operation
fnmadd.s f3, f30, f14, f4, rmm # perform operation
fnmadd.s f3, f30, f14, f4, rne # perform operation
fnmadd.s f3, f30, f14, f4, rtz # perform operation
fnmadd.s f3, f30, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x2, 0x09304e8cb28585dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x559e37406cbe785f # load x3 with value 0x559e37406cbe785f
sw x3, 0(x2) # store 0x559e37406cbe785f in memory
flw f18, 0(x2) # load 0x559e37406cbe785f from memory into f18
fnmadd.s f2, f9, f13, f18, dyn # perform operation
fnmadd.s f2, f9, f13, f18, rdn # perform operation
fnmadd.s f2, f9, f13, f18, rmm # perform operation
fnmadd.s f2, f9, f13, f18, rne # perform operation
fnmadd.s f2, f9, f13, f18, rtz # perform operation
fnmadd.s f2, f9, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x10, 0x63c05c4872ef80e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x4627778472964730 # load x3 with value 0x4627778472964730
sw x3, 0(x2) # store 0x4627778472964730 in memory
flw f22, 0(x2) # load 0x4627778472964730 from memory into f22
fnmadd.s f10, f12, f19, f22, dyn # perform operation
fnmadd.s f10, f12, f19, f22, rdn # perform operation
fnmadd.s f10, f12, f19, f22, rmm # perform operation
fnmadd.s f10, f12, f19, f22, rne # perform operation
fnmadd.s f10, f12, f19, f22, rtz # perform operation
fnmadd.s f10, f12, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f12, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f12, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x27, 0x9f6445d6efe5111f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x27b96c8f18c7994e # load x3 with value 0x27b96c8f18c7994e
sw x3, 0(x2) # store 0x27b96c8f18c7994e in memory
flw f25, 0(x2) # load 0x27b96c8f18c7994e from memory into f25
fnmadd.s f27, f11, f8, f25, dyn # perform operation
fnmadd.s f27, f11, f8, f25, rdn # perform operation
fnmadd.s f27, f11, f8, f25, rmm # perform operation
fnmadd.s f27, f11, f8, f25, rne # perform operation
fnmadd.s f27, f11, f8, f25, rtz # perform operation
fnmadd.s f27, f11, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f11, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f11, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f11, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f11, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f11, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x30, 0xd6bcf6b07dabc0d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xfc197cde198209a # load x3 with value 0xfc197cde198209a
sw x3, 0(x2) # store 0xfc197cde198209a in memory
flw f19, 0(x2) # load 0xfc197cde198209a from memory into f19
fnmadd.s f30, f5, f25, f19, dyn # perform operation
fnmadd.s f30, f5, f25, f19, rdn # perform operation
fnmadd.s f30, f5, f25, f19, rmm # perform operation
fnmadd.s f30, f5, f25, f19, rne # perform operation
fnmadd.s f30, f5, f25, f19, rtz # perform operation
fnmadd.s f30, f5, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f5, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x17, 0x79154b85c467d4df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x32634bbcfb20e3f0 # load x3 with value 0x32634bbcfb20e3f0
sw x3, 0(x2) # store 0x32634bbcfb20e3f0 in memory
flw f6, 0(x2) # load 0x32634bbcfb20e3f0 from memory into f6
fnmadd.s f17, f18, f28, f6, dyn # perform operation
fnmadd.s f17, f18, f28, f6, rdn # perform operation
fnmadd.s f17, f18, f28, f6, rmm # perform operation
fnmadd.s f17, f18, f28, f6, rne # perform operation
fnmadd.s f17, f18, f28, f6, rtz # perform operation
fnmadd.s f17, f18, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x15, 0xeb6df08e9c92c24b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xb25ff4a6b1c9b1ef # load x3 with value 0xb25ff4a6b1c9b1ef
sw x3, 0(x2) # store 0xb25ff4a6b1c9b1ef in memory
flw f26, 0(x2) # load 0xb25ff4a6b1c9b1ef from memory into f26
fnmadd.s f15, f18, f19, f26, dyn # perform operation
fnmadd.s f15, f18, f19, f26, rdn # perform operation
fnmadd.s f15, f18, f19, f26, rmm # perform operation
fnmadd.s f15, f18, f19, f26, rne # perform operation
fnmadd.s f15, f18, f19, f26, rtz # perform operation
fnmadd.s f15, f18, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x19, 0x74010db7bc913aed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x6dc0a2e5b2d24853 # load x3 with value 0x6dc0a2e5b2d24853
sw x3, 0(x2) # store 0x6dc0a2e5b2d24853 in memory
flw f7, 0(x2) # load 0x6dc0a2e5b2d24853 from memory into f7
fnmadd.s f19, f25, f16, f7, dyn # perform operation
fnmadd.s f19, f25, f16, f7, rdn # perform operation
fnmadd.s f19, f25, f16, f7, rmm # perform operation
fnmadd.s f19, f25, f16, f7, rne # perform operation
fnmadd.s f19, f25, f16, f7, rtz # perform operation
fnmadd.s f19, f25, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x1, 0x0f4783460ed19980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xd3537666d994da34 # load x3 with value 0xd3537666d994da34
sw x3, 0(x2) # store 0xd3537666d994da34 in memory
flw f10, 0(x2) # load 0xd3537666d994da34 from memory into f10
fnmadd.s f1, f21, f4, f10, dyn # perform operation
fnmadd.s f1, f21, f4, f10, rdn # perform operation
fnmadd.s f1, f21, f4, f10, rmm # perform operation
fnmadd.s f1, f21, f4, f10, rne # perform operation
fnmadd.s f1, f21, f4, f10, rtz # perform operation
fnmadd.s f1, f21, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x24, 0x11fc014301c57679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xf4c54e29bb5678be # load x3 with value 0xf4c54e29bb5678be
sw x3, 0(x2) # store 0xf4c54e29bb5678be in memory
flw f22, 0(x2) # load 0xf4c54e29bb5678be from memory into f22
fnmadd.s f24, f31, f26, f22, dyn # perform operation
fnmadd.s f24, f31, f26, f22, rdn # perform operation
fnmadd.s f24, f31, f26, f22, rmm # perform operation
fnmadd.s f24, f31, f26, f22, rne # perform operation
fnmadd.s f24, f31, f26, f22, rtz # perform operation
fnmadd.s f24, f31, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x16, 0xcd0b8f214b9f0973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xa1874cf9a7cf7043 # load x3 with value 0xa1874cf9a7cf7043
sw x3, 0(x2) # store 0xa1874cf9a7cf7043 in memory
flw f1, 0(x2) # load 0xa1874cf9a7cf7043 from memory into f1
fnmadd.s f16, f3, f30, f1, dyn # perform operation
fnmadd.s f16, f3, f30, f1, rdn # perform operation
fnmadd.s f16, f3, f30, f1, rmm # perform operation
fnmadd.s f16, f3, f30, f1, rne # perform operation
fnmadd.s f16, f3, f30, f1, rtz # perform operation
fnmadd.s f16, f3, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x2, 0xb2b85725b7cbe80f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xf0a35fa7ad078d0e # load x3 with value 0xf0a35fa7ad078d0e
sw x3, 0(x2) # store 0xf0a35fa7ad078d0e in memory
flw f13, 0(x2) # load 0xf0a35fa7ad078d0e from memory into f13
fnmadd.s f2, f16, f15, f13, dyn # perform operation
fnmadd.s f2, f16, f15, f13, rdn # perform operation
fnmadd.s f2, f16, f15, f13, rmm # perform operation
fnmadd.s f2, f16, f15, f13, rne # perform operation
fnmadd.s f2, f16, f15, f13, rtz # perform operation
fnmadd.s f2, f16, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x10, 0x8b6f4bdf5fa1c930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x8c4761fa0e5b8db9 # load x3 with value 0x8c4761fa0e5b8db9
sw x3, 0(x2) # store 0x8c4761fa0e5b8db9 in memory
flw f16, 0(x2) # load 0x8c4761fa0e5b8db9 from memory into f16
fnmadd.s f10, f15, f19, f16, dyn # perform operation
fnmadd.s f10, f15, f19, f16, rdn # perform operation
fnmadd.s f10, f15, f19, f16, rmm # perform operation
fnmadd.s f10, f15, f19, f16, rne # perform operation
fnmadd.s f10, f15, f19, f16, rtz # perform operation
fnmadd.s f10, f15, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x28, 0x3dc116f37be25119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xe59f64e5ab3f3df # load x3 with value 0xe59f64e5ab3f3df
sw x3, 0(x2) # store 0xe59f64e5ab3f3df in memory
flw f31, 0(x2) # load 0xe59f64e5ab3f3df from memory into f31
fnmadd.s f28, f15, f27, f31, dyn # perform operation
fnmadd.s f28, f15, f27, f31, rdn # perform operation
fnmadd.s f28, f15, f27, f31, rmm # perform operation
fnmadd.s f28, f15, f27, f31, rne # perform operation
fnmadd.s f28, f15, f27, f31, rtz # perform operation
fnmadd.s f28, f15, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x29, 0x03134bc56c8cda8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x971efc212a2fd5a0 # load x3 with value 0x971efc212a2fd5a0
sw x3, 0(x2) # store 0x971efc212a2fd5a0 in memory
flw f11, 0(x2) # load 0x971efc212a2fd5a0 from memory into f11
fnmadd.s f29, f3, f13, f11, dyn # perform operation
fnmadd.s f29, f3, f13, f11, rdn # perform operation
fnmadd.s f29, f3, f13, f11, rmm # perform operation
fnmadd.s f29, f3, f13, f11, rne # perform operation
fnmadd.s f29, f3, f13, f11, rtz # perform operation
fnmadd.s f29, f3, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x7, 0xb43d20c8dbf2923c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x6e08f76a4584f8d1 # load x3 with value 0x6e08f76a4584f8d1
sw x3, 0(x2) # store 0x6e08f76a4584f8d1 in memory
flw f25, 0(x2) # load 0x6e08f76a4584f8d1 from memory into f25
fnmadd.s f7, f11, f14, f25, dyn # perform operation
fnmadd.s f7, f11, f14, f25, rdn # perform operation
fnmadd.s f7, f11, f14, f25, rmm # perform operation
fnmadd.s f7, f11, f14, f25, rne # perform operation
fnmadd.s f7, f11, f14, f25, rtz # perform operation
fnmadd.s f7, f11, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x14, 0xab1410fd6ef55228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xbcab34b197dd9710 # load x3 with value 0xbcab34b197dd9710
sw x3, 0(x2) # store 0xbcab34b197dd9710 in memory
flw f19, 0(x2) # load 0xbcab34b197dd9710 from memory into f19
fnmadd.s f14, f17, f15, f19, dyn # perform operation
fnmadd.s f14, f17, f15, f19, rdn # perform operation
fnmadd.s f14, f17, f15, f19, rmm # perform operation
fnmadd.s f14, f17, f15, f19, rne # perform operation
fnmadd.s f14, f17, f15, f19, rtz # perform operation
fnmadd.s f14, f17, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f17, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f17, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f17, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f17, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f17, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x16, 0x78b755a4fdff2e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xe2b830fe215d7ce0 # load x3 with value 0xe2b830fe215d7ce0
sw x3, 0(x2) # store 0xe2b830fe215d7ce0 in memory
flw f3, 0(x2) # load 0xe2b830fe215d7ce0 from memory into f3
fnmadd.s f16, f20, f30, f3, dyn # perform operation
fnmadd.s f16, f20, f30, f3, rdn # perform operation
fnmadd.s f16, f20, f30, f3, rmm # perform operation
fnmadd.s f16, f20, f30, f3, rne # perform operation
fnmadd.s f16, f20, f30, f3, rtz # perform operation
fnmadd.s f16, f20, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x7, 0xf111ac30b8ee8a0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x395ca1544865fd07 # load x3 with value 0x395ca1544865fd07
sw x3, 0(x2) # store 0x395ca1544865fd07 in memory
flw f10, 0(x2) # load 0x395ca1544865fd07 from memory into f10
fnmadd.s f7, f15, f21, f10, dyn # perform operation
fnmadd.s f7, f15, f21, f10, rdn # perform operation
fnmadd.s f7, f15, f21, f10, rmm # perform operation
fnmadd.s f7, f15, f21, f10, rne # perform operation
fnmadd.s f7, f15, f21, f10, rtz # perform operation
fnmadd.s f7, f15, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x8, 0xb994df4d2c729759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x58ee9c234ec0555d # load x3 with value 0x58ee9c234ec0555d
sw x3, 0(x2) # store 0x58ee9c234ec0555d in memory
flw f6, 0(x2) # load 0x58ee9c234ec0555d from memory into f6
fnmadd.s f8, f20, f11, f6, dyn # perform operation
fnmadd.s f8, f20, f11, f6, rdn # perform operation
fnmadd.s f8, f20, f11, f6, rmm # perform operation
fnmadd.s f8, f20, f11, f6, rne # perform operation
fnmadd.s f8, f20, f11, f6, rtz # perform operation
fnmadd.s f8, f20, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x12, 0x7ec358fc508e878a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xbceb033681219bea # load x3 with value 0xbceb033681219bea
sw x3, 0(x2) # store 0xbceb033681219bea in memory
flw f3, 0(x2) # load 0xbceb033681219bea from memory into f3
fnmadd.s f12, f6, f4, f3, dyn # perform operation
fnmadd.s f12, f6, f4, f3, rdn # perform operation
fnmadd.s f12, f6, f4, f3, rmm # perform operation
fnmadd.s f12, f6, f4, f3, rne # perform operation
fnmadd.s f12, f6, f4, f3, rtz # perform operation
fnmadd.s f12, f6, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x4, 0xe26502eee20c1e55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x2e7ad4ab5a56518 # load x3 with value 0x2e7ad4ab5a56518
sw x3, 0(x2) # store 0x2e7ad4ab5a56518 in memory
flw f3, 0(x2) # load 0x2e7ad4ab5a56518 from memory into f3
fnmadd.s f4, f24, f15, f3, dyn # perform operation
fnmadd.s f4, f24, f15, f3, rdn # perform operation
fnmadd.s f4, f24, f15, f3, rmm # perform operation
fnmadd.s f4, f24, f15, f3, rne # perform operation
fnmadd.s f4, f24, f15, f3, rtz # perform operation
fnmadd.s f4, f24, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f24, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x24, 0xa2f6e639c50f22c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xab5492d3c1e2cb90 # load x3 with value 0xab5492d3c1e2cb90
sw x3, 0(x2) # store 0xab5492d3c1e2cb90 in memory
flw f19, 0(x2) # load 0xab5492d3c1e2cb90 from memory into f19
fnmadd.s f24, f21, f31, f19, dyn # perform operation
fnmadd.s f24, f21, f31, f19, rdn # perform operation
fnmadd.s f24, f21, f31, f19, rmm # perform operation
fnmadd.s f24, f21, f31, f19, rne # perform operation
fnmadd.s f24, f21, f31, f19, rtz # perform operation
fnmadd.s f24, f21, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f31, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x28, 0x086854412849092e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x6fecfe727bcb630c # load x3 with value 0x6fecfe727bcb630c
sw x3, 0(x2) # store 0x6fecfe727bcb630c in memory
flw f6, 0(x2) # load 0x6fecfe727bcb630c from memory into f6
fnmadd.s f28, f7, f5, f6, dyn # perform operation
fnmadd.s f28, f7, f5, f6, rdn # perform operation
fnmadd.s f28, f7, f5, f6, rmm # perform operation
fnmadd.s f28, f7, f5, f6, rne # perform operation
fnmadd.s f28, f7, f5, f6, rtz # perform operation
fnmadd.s f28, f7, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x23, 0x6e6fe55684afb2a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x5c60d5bfbbdbda67 # load x3 with value 0x5c60d5bfbbdbda67
sw x3, 0(x2) # store 0x5c60d5bfbbdbda67 in memory
flw f30, 0(x2) # load 0x5c60d5bfbbdbda67 from memory into f30
fnmadd.s f23, f14, f7, f30, dyn # perform operation
fnmadd.s f23, f14, f7, f30, rdn # perform operation
fnmadd.s f23, f14, f7, f30, rmm # perform operation
fnmadd.s f23, f14, f7, f30, rne # perform operation
fnmadd.s f23, f14, f7, f30, rtz # perform operation
fnmadd.s f23, f14, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x21, 0x9c08622c50eb76f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xfa0e659fdc4d6928 # load x3 with value 0xfa0e659fdc4d6928
sw x3, 0(x2) # store 0xfa0e659fdc4d6928 in memory
flw f26, 0(x2) # load 0xfa0e659fdc4d6928 from memory into f26
fnmadd.s f21, f2, f22, f26, dyn # perform operation
fnmadd.s f21, f2, f22, f26, rdn # perform operation
fnmadd.s f21, f2, f22, f26, rmm # perform operation
fnmadd.s f21, f2, f22, f26, rne # perform operation
fnmadd.s f21, f2, f22, f26, rtz # perform operation
fnmadd.s f21, f2, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x23, 0x9e918537883e007a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x7e9d5ba003130177 # load x3 with value 0x7e9d5ba003130177
sw x3, 0(x2) # store 0x7e9d5ba003130177 in memory
flw f29, 0(x2) # load 0x7e9d5ba003130177 from memory into f29
fnmadd.s f23, f6, f3, f29, dyn # perform operation
fnmadd.s f23, f6, f3, f29, rdn # perform operation
fnmadd.s f23, f6, f3, f29, rmm # perform operation
fnmadd.s f23, f6, f3, f29, rne # perform operation
fnmadd.s f23, f6, f3, f29, rtz # perform operation
fnmadd.s f23, f6, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x20, 0x28c42e743330d585 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xfa46ab06d0a67e18 # load x3 with value 0xfa46ab06d0a67e18
sw x3, 0(x2) # store 0xfa46ab06d0a67e18 in memory
flw f3, 0(x2) # load 0xfa46ab06d0a67e18 from memory into f3
fnmadd.s f20, f30, f12, f3, dyn # perform operation
fnmadd.s f20, f30, f12, f3, rdn # perform operation
fnmadd.s f20, f30, f12, f3, rmm # perform operation
fnmadd.s f20, f30, f12, f3, rne # perform operation
fnmadd.s f20, f30, f12, f3, rtz # perform operation
fnmadd.s f20, f30, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x28, 0xbd5fbc18f972d15a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x36df01e2c730cd8a # load x3 with value 0x36df01e2c730cd8a
sw x3, 0(x2) # store 0x36df01e2c730cd8a in memory
flw f30, 0(x2) # load 0x36df01e2c730cd8a from memory into f30
fnmadd.s f28, f15, f14, f30, dyn # perform operation
fnmadd.s f28, f15, f14, f30, rdn # perform operation
fnmadd.s f28, f15, f14, f30, rmm # perform operation
fnmadd.s f28, f15, f14, f30, rne # perform operation
fnmadd.s f28, f15, f14, f30, rtz # perform operation
fnmadd.s f28, f15, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x4, 0x2a91144b5c097303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x714988747af3b4e0 # load x3 with value 0x714988747af3b4e0
sw x3, 0(x2) # store 0x714988747af3b4e0 in memory
flw f14, 0(x2) # load 0x714988747af3b4e0 from memory into f14
fnmadd.s f4, f23, f17, f14, dyn # perform operation
fnmadd.s f4, f23, f17, f14, rdn # perform operation
fnmadd.s f4, f23, f17, f14, rmm # perform operation
fnmadd.s f4, f23, f17, f14, rne # perform operation
fnmadd.s f4, f23, f17, f14, rtz # perform operation
fnmadd.s f4, f23, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x25, 0x2f562f9266fc5e8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x95785ceb78555ca3 # load x3 with value 0x95785ceb78555ca3
sw x3, 0(x2) # store 0x95785ceb78555ca3 in memory
flw f22, 0(x2) # load 0x95785ceb78555ca3 from memory into f22
fnmadd.s f25, f23, f12, f22, dyn # perform operation
fnmadd.s f25, f23, f12, f22, rdn # perform operation
fnmadd.s f25, f23, f12, f22, rmm # perform operation
fnmadd.s f25, f23, f12, f22, rne # perform operation
fnmadd.s f25, f23, f12, f22, rtz # perform operation
fnmadd.s f25, f23, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f23, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f23, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f23, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f23, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f23, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x11, 0xdb0cba36f6bcd853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x933b61201ccf993c # load x3 with value 0x933b61201ccf993c
sw x3, 0(x2) # store 0x933b61201ccf993c in memory
flw f9, 0(x2) # load 0x933b61201ccf993c from memory into f9
fnmadd.s f11, f28, f21, f9, dyn # perform operation
fnmadd.s f11, f28, f21, f9, rdn # perform operation
fnmadd.s f11, f28, f21, f9, rmm # perform operation
fnmadd.s f11, f28, f21, f9, rne # perform operation
fnmadd.s f11, f28, f21, f9, rtz # perform operation
fnmadd.s f11, f28, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x25, 0xca1b300a0328a323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x20f297e1b3012fa1 # load x3 with value 0x20f297e1b3012fa1
sw x3, 0(x2) # store 0x20f297e1b3012fa1 in memory
flw f20, 0(x2) # load 0x20f297e1b3012fa1 from memory into f20
fnmadd.s f25, f28, f6, f20, dyn # perform operation
fnmadd.s f25, f28, f6, f20, rdn # perform operation
fnmadd.s f25, f28, f6, f20, rmm # perform operation
fnmadd.s f25, f28, f6, f20, rne # perform operation
fnmadd.s f25, f28, f6, f20, rtz # perform operation
fnmadd.s f25, f28, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x23, 0x0bc1854a7213f814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x6d0022277bf1db8e # load x3 with value 0x6d0022277bf1db8e
sw x3, 0(x2) # store 0x6d0022277bf1db8e in memory
flw f26, 0(x2) # load 0x6d0022277bf1db8e from memory into f26
fnmadd.s f23, f9, f22, f26, dyn # perform operation
fnmadd.s f23, f9, f22, f26, rdn # perform operation
fnmadd.s f23, f9, f22, f26, rmm # perform operation
fnmadd.s f23, f9, f22, f26, rne # perform operation
fnmadd.s f23, f9, f22, f26, rtz # perform operation
fnmadd.s f23, f9, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x20, 0xc41ac4dbb9bcee21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x447bba1a63658ef # load x3 with value 0x447bba1a63658ef
sw x3, 0(x2) # store 0x447bba1a63658ef in memory
flw f19, 0(x2) # load 0x447bba1a63658ef from memory into f19
fnmadd.s f20, f30, f9, f19, dyn # perform operation
fnmadd.s f20, f30, f9, f19, rdn # perform operation
fnmadd.s f20, f30, f9, f19, rmm # perform operation
fnmadd.s f20, f30, f9, f19, rne # perform operation
fnmadd.s f20, f30, f9, f19, rtz # perform operation
fnmadd.s f20, f30, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x1, 0x23a8aaa491a7a626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x89bb573702bbb5a8 # load x3 with value 0x89bb573702bbb5a8
sw x3, 0(x2) # store 0x89bb573702bbb5a8 in memory
flw f20, 0(x2) # load 0x89bb573702bbb5a8 from memory into f20
fnmadd.s f1, f10, f5, f20, dyn # perform operation
fnmadd.s f1, f10, f5, f20, rdn # perform operation
fnmadd.s f1, f10, f5, f20, rmm # perform operation
fnmadd.s f1, f10, f5, f20, rne # perform operation
fnmadd.s f1, f10, f5, f20, rtz # perform operation
fnmadd.s f1, f10, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f10, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f10, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x21, 0x6e8e33d925624715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x4db07ac914737c5c # load x3 with value 0x4db07ac914737c5c
sw x3, 0(x2) # store 0x4db07ac914737c5c in memory
flw f24, 0(x2) # load 0x4db07ac914737c5c from memory into f24
fnmadd.s f21, f20, f7, f24, dyn # perform operation
fnmadd.s f21, f20, f7, f24, rdn # perform operation
fnmadd.s f21, f20, f7, f24, rmm # perform operation
fnmadd.s f21, f20, f7, f24, rne # perform operation
fnmadd.s f21, f20, f7, f24, rtz # perform operation
fnmadd.s f21, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x29, 0x7dcf1b9a0bfa8aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0xb57a7b9d98a9c977 # load x3 with value 0xb57a7b9d98a9c977
sw x3, 0(x2) # store 0xb57a7b9d98a9c977 in memory
flw f15, 0(x2) # load 0xb57a7b9d98a9c977 from memory into f15
fnmadd.s f29, f1, f22, f15, dyn # perform operation
fnmadd.s f29, f1, f22, f15, rdn # perform operation
fnmadd.s f29, f1, f22, f15, rmm # perform operation
fnmadd.s f29, f1, f22, f15, rne # perform operation
fnmadd.s f29, f1, f22, f15, rtz # perform operation
fnmadd.s f29, f1, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f1, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x9, 0x163a69338b49351d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x303036ccf1f9cedb # load x3 with value 0x303036ccf1f9cedb
sw x3, 0(x2) # store 0x303036ccf1f9cedb in memory
flw f15, 0(x2) # load 0x303036ccf1f9cedb from memory into f15
fnmadd.s f9, f19, f14, f15, dyn # perform operation
fnmadd.s f9, f19, f14, f15, rdn # perform operation
fnmadd.s f9, f19, f14, f15, rmm # perform operation
fnmadd.s f9, f19, f14, f15, rne # perform operation
fnmadd.s f9, f19, f14, f15, rtz # perform operation
fnmadd.s f9, f19, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x4, 0xa4cb61fe542dc52a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x5d0f6299cd778247 # load x3 with value 0x5d0f6299cd778247
sw x3, 0(x2) # store 0x5d0f6299cd778247 in memory
flw f10, 0(x2) # load 0x5d0f6299cd778247 from memory into f10
fnmadd.s f4, f18, f25, f10, dyn # perform operation
fnmadd.s f4, f18, f25, f10, rdn # perform operation
fnmadd.s f4, f18, f25, f10, rmm # perform operation
fnmadd.s f4, f18, f25, f10, rne # perform operation
fnmadd.s f4, f18, f25, f10, rtz # perform operation
fnmadd.s f4, f18, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f18, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f18, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x17, 0x54ce19b95f5ad617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x585d40af74cc83b6 # load x3 with value 0x585d40af74cc83b6
sw x3, 0(x2) # store 0x585d40af74cc83b6 in memory
flw f30, 0(x2) # load 0x585d40af74cc83b6 from memory into f30
fnmadd.s f17, f31, f24, f30, dyn # perform operation
fnmadd.s f17, f31, f24, f30, rdn # perform operation
fnmadd.s f17, f31, f24, f30, rmm # perform operation
fnmadd.s f17, f31, f24, f30, rne # perform operation
fnmadd.s f17, f31, f24, f30, rtz # perform operation
fnmadd.s f17, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f31, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x16, 0xd5651e2580624622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x2d4a3fd0d49cf3c9 # load x3 with value 0x2d4a3fd0d49cf3c9
sw x3, 0(x2) # store 0x2d4a3fd0d49cf3c9 in memory
flw f23, 0(x2) # load 0x2d4a3fd0d49cf3c9 from memory into f23
fnmadd.s f16, f9, f24, f23, dyn # perform operation
fnmadd.s f16, f9, f24, f23, rdn # perform operation
fnmadd.s f16, f9, f24, f23, rmm # perform operation
fnmadd.s f16, f9, f24, f23, rne # perform operation
fnmadd.s f16, f9, f24, f23, rtz # perform operation
fnmadd.s f16, f9, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x21, 0x14885522e72881be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x24aa9158036550f8 # load x3 with value 0x24aa9158036550f8
sw x3, 0(x2) # store 0x24aa9158036550f8 in memory
flw f20, 0(x2) # load 0x24aa9158036550f8 from memory into f20
fnmadd.s f21, f4, f9, f20, dyn # perform operation
fnmadd.s f21, f4, f9, f20, rdn # perform operation
fnmadd.s f21, f4, f9, f20, rmm # perform operation
fnmadd.s f21, f4, f9, f20, rne # perform operation
fnmadd.s f21, f4, f9, f20, rtz # perform operation
fnmadd.s f21, f4, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f4, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x21, 0x7fc897170d0a1d1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x29983aa5985b7d69 # load x3 with value 0x29983aa5985b7d69
sw x3, 0(x2) # store 0x29983aa5985b7d69 in memory
flw f22, 0(x2) # load 0x29983aa5985b7d69 from memory into f22
fnmadd.s f21, f26, f3, f22, dyn # perform operation
fnmadd.s f21, f26, f3, f22, rdn # perform operation
fnmadd.s f21, f26, f3, f22, rmm # perform operation
fnmadd.s f21, f26, f3, f22, rne # perform operation
fnmadd.s f21, f26, f3, f22, rtz # perform operation
fnmadd.s f21, f26, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f26, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f26, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x31, 0xe75f5ba0d37e37a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0xf548690e7918d566 # load x3 with value 0xf548690e7918d566
sw x3, 0(x2) # store 0xf548690e7918d566 in memory
flw f21, 0(x2) # load 0xf548690e7918d566 from memory into f21
fnmadd.s f31, f5, f12, f21, dyn # perform operation
fnmadd.s f31, f5, f12, f21, rdn # perform operation
fnmadd.s f31, f5, f12, f21, rmm # perform operation
fnmadd.s f31, f5, f12, f21, rne # perform operation
fnmadd.s f31, f5, f12, f21, rtz # perform operation
fnmadd.s f31, f5, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x16, 0x9c894c100adac7c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x4c8362aa24ad053c # load x3 with value 0x4c8362aa24ad053c
sw x3, 0(x2) # store 0x4c8362aa24ad053c in memory
flw f26, 0(x2) # load 0x4c8362aa24ad053c from memory into f26
fnmadd.s f16, f12, f10, f26, dyn # perform operation
fnmadd.s f16, f12, f10, f26, rdn # perform operation
fnmadd.s f16, f12, f10, f26, rmm # perform operation
fnmadd.s f16, f12, f10, f26, rne # perform operation
fnmadd.s f16, f12, f10, f26, rtz # perform operation
fnmadd.s f16, f12, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f12, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x17, 0x34c54df468f6d3d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xf2464a8bbcf81360 # load x3 with value 0xf2464a8bbcf81360
sw x3, 0(x2) # store 0xf2464a8bbcf81360 in memory
flw f13, 0(x2) # load 0xf2464a8bbcf81360 from memory into f13
fnmadd.s f17, f11, f18, f13, dyn # perform operation
fnmadd.s f17, f11, f18, f13, rdn # perform operation
fnmadd.s f17, f11, f18, f13, rmm # perform operation
fnmadd.s f17, f11, f18, f13, rne # perform operation
fnmadd.s f17, f11, f18, f13, rtz # perform operation
fnmadd.s f17, f11, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x6, 0x6b24e1b4f1bc1888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xb3ae9069c37f0c72 # load x3 with value 0xb3ae9069c37f0c72
sw x3, 0(x2) # store 0xb3ae9069c37f0c72 in memory
flw f20, 0(x2) # load 0xb3ae9069c37f0c72 from memory into f20
fnmadd.s f6, f2, f25, f20, dyn # perform operation
fnmadd.s f6, f2, f25, f20, rdn # perform operation
fnmadd.s f6, f2, f25, f20, rmm # perform operation
fnmadd.s f6, f2, f25, f20, rne # perform operation
fnmadd.s f6, f2, f25, f20, rtz # perform operation
fnmadd.s f6, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x10, 0xac19a6ccf2999db9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xf1d3750fcf1d638c # load x3 with value 0xf1d3750fcf1d638c
sw x3, 0(x2) # store 0xf1d3750fcf1d638c in memory
flw f20, 0(x2) # load 0xf1d3750fcf1d638c from memory into f20
fnmadd.s f10, f9, f25, f20, dyn # perform operation
fnmadd.s f10, f9, f25, f20, rdn # perform operation
fnmadd.s f10, f9, f25, f20, rmm # perform operation
fnmadd.s f10, f9, f25, f20, rne # perform operation
fnmadd.s f10, f9, f25, f20, rtz # perform operation
fnmadd.s f10, f9, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f9, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x6, 0xbc53675bac7da1be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xa5a5acfbe21ea85e # load x3 with value 0xa5a5acfbe21ea85e
sw x3, 0(x2) # store 0xa5a5acfbe21ea85e in memory
flw f27, 0(x2) # load 0xa5a5acfbe21ea85e from memory into f27
fnmadd.s f6, f15, f25, f27, dyn # perform operation
fnmadd.s f6, f15, f25, f27, rdn # perform operation
fnmadd.s f6, f15, f25, f27, rmm # perform operation
fnmadd.s f6, f15, f25, f27, rne # perform operation
fnmadd.s f6, f15, f25, f27, rtz # perform operation
fnmadd.s f6, f15, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x14, 0x2ff37b8562984694 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x109ac59a115198b # load x3 with value 0x109ac59a115198b
sw x3, 0(x2) # store 0x109ac59a115198b in memory
flw f27, 0(x2) # load 0x109ac59a115198b from memory into f27
fnmadd.s f14, f21, f29, f27, dyn # perform operation
fnmadd.s f14, f21, f29, f27, rdn # perform operation
fnmadd.s f14, f21, f29, f27, rmm # perform operation
fnmadd.s f14, f21, f29, f27, rne # perform operation
fnmadd.s f14, f21, f29, f27, rtz # perform operation
fnmadd.s f14, f21, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x25, 0x118402b7a08febfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x66314eadba593753 # load x3 with value 0x66314eadba593753
sw x3, 0(x2) # store 0x66314eadba593753 in memory
flw f29, 0(x2) # load 0x66314eadba593753 from memory into f29
fnmadd.s f25, f21, f30, f29, dyn # perform operation
fnmadd.s f25, f21, f30, f29, rdn # perform operation
fnmadd.s f25, f21, f30, f29, rmm # perform operation
fnmadd.s f25, f21, f30, f29, rne # perform operation
fnmadd.s f25, f21, f30, f29, rtz # perform operation
fnmadd.s f25, f21, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f21, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x3, 0xb8c1a33f3fa003a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0xfca5757be593f810 # load x3 with value 0xfca5757be593f810
sw x3, 0(x2) # store 0xfca5757be593f810 in memory
flw f14, 0(x2) # load 0xfca5757be593f810 from memory into f14
fnmadd.s f3, f12, f17, f14, dyn # perform operation
fnmadd.s f3, f12, f17, f14, rdn # perform operation
fnmadd.s f3, f12, f17, f14, rmm # perform operation
fnmadd.s f3, f12, f17, f14, rne # perform operation
fnmadd.s f3, f12, f17, f14, rtz # perform operation
fnmadd.s f3, f12, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x25, 0x11bfe3f3ac0f5c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xfa3ce99a5835b80 # load x3 with value 0xfa3ce99a5835b80
sw x3, 0(x2) # store 0xfa3ce99a5835b80 in memory
flw f10, 0(x2) # load 0xfa3ce99a5835b80 from memory into f10
fnmadd.s f25, f29, f23, f10, dyn # perform operation
fnmadd.s f25, f29, f23, f10, rdn # perform operation
fnmadd.s f25, f29, f23, f10, rmm # perform operation
fnmadd.s f25, f29, f23, f10, rne # perform operation
fnmadd.s f25, f29, f23, f10, rtz # perform operation
fnmadd.s f25, f29, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f29, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f29, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f29, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f29, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f29, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x17, 0xf1e52e8d468ca374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x6a8db2ca82f26cc2 # load x3 with value 0x6a8db2ca82f26cc2
sw x3, 0(x2) # store 0x6a8db2ca82f26cc2 in memory
flw f31, 0(x2) # load 0x6a8db2ca82f26cc2 from memory into f31
fnmadd.s f17, f1, f12, f31, dyn # perform operation
fnmadd.s f17, f1, f12, f31, rdn # perform operation
fnmadd.s f17, f1, f12, f31, rmm # perform operation
fnmadd.s f17, f1, f12, f31, rne # perform operation
fnmadd.s f17, f1, f12, f31, rtz # perform operation
fnmadd.s f17, f1, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x23, 0xee83c7827e071f49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x96b23134abd34c2f # load x3 with value 0x96b23134abd34c2f
sw x3, 0(x2) # store 0x96b23134abd34c2f in memory
flw f30, 0(x2) # load 0x96b23134abd34c2f from memory into f30
fnmadd.s f23, f9, f26, f30, dyn # perform operation
fnmadd.s f23, f9, f26, f30, rdn # perform operation
fnmadd.s f23, f9, f26, f30, rmm # perform operation
fnmadd.s f23, f9, f26, f30, rne # perform operation
fnmadd.s f23, f9, f26, f30, rtz # perform operation
fnmadd.s f23, f9, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x31, 0xf53e22e5687ec3f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0xfdb22746cc377ef9 # load x3 with value 0xfdb22746cc377ef9
sw x3, 0(x2) # store 0xfdb22746cc377ef9 in memory
flw f9, 0(x2) # load 0xfdb22746cc377ef9 from memory into f9
fnmadd.s f31, f6, f24, f9, dyn # perform operation
fnmadd.s f31, f6, f24, f9, rdn # perform operation
fnmadd.s f31, f6, f24, f9, rmm # perform operation
fnmadd.s f31, f6, f24, f9, rne # perform operation
fnmadd.s f31, f6, f24, f9, rtz # perform operation
fnmadd.s f31, f6, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f6, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f6, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f6, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f6, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f6, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x20, 0xf39cce6193e27fc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x26dd2459da0027e6 # load x3 with value 0x26dd2459da0027e6
sw x3, 0(x2) # store 0x26dd2459da0027e6 in memory
flw f9, 0(x2) # load 0x26dd2459da0027e6 from memory into f9
fnmadd.s f20, f18, f10, f9, dyn # perform operation
fnmadd.s f20, f18, f10, f9, rdn # perform operation
fnmadd.s f20, f18, f10, f9, rmm # perform operation
fnmadd.s f20, f18, f10, f9, rne # perform operation
fnmadd.s f20, f18, f10, f9, rtz # perform operation
fnmadd.s f20, f18, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f18, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x9, 0xd01c2125b3d5f5d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xc7d25c56c0a9f55a # load x3 with value 0xc7d25c56c0a9f55a
sw x3, 0(x2) # store 0xc7d25c56c0a9f55a in memory
flw f13, 0(x2) # load 0xc7d25c56c0a9f55a from memory into f13
fnmadd.s f9, f18, f2, f13, dyn # perform operation
fnmadd.s f9, f18, f2, f13, rdn # perform operation
fnmadd.s f9, f18, f2, f13, rmm # perform operation
fnmadd.s f9, f18, f2, f13, rne # perform operation
fnmadd.s f9, f18, f2, f13, rtz # perform operation
fnmadd.s f9, f18, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x2, 0x62114b9076c7098c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x4f403ed77c37d2ba # load x3 with value 0x4f403ed77c37d2ba
sw x3, 0(x2) # store 0x4f403ed77c37d2ba in memory
flw f3, 0(x2) # load 0x4f403ed77c37d2ba from memory into f3
fnmadd.s f2, f27, f8, f3, dyn # perform operation
fnmadd.s f2, f27, f8, f3, rdn # perform operation
fnmadd.s f2, f27, f8, f3, rmm # perform operation
fnmadd.s f2, f27, f8, f3, rne # perform operation
fnmadd.s f2, f27, f8, f3, rtz # perform operation
fnmadd.s f2, f27, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x3, 0x719b1be6b6fb234a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0xedaaa5f12e361097 # load x3 with value 0xedaaa5f12e361097
sw x3, 0(x2) # store 0xedaaa5f12e361097 in memory
flw f4, 0(x2) # load 0xedaaa5f12e361097 from memory into f4
fnmadd.s f3, f10, f16, f4, dyn # perform operation
fnmadd.s f3, f10, f16, f4, rdn # perform operation
fnmadd.s f3, f10, f16, f4, rmm # perform operation
fnmadd.s f3, f10, f16, f4, rne # perform operation
fnmadd.s f3, f10, f16, f4, rtz # perform operation
fnmadd.s f3, f10, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f10, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f10, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f10, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f10, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f10, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x22, 0xe15cba7ff9d67885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x96d4e24c649ff6ed # load x3 with value 0x96d4e24c649ff6ed
sw x3, 0(x2) # store 0x96d4e24c649ff6ed in memory
flw f4, 0(x2) # load 0x96d4e24c649ff6ed from memory into f4
fnmadd.s f22, f18, f23, f4, dyn # perform operation
fnmadd.s f22, f18, f23, f4, rdn # perform operation
fnmadd.s f22, f18, f23, f4, rmm # perform operation
fnmadd.s f22, f18, f23, f4, rne # perform operation
fnmadd.s f22, f18, f23, f4, rtz # perform operation
fnmadd.s f22, f18, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x28, 0x541c0a6ed8283095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x5032a720a96aee22 # load x3 with value 0x5032a720a96aee22
sw x3, 0(x2) # store 0x5032a720a96aee22 in memory
flw f4, 0(x2) # load 0x5032a720a96aee22 from memory into f4
fnmadd.s f28, f8, f14, f4, dyn # perform operation
fnmadd.s f28, f8, f14, f4, rdn # perform operation
fnmadd.s f28, f8, f14, f4, rmm # perform operation
fnmadd.s f28, f8, f14, f4, rne # perform operation
fnmadd.s f28, f8, f14, f4, rtz # perform operation
fnmadd.s f28, f8, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x22, 0x6899434321ed576e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xabb534484a145350 # load x3 with value 0xabb534484a145350
sw x3, 0(x2) # store 0xabb534484a145350 in memory
flw f8, 0(x2) # load 0xabb534484a145350 from memory into f8
fnmadd.s f22, f14, f29, f8, dyn # perform operation
fnmadd.s f22, f14, f29, f8, rdn # perform operation
fnmadd.s f22, f14, f29, f8, rmm # perform operation
fnmadd.s f22, f14, f29, f8, rne # perform operation
fnmadd.s f22, f14, f29, f8, rtz # perform operation
fnmadd.s f22, f14, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f14, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x27, 0x77907b0b63b79547 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xeb541a5e521a3d99 # load x3 with value 0xeb541a5e521a3d99
sw x3, 0(x2) # store 0xeb541a5e521a3d99 in memory
flw f21, 0(x2) # load 0xeb541a5e521a3d99 from memory into f21
fnmadd.s f27, f26, f18, f21, dyn # perform operation
fnmadd.s f27, f26, f18, f21, rdn # perform operation
fnmadd.s f27, f26, f18, f21, rmm # perform operation
fnmadd.s f27, f26, f18, f21, rne # perform operation
fnmadd.s f27, f26, f18, f21, rtz # perform operation
fnmadd.s f27, f26, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x13, 0xfd311240de33a425 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xbc44e3773f66a58e # load x3 with value 0xbc44e3773f66a58e
sw x3, 0(x2) # store 0xbc44e3773f66a58e in memory
flw f4, 0(x2) # load 0xbc44e3773f66a58e from memory into f4
fnmadd.s f13, f31, f24, f4, dyn # perform operation
fnmadd.s f13, f31, f24, f4, rdn # perform operation
fnmadd.s f13, f31, f24, f4, rmm # perform operation
fnmadd.s f13, f31, f24, f4, rne # perform operation
fnmadd.s f13, f31, f24, f4, rtz # perform operation
fnmadd.s f13, f31, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f31, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f31, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f31, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f31, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f31, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x7, 0x7f75f2ed7bc68294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x954b41c50b0edc77 # load x3 with value 0x954b41c50b0edc77
sw x3, 0(x2) # store 0x954b41c50b0edc77 in memory
flw f24, 0(x2) # load 0x954b41c50b0edc77 from memory into f24
fnmadd.s f7, f6, f30, f24, dyn # perform operation
fnmadd.s f7, f6, f30, f24, rdn # perform operation
fnmadd.s f7, f6, f30, f24, rmm # perform operation
fnmadd.s f7, f6, f30, f24, rne # perform operation
fnmadd.s f7, f6, f30, f24, rtz # perform operation
fnmadd.s f7, f6, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x16, 0x8fbfa47b24c7b8d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x44ef6e554a807b6d # load x3 with value 0x44ef6e554a807b6d
sw x3, 0(x2) # store 0x44ef6e554a807b6d in memory
flw f14, 0(x2) # load 0x44ef6e554a807b6d from memory into f14
fnmadd.s f16, f20, f7, f14, dyn # perform operation
fnmadd.s f16, f20, f7, f14, rdn # perform operation
fnmadd.s f16, f20, f7, f14, rmm # perform operation
fnmadd.s f16, f20, f7, f14, rne # perform operation
fnmadd.s f16, f20, f7, f14, rtz # perform operation
fnmadd.s f16, f20, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x12, 0xcba3825ccc3ba91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x72eac8f90def23fd # load x3 with value 0x72eac8f90def23fd
sw x3, 0(x2) # store 0x72eac8f90def23fd in memory
flw f25, 0(x2) # load 0x72eac8f90def23fd from memory into f25
fnmadd.s f12, f8, f16, f25, dyn # perform operation
fnmadd.s f12, f8, f16, f25, rdn # perform operation
fnmadd.s f12, f8, f16, f25, rmm # perform operation
fnmadd.s f12, f8, f16, f25, rne # perform operation
fnmadd.s f12, f8, f16, f25, rtz # perform operation
fnmadd.s f12, f8, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x30, 0x3b774a30e099f143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x72027b55b26a1d28 # load x3 with value 0x72027b55b26a1d28
sw x3, 0(x2) # store 0x72027b55b26a1d28 in memory
flw f14, 0(x2) # load 0x72027b55b26a1d28 from memory into f14
fnmadd.s f30, f21, f4, f14, dyn # perform operation
fnmadd.s f30, f21, f4, f14, rdn # perform operation
fnmadd.s f30, f21, f4, f14, rmm # perform operation
fnmadd.s f30, f21, f4, f14, rne # perform operation
fnmadd.s f30, f21, f4, f14, rtz # perform operation
fnmadd.s f30, f21, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x7, 0xa2966800ad2f9bab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x4e2791550173b7f6 # load x3 with value 0x4e2791550173b7f6
sw x3, 0(x2) # store 0x4e2791550173b7f6 in memory
flw f6, 0(x2) # load 0x4e2791550173b7f6 from memory into f6
fnmadd.s f7, f31, f27, f6, dyn # perform operation
fnmadd.s f7, f31, f27, f6, rdn # perform operation
fnmadd.s f7, f31, f27, f6, rmm # perform operation
fnmadd.s f7, f31, f27, f6, rne # perform operation
fnmadd.s f7, f31, f27, f6, rtz # perform operation
fnmadd.s f7, f31, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f31, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f31, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f31, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f31, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f31, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x8, 0xa9e964a70bab5143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x40c20b00526d480d # load x3 with value 0x40c20b00526d480d
sw x3, 0(x2) # store 0x40c20b00526d480d in memory
flw f4, 0(x2) # load 0x40c20b00526d480d from memory into f4
fnmadd.s f8, f12, f29, f4, dyn # perform operation
fnmadd.s f8, f12, f29, f4, rdn # perform operation
fnmadd.s f8, f12, f29, f4, rmm # perform operation
fnmadd.s f8, f12, f29, f4, rne # perform operation
fnmadd.s f8, f12, f29, f4, rtz # perform operation
fnmadd.s f8, f12, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x23, 0x7ca3e9386f0f5e1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xa3f500569024f223 # load x3 with value 0xa3f500569024f223
sw x3, 0(x2) # store 0xa3f500569024f223 in memory
flw f15, 0(x2) # load 0xa3f500569024f223 from memory into f15
fnmadd.s f23, f19, f5, f15, dyn # perform operation
fnmadd.s f23, f19, f5, f15, rdn # perform operation
fnmadd.s f23, f19, f5, f15, rmm # perform operation
fnmadd.s f23, f19, f5, f15, rne # perform operation
fnmadd.s f23, f19, f5, f15, rtz # perform operation
fnmadd.s f23, f19, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x5, 0xa842a786d1540458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xe4e23ae6ddaa15d4 # load x3 with value 0xe4e23ae6ddaa15d4
sw x3, 0(x2) # store 0xe4e23ae6ddaa15d4 in memory
flw f25, 0(x2) # load 0xe4e23ae6ddaa15d4 from memory into f25
fnmadd.s f5, f30, f3, f25, dyn # perform operation
fnmadd.s f5, f30, f3, f25, rdn # perform operation
fnmadd.s f5, f30, f3, f25, rmm # perform operation
fnmadd.s f5, f30, f3, f25, rne # perform operation
fnmadd.s f5, f30, f3, f25, rtz # perform operation
fnmadd.s f5, f30, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x4, 0xd65501522fa54f11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xe2c545aad0cef4e8 # load x3 with value 0xe2c545aad0cef4e8
sw x3, 0(x2) # store 0xe2c545aad0cef4e8 in memory
flw f14, 0(x2) # load 0xe2c545aad0cef4e8 from memory into f14
fnmadd.s f4, f28, f20, f14, dyn # perform operation
fnmadd.s f4, f28, f20, f14, rdn # perform operation
fnmadd.s f4, f28, f20, f14, rmm # perform operation
fnmadd.s f4, f28, f20, f14, rne # perform operation
fnmadd.s f4, f28, f20, f14, rtz # perform operation
fnmadd.s f4, f28, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x7, 0x838b881a229abc07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x7dcf59afd3cc409a # load x3 with value 0x7dcf59afd3cc409a
sw x3, 0(x2) # store 0x7dcf59afd3cc409a in memory
flw f10, 0(x2) # load 0x7dcf59afd3cc409a from memory into f10
fnmadd.s f7, f18, f19, f10, dyn # perform operation
fnmadd.s f7, f18, f19, f10, rdn # perform operation
fnmadd.s f7, f18, f19, f10, rmm # perform operation
fnmadd.s f7, f18, f19, f10, rne # perform operation
fnmadd.s f7, f18, f19, f10, rtz # perform operation
fnmadd.s f7, f18, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f18, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f18, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x21, 0x04a30f0985e867fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0xb5c7a206a3b6704e # load x3 with value 0xb5c7a206a3b6704e
sw x3, 0(x2) # store 0xb5c7a206a3b6704e in memory
flw f3, 0(x2) # load 0xb5c7a206a3b6704e from memory into f3
fnmadd.s f21, f26, f18, f3, dyn # perform operation
fnmadd.s f21, f26, f18, f3, rdn # perform operation
fnmadd.s f21, f26, f18, f3, rmm # perform operation
fnmadd.s f21, f26, f18, f3, rne # perform operation
fnmadd.s f21, f26, f18, f3, rtz # perform operation
fnmadd.s f21, f26, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f26, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x28, 0x5370a4c031a5ccd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x106c708b68314fd2 # load x3 with value 0x106c708b68314fd2
sw x3, 0(x2) # store 0x106c708b68314fd2 in memory
flw f31, 0(x2) # load 0x106c708b68314fd2 from memory into f31
fnmadd.s f28, f3, f30, f31, dyn # perform operation
fnmadd.s f28, f3, f30, f31, rdn # perform operation
fnmadd.s f28, f3, f30, f31, rmm # perform operation
fnmadd.s f28, f3, f30, f31, rne # perform operation
fnmadd.s f28, f3, f30, f31, rtz # perform operation
fnmadd.s f28, f3, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x15, 0xfffdd76ee7af6605 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x3949eeab2545ccf8 # load x3 with value 0x3949eeab2545ccf8
sw x3, 0(x2) # store 0x3949eeab2545ccf8 in memory
flw f12, 0(x2) # load 0x3949eeab2545ccf8 from memory into f12
fnmadd.s f15, f6, f19, f12, dyn # perform operation
fnmadd.s f15, f6, f19, f12, rdn # perform operation
fnmadd.s f15, f6, f19, f12, rmm # perform operation
fnmadd.s f15, f6, f19, f12, rne # perform operation
fnmadd.s f15, f6, f19, f12, rtz # perform operation
fnmadd.s f15, f6, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x30, 0xe4e3dbd78c8c75d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x4da4fd6e4ed81357 # load x3 with value 0x4da4fd6e4ed81357
sw x3, 0(x2) # store 0x4da4fd6e4ed81357 in memory
flw f3, 0(x2) # load 0x4da4fd6e4ed81357 from memory into f3
fnmadd.s f30, f25, f29, f3, dyn # perform operation
fnmadd.s f30, f25, f29, f3, rdn # perform operation
fnmadd.s f30, f25, f29, f3, rmm # perform operation
fnmadd.s f30, f25, f29, f3, rne # perform operation
fnmadd.s f30, f25, f29, f3, rtz # perform operation
fnmadd.s f30, f25, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x19, 0xc249dc1aa40fc4af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x4944629441067fc2 # load x3 with value 0x4944629441067fc2
sw x3, 0(x2) # store 0x4944629441067fc2 in memory
flw f26, 0(x2) # load 0x4944629441067fc2 from memory into f26
fnmadd.s f19, f13, f1, f26, dyn # perform operation
fnmadd.s f19, f13, f1, f26, rdn # perform operation
fnmadd.s f19, f13, f1, f26, rmm # perform operation
fnmadd.s f19, f13, f1, f26, rne # perform operation
fnmadd.s f19, f13, f1, f26, rtz # perform operation
fnmadd.s f19, f13, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x4, 0x9a4ea62bb64bdf6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xaf4fe55bfd9d7ee7 # load x3 with value 0xaf4fe55bfd9d7ee7
sw x3, 0(x2) # store 0xaf4fe55bfd9d7ee7 in memory
flw f23, 0(x2) # load 0xaf4fe55bfd9d7ee7 from memory into f23
fnmadd.s f4, f1, f24, f23, dyn # perform operation
fnmadd.s f4, f1, f24, f23, rdn # perform operation
fnmadd.s f4, f1, f24, f23, rmm # perform operation
fnmadd.s f4, f1, f24, f23, rne # perform operation
fnmadd.s f4, f1, f24, f23, rtz # perform operation
fnmadd.s f4, f1, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f1, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x16, 0x7eacd1132310ce3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xb15918228566dd8f # load x3 with value 0xb15918228566dd8f
sw x3, 0(x2) # store 0xb15918228566dd8f in memory
flw f25, 0(x2) # load 0xb15918228566dd8f from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f16, f11, f25, f12, dyn # perform operation
fnmadd.s f16, f11, f25, f12, rdn # perform operation
fnmadd.s f16, f11, f25, f12, rmm # perform operation
fnmadd.s f16, f11, f25, f12, rne # perform operation
fnmadd.s f16, f11, f25, f12, rtz # perform operation
fnmadd.s f16, f11, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f11, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x30, 0xbe55514194e9d02b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x651a537966b1870 # load x3 with value 0x651a537966b1870
sw x3, 0(x2) # store 0x651a537966b1870 in memory
flw f18, 0(x2) # load 0x651a537966b1870 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f30, f17, f18, f21, dyn # perform operation
fnmadd.s f30, f17, f18, f21, rdn # perform operation
fnmadd.s f30, f17, f18, f21, rmm # perform operation
fnmadd.s f30, f17, f18, f21, rne # perform operation
fnmadd.s f30, f17, f18, f21, rtz # perform operation
fnmadd.s f30, f17, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f17, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f17, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f17, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f17, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f17, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x31, 0x8d58178f34dc9c8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x39c690750ff7afde # load x3 with value 0x39c690750ff7afde
sw x3, 0(x2) # store 0x39c690750ff7afde in memory
flw f22, 0(x2) # load 0x39c690750ff7afde from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fnmadd.s f31, f1, f22, f18, dyn # perform operation
fnmadd.s f31, f1, f22, f18, rdn # perform operation
fnmadd.s f31, f1, f22, f18, rmm # perform operation
fnmadd.s f31, f1, f22, f18, rne # perform operation
fnmadd.s f31, f1, f22, f18, rtz # perform operation
fnmadd.s f31, f1, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x21, 0x8d7de95203d5d151 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x44004949f245d6bb # load x3 with value 0x44004949f245d6bb
sw x3, 0(x2) # store 0x44004949f245d6bb in memory
flw f20, 0(x2) # load 0x44004949f245d6bb from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fnmadd.s f21, f26, f20, f1, dyn # perform operation
fnmadd.s f21, f26, f20, f1, rdn # perform operation
fnmadd.s f21, f26, f20, f1, rmm # perform operation
fnmadd.s f21, f26, f20, f1, rne # perform operation
fnmadd.s f21, f26, f20, f1, rtz # perform operation
fnmadd.s f21, f26, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f26, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f26, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f26, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f26, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f26, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x5, 0x512605332f87cc99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x27be0418f8790f3f # load x3 with value 0x27be0418f8790f3f
sw x3, 0(x2) # store 0x27be0418f8790f3f in memory
flw f29, 0(x2) # load 0x27be0418f8790f3f from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f5, f30, f29, f27, dyn # perform operation
fnmadd.s f5, f30, f29, f27, rdn # perform operation
fnmadd.s f5, f30, f29, f27, rmm # perform operation
fnmadd.s f5, f30, f29, f27, rne # perform operation
fnmadd.s f5, f30, f29, f27, rtz # perform operation
fnmadd.s f5, f30, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x14, 0x5d0da2b1caec299f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x1b5fa2ae02d0385d # load x3 with value 0x1b5fa2ae02d0385d
sw x3, 0(x2) # store 0x1b5fa2ae02d0385d in memory
flw f25, 0(x2) # load 0x1b5fa2ae02d0385d from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmadd.s f14, f15, f25, f31, dyn # perform operation
fnmadd.s f14, f15, f25, f31, rdn # perform operation
fnmadd.s f14, f15, f25, f31, rmm # perform operation
fnmadd.s f14, f15, f25, f31, rne # perform operation
fnmadd.s f14, f15, f25, f31, rtz # perform operation
fnmadd.s f14, f15, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x1, 0xfff9e9b7d10a0c0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x422d43e233d20f39 # load x3 with value 0x422d43e233d20f39
sw x3, 0(x2) # store 0x422d43e233d20f39 in memory
flw f23, 0(x2) # load 0x422d43e233d20f39 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fnmadd.s f1, f12, f23, f4, dyn # perform operation
fnmadd.s f1, f12, f23, f4, rdn # perform operation
fnmadd.s f1, f12, f23, f4, rmm # perform operation
fnmadd.s f1, f12, f23, f4, rne # perform operation
fnmadd.s f1, f12, f23, f4, rtz # perform operation
fnmadd.s f1, f12, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x24, 0x54a96729f5b40a0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xd610331a0b8dfe24 # load x3 with value 0xd610331a0b8dfe24
sw x3, 0(x2) # store 0xd610331a0b8dfe24 in memory
flw f15, 0(x2) # load 0xd610331a0b8dfe24 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fnmadd.s f24, f14, f15, f12, dyn # perform operation
fnmadd.s f24, f14, f15, f12, rdn # perform operation
fnmadd.s f24, f14, f15, f12, rmm # perform operation
fnmadd.s f24, f14, f15, f12, rne # perform operation
fnmadd.s f24, f14, f15, f12, rtz # perform operation
fnmadd.s f24, f14, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f14, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x19, 0x726f1bf1de08cbb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x9c2aa12dc9aa5716 # load x3 with value 0x9c2aa12dc9aa5716
sw x3, 0(x2) # store 0x9c2aa12dc9aa5716 in memory
flw f3, 0(x2) # load 0x9c2aa12dc9aa5716 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmadd.s f19, f29, f3, f10, dyn # perform operation
fnmadd.s f19, f29, f3, f10, rdn # perform operation
fnmadd.s f19, f29, f3, f10, rmm # perform operation
fnmadd.s f19, f29, f3, f10, rne # perform operation
fnmadd.s f19, f29, f3, f10, rtz # perform operation
fnmadd.s f19, f29, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x16, 0x19b88a516bbf1685 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xe3cd3872709f94a8 # load x3 with value 0xe3cd3872709f94a8
sw x3, 0(x2) # store 0xe3cd3872709f94a8 in memory
flw f24, 0(x2) # load 0xe3cd3872709f94a8 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmadd.s f16, f15, f24, f21, dyn # perform operation
fnmadd.s f16, f15, f24, f21, rdn # perform operation
fnmadd.s f16, f15, f24, f21, rmm # perform operation
fnmadd.s f16, f15, f24, f21, rne # perform operation
fnmadd.s f16, f15, f24, f21, rtz # perform operation
fnmadd.s f16, f15, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x15, 0x4ee44f0f0a851ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xe8d5f831c91d6ce5 # load x3 with value 0xe8d5f831c91d6ce5
sw x3, 0(x2) # store 0xe8d5f831c91d6ce5 in memory
flw f31, 0(x2) # load 0xe8d5f831c91d6ce5 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmadd.s f15, f21, f31, f29, dyn # perform operation
fnmadd.s f15, f21, f31, f29, rdn # perform operation
fnmadd.s f15, f21, f31, f29, rmm # perform operation
fnmadd.s f15, f21, f31, f29, rne # perform operation
fnmadd.s f15, f21, f31, f29, rtz # perform operation
fnmadd.s f15, f21, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x8, 0x2f5866a754f703e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x50b4e295d6cbd8c2 # load x3 with value 0x50b4e295d6cbd8c2
sw x3, 0(x2) # store 0x50b4e295d6cbd8c2 in memory
flw f24, 0(x2) # load 0x50b4e295d6cbd8c2 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f8, f29, f24, f28, dyn # perform operation
fnmadd.s f8, f29, f24, f28, rdn # perform operation
fnmadd.s f8, f29, f24, f28, rmm # perform operation
fnmadd.s f8, f29, f24, f28, rne # perform operation
fnmadd.s f8, f29, f24, f28, rtz # perform operation
fnmadd.s f8, f29, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x23, 0x6f454e8265c4dd27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xffd5883849112bb0 # load x3 with value 0xffd5883849112bb0
sw x3, 0(x2) # store 0xffd5883849112bb0 in memory
flw f29, 0(x2) # load 0xffd5883849112bb0 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f23, f14, f29, f10, dyn # perform operation
fnmadd.s f23, f14, f29, f10, rdn # perform operation
fnmadd.s f23, f14, f29, f10, rmm # perform operation
fnmadd.s f23, f14, f29, f10, rne # perform operation
fnmadd.s f23, f14, f29, f10, rtz # perform operation
fnmadd.s f23, f14, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x11, 0xc238f03aa2d7a7d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xd32240e34dfff314 # load x3 with value 0xd32240e34dfff314
sw x3, 0(x2) # store 0xd32240e34dfff314 in memory
flw f5, 0(x2) # load 0xd32240e34dfff314 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f11, f19, f5, f23, dyn # perform operation
fnmadd.s f11, f19, f5, f23, rdn # perform operation
fnmadd.s f11, f19, f5, f23, rmm # perform operation
fnmadd.s f11, f19, f5, f23, rne # perform operation
fnmadd.s f11, f19, f5, f23, rtz # perform operation
fnmadd.s f11, f19, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x20, 0x7ae195da86dcd7b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xd4b00989f03c5ef7 # load x3 with value 0xd4b00989f03c5ef7
sw x3, 0(x2) # store 0xd4b00989f03c5ef7 in memory
flw f22, 0(x2) # load 0xd4b00989f03c5ef7 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f20, f12, f22, f24, dyn # perform operation
fnmadd.s f20, f12, f22, f24, rdn # perform operation
fnmadd.s f20, f12, f22, f24, rmm # perform operation
fnmadd.s f20, f12, f22, f24, rne # perform operation
fnmadd.s f20, f12, f22, f24, rtz # perform operation
fnmadd.s f20, f12, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x19, 0x6be7d0e50b3c5e7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xa99c63732c608574 # load x3 with value 0xa99c63732c608574
sw x3, 0(x2) # store 0xa99c63732c608574 in memory
flw f14, 0(x2) # load 0xa99c63732c608574 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmadd.s f19, f22, f14, f21, dyn # perform operation
fnmadd.s f19, f22, f14, f21, rdn # perform operation
fnmadd.s f19, f22, f14, f21, rmm # perform operation
fnmadd.s f19, f22, f14, f21, rne # perform operation
fnmadd.s f19, f22, f14, f21, rtz # perform operation
fnmadd.s f19, f22, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f22, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f22, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x19, 0x054726b38f152b88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xc1d601249a36136 # load x3 with value 0xc1d601249a36136
sw x3, 0(x2) # store 0xc1d601249a36136 in memory
flw f29, 0(x2) # load 0xc1d601249a36136 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.s f19, f31, f29, f25, dyn # perform operation
fnmadd.s f19, f31, f29, f25, rdn # perform operation
fnmadd.s f19, f31, f29, f25, rmm # perform operation
fnmadd.s f19, f31, f29, f25, rne # perform operation
fnmadd.s f19, f31, f29, f25, rtz # perform operation
fnmadd.s f19, f31, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x4, 0x6bf2bcbbee2aaf64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xfc14e10132ac40ef # load x3 with value 0xfc14e10132ac40ef
sw x3, 0(x2) # store 0xfc14e10132ac40ef in memory
flw f31, 0(x2) # load 0xfc14e10132ac40ef from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmadd.s f4, f28, f31, f29, dyn # perform operation
fnmadd.s f4, f28, f31, f29, rdn # perform operation
fnmadd.s f4, f28, f31, f29, rmm # perform operation
fnmadd.s f4, f28, f31, f29, rne # perform operation
fnmadd.s f4, f28, f31, f29, rtz # perform operation
fnmadd.s f4, f28, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f28, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x18, 0x3379d7578717df7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x48891c461dcd06a9 # load x3 with value 0x48891c461dcd06a9
sw x3, 0(x2) # store 0x48891c461dcd06a9 in memory
flw f8, 0(x2) # load 0x48891c461dcd06a9 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f18, f21, f8, f30, dyn # perform operation
fnmadd.s f18, f21, f8, f30, rdn # perform operation
fnmadd.s f18, f21, f8, f30, rmm # perform operation
fnmadd.s f18, f21, f8, f30, rne # perform operation
fnmadd.s f18, f21, f8, f30, rtz # perform operation
fnmadd.s f18, f21, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x7, 0xbb72c78c83ea5ff1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xe9ecacbbc6d2e5a5 # load x3 with value 0xe9ecacbbc6d2e5a5
sw x3, 0(x2) # store 0xe9ecacbbc6d2e5a5 in memory
flw f24, 0(x2) # load 0xe9ecacbbc6d2e5a5 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmadd.s f7, f22, f24, f6, dyn # perform operation
fnmadd.s f7, f22, f24, f6, rdn # perform operation
fnmadd.s f7, f22, f24, f6, rmm # perform operation
fnmadd.s f7, f22, f24, f6, rne # perform operation
fnmadd.s f7, f22, f24, f6, rtz # perform operation
fnmadd.s f7, f22, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x3, 0xc1fe4543c9838cbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x98b6fd269399611a # load x3 with value 0x98b6fd269399611a
sw x3, 0(x2) # store 0x98b6fd269399611a in memory
flw f16, 0(x2) # load 0x98b6fd269399611a from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmadd.s f3, f31, f16, f8, dyn # perform operation
fnmadd.s f3, f31, f16, f8, rdn # perform operation
fnmadd.s f3, f31, f16, f8, rmm # perform operation
fnmadd.s f3, f31, f16, f8, rne # perform operation
fnmadd.s f3, f31, f16, f8, rtz # perform operation
fnmadd.s f3, f31, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x27, 0xfd656f2e9df59f03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xcc90e80dfcd9ae0 # load x3 with value 0xcc90e80dfcd9ae0
sw x3, 0(x2) # store 0xcc90e80dfcd9ae0 in memory
flw f3, 0(x2) # load 0xcc90e80dfcd9ae0 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f27, f4, f3, f22, dyn # perform operation
fnmadd.s f27, f4, f3, f22, rdn # perform operation
fnmadd.s f27, f4, f3, f22, rmm # perform operation
fnmadd.s f27, f4, f3, f22, rne # perform operation
fnmadd.s f27, f4, f3, f22, rtz # perform operation
fnmadd.s f27, f4, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f4, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f4, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f4, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f4, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f4, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x30, 0x8f0d45efe3a60057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xb6e61765b62c9f2 # load x3 with value 0xb6e61765b62c9f2
sw x3, 0(x2) # store 0xb6e61765b62c9f2 in memory
flw f11, 0(x2) # load 0xb6e61765b62c9f2 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmadd.s f30, f9, f11, f29, dyn # perform operation
fnmadd.s f30, f9, f11, f29, rdn # perform operation
fnmadd.s f30, f9, f11, f29, rmm # perform operation
fnmadd.s f30, f9, f11, f29, rne # perform operation
fnmadd.s f30, f9, f11, f29, rtz # perform operation
fnmadd.s f30, f9, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x30, 0xcd9ecde02817b9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xce1c2f3487deda8d # load x3 with value 0xce1c2f3487deda8d
sw x3, 0(x2) # store 0xce1c2f3487deda8d in memory
flw f24, 0(x2) # load 0xce1c2f3487deda8d from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmadd.s f30, f1, f24, f10, dyn # perform operation
fnmadd.s f30, f1, f24, f10, rdn # perform operation
fnmadd.s f30, f1, f24, f10, rmm # perform operation
fnmadd.s f30, f1, f24, f10, rne # perform operation
fnmadd.s f30, f1, f24, f10, rtz # perform operation
fnmadd.s f30, f1, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x26, 0xb5c308ab8ef0a466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xb4365324dd6c2b2 # load x3 with value 0xb4365324dd6c2b2
sw x3, 0(x2) # store 0xb4365324dd6c2b2 in memory
flw f27, 0(x2) # load 0xb4365324dd6c2b2 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmadd.s f26, f25, f27, f24, dyn # perform operation
fnmadd.s f26, f25, f27, f24, rdn # perform operation
fnmadd.s f26, f25, f27, f24, rmm # perform operation
fnmadd.s f26, f25, f27, f24, rne # perform operation
fnmadd.s f26, f25, f27, f24, rtz # perform operation
fnmadd.s f26, f25, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x30, 0x258e8c3e414c4494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x19662aed03e767c3 # load x3 with value 0x19662aed03e767c3
sw x3, 0(x2) # store 0x19662aed03e767c3 in memory
flw f12, 0(x2) # load 0x19662aed03e767c3 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmadd.s f30, f6, f12, f1, dyn # perform operation
fnmadd.s f30, f6, f12, f1, rdn # perform operation
fnmadd.s f30, f6, f12, f1, rmm # perform operation
fnmadd.s f30, f6, f12, f1, rne # perform operation
fnmadd.s f30, f6, f12, f1, rtz # perform operation
fnmadd.s f30, f6, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x8, 0xf18bbec425ebbd87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x1939d3a6a74d1eee # load x3 with value 0x1939d3a6a74d1eee
sw x3, 0(x2) # store 0x1939d3a6a74d1eee in memory
flw f5, 0(x2) # load 0x1939d3a6a74d1eee from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.s f8, f31, f5, f26, dyn # perform operation
fnmadd.s f8, f31, f5, f26, rdn # perform operation
fnmadd.s f8, f31, f5, f26, rmm # perform operation
fnmadd.s f8, f31, f5, f26, rne # perform operation
fnmadd.s f8, f31, f5, f26, rtz # perform operation
fnmadd.s f8, f31, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x25, 0x13e85fdc50a78a08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x52009041a27ecff1 # load x3 with value 0x52009041a27ecff1
sw x3, 0(x2) # store 0x52009041a27ecff1 in memory
flw f27, 0(x2) # load 0x52009041a27ecff1 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmadd.s f25, f5, f27, f24, dyn # perform operation
fnmadd.s f25, f5, f27, f24, rdn # perform operation
fnmadd.s f25, f5, f27, f24, rmm # perform operation
fnmadd.s f25, f5, f27, f24, rne # perform operation
fnmadd.s f25, f5, f27, f24, rtz # perform operation
fnmadd.s f25, f5, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x3, 0xd3190c08937e05c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x6fe6c98fe4f38b85 # load x3 with value 0x6fe6c98fe4f38b85
sw x3, 0(x2) # store 0x6fe6c98fe4f38b85 in memory
flw f24, 0(x2) # load 0x6fe6c98fe4f38b85 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmadd.s f3, f23, f24, f6, dyn # perform operation
fnmadd.s f3, f23, f24, f6, rdn # perform operation
fnmadd.s f3, f23, f24, f6, rmm # perform operation
fnmadd.s f3, f23, f24, f6, rne # perform operation
fnmadd.s f3, f23, f24, f6, rtz # perform operation
fnmadd.s f3, f23, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x1, 0xbd4b795438d128bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xa70f9ff0e1ffc1ab # load x3 with value 0xa70f9ff0e1ffc1ab
sw x3, 0(x2) # store 0xa70f9ff0e1ffc1ab in memory
flw f31, 0(x2) # load 0xa70f9ff0e1ffc1ab from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmadd.s f1, f28, f31, f7, dyn # perform operation
fnmadd.s f1, f28, f31, f7, rdn # perform operation
fnmadd.s f1, f28, f31, f7, rmm # perform operation
fnmadd.s f1, f28, f31, f7, rne # perform operation
fnmadd.s f1, f28, f31, f7, rtz # perform operation
fnmadd.s f1, f28, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x27, 0xaca0534e6f6e81f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x34c7bc4a9054348b # load x3 with value 0x34c7bc4a9054348b
sw x3, 0(x2) # store 0x34c7bc4a9054348b in memory
flw f25, 0(x2) # load 0x34c7bc4a9054348b from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmadd.s f27, f4, f25, f23, dyn # perform operation
fnmadd.s f27, f4, f25, f23, rdn # perform operation
fnmadd.s f27, f4, f25, f23, rmm # perform operation
fnmadd.s f27, f4, f25, f23, rne # perform operation
fnmadd.s f27, f4, f25, f23, rtz # perform operation
fnmadd.s f27, f4, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f4, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f4, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f4, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f4, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f4, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x23, 0x3ac885afcaf6bbd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x521c34afe21414b # load x3 with value 0x521c34afe21414b
sw x3, 0(x2) # store 0x521c34afe21414b in memory
flw f24, 0(x2) # load 0x521c34afe21414b from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f23, f15, f24, f14, dyn # perform operation
fnmadd.s f23, f15, f24, f14, rdn # perform operation
fnmadd.s f23, f15, f24, f14, rmm # perform operation
fnmadd.s f23, f15, f24, f14, rne # perform operation
fnmadd.s f23, f15, f24, f14, rtz # perform operation
fnmadd.s f23, f15, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x18, 0x166a374f5bc0c283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xe6d44680ab30cfce # load x3 with value 0xe6d44680ab30cfce
sw x3, 0(x2) # store 0xe6d44680ab30cfce in memory
flw f23, 0(x2) # load 0xe6d44680ab30cfce from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmadd.s f18, f11, f23, f8, dyn # perform operation
fnmadd.s f18, f11, f23, f8, rdn # perform operation
fnmadd.s f18, f11, f23, f8, rmm # perform operation
fnmadd.s f18, f11, f23, f8, rne # perform operation
fnmadd.s f18, f11, f23, f8, rtz # perform operation
fnmadd.s f18, f11, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x16, 0xf90bbdbc1d7c92ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xe3c9bc32f77225f # load x3 with value 0xe3c9bc32f77225f
sw x3, 0(x2) # store 0xe3c9bc32f77225f in memory
flw f11, 0(x2) # load 0xe3c9bc32f77225f from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmadd.s f16, f9, f11, f23, dyn # perform operation
fnmadd.s f16, f9, f11, f23, rdn # perform operation
fnmadd.s f16, f9, f11, f23, rmm # perform operation
fnmadd.s f16, f9, f11, f23, rne # perform operation
fnmadd.s f16, f9, f11, f23, rtz # perform operation
fnmadd.s f16, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x20, 0xf5a7636b2a928d91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xaafcd4a1f11ff0b1 # load x3 with value 0xaafcd4a1f11ff0b1
sw x3, 0(x2) # store 0xaafcd4a1f11ff0b1 in memory
flw f9, 0(x2) # load 0xaafcd4a1f11ff0b1 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f20, f19, f9, f22, dyn # perform operation
fnmadd.s f20, f19, f9, f22, rdn # perform operation
fnmadd.s f20, f19, f9, f22, rmm # perform operation
fnmadd.s f20, f19, f9, f22, rne # perform operation
fnmadd.s f20, f19, f9, f22, rtz # perform operation
fnmadd.s f20, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x29, 0x3c0f531510f66809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xf208f3f085ea7d68 # load x3 with value 0xf208f3f085ea7d68
sw x3, 0(x2) # store 0xf208f3f085ea7d68 in memory
flw f24, 0(x2) # load 0xf208f3f085ea7d68 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f29, f15, f24, f6, dyn # perform operation
fnmadd.s f29, f15, f24, f6, rdn # perform operation
fnmadd.s f29, f15, f24, f6, rmm # perform operation
fnmadd.s f29, f15, f24, f6, rne # perform operation
fnmadd.s f29, f15, f24, f6, rtz # perform operation
fnmadd.s f29, f15, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x21, 0xdb0e5babc8492e94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x52b827b02f6f4335 # load x3 with value 0x52b827b02f6f4335
sw x3, 0(x2) # store 0x52b827b02f6f4335 in memory
flw f19, 0(x2) # load 0x52b827b02f6f4335 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmadd.s f21, f5, f19, f12, dyn # perform operation
fnmadd.s f21, f5, f19, f12, rdn # perform operation
fnmadd.s f21, f5, f19, f12, rmm # perform operation
fnmadd.s f21, f5, f19, f12, rne # perform operation
fnmadd.s f21, f5, f19, f12, rtz # perform operation
fnmadd.s f21, f5, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x28, 0xbe6cdbcc88466e0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x3c51ec2b715527dc # load x3 with value 0x3c51ec2b715527dc
sw x3, 0(x2) # store 0x3c51ec2b715527dc in memory
flw f23, 0(x2) # load 0x3c51ec2b715527dc from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fnmadd.s f28, f15, f23, f12, dyn # perform operation
fnmadd.s f28, f15, f23, f12, rdn # perform operation
fnmadd.s f28, f15, f23, f12, rmm # perform operation
fnmadd.s f28, f15, f23, f12, rne # perform operation
fnmadd.s f28, f15, f23, f12, rtz # perform operation
fnmadd.s f28, f15, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x6, 0xbb02ab73e44638f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x8ecf6a9d3c3e0fed # load x3 with value 0x8ecf6a9d3c3e0fed
sw x3, 0(x2) # store 0x8ecf6a9d3c3e0fed in memory
flw f28, 0(x2) # load 0x8ecf6a9d3c3e0fed from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmadd.s f6, f19, f28, f31, dyn # perform operation
fnmadd.s f6, f19, f28, f31, rdn # perform operation
fnmadd.s f6, f19, f28, f31, rmm # perform operation
fnmadd.s f6, f19, f28, f31, rne # perform operation
fnmadd.s f6, f19, f28, f31, rtz # perform operation
fnmadd.s f6, f19, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f19, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f19, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x5, 0x703ac3e770dc59f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x3dec97413abb69e2 # load x3 with value 0x3dec97413abb69e2
sw x3, 0(x2) # store 0x3dec97413abb69e2 in memory
flw f30, 0(x2) # load 0x3dec97413abb69e2 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f5, f25, f30, f9, dyn # perform operation
fnmadd.s f5, f25, f30, f9, rdn # perform operation
fnmadd.s f5, f25, f30, f9, rmm # perform operation
fnmadd.s f5, f25, f30, f9, rne # perform operation
fnmadd.s f5, f25, f30, f9, rtz # perform operation
fnmadd.s f5, f25, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x8, 0xf54ab2e294f62fb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x9842b2115f59fe27 # load x3 with value 0x9842b2115f59fe27
sw x3, 0(x2) # store 0x9842b2115f59fe27 in memory
flw f2, 0(x2) # load 0x9842b2115f59fe27 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmadd.s f8, f7, f2, f20, dyn # perform operation
fnmadd.s f8, f7, f2, f20, rdn # perform operation
fnmadd.s f8, f7, f2, f20, rmm # perform operation
fnmadd.s f8, f7, f2, f20, rne # perform operation
fnmadd.s f8, f7, f2, f20, rtz # perform operation
fnmadd.s f8, f7, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x28, 0xd9b8b7d9944d4142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xf1ab2882aaf196b4 # load x3 with value 0xf1ab2882aaf196b4
sw x3, 0(x2) # store 0xf1ab2882aaf196b4 in memory
flw f3, 0(x2) # load 0xf1ab2882aaf196b4 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmadd.s f28, f7, f3, f21, dyn # perform operation
fnmadd.s f28, f7, f3, f21, rdn # perform operation
fnmadd.s f28, f7, f3, f21, rmm # perform operation
fnmadd.s f28, f7, f3, f21, rne # perform operation
fnmadd.s f28, f7, f3, f21, rtz # perform operation
fnmadd.s f28, f7, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f7, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x26, 0x742b3efc5fbd4e19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x3af8f86770f379c7 # load x3 with value 0x3af8f86770f379c7
sw x3, 0(x2) # store 0x3af8f86770f379c7 in memory
flw f9, 0(x2) # load 0x3af8f86770f379c7 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.s f26, f27, f9, f23, dyn # perform operation
fnmadd.s f26, f27, f9, f23, rdn # perform operation
fnmadd.s f26, f27, f9, f23, rmm # perform operation
fnmadd.s f26, f27, f9, f23, rne # perform operation
fnmadd.s f26, f27, f9, f23, rtz # perform operation
fnmadd.s f26, f27, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x4, 0xcd10df0cea39921b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xd58de0526f589069 # load x3 with value 0xd58de0526f589069
sw x3, 0(x2) # store 0xd58de0526f589069 in memory
flw f24, 0(x2) # load 0xd58de0526f589069 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmadd.s f4, f25, f24, f17, dyn # perform operation
fnmadd.s f4, f25, f24, f17, rdn # perform operation
fnmadd.s f4, f25, f24, f17, rmm # perform operation
fnmadd.s f4, f25, f24, f17, rne # perform operation
fnmadd.s f4, f25, f24, f17, rtz # perform operation
fnmadd.s f4, f25, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f25, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x1, 0x7ce484d6cb6cce0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x19fed44d91064283 # load x3 with value 0x19fed44d91064283
sw x3, 0(x2) # store 0x19fed44d91064283 in memory
flw f11, 0(x2) # load 0x19fed44d91064283 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f1, f4, f11, f30, dyn # perform operation
fnmadd.s f1, f4, f11, f30, rdn # perform operation
fnmadd.s f1, f4, f11, f30, rmm # perform operation
fnmadd.s f1, f4, f11, f30, rne # perform operation
fnmadd.s f1, f4, f11, f30, rtz # perform operation
fnmadd.s f1, f4, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f4, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f4, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f4, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f4, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f4, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x5, 0x061b30ce8153aefa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xd41587b2a68c395e # load x3 with value 0xd41587b2a68c395e
sw x3, 0(x2) # store 0xd41587b2a68c395e in memory
flw f23, 0(x2) # load 0xd41587b2a68c395e from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f5, f8, f23, f11, dyn # perform operation
fnmadd.s f5, f8, f23, f11, rdn # perform operation
fnmadd.s f5, f8, f23, f11, rmm # perform operation
fnmadd.s f5, f8, f23, f11, rne # perform operation
fnmadd.s f5, f8, f23, f11, rtz # perform operation
fnmadd.s f5, f8, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x20, 0xf5a094c08641226b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x6f80169f306b07b9 # load x3 with value 0x6f80169f306b07b9
sw x3, 0(x2) # store 0x6f80169f306b07b9 in memory
flw f24, 0(x2) # load 0x6f80169f306b07b9 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f20, f17, f24, f16, dyn # perform operation
fnmadd.s f20, f17, f24, f16, rdn # perform operation
fnmadd.s f20, f17, f24, f16, rmm # perform operation
fnmadd.s f20, f17, f24, f16, rne # perform operation
fnmadd.s f20, f17, f24, f16, rtz # perform operation
fnmadd.s f20, f17, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f17, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x15, 0xd2679feefc68d2c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xd515f0797c1481b4 # load x3 with value 0xd515f0797c1481b4
sw x3, 0(x2) # store 0xd515f0797c1481b4 in memory
flw f4, 0(x2) # load 0xd515f0797c1481b4 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f15, f9, f4, f20, dyn # perform operation
fnmadd.s f15, f9, f4, f20, rdn # perform operation
fnmadd.s f15, f9, f4, f20, rmm # perform operation
fnmadd.s f15, f9, f4, f20, rne # perform operation
fnmadd.s f15, f9, f4, f20, rtz # perform operation
fnmadd.s f15, f9, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x27, 0xf5d379d204089588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xa8a9dea551d28ed7 # load x3 with value 0xa8a9dea551d28ed7
sw x3, 0(x2) # store 0xa8a9dea551d28ed7 in memory
flw f24, 0(x2) # load 0xa8a9dea551d28ed7 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmadd.s f27, f19, f24, f15, dyn # perform operation
fnmadd.s f27, f19, f24, f15, rdn # perform operation
fnmadd.s f27, f19, f24, f15, rmm # perform operation
fnmadd.s f27, f19, f24, f15, rne # perform operation
fnmadd.s f27, f19, f24, f15, rtz # perform operation
fnmadd.s f27, f19, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x2, 0x44774d9acd70b2be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x8080e70b684a3475 # load x3 with value 0x8080e70b684a3475
sw x3, 0(x2) # store 0x8080e70b684a3475 in memory
flw f11, 0(x2) # load 0x8080e70b684a3475 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fnmadd.s f2, f10, f11, f4, dyn # perform operation
fnmadd.s f2, f10, f11, f4, rdn # perform operation
fnmadd.s f2, f10, f11, f4, rmm # perform operation
fnmadd.s f2, f10, f11, f4, rne # perform operation
fnmadd.s f2, f10, f11, f4, rtz # perform operation
fnmadd.s f2, f10, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x18, 0xd96ce5831bcadac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xabe8bff11f009a15 # load x3 with value 0xabe8bff11f009a15
sw x3, 0(x2) # store 0xabe8bff11f009a15 in memory
flw f9, 0(x2) # load 0xabe8bff11f009a15 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmadd.s f18, f28, f9, f7, dyn # perform operation
fnmadd.s f18, f28, f9, f7, rdn # perform operation
fnmadd.s f18, f28, f9, f7, rmm # perform operation
fnmadd.s f18, f28, f9, f7, rne # perform operation
fnmadd.s f18, f28, f9, f7, rtz # perform operation
fnmadd.s f18, f28, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x6, 0xc3d46ae12c45c476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xf56b4557bb036d65 # load x3 with value 0xf56b4557bb036d65
sw x3, 0(x2) # store 0xf56b4557bb036d65 in memory
flw f2, 0(x2) # load 0xf56b4557bb036d65 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmadd.s f6, f16, f2, f25, dyn # perform operation
fnmadd.s f6, f16, f2, f25, rdn # perform operation
fnmadd.s f6, f16, f2, f25, rmm # perform operation
fnmadd.s f6, f16, f2, f25, rne # perform operation
fnmadd.s f6, f16, f2, f25, rtz # perform operation
fnmadd.s f6, f16, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x4, 0x12d4cd12877708f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x41f9b041e19c4d56 # load x3 with value 0x41f9b041e19c4d56
sw x3, 0(x2) # store 0x41f9b041e19c4d56 in memory
flw f24, 0(x2) # load 0x41f9b041e19c4d56 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.s f4, f25, f24, f22, dyn # perform operation
fnmadd.s f4, f25, f24, f22, rdn # perform operation
fnmadd.s f4, f25, f24, f22, rmm # perform operation
fnmadd.s f4, f25, f24, f22, rne # perform operation
fnmadd.s f4, f25, f24, f22, rtz # perform operation
fnmadd.s f4, f25, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f25, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x12, 0x60a81c6a10770611 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xcdec21f5f57c76fe # load x3 with value 0xcdec21f5f57c76fe
sw x3, 0(x2) # store 0xcdec21f5f57c76fe in memory
flw f17, 0(x2) # load 0xcdec21f5f57c76fe from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f12, f9, f17, f19, dyn # perform operation
fnmadd.s f12, f9, f17, f19, rdn # perform operation
fnmadd.s f12, f9, f17, f19, rmm # perform operation
fnmadd.s f12, f9, f17, f19, rne # perform operation
fnmadd.s f12, f9, f17, f19, rtz # perform operation
fnmadd.s f12, f9, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f9, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f9, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x22, 0x89e2f706ed4e6433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x86cf6a7b2a7025ee # load x3 with value 0x86cf6a7b2a7025ee
sw x3, 0(x2) # store 0x86cf6a7b2a7025ee in memory
flw f20, 0(x2) # load 0x86cf6a7b2a7025ee from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmadd.s f22, f12, f20, f10, dyn # perform operation
fnmadd.s f22, f12, f20, f10, rdn # perform operation
fnmadd.s f22, f12, f20, f10, rmm # perform operation
fnmadd.s f22, f12, f20, f10, rne # perform operation
fnmadd.s f22, f12, f20, f10, rtz # perform operation
fnmadd.s f22, f12, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x11, 0xcc0fd5866f06284a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xf9c9f8dd641eda0 # load x3 with value 0xf9c9f8dd641eda0
sw x3, 0(x2) # store 0xf9c9f8dd641eda0 in memory
flw f5, 0(x2) # load 0xf9c9f8dd641eda0 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmadd.s f11, f9, f5, f13, dyn # perform operation
fnmadd.s f11, f9, f5, f13, rdn # perform operation
fnmadd.s f11, f9, f5, f13, rmm # perform operation
fnmadd.s f11, f9, f5, f13, rne # perform operation
fnmadd.s f11, f9, f5, f13, rtz # perform operation
fnmadd.s f11, f9, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f9, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x19, 0x636b92d3837156ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x6bd64329f59ac343 # load x3 with value 0x6bd64329f59ac343
sw x3, 0(x2) # store 0x6bd64329f59ac343 in memory
flw f22, 0(x2) # load 0x6bd64329f59ac343 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmadd.s f19, f28, f22, f14, dyn # perform operation
fnmadd.s f19, f28, f22, f14, rdn # perform operation
fnmadd.s f19, f28, f22, f14, rmm # perform operation
fnmadd.s f19, f28, f22, f14, rne # perform operation
fnmadd.s f19, f28, f22, f14, rtz # perform operation
fnmadd.s f19, f28, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f28, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f28, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f28, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f28, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f28, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x18, 0x51425e8ea1391613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xeb77b832df0dfb10 # load x3 with value 0xeb77b832df0dfb10
sw x3, 0(x2) # store 0xeb77b832df0dfb10 in memory
flw f8, 0(x2) # load 0xeb77b832df0dfb10 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmadd.s f18, f22, f8, f3, dyn # perform operation
fnmadd.s f18, f22, f8, f3, rdn # perform operation
fnmadd.s f18, f22, f8, f3, rmm # perform operation
fnmadd.s f18, f22, f8, f3, rne # perform operation
fnmadd.s f18, f22, f8, f3, rtz # perform operation
fnmadd.s f18, f22, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x8, 0x535d98016f8a1407 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x73060867b3bd0bc2 # load x3 with value 0x73060867b3bd0bc2
sw x3, 0(x2) # store 0x73060867b3bd0bc2 in memory
flw f27, 0(x2) # load 0x73060867b3bd0bc2 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmadd.s f8, f21, f27, f20, dyn # perform operation
fnmadd.s f8, f21, f27, f20, rdn # perform operation
fnmadd.s f8, f21, f27, f20, rmm # perform operation
fnmadd.s f8, f21, f27, f20, rne # perform operation
fnmadd.s f8, f21, f27, f20, rtz # perform operation
fnmadd.s f8, f21, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f21, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f21, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f21, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f21, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f21, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x11, 0x4659d34455fc0a30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x2389ebe09860c54d # load x3 with value 0x2389ebe09860c54d
sw x3, 0(x2) # store 0x2389ebe09860c54d in memory
flw f19, 0(x2) # load 0x2389ebe09860c54d from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmadd.s f11, f25, f19, f4, dyn # perform operation
fnmadd.s f11, f25, f19, f4, rdn # perform operation
fnmadd.s f11, f25, f19, f4, rmm # perform operation
fnmadd.s f11, f25, f19, f4, rne # perform operation
fnmadd.s f11, f25, f19, f4, rtz # perform operation
fnmadd.s f11, f25, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x6, 0xe4d850163715ac35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xf483ee14cd72f6ff # load x3 with value 0xf483ee14cd72f6ff
sw x3, 0(x2) # store 0xf483ee14cd72f6ff in memory
flw f21, 0(x2) # load 0xf483ee14cd72f6ff from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f6, f24, f21, f12, dyn # perform operation
fnmadd.s f6, f24, f21, f12, rdn # perform operation
fnmadd.s f6, f24, f21, f12, rmm # perform operation
fnmadd.s f6, f24, f21, f12, rne # perform operation
fnmadd.s f6, f24, f21, f12, rtz # perform operation
fnmadd.s f6, f24, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x25, 0x107071ffd64a2db0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x8551c91c51cb9c6f # load x3 with value 0x8551c91c51cb9c6f
sw x3, 0(x2) # store 0x8551c91c51cb9c6f in memory
flw f19, 0(x2) # load 0x8551c91c51cb9c6f from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fnmadd.s f25, f5, f19, f15, dyn # perform operation
fnmadd.s f25, f5, f19, f15, rdn # perform operation
fnmadd.s f25, f5, f19, f15, rmm # perform operation
fnmadd.s f25, f5, f19, f15, rne # perform operation
fnmadd.s f25, f5, f19, f15, rtz # perform operation
fnmadd.s f25, f5, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x23, 0xfc57ff8d6a1b8808 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0xd4e6592ec06323ff # load x3 with value 0xd4e6592ec06323ff
sw x3, 0(x2) # store 0xd4e6592ec06323ff in memory
flw f15, 0(x2) # load 0xd4e6592ec06323ff from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fnmadd.s f23, f26, f15, f25, dyn # perform operation
fnmadd.s f23, f26, f15, f25, rdn # perform operation
fnmadd.s f23, f26, f15, f25, rmm # perform operation
fnmadd.s f23, f26, f15, f25, rne # perform operation
fnmadd.s f23, f26, f15, f25, rtz # perform operation
fnmadd.s f23, f26, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x17, 0x932f2ee99772b88e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xe9d01ba0ee23ec1a # load x3 with value 0xe9d01ba0ee23ec1a
sw x3, 0(x2) # store 0xe9d01ba0ee23ec1a in memory
flw f13, 0(x2) # load 0xe9d01ba0ee23ec1a from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f17, f18, f13, f28, dyn # perform operation
fnmadd.s f17, f18, f13, f28, rdn # perform operation
fnmadd.s f17, f18, f13, f28, rmm # perform operation
fnmadd.s f17, f18, f13, f28, rne # perform operation
fnmadd.s f17, f18, f13, f28, rtz # perform operation
fnmadd.s f17, f18, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x20, 0xe98c62c4142401f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x68cc2fc15a14aa9f # load x3 with value 0x68cc2fc15a14aa9f
sw x3, 0(x2) # store 0x68cc2fc15a14aa9f in memory
flw f28, 0(x2) # load 0x68cc2fc15a14aa9f from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmadd.s f20, f9, f28, f25, dyn # perform operation
fnmadd.s f20, f9, f28, f25, rdn # perform operation
fnmadd.s f20, f9, f28, f25, rmm # perform operation
fnmadd.s f20, f9, f28, f25, rne # perform operation
fnmadd.s f20, f9, f28, f25, rtz # perform operation
fnmadd.s f20, f9, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x28, 0x39a58e80eb8f70df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x28d2d9925cc2aa97 # load x3 with value 0x28d2d9925cc2aa97
sw x3, 0(x2) # store 0x28d2d9925cc2aa97 in memory
flw f12, 0(x2) # load 0x28d2d9925cc2aa97 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f28, f23, f12, f14, dyn # perform operation
fnmadd.s f28, f23, f12, f14, rdn # perform operation
fnmadd.s f28, f23, f12, f14, rmm # perform operation
fnmadd.s f28, f23, f12, f14, rne # perform operation
fnmadd.s f28, f23, f12, f14, rtz # perform operation
fnmadd.s f28, f23, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x25, 0xd84b7e5465548134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0xa5d69743b2b3e970 # load x3 with value 0xa5d69743b2b3e970
sw x3, 0(x2) # store 0xa5d69743b2b3e970 in memory
flw f27, 0(x2) # load 0xa5d69743b2b3e970 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmadd.s f25, f26, f27, f5, dyn # perform operation
fnmadd.s f25, f26, f27, f5, rdn # perform operation
fnmadd.s f25, f26, f27, f5, rmm # perform operation
fnmadd.s f25, f26, f27, f5, rne # perform operation
fnmadd.s f25, f26, f27, f5, rtz # perform operation
fnmadd.s f25, f26, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x31, 0x5f8d2ff9c2d2ec2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x993a1cbfd32b80b6 # load x3 with value 0x993a1cbfd32b80b6
sw x3, 0(x2) # store 0x993a1cbfd32b80b6 in memory
flw f11, 0(x2) # load 0x993a1cbfd32b80b6 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f31, f15, f11, f14, dyn # perform operation
fnmadd.s f31, f15, f11, f14, rdn # perform operation
fnmadd.s f31, f15, f11, f14, rmm # perform operation
fnmadd.s f31, f15, f11, f14, rne # perform operation
fnmadd.s f31, f15, f11, f14, rtz # perform operation
fnmadd.s f31, f15, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x3, 0x24ac22baaef348f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x5c4380b5ac35c609 # load x3 with value 0x5c4380b5ac35c609
sw x3, 0(x2) # store 0x5c4380b5ac35c609 in memory
flw f30, 0(x2) # load 0x5c4380b5ac35c609 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.s f3, f26, f30, f9, dyn # perform operation
fnmadd.s f3, f26, f30, f9, rdn # perform operation
fnmadd.s f3, f26, f30, f9, rmm # perform operation
fnmadd.s f3, f26, f30, f9, rne # perform operation
fnmadd.s f3, f26, f30, f9, rtz # perform operation
fnmadd.s f3, f26, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x19, 0x9495cc876d7c2ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xe5b88d0a92069898 # load x3 with value 0xe5b88d0a92069898
sw x3, 0(x2) # store 0xe5b88d0a92069898 in memory
flw f9, 0(x2) # load 0xe5b88d0a92069898 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmadd.s f19, f8, f9, f1, dyn # perform operation
fnmadd.s f19, f8, f9, f1, rdn # perform operation
fnmadd.s f19, f8, f9, f1, rmm # perform operation
fnmadd.s f19, f8, f9, f1, rne # perform operation
fnmadd.s f19, f8, f9, f1, rtz # perform operation
fnmadd.s f19, f8, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f8, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f8, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x19, 0x42cb2ba4740c4b8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x6c0fa03939350f0c # load x3 with value 0x6c0fa03939350f0c
sw x3, 0(x2) # store 0x6c0fa03939350f0c in memory
flw f26, 0(x2) # load 0x6c0fa03939350f0c from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f19, f6, f26, f20, dyn # perform operation
fnmadd.s f19, f6, f26, f20, rdn # perform operation
fnmadd.s f19, f6, f26, f20, rmm # perform operation
fnmadd.s f19, f6, f26, f20, rne # perform operation
fnmadd.s f19, f6, f26, f20, rtz # perform operation
fnmadd.s f19, f6, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x10, 0xd068fb5f7705240c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x465fec37ab128a5d # load x3 with value 0x465fec37ab128a5d
sw x3, 0(x2) # store 0x465fec37ab128a5d in memory
flw f8, 0(x2) # load 0x465fec37ab128a5d from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmadd.s f10, f15, f8, f14, dyn # perform operation
fnmadd.s f10, f15, f8, f14, rdn # perform operation
fnmadd.s f10, f15, f8, f14, rmm # perform operation
fnmadd.s f10, f15, f8, f14, rne # perform operation
fnmadd.s f10, f15, f8, f14, rtz # perform operation
fnmadd.s f10, f15, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x26, 0x89c0ff4aae0b8aff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x2d88b0fbaab275e5 # load x3 with value 0x2d88b0fbaab275e5
sw x3, 0(x2) # store 0x2d88b0fbaab275e5 in memory
flw f6, 0(x2) # load 0x2d88b0fbaab275e5 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f26, f19, f6, f3, dyn # perform operation
fnmadd.s f26, f19, f6, f3, rdn # perform operation
fnmadd.s f26, f19, f6, f3, rmm # perform operation
fnmadd.s f26, f19, f6, f3, rne # perform operation
fnmadd.s f26, f19, f6, f3, rtz # perform operation
fnmadd.s f26, f19, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x9, 0xe4aebc50cb092514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x3bb5fb1aa4d974d1 # load x3 with value 0x3bb5fb1aa4d974d1
sw x3, 0(x2) # store 0x3bb5fb1aa4d974d1 in memory
flw f21, 0(x2) # load 0x3bb5fb1aa4d974d1 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmadd.s f9, f24, f21, f15, dyn # perform operation
fnmadd.s f9, f24, f21, f15, rdn # perform operation
fnmadd.s f9, f24, f21, f15, rmm # perform operation
fnmadd.s f9, f24, f21, f15, rne # perform operation
fnmadd.s f9, f24, f21, f15, rtz # perform operation
fnmadd.s f9, f24, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x2, 0xf2a52f625adb0134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x7473673a9009cc47 # load x3 with value 0x7473673a9009cc47
sw x3, 0(x2) # store 0x7473673a9009cc47 in memory
flw f20, 0(x2) # load 0x7473673a9009cc47 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f2, f16, f20, f28, dyn # perform operation
fnmadd.s f2, f16, f20, f28, rdn # perform operation
fnmadd.s f2, f16, f20, f28, rmm # perform operation
fnmadd.s f2, f16, f20, f28, rne # perform operation
fnmadd.s f2, f16, f20, f28, rtz # perform operation
fnmadd.s f2, f16, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x12, 0xe87aaf12cffc8407 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x7ab3c68b528f29ff # load x3 with value 0x7ab3c68b528f29ff
sw x3, 0(x2) # store 0x7ab3c68b528f29ff in memory
flw f19, 0(x2) # load 0x7ab3c68b528f29ff from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f12, f11, f19, f27, dyn # perform operation
fnmadd.s f12, f11, f19, f27, rdn # perform operation
fnmadd.s f12, f11, f19, f27, rmm # perform operation
fnmadd.s f12, f11, f19, f27, rne # perform operation
fnmadd.s f12, f11, f19, f27, rtz # perform operation
fnmadd.s f12, f11, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x29, 0x5c9e618fe88374c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x53f6c9c2bcd0319b # load x3 with value 0x53f6c9c2bcd0319b
sw x3, 0(x2) # store 0x53f6c9c2bcd0319b in memory
flw f16, 0(x2) # load 0x53f6c9c2bcd0319b from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f29, f8, f16, f26, dyn # perform operation
fnmadd.s f29, f8, f16, f26, rdn # perform operation
fnmadd.s f29, f8, f16, f26, rmm # perform operation
fnmadd.s f29, f8, f16, f26, rne # perform operation
fnmadd.s f29, f8, f16, f26, rtz # perform operation
fnmadd.s f29, f8, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x21, 0xfc579f6fb0b25844 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xe67e5dcfc07e8c60 # load x3 with value 0xe67e5dcfc07e8c60
sw x3, 0(x2) # store 0xe67e5dcfc07e8c60 in memory
flw f20, 0(x2) # load 0xe67e5dcfc07e8c60 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmadd.s f21, f5, f20, f26, dyn # perform operation
fnmadd.s f21, f5, f20, f26, rdn # perform operation
fnmadd.s f21, f5, f20, f26, rmm # perform operation
fnmadd.s f21, f5, f20, f26, rne # perform operation
fnmadd.s f21, f5, f20, f26, rtz # perform operation
fnmadd.s f21, f5, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x8, 0x05b3d8321f356e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xc50f78043cb5fb43 # load x3 with value 0xc50f78043cb5fb43
sw x3, 0(x2) # store 0xc50f78043cb5fb43 in memory
flw f5, 0(x2) # load 0xc50f78043cb5fb43 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmadd.s f8, f19, f5, f16, dyn # perform operation
fnmadd.s f8, f19, f5, f16, rdn # perform operation
fnmadd.s f8, f19, f5, f16, rmm # perform operation
fnmadd.s f8, f19, f5, f16, rne # perform operation
fnmadd.s f8, f19, f5, f16, rtz # perform operation
fnmadd.s f8, f19, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x19, 0xf073413f237878f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xb17cfb06d62f0557 # load x3 with value 0xb17cfb06d62f0557
sw x3, 0(x2) # store 0xb17cfb06d62f0557 in memory
flw f25, 0(x2) # load 0xb17cfb06d62f0557 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmadd.s f19, f11, f25, f5, dyn # perform operation
fnmadd.s f19, f11, f25, f5, rdn # perform operation
fnmadd.s f19, f11, f25, f5, rmm # perform operation
fnmadd.s f19, f11, f25, f5, rne # perform operation
fnmadd.s f19, f11, f25, f5, rtz # perform operation
fnmadd.s f19, f11, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f11, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x25, 0x4d9fb3f98c856bcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xe5f1c56fee00061d # load x3 with value 0xe5f1c56fee00061d
sw x3, 0(x2) # store 0xe5f1c56fee00061d in memory
flw f30, 0(x2) # load 0xe5f1c56fee00061d from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f25, f7, f30, f9, dyn # perform operation
fnmadd.s f25, f7, f30, f9, rdn # perform operation
fnmadd.s f25, f7, f30, f9, rmm # perform operation
fnmadd.s f25, f7, f30, f9, rne # perform operation
fnmadd.s f25, f7, f30, f9, rtz # perform operation
fnmadd.s f25, f7, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f7, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x12, 0xd1e754f1ae7a4722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x3f0c1c541ac9cd98 # load x3 with value 0x3f0c1c541ac9cd98
sw x3, 0(x2) # store 0x3f0c1c541ac9cd98 in memory
flw f17, 0(x2) # load 0x3f0c1c541ac9cd98 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f12, f3, f17, f27, dyn # perform operation
fnmadd.s f12, f3, f17, f27, rdn # perform operation
fnmadd.s f12, f3, f17, f27, rmm # perform operation
fnmadd.s f12, f3, f17, f27, rne # perform operation
fnmadd.s f12, f3, f17, f27, rtz # perform operation
fnmadd.s f12, f3, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x4, 0x26feaeacbeba1778 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x8ddcb3b394acd21d # load x3 with value 0x8ddcb3b394acd21d
sw x3, 0(x2) # store 0x8ddcb3b394acd21d in memory
flw f12, 0(x2) # load 0x8ddcb3b394acd21d from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f4, f15, f12, f9, dyn # perform operation
fnmadd.s f4, f15, f12, f9, rdn # perform operation
fnmadd.s f4, f15, f12, f9, rmm # perform operation
fnmadd.s f4, f15, f12, f9, rne # perform operation
fnmadd.s f4, f15, f12, f9, rtz # perform operation
fnmadd.s f4, f15, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f15, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f15, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f15, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f15, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f15, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x15, 0xd6b5a4a10549c108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xddccc2ea06c50b73 # load x3 with value 0xddccc2ea06c50b73
sw x3, 0(x2) # store 0xddccc2ea06c50b73 in memory
flw f21, 0(x2) # load 0xddccc2ea06c50b73 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmadd.s f15, f14, f21, f26, dyn # perform operation
fnmadd.s f15, f14, f21, f26, rdn # perform operation
fnmadd.s f15, f14, f21, f26, rmm # perform operation
fnmadd.s f15, f14, f21, f26, rne # perform operation
fnmadd.s f15, f14, f21, f26, rtz # perform operation
fnmadd.s f15, f14, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x11, 0xd19cc9c9ef1b8674 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x81c0f3679d08f854 # load x3 with value 0x81c0f3679d08f854
sw x3, 0(x2) # store 0x81c0f3679d08f854 in memory
flw f2, 0(x2) # load 0x81c0f3679d08f854 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmadd.s f11, f28, f2, f7, dyn # perform operation
fnmadd.s f11, f28, f2, f7, rdn # perform operation
fnmadd.s f11, f28, f2, f7, rmm # perform operation
fnmadd.s f11, f28, f2, f7, rne # perform operation
fnmadd.s f11, f28, f2, f7, rtz # perform operation
fnmadd.s f11, f28, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x1, 0xded9aa40f3171ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x620cc6e9e567323 # load x3 with value 0x620cc6e9e567323
sw x3, 0(x2) # store 0x620cc6e9e567323 in memory
flw f20, 0(x2) # load 0x620cc6e9e567323 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f1, f11, f20, f19, dyn # perform operation
fnmadd.s f1, f11, f20, f19, rdn # perform operation
fnmadd.s f1, f11, f20, f19, rmm # perform operation
fnmadd.s f1, f11, f20, f19, rne # perform operation
fnmadd.s f1, f11, f20, f19, rtz # perform operation
fnmadd.s f1, f11, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x23, 0x20b0c7d142a0405b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x1736bd4e9c056ef3 # load x3 with value 0x1736bd4e9c056ef3
sw x3, 0(x2) # store 0x1736bd4e9c056ef3 in memory
flw f19, 0(x2) # load 0x1736bd4e9c056ef3 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f23, f25, f19, f13, dyn # perform operation
fnmadd.s f23, f25, f19, f13, rdn # perform operation
fnmadd.s f23, f25, f19, f13, rmm # perform operation
fnmadd.s f23, f25, f19, f13, rne # perform operation
fnmadd.s f23, f25, f19, f13, rtz # perform operation
fnmadd.s f23, f25, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x9, 0xf6db0ee9f0abda61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x3e2b232e532ab95f # load x3 with value 0x3e2b232e532ab95f
sw x3, 0(x2) # store 0x3e2b232e532ab95f in memory
flw f12, 0(x2) # load 0x3e2b232e532ab95f from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f9, f21, f12, f2, dyn # perform operation
fnmadd.s f9, f21, f12, f2, rdn # perform operation
fnmadd.s f9, f21, f12, f2, rmm # perform operation
fnmadd.s f9, f21, f12, f2, rne # perform operation
fnmadd.s f9, f21, f12, f2, rtz # perform operation
fnmadd.s f9, f21, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x13, 0x2d2e176f6c797c50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0xa219d3458a97605a # load x3 with value 0xa219d3458a97605a
sw x3, 0(x2) # store 0xa219d3458a97605a in memory
flw f22, 0(x2) # load 0xa219d3458a97605a from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fnmadd.s f13, f15, f22, f2, dyn # perform operation
fnmadd.s f13, f15, f22, f2, rdn # perform operation
fnmadd.s f13, f15, f22, f2, rmm # perform operation
fnmadd.s f13, f15, f22, f2, rne # perform operation
fnmadd.s f13, f15, f22, f2, rtz # perform operation
fnmadd.s f13, f15, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x17, 0xe1dba4418551a9c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x1b0d1508f2b3cdb5 # load x3 with value 0x1b0d1508f2b3cdb5
sw x3, 0(x2) # store 0x1b0d1508f2b3cdb5 in memory
flw f11, 0(x2) # load 0x1b0d1508f2b3cdb5 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f17, f20, f11, f27, dyn # perform operation
fnmadd.s f17, f20, f11, f27, rdn # perform operation
fnmadd.s f17, f20, f11, f27, rmm # perform operation
fnmadd.s f17, f20, f11, f27, rne # perform operation
fnmadd.s f17, f20, f11, f27, rtz # perform operation
fnmadd.s f17, f20, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x24, 0xe81320c4f6e81a92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x77d7725130942578 # load x3 with value 0x77d7725130942578
sw x3, 0(x2) # store 0x77d7725130942578 in memory
flw f20, 0(x2) # load 0x77d7725130942578 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmadd.s f24, f28, f20, f7, dyn # perform operation
fnmadd.s f24, f28, f20, f7, rdn # perform operation
fnmadd.s f24, f28, f20, f7, rmm # perform operation
fnmadd.s f24, f28, f20, f7, rne # perform operation
fnmadd.s f24, f28, f20, f7, rtz # perform operation
fnmadd.s f24, f28, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f28, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x27, 0xe45c07cd994516fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x54d75ae50dee519b # load x3 with value 0x54d75ae50dee519b
sw x3, 0(x2) # store 0x54d75ae50dee519b in memory
flw f3, 0(x2) # load 0x54d75ae50dee519b from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fnmadd.s f27, f25, f3, f4, dyn # perform operation
fnmadd.s f27, f25, f3, f4, rdn # perform operation
fnmadd.s f27, f25, f3, f4, rmm # perform operation
fnmadd.s f27, f25, f3, f4, rne # perform operation
fnmadd.s f27, f25, f3, f4, rtz # perform operation
fnmadd.s f27, f25, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x14, 0xf493f5c23c5b1730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xb4c6a3b996d2a045 # load x3 with value 0xb4c6a3b996d2a045
sw x3, 0(x2) # store 0xb4c6a3b996d2a045 in memory
flw f24, 0(x2) # load 0xb4c6a3b996d2a045 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fnmadd.s f14, f13, f24, f7, dyn # perform operation
fnmadd.s f14, f13, f24, f7, rdn # perform operation
fnmadd.s f14, f13, f24, f7, rmm # perform operation
fnmadd.s f14, f13, f24, f7, rne # perform operation
fnmadd.s f14, f13, f24, f7, rtz # perform operation
fnmadd.s f14, f13, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x4, 0xe7ee4f137c75b3dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0xa93ca8e53792033a # load x3 with value 0xa93ca8e53792033a
sw x3, 0(x2) # store 0xa93ca8e53792033a in memory
flw f19, 0(x2) # load 0xa93ca8e53792033a from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f4, f23, f19, f10, dyn # perform operation
fnmadd.s f4, f23, f19, f10, rdn # perform operation
fnmadd.s f4, f23, f19, f10, rmm # perform operation
fnmadd.s f4, f23, f19, f10, rne # perform operation
fnmadd.s f4, f23, f19, f10, rtz # perform operation
fnmadd.s f4, f23, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f23, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f23, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f23, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f23, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f23, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x18, 0xbf173f8a95c178c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x5c88bb4cc5127054 # load x3 with value 0x5c88bb4cc5127054
sw x3, 0(x2) # store 0x5c88bb4cc5127054 in memory
flw f26, 0(x2) # load 0x5c88bb4cc5127054 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.s f18, f21, f26, f6, dyn # perform operation
fnmadd.s f18, f21, f26, f6, rdn # perform operation
fnmadd.s f18, f21, f26, f6, rmm # perform operation
fnmadd.s f18, f21, f26, f6, rne # perform operation
fnmadd.s f18, f21, f26, f6, rtz # perform operation
fnmadd.s f18, f21, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x23, 0xb71b6bdd412e770d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xb6d5527c19aca6e8 # load x3 with value 0xb6d5527c19aca6e8
sw x3, 0(x2) # store 0xb6d5527c19aca6e8 in memory
flw f25, 0(x2) # load 0xb6d5527c19aca6e8 from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmadd.s f23, f9, f25, f24, dyn # perform operation
fnmadd.s f23, f9, f25, f24, rdn # perform operation
fnmadd.s f23, f9, f25, f24, rmm # perform operation
fnmadd.s f23, f9, f25, f24, rne # perform operation
fnmadd.s f23, f9, f25, f24, rtz # perform operation
fnmadd.s f23, f9, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x27, 0x8de9c4ccc4d3cd6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x72129fd22738fd2a # load x3 with value 0x72129fd22738fd2a
sw x3, 0(x2) # store 0x72129fd22738fd2a in memory
flw f6, 0(x2) # load 0x72129fd22738fd2a from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f27, f5, f6, f20, dyn # perform operation
fnmadd.s f27, f5, f6, f20, rdn # perform operation
fnmadd.s f27, f5, f6, f20, rmm # perform operation
fnmadd.s f27, f5, f6, f20, rne # perform operation
fnmadd.s f27, f5, f6, f20, rtz # perform operation
fnmadd.s f27, f5, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x12, 0x001811a38a9d7e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x26a08cba08133a1d # load x3 with value 0x26a08cba08133a1d
sw x3, 0(x2) # store 0x26a08cba08133a1d in memory
flw f30, 0(x2) # load 0x26a08cba08133a1d from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmadd.s f12, f15, f30, f16, dyn # perform operation
fnmadd.s f12, f15, f30, f16, rdn # perform operation
fnmadd.s f12, f15, f30, f16, rmm # perform operation
fnmadd.s f12, f15, f30, f16, rne # perform operation
fnmadd.s f12, f15, f30, f16, rtz # perform operation
fnmadd.s f12, f15, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x4, 0xc92715cee3d1296f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x998a3d9fd5f5cae4 # load x3 with value 0x998a3d9fd5f5cae4
sw x3, 0(x2) # store 0x998a3d9fd5f5cae4 in memory
flw f12, 0(x2) # load 0x998a3d9fd5f5cae4 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmadd.s f4, f6, f12, f26, dyn # perform operation
fnmadd.s f4, f6, f12, f26, rdn # perform operation
fnmadd.s f4, f6, f12, f26, rmm # perform operation
fnmadd.s f4, f6, f12, f26, rne # perform operation
fnmadd.s f4, f6, f12, f26, rtz # perform operation
fnmadd.s f4, f6, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f6, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f6, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f6, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f6, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f6, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x22, 0x49fbc2345f723e91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0xf3d4e25bf0c88e36 # load x3 with value 0xf3d4e25bf0c88e36
sw x3, 0(x2) # store 0xf3d4e25bf0c88e36 in memory
flw f16, 0(x2) # load 0xf3d4e25bf0c88e36 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmadd.s f22, f18, f16, f14, dyn # perform operation
fnmadd.s f22, f18, f16, f14, rdn # perform operation
fnmadd.s f22, f18, f16, f14, rmm # perform operation
fnmadd.s f22, f18, f16, f14, rne # perform operation
fnmadd.s f22, f18, f16, f14, rtz # perform operation
fnmadd.s f22, f18, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x16, 0x106a222123b8f88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xb8778e9191ad2419 # load x3 with value 0xb8778e9191ad2419
sw x3, 0(x2) # store 0xb8778e9191ad2419 in memory
flw f6, 0(x2) # load 0xb8778e9191ad2419 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f16, f28, f6, f26, dyn # perform operation
fnmadd.s f16, f28, f6, f26, rdn # perform operation
fnmadd.s f16, f28, f6, f26, rmm # perform operation
fnmadd.s f16, f28, f6, f26, rne # perform operation
fnmadd.s f16, f28, f6, f26, rtz # perform operation
fnmadd.s f16, f28, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f28, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f28, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f28, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f28, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f28, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x29, 0x2b588043512e27b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x38d484e3aac96a0a # load x3 with value 0x38d484e3aac96a0a
sw x3, 0(x2) # store 0x38d484e3aac96a0a in memory
flw f31, 0(x2) # load 0x38d484e3aac96a0a from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmadd.s f29, f11, f31, f13, dyn # perform operation
fnmadd.s f29, f11, f31, f13, rdn # perform operation
fnmadd.s f29, f11, f31, f13, rmm # perform operation
fnmadd.s f29, f11, f31, f13, rne # perform operation
fnmadd.s f29, f11, f31, f13, rtz # perform operation
fnmadd.s f29, f11, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x21, 0xdfec9130c9ea149a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x243eb41123b4d5e2 # load x3 with value 0x243eb41123b4d5e2
sw x3, 0(x2) # store 0x243eb41123b4d5e2 in memory
flw f30, 0(x2) # load 0x243eb41123b4d5e2 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmadd.s f21, f1, f30, f11, dyn # perform operation
fnmadd.s f21, f1, f30, f11, rdn # perform operation
fnmadd.s f21, f1, f30, f11, rmm # perform operation
fnmadd.s f21, f1, f30, f11, rne # perform operation
fnmadd.s f21, f1, f30, f11, rtz # perform operation
fnmadd.s f21, f1, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f1, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f1, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x19, 0xa3ef07201eea440b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x2fdce04da1df002d # load x3 with value 0x2fdce04da1df002d
sw x3, 0(x2) # store 0x2fdce04da1df002d in memory
flw f4, 0(x2) # load 0x2fdce04da1df002d from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmadd.s f19, f16, f4, f14, dyn # perform operation
fnmadd.s f19, f16, f4, f14, rdn # perform operation
fnmadd.s f19, f16, f4, f14, rmm # perform operation
fnmadd.s f19, f16, f4, f14, rne # perform operation
fnmadd.s f19, f16, f4, f14, rtz # perform operation
fnmadd.s f19, f16, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x31, 0xa95025855afe0bb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x52b157ad678d892e # load x3 with value 0x52b157ad678d892e
sw x3, 0(x2) # store 0x52b157ad678d892e in memory
flw f3, 0(x2) # load 0x52b157ad678d892e from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f31, f1, f3, f24, dyn # perform operation
fnmadd.s f31, f1, f3, f24, rdn # perform operation
fnmadd.s f31, f1, f3, f24, rmm # perform operation
fnmadd.s f31, f1, f3, f24, rne # perform operation
fnmadd.s f31, f1, f3, f24, rtz # perform operation
fnmadd.s f31, f1, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x17, 0x2eb0eca747c88eb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x7bd0311b1cb6638d # load x3 with value 0x7bd0311b1cb6638d
sw x3, 0(x2) # store 0x7bd0311b1cb6638d in memory
flw f20, 0(x2) # load 0x7bd0311b1cb6638d from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmadd.s f17, f18, f20, f27, dyn # perform operation
fnmadd.s f17, f18, f20, f27, rdn # perform operation
fnmadd.s f17, f18, f20, f27, rmm # perform operation
fnmadd.s f17, f18, f20, f27, rne # perform operation
fnmadd.s f17, f18, f20, f27, rtz # perform operation
fnmadd.s f17, f18, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x28, 0x03926cea7fc316ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xff560a05327d7075 # load x3 with value 0xff560a05327d7075
sw x3, 0(x2) # store 0xff560a05327d7075 in memory
flw f12, 0(x2) # load 0xff560a05327d7075 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmadd.s f28, f23, f12, f13, dyn # perform operation
fnmadd.s f28, f23, f12, f13, rdn # perform operation
fnmadd.s f28, f23, f12, f13, rmm # perform operation
fnmadd.s f28, f23, f12, f13, rne # perform operation
fnmadd.s f28, f23, f12, f13, rtz # perform operation
fnmadd.s f28, f23, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x22, 0x1005ee17683805c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x22860ff32c1c494a # load x3 with value 0x22860ff32c1c494a
sw x3, 0(x2) # store 0x22860ff32c1c494a in memory
flw f24, 0(x2) # load 0x22860ff32c1c494a from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fnmadd.s f22, f17, f24, f19, dyn # perform operation
fnmadd.s f22, f17, f24, f19, rdn # perform operation
fnmadd.s f22, f17, f24, f19, rmm # perform operation
fnmadd.s f22, f17, f24, f19, rne # perform operation
fnmadd.s f22, f17, f24, f19, rtz # perform operation
fnmadd.s f22, f17, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x3, 0x5a65635fbb2f6886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x3dee0392a5da45e0 # load x3 with value 0x3dee0392a5da45e0
sw x3, 0(x2) # store 0x3dee0392a5da45e0 in memory
flw f8, 0(x2) # load 0x3dee0392a5da45e0 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmadd.s f3, f23, f8, f14, dyn # perform operation
fnmadd.s f3, f23, f8, f14, rdn # perform operation
fnmadd.s f3, f23, f8, f14, rmm # perform operation
fnmadd.s f3, f23, f8, f14, rne # perform operation
fnmadd.s f3, f23, f8, f14, rtz # perform operation
fnmadd.s f3, f23, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x22, 0x9cbdff678e061d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0xfa035600370dacc6 # load x3 with value 0xfa035600370dacc6
sw x3, 0(x2) # store 0xfa035600370dacc6 in memory
flw f5, 0(x2) # load 0xfa035600370dacc6 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmadd.s f22, f20, f5, f26, dyn # perform operation
fnmadd.s f22, f20, f5, f26, rdn # perform operation
fnmadd.s f22, f20, f5, f26, rmm # perform operation
fnmadd.s f22, f20, f5, f26, rne # perform operation
fnmadd.s f22, f20, f5, f26, rtz # perform operation
fnmadd.s f22, f20, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x29, 0xcebc7c0d3b77e23b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xc1efd840cfa1c7e1 # load x3 with value 0xc1efd840cfa1c7e1
sw x3, 0(x2) # store 0xc1efd840cfa1c7e1 in memory
flw f12, 0(x2) # load 0xc1efd840cfa1c7e1 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmadd.s f29, f4, f12, f11, dyn # perform operation
fnmadd.s f29, f4, f12, f11, rdn # perform operation
fnmadd.s f29, f4, f12, f11, rmm # perform operation
fnmadd.s f29, f4, f12, f11, rne # perform operation
fnmadd.s f29, f4, f12, f11, rtz # perform operation
fnmadd.s f29, f4, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f4, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f4, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f4, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f4, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f4, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x19, 0xf7b274731d517de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x99179e35eeba7256 # load x3 with value 0x99179e35eeba7256
sw x3, 0(x2) # store 0x99179e35eeba7256 in memory
flw f16, 0(x2) # load 0x99179e35eeba7256 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmadd.s f19, f24, f16, f28, dyn # perform operation
fnmadd.s f19, f24, f16, f28, rdn # perform operation
fnmadd.s f19, f24, f16, f28, rmm # perform operation
fnmadd.s f19, f24, f16, f28, rne # perform operation
fnmadd.s f19, f24, f16, f28, rtz # perform operation
fnmadd.s f19, f24, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x27, 0x6f4f4780d5fd6927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x7c83224ab69b5a64 # load x3 with value 0x7c83224ab69b5a64
sw x3, 0(x2) # store 0x7c83224ab69b5a64 in memory
flw f8, 0(x2) # load 0x7c83224ab69b5a64 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmadd.s f27, f26, f8, f19, dyn # perform operation
fnmadd.s f27, f26, f8, f19, rdn # perform operation
fnmadd.s f27, f26, f8, f19, rmm # perform operation
fnmadd.s f27, f26, f8, f19, rne # perform operation
fnmadd.s f27, f26, f8, f19, rtz # perform operation
fnmadd.s f27, f26, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x7, 0xec487d632803883f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xd9f7e4267f6023f5 # load x3 with value 0xd9f7e4267f6023f5
sw x3, 0(x2) # store 0xd9f7e4267f6023f5 in memory
flw f8, 0(x2) # load 0xd9f7e4267f6023f5 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f7, f10, f8, f6, dyn # perform operation
fnmadd.s f7, f10, f8, f6, rdn # perform operation
fnmadd.s f7, f10, f8, f6, rmm # perform operation
fnmadd.s f7, f10, f8, f6, rne # perform operation
fnmadd.s f7, f10, f8, f6, rtz # perform operation
fnmadd.s f7, f10, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f10, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x28, 0x3432fb660525525c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x32eb8259faf4e91c # load x3 with value 0x32eb8259faf4e91c
sw x3, 0(x2) # store 0x32eb8259faf4e91c in memory
flw f29, 0(x2) # load 0x32eb8259faf4e91c from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fnmadd.s f28, f23, f29, f2, dyn # perform operation
fnmadd.s f28, f23, f29, f2, rdn # perform operation
fnmadd.s f28, f23, f29, f2, rmm # perform operation
fnmadd.s f28, f23, f29, f2, rne # perform operation
fnmadd.s f28, f23, f29, f2, rtz # perform operation
fnmadd.s f28, f23, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x29, 0xff7df1dd477db8ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x98079ff07db09ab3 # load x3 with value 0x98079ff07db09ab3
sw x3, 0(x2) # store 0x98079ff07db09ab3 in memory
flw f30, 0(x2) # load 0x98079ff07db09ab3 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmadd.s f29, f17, f30, f14, dyn # perform operation
fnmadd.s f29, f17, f30, f14, rdn # perform operation
fnmadd.s f29, f17, f30, f14, rmm # perform operation
fnmadd.s f29, f17, f30, f14, rne # perform operation
fnmadd.s f29, f17, f30, f14, rtz # perform operation
fnmadd.s f29, f17, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f17, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x8, 0x685afe16258146ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xeddfa1abb07377d9 # load x3 with value 0xeddfa1abb07377d9
sw x3, 0(x2) # store 0xeddfa1abb07377d9 in memory
flw f19, 0(x2) # load 0xeddfa1abb07377d9 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmadd.s f8, f4, f19, f28, dyn # perform operation
fnmadd.s f8, f4, f19, f28, rdn # perform operation
fnmadd.s f8, f4, f19, f28, rmm # perform operation
fnmadd.s f8, f4, f19, f28, rne # perform operation
fnmadd.s f8, f4, f19, f28, rtz # perform operation
fnmadd.s f8, f4, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f4, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x9, 0xdc74e8b6687fb88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xb24e52a0677da5ea # load x3 with value 0xb24e52a0677da5ea
sw x3, 0(x2) # store 0xb24e52a0677da5ea in memory
flw f24, 0(x2) # load 0xb24e52a0677da5ea from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmadd.s f9, f27, f24, f19, dyn # perform operation
fnmadd.s f9, f27, f24, f19, rdn # perform operation
fnmadd.s f9, f27, f24, f19, rmm # perform operation
fnmadd.s f9, f27, f24, f19, rne # perform operation
fnmadd.s f9, f27, f24, f19, rtz # perform operation
fnmadd.s f9, f27, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x22, 0xc25b6b2ad8720f39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xc6f6dad07c46ce19 # load x3 with value 0xc6f6dad07c46ce19
sw x3, 0(x2) # store 0xc6f6dad07c46ce19 in memory
flw f29, 0(x2) # load 0xc6f6dad07c46ce19 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f22, f27, f29, f6, dyn # perform operation
fnmadd.s f22, f27, f29, f6, rdn # perform operation
fnmadd.s f22, f27, f29, f6, rmm # perform operation
fnmadd.s f22, f27, f29, f6, rne # perform operation
fnmadd.s f22, f27, f29, f6, rtz # perform operation
fnmadd.s f22, f27, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f27, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x6, 0xf2468804cc12d435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xf7f3756ae6cf491d # load x3 with value 0xf7f3756ae6cf491d
sw x3, 0(x2) # store 0xf7f3756ae6cf491d in memory
flw f11, 0(x2) # load 0xf7f3756ae6cf491d from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fnmadd.s f6, f10, f11, f24, dyn # perform operation
fnmadd.s f6, f10, f11, f24, rdn # perform operation
fnmadd.s f6, f10, f11, f24, rmm # perform operation
fnmadd.s f6, f10, f11, f24, rne # perform operation
fnmadd.s f6, f10, f11, f24, rtz # perform operation
fnmadd.s f6, f10, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x13, 0x74c1f40ec840be8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xc16f27a76fa865fc # load x3 with value 0xc16f27a76fa865fc
sw x3, 0(x2) # store 0xc16f27a76fa865fc in memory
flw f16, 0(x2) # load 0xc16f27a76fa865fc from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fnmadd.s f13, f17, f16, f31, dyn # perform operation
fnmadd.s f13, f17, f16, f31, rdn # perform operation
fnmadd.s f13, f17, f16, f31, rmm # perform operation
fnmadd.s f13, f17, f16, f31, rne # perform operation
fnmadd.s f13, f17, f16, f31, rtz # perform operation
fnmadd.s f13, f17, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x12, 0xdd5d97c8b936b726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xa04ed1f325e9a1d6 # load x3 with value 0xa04ed1f325e9a1d6
sw x3, 0(x2) # store 0xa04ed1f325e9a1d6 in memory
flw f1, 0(x2) # load 0xa04ed1f325e9a1d6 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
fnmadd.s f12, f13, f1, f4, dyn # perform operation
fnmadd.s f12, f13, f1, f4, rdn # perform operation
fnmadd.s f12, f13, f1, f4, rmm # perform operation
fnmadd.s f12, f13, f1, f4, rne # perform operation
fnmadd.s f12, f13, f1, f4, rtz # perform operation
fnmadd.s f12, f13, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x6, 0x4484aedb87a4b1e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x1d580406747fc5c5 # load x3 with value 0x1d580406747fc5c5
sw x3, 0(x2) # store 0x1d580406747fc5c5 in memory
flw f5, 0(x2) # load 0x1d580406747fc5c5 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f6, f31, f5, f13, dyn # perform operation
fnmadd.s f6, f31, f5, f13, rdn # perform operation
fnmadd.s f6, f31, f5, f13, rmm # perform operation
fnmadd.s f6, f31, f5, f13, rne # perform operation
fnmadd.s f6, f31, f5, f13, rtz # perform operation
fnmadd.s f6, f31, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f31, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f31, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f31, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f31, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f31, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x11, 0x175f3b01559ebe80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x52dc24c987d9cef3 # load x3 with value 0x52dc24c987d9cef3
sw x3, 0(x2) # store 0x52dc24c987d9cef3 in memory
flw f15, 0(x2) # load 0x52dc24c987d9cef3 from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fnmadd.s f11, f30, f15, f22, dyn # perform operation
fnmadd.s f11, f30, f15, f22, rdn # perform operation
fnmadd.s f11, f30, f15, f22, rmm # perform operation
fnmadd.s f11, f30, f15, f22, rne # perform operation
fnmadd.s f11, f30, f15, f22, rtz # perform operation
fnmadd.s f11, f30, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x30, 0x105c25f578fd1049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x17f4000c6937ef16 # load x3 with value 0x17f4000c6937ef16
sw x3, 0(x2) # store 0x17f4000c6937ef16 in memory
flw f31, 0(x2) # load 0x17f4000c6937ef16 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fnmadd.s f30, f22, f31, f17, dyn # perform operation
fnmadd.s f30, f22, f31, f17, rdn # perform operation
fnmadd.s f30, f22, f31, f17, rmm # perform operation
fnmadd.s f30, f22, f31, f17, rne # perform operation
fnmadd.s f30, f22, f31, f17, rtz # perform operation
fnmadd.s f30, f22, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f22, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f22, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f22, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f22, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f22, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x15, 0x1ce8f377b665cf2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x578fdb2f0465a0e9 # load x3 with value 0x578fdb2f0465a0e9
sw x3, 0(x2) # store 0x578fdb2f0465a0e9 in memory
flw f12, 0(x2) # load 0x578fdb2f0465a0e9 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmadd.s f15, f1, f12, f28, dyn # perform operation
fnmadd.s f15, f1, f12, f28, rdn # perform operation
fnmadd.s f15, f1, f12, f28, rmm # perform operation
fnmadd.s f15, f1, f12, f28, rne # perform operation
fnmadd.s f15, f1, f12, f28, rtz # perform operation
fnmadd.s f15, f1, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x19, 0x87cf3335e70300d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xa87922cdf6a70cda # load x3 with value 0xa87922cdf6a70cda
sw x3, 0(x2) # store 0xa87922cdf6a70cda in memory
flw f4, 0(x2) # load 0xa87922cdf6a70cda from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmadd.s f19, f30, f4, f29, dyn # perform operation
fnmadd.s f19, f30, f4, f29, rdn # perform operation
fnmadd.s f19, f30, f4, f29, rmm # perform operation
fnmadd.s f19, f30, f4, f29, rne # perform operation
fnmadd.s f19, f30, f4, f29, rtz # perform operation
fnmadd.s f19, f30, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x29, 0xc4b149c3a2b0ed2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xbc7e05d1f94c7be5 # load x3 with value 0xbc7e05d1f94c7be5
sw x3, 0(x2) # store 0xbc7e05d1f94c7be5 in memory
flw f11, 0(x2) # load 0xbc7e05d1f94c7be5 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fnmadd.s f29, f10, f11, f18, dyn # perform operation
fnmadd.s f29, f10, f11, f18, rdn # perform operation
fnmadd.s f29, f10, f11, f18, rmm # perform operation
fnmadd.s f29, f10, f11, f18, rne # perform operation
fnmadd.s f29, f10, f11, f18, rtz # perform operation
fnmadd.s f29, f10, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x9, 0xf861981554f846ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xf050b53cbc2066d6 # load x3 with value 0xf050b53cbc2066d6
sw x3, 0(x2) # store 0xf050b53cbc2066d6 in memory
flw f17, 0(x2) # load 0xf050b53cbc2066d6 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f9, f5, f17, f2, dyn # perform operation
fnmadd.s f9, f5, f17, f2, rdn # perform operation
fnmadd.s f9, f5, f17, f2, rmm # perform operation
fnmadd.s f9, f5, f17, f2, rne # perform operation
fnmadd.s f9, f5, f17, f2, rtz # perform operation
fnmadd.s f9, f5, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x4, 0x4ba7c271c270dd24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x4af40ec437899a98 # load x3 with value 0x4af40ec437899a98
sw x3, 0(x2) # store 0x4af40ec437899a98 in memory
flw f22, 0(x2) # load 0x4af40ec437899a98 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmadd.s f4, f24, f22, f9, dyn # perform operation
fnmadd.s f4, f24, f22, f9, rdn # perform operation
fnmadd.s f4, f24, f22, f9, rmm # perform operation
fnmadd.s f4, f24, f22, f9, rne # perform operation
fnmadd.s f4, f24, f22, f9, rtz # perform operation
fnmadd.s f4, f24, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f24, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x2, 0x687e38bc1073002b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xf4b6a6130398620c # load x3 with value 0xf4b6a6130398620c
sw x3, 0(x2) # store 0xf4b6a6130398620c in memory
flw f7, 0(x2) # load 0xf4b6a6130398620c from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.s f2, f9, f7, f4, dyn # perform operation
fnmadd.s f2, f9, f7, f4, rdn # perform operation
fnmadd.s f2, f9, f7, f4, rmm # perform operation
fnmadd.s f2, f9, f7, f4, rne # perform operation
fnmadd.s f2, f9, f7, f4, rtz # perform operation
fnmadd.s f2, f9, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x6, 0x7129406e54a5e2ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xd7965ccbc5099999 # load x3 with value 0xd7965ccbc5099999
sw x3, 0(x2) # store 0xd7965ccbc5099999 in memory
flw f8, 0(x2) # load 0xd7965ccbc5099999 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f6, f25, f8, f21, dyn # perform operation
fnmadd.s f6, f25, f8, f21, rdn # perform operation
fnmadd.s f6, f25, f8, f21, rmm # perform operation
fnmadd.s f6, f25, f8, f21, rne # perform operation
fnmadd.s f6, f25, f8, f21, rtz # perform operation
fnmadd.s f6, f25, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x25, 0x0c8b2fdaae53b121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0xdc8a08deb45401ec # load x3 with value 0xdc8a08deb45401ec
sw x3, 0(x2) # store 0xdc8a08deb45401ec in memory
flw f28, 0(x2) # load 0xdc8a08deb45401ec from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f25, f30, f28, f27, dyn # perform operation
fnmadd.s f25, f30, f28, f27, rdn # perform operation
fnmadd.s f25, f30, f28, f27, rmm # perform operation
fnmadd.s f25, f30, f28, f27, rne # perform operation
fnmadd.s f25, f30, f28, f27, rtz # perform operation
fnmadd.s f25, f30, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x15, 0x55c7a4b4aa66d18f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xa1c3e1df0ead3538 # load x3 with value 0xa1c3e1df0ead3538
sw x3, 0(x2) # store 0xa1c3e1df0ead3538 in memory
flw f5, 0(x2) # load 0xa1c3e1df0ead3538 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmadd.s f15, f9, f5, f7, dyn # perform operation
fnmadd.s f15, f9, f5, f7, rdn # perform operation
fnmadd.s f15, f9, f5, f7, rmm # perform operation
fnmadd.s f15, f9, f5, f7, rne # perform operation
fnmadd.s f15, f9, f5, f7, rtz # perform operation
fnmadd.s f15, f9, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x27, 0x0db2bd58c57e8a88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x43aed5948e347885 # load x3 with value 0x43aed5948e347885
sw x3, 0(x2) # store 0x43aed5948e347885 in memory
flw f6, 0(x2) # load 0x43aed5948e347885 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmadd.s f27, f31, f6, f26, dyn # perform operation
fnmadd.s f27, f31, f6, f26, rdn # perform operation
fnmadd.s f27, f31, f6, f26, rmm # perform operation
fnmadd.s f27, f31, f6, f26, rne # perform operation
fnmadd.s f27, f31, f6, f26, rtz # perform operation
fnmadd.s f27, f31, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f31, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x14, 0xb6748b06770f6cd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0xf921f8122a38a9eb # load x3 with value 0xf921f8122a38a9eb
sw x3, 0(x2) # store 0xf921f8122a38a9eb in memory
flw f12, 0(x2) # load 0xf921f8122a38a9eb from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f14, f29, f12, f9, dyn # perform operation
fnmadd.s f14, f29, f12, f9, rdn # perform operation
fnmadd.s f14, f29, f12, f9, rmm # perform operation
fnmadd.s f14, f29, f12, f9, rne # perform operation
fnmadd.s f14, f29, f12, f9, rtz # perform operation
fnmadd.s f14, f29, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x21, 0x75fcde27f0c6f7fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xdd32f51d10245257 # load x3 with value 0xdd32f51d10245257
sw x3, 0(x2) # store 0xdd32f51d10245257 in memory
flw f18, 0(x2) # load 0xdd32f51d10245257 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f21, f9, f18, f30, dyn # perform operation
fnmadd.s f21, f9, f18, f30, rdn # perform operation
fnmadd.s f21, f9, f18, f30, rmm # perform operation
fnmadd.s f21, f9, f18, f30, rne # perform operation
fnmadd.s f21, f9, f18, f30, rtz # perform operation
fnmadd.s f21, f9, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f9, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f9, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f9, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f9, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f9, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x25, 0x817e42490d093db6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xb6935ad43aa6cb6 # load x3 with value 0xb6935ad43aa6cb6
sw x3, 0(x2) # store 0xb6935ad43aa6cb6 in memory
flw f11, 0(x2) # load 0xb6935ad43aa6cb6 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
fnmadd.s f25, f26, f11, f17, dyn # perform operation
fnmadd.s f25, f26, f11, f17, rdn # perform operation
fnmadd.s f25, f26, f11, f17, rmm # perform operation
fnmadd.s f25, f26, f11, f17, rne # perform operation
fnmadd.s f25, f26, f11, f17, rtz # perform operation
fnmadd.s f25, f26, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x13, 0xb1acbac742c003df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x61b802c13fa896ed # load x3 with value 0x61b802c13fa896ed
sw x3, 0(x2) # store 0x61b802c13fa896ed in memory
flw f3, 0(x2) # load 0x61b802c13fa896ed from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmadd.s f13, f21, f3, f16, dyn # perform operation
fnmadd.s f13, f21, f3, f16, rdn # perform operation
fnmadd.s f13, f21, f3, f16, rmm # perform operation
fnmadd.s f13, f21, f3, f16, rne # perform operation
fnmadd.s f13, f21, f3, f16, rtz # perform operation
fnmadd.s f13, f21, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f21, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x29, 0xbe68d6f1978bc496 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xd6735d82e97ba279 # load x3 with value 0xd6735d82e97ba279
sw x3, 0(x2) # store 0xd6735d82e97ba279 in memory
flw f26, 0(x2) # load 0xd6735d82e97ba279 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f29, f16, f26, f6, dyn # perform operation
fnmadd.s f29, f16, f26, f6, rdn # perform operation
fnmadd.s f29, f16, f26, f6, rmm # perform operation
fnmadd.s f29, f16, f26, f6, rne # perform operation
fnmadd.s f29, f16, f26, f6, rtz # perform operation
fnmadd.s f29, f16, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x24, 0x8918f863b1b4a51c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xdba7f79f1dd83a53 # load x3 with value 0xdba7f79f1dd83a53
sw x3, 0(x2) # store 0xdba7f79f1dd83a53 in memory
flw f15, 0(x2) # load 0xdba7f79f1dd83a53 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fnmadd.s f24, f23, f15, f31, dyn # perform operation
fnmadd.s f24, f23, f15, f31, rdn # perform operation
fnmadd.s f24, f23, f15, f31, rmm # perform operation
fnmadd.s f24, f23, f15, f31, rne # perform operation
fnmadd.s f24, f23, f15, f31, rtz # perform operation
fnmadd.s f24, f23, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f23, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f23, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x30, 0x0be0abd9d9272e2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xd7b365fbd564c879 # load x3 with value 0xd7b365fbd564c879
sw x3, 0(x2) # store 0xd7b365fbd564c879 in memory
flw f25, 0(x2) # load 0xd7b365fbd564c879 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fnmadd.s f30, f13, f25, f20, dyn # perform operation
fnmadd.s f30, f13, f25, f20, rdn # perform operation
fnmadd.s f30, f13, f25, f20, rmm # perform operation
fnmadd.s f30, f13, f25, f20, rne # perform operation
fnmadd.s f30, f13, f25, f20, rtz # perform operation
fnmadd.s f30, f13, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f13, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f13, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f13, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f13, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f13, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x12, 0x45ef10f169875bfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xbaeaa2a6740ccba5 # load x3 with value 0xbaeaa2a6740ccba5
sw x3, 0(x2) # store 0xbaeaa2a6740ccba5 in memory
flw f28, 0(x2) # load 0xbaeaa2a6740ccba5 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fnmadd.s f12, f22, f28, f24, dyn # perform operation
fnmadd.s f12, f22, f28, f24, rdn # perform operation
fnmadd.s f12, f22, f28, f24, rmm # perform operation
fnmadd.s f12, f22, f28, f24, rne # perform operation
fnmadd.s f12, f22, f28, f24, rtz # perform operation
fnmadd.s f12, f22, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x21, 0x3f786c46be78668d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x9d51328071da466d # load x3 with value 0x9d51328071da466d
sw x3, 0(x2) # store 0x9d51328071da466d in memory
flw f19, 0(x2) # load 0x9d51328071da466d from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f21, f20, f19, f16, dyn # perform operation
fnmadd.s f21, f20, f19, f16, rdn # perform operation
fnmadd.s f21, f20, f19, f16, rmm # perform operation
fnmadd.s f21, f20, f19, f16, rne # perform operation
fnmadd.s f21, f20, f19, f16, rtz # perform operation
fnmadd.s f21, f20, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x15, 0x0eff90e8c045ddc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xda0d01ff30741a3d # load x3 with value 0xda0d01ff30741a3d
sw x3, 0(x2) # store 0xda0d01ff30741a3d in memory
flw f6, 0(x2) # load 0xda0d01ff30741a3d from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmadd.s f15, f3, f6, f13, dyn # perform operation
fnmadd.s f15, f3, f6, f13, rdn # perform operation
fnmadd.s f15, f3, f6, f13, rmm # perform operation
fnmadd.s f15, f3, f6, f13, rne # perform operation
fnmadd.s f15, f3, f6, f13, rtz # perform operation
fnmadd.s f15, f3, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x7, 0x64516f431b3a7eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x22f0633f7bf4dc37 # load x3 with value 0x22f0633f7bf4dc37
sw x3, 0(x2) # store 0x22f0633f7bf4dc37 in memory
flw f9, 0(x2) # load 0x22f0633f7bf4dc37 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmadd.s f7, f22, f9, f21, dyn # perform operation
fnmadd.s f7, f22, f9, f21, rdn # perform operation
fnmadd.s f7, f22, f9, f21, rmm # perform operation
fnmadd.s f7, f22, f9, f21, rne # perform operation
fnmadd.s f7, f22, f9, f21, rtz # perform operation
fnmadd.s f7, f22, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x13, 0xb5bbbd65040c751c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x80ce79b401bbb0be # load x3 with value 0x80ce79b401bbb0be
sw x3, 0(x2) # store 0x80ce79b401bbb0be in memory
flw f22, 0(x2) # load 0x80ce79b401bbb0be from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmadd.s f13, f12, f22, f2, dyn # perform operation
fnmadd.s f13, f12, f22, f2, rdn # perform operation
fnmadd.s f13, f12, f22, f2, rmm # perform operation
fnmadd.s f13, f12, f22, f2, rne # perform operation
fnmadd.s f13, f12, f22, f2, rtz # perform operation
fnmadd.s f13, f12, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x6, 0x84a4823d8d15103c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x51648596c3cf3236 # load x3 with value 0x51648596c3cf3236
sw x3, 0(x2) # store 0x51648596c3cf3236 in memory
flw f31, 0(x2) # load 0x51648596c3cf3236 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmadd.s f6, f20, f31, f3, dyn # perform operation
fnmadd.s f6, f20, f31, f3, rdn # perform operation
fnmadd.s f6, f20, f31, f3, rmm # perform operation
fnmadd.s f6, f20, f31, f3, rne # perform operation
fnmadd.s f6, f20, f31, f3, rtz # perform operation
fnmadd.s f6, f20, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f20, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x27, 0xbf5d37488c022ae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x7147aa44cbf731b3 # load x3 with value 0x7147aa44cbf731b3
sw x3, 0(x2) # store 0x7147aa44cbf731b3 in memory
flw f29, 0(x2) # load 0x7147aa44cbf731b3 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmadd.s f27, f24, f29, f5, dyn # perform operation
fnmadd.s f27, f24, f29, f5, rdn # perform operation
fnmadd.s f27, f24, f29, f5, rmm # perform operation
fnmadd.s f27, f24, f29, f5, rne # perform operation
fnmadd.s f27, f24, f29, f5, rtz # perform operation
fnmadd.s f27, f24, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x9, 0xa0ab094d2d8bac98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x674a231472384afd # load x3 with value 0x674a231472384afd
sw x3, 0(x2) # store 0x674a231472384afd in memory
flw f23, 0(x2) # load 0x674a231472384afd from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmadd.s f9, f10, f23, f14, dyn # perform operation
fnmadd.s f9, f10, f23, f14, rdn # perform operation
fnmadd.s f9, f10, f23, f14, rmm # perform operation
fnmadd.s f9, f10, f23, f14, rne # perform operation
fnmadd.s f9, f10, f23, f14, rtz # perform operation
fnmadd.s f9, f10, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f10, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x3, 0x0f2aa8de21d3d346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xd08b5244a0ca0072 # load x3 with value 0xd08b5244a0ca0072
sw x3, 0(x2) # store 0xd08b5244a0ca0072 in memory
flw f13, 0(x2) # load 0xd08b5244a0ca0072 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fnmadd.s f3, f14, f13, f4, dyn # perform operation
fnmadd.s f3, f14, f13, f4, rdn # perform operation
fnmadd.s f3, f14, f13, f4, rmm # perform operation
fnmadd.s f3, f14, f13, f4, rne # perform operation
fnmadd.s f3, f14, f13, f4, rtz # perform operation
fnmadd.s f3, f14, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f14, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f14, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x23, 0x613a4834b05f6400 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xf7b701e32d62fca5 # load x3 with value 0xf7b701e32d62fca5
sw x3, 0(x2) # store 0xf7b701e32d62fca5 in memory
flw f21, 0(x2) # load 0xf7b701e32d62fca5 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fnmadd.s f23, f25, f21, f12, dyn # perform operation
fnmadd.s f23, f25, f21, f12, rdn # perform operation
fnmadd.s f23, f25, f21, f12, rmm # perform operation
fnmadd.s f23, f25, f21, f12, rne # perform operation
fnmadd.s f23, f25, f21, f12, rtz # perform operation
fnmadd.s f23, f25, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x9, 0xe369a698b9b1a36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x308e73661eb4377 # load x3 with value 0x308e73661eb4377
sw x3, 0(x2) # store 0x308e73661eb4377 in memory
flw f5, 0(x2) # load 0x308e73661eb4377 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fnmadd.s f9, f27, f5, f10, dyn # perform operation
fnmadd.s f9, f27, f5, f10, rdn # perform operation
fnmadd.s f9, f27, f5, f10, rmm # perform operation
fnmadd.s f9, f27, f5, f10, rne # perform operation
fnmadd.s f9, f27, f5, f10, rtz # perform operation
fnmadd.s f9, f27, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x22, 0xb6e3630537b0cd02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x785ddada5ddc4436 # load x3 with value 0x785ddada5ddc4436
sw x3, 0(x2) # store 0x785ddada5ddc4436 in memory
flw f1, 0(x2) # load 0x785ddada5ddc4436 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f22, f10, f1, f17, dyn # perform operation
fnmadd.s f22, f10, f1, f17, rdn # perform operation
fnmadd.s f22, f10, f1, f17, rmm # perform operation
fnmadd.s f22, f10, f1, f17, rne # perform operation
fnmadd.s f22, f10, f1, f17, rtz # perform operation
fnmadd.s f22, f10, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x24, 0x4f445b0105087ba2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x9ab03f326fe33f6e # load x3 with value 0x9ab03f326fe33f6e
sw x3, 0(x2) # store 0x9ab03f326fe33f6e in memory
flw f7, 0(x2) # load 0x9ab03f326fe33f6e from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmadd.s f24, f6, f7, f31, dyn # perform operation
fnmadd.s f24, f6, f7, f31, rdn # perform operation
fnmadd.s f24, f6, f7, f31, rmm # perform operation
fnmadd.s f24, f6, f7, f31, rne # perform operation
fnmadd.s f24, f6, f7, f31, rtz # perform operation
fnmadd.s f24, f6, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x30, 0x917e3ad03ae11c7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0xe63aa22ce84dbbee # load x3 with value 0xe63aa22ce84dbbee
sw x3, 0(x2) # store 0xe63aa22ce84dbbee in memory
flw f17, 0(x2) # load 0xe63aa22ce84dbbee from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmadd.s f30, f18, f17, f12, dyn # perform operation
fnmadd.s f30, f18, f17, f12, rdn # perform operation
fnmadd.s f30, f18, f17, f12, rmm # perform operation
fnmadd.s f30, f18, f17, f12, rne # perform operation
fnmadd.s f30, f18, f17, f12, rtz # perform operation
fnmadd.s f30, f18, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x15, 0xb4343aaf96490761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x6789c702e7cd808e # load x3 with value 0x6789c702e7cd808e
sw x3, 0(x2) # store 0x6789c702e7cd808e in memory
flw f28, 0(x2) # load 0x6789c702e7cd808e from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.s f15, f11, f28, f6, dyn # perform operation
fnmadd.s f15, f11, f28, f6, rdn # perform operation
fnmadd.s f15, f11, f28, f6, rmm # perform operation
fnmadd.s f15, f11, f28, f6, rne # perform operation
fnmadd.s f15, f11, f28, f6, rtz # perform operation
fnmadd.s f15, f11, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x15, 0xfa69484bc3f42bf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x606b1aa8f65fa9ae # load x3 with value 0x606b1aa8f65fa9ae
sw x3, 0(x2) # store 0x606b1aa8f65fa9ae in memory
flw f7, 0(x2) # load 0x606b1aa8f65fa9ae from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmadd.s f15, f12, f7, f4, dyn # perform operation
fnmadd.s f15, f12, f7, f4, rdn # perform operation
fnmadd.s f15, f12, f7, f4, rmm # perform operation
fnmadd.s f15, f12, f7, f4, rne # perform operation
fnmadd.s f15, f12, f7, f4, rtz # perform operation
fnmadd.s f15, f12, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x15, 0xdd23f82543e3dcc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xd4efb9e4a2a588e4 # load x3 with value 0xd4efb9e4a2a588e4
sw x3, 0(x2) # store 0xd4efb9e4a2a588e4 in memory
flw f3, 0(x2) # load 0xd4efb9e4a2a588e4 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmadd.s f15, f24, f3, f21, dyn # perform operation
fnmadd.s f15, f24, f3, f21, rdn # perform operation
fnmadd.s f15, f24, f3, f21, rmm # perform operation
fnmadd.s f15, f24, f3, f21, rne # perform operation
fnmadd.s f15, f24, f3, f21, rtz # perform operation
fnmadd.s f15, f24, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f24, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f24, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x26, 0x6d0bee1fa215482a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x2940ddbd0f98054d # load x3 with value 0x2940ddbd0f98054d
sw x3, 0(x2) # store 0x2940ddbd0f98054d in memory
flw f23, 0(x2) # load 0x2940ddbd0f98054d from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f26, f6, f23, f8, dyn # perform operation
fnmadd.s f26, f6, f23, f8, rdn # perform operation
fnmadd.s f26, f6, f23, f8, rmm # perform operation
fnmadd.s f26, f6, f23, f8, rne # perform operation
fnmadd.s f26, f6, f23, f8, rtz # perform operation
fnmadd.s f26, f6, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x26, 0x4f558c696e5baca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xf4ccbe7e888edeb2 # load x3 with value 0xf4ccbe7e888edeb2
sw x3, 0(x2) # store 0xf4ccbe7e888edeb2 in memory
flw f7, 0(x2) # load 0xf4ccbe7e888edeb2 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmadd.s f26, f24, f7, f13, dyn # perform operation
fnmadd.s f26, f24, f7, f13, rdn # perform operation
fnmadd.s f26, f24, f7, f13, rmm # perform operation
fnmadd.s f26, f24, f7, f13, rne # perform operation
fnmadd.s f26, f24, f7, f13, rtz # perform operation
fnmadd.s f26, f24, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x19, 0x5a3bac00f0c8ae94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x4edb172af0b25518 # load x3 with value 0x4edb172af0b25518
sw x3, 0(x2) # store 0x4edb172af0b25518 in memory
flw f11, 0(x2) # load 0x4edb172af0b25518 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmadd.s f19, f16, f11, f25, dyn # perform operation
fnmadd.s f19, f16, f11, f25, rdn # perform operation
fnmadd.s f19, f16, f11, f25, rmm # perform operation
fnmadd.s f19, f16, f11, f25, rne # perform operation
fnmadd.s f19, f16, f11, f25, rtz # perform operation
fnmadd.s f19, f16, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x22, 0x2569d8ab9f250838 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xf9b856e79849d721 # load x3 with value 0xf9b856e79849d721
sw x3, 0(x2) # store 0xf9b856e79849d721 in memory
flw f27, 0(x2) # load 0xf9b856e79849d721 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmadd.s f22, f18, f27, f28, dyn # perform operation
fnmadd.s f22, f18, f27, f28, rdn # perform operation
fnmadd.s f22, f18, f27, f28, rmm # perform operation
fnmadd.s f22, f18, f27, f28, rne # perform operation
fnmadd.s f22, f18, f27, f28, rtz # perform operation
fnmadd.s f22, f18, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x15, 0x8445826e20f42d05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xf320d8e006655af9 # load x3 with value 0xf320d8e006655af9
sw x3, 0(x2) # store 0xf320d8e006655af9 in memory
flw f8, 0(x2) # load 0xf320d8e006655af9 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmadd.s f15, f10, f8, f14, dyn # perform operation
fnmadd.s f15, f10, f8, f14, rdn # perform operation
fnmadd.s f15, f10, f8, f14, rmm # perform operation
fnmadd.s f15, f10, f8, f14, rne # perform operation
fnmadd.s f15, f10, f8, f14, rtz # perform operation
fnmadd.s f15, f10, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x2, 0x720f6ffe2e7c355b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x1b94d64932e46093 # load x3 with value 0x1b94d64932e46093
sw x3, 0(x2) # store 0x1b94d64932e46093 in memory
flw f21, 0(x2) # load 0x1b94d64932e46093 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f2, f31, f21, f26, dyn # perform operation
fnmadd.s f2, f31, f21, f26, rdn # perform operation
fnmadd.s f2, f31, f21, f26, rmm # perform operation
fnmadd.s f2, f31, f21, f26, rne # perform operation
fnmadd.s f2, f31, f21, f26, rtz # perform operation
fnmadd.s f2, f31, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x30, 0x776ce240c0bf90a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xd807a6150dd582a2 # load x3 with value 0xd807a6150dd582a2
sw x3, 0(x2) # store 0xd807a6150dd582a2 in memory
flw f3, 0(x2) # load 0xd807a6150dd582a2 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmadd.s f30, f11, f3, f1, dyn # perform operation
fnmadd.s f30, f11, f3, f1, rdn # perform operation
fnmadd.s f30, f11, f3, f1, rmm # perform operation
fnmadd.s f30, f11, f3, f1, rne # perform operation
fnmadd.s f30, f11, f3, f1, rtz # perform operation
fnmadd.s f30, f11, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f11, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f11, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f11, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f11, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f11, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x1, 0x0213ffc3e2471cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x99efe99dde5b938c # load x3 with value 0x99efe99dde5b938c
sw x3, 0(x2) # store 0x99efe99dde5b938c in memory
flw f5, 0(x2) # load 0x99efe99dde5b938c from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmadd.s f1, f15, f5, f10, dyn # perform operation
fnmadd.s f1, f15, f5, f10, rdn # perform operation
fnmadd.s f1, f15, f5, f10, rmm # perform operation
fnmadd.s f1, f15, f5, f10, rne # perform operation
fnmadd.s f1, f15, f5, f10, rtz # perform operation
fnmadd.s f1, f15, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x30, 0x289869ecc8bda333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x4f27faf651c16238 # load x3 with value 0x4f27faf651c16238
sw x3, 0(x2) # store 0x4f27faf651c16238 in memory
flw f6, 0(x2) # load 0x4f27faf651c16238 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fnmadd.s f30, f24, f6, f13, dyn # perform operation
fnmadd.s f30, f24, f6, f13, rdn # perform operation
fnmadd.s f30, f24, f6, f13, rmm # perform operation
fnmadd.s f30, f24, f6, f13, rne # perform operation
fnmadd.s f30, f24, f6, f13, rtz # perform operation
fnmadd.s f30, f24, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f24, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f24, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x6, 0xe9acdcd146a533a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x879694bd50528519 # load x3 with value 0x879694bd50528519
sw x3, 0(x2) # store 0x879694bd50528519 in memory
flw f19, 0(x2) # load 0x879694bd50528519 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmadd.s f6, f22, f19, f23, dyn # perform operation
fnmadd.s f6, f22, f19, f23, rdn # perform operation
fnmadd.s f6, f22, f19, f23, rmm # perform operation
fnmadd.s f6, f22, f19, f23, rne # perform operation
fnmadd.s f6, f22, f19, f23, rtz # perform operation
fnmadd.s f6, f22, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x28, 0xcd3a8409e4fb76d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xc299131782ee53a8 # load x3 with value 0xc299131782ee53a8
sw x3, 0(x2) # store 0xc299131782ee53a8 in memory
flw f7, 0(x2) # load 0xc299131782ee53a8 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmadd.s f28, f14, f7, f3, dyn # perform operation
fnmadd.s f28, f14, f7, f3, rdn # perform operation
fnmadd.s f28, f14, f7, f3, rmm # perform operation
fnmadd.s f28, f14, f7, f3, rne # perform operation
fnmadd.s f28, f14, f7, f3, rtz # perform operation
fnmadd.s f28, f14, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x21, 0x82291fc36fbaf762 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xf9c31832d2820ab9 # load x3 with value 0xf9c31832d2820ab9
sw x3, 0(x2) # store 0xf9c31832d2820ab9 in memory
flw f2, 0(x2) # load 0xf9c31832d2820ab9 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fnmadd.s f21, f10, f2, f22, dyn # perform operation
fnmadd.s f21, f10, f2, f22, rdn # perform operation
fnmadd.s f21, f10, f2, f22, rmm # perform operation
fnmadd.s f21, f10, f2, f22, rne # perform operation
fnmadd.s f21, f10, f2, f22, rtz # perform operation
fnmadd.s f21, f10, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x27, 0x98ef8e05a01afb36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x842038c1ee70775f # load x3 with value 0x842038c1ee70775f
sw x3, 0(x2) # store 0x842038c1ee70775f in memory
flw f25, 0(x2) # load 0x842038c1ee70775f from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmadd.s f27, f7, f25, f6, dyn # perform operation
fnmadd.s f27, f7, f25, f6, rdn # perform operation
fnmadd.s f27, f7, f25, f6, rmm # perform operation
fnmadd.s f27, f7, f25, f6, rne # perform operation
fnmadd.s f27, f7, f25, f6, rtz # perform operation
fnmadd.s f27, f7, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f7, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f7, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f7, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f7, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f7, f25, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x9, 0x3fce0f07be177df2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x27c12d631070464 # load x3 with value 0x27c12d631070464
sw x3, 0(x2) # store 0x27c12d631070464 in memory
flw f29, 0(x2) # load 0x27c12d631070464 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.s f9, f30, f29, f18, dyn # perform operation
fnmadd.s f9, f30, f29, f18, rdn # perform operation
fnmadd.s f9, f30, f29, f18, rmm # perform operation
fnmadd.s f9, f30, f29, f18, rne # perform operation
fnmadd.s f9, f30, f29, f18, rtz # perform operation
fnmadd.s f9, f30, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f30, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x4, 0x8fd807315343fe63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x18956d6a7bdbce5f # load x3 with value 0x18956d6a7bdbce5f
sw x3, 0(x2) # store 0x18956d6a7bdbce5f in memory
flw f18, 0(x2) # load 0x18956d6a7bdbce5f from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f4, f5, f18, f30, dyn # perform operation
fnmadd.s f4, f5, f18, f30, rdn # perform operation
fnmadd.s f4, f5, f18, f30, rmm # perform operation
fnmadd.s f4, f5, f18, f30, rne # perform operation
fnmadd.s f4, f5, f18, f30, rtz # perform operation
fnmadd.s f4, f5, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f5, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x3, 0x893dd92c596a4c26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0xe92cc6e2f33d8f2f # load x3 with value 0xe92cc6e2f33d8f2f
sw x3, 0(x2) # store 0xe92cc6e2f33d8f2f in memory
flw f6, 0(x2) # load 0xe92cc6e2f33d8f2f from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fnmadd.s f3, f12, f6, f27, dyn # perform operation
fnmadd.s f3, f12, f6, f27, rdn # perform operation
fnmadd.s f3, f12, f6, f27, rmm # perform operation
fnmadd.s f3, f12, f6, f27, rne # perform operation
fnmadd.s f3, f12, f6, f27, rtz # perform operation
fnmadd.s f3, f12, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x2, 0x740f488fa809fdc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0xffaa4f6ffb7e2890 # load x3 with value 0xffaa4f6ffb7e2890
sw x3, 0(x2) # store 0xffaa4f6ffb7e2890 in memory
flw f29, 0(x2) # load 0xffaa4f6ffb7e2890 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmadd.s f2, f6, f29, f8, dyn # perform operation
fnmadd.s f2, f6, f29, f8, rdn # perform operation
fnmadd.s f2, f6, f29, f8, rmm # perform operation
fnmadd.s f2, f6, f29, f8, rne # perform operation
fnmadd.s f2, f6, f29, f8, rtz # perform operation
fnmadd.s f2, f6, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x28, 0xfe2dd83bb7dd488a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0xfcbdb1271bc5af13 # load x3 with value 0xfcbdb1271bc5af13
sw x3, 0(x2) # store 0xfcbdb1271bc5af13 in memory
flw f8, 0(x2) # load 0xfcbdb1271bc5af13 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f28, f6, f8, f27, dyn # perform operation
fnmadd.s f28, f6, f8, f27, rdn # perform operation
fnmadd.s f28, f6, f8, f27, rmm # perform operation
fnmadd.s f28, f6, f8, f27, rne # perform operation
fnmadd.s f28, f6, f8, f27, rtz # perform operation
fnmadd.s f28, f6, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f6, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x13, 0xee6e76a2d91c16c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x47f0e9dc980ce88a # load x3 with value 0x47f0e9dc980ce88a
sw x3, 0(x2) # store 0x47f0e9dc980ce88a in memory
flw f1, 0(x2) # load 0x47f0e9dc980ce88a from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmadd.s f13, f9, f1, f26, dyn # perform operation
fnmadd.s f13, f9, f1, f26, rdn # perform operation
fnmadd.s f13, f9, f1, f26, rmm # perform operation
fnmadd.s f13, f9, f1, f26, rne # perform operation
fnmadd.s f13, f9, f1, f26, rtz # perform operation
fnmadd.s f13, f9, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x14, 0x2877c48675af6ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x7313812e84be36b7 # load x3 with value 0x7313812e84be36b7
sw x3, 0(x2) # store 0x7313812e84be36b7 in memory
flw f1, 0(x2) # load 0x7313812e84be36b7 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmadd.s f14, f20, f1, f2, dyn # perform operation
fnmadd.s f14, f20, f1, f2, rdn # perform operation
fnmadd.s f14, f20, f1, f2, rmm # perform operation
fnmadd.s f14, f20, f1, f2, rne # perform operation
fnmadd.s f14, f20, f1, f2, rtz # perform operation
fnmadd.s f14, f20, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x12, 0x90104ef46928d09d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x9b75e526053d959e # load x3 with value 0x9b75e526053d959e
sw x3, 0(x2) # store 0x9b75e526053d959e in memory
flw f18, 0(x2) # load 0x9b75e526053d959e from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmadd.s f12, f17, f18, f31, dyn # perform operation
fnmadd.s f12, f17, f18, f31, rdn # perform operation
fnmadd.s f12, f17, f18, f31, rmm # perform operation
fnmadd.s f12, f17, f18, f31, rne # perform operation
fnmadd.s f12, f17, f18, f31, rtz # perform operation
fnmadd.s f12, f17, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x18, 0xb2403b83a046692b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x97403eca48571d9b # load x3 with value 0x97403eca48571d9b
sw x3, 0(x2) # store 0x97403eca48571d9b in memory
flw f19, 0(x2) # load 0x97403eca48571d9b from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmadd.s f18, f3, f19, f17, dyn # perform operation
fnmadd.s f18, f3, f19, f17, rdn # perform operation
fnmadd.s f18, f3, f19, f17, rmm # perform operation
fnmadd.s f18, f3, f19, f17, rne # perform operation
fnmadd.s f18, f3, f19, f17, rtz # perform operation
fnmadd.s f18, f3, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f3, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x19, 0x8c9be72e0d12cc30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x2dfd9d37929756df # load x3 with value 0x2dfd9d37929756df
sw x3, 0(x2) # store 0x2dfd9d37929756df in memory
flw f5, 0(x2) # load 0x2dfd9d37929756df from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmadd.s f19, f29, f5, f1, dyn # perform operation
fnmadd.s f19, f29, f5, f1, rdn # perform operation
fnmadd.s f19, f29, f5, f1, rmm # perform operation
fnmadd.s f19, f29, f5, f1, rne # perform operation
fnmadd.s f19, f29, f5, f1, rtz # perform operation
fnmadd.s f19, f29, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x24, 0x0488a78ac40a02f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x92e34275f7c9197c # load x3 with value 0x92e34275f7c9197c
sw x3, 0(x2) # store 0x92e34275f7c9197c in memory
flw f27, 0(x2) # load 0x92e34275f7c9197c from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.s f24, f12, f27, f13, dyn # perform operation
fnmadd.s f24, f12, f27, f13, rdn # perform operation
fnmadd.s f24, f12, f27, f13, rmm # perform operation
fnmadd.s f24, f12, f27, f13, rne # perform operation
fnmadd.s f24, f12, f27, f13, rtz # perform operation
fnmadd.s f24, f12, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f12, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x6, 0x764fd433070a5906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xecb082ba453158e4 # load x3 with value 0xecb082ba453158e4
sw x3, 0(x2) # store 0xecb082ba453158e4 in memory
flw f17, 0(x2) # load 0xecb082ba453158e4 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmadd.s f6, f10, f17, f18, dyn # perform operation
fnmadd.s f6, f10, f17, f18, rdn # perform operation
fnmadd.s f6, f10, f17, f18, rmm # perform operation
fnmadd.s f6, f10, f17, f18, rne # perform operation
fnmadd.s f6, f10, f17, f18, rtz # perform operation
fnmadd.s f6, f10, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x8, 0xdbef558f36989905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x6d02d098a1deb37f # load x3 with value 0x6d02d098a1deb37f
sw x3, 0(x2) # store 0x6d02d098a1deb37f in memory
flw f24, 0(x2) # load 0x6d02d098a1deb37f from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f8, f20, f24, f7, dyn # perform operation
fnmadd.s f8, f20, f24, f7, rdn # perform operation
fnmadd.s f8, f20, f24, f7, rmm # perform operation
fnmadd.s f8, f20, f24, f7, rne # perform operation
fnmadd.s f8, f20, f24, f7, rtz # perform operation
fnmadd.s f8, f20, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x26, 0x0805bd8c10c6c261 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0xca452ac0a70a27a7 # load x3 with value 0xca452ac0a70a27a7
sw x3, 0(x2) # store 0xca452ac0a70a27a7 in memory
flw f24, 0(x2) # load 0xca452ac0a70a27a7 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmadd.s f26, f12, f24, f23, dyn # perform operation
fnmadd.s f26, f12, f24, f23, rdn # perform operation
fnmadd.s f26, f12, f24, f23, rmm # perform operation
fnmadd.s f26, f12, f24, f23, rne # perform operation
fnmadd.s f26, f12, f24, f23, rtz # perform operation
fnmadd.s f26, f12, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x17, 0xd6c20099a7c16717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x128828828651e0e2 # load x3 with value 0x128828828651e0e2
sw x3, 0(x2) # store 0x128828828651e0e2 in memory
flw f29, 0(x2) # load 0x128828828651e0e2 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmadd.s f17, f23, f29, f3, dyn # perform operation
fnmadd.s f17, f23, f29, f3, rdn # perform operation
fnmadd.s f17, f23, f29, f3, rmm # perform operation
fnmadd.s f17, f23, f29, f3, rne # perform operation
fnmadd.s f17, f23, f29, f3, rtz # perform operation
fnmadd.s f17, f23, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x20, 0x60adef1e08c10512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xc83d68cc8b670bfc # load x3 with value 0xc83d68cc8b670bfc
sw x3, 0(x2) # store 0xc83d68cc8b670bfc in memory
flw f28, 0(x2) # load 0xc83d68cc8b670bfc from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fnmadd.s f20, f16, f28, f12, dyn # perform operation
fnmadd.s f20, f16, f28, f12, rdn # perform operation
fnmadd.s f20, f16, f28, f12, rmm # perform operation
fnmadd.s f20, f16, f28, f12, rne # perform operation
fnmadd.s f20, f16, f28, f12, rtz # perform operation
fnmadd.s f20, f16, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f28, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x12, 0x0478af7cba708577 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x274fb4821e3e4fba # load x3 with value 0x274fb4821e3e4fba
sw x3, 0(x2) # store 0x274fb4821e3e4fba in memory
flw f6, 0(x2) # load 0x274fb4821e3e4fba from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f12, f27, f6, f25, dyn # perform operation
fnmadd.s f12, f27, f6, f25, rdn # perform operation
fnmadd.s f12, f27, f6, f25, rmm # perform operation
fnmadd.s f12, f27, f6, f25, rne # perform operation
fnmadd.s f12, f27, f6, f25, rtz # perform operation
fnmadd.s f12, f27, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x26, 0x9f9e5b61a04b7d1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x3445163277d0049e # load x3 with value 0x3445163277d0049e
sw x3, 0(x2) # store 0x3445163277d0049e in memory
flw f1, 0(x2) # load 0x3445163277d0049e from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f26, f28, f1, f11, dyn # perform operation
fnmadd.s f26, f28, f1, f11, rdn # perform operation
fnmadd.s f26, f28, f1, f11, rmm # perform operation
fnmadd.s f26, f28, f1, f11, rne # perform operation
fnmadd.s f26, f28, f1, f11, rtz # perform operation
fnmadd.s f26, f28, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x12, 0xcbc2c55ebc17aa62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xc463e9f38a7833d0 # load x3 with value 0xc463e9f38a7833d0
sw x3, 0(x2) # store 0xc463e9f38a7833d0 in memory
flw f4, 0(x2) # load 0xc463e9f38a7833d0 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fnmadd.s f12, f9, f4, f5, dyn # perform operation
fnmadd.s f12, f9, f4, f5, rdn # perform operation
fnmadd.s f12, f9, f4, f5, rmm # perform operation
fnmadd.s f12, f9, f4, f5, rne # perform operation
fnmadd.s f12, f9, f4, f5, rtz # perform operation
fnmadd.s f12, f9, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f9, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f9, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x1, 0x4c4d7c8715119b80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x610c457a502ee447 # load x3 with value 0x610c457a502ee447
sw x3, 0(x2) # store 0x610c457a502ee447 in memory
flw f3, 0(x2) # load 0x610c457a502ee447 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmadd.s f1, f16, f3, f19, dyn # perform operation
fnmadd.s f1, f16, f3, f19, rdn # perform operation
fnmadd.s f1, f16, f3, f19, rmm # perform operation
fnmadd.s f1, f16, f3, f19, rne # perform operation
fnmadd.s f1, f16, f3, f19, rtz # perform operation
fnmadd.s f1, f16, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x8, 0x52f8c6bde9c766cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xb885654aae86539a # load x3 with value 0xb885654aae86539a
sw x3, 0(x2) # store 0xb885654aae86539a in memory
flw f24, 0(x2) # load 0xb885654aae86539a from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fnmadd.s f8, f15, f24, f22, dyn # perform operation
fnmadd.s f8, f15, f24, f22, rdn # perform operation
fnmadd.s f8, f15, f24, f22, rmm # perform operation
fnmadd.s f8, f15, f24, f22, rne # perform operation
fnmadd.s f8, f15, f24, f22, rtz # perform operation
fnmadd.s f8, f15, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x7, 0x62a0289a319693d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xe20bc7baef7905b1 # load x3 with value 0xe20bc7baef7905b1
sw x3, 0(x2) # store 0xe20bc7baef7905b1 in memory
flw f9, 0(x2) # load 0xe20bc7baef7905b1 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fnmadd.s f7, f24, f9, f25, dyn # perform operation
fnmadd.s f7, f24, f9, f25, rdn # perform operation
fnmadd.s f7, f24, f9, f25, rmm # perform operation
fnmadd.s f7, f24, f9, f25, rne # perform operation
fnmadd.s f7, f24, f9, f25, rtz # perform operation
fnmadd.s f7, f24, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x27, 0xdf213a86e578bd99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0xd5800438dd47aea8 # load x3 with value 0xd5800438dd47aea8
sw x3, 0(x2) # store 0xd5800438dd47aea8 in memory
flw f23, 0(x2) # load 0xd5800438dd47aea8 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f27, f12, f23, f30, dyn # perform operation
fnmadd.s f27, f12, f23, f30, rdn # perform operation
fnmadd.s f27, f12, f23, f30, rmm # perform operation
fnmadd.s f27, f12, f23, f30, rne # perform operation
fnmadd.s f27, f12, f23, f30, rtz # perform operation
fnmadd.s f27, f12, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x14, 0x6ae61f6de78efd33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x1e170aa08f146ef2 # load x3 with value 0x1e170aa08f146ef2
sw x3, 0(x2) # store 0x1e170aa08f146ef2 in memory
flw f19, 0(x2) # load 0x1e170aa08f146ef2 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmadd.s f14, f13, f19, f12, dyn # perform operation
fnmadd.s f14, f13, f19, f12, rdn # perform operation
fnmadd.s f14, f13, f19, f12, rmm # perform operation
fnmadd.s f14, f13, f19, f12, rne # perform operation
fnmadd.s f14, f13, f19, f12, rtz # perform operation
fnmadd.s f14, f13, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x6, 0x781a4fc725d245ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xfda0603708cf47 # load x3 with value 0xfda0603708cf47
sw x3, 0(x2) # store 0xfda0603708cf47 in memory
flw f4, 0(x2) # load 0xfda0603708cf47 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmadd.s f6, f17, f4, f16, dyn # perform operation
fnmadd.s f6, f17, f4, f16, rdn # perform operation
fnmadd.s f6, f17, f4, f16, rmm # perform operation
fnmadd.s f6, f17, f4, f16, rne # perform operation
fnmadd.s f6, f17, f4, f16, rtz # perform operation
fnmadd.s f6, f17, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x28, 0x0a78a8ec67d84e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x22df4227aa4cbf50 # load x3 with value 0x22df4227aa4cbf50
sw x3, 0(x2) # store 0x22df4227aa4cbf50 in memory
flw f31, 0(x2) # load 0x22df4227aa4cbf50 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
fnmadd.s f28, f29, f31, f4, dyn # perform operation
fnmadd.s f28, f29, f31, f4, rdn # perform operation
fnmadd.s f28, f29, f31, f4, rmm # perform operation
fnmadd.s f28, f29, f31, f4, rne # perform operation
fnmadd.s f28, f29, f31, f4, rtz # perform operation
fnmadd.s f28, f29, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x24, 0xead9fddf1c9f9e85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x5d87c9720fe6e4c0 # load x3 with value 0x5d87c9720fe6e4c0
sw x3, 0(x2) # store 0x5d87c9720fe6e4c0 in memory
flw f27, 0(x2) # load 0x5d87c9720fe6e4c0 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.s f24, f7, f27, f6, dyn # perform operation
fnmadd.s f24, f7, f27, f6, rdn # perform operation
fnmadd.s f24, f7, f27, f6, rmm # perform operation
fnmadd.s f24, f7, f27, f6, rne # perform operation
fnmadd.s f24, f7, f27, f6, rtz # perform operation
fnmadd.s f24, f7, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x24, 0x11e18c65e4c85fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x856608ea1b0af36 # load x3 with value 0x856608ea1b0af36
sw x3, 0(x2) # store 0x856608ea1b0af36 in memory
flw f17, 0(x2) # load 0x856608ea1b0af36 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmadd.s f24, f26, f17, f22, dyn # perform operation
fnmadd.s f24, f26, f17, f22, rdn # perform operation
fnmadd.s f24, f26, f17, f22, rmm # perform operation
fnmadd.s f24, f26, f17, f22, rne # perform operation
fnmadd.s f24, f26, f17, f22, rtz # perform operation
fnmadd.s f24, f26, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x26, 0x24e86dea6414aa47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x5d337b3977c79a5b # load x3 with value 0x5d337b3977c79a5b
sw x3, 0(x2) # store 0x5d337b3977c79a5b in memory
flw f10, 0(x2) # load 0x5d337b3977c79a5b from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmadd.s f26, f16, f10, f28, dyn # perform operation
fnmadd.s f26, f16, f10, f28, rdn # perform operation
fnmadd.s f26, f16, f10, f28, rmm # perform operation
fnmadd.s f26, f16, f10, f28, rne # perform operation
fnmadd.s f26, f16, f10, f28, rtz # perform operation
fnmadd.s f26, f16, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x13, 0xb6bb3d642d58e70a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x61c1f243ae72a6f8 # load x3 with value 0x61c1f243ae72a6f8
sw x3, 0(x2) # store 0x61c1f243ae72a6f8 in memory
flw f20, 0(x2) # load 0x61c1f243ae72a6f8 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmadd.s f13, f16, f20, f8, dyn # perform operation
fnmadd.s f13, f16, f20, f8, rdn # perform operation
fnmadd.s f13, f16, f20, f8, rmm # perform operation
fnmadd.s f13, f16, f20, f8, rne # perform operation
fnmadd.s f13, f16, f20, f8, rtz # perform operation
fnmadd.s f13, f16, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x13, 0x2612e846fe25db4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x2d16f7b26397e7b3 # load x3 with value 0x2d16f7b26397e7b3
sw x3, 0(x2) # store 0x2d16f7b26397e7b3 in memory
flw f17, 0(x2) # load 0x2d16f7b26397e7b3 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f13, f4, f17, f25, dyn # perform operation
fnmadd.s f13, f4, f17, f25, rdn # perform operation
fnmadd.s f13, f4, f17, f25, rmm # perform operation
fnmadd.s f13, f4, f17, f25, rne # perform operation
fnmadd.s f13, f4, f17, f25, rtz # perform operation
fnmadd.s f13, f4, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f4, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f4, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f4, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f4, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f4, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x24, 0x485d659cd5e368d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xbbb02d9ae88bd5c1 # load x3 with value 0xbbb02d9ae88bd5c1
sw x3, 0(x2) # store 0xbbb02d9ae88bd5c1 in memory
flw f19, 0(x2) # load 0xbbb02d9ae88bd5c1 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fnmadd.s f24, f14, f19, f31, dyn # perform operation
fnmadd.s f24, f14, f19, f31, rdn # perform operation
fnmadd.s f24, f14, f19, f31, rmm # perform operation
fnmadd.s f24, f14, f19, f31, rne # perform operation
fnmadd.s f24, f14, f19, f31, rtz # perform operation
fnmadd.s f24, f14, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f14, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x25, 0x8f169d948fef8d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xfd1a5d49ac5a969d # load x3 with value 0xfd1a5d49ac5a969d
sw x3, 0(x2) # store 0xfd1a5d49ac5a969d in memory
flw f29, 0(x2) # load 0xfd1a5d49ac5a969d from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmadd.s f25, f9, f29, f31, dyn # perform operation
fnmadd.s f25, f9, f29, f31, rdn # perform operation
fnmadd.s f25, f9, f29, f31, rmm # perform operation
fnmadd.s f25, f9, f29, f31, rne # perform operation
fnmadd.s f25, f9, f29, f31, rtz # perform operation
fnmadd.s f25, f9, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x6, 0xf68821881cf26e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xd05dd60c8f9ab344 # load x3 with value 0xd05dd60c8f9ab344
sw x3, 0(x2) # store 0xd05dd60c8f9ab344 in memory
flw f8, 0(x2) # load 0xd05dd60c8f9ab344 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmadd.s f6, f14, f8, f21, dyn # perform operation
fnmadd.s f6, f14, f8, f21, rdn # perform operation
fnmadd.s f6, f14, f8, f21, rmm # perform operation
fnmadd.s f6, f14, f8, f21, rne # perform operation
fnmadd.s f6, f14, f8, f21, rtz # perform operation
fnmadd.s f6, f14, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f14, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x18, 0x1e8f942cec6dc74e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xe9cb6ade317ade84 # load x3 with value 0xe9cb6ade317ade84
sw x3, 0(x2) # store 0xe9cb6ade317ade84 in memory
flw f14, 0(x2) # load 0xe9cb6ade317ade84 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f18, f26, f14, f10, dyn # perform operation
fnmadd.s f18, f26, f14, f10, rdn # perform operation
fnmadd.s f18, f26, f14, f10, rmm # perform operation
fnmadd.s f18, f26, f14, f10, rne # perform operation
fnmadd.s f18, f26, f14, f10, rtz # perform operation
fnmadd.s f18, f26, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x13, 0x2144acadc6437b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x4aff135eed5485c8 # load x3 with value 0x4aff135eed5485c8
sw x3, 0(x2) # store 0x4aff135eed5485c8 in memory
flw f9, 0(x2) # load 0x4aff135eed5485c8 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fnmadd.s f13, f6, f9, f2, dyn # perform operation
fnmadd.s f13, f6, f9, f2, rdn # perform operation
fnmadd.s f13, f6, f9, f2, rmm # perform operation
fnmadd.s f13, f6, f9, f2, rne # perform operation
fnmadd.s f13, f6, f9, f2, rtz # perform operation
fnmadd.s f13, f6, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x24, 0x2f6a0330d240477a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xc071b23f82a2cf53 # load x3 with value 0xc071b23f82a2cf53
sw x3, 0(x2) # store 0xc071b23f82a2cf53 in memory
flw f20, 0(x2) # load 0xc071b23f82a2cf53 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmadd.s f24, f31, f20, f7, dyn # perform operation
fnmadd.s f24, f31, f20, f7, rdn # perform operation
fnmadd.s f24, f31, f20, f7, rmm # perform operation
fnmadd.s f24, f31, f20, f7, rne # perform operation
fnmadd.s f24, f31, f20, f7, rtz # perform operation
fnmadd.s f24, f31, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x10, 0x14ca0c90ce96f88a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x3a2bf58630eff1d5 # load x3 with value 0x3a2bf58630eff1d5
sw x3, 0(x2) # store 0x3a2bf58630eff1d5 in memory
flw f8, 0(x2) # load 0x3a2bf58630eff1d5 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmadd.s f10, f17, f8, f24, dyn # perform operation
fnmadd.s f10, f17, f8, f24, rdn # perform operation
fnmadd.s f10, f17, f8, f24, rmm # perform operation
fnmadd.s f10, f17, f8, f24, rne # perform operation
fnmadd.s f10, f17, f8, f24, rtz # perform operation
fnmadd.s f10, f17, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f17, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x11, 0xa42e384b94370947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x7d577aca491bc5b # load x3 with value 0x7d577aca491bc5b
sw x3, 0(x2) # store 0x7d577aca491bc5b in memory
flw f2, 0(x2) # load 0x7d577aca491bc5b from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmadd.s f11, f21, f2, f3, dyn # perform operation
fnmadd.s f11, f21, f2, f3, rdn # perform operation
fnmadd.s f11, f21, f2, f3, rmm # perform operation
fnmadd.s f11, f21, f2, f3, rne # perform operation
fnmadd.s f11, f21, f2, f3, rtz # perform operation
fnmadd.s f11, f21, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f21, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x15, 0xb9541b29610413e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0xce002ed890e8e28c # load x3 with value 0xce002ed890e8e28c
sw x3, 0(x2) # store 0xce002ed890e8e28c in memory
flw f14, 0(x2) # load 0xce002ed890e8e28c from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmadd.s f15, f6, f14, f7, dyn # perform operation
fnmadd.s f15, f6, f14, f7, rdn # perform operation
fnmadd.s f15, f6, f14, f7, rmm # perform operation
fnmadd.s f15, f6, f14, f7, rne # perform operation
fnmadd.s f15, f6, f14, f7, rtz # perform operation
fnmadd.s f15, f6, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x30, 0xb780ecfdabf8f737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xf338d82b4c427d60 # load x3 with value 0xf338d82b4c427d60
sw x3, 0(x2) # store 0xf338d82b4c427d60 in memory
flw f17, 0(x2) # load 0xf338d82b4c427d60 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f30, f26, f17, f16, dyn # perform operation
fnmadd.s f30, f26, f17, f16, rdn # perform operation
fnmadd.s f30, f26, f17, f16, rmm # perform operation
fnmadd.s f30, f26, f17, f16, rne # perform operation
fnmadd.s f30, f26, f17, f16, rtz # perform operation
fnmadd.s f30, f26, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x20, 0xb3b51a442057c3d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x80883100316ce8ea # load x3 with value 0x80883100316ce8ea
sw x3, 0(x2) # store 0x80883100316ce8ea in memory
flw f28, 0(x2) # load 0x80883100316ce8ea from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmadd.s f20, f16, f28, f7, dyn # perform operation
fnmadd.s f20, f16, f28, f7, rdn # perform operation
fnmadd.s f20, f16, f28, f7, rmm # perform operation
fnmadd.s f20, f16, f28, f7, rne # perform operation
fnmadd.s f20, f16, f28, f7, rtz # perform operation
fnmadd.s f20, f16, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x6, 0x7971c608b9926b3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xc3a74fbf360b1061 # load x3 with value 0xc3a74fbf360b1061
sw x3, 0(x2) # store 0xc3a74fbf360b1061 in memory
flw f25, 0(x2) # load 0xc3a74fbf360b1061 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f6, f22, f25, f13, dyn # perform operation
fnmadd.s f6, f22, f25, f13, rdn # perform operation
fnmadd.s f6, f22, f25, f13, rmm # perform operation
fnmadd.s f6, f22, f25, f13, rne # perform operation
fnmadd.s f6, f22, f25, f13, rtz # perform operation
fnmadd.s f6, f22, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x1, 0xb5e95413a950e822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x7ec8d8fec54c1b68 # load x3 with value 0x7ec8d8fec54c1b68
sw x3, 0(x2) # store 0x7ec8d8fec54c1b68 in memory
flw f10, 0(x2) # load 0x7ec8d8fec54c1b68 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmadd.s f1, f27, f10, f14, dyn # perform operation
fnmadd.s f1, f27, f10, f14, rdn # perform operation
fnmadd.s f1, f27, f10, f14, rmm # perform operation
fnmadd.s f1, f27, f10, f14, rne # perform operation
fnmadd.s f1, f27, f10, f14, rtz # perform operation
fnmadd.s f1, f27, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x7, 0x75bc7350f6b4a988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xcacfbbcd9955476e # load x3 with value 0xcacfbbcd9955476e
sw x3, 0(x2) # store 0xcacfbbcd9955476e in memory
flw f1, 0(x2) # load 0xcacfbbcd9955476e from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f7, f25, f1, f22, dyn # perform operation
fnmadd.s f7, f25, f1, f22, rdn # perform operation
fnmadd.s f7, f25, f1, f22, rmm # perform operation
fnmadd.s f7, f25, f1, f22, rne # perform operation
fnmadd.s f7, f25, f1, f22, rtz # perform operation
fnmadd.s f7, f25, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x2, 0x81220386f0022d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xa32d7254aa9a6c49 # load x3 with value 0xa32d7254aa9a6c49
sw x3, 0(x2) # store 0xa32d7254aa9a6c49 in memory
flw f6, 0(x2) # load 0xa32d7254aa9a6c49 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmadd.s f2, f20, f6, f22, dyn # perform operation
fnmadd.s f2, f20, f6, f22, rdn # perform operation
fnmadd.s f2, f20, f6, f22, rmm # perform operation
fnmadd.s f2, f20, f6, f22, rne # perform operation
fnmadd.s f2, f20, f6, f22, rtz # perform operation
fnmadd.s f2, f20, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x16, 0xcbe07f0c76059617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x7942a4e685f50683 # load x3 with value 0x7942a4e685f50683
sw x3, 0(x2) # store 0x7942a4e685f50683 in memory
flw f1, 0(x2) # load 0x7942a4e685f50683 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f16, f4, f1, f27, dyn # perform operation
fnmadd.s f16, f4, f1, f27, rdn # perform operation
fnmadd.s f16, f4, f1, f27, rmm # perform operation
fnmadd.s f16, f4, f1, f27, rne # perform operation
fnmadd.s f16, f4, f1, f27, rtz # perform operation
fnmadd.s f16, f4, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f4, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f4, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f4, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f4, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f4, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x20, 0xb848f2c0f5fd6e08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x5e2c7d828c0600f # load x3 with value 0x5e2c7d828c0600f
sw x3, 0(x2) # store 0x5e2c7d828c0600f in memory
flw f18, 0(x2) # load 0x5e2c7d828c0600f from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f20, f14, f18, f24, dyn # perform operation
fnmadd.s f20, f14, f18, f24, rdn # perform operation
fnmadd.s f20, f14, f18, f24, rmm # perform operation
fnmadd.s f20, f14, f18, f24, rne # perform operation
fnmadd.s f20, f14, f18, f24, rtz # perform operation
fnmadd.s f20, f14, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x28, 0xc9792ff486e76077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x6a376e06cbaba7d1 # load x3 with value 0x6a376e06cbaba7d1
sw x3, 0(x2) # store 0x6a376e06cbaba7d1 in memory
flw f24, 0(x2) # load 0x6a376e06cbaba7d1 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmadd.s f28, f21, f24, f1, dyn # perform operation
fnmadd.s f28, f21, f24, f1, rdn # perform operation
fnmadd.s f28, f21, f24, f1, rmm # perform operation
fnmadd.s f28, f21, f24, f1, rne # perform operation
fnmadd.s f28, f21, f24, f1, rtz # perform operation
fnmadd.s f28, f21, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f21, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f21, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x28, 0xdef45011bf2c16b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x13ca38406a6c67b4 # load x3 with value 0x13ca38406a6c67b4
sw x3, 0(x2) # store 0x13ca38406a6c67b4 in memory
flw f9, 0(x2) # load 0x13ca38406a6c67b4 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fnmadd.s f28, f22, f9, f27, dyn # perform operation
fnmadd.s f28, f22, f9, f27, rdn # perform operation
fnmadd.s f28, f22, f9, f27, rmm # perform operation
fnmadd.s f28, f22, f9, f27, rne # perform operation
fnmadd.s f28, f22, f9, f27, rtz # perform operation
fnmadd.s f28, f22, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x11, 0x59aed3225600138e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x3f483509067f6467 # load x3 with value 0x3f483509067f6467
sw x3, 0(x2) # store 0x3f483509067f6467 in memory
flw f30, 0(x2) # load 0x3f483509067f6467 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f11, f23, f30, f19, dyn # perform operation
fnmadd.s f11, f23, f30, f19, rdn # perform operation
fnmadd.s f11, f23, f30, f19, rmm # perform operation
fnmadd.s f11, f23, f30, f19, rne # perform operation
fnmadd.s f11, f23, f30, f19, rtz # perform operation
fnmadd.s f11, f23, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x21, 0x75e48faeb32ce31f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xf58245163e2bb7e9 # load x3 with value 0xf58245163e2bb7e9
sw x3, 0(x2) # store 0xf58245163e2bb7e9 in memory
flw f19, 0(x2) # load 0xf58245163e2bb7e9 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmadd.s f21, f3, f19, f26, dyn # perform operation
fnmadd.s f21, f3, f19, f26, rdn # perform operation
fnmadd.s f21, f3, f19, f26, rmm # perform operation
fnmadd.s f21, f3, f19, f26, rne # perform operation
fnmadd.s f21, f3, f19, f26, rtz # perform operation
fnmadd.s f21, f3, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f19, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x31, 0x4885d04c1b81a7b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xc137f31976c471a4 # load x3 with value 0xc137f31976c471a4
sw x3, 0(x2) # store 0xc137f31976c471a4 in memory
flw f9, 0(x2) # load 0xc137f31976c471a4 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.s f31, f1, f9, f28, dyn # perform operation
fnmadd.s f31, f1, f9, f28, rdn # perform operation
fnmadd.s f31, f1, f9, f28, rmm # perform operation
fnmadd.s f31, f1, f9, f28, rne # perform operation
fnmadd.s f31, f1, f9, f28, rtz # perform operation
fnmadd.s f31, f1, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x15, 0x078cc451f9e6dc24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x24b9751900d9df3a # load x3 with value 0x24b9751900d9df3a
sw x3, 0(x2) # store 0x24b9751900d9df3a in memory
flw f19, 0(x2) # load 0x24b9751900d9df3a from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmadd.s f15, f2, f19, f5, dyn # perform operation
fnmadd.s f15, f2, f19, f5, rdn # perform operation
fnmadd.s f15, f2, f19, f5, rmm # perform operation
fnmadd.s f15, f2, f19, f5, rne # perform operation
fnmadd.s f15, f2, f19, f5, rtz # perform operation
fnmadd.s f15, f2, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x29, 0xb00c99d1b3505c21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xf048dfe853a7352f # load x3 with value 0xf048dfe853a7352f
sw x3, 0(x2) # store 0xf048dfe853a7352f in memory
flw f21, 0(x2) # load 0xf048dfe853a7352f from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmadd.s f29, f13, f21, f6, dyn # perform operation
fnmadd.s f29, f13, f21, f6, rdn # perform operation
fnmadd.s f29, f13, f21, f6, rmm # perform operation
fnmadd.s f29, f13, f21, f6, rne # perform operation
fnmadd.s f29, f13, f21, f6, rtz # perform operation
fnmadd.s f29, f13, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x10, 0x1248f8b965c8915a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xca53785b886bde37 # load x3 with value 0xca53785b886bde37
sw x3, 0(x2) # store 0xca53785b886bde37 in memory
flw f2, 0(x2) # load 0xca53785b886bde37 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fnmadd.s f10, f25, f2, f20, dyn # perform operation
fnmadd.s f10, f25, f2, f20, rdn # perform operation
fnmadd.s f10, f25, f2, f20, rmm # perform operation
fnmadd.s f10, f25, f2, f20, rne # perform operation
fnmadd.s f10, f25, f2, f20, rtz # perform operation
fnmadd.s f10, f25, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x4, 0x844409d5a28447ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xd3455815b9aa6bb5 # load x3 with value 0xd3455815b9aa6bb5
sw x3, 0(x2) # store 0xd3455815b9aa6bb5 in memory
flw f14, 0(x2) # load 0xd3455815b9aa6bb5 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmadd.s f4, f19, f14, f15, dyn # perform operation
fnmadd.s f4, f19, f14, f15, rdn # perform operation
fnmadd.s f4, f19, f14, f15, rmm # perform operation
fnmadd.s f4, f19, f14, f15, rne # perform operation
fnmadd.s f4, f19, f14, f15, rtz # perform operation
fnmadd.s f4, f19, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f19, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f19, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x9, 0x305bc8f9341a1813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x792754f28a6ec4a9 # load x3 with value 0x792754f28a6ec4a9
sw x3, 0(x2) # store 0x792754f28a6ec4a9 in memory
flw f5, 0(x2) # load 0x792754f28a6ec4a9 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f9, f13, f5, f24, dyn # perform operation
fnmadd.s f9, f13, f5, f24, rdn # perform operation
fnmadd.s f9, f13, f5, f24, rmm # perform operation
fnmadd.s f9, f13, f5, f24, rne # perform operation
fnmadd.s f9, f13, f5, f24, rtz # perform operation
fnmadd.s f9, f13, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f13, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f13, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x2, 0x44c89347955d357b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xda8204a5eb38cbcf # load x3 with value 0xda8204a5eb38cbcf
sw x3, 0(x2) # store 0xda8204a5eb38cbcf in memory
flw f3, 0(x2) # load 0xda8204a5eb38cbcf from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmadd.s f2, f31, f3, f27, dyn # perform operation
fnmadd.s f2, f31, f3, f27, rdn # perform operation
fnmadd.s f2, f31, f3, f27, rmm # perform operation
fnmadd.s f2, f31, f3, f27, rne # perform operation
fnmadd.s f2, f31, f3, f27, rtz # perform operation
fnmadd.s f2, f31, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f31, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f31, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f31, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f31, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f31, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x6, 0x0674302b2f28d2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x4467355709800743 # load x3 with value 0x4467355709800743
sw x3, 0(x2) # store 0x4467355709800743 in memory
flw f24, 0(x2) # load 0x4467355709800743 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmadd.s f6, f1, f24, f14, dyn # perform operation
fnmadd.s f6, f1, f24, f14, rdn # perform operation
fnmadd.s f6, f1, f24, f14, rmm # perform operation
fnmadd.s f6, f1, f24, f14, rne # perform operation
fnmadd.s f6, f1, f24, f14, rtz # perform operation
fnmadd.s f6, f1, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f1, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x3, 0x56f6234ef6ae9482 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xe92b4def3c3f5483 # load x3 with value 0xe92b4def3c3f5483
sw x3, 0(x2) # store 0xe92b4def3c3f5483 in memory
flw f12, 0(x2) # load 0xe92b4def3c3f5483 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f3, f21, f12, f26, dyn # perform operation
fnmadd.s f3, f21, f12, f26, rdn # perform operation
fnmadd.s f3, f21, f12, f26, rmm # perform operation
fnmadd.s f3, f21, f12, f26, rne # perform operation
fnmadd.s f3, f21, f12, f26, rtz # perform operation
fnmadd.s f3, f21, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f21, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x26, 0x3d5282a326e9e967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xccf800b15858daf1 # load x3 with value 0xccf800b15858daf1
sw x3, 0(x2) # store 0xccf800b15858daf1 in memory
flw f19, 0(x2) # load 0xccf800b15858daf1 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fnmadd.s f26, f16, f19, f2, dyn # perform operation
fnmadd.s f26, f16, f19, f2, rdn # perform operation
fnmadd.s f26, f16, f19, f2, rmm # perform operation
fnmadd.s f26, f16, f19, f2, rne # perform operation
fnmadd.s f26, f16, f19, f2, rtz # perform operation
fnmadd.s f26, f16, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f16, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f16, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x25, 0xbba284faacaa583a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xdf0de83a7923f3f1 # load x3 with value 0xdf0de83a7923f3f1
sw x3, 0(x2) # store 0xdf0de83a7923f3f1 in memory
flw f13, 0(x2) # load 0xdf0de83a7923f3f1 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.s f25, f15, f13, f4, dyn # perform operation
fnmadd.s f25, f15, f13, f4, rdn # perform operation
fnmadd.s f25, f15, f13, f4, rmm # perform operation
fnmadd.s f25, f15, f13, f4, rne # perform operation
fnmadd.s f25, f15, f13, f4, rtz # perform operation
fnmadd.s f25, f15, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x11, 0x074b7675dce208d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x7b99bdcc083b3a5e # load x3 with value 0x7b99bdcc083b3a5e
sw x3, 0(x2) # store 0x7b99bdcc083b3a5e in memory
flw f19, 0(x2) # load 0x7b99bdcc083b3a5e from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmadd.s f11, f28, f19, f30, dyn # perform operation
fnmadd.s f11, f28, f19, f30, rdn # perform operation
fnmadd.s f11, f28, f19, f30, rmm # perform operation
fnmadd.s f11, f28, f19, f30, rne # perform operation
fnmadd.s f11, f28, f19, f30, rtz # perform operation
fnmadd.s f11, f28, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f19, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x23, 0xae871704c8ba8cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x4bb6b7db49ec0c07 # load x3 with value 0x4bb6b7db49ec0c07
sw x3, 0(x2) # store 0x4bb6b7db49ec0c07 in memory
flw f25, 0(x2) # load 0x4bb6b7db49ec0c07 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fnmadd.s f23, f14, f25, f8, dyn # perform operation
fnmadd.s f23, f14, f25, f8, rdn # perform operation
fnmadd.s f23, f14, f25, f8, rmm # perform operation
fnmadd.s f23, f14, f25, f8, rne # perform operation
fnmadd.s f23, f14, f25, f8, rtz # perform operation
fnmadd.s f23, f14, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x7, 0x1649d6542ac63cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x9d4d15ca4e2af448 # load x3 with value 0x9d4d15ca4e2af448
sw x3, 0(x2) # store 0x9d4d15ca4e2af448 in memory
flw f21, 0(x2) # load 0x9d4d15ca4e2af448 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f7, f26, f21, f18, dyn # perform operation
fnmadd.s f7, f26, f21, f18, rdn # perform operation
fnmadd.s f7, f26, f21, f18, rmm # perform operation
fnmadd.s f7, f26, f21, f18, rne # perform operation
fnmadd.s f7, f26, f21, f18, rtz # perform operation
fnmadd.s f7, f26, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f26, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f26, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f26, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f26, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f26, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x1, 0xc8508f5b53024f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x9a0cd56aed8d129 # load x3 with value 0x9a0cd56aed8d129
sw x3, 0(x2) # store 0x9a0cd56aed8d129 in memory
flw f13, 0(x2) # load 0x9a0cd56aed8d129 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f1, f17, f13, f7, dyn # perform operation
fnmadd.s f1, f17, f13, f7, rdn # perform operation
fnmadd.s f1, f17, f13, f7, rmm # perform operation
fnmadd.s f1, f17, f13, f7, rne # perform operation
fnmadd.s f1, f17, f13, f7, rtz # perform operation
fnmadd.s f1, f17, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f17, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f17, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x21, 0xb4ef5df104d43e89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0xca8cd9328dfcca79 # load x3 with value 0xca8cd9328dfcca79
sw x3, 0(x2) # store 0xca8cd9328dfcca79 in memory
flw f18, 0(x2) # load 0xca8cd9328dfcca79 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmadd.s f21, f17, f18, f27, dyn # perform operation
fnmadd.s f21, f17, f18, f27, rdn # perform operation
fnmadd.s f21, f17, f18, f27, rmm # perform operation
fnmadd.s f21, f17, f18, f27, rne # perform operation
fnmadd.s f21, f17, f18, f27, rtz # perform operation
fnmadd.s f21, f17, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x16, 0x7fd9182c1bb3f06f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x3e9c444f57afb155 # load x3 with value 0x3e9c444f57afb155
sw x3, 0(x2) # store 0x3e9c444f57afb155 in memory
flw f28, 0(x2) # load 0x3e9c444f57afb155 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f16, f5, f28, f30, dyn # perform operation
fnmadd.s f16, f5, f28, f30, rdn # perform operation
fnmadd.s f16, f5, f28, f30, rmm # perform operation
fnmadd.s f16, f5, f28, f30, rne # perform operation
fnmadd.s f16, f5, f28, f30, rtz # perform operation
fnmadd.s f16, f5, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f5, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x26, 0xa22083bb2a7d408b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xca05ea58f9e00724 # load x3 with value 0xca05ea58f9e00724
sw x3, 0(x2) # store 0xca05ea58f9e00724 in memory
flw f13, 0(x2) # load 0xca05ea58f9e00724 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmadd.s f26, f24, f13, f10, dyn # perform operation
fnmadd.s f26, f24, f13, f10, rdn # perform operation
fnmadd.s f26, f24, f13, f10, rmm # perform operation
fnmadd.s f26, f24, f13, f10, rne # perform operation
fnmadd.s f26, f24, f13, f10, rtz # perform operation
fnmadd.s f26, f24, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x28, 0x079a7116cdc34aee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x7ee8d64781d3b7dc # load x3 with value 0x7ee8d64781d3b7dc
sw x3, 0(x2) # store 0x7ee8d64781d3b7dc in memory
flw f23, 0(x2) # load 0x7ee8d64781d3b7dc from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmadd.s f28, f26, f23, f7, dyn # perform operation
fnmadd.s f28, f26, f23, f7, rdn # perform operation
fnmadd.s f28, f26, f23, f7, rmm # perform operation
fnmadd.s f28, f26, f23, f7, rne # perform operation
fnmadd.s f28, f26, f23, f7, rtz # perform operation
fnmadd.s f28, f26, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x16, 0xc240f30afd3bae35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x9bfc85146ef0aaf3 # load x3 with value 0x9bfc85146ef0aaf3
sw x3, 0(x2) # store 0x9bfc85146ef0aaf3 in memory
flw f28, 0(x2) # load 0x9bfc85146ef0aaf3 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmadd.s f16, f15, f28, f13, dyn # perform operation
fnmadd.s f16, f15, f28, f13, rdn # perform operation
fnmadd.s f16, f15, f28, f13, rmm # perform operation
fnmadd.s f16, f15, f28, f13, rne # perform operation
fnmadd.s f16, f15, f28, f13, rtz # perform operation
fnmadd.s f16, f15, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x2, 0x41f968656f2d38c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x320cfd6476e76b37 # load x3 with value 0x320cfd6476e76b37
sw x3, 0(x2) # store 0x320cfd6476e76b37 in memory
flw f26, 0(x2) # load 0x320cfd6476e76b37 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmadd.s f2, f10, f26, f1, dyn # perform operation
fnmadd.s f2, f10, f26, f1, rdn # perform operation
fnmadd.s f2, f10, f26, f1, rmm # perform operation
fnmadd.s f2, f10, f26, f1, rne # perform operation
fnmadd.s f2, f10, f26, f1, rtz # perform operation
fnmadd.s f2, f10, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f10, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f10, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f10, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f10, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f10, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x10, 0xd421f8d76672cd24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x3222f4cdbe67b833 # load x3 with value 0x3222f4cdbe67b833
sw x3, 0(x2) # store 0x3222f4cdbe67b833 in memory
flw f17, 0(x2) # load 0x3222f4cdbe67b833 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmadd.s f10, f3, f17, f2, dyn # perform operation
fnmadd.s f10, f3, f17, f2, rdn # perform operation
fnmadd.s f10, f3, f17, f2, rmm # perform operation
fnmadd.s f10, f3, f17, f2, rne # perform operation
fnmadd.s f10, f3, f17, f2, rtz # perform operation
fnmadd.s f10, f3, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f3, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x3, 0x4b42ff6433f003e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x4369470146070031 # load x3 with value 0x4369470146070031
sw x3, 0(x2) # store 0x4369470146070031 in memory
flw f13, 0(x2) # load 0x4369470146070031 from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmadd.s f3, f6, f13, f8, dyn # perform operation
fnmadd.s f3, f6, f13, f8, rdn # perform operation
fnmadd.s f3, f6, f13, f8, rmm # perform operation
fnmadd.s f3, f6, f13, f8, rne # perform operation
fnmadd.s f3, f6, f13, f8, rtz # perform operation
fnmadd.s f3, f6, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f6, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f6, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x26, 0x520b7186f9ed5079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x92874b1e08b1321e # load x3 with value 0x92874b1e08b1321e
sw x3, 0(x2) # store 0x92874b1e08b1321e in memory
flw f19, 0(x2) # load 0x92874b1e08b1321e from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f26, f31, f19, f15, dyn # perform operation
fnmadd.s f26, f31, f19, f15, rdn # perform operation
fnmadd.s f26, f31, f19, f15, rmm # perform operation
fnmadd.s f26, f31, f19, f15, rne # perform operation
fnmadd.s f26, f31, f19, f15, rtz # perform operation
fnmadd.s f26, f31, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x26, 0xed46c31ca3e7c3ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x7cef6c45b6c01fa6 # load x3 with value 0x7cef6c45b6c01fa6
sw x3, 0(x2) # store 0x7cef6c45b6c01fa6 in memory
flw f7, 0(x2) # load 0x7cef6c45b6c01fa6 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fnmadd.s f26, f18, f7, f30, dyn # perform operation
fnmadd.s f26, f18, f7, f30, rdn # perform operation
fnmadd.s f26, f18, f7, f30, rmm # perform operation
fnmadd.s f26, f18, f7, f30, rne # perform operation
fnmadd.s f26, f18, f7, f30, rtz # perform operation
fnmadd.s f26, f18, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f18, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f18, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x23, 0x4b1289e05c2a4297 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xe7dc272e7ae1cda3 # load x3 with value 0xe7dc272e7ae1cda3
sw x3, 0(x2) # store 0xe7dc272e7ae1cda3 in memory
flw f31, 0(x2) # load 0xe7dc272e7ae1cda3 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f23, f24, f31, f10, dyn # perform operation
fnmadd.s f23, f24, f31, f10, rdn # perform operation
fnmadd.s f23, f24, f31, f10, rmm # perform operation
fnmadd.s f23, f24, f31, f10, rne # perform operation
fnmadd.s f23, f24, f31, f10, rtz # perform operation
fnmadd.s f23, f24, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f24, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x4, 0x50865063cf7813ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xaf3ae87f80ea5314 # load x3 with value 0xaf3ae87f80ea5314
sw x3, 0(x2) # store 0xaf3ae87f80ea5314 in memory
flw f3, 0(x2) # load 0xaf3ae87f80ea5314 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.s f4, f19, f3, f30, dyn # perform operation
fnmadd.s f4, f19, f3, f30, rdn # perform operation
fnmadd.s f4, f19, f3, f30, rmm # perform operation
fnmadd.s f4, f19, f3, f30, rne # perform operation
fnmadd.s f4, f19, f3, f30, rtz # perform operation
fnmadd.s f4, f19, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f19, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f19, f3, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x15, 0x53c36f477efba351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x3e5a974690b42bb3 # load x3 with value 0x3e5a974690b42bb3
sw x3, 0(x2) # store 0x3e5a974690b42bb3 in memory
flw f28, 0(x2) # load 0x3e5a974690b42bb3 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmadd.s f15, f3, f28, f19, dyn # perform operation
fnmadd.s f15, f3, f28, f19, rdn # perform operation
fnmadd.s f15, f3, f28, f19, rmm # perform operation
fnmadd.s f15, f3, f28, f19, rne # perform operation
fnmadd.s f15, f3, f28, f19, rtz # perform operation
fnmadd.s f15, f3, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x4, 0xdcfcb7598c362b62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xd33d612f28268087 # load x3 with value 0xd33d612f28268087
sw x3, 0(x2) # store 0xd33d612f28268087 in memory
flw f11, 0(x2) # load 0xd33d612f28268087 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmadd.s f4, f15, f11, f16, dyn # perform operation
fnmadd.s f4, f15, f11, f16, rdn # perform operation
fnmadd.s f4, f15, f11, f16, rmm # perform operation
fnmadd.s f4, f15, f11, f16, rne # perform operation
fnmadd.s f4, f15, f11, f16, rtz # perform operation
fnmadd.s f4, f15, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f15, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x24, 0x176ba7dfa66fcf00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x35bbc9d5b2e627b0 # load x3 with value 0x35bbc9d5b2e627b0
sw x3, 0(x2) # store 0x35bbc9d5b2e627b0 in memory
flw f11, 0(x2) # load 0x35bbc9d5b2e627b0 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmadd.s f24, f15, f11, f13, dyn # perform operation
fnmadd.s f24, f15, f11, f13, rdn # perform operation
fnmadd.s f24, f15, f11, f13, rmm # perform operation
fnmadd.s f24, f15, f11, f13, rne # perform operation
fnmadd.s f24, f15, f11, f13, rtz # perform operation
fnmadd.s f24, f15, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f11, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x26, 0x9e292b820fdd6502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x85990da1699fb064 # load x3 with value 0x85990da1699fb064
sw x3, 0(x2) # store 0x85990da1699fb064 in memory
flw f29, 0(x2) # load 0x85990da1699fb064 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmadd.s f26, f31, f29, f18, dyn # perform operation
fnmadd.s f26, f31, f29, f18, rdn # perform operation
fnmadd.s f26, f31, f29, f18, rmm # perform operation
fnmadd.s f26, f31, f29, f18, rne # perform operation
fnmadd.s f26, f31, f29, f18, rtz # perform operation
fnmadd.s f26, f31, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x1, 0xae81f3ab2aca458a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xb9cba11b5a58b898 # load x3 with value 0xb9cba11b5a58b898
sw x3, 0(x2) # store 0xb9cba11b5a58b898 in memory
flw f13, 0(x2) # load 0xb9cba11b5a58b898 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmadd.s f1, f20, f13, f16, dyn # perform operation
fnmadd.s f1, f20, f13, f16, rdn # perform operation
fnmadd.s f1, f20, f13, f16, rmm # perform operation
fnmadd.s f1, f20, f13, f16, rne # perform operation
fnmadd.s f1, f20, f13, f16, rtz # perform operation
fnmadd.s f1, f20, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f20, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x12, 0xeda0a4779e13a1ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xcbc9703a7f9fe50d # load x3 with value 0xcbc9703a7f9fe50d
sw x3, 0(x2) # store 0xcbc9703a7f9fe50d in memory
flw f30, 0(x2) # load 0xcbc9703a7f9fe50d from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f12, f8, f30, f22, dyn # perform operation
fnmadd.s f12, f8, f30, f22, rdn # perform operation
fnmadd.s f12, f8, f30, f22, rmm # perform operation
fnmadd.s f12, f8, f30, f22, rne # perform operation
fnmadd.s f12, f8, f30, f22, rtz # perform operation
fnmadd.s f12, f8, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x30, 0x32e0ad263bffce0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x85ebefa2d781f0e3 # load x3 with value 0x85ebefa2d781f0e3
sw x3, 0(x2) # store 0x85ebefa2d781f0e3 in memory
flw f10, 0(x2) # load 0x85ebefa2d781f0e3 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f30, f26, f10, f1, dyn # perform operation
fnmadd.s f30, f26, f10, f1, rdn # perform operation
fnmadd.s f30, f26, f10, f1, rmm # perform operation
fnmadd.s f30, f26, f10, f1, rne # perform operation
fnmadd.s f30, f26, f10, f1, rtz # perform operation
fnmadd.s f30, f26, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x25, 0xb788b88eb3e2cb28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0xa0f6ea6db1802762 # load x3 with value 0xa0f6ea6db1802762
sw x3, 0(x2) # store 0xa0f6ea6db1802762 in memory
flw f27, 0(x2) # load 0xa0f6ea6db1802762 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f25, f30, f27, f6, dyn # perform operation
fnmadd.s f25, f30, f27, f6, rdn # perform operation
fnmadd.s f25, f30, f27, f6, rmm # perform operation
fnmadd.s f25, f30, f27, f6, rne # perform operation
fnmadd.s f25, f30, f27, f6, rtz # perform operation
fnmadd.s f25, f30, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x20, 0xaccf036c74cbd964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0xff34d614a9390e12 # load x3 with value 0xff34d614a9390e12
sw x3, 0(x2) # store 0xff34d614a9390e12 in memory
flw f27, 0(x2) # load 0xff34d614a9390e12 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fnmadd.s f20, f6, f27, f5, dyn # perform operation
fnmadd.s f20, f6, f27, f5, rdn # perform operation
fnmadd.s f20, f6, f27, f5, rmm # perform operation
fnmadd.s f20, f6, f27, f5, rne # perform operation
fnmadd.s f20, f6, f27, f5, rtz # perform operation
fnmadd.s f20, f6, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x25, 0xad160b725d8f02a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x4146b05f3bc6c300 # load x3 with value 0x4146b05f3bc6c300
sw x3, 0(x2) # store 0x4146b05f3bc6c300 in memory
flw f30, 0(x2) # load 0x4146b05f3bc6c300 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.s f25, f20, f30, f21, dyn # perform operation
fnmadd.s f25, f20, f30, f21, rdn # perform operation
fnmadd.s f25, f20, f30, f21, rmm # perform operation
fnmadd.s f25, f20, f30, f21, rne # perform operation
fnmadd.s f25, f20, f30, f21, rtz # perform operation
fnmadd.s f25, f20, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x1, 0xcd401e636c7b8166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x9c0f213c333a5281 # load x3 with value 0x9c0f213c333a5281
sw x3, 0(x2) # store 0x9c0f213c333a5281 in memory
flw f8, 0(x2) # load 0x9c0f213c333a5281 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmadd.s f1, f2, f8, f6, dyn # perform operation
fnmadd.s f1, f2, f8, f6, rdn # perform operation
fnmadd.s f1, f2, f8, f6, rmm # perform operation
fnmadd.s f1, f2, f8, f6, rne # perform operation
fnmadd.s f1, f2, f8, f6, rtz # perform operation
fnmadd.s f1, f2, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f2, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x9, 0x2e827c30e0262e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xa6a158192205a41d # load x3 with value 0xa6a158192205a41d
sw x3, 0(x2) # store 0xa6a158192205a41d in memory
flw f15, 0(x2) # load 0xa6a158192205a41d from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmadd.s f9, f7, f15, f26, dyn # perform operation
fnmadd.s f9, f7, f15, f26, rdn # perform operation
fnmadd.s f9, f7, f15, f26, rmm # perform operation
fnmadd.s f9, f7, f15, f26, rne # perform operation
fnmadd.s f9, f7, f15, f26, rtz # perform operation
fnmadd.s f9, f7, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f7, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x5, 0xa3829363e560d21c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x6f7cfca677142966 # load x3 with value 0x6f7cfca677142966
sw x3, 0(x2) # store 0x6f7cfca677142966 in memory
flw f25, 0(x2) # load 0x6f7cfca677142966 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fnmadd.s f5, f15, f25, f28, dyn # perform operation
fnmadd.s f5, f15, f25, f28, rdn # perform operation
fnmadd.s f5, f15, f25, f28, rmm # perform operation
fnmadd.s f5, f15, f25, f28, rne # perform operation
fnmadd.s f5, f15, f25, f28, rtz # perform operation
fnmadd.s f5, f15, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f15, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x7, 0x5c1def3b10abbb6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xda0a294fcf3ed0e1 # load x3 with value 0xda0a294fcf3ed0e1
sw x3, 0(x2) # store 0xda0a294fcf3ed0e1 in memory
flw f27, 0(x2) # load 0xda0a294fcf3ed0e1 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmadd.s f7, f11, f27, f28, dyn # perform operation
fnmadd.s f7, f11, f27, f28, rdn # perform operation
fnmadd.s f7, f11, f27, f28, rmm # perform operation
fnmadd.s f7, f11, f27, f28, rne # perform operation
fnmadd.s f7, f11, f27, f28, rtz # perform operation
fnmadd.s f7, f11, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x27, 0xbb9c0f0dbdf0233a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0xa359182d728b869 # load x3 with value 0xa359182d728b869
sw x3, 0(x2) # store 0xa359182d728b869 in memory
flw f29, 0(x2) # load 0xa359182d728b869 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmadd.s f27, f20, f29, f30, dyn # perform operation
fnmadd.s f27, f20, f29, f30, rdn # perform operation
fnmadd.s f27, f20, f29, f30, rmm # perform operation
fnmadd.s f27, f20, f29, f30, rne # perform operation
fnmadd.s f27, f20, f29, f30, rtz # perform operation
fnmadd.s f27, f20, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x20, 0x7c6f28b605762d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x20f34e8b5176cf14 # load x3 with value 0x20f34e8b5176cf14
sw x3, 0(x2) # store 0x20f34e8b5176cf14 in memory
flw f25, 0(x2) # load 0x20f34e8b5176cf14 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f20, f3, f25, f30, dyn # perform operation
fnmadd.s f20, f3, f25, f30, rdn # perform operation
fnmadd.s f20, f3, f25, f30, rmm # perform operation
fnmadd.s f20, f3, f25, f30, rne # perform operation
fnmadd.s f20, f3, f25, f30, rtz # perform operation
fnmadd.s f20, f3, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x23, 0xdde3cc6a304b155e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0xaae131358ca32f51 # load x3 with value 0xaae131358ca32f51
sw x3, 0(x2) # store 0xaae131358ca32f51 in memory
flw f3, 0(x2) # load 0xaae131358ca32f51 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmadd.s f23, f17, f3, f28, dyn # perform operation
fnmadd.s f23, f17, f3, f28, rdn # perform operation
fnmadd.s f23, f17, f3, f28, rmm # perform operation
fnmadd.s f23, f17, f3, f28, rne # perform operation
fnmadd.s f23, f17, f3, f28, rtz # perform operation
fnmadd.s f23, f17, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x6, 0x35debc5a7999496e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xb3e95ffd19cf7f71 # load x3 with value 0xb3e95ffd19cf7f71
sw x3, 0(x2) # store 0xb3e95ffd19cf7f71 in memory
flw f21, 0(x2) # load 0xb3e95ffd19cf7f71 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmadd.s f6, f24, f21, f3, dyn # perform operation
fnmadd.s f6, f24, f21, f3, rdn # perform operation
fnmadd.s f6, f24, f21, f3, rmm # perform operation
fnmadd.s f6, f24, f21, f3, rne # perform operation
fnmadd.s f6, f24, f21, f3, rtz # perform operation
fnmadd.s f6, f24, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x21, 0x73293b889d68d69f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x5ce5575ed4af85fd # load x3 with value 0x5ce5575ed4af85fd
sw x3, 0(x2) # store 0x5ce5575ed4af85fd in memory
flw f7, 0(x2) # load 0x5ce5575ed4af85fd from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f21, f31, f7, f2, dyn # perform operation
fnmadd.s f21, f31, f7, f2, rdn # perform operation
fnmadd.s f21, f31, f7, f2, rmm # perform operation
fnmadd.s f21, f31, f7, f2, rne # perform operation
fnmadd.s f21, f31, f7, f2, rtz # perform operation
fnmadd.s f21, f31, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x5, 0x3477e1f3ec8c0ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xc927e5222b076c82 # load x3 with value 0xc927e5222b076c82
sw x3, 0(x2) # store 0xc927e5222b076c82 in memory
flw f3, 0(x2) # load 0xc927e5222b076c82 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmadd.s f5, f2, f3, f16, dyn # perform operation
fnmadd.s f5, f2, f3, f16, rdn # perform operation
fnmadd.s f5, f2, f3, f16, rmm # perform operation
fnmadd.s f5, f2, f3, f16, rne # perform operation
fnmadd.s f5, f2, f3, f16, rtz # perform operation
fnmadd.s f5, f2, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x2, 0x64080302c4d6df16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x4de39cbfab6e9bb2 # load x3 with value 0x4de39cbfab6e9bb2
sw x3, 0(x2) # store 0x4de39cbfab6e9bb2 in memory
flw f25, 0(x2) # load 0x4de39cbfab6e9bb2 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmadd.s f2, f28, f25, f7, dyn # perform operation
fnmadd.s f2, f28, f25, f7, rdn # perform operation
fnmadd.s f2, f28, f25, f7, rmm # perform operation
fnmadd.s f2, f28, f25, f7, rne # perform operation
fnmadd.s f2, f28, f25, f7, rtz # perform operation
fnmadd.s f2, f28, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x29, 0x4a0cde04a127cc45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x2aa300a8484a439c # load x3 with value 0x2aa300a8484a439c
sw x3, 0(x2) # store 0x2aa300a8484a439c in memory
flw f1, 0(x2) # load 0x2aa300a8484a439c from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fnmadd.s f29, f6, f1, f27, dyn # perform operation
fnmadd.s f29, f6, f1, f27, rdn # perform operation
fnmadd.s f29, f6, f1, f27, rmm # perform operation
fnmadd.s f29, f6, f1, f27, rne # perform operation
fnmadd.s f29, f6, f1, f27, rtz # perform operation
fnmadd.s f29, f6, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x8, 0x9b10a248d45a1c32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x3c6ccd8c5acd7b0e # load x3 with value 0x3c6ccd8c5acd7b0e
sw x3, 0(x2) # store 0x3c6ccd8c5acd7b0e in memory
flw f6, 0(x2) # load 0x3c6ccd8c5acd7b0e from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmadd.s f8, f29, f6, f18, dyn # perform operation
fnmadd.s f8, f29, f6, f18, rdn # perform operation
fnmadd.s f8, f29, f6, f18, rmm # perform operation
fnmadd.s f8, f29, f6, f18, rne # perform operation
fnmadd.s f8, f29, f6, f18, rtz # perform operation
fnmadd.s f8, f29, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x20, 0x875ffcd00298cfe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x1cfb94476638de2c # load x3 with value 0x1cfb94476638de2c
sw x3, 0(x2) # store 0x1cfb94476638de2c in memory
flw f29, 0(x2) # load 0x1cfb94476638de2c from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmadd.s f20, f18, f29, f13, dyn # perform operation
fnmadd.s f20, f18, f29, f13, rdn # perform operation
fnmadd.s f20, f18, f29, f13, rmm # perform operation
fnmadd.s f20, f18, f29, f13, rne # perform operation
fnmadd.s f20, f18, f29, f13, rtz # perform operation
fnmadd.s f20, f18, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f18, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f18, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f18, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f18, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f18, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x3, 0x7dc7b87a813fcaff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0xf2654ce407d1e99d # load x3 with value 0xf2654ce407d1e99d
sw x3, 0(x2) # store 0xf2654ce407d1e99d in memory
flw f17, 0(x2) # load 0xf2654ce407d1e99d from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmadd.s f3, f16, f17, f19, dyn # perform operation
fnmadd.s f3, f16, f17, f19, rdn # perform operation
fnmadd.s f3, f16, f17, f19, rmm # perform operation
fnmadd.s f3, f16, f17, f19, rne # perform operation
fnmadd.s f3, f16, f17, f19, rtz # perform operation
fnmadd.s f3, f16, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x20, 0x3532029416fa58ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x2b72242fb6002175 # load x3 with value 0x2b72242fb6002175
sw x3, 0(x2) # store 0x2b72242fb6002175 in memory
flw f15, 0(x2) # load 0x2b72242fb6002175 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.s f20, f13, f15, f23, dyn # perform operation
fnmadd.s f20, f13, f15, f23, rdn # perform operation
fnmadd.s f20, f13, f15, f23, rmm # perform operation
fnmadd.s f20, f13, f15, f23, rne # perform operation
fnmadd.s f20, f13, f15, f23, rtz # perform operation
fnmadd.s f20, f13, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f13, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x2, 0x0d23b06ac093430c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x9895d31df33d7531 # load x3 with value 0x9895d31df33d7531
sw x3, 0(x2) # store 0x9895d31df33d7531 in memory
flw f10, 0(x2) # load 0x9895d31df33d7531 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fnmadd.s f2, f20, f10, f14, dyn # perform operation
fnmadd.s f2, f20, f10, f14, rdn # perform operation
fnmadd.s f2, f20, f10, f14, rmm # perform operation
fnmadd.s f2, f20, f10, f14, rne # perform operation
fnmadd.s f2, f20, f10, f14, rtz # perform operation
fnmadd.s f2, f20, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x14, 0x61fcf25b90c272ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x1d64d39a6986c9f3 # load x3 with value 0x1d64d39a6986c9f3
sw x3, 0(x2) # store 0x1d64d39a6986c9f3 in memory
flw f12, 0(x2) # load 0x1d64d39a6986c9f3 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmadd.s f14, f19, f12, f31, dyn # perform operation
fnmadd.s f14, f19, f12, f31, rdn # perform operation
fnmadd.s f14, f19, f12, f31, rmm # perform operation
fnmadd.s f14, f19, f12, f31, rne # perform operation
fnmadd.s f14, f19, f12, f31, rtz # perform operation
fnmadd.s f14, f19, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x30, 0x22d2ba60774320bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xf0846b5d4ab0c8a7 # load x3 with value 0xf0846b5d4ab0c8a7
sw x3, 0(x2) # store 0xf0846b5d4ab0c8a7 in memory
flw f9, 0(x2) # load 0xf0846b5d4ab0c8a7 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f30, f23, f9, f11, dyn # perform operation
fnmadd.s f30, f23, f9, f11, rdn # perform operation
fnmadd.s f30, f23, f9, f11, rmm # perform operation
fnmadd.s f30, f23, f9, f11, rne # perform operation
fnmadd.s f30, f23, f9, f11, rtz # perform operation
fnmadd.s f30, f23, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x16, 0x7c3281325ecf1169 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x277ead274b7b1861 # load x3 with value 0x277ead274b7b1861
sw x3, 0(x2) # store 0x277ead274b7b1861 in memory
flw f26, 0(x2) # load 0x277ead274b7b1861 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fnmadd.s f16, f17, f26, f2, dyn # perform operation
fnmadd.s f16, f17, f26, f2, rdn # perform operation
fnmadd.s f16, f17, f26, f2, rmm # perform operation
fnmadd.s f16, f17, f26, f2, rne # perform operation
fnmadd.s f16, f17, f26, f2, rtz # perform operation
fnmadd.s f16, f17, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x23, 0xfc1edeb38c9a92bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x223bf772bea8e7d6 # load x3 with value 0x223bf772bea8e7d6
sw x3, 0(x2) # store 0x223bf772bea8e7d6 in memory
flw f20, 0(x2) # load 0x223bf772bea8e7d6 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmadd.s f23, f10, f20, f29, dyn # perform operation
fnmadd.s f23, f10, f20, f29, rdn # perform operation
fnmadd.s f23, f10, f20, f29, rmm # perform operation
fnmadd.s f23, f10, f20, f29, rne # perform operation
fnmadd.s f23, f10, f20, f29, rtz # perform operation
fnmadd.s f23, f10, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x7, 0xc8f28beca690097b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x29254b248b774f5a # load x3 with value 0x29254b248b774f5a
sw x3, 0(x2) # store 0x29254b248b774f5a in memory
flw f25, 0(x2) # load 0x29254b248b774f5a from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmadd.s f7, f20, f25, f8, dyn # perform operation
fnmadd.s f7, f20, f25, f8, rdn # perform operation
fnmadd.s f7, f20, f25, f8, rmm # perform operation
fnmadd.s f7, f20, f25, f8, rne # perform operation
fnmadd.s f7, f20, f25, f8, rtz # perform operation
fnmadd.s f7, f20, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x15, 0x2378d016f1817c0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xfbc8f3d4fb141231 # load x3 with value 0xfbc8f3d4fb141231
sw x3, 0(x2) # store 0xfbc8f3d4fb141231 in memory
flw f31, 0(x2) # load 0xfbc8f3d4fb141231 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fnmadd.s f15, f1, f31, f28, dyn # perform operation
fnmadd.s f15, f1, f31, f28, rdn # perform operation
fnmadd.s f15, f1, f31, f28, rmm # perform operation
fnmadd.s f15, f1, f31, f28, rne # perform operation
fnmadd.s f15, f1, f31, f28, rtz # perform operation
fnmadd.s f15, f1, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x14, 0x96bd34288b9141b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x55066e268a4433f9 # load x3 with value 0x55066e268a4433f9
sw x3, 0(x2) # store 0x55066e268a4433f9 in memory
flw f17, 0(x2) # load 0x55066e268a4433f9 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f14, f9, f17, f28, dyn # perform operation
fnmadd.s f14, f9, f17, f28, rdn # perform operation
fnmadd.s f14, f9, f17, f28, rmm # perform operation
fnmadd.s f14, f9, f17, f28, rne # perform operation
fnmadd.s f14, f9, f17, f28, rtz # perform operation
fnmadd.s f14, f9, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x22, 0xdd8e8a334b473b05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xdbc9f6de72b0d832 # load x3 with value 0xdbc9f6de72b0d832
sw x3, 0(x2) # store 0xdbc9f6de72b0d832 in memory
flw f7, 0(x2) # load 0xdbc9f6de72b0d832 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmadd.s f22, f8, f7, f31, dyn # perform operation
fnmadd.s f22, f8, f7, f31, rdn # perform operation
fnmadd.s f22, f8, f7, f31, rmm # perform operation
fnmadd.s f22, f8, f7, f31, rne # perform operation
fnmadd.s f22, f8, f7, f31, rtz # perform operation
fnmadd.s f22, f8, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x25, 0x19a414be2e9350eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x390e7fb63371cd5a # load x3 with value 0x390e7fb63371cd5a
sw x3, 0(x2) # store 0x390e7fb63371cd5a in memory
flw f1, 0(x2) # load 0x390e7fb63371cd5a from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.s f25, f20, f1, f21, dyn # perform operation
fnmadd.s f25, f20, f1, f21, rdn # perform operation
fnmadd.s f25, f20, f1, f21, rmm # perform operation
fnmadd.s f25, f20, f1, f21, rne # perform operation
fnmadd.s f25, f20, f1, f21, rtz # perform operation
fnmadd.s f25, f20, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x30, 0xe7a5704ba3b1bdb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0xdf2efb7465031512 # load x3 with value 0xdf2efb7465031512
sw x3, 0(x2) # store 0xdf2efb7465031512 in memory
flw f13, 0(x2) # load 0xdf2efb7465031512 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmadd.s f30, f19, f13, f2, dyn # perform operation
fnmadd.s f30, f19, f13, f2, rdn # perform operation
fnmadd.s f30, f19, f13, f2, rmm # perform operation
fnmadd.s f30, f19, f13, f2, rne # perform operation
fnmadd.s f30, f19, f13, f2, rtz # perform operation
fnmadd.s f30, f19, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f19, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x29, 0xc5307675e74ac679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0xc41c2d35a48cfa3d # load x3 with value 0xc41c2d35a48cfa3d
sw x3, 0(x2) # store 0xc41c2d35a48cfa3d in memory
flw f31, 0(x2) # load 0xc41c2d35a48cfa3d from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f29, f20, f31, f15, dyn # perform operation
fnmadd.s f29, f20, f31, f15, rdn # perform operation
fnmadd.s f29, f20, f31, f15, rmm # perform operation
fnmadd.s f29, f20, f31, f15, rne # perform operation
fnmadd.s f29, f20, f31, f15, rtz # perform operation
fnmadd.s f29, f20, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x14, 0x33693586fea96a89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x4f334b0a88fb17ec # load x3 with value 0x4f334b0a88fb17ec
sw x3, 0(x2) # store 0x4f334b0a88fb17ec in memory
flw f9, 0(x2) # load 0x4f334b0a88fb17ec from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fnmadd.s f14, f31, f9, f27, dyn # perform operation
fnmadd.s f14, f31, f9, f27, rdn # perform operation
fnmadd.s f14, f31, f9, f27, rmm # perform operation
fnmadd.s f14, f31, f9, f27, rne # perform operation
fnmadd.s f14, f31, f9, f27, rtz # perform operation
fnmadd.s f14, f31, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x16, 0x73ffd4a00fcbd047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xa381c3d9632c4b6a # load x3 with value 0xa381c3d9632c4b6a
sw x3, 0(x2) # store 0xa381c3d9632c4b6a in memory
flw f29, 0(x2) # load 0xa381c3d9632c4b6a from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmadd.s f16, f28, f29, f20, dyn # perform operation
fnmadd.s f16, f28, f29, f20, rdn # perform operation
fnmadd.s f16, f28, f29, f20, rmm # perform operation
fnmadd.s f16, f28, f29, f20, rne # perform operation
fnmadd.s f16, f28, f29, f20, rtz # perform operation
fnmadd.s f16, f28, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f28, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x2, 0xeb147833d0e0fe6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x2c9b5cf4c3855863 # load x3 with value 0x2c9b5cf4c3855863
sw x3, 0(x2) # store 0x2c9b5cf4c3855863 in memory
flw f16, 0(x2) # load 0x2c9b5cf4c3855863 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmadd.s f2, f9, f16, f21, dyn # perform operation
fnmadd.s f2, f9, f16, f21, rdn # perform operation
fnmadd.s f2, f9, f16, f21, rmm # perform operation
fnmadd.s f2, f9, f16, f21, rne # perform operation
fnmadd.s f2, f9, f16, f21, rtz # perform operation
fnmadd.s f2, f9, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x22, 0x8c21239a7607c40b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xc15524e496b5c24d # load x3 with value 0xc15524e496b5c24d
sw x3, 0(x2) # store 0xc15524e496b5c24d in memory
flw f25, 0(x2) # load 0xc15524e496b5c24d from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fnmadd.s f22, f8, f25, f5, dyn # perform operation
fnmadd.s f22, f8, f25, f5, rdn # perform operation
fnmadd.s f22, f8, f25, f5, rmm # perform operation
fnmadd.s f22, f8, f25, f5, rne # perform operation
fnmadd.s f22, f8, f25, f5, rtz # perform operation
fnmadd.s f22, f8, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x7, 0x32e0d3ea5535fa22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x51ab2d4549309833 # load x3 with value 0x51ab2d4549309833
sw x3, 0(x2) # store 0x51ab2d4549309833 in memory
flw f8, 0(x2) # load 0x51ab2d4549309833 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fnmadd.s f7, f1, f8, f5, dyn # perform operation
fnmadd.s f7, f1, f8, f5, rdn # perform operation
fnmadd.s f7, f1, f8, f5, rmm # perform operation
fnmadd.s f7, f1, f8, f5, rne # perform operation
fnmadd.s f7, f1, f8, f5, rtz # perform operation
fnmadd.s f7, f1, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x3, 0x6370cb905ebc3163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x9abaf02f450746a3 # load x3 with value 0x9abaf02f450746a3
sw x3, 0(x2) # store 0x9abaf02f450746a3 in memory
flw f28, 0(x2) # load 0x9abaf02f450746a3 from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmadd.s f3, f29, f28, f31, dyn # perform operation
fnmadd.s f3, f29, f28, f31, rdn # perform operation
fnmadd.s f3, f29, f28, f31, rmm # perform operation
fnmadd.s f3, f29, f28, f31, rne # perform operation
fnmadd.s f3, f29, f28, f31, rtz # perform operation
fnmadd.s f3, f29, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f29, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x26, 0xbf7fea925650d1cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x19ba5ec3fae59645 # load x3 with value 0x19ba5ec3fae59645
sw x3, 0(x2) # store 0x19ba5ec3fae59645 in memory
flw f23, 0(x2) # load 0x19ba5ec3fae59645 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmadd.s f26, f6, f23, f31, dyn # perform operation
fnmadd.s f26, f6, f23, f31, rdn # perform operation
fnmadd.s f26, f6, f23, f31, rmm # perform operation
fnmadd.s f26, f6, f23, f31, rne # perform operation
fnmadd.s f26, f6, f23, f31, rtz # perform operation
fnmadd.s f26, f6, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x5, 0xbf50ddb6fb037f1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x6b9f151294a46c3e # load x3 with value 0x6b9f151294a46c3e
sw x3, 0(x2) # store 0x6b9f151294a46c3e in memory
flw f1, 0(x2) # load 0x6b9f151294a46c3e from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
fnmadd.s f5, f12, f1, f4, dyn # perform operation
fnmadd.s f5, f12, f1, f4, rdn # perform operation
fnmadd.s f5, f12, f1, f4, rmm # perform operation
fnmadd.s f5, f12, f1, f4, rne # perform operation
fnmadd.s f5, f12, f1, f4, rtz # perform operation
fnmadd.s f5, f12, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x24, 0xc94242786015402a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x645eb29dd4998510 # load x3 with value 0x645eb29dd4998510
sw x3, 0(x2) # store 0x645eb29dd4998510 in memory
flw f20, 0(x2) # load 0x645eb29dd4998510 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f24, f22, f20, f27, dyn # perform operation
fnmadd.s f24, f22, f20, f27, rdn # perform operation
fnmadd.s f24, f22, f20, f27, rmm # perform operation
fnmadd.s f24, f22, f20, f27, rne # perform operation
fnmadd.s f24, f22, f20, f27, rtz # perform operation
fnmadd.s f24, f22, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f22, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x17, 0xddad5d449fc4cfc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x7df84552315d81ee # load x3 with value 0x7df84552315d81ee
sw x3, 0(x2) # store 0x7df84552315d81ee in memory
flw f14, 0(x2) # load 0x7df84552315d81ee from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmadd.s f17, f18, f14, f15, dyn # perform operation
fnmadd.s f17, f18, f14, f15, rdn # perform operation
fnmadd.s f17, f18, f14, f15, rmm # perform operation
fnmadd.s f17, f18, f14, f15, rne # perform operation
fnmadd.s f17, f18, f14, f15, rtz # perform operation
fnmadd.s f17, f18, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f18, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f18, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x24, 0x08cefa289a079d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xe851a85ab40d6f74 # load x3 with value 0xe851a85ab40d6f74
sw x3, 0(x2) # store 0xe851a85ab40d6f74 in memory
flw f1, 0(x2) # load 0xe851a85ab40d6f74 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fnmadd.s f24, f30, f1, f28, dyn # perform operation
fnmadd.s f24, f30, f1, f28, rdn # perform operation
fnmadd.s f24, f30, f1, f28, rmm # perform operation
fnmadd.s f24, f30, f1, f28, rne # perform operation
fnmadd.s f24, f30, f1, f28, rtz # perform operation
fnmadd.s f24, f30, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x17, 0x1961c90fd0d46768 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x54e0c898b68777f8 # load x3 with value 0x54e0c898b68777f8
sw x3, 0(x2) # store 0x54e0c898b68777f8 in memory
flw f23, 0(x2) # load 0x54e0c898b68777f8 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f17, f11, f23, f19, dyn # perform operation
fnmadd.s f17, f11, f23, f19, rdn # perform operation
fnmadd.s f17, f11, f23, f19, rmm # perform operation
fnmadd.s f17, f11, f23, f19, rne # perform operation
fnmadd.s f17, f11, f23, f19, rtz # perform operation
fnmadd.s f17, f11, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x15, 0x711a65c89b56cc7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x84c24b559d56a6ee # load x3 with value 0x84c24b559d56a6ee
sw x3, 0(x2) # store 0x84c24b559d56a6ee in memory
flw f23, 0(x2) # load 0x84c24b559d56a6ee from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmadd.s f15, f3, f23, f26, dyn # perform operation
fnmadd.s f15, f3, f23, f26, rdn # perform operation
fnmadd.s f15, f3, f23, f26, rmm # perform operation
fnmadd.s f15, f3, f23, f26, rne # perform operation
fnmadd.s f15, f3, f23, f26, rtz # perform operation
fnmadd.s f15, f3, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x2, 0x1c2abb683dda8cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x26fd9363d9f6430 # load x3 with value 0x26fd9363d9f6430
sw x3, 0(x2) # store 0x26fd9363d9f6430 in memory
flw f5, 0(x2) # load 0x26fd9363d9f6430 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.s f2, f7, f5, f15, dyn # perform operation
fnmadd.s f2, f7, f5, f15, rdn # perform operation
fnmadd.s f2, f7, f5, f15, rmm # perform operation
fnmadd.s f2, f7, f5, f15, rne # perform operation
fnmadd.s f2, f7, f5, f15, rtz # perform operation
fnmadd.s f2, f7, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x23, 0xe0be28917ba1427a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x48977ab300195703 # load x3 with value 0x48977ab300195703
sw x3, 0(x2) # store 0x48977ab300195703 in memory
flw f14, 0(x2) # load 0x48977ab300195703 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmadd.s f23, f13, f14, f9, dyn # perform operation
fnmadd.s f23, f13, f14, f9, rdn # perform operation
fnmadd.s f23, f13, f14, f9, rmm # perform operation
fnmadd.s f23, f13, f14, f9, rne # perform operation
fnmadd.s f23, f13, f14, f9, rtz # perform operation
fnmadd.s f23, f13, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x6, 0xc5ed7584229ee8fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x40eaae558990627e # load x3 with value 0x40eaae558990627e
sw x3, 0(x2) # store 0x40eaae558990627e in memory
flw f2, 0(x2) # load 0x40eaae558990627e from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmadd.s f6, f28, f2, f29, dyn # perform operation
fnmadd.s f6, f28, f2, f29, rdn # perform operation
fnmadd.s f6, f28, f2, f29, rmm # perform operation
fnmadd.s f6, f28, f2, f29, rne # perform operation
fnmadd.s f6, f28, f2, f29, rtz # perform operation
fnmadd.s f6, f28, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x26, 0xa8ab165ebb16a63e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x169ce284a0bd7f98 # load x3 with value 0x169ce284a0bd7f98
sw x3, 0(x2) # store 0x169ce284a0bd7f98 in memory
flw f3, 0(x2) # load 0x169ce284a0bd7f98 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmadd.s f26, f29, f3, f9, dyn # perform operation
fnmadd.s f26, f29, f3, f9, rdn # perform operation
fnmadd.s f26, f29, f3, f9, rmm # perform operation
fnmadd.s f26, f29, f3, f9, rne # perform operation
fnmadd.s f26, f29, f3, f9, rtz # perform operation
fnmadd.s f26, f29, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x26, 0xba6352285261c324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xc43bf1f50ad2414e # load x3 with value 0xc43bf1f50ad2414e
sw x3, 0(x2) # store 0xc43bf1f50ad2414e in memory
flw f31, 0(x2) # load 0xc43bf1f50ad2414e from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f26, f6, f31, f25, dyn # perform operation
fnmadd.s f26, f6, f31, f25, rdn # perform operation
fnmadd.s f26, f6, f31, f25, rmm # perform operation
fnmadd.s f26, f6, f31, f25, rne # perform operation
fnmadd.s f26, f6, f31, f25, rtz # perform operation
fnmadd.s f26, f6, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x2, 0x1fe163507cd7c190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x670e774737bca5bb # load x3 with value 0x670e774737bca5bb
sw x3, 0(x2) # store 0x670e774737bca5bb in memory
flw f18, 0(x2) # load 0x670e774737bca5bb from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fnmadd.s f2, f26, f18, f8, dyn # perform operation
fnmadd.s f2, f26, f18, f8, rdn # perform operation
fnmadd.s f2, f26, f18, f8, rmm # perform operation
fnmadd.s f2, f26, f18, f8, rne # perform operation
fnmadd.s f2, f26, f18, f8, rtz # perform operation
fnmadd.s f2, f26, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x19, 0xcbfa11ff088e0088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xbc3fd8da5b8a62e8 # load x3 with value 0xbc3fd8da5b8a62e8
sw x3, 0(x2) # store 0xbc3fd8da5b8a62e8 in memory
flw f8, 0(x2) # load 0xbc3fd8da5b8a62e8 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmadd.s f19, f18, f8, f25, dyn # perform operation
fnmadd.s f19, f18, f8, f25, rdn # perform operation
fnmadd.s f19, f18, f8, f25, rmm # perform operation
fnmadd.s f19, f18, f8, f25, rne # perform operation
fnmadd.s f19, f18, f8, f25, rtz # perform operation
fnmadd.s f19, f18, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x20, 0x3a28bfa08a12f95a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xda1f2575ada671ca # load x3 with value 0xda1f2575ada671ca
sw x3, 0(x2) # store 0xda1f2575ada671ca in memory
flw f31, 0(x2) # load 0xda1f2575ada671ca from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmadd.s f20, f7, f31, f10, dyn # perform operation
fnmadd.s f20, f7, f31, f10, rdn # perform operation
fnmadd.s f20, f7, f31, f10, rmm # perform operation
fnmadd.s f20, f7, f31, f10, rne # perform operation
fnmadd.s f20, f7, f31, f10, rtz # perform operation
fnmadd.s f20, f7, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f7, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x5, 0x36825a0dd9d28d87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x1daae75343d06869 # load x3 with value 0x1daae75343d06869
sw x3, 0(x2) # store 0x1daae75343d06869 in memory
flw f28, 0(x2) # load 0x1daae75343d06869 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmadd.s f5, f13, f28, f31, dyn # perform operation
fnmadd.s f5, f13, f28, f31, rdn # perform operation
fnmadd.s f5, f13, f28, f31, rmm # perform operation
fnmadd.s f5, f13, f28, f31, rne # perform operation
fnmadd.s f5, f13, f28, f31, rtz # perform operation
fnmadd.s f5, f13, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x3, 0x5336e6db1d1b375e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x7f593015b83aa695 # load x3 with value 0x7f593015b83aa695
sw x3, 0(x2) # store 0x7f593015b83aa695 in memory
flw f15, 0(x2) # load 0x7f593015b83aa695 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmadd.s f3, f9, f15, f18, dyn # perform operation
fnmadd.s f3, f9, f15, f18, rdn # perform operation
fnmadd.s f3, f9, f15, f18, rmm # perform operation
fnmadd.s f3, f9, f15, f18, rne # perform operation
fnmadd.s f3, f9, f15, f18, rtz # perform operation
fnmadd.s f3, f9, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f15, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x5, 0x80f9232b59336b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x19c6aa67c830f360 # load x3 with value 0x19c6aa67c830f360
sw x3, 0(x2) # store 0x19c6aa67c830f360 in memory
flw f8, 0(x2) # load 0x19c6aa67c830f360 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fnmadd.s f5, f14, f8, f23, dyn # perform operation
fnmadd.s f5, f14, f8, f23, rdn # perform operation
fnmadd.s f5, f14, f8, f23, rmm # perform operation
fnmadd.s f5, f14, f8, f23, rne # perform operation
fnmadd.s f5, f14, f8, f23, rtz # perform operation
fnmadd.s f5, f14, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x12, 0xeaeb351281176b94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xaf4cfb8dfb1b1876 # load x3 with value 0xaf4cfb8dfb1b1876
sw x3, 0(x2) # store 0xaf4cfb8dfb1b1876 in memory
flw f13, 0(x2) # load 0xaf4cfb8dfb1b1876 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmadd.s f12, f2, f13, f24, dyn # perform operation
fnmadd.s f12, f2, f13, f24, rdn # perform operation
fnmadd.s f12, f2, f13, f24, rmm # perform operation
fnmadd.s f12, f2, f13, f24, rne # perform operation
fnmadd.s f12, f2, f13, f24, rtz # perform operation
fnmadd.s f12, f2, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x20, 0xfd6e33babac1f1ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x1b3cf4e93c870cef # load x3 with value 0x1b3cf4e93c870cef
sw x3, 0(x2) # store 0x1b3cf4e93c870cef in memory
flw f15, 0(x2) # load 0x1b3cf4e93c870cef from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fnmadd.s f20, f18, f15, f2, dyn # perform operation
fnmadd.s f20, f18, f15, f2, rdn # perform operation
fnmadd.s f20, f18, f15, f2, rmm # perform operation
fnmadd.s f20, f18, f15, f2, rne # perform operation
fnmadd.s f20, f18, f15, f2, rtz # perform operation
fnmadd.s f20, f18, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f18, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f18, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x29, 0x4ef0252e6930a20f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xcdccd97a31a81b59 # load x3 with value 0xcdccd97a31a81b59
sw x3, 0(x2) # store 0xcdccd97a31a81b59 in memory
flw f6, 0(x2) # load 0xcdccd97a31a81b59 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmadd.s f29, f10, f6, f31, dyn # perform operation
fnmadd.s f29, f10, f6, f31, rdn # perform operation
fnmadd.s f29, f10, f6, f31, rmm # perform operation
fnmadd.s f29, f10, f6, f31, rne # perform operation
fnmadd.s f29, f10, f6, f31, rtz # perform operation
fnmadd.s f29, f10, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x16, 0x1363189e1a1e090a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x2e256c8ae47be7c0 # load x3 with value 0x2e256c8ae47be7c0
sw x3, 0(x2) # store 0x2e256c8ae47be7c0 in memory
flw f11, 0(x2) # load 0x2e256c8ae47be7c0 from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmadd.s f16, f23, f11, f14, dyn # perform operation
fnmadd.s f16, f23, f11, f14, rdn # perform operation
fnmadd.s f16, f23, f11, f14, rmm # perform operation
fnmadd.s f16, f23, f11, f14, rne # perform operation
fnmadd.s f16, f23, f11, f14, rtz # perform operation
fnmadd.s f16, f23, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x21, 0xe2536ba7efd18265 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xa51b0567309e4077 # load x3 with value 0xa51b0567309e4077
sw x3, 0(x2) # store 0xa51b0567309e4077 in memory
flw f12, 0(x2) # load 0xa51b0567309e4077 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmadd.s f21, f16, f12, f13, dyn # perform operation
fnmadd.s f21, f16, f12, f13, rdn # perform operation
fnmadd.s f21, f16, f12, f13, rmm # perform operation
fnmadd.s f21, f16, f12, f13, rne # perform operation
fnmadd.s f21, f16, f12, f13, rtz # perform operation
fnmadd.s f21, f16, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x22, 0x794b951ebf79238d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xb58fbaef82c30667 # load x3 with value 0xb58fbaef82c30667
sw x3, 0(x2) # store 0xb58fbaef82c30667 in memory
flw f18, 0(x2) # load 0xb58fbaef82c30667 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmadd.s f22, f3, f18, f21, dyn # perform operation
fnmadd.s f22, f3, f18, f21, rdn # perform operation
fnmadd.s f22, f3, f18, f21, rmm # perform operation
fnmadd.s f22, f3, f18, f21, rne # perform operation
fnmadd.s f22, f3, f18, f21, rtz # perform operation
fnmadd.s f22, f3, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x28, 0x735928b385b27e0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xec5bca8ab8500f42 # load x3 with value 0xec5bca8ab8500f42
sw x3, 0(x2) # store 0xec5bca8ab8500f42 in memory
flw f24, 0(x2) # load 0xec5bca8ab8500f42 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f28, f3, f24, f21, dyn # perform operation
fnmadd.s f28, f3, f24, f21, rdn # perform operation
fnmadd.s f28, f3, f24, f21, rmm # perform operation
fnmadd.s f28, f3, f24, f21, rne # perform operation
fnmadd.s f28, f3, f24, f21, rtz # perform operation
fnmadd.s f28, f3, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x4, 0xace953b741f9e0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x3262bfbcd739fe77 # load x3 with value 0x3262bfbcd739fe77
sw x3, 0(x2) # store 0x3262bfbcd739fe77 in memory
flw f26, 0(x2) # load 0x3262bfbcd739fe77 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmadd.s f4, f12, f26, f19, dyn # perform operation
fnmadd.s f4, f12, f26, f19, rdn # perform operation
fnmadd.s f4, f12, f26, f19, rmm # perform operation
fnmadd.s f4, f12, f26, f19, rne # perform operation
fnmadd.s f4, f12, f26, f19, rtz # perform operation
fnmadd.s f4, f12, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f12, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f12, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f12, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f12, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f12, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x27, 0x311cf89de3b1f903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xb7d0ae4411810a68 # load x3 with value 0xb7d0ae4411810a68
sw x3, 0(x2) # store 0xb7d0ae4411810a68 in memory
flw f20, 0(x2) # load 0xb7d0ae4411810a68 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmadd.s f27, f17, f20, f30, dyn # perform operation
fnmadd.s f27, f17, f20, f30, rdn # perform operation
fnmadd.s f27, f17, f20, f30, rmm # perform operation
fnmadd.s f27, f17, f20, f30, rne # perform operation
fnmadd.s f27, f17, f20, f30, rtz # perform operation
fnmadd.s f27, f17, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f17, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f17, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x2, 0x3194b43bd86ed4cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xbcd6d3972159cb54 # load x3 with value 0xbcd6d3972159cb54
sw x3, 0(x2) # store 0xbcd6d3972159cb54 in memory
flw f20, 0(x2) # load 0xbcd6d3972159cb54 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fnmadd.s f2, f6, f20, f23, dyn # perform operation
fnmadd.s f2, f6, f20, f23, rdn # perform operation
fnmadd.s f2, f6, f20, f23, rmm # perform operation
fnmadd.s f2, f6, f20, f23, rne # perform operation
fnmadd.s f2, f6, f20, f23, rtz # perform operation
fnmadd.s f2, f6, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x11, 0xd0f814f329386015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0xdf66bbb7f8ff653f # load x3 with value 0xdf66bbb7f8ff653f
sw x3, 0(x2) # store 0xdf66bbb7f8ff653f in memory
flw f26, 0(x2) # load 0xdf66bbb7f8ff653f from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f11, f30, f26, f29, dyn # perform operation
fnmadd.s f11, f30, f26, f29, rdn # perform operation
fnmadd.s f11, f30, f26, f29, rmm # perform operation
fnmadd.s f11, f30, f26, f29, rne # perform operation
fnmadd.s f11, f30, f26, f29, rtz # perform operation
fnmadd.s f11, f30, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x3, 0x052ef75c78342055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xee3934db5397d243 # load x3 with value 0xee3934db5397d243
sw x3, 0(x2) # store 0xee3934db5397d243 in memory
flw f9, 0(x2) # load 0xee3934db5397d243 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fnmadd.s f3, f20, f9, f19, dyn # perform operation
fnmadd.s f3, f20, f9, f19, rdn # perform operation
fnmadd.s f3, f20, f9, f19, rmm # perform operation
fnmadd.s f3, f20, f9, f19, rne # perform operation
fnmadd.s f3, f20, f9, f19, rtz # perform operation
fnmadd.s f3, f20, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f20, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f20, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f20, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f20, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f20, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x26, 0x1114223c63cc6ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x84aa91e65579b7c # load x3 with value 0x84aa91e65579b7c
sw x3, 0(x2) # store 0x84aa91e65579b7c in memory
flw f30, 0(x2) # load 0x84aa91e65579b7c from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f26, f15, f30, f14, dyn # perform operation
fnmadd.s f26, f15, f30, f14, rdn # perform operation
fnmadd.s f26, f15, f30, f14, rmm # perform operation
fnmadd.s f26, f15, f30, f14, rne # perform operation
fnmadd.s f26, f15, f30, f14, rtz # perform operation
fnmadd.s f26, f15, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f15, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x14, 0x6a9e174a5191c98f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x30055d7a34f976b1 # load x3 with value 0x30055d7a34f976b1
sw x3, 0(x2) # store 0x30055d7a34f976b1 in memory
flw f20, 0(x2) # load 0x30055d7a34f976b1 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f14, f2, f20, f24, dyn # perform operation
fnmadd.s f14, f2, f20, f24, rdn # perform operation
fnmadd.s f14, f2, f20, f24, rmm # perform operation
fnmadd.s f14, f2, f20, f24, rne # perform operation
fnmadd.s f14, f2, f20, f24, rtz # perform operation
fnmadd.s f14, f2, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f2, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f2, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f2, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f2, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f2, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x1, 0x3995fe130f7e5a0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x9cf7bd24e8f1f78b # load x3 with value 0x9cf7bd24e8f1f78b
sw x3, 0(x2) # store 0x9cf7bd24e8f1f78b in memory
flw f28, 0(x2) # load 0x9cf7bd24e8f1f78b from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmadd.s f1, f9, f28, f20, dyn # perform operation
fnmadd.s f1, f9, f28, f20, rdn # perform operation
fnmadd.s f1, f9, f28, f20, rmm # perform operation
fnmadd.s f1, f9, f28, f20, rne # perform operation
fnmadd.s f1, f9, f28, f20, rtz # perform operation
fnmadd.s f1, f9, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f9, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x6, 0xc6a3f2466d873162 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x4193fc5c4d451f9c # load x3 with value 0x4193fc5c4d451f9c
sw x3, 0(x2) # store 0x4193fc5c4d451f9c in memory
flw f31, 0(x2) # load 0x4193fc5c4d451f9c from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.s f6, f23, f31, f25, dyn # perform operation
fnmadd.s f6, f23, f31, f25, rdn # perform operation
fnmadd.s f6, f23, f31, f25, rmm # perform operation
fnmadd.s f6, f23, f31, f25, rne # perform operation
fnmadd.s f6, f23, f31, f25, rtz # perform operation
fnmadd.s f6, f23, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x30, 0xd4c61ab398ef926a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x527c04a156fac03 # load x3 with value 0x527c04a156fac03
sw x3, 0(x2) # store 0x527c04a156fac03 in memory
flw f26, 0(x2) # load 0x527c04a156fac03 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmadd.s f30, f3, f26, f24, dyn # perform operation
fnmadd.s f30, f3, f26, f24, rdn # perform operation
fnmadd.s f30, f3, f26, f24, rmm # perform operation
fnmadd.s f30, f3, f26, f24, rne # perform operation
fnmadd.s f30, f3, f26, f24, rtz # perform operation
fnmadd.s f30, f3, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f3, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f3, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x5, 0x9ae3c22bbecfec24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0xd150d1fc105300b6 # load x3 with value 0xd150d1fc105300b6
sw x3, 0(x2) # store 0xd150d1fc105300b6 in memory
flw f12, 0(x2) # load 0xd150d1fc105300b6 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmadd.s f5, f22, f12, f26, dyn # perform operation
fnmadd.s f5, f22, f12, f26, rdn # perform operation
fnmadd.s f5, f22, f12, f26, rmm # perform operation
fnmadd.s f5, f22, f12, f26, rne # perform operation
fnmadd.s f5, f22, f12, f26, rtz # perform operation
fnmadd.s f5, f22, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x11, 0x56c1f36f5e53eef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x51449bfa1e7cf879 # load x3 with value 0x51449bfa1e7cf879
sw x3, 0(x2) # store 0x51449bfa1e7cf879 in memory
flw f27, 0(x2) # load 0x51449bfa1e7cf879 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmadd.s f11, f14, f27, f31, dyn # perform operation
fnmadd.s f11, f14, f27, f31, rdn # perform operation
fnmadd.s f11, f14, f27, f31, rmm # perform operation
fnmadd.s f11, f14, f27, f31, rne # perform operation
fnmadd.s f11, f14, f27, f31, rtz # perform operation
fnmadd.s f11, f14, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x14, 0xb899623a5ce0ae15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x619c9801d44a7037 # load x3 with value 0x619c9801d44a7037
sw x3, 0(x2) # store 0x619c9801d44a7037 in memory
flw f4, 0(x2) # load 0x619c9801d44a7037 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f14, f28, f4, f27, dyn # perform operation
fnmadd.s f14, f28, f4, f27, rdn # perform operation
fnmadd.s f14, f28, f4, f27, rmm # perform operation
fnmadd.s f14, f28, f4, f27, rne # perform operation
fnmadd.s f14, f28, f4, f27, rtz # perform operation
fnmadd.s f14, f28, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f28, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x22, 0x310dd86507a81acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xc4179b6d55c2e52a # load x3 with value 0xc4179b6d55c2e52a
sw x3, 0(x2) # store 0xc4179b6d55c2e52a in memory
flw f14, 0(x2) # load 0xc4179b6d55c2e52a from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmadd.s f22, f28, f14, f18, dyn # perform operation
fnmadd.s f22, f28, f14, f18, rdn # perform operation
fnmadd.s f22, f28, f14, f18, rmm # perform operation
fnmadd.s f22, f28, f14, f18, rne # perform operation
fnmadd.s f22, f28, f14, f18, rtz # perform operation
fnmadd.s f22, f28, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x27, 0x9a16aa45f11d5dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xb19ae33596b9dd27 # load x3 with value 0xb19ae33596b9dd27
sw x3, 0(x2) # store 0xb19ae33596b9dd27 in memory
flw f1, 0(x2) # load 0xb19ae33596b9dd27 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmadd.s f27, f16, f1, f12, dyn # perform operation
fnmadd.s f27, f16, f1, f12, rdn # perform operation
fnmadd.s f27, f16, f1, f12, rmm # perform operation
fnmadd.s f27, f16, f1, f12, rne # perform operation
fnmadd.s f27, f16, f1, f12, rtz # perform operation
fnmadd.s f27, f16, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x15, 0x0b613508036482fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xd5f5fd3d1593c5ff # load x3 with value 0xd5f5fd3d1593c5ff
sw x3, 0(x2) # store 0xd5f5fd3d1593c5ff in memory
flw f31, 0(x2) # load 0xd5f5fd3d1593c5ff from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmadd.s f15, f3, f31, f24, dyn # perform operation
fnmadd.s f15, f3, f31, f24, rdn # perform operation
fnmadd.s f15, f3, f31, f24, rmm # perform operation
fnmadd.s f15, f3, f31, f24, rne # perform operation
fnmadd.s f15, f3, f31, f24, rtz # perform operation
fnmadd.s f15, f3, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x12, 0x63e4ed6948efe418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0xa9c3a777fc156c18 # load x3 with value 0xa9c3a777fc156c18
sw x3, 0(x2) # store 0xa9c3a777fc156c18 in memory
flw f16, 0(x2) # load 0xa9c3a777fc156c18 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f12, f11, f16, f6, dyn # perform operation
fnmadd.s f12, f11, f16, f6, rdn # perform operation
fnmadd.s f12, f11, f16, f6, rmm # perform operation
fnmadd.s f12, f11, f16, f6, rne # perform operation
fnmadd.s f12, f11, f16, f6, rtz # perform operation
fnmadd.s f12, f11, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x13, 0x82c2d256e453370e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xa15c26121fe0cde1 # load x3 with value 0xa15c26121fe0cde1
sw x3, 0(x2) # store 0xa15c26121fe0cde1 in memory
flw f7, 0(x2) # load 0xa15c26121fe0cde1 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmadd.s f13, f12, f7, f24, dyn # perform operation
fnmadd.s f13, f12, f7, f24, rdn # perform operation
fnmadd.s f13, f12, f7, f24, rmm # perform operation
fnmadd.s f13, f12, f7, f24, rne # perform operation
fnmadd.s f13, f12, f7, f24, rtz # perform operation
fnmadd.s f13, f12, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x7, 0x210a8da255229b19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xc1555c58c2e85758 # load x3 with value 0xc1555c58c2e85758
sw x3, 0(x2) # store 0xc1555c58c2e85758 in memory
flw f3, 0(x2) # load 0xc1555c58c2e85758 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f7, f5, f3, f24, dyn # perform operation
fnmadd.s f7, f5, f3, f24, rdn # perform operation
fnmadd.s f7, f5, f3, f24, rmm # perform operation
fnmadd.s f7, f5, f3, f24, rne # perform operation
fnmadd.s f7, f5, f3, f24, rtz # perform operation
fnmadd.s f7, f5, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x12, 0x9eaced74f41ffe4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x419fd33b0410c41e # load x3 with value 0x419fd33b0410c41e
sw x3, 0(x2) # store 0x419fd33b0410c41e in memory
flw f24, 0(x2) # load 0x419fd33b0410c41e from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmadd.s f12, f15, f24, f28, dyn # perform operation
fnmadd.s f12, f15, f24, f28, rdn # perform operation
fnmadd.s f12, f15, f24, f28, rmm # perform operation
fnmadd.s f12, f15, f24, f28, rne # perform operation
fnmadd.s f12, f15, f24, f28, rtz # perform operation
fnmadd.s f12, f15, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x29, 0x5875e5de7de6193b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x62aa199a2218cd94 # load x3 with value 0x62aa199a2218cd94
sw x3, 0(x2) # store 0x62aa199a2218cd94 in memory
flw f7, 0(x2) # load 0x62aa199a2218cd94 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmadd.s f29, f21, f7, f6, dyn # perform operation
fnmadd.s f29, f21, f7, f6, rdn # perform operation
fnmadd.s f29, f21, f7, f6, rmm # perform operation
fnmadd.s f29, f21, f7, f6, rne # perform operation
fnmadd.s f29, f21, f7, f6, rtz # perform operation
fnmadd.s f29, f21, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x27, 0xcddaa713b14ac776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xf779428bb582140f # load x3 with value 0xf779428bb582140f
sw x3, 0(x2) # store 0xf779428bb582140f in memory
flw f26, 0(x2) # load 0xf779428bb582140f from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f27, f8, f26, f29, dyn # perform operation
fnmadd.s f27, f8, f26, f29, rdn # perform operation
fnmadd.s f27, f8, f26, f29, rmm # perform operation
fnmadd.s f27, f8, f26, f29, rne # perform operation
fnmadd.s f27, f8, f26, f29, rtz # perform operation
fnmadd.s f27, f8, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x29, 0xc7ef776e314977bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xdc510c8dcb3cd2dd # load x3 with value 0xdc510c8dcb3cd2dd
sw x3, 0(x2) # store 0xdc510c8dcb3cd2dd in memory
flw f28, 0(x2) # load 0xdc510c8dcb3cd2dd from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f29, f25, f28, f16, dyn # perform operation
fnmadd.s f29, f25, f28, f16, rdn # perform operation
fnmadd.s f29, f25, f28, f16, rmm # perform operation
fnmadd.s f29, f25, f28, f16, rne # perform operation
fnmadd.s f29, f25, f28, f16, rtz # perform operation
fnmadd.s f29, f25, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x13, 0x8a61570a7067ca45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xd5091b26a73f1115 # load x3 with value 0xd5091b26a73f1115
sw x3, 0(x2) # store 0xd5091b26a73f1115 in memory
flw f9, 0(x2) # load 0xd5091b26a73f1115 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmadd.s f13, f4, f9, f30, dyn # perform operation
fnmadd.s f13, f4, f9, f30, rdn # perform operation
fnmadd.s f13, f4, f9, f30, rmm # perform operation
fnmadd.s f13, f4, f9, f30, rne # perform operation
fnmadd.s f13, f4, f9, f30, rtz # perform operation
fnmadd.s f13, f4, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f4, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f4, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f4, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f4, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f4, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x30, 0x9f132cd81ec78352 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x8d53627b12822929 # load x3 with value 0x8d53627b12822929
sw x3, 0(x2) # store 0x8d53627b12822929 in memory
flw f10, 0(x2) # load 0x8d53627b12822929 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmadd.s f30, f4, f10, f20, dyn # perform operation
fnmadd.s f30, f4, f10, f20, rdn # perform operation
fnmadd.s f30, f4, f10, f20, rmm # perform operation
fnmadd.s f30, f4, f10, f20, rne # perform operation
fnmadd.s f30, f4, f10, f20, rtz # perform operation
fnmadd.s f30, f4, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f4, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x23, 0x1213e79a69184f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xe719ddf5155032fb # load x3 with value 0xe719ddf5155032fb
sw x3, 0(x2) # store 0xe719ddf5155032fb in memory
flw f5, 0(x2) # load 0xe719ddf5155032fb from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmadd.s f23, f6, f5, f1, dyn # perform operation
fnmadd.s f23, f6, f5, f1, rdn # perform operation
fnmadd.s f23, f6, f5, f1, rmm # perform operation
fnmadd.s f23, f6, f5, f1, rne # perform operation
fnmadd.s f23, f6, f5, f1, rtz # perform operation
fnmadd.s f23, f6, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x2, 0x05f4ec454a2128cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x93c328c1d3aadd90 # load x3 with value 0x93c328c1d3aadd90
sw x3, 0(x2) # store 0x93c328c1d3aadd90 in memory
flw f8, 0(x2) # load 0x93c328c1d3aadd90 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fnmadd.s f2, f23, f8, f26, dyn # perform operation
fnmadd.s f2, f23, f8, f26, rdn # perform operation
fnmadd.s f2, f23, f8, f26, rmm # perform operation
fnmadd.s f2, f23, f8, f26, rne # perform operation
fnmadd.s f2, f23, f8, f26, rtz # perform operation
fnmadd.s f2, f23, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x19, 0xc6e2c3a9c1931d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x458060b28c44010d # load x3 with value 0x458060b28c44010d
sw x3, 0(x2) # store 0x458060b28c44010d in memory
flw f20, 0(x2) # load 0x458060b28c44010d from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmadd.s f19, f27, f20, f17, dyn # perform operation
fnmadd.s f19, f27, f20, f17, rdn # perform operation
fnmadd.s f19, f27, f20, f17, rmm # perform operation
fnmadd.s f19, f27, f20, f17, rne # perform operation
fnmadd.s f19, f27, f20, f17, rtz # perform operation
fnmadd.s f19, f27, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f27, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f27, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f27, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f27, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f27, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x19, 0x7f6e17795e9876cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x66d00fb021f86f66 # load x3 with value 0x66d00fb021f86f66
sw x3, 0(x2) # store 0x66d00fb021f86f66 in memory
flw f16, 0(x2) # load 0x66d00fb021f86f66 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmadd.s f19, f6, f16, f11, dyn # perform operation
fnmadd.s f19, f6, f16, f11, rdn # perform operation
fnmadd.s f19, f6, f16, f11, rmm # perform operation
fnmadd.s f19, f6, f16, f11, rne # perform operation
fnmadd.s f19, f6, f16, f11, rtz # perform operation
fnmadd.s f19, f6, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x28, 0x789cd6208f6a21fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x252504dfd0cee136 # load x3 with value 0x252504dfd0cee136
sw x3, 0(x2) # store 0x252504dfd0cee136 in memory
flw f26, 0(x2) # load 0x252504dfd0cee136 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f28, f15, f26, f10, dyn # perform operation
fnmadd.s f28, f15, f26, f10, rdn # perform operation
fnmadd.s f28, f15, f26, f10, rmm # perform operation
fnmadd.s f28, f15, f26, f10, rne # perform operation
fnmadd.s f28, f15, f26, f10, rtz # perform operation
fnmadd.s f28, f15, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f15, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x25, 0x02e1e385b03193b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x77e1a95919afbf28 # load x3 with value 0x77e1a95919afbf28
sw x3, 0(x2) # store 0x77e1a95919afbf28 in memory
flw f24, 0(x2) # load 0x77e1a95919afbf28 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f25, f26, f24, f20, dyn # perform operation
fnmadd.s f25, f26, f24, f20, rdn # perform operation
fnmadd.s f25, f26, f24, f20, rmm # perform operation
fnmadd.s f25, f26, f24, f20, rne # perform operation
fnmadd.s f25, f26, f24, f20, rtz # perform operation
fnmadd.s f25, f26, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x24, 0x625017c4f7960cab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xef63f95f387d7d6f # load x3 with value 0xef63f95f387d7d6f
sw x3, 0(x2) # store 0xef63f95f387d7d6f in memory
flw f26, 0(x2) # load 0xef63f95f387d7d6f from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fnmadd.s f24, f7, f26, f28, dyn # perform operation
fnmadd.s f24, f7, f26, f28, rdn # perform operation
fnmadd.s f24, f7, f26, f28, rmm # perform operation
fnmadd.s f24, f7, f26, f28, rne # perform operation
fnmadd.s f24, f7, f26, f28, rtz # perform operation
fnmadd.s f24, f7, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f7, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f7, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f7, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f7, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f7, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x20, 0x7f5529e343996b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0xcefbd0833f6686a7 # load x3 with value 0xcefbd0833f6686a7
sw x3, 0(x2) # store 0xcefbd0833f6686a7 in memory
flw f16, 0(x2) # load 0xcefbd0833f6686a7 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmadd.s f20, f23, f16, f21, dyn # perform operation
fnmadd.s f20, f23, f16, f21, rdn # perform operation
fnmadd.s f20, f23, f16, f21, rmm # perform operation
fnmadd.s f20, f23, f16, f21, rne # perform operation
fnmadd.s f20, f23, f16, f21, rtz # perform operation
fnmadd.s f20, f23, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x13, 0xa886a891f27ad5df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xa766b3d6b9341803 # load x3 with value 0xa766b3d6b9341803
sw x3, 0(x2) # store 0xa766b3d6b9341803 in memory
flw f3, 0(x2) # load 0xa766b3d6b9341803 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmadd.s f13, f7, f3, f11, dyn # perform operation
fnmadd.s f13, f7, f3, f11, rdn # perform operation
fnmadd.s f13, f7, f3, f11, rmm # perform operation
fnmadd.s f13, f7, f3, f11, rne # perform operation
fnmadd.s f13, f7, f3, f11, rtz # perform operation
fnmadd.s f13, f7, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f7, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x10, 0xc64ba0a2bf2eb67d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xc05de3bd5d402735 # load x3 with value 0xc05de3bd5d402735
sw x3, 0(x2) # store 0xc05de3bd5d402735 in memory
flw f22, 0(x2) # load 0xc05de3bd5d402735 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.s f10, f15, f22, f18, dyn # perform operation
fnmadd.s f10, f15, f22, f18, rdn # perform operation
fnmadd.s f10, f15, f22, f18, rmm # perform operation
fnmadd.s f10, f15, f22, f18, rne # perform operation
fnmadd.s f10, f15, f22, f18, rtz # perform operation
fnmadd.s f10, f15, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x12, 0x31277c8ccc254124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x3998e061fd165a8b # load x3 with value 0x3998e061fd165a8b
sw x3, 0(x2) # store 0x3998e061fd165a8b in memory
flw f5, 0(x2) # load 0x3998e061fd165a8b from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fnmadd.s f12, f24, f5, f26, dyn # perform operation
fnmadd.s f12, f24, f5, f26, rdn # perform operation
fnmadd.s f12, f24, f5, f26, rmm # perform operation
fnmadd.s f12, f24, f5, f26, rne # perform operation
fnmadd.s f12, f24, f5, f26, rtz # perform operation
fnmadd.s f12, f24, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f24, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x17, 0x30e4852d70731e4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xfa4a41b25c060af # load x3 with value 0xfa4a41b25c060af
sw x3, 0(x2) # store 0xfa4a41b25c060af in memory
flw f24, 0(x2) # load 0xfa4a41b25c060af from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmadd.s f17, f25, f24, f22, dyn # perform operation
fnmadd.s f17, f25, f24, f22, rdn # perform operation
fnmadd.s f17, f25, f24, f22, rmm # perform operation
fnmadd.s f17, f25, f24, f22, rne # perform operation
fnmadd.s f17, f25, f24, f22, rtz # perform operation
fnmadd.s f17, f25, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x29, 0xf913b58f02e6bd82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x6b0242f9cdd10175 # load x3 with value 0x6b0242f9cdd10175
sw x3, 0(x2) # store 0x6b0242f9cdd10175 in memory
flw f27, 0(x2) # load 0x6b0242f9cdd10175 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fnmadd.s f29, f20, f27, f3, dyn # perform operation
fnmadd.s f29, f20, f27, f3, rdn # perform operation
fnmadd.s f29, f20, f27, f3, rmm # perform operation
fnmadd.s f29, f20, f27, f3, rne # perform operation
fnmadd.s f29, f20, f27, f3, rtz # perform operation
fnmadd.s f29, f20, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f27, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x27, 0x53d17b5cc9492121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0xbcd4536a2a07b4f6 # load x3 with value 0xbcd4536a2a07b4f6
sw x3, 0(x2) # store 0xbcd4536a2a07b4f6 in memory
flw f7, 0(x2) # load 0xbcd4536a2a07b4f6 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f27, f23, f7, f3, dyn # perform operation
fnmadd.s f27, f23, f7, f3, rdn # perform operation
fnmadd.s f27, f23, f7, f3, rmm # perform operation
fnmadd.s f27, f23, f7, f3, rne # perform operation
fnmadd.s f27, f23, f7, f3, rtz # perform operation
fnmadd.s f27, f23, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f23, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x1, 0xef9452ec14d1a21e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xcd35a5ed9d5147a # load x3 with value 0xcd35a5ed9d5147a
sw x3, 0(x2) # store 0xcd35a5ed9d5147a in memory
flw f11, 0(x2) # load 0xcd35a5ed9d5147a from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmadd.s f1, f31, f11, f28, dyn # perform operation
fnmadd.s f1, f31, f11, f28, rdn # perform operation
fnmadd.s f1, f31, f11, f28, rmm # perform operation
fnmadd.s f1, f31, f11, f28, rne # perform operation
fnmadd.s f1, f31, f11, f28, rtz # perform operation
fnmadd.s f1, f31, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x26, 0x8fa50e34f3fb0780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0xd8b92483389a17c8 # load x3 with value 0xd8b92483389a17c8
sw x3, 0(x2) # store 0xd8b92483389a17c8 in memory
flw f3, 0(x2) # load 0xd8b92483389a17c8 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fnmadd.s f26, f23, f3, f18, dyn # perform operation
fnmadd.s f26, f23, f3, f18, rdn # perform operation
fnmadd.s f26, f23, f3, f18, rmm # perform operation
fnmadd.s f26, f23, f3, f18, rne # perform operation
fnmadd.s f26, f23, f3, f18, rtz # perform operation
fnmadd.s f26, f23, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x31, 0x67733d127676edea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x79495fae2a676f4d # load x3 with value 0x79495fae2a676f4d
sw x3, 0(x2) # store 0x79495fae2a676f4d in memory
flw f29, 0(x2) # load 0x79495fae2a676f4d from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fnmadd.s f31, f2, f29, f18, dyn # perform operation
fnmadd.s f31, f2, f29, f18, rdn # perform operation
fnmadd.s f31, f2, f29, f18, rmm # perform operation
fnmadd.s f31, f2, f29, f18, rne # perform operation
fnmadd.s f31, f2, f29, f18, rtz # perform operation
fnmadd.s f31, f2, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x29, 0xcb09c03b7dcda5ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x7e1cb6f299e36111 # load x3 with value 0x7e1cb6f299e36111
sw x3, 0(x2) # store 0x7e1cb6f299e36111 in memory
flw f2, 0(x2) # load 0x7e1cb6f299e36111 from memory into f2
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f29, f30, f2, f28, dyn # perform operation
fnmadd.s f29, f30, f2, f28, rdn # perform operation
fnmadd.s f29, f30, f2, f28, rmm # perform operation
fnmadd.s f29, f30, f2, f28, rne # perform operation
fnmadd.s f29, f30, f2, f28, rtz # perform operation
fnmadd.s f29, f30, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x20, 0xd0e7eb1b17d8b730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xee0a363d25bb632 # load x3 with value 0xee0a363d25bb632
sw x3, 0(x2) # store 0xee0a363d25bb632 in memory
flw f14, 0(x2) # load 0xee0a363d25bb632 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmadd.s f20, f26, f14, f27, dyn # perform operation
fnmadd.s f20, f26, f14, f27, rdn # perform operation
fnmadd.s f20, f26, f14, f27, rmm # perform operation
fnmadd.s f20, f26, f14, f27, rne # perform operation
fnmadd.s f20, f26, f14, f27, rtz # perform operation
fnmadd.s f20, f26, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x1, 0xb3942f425a8ba0e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xf5bee116915a6685 # load x3 with value 0xf5bee116915a6685
sw x3, 0(x2) # store 0xf5bee116915a6685 in memory
flw f2, 0(x2) # load 0xf5bee116915a6685 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f1, f16, f2, f15, dyn # perform operation
fnmadd.s f1, f16, f2, f15, rdn # perform operation
fnmadd.s f1, f16, f2, f15, rmm # perform operation
fnmadd.s f1, f16, f2, f15, rne # perform operation
fnmadd.s f1, f16, f2, f15, rtz # perform operation
fnmadd.s f1, f16, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x4, 0xc47f6e24f3e6a83d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x646a66decc10070c # load x3 with value 0x646a66decc10070c
sw x3, 0(x2) # store 0x646a66decc10070c in memory
flw f26, 0(x2) # load 0x646a66decc10070c from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmadd.s f4, f22, f26, f23, dyn # perform operation
fnmadd.s f4, f22, f26, f23, rdn # perform operation
fnmadd.s f4, f22, f26, f23, rmm # perform operation
fnmadd.s f4, f22, f26, f23, rne # perform operation
fnmadd.s f4, f22, f26, f23, rtz # perform operation
fnmadd.s f4, f22, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f22, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x22, 0xa5b2a72014ed4420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xb962e1af3028a61a # load x3 with value 0xb962e1af3028a61a
sw x3, 0(x2) # store 0xb962e1af3028a61a in memory
flw f30, 0(x2) # load 0xb962e1af3028a61a from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fnmadd.s f22, f18, f30, f1, dyn # perform operation
fnmadd.s f22, f18, f30, f1, rdn # perform operation
fnmadd.s f22, f18, f30, f1, rmm # perform operation
fnmadd.s f22, f18, f30, f1, rne # perform operation
fnmadd.s f22, f18, f30, f1, rtz # perform operation
fnmadd.s f22, f18, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x29, 0xb9cc9fac0c91b879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x10c53d0ba2b8630c # load x3 with value 0x10c53d0ba2b8630c
sw x3, 0(x2) # store 0x10c53d0ba2b8630c in memory
flw f6, 0(x2) # load 0x10c53d0ba2b8630c from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fnmadd.s f29, f3, f6, f9, dyn # perform operation
fnmadd.s f29, f3, f6, f9, rdn # perform operation
fnmadd.s f29, f3, f6, f9, rmm # perform operation
fnmadd.s f29, f3, f6, f9, rne # perform operation
fnmadd.s f29, f3, f6, f9, rtz # perform operation
fnmadd.s f29, f3, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x8, 0xdebea2ee329279a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x3cd66f6d98523954 # load x3 with value 0x3cd66f6d98523954
sw x3, 0(x2) # store 0x3cd66f6d98523954 in memory
flw f13, 0(x2) # load 0x3cd66f6d98523954 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f8, f12, f13, f7, dyn # perform operation
fnmadd.s f8, f12, f13, f7, rdn # perform operation
fnmadd.s f8, f12, f13, f7, rmm # perform operation
fnmadd.s f8, f12, f13, f7, rne # perform operation
fnmadd.s f8, f12, f13, f7, rtz # perform operation
fnmadd.s f8, f12, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x9, 0x86e7fe2e5d999493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x9e58f134d7ee2e96 # load x3 with value 0x9e58f134d7ee2e96
sw x3, 0(x2) # store 0x9e58f134d7ee2e96 in memory
flw f17, 0(x2) # load 0x9e58f134d7ee2e96 from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmadd.s f9, f19, f17, f28, dyn # perform operation
fnmadd.s f9, f19, f17, f28, rdn # perform operation
fnmadd.s f9, f19, f17, f28, rmm # perform operation
fnmadd.s f9, f19, f17, f28, rne # perform operation
fnmadd.s f9, f19, f17, f28, rtz # perform operation
fnmadd.s f9, f19, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x26, 0xbf6da7f57ba35429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xed3013dc39a0765c # load x3 with value 0xed3013dc39a0765c
sw x3, 0(x2) # store 0xed3013dc39a0765c in memory
flw f22, 0(x2) # load 0xed3013dc39a0765c from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmadd.s f26, f28, f22, f3, dyn # perform operation
fnmadd.s f26, f28, f22, f3, rdn # perform operation
fnmadd.s f26, f28, f22, f3, rmm # perform operation
fnmadd.s f26, f28, f22, f3, rne # perform operation
fnmadd.s f26, f28, f22, f3, rtz # perform operation
fnmadd.s f26, f28, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x28, 0xf276d9f4640cb9c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x240ba092b57d3c2 # load x3 with value 0x240ba092b57d3c2
sw x3, 0(x2) # store 0x240ba092b57d3c2 in memory
flw f7, 0(x2) # load 0x240ba092b57d3c2 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmadd.s f28, f26, f7, f3, dyn # perform operation
fnmadd.s f28, f26, f7, f3, rdn # perform operation
fnmadd.s f28, f26, f7, f3, rmm # perform operation
fnmadd.s f28, f26, f7, f3, rne # perform operation
fnmadd.s f28, f26, f7, f3, rtz # perform operation
fnmadd.s f28, f26, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f26, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x30, 0x324b222f12c8a8a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xa43b7610d95864b # load x3 with value 0xa43b7610d95864b
sw x3, 0(x2) # store 0xa43b7610d95864b in memory
flw f21, 0(x2) # load 0xa43b7610d95864b from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmadd.s f30, f18, f21, f7, dyn # perform operation
fnmadd.s f30, f18, f21, f7, rdn # perform operation
fnmadd.s f30, f18, f21, f7, rmm # perform operation
fnmadd.s f30, f18, f21, f7, rne # perform operation
fnmadd.s f30, f18, f21, f7, rtz # perform operation
fnmadd.s f30, f18, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x31, 0x4782cad19a43de0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xb69e973dfd452a09 # load x3 with value 0xb69e973dfd452a09
sw x3, 0(x2) # store 0xb69e973dfd452a09 in memory
flw f18, 0(x2) # load 0xb69e973dfd452a09 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fnmadd.s f31, f28, f18, f9, dyn # perform operation
fnmadd.s f31, f28, f18, f9, rdn # perform operation
fnmadd.s f31, f28, f18, f9, rmm # perform operation
fnmadd.s f31, f28, f18, f9, rne # perform operation
fnmadd.s f31, f28, f18, f9, rtz # perform operation
fnmadd.s f31, f28, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f28, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f28, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x13, 0x9db7a4f3f081d7a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xac03435a97eaee58 # load x3 with value 0xac03435a97eaee58
sw x3, 0(x2) # store 0xac03435a97eaee58 in memory
flw f18, 0(x2) # load 0xac03435a97eaee58 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmadd.s f13, f27, f18, f14, dyn # perform operation
fnmadd.s f13, f27, f18, f14, rdn # perform operation
fnmadd.s f13, f27, f18, f14, rmm # perform operation
fnmadd.s f13, f27, f18, f14, rne # perform operation
fnmadd.s f13, f27, f18, f14, rtz # perform operation
fnmadd.s f13, f27, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f27, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x1, 0xfbff137e5dac0365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x1de4714f8156f25b # load x3 with value 0x1de4714f8156f25b
sw x3, 0(x2) # store 0x1de4714f8156f25b in memory
flw f14, 0(x2) # load 0x1de4714f8156f25b from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f1, f30, f14, f10, dyn # perform operation
fnmadd.s f1, f30, f14, f10, rdn # perform operation
fnmadd.s f1, f30, f14, f10, rmm # perform operation
fnmadd.s f1, f30, f14, f10, rne # perform operation
fnmadd.s f1, f30, f14, f10, rtz # perform operation
fnmadd.s f1, f30, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f30, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x22, 0x7b076b3f1ddfbc78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xbbeb1b3ccb1194b9 # load x3 with value 0xbbeb1b3ccb1194b9
sw x3, 0(x2) # store 0xbbeb1b3ccb1194b9 in memory
flw f24, 0(x2) # load 0xbbeb1b3ccb1194b9 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmadd.s f22, f4, f24, f8, dyn # perform operation
fnmadd.s f22, f4, f24, f8, rdn # perform operation
fnmadd.s f22, f4, f24, f8, rmm # perform operation
fnmadd.s f22, f4, f24, f8, rne # perform operation
fnmadd.s f22, f4, f24, f8, rtz # perform operation
fnmadd.s f22, f4, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f4, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f4, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f4, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f4, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f4, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x26, 0x49d0f968396c8603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x944c92608823a5db # load x3 with value 0x944c92608823a5db
sw x3, 0(x2) # store 0x944c92608823a5db in memory
flw f2, 0(x2) # load 0x944c92608823a5db from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f26, f3, f2, f8, dyn # perform operation
fnmadd.s f26, f3, f2, f8, rdn # perform operation
fnmadd.s f26, f3, f2, f8, rmm # perform operation
fnmadd.s f26, f3, f2, f8, rne # perform operation
fnmadd.s f26, f3, f2, f8, rtz # perform operation
fnmadd.s f26, f3, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x2, 0x174939b565dc9d49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xf26c3ee67c7a43ef # load x3 with value 0xf26c3ee67c7a43ef
sw x3, 0(x2) # store 0xf26c3ee67c7a43ef in memory
flw f31, 0(x2) # load 0xf26c3ee67c7a43ef from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmadd.s f2, f28, f31, f3, dyn # perform operation
fnmadd.s f2, f28, f31, f3, rdn # perform operation
fnmadd.s f2, f28, f31, f3, rmm # perform operation
fnmadd.s f2, f28, f31, f3, rne # perform operation
fnmadd.s f2, f28, f31, f3, rtz # perform operation
fnmadd.s f2, f28, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x25, 0x8b6c2e4bf095bc65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0x5144e603d57df2f7 # load x3 with value 0x5144e603d57df2f7
sw x3, 0(x2) # store 0x5144e603d57df2f7 in memory
flw f20, 0(x2) # load 0x5144e603d57df2f7 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmadd.s f25, f31, f20, f19, dyn # perform operation
fnmadd.s f25, f31, f20, f19, rdn # perform operation
fnmadd.s f25, f31, f20, f19, rmm # perform operation
fnmadd.s f25, f31, f20, f19, rne # perform operation
fnmadd.s f25, f31, f20, f19, rtz # perform operation
fnmadd.s f25, f31, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f31, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x2, 0x4ef7b37509f75440 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0xc0b50af91656f7a2 # load x3 with value 0xc0b50af91656f7a2
sw x3, 0(x2) # store 0xc0b50af91656f7a2 in memory
flw f23, 0(x2) # load 0xc0b50af91656f7a2 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fnmadd.s f2, f20, f23, f24, dyn # perform operation
fnmadd.s f2, f20, f23, f24, rdn # perform operation
fnmadd.s f2, f20, f23, f24, rmm # perform operation
fnmadd.s f2, f20, f23, f24, rne # perform operation
fnmadd.s f2, f20, f23, f24, rtz # perform operation
fnmadd.s f2, f20, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f23, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x12, 0x51a4cb0cd3f78d15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x293fdac3c452b58d # load x3 with value 0x293fdac3c452b58d
sw x3, 0(x2) # store 0x293fdac3c452b58d in memory
flw f13, 0(x2) # load 0x293fdac3c452b58d from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmadd.s f12, f7, f13, f15, dyn # perform operation
fnmadd.s f12, f7, f13, f15, rdn # perform operation
fnmadd.s f12, f7, f13, f15, rmm # perform operation
fnmadd.s f12, f7, f13, f15, rne # perform operation
fnmadd.s f12, f7, f13, f15, rtz # perform operation
fnmadd.s f12, f7, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f7, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f7, f13, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x5, 0xa4c439d8fd66a68c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x2417ff914dbf5da0 # load x3 with value 0x2417ff914dbf5da0
sw x3, 0(x2) # store 0x2417ff914dbf5da0 in memory
flw f25, 0(x2) # load 0x2417ff914dbf5da0 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmadd.s f5, f16, f25, f22, dyn # perform operation
fnmadd.s f5, f16, f25, f22, rdn # perform operation
fnmadd.s f5, f16, f25, f22, rmm # perform operation
fnmadd.s f5, f16, f25, f22, rne # perform operation
fnmadd.s f5, f16, f25, f22, rtz # perform operation
fnmadd.s f5, f16, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f16, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f16, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f16, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f16, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f16, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x10, 0x3486a343f3f66de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0xc185ab17dc657276 # load x3 with value 0xc185ab17dc657276
sw x3, 0(x2) # store 0xc185ab17dc657276 in memory
flw f17, 0(x2) # load 0xc185ab17dc657276 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmadd.s f10, f3, f17, f26, dyn # perform operation
fnmadd.s f10, f3, f17, f26, rdn # perform operation
fnmadd.s f10, f3, f17, f26, rmm # perform operation
fnmadd.s f10, f3, f17, f26, rne # perform operation
fnmadd.s f10, f3, f17, f26, rtz # perform operation
fnmadd.s f10, f3, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f3, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f3, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f3, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f3, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f3, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x4, 0x350574d1e4b07538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xb179c1148d41d18f # load x3 with value 0xb179c1148d41d18f
sw x3, 0(x2) # store 0xb179c1148d41d18f in memory
flw f10, 0(x2) # load 0xb179c1148d41d18f from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f4, f25, f10, f16, dyn # perform operation
fnmadd.s f4, f25, f10, f16, rdn # perform operation
fnmadd.s f4, f25, f10, f16, rmm # perform operation
fnmadd.s f4, f25, f10, f16, rne # perform operation
fnmadd.s f4, f25, f10, f16, rtz # perform operation
fnmadd.s f4, f25, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f25, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f25, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x14, 0x2693ab2782f7e699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xc6859120f99466ec # load x3 with value 0xc6859120f99466ec
sw x3, 0(x2) # store 0xc6859120f99466ec in memory
flw f19, 0(x2) # load 0xc6859120f99466ec from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmadd.s f14, f27, f19, f18, dyn # perform operation
fnmadd.s f14, f27, f19, f18, rdn # perform operation
fnmadd.s f14, f27, f19, f18, rmm # perform operation
fnmadd.s f14, f27, f19, f18, rne # perform operation
fnmadd.s f14, f27, f19, f18, rtz # perform operation
fnmadd.s f14, f27, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x10, 0x3f524e15149f8742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0xbfbd271de099d2ff # load x3 with value 0xbfbd271de099d2ff
sw x3, 0(x2) # store 0xbfbd271de099d2ff in memory
flw f25, 0(x2) # load 0xbfbd271de099d2ff from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmadd.s f10, f26, f25, f27, dyn # perform operation
fnmadd.s f10, f26, f25, f27, rdn # perform operation
fnmadd.s f10, f26, f25, f27, rmm # perform operation
fnmadd.s f10, f26, f25, f27, rne # perform operation
fnmadd.s f10, f26, f25, f27, rtz # perform operation
fnmadd.s f10, f26, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x18, 0xfc3fc75fc952996f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x6c974a883a540708 # load x3 with value 0x6c974a883a540708
sw x3, 0(x2) # store 0x6c974a883a540708 in memory
flw f28, 0(x2) # load 0x6c974a883a540708 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fnmadd.s f18, f22, f28, f4, dyn # perform operation
fnmadd.s f18, f22, f28, f4, rdn # perform operation
fnmadd.s f18, f22, f28, f4, rmm # perform operation
fnmadd.s f18, f22, f28, f4, rne # perform operation
fnmadd.s f18, f22, f28, f4, rtz # perform operation
fnmadd.s f18, f22, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x27, 0xfd00ba144143e86d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0xa16e8cc263d75c95 # load x3 with value 0xa16e8cc263d75c95
sw x3, 0(x2) # store 0xa16e8cc263d75c95 in memory
flw f16, 0(x2) # load 0xa16e8cc263d75c95 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmadd.s f27, f3, f16, f25, dyn # perform operation
fnmadd.s f27, f3, f16, f25, rdn # perform operation
fnmadd.s f27, f3, f16, f25, rmm # perform operation
fnmadd.s f27, f3, f16, f25, rne # perform operation
fnmadd.s f27, f3, f16, f25, rtz # perform operation
fnmadd.s f27, f3, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f3, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f3, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x15, 0x8e5fcacaa1a46bd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x93b6de48ff635245 # load x3 with value 0x93b6de48ff635245
sw x3, 0(x2) # store 0x93b6de48ff635245 in memory
flw f14, 0(x2) # load 0x93b6de48ff635245 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmadd.s f15, f5, f14, f16, dyn # perform operation
fnmadd.s f15, f5, f14, f16, rdn # perform operation
fnmadd.s f15, f5, f14, f16, rmm # perform operation
fnmadd.s f15, f5, f14, f16, rne # perform operation
fnmadd.s f15, f5, f14, f16, rtz # perform operation
fnmadd.s f15, f5, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f5, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f5, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x25, 0x01f0387428b96435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x783a269028f5faf3 # load x3 with value 0x783a269028f5faf3
sw x3, 0(x2) # store 0x783a269028f5faf3 in memory
flw f21, 0(x2) # load 0x783a269028f5faf3 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f25, f16, f21, f15, dyn # perform operation
fnmadd.s f25, f16, f21, f15, rdn # perform operation
fnmadd.s f25, f16, f21, f15, rmm # perform operation
fnmadd.s f25, f16, f21, f15, rne # perform operation
fnmadd.s f25, f16, f21, f15, rtz # perform operation
fnmadd.s f25, f16, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f16, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f16, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f16, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f16, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f16, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x28, 0x507dbcf34bb42b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xdb9e49e736565ea2 # load x3 with value 0xdb9e49e736565ea2
sw x3, 0(x2) # store 0xdb9e49e736565ea2 in memory
flw f25, 0(x2) # load 0xdb9e49e736565ea2 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f28, f10, f25, f8, dyn # perform operation
fnmadd.s f28, f10, f25, f8, rdn # perform operation
fnmadd.s f28, f10, f25, f8, rmm # perform operation
fnmadd.s f28, f10, f25, f8, rne # perform operation
fnmadd.s f28, f10, f25, f8, rtz # perform operation
fnmadd.s f28, f10, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x22, 0xeab54e6558e57f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xd07f09684ddf9fd # load x3 with value 0xd07f09684ddf9fd
sw x3, 0(x2) # store 0xd07f09684ddf9fd in memory
flw f15, 0(x2) # load 0xd07f09684ddf9fd from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmadd.s f22, f8, f15, f24, dyn # perform operation
fnmadd.s f22, f8, f15, f24, rdn # perform operation
fnmadd.s f22, f8, f15, f24, rmm # perform operation
fnmadd.s f22, f8, f15, f24, rne # perform operation
fnmadd.s f22, f8, f15, f24, rtz # perform operation
fnmadd.s f22, f8, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x6, 0xa33f279717511ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x5babbea0f25206fc # load x3 with value 0x5babbea0f25206fc
sw x3, 0(x2) # store 0x5babbea0f25206fc in memory
flw f13, 0(x2) # load 0x5babbea0f25206fc from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fnmadd.s f6, f15, f13, f9, dyn # perform operation
fnmadd.s f6, f15, f13, f9, rdn # perform operation
fnmadd.s f6, f15, f13, f9, rmm # perform operation
fnmadd.s f6, f15, f13, f9, rne # perform operation
fnmadd.s f6, f15, f13, f9, rtz # perform operation
fnmadd.s f6, f15, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x11, 0x671d2efe1b972fad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x3bb35e5dae85f423 # load x3 with value 0x3bb35e5dae85f423
sw x3, 0(x2) # store 0x3bb35e5dae85f423 in memory
flw f15, 0(x2) # load 0x3bb35e5dae85f423 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmadd.s f11, f22, f15, f3, dyn # perform operation
fnmadd.s f11, f22, f15, f3, rdn # perform operation
fnmadd.s f11, f22, f15, f3, rmm # perform operation
fnmadd.s f11, f22, f15, f3, rne # perform operation
fnmadd.s f11, f22, f15, f3, rtz # perform operation
fnmadd.s f11, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x21, 0x7155e7aec3dab623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xc41085071e17055a # load x3 with value 0xc41085071e17055a
sw x3, 0(x2) # store 0xc41085071e17055a in memory
flw f15, 0(x2) # load 0xc41085071e17055a from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fnmadd.s f21, f17, f15, f4, dyn # perform operation
fnmadd.s f21, f17, f15, f4, rdn # perform operation
fnmadd.s f21, f17, f15, f4, rmm # perform operation
fnmadd.s f21, f17, f15, f4, rne # perform operation
fnmadd.s f21, f17, f15, f4, rtz # perform operation
fnmadd.s f21, f17, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x27, 0x1885a456c668e3f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x6a985d967bcd31f5 # load x3 with value 0x6a985d967bcd31f5
sw x3, 0(x2) # store 0x6a985d967bcd31f5 in memory
flw f4, 0(x2) # load 0x6a985d967bcd31f5 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmadd.s f27, f25, f4, f12, dyn # perform operation
fnmadd.s f27, f25, f4, f12, rdn # perform operation
fnmadd.s f27, f25, f4, f12, rmm # perform operation
fnmadd.s f27, f25, f4, f12, rne # perform operation
fnmadd.s f27, f25, f4, f12, rtz # perform operation
fnmadd.s f27, f25, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x20, 0x1d278f967d4032d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xab947da763e70b75 # load x3 with value 0xab947da763e70b75
sw x3, 0(x2) # store 0xab947da763e70b75 in memory
flw f1, 0(x2) # load 0xab947da763e70b75 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmadd.s f20, f3, f1, f7, dyn # perform operation
fnmadd.s f20, f3, f1, f7, rdn # perform operation
fnmadd.s f20, f3, f1, f7, rmm # perform operation
fnmadd.s f20, f3, f1, f7, rne # perform operation
fnmadd.s f20, f3, f1, f7, rtz # perform operation
fnmadd.s f20, f3, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x23, 0x3f251443a4097795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xb0695b69c37fe534 # load x3 with value 0xb0695b69c37fe534
sw x3, 0(x2) # store 0xb0695b69c37fe534 in memory
flw f29, 0(x2) # load 0xb0695b69c37fe534 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fnmadd.s f23, f22, f29, f4, dyn # perform operation
fnmadd.s f23, f22, f29, f4, rdn # perform operation
fnmadd.s f23, f22, f29, f4, rmm # perform operation
fnmadd.s f23, f22, f29, f4, rne # perform operation
fnmadd.s f23, f22, f29, f4, rtz # perform operation
fnmadd.s f23, f22, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f22, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x16, 0x8124dfbec5503d8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xb85cdbb4cd3fc738 # load x3 with value 0xb85cdbb4cd3fc738
sw x3, 0(x2) # store 0xb85cdbb4cd3fc738 in memory
flw f9, 0(x2) # load 0xb85cdbb4cd3fc738 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f16, f14, f9, f2, dyn # perform operation
fnmadd.s f16, f14, f9, f2, rdn # perform operation
fnmadd.s f16, f14, f9, f2, rmm # perform operation
fnmadd.s f16, f14, f9, f2, rne # perform operation
fnmadd.s f16, f14, f9, f2, rtz # perform operation
fnmadd.s f16, f14, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f14, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x9, 0xb9d7b5b771bb9c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x15327fcbfe31f856 # load x3 with value 0x15327fcbfe31f856
sw x3, 0(x2) # store 0x15327fcbfe31f856 in memory
flw f15, 0(x2) # load 0x15327fcbfe31f856 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmadd.s f9, f28, f15, f10, dyn # perform operation
fnmadd.s f9, f28, f15, f10, rdn # perform operation
fnmadd.s f9, f28, f15, f10, rmm # perform operation
fnmadd.s f9, f28, f15, f10, rne # perform operation
fnmadd.s f9, f28, f15, f10, rtz # perform operation
fnmadd.s f9, f28, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x4, 0x69c9ad5810411901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x8dbfae133a73f9ae # load x3 with value 0x8dbfae133a73f9ae
sw x3, 0(x2) # store 0x8dbfae133a73f9ae in memory
flw f21, 0(x2) # load 0x8dbfae133a73f9ae from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmadd.s f4, f13, f21, f26, dyn # perform operation
fnmadd.s f4, f13, f21, f26, rdn # perform operation
fnmadd.s f4, f13, f21, f26, rmm # perform operation
fnmadd.s f4, f13, f21, f26, rne # perform operation
fnmadd.s f4, f13, f21, f26, rtz # perform operation
fnmadd.s f4, f13, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f13, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f13, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x4, 0xa508a17f52a1819f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x9313abad4cf471cd # load x3 with value 0x9313abad4cf471cd
sw x3, 0(x2) # store 0x9313abad4cf471cd in memory
flw f28, 0(x2) # load 0x9313abad4cf471cd from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmadd.s f4, f1, f28, f29, dyn # perform operation
fnmadd.s f4, f1, f28, f29, rdn # perform operation
fnmadd.s f4, f1, f28, f29, rmm # perform operation
fnmadd.s f4, f1, f28, f29, rne # perform operation
fnmadd.s f4, f1, f28, f29, rtz # perform operation
fnmadd.s f4, f1, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f1, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x6, 0xefc4f43d845168c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x9c9adf2f2dbd6e40 # load x3 with value 0x9c9adf2f2dbd6e40
sw x3, 0(x2) # store 0x9c9adf2f2dbd6e40 in memory
flw f10, 0(x2) # load 0x9c9adf2f2dbd6e40 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmadd.s f6, f4, f10, f31, dyn # perform operation
fnmadd.s f6, f4, f10, f31, rdn # perform operation
fnmadd.s f6, f4, f10, f31, rmm # perform operation
fnmadd.s f6, f4, f10, f31, rne # perform operation
fnmadd.s f6, f4, f10, f31, rtz # perform operation
fnmadd.s f6, f4, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f4, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f4, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f4, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f4, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f4, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x25, 0xe69e972f9789d576 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x74c352d7206a1f18 # load x3 with value 0x74c352d7206a1f18
sw x3, 0(x2) # store 0x74c352d7206a1f18 in memory
flw f4, 0(x2) # load 0x74c352d7206a1f18 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fnmadd.s f25, f6, f4, f11, dyn # perform operation
fnmadd.s f25, f6, f4, f11, rdn # perform operation
fnmadd.s f25, f6, f4, f11, rmm # perform operation
fnmadd.s f25, f6, f4, f11, rne # perform operation
fnmadd.s f25, f6, f4, f11, rtz # perform operation
fnmadd.s f25, f6, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x11, 0xa4a5edff092d799a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x6a29f9f9cf56cb28 # load x3 with value 0x6a29f9f9cf56cb28
sw x3, 0(x2) # store 0x6a29f9f9cf56cb28 in memory
flw f30, 0(x2) # load 0x6a29f9f9cf56cb28 from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmadd.s f11, f2, f30, f1, dyn # perform operation
fnmadd.s f11, f2, f30, f1, rdn # perform operation
fnmadd.s f11, f2, f30, f1, rmm # perform operation
fnmadd.s f11, f2, f30, f1, rne # perform operation
fnmadd.s f11, f2, f30, f1, rtz # perform operation
fnmadd.s f11, f2, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f2, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f2, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f2, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f2, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f2, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x9, 0xcca3b3183aa9c369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xd359a28570f705cf # load x3 with value 0xd359a28570f705cf
sw x3, 0(x2) # store 0xd359a28570f705cf in memory
flw f5, 0(x2) # load 0xd359a28570f705cf from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fnmadd.s f9, f1, f5, f19, dyn # perform operation
fnmadd.s f9, f1, f5, f19, rdn # perform operation
fnmadd.s f9, f1, f5, f19, rmm # perform operation
fnmadd.s f9, f1, f5, f19, rne # perform operation
fnmadd.s f9, f1, f5, f19, rtz # perform operation
fnmadd.s f9, f1, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f1, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x18, 0x0cf7478941f74cbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x5b301b19d27ef681 # load x3 with value 0x5b301b19d27ef681
sw x3, 0(x2) # store 0x5b301b19d27ef681 in memory
flw f4, 0(x2) # load 0x5b301b19d27ef681 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f18, f3, f4, f30, dyn # perform operation
fnmadd.s f18, f3, f4, f30, rdn # perform operation
fnmadd.s f18, f3, f4, f30, rmm # perform operation
fnmadd.s f18, f3, f4, f30, rne # perform operation
fnmadd.s f18, f3, f4, f30, rtz # perform operation
fnmadd.s f18, f3, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f3, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f3, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f3, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f3, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f3, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x22, 0x9e386aa24d733a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xb9bc46b70f1b755 # load x3 with value 0xb9bc46b70f1b755
sw x3, 0(x2) # store 0xb9bc46b70f1b755 in memory
flw f18, 0(x2) # load 0xb9bc46b70f1b755 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fnmadd.s f22, f1, f18, f23, dyn # perform operation
fnmadd.s f22, f1, f18, f23, rdn # perform operation
fnmadd.s f22, f1, f18, f23, rmm # perform operation
fnmadd.s f22, f1, f18, f23, rne # perform operation
fnmadd.s f22, f1, f18, f23, rtz # perform operation
fnmadd.s f22, f1, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x16, 0x108dcb500e2258ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x7e9cf7ba2b70a8ed # load x3 with value 0x7e9cf7ba2b70a8ed
sw x3, 0(x2) # store 0x7e9cf7ba2b70a8ed in memory
flw f13, 0(x2) # load 0x7e9cf7ba2b70a8ed from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fnmadd.s f16, f30, f13, f3, dyn # perform operation
fnmadd.s f16, f30, f13, f3, rdn # perform operation
fnmadd.s f16, f30, f13, f3, rmm # perform operation
fnmadd.s f16, f30, f13, f3, rne # perform operation
fnmadd.s f16, f30, f13, f3, rtz # perform operation
fnmadd.s f16, f30, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x11, 0xf8d4aab839ac2eb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x39f32629aa750c71 # load x3 with value 0x39f32629aa750c71
sw x3, 0(x2) # store 0x39f32629aa750c71 in memory
flw f26, 0(x2) # load 0x39f32629aa750c71 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f11, f10, f26, f14, dyn # perform operation
fnmadd.s f11, f10, f26, f14, rdn # perform operation
fnmadd.s f11, f10, f26, f14, rmm # perform operation
fnmadd.s f11, f10, f26, f14, rne # perform operation
fnmadd.s f11, f10, f26, f14, rtz # perform operation
fnmadd.s f11, f10, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x10, 0x78de9a84e9cd5ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x9866acfff1ededb # load x3 with value 0x9866acfff1ededb
sw x3, 0(x2) # store 0x9866acfff1ededb in memory
flw f15, 0(x2) # load 0x9866acfff1ededb from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f10, f9, f15, f22, dyn # perform operation
fnmadd.s f10, f9, f15, f22, rdn # perform operation
fnmadd.s f10, f9, f15, f22, rmm # perform operation
fnmadd.s f10, f9, f15, f22, rne # perform operation
fnmadd.s f10, f9, f15, f22, rtz # perform operation
fnmadd.s f10, f9, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f9, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x15, 0x8e77f0e73267831c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x49ad8dc88a3cea16 # load x3 with value 0x49ad8dc88a3cea16
sw x3, 0(x2) # store 0x49ad8dc88a3cea16 in memory
flw f20, 0(x2) # load 0x49ad8dc88a3cea16 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f15, f22, f20, f26, dyn # perform operation
fnmadd.s f15, f22, f20, f26, rdn # perform operation
fnmadd.s f15, f22, f20, f26, rmm # perform operation
fnmadd.s f15, f22, f20, f26, rne # perform operation
fnmadd.s f15, f22, f20, f26, rtz # perform operation
fnmadd.s f15, f22, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x4, 0x83030d26c5f829b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x5224c0e724114a26 # load x3 with value 0x5224c0e724114a26
sw x3, 0(x2) # store 0x5224c0e724114a26 in memory
flw f9, 0(x2) # load 0x5224c0e724114a26 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fnmadd.s f4, f26, f9, f3, dyn # perform operation
fnmadd.s f4, f26, f9, f3, rdn # perform operation
fnmadd.s f4, f26, f9, f3, rmm # perform operation
fnmadd.s f4, f26, f9, f3, rne # perform operation
fnmadd.s f4, f26, f9, f3, rtz # perform operation
fnmadd.s f4, f26, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f26, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x18, 0x668b1427a2823994 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xe4affcb00417d017 # load x3 with value 0xe4affcb00417d017
sw x3, 0(x2) # store 0xe4affcb00417d017 in memory
flw f14, 0(x2) # load 0xe4affcb00417d017 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmadd.s f18, f20, f14, f19, dyn # perform operation
fnmadd.s f18, f20, f14, f19, rdn # perform operation
fnmadd.s f18, f20, f14, f19, rmm # perform operation
fnmadd.s f18, f20, f14, f19, rne # perform operation
fnmadd.s f18, f20, f14, f19, rtz # perform operation
fnmadd.s f18, f20, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x25, 0xd97ba4e7ac8d3b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xf98ed2c9bad01ec8 # load x3 with value 0xf98ed2c9bad01ec8
sw x3, 0(x2) # store 0xf98ed2c9bad01ec8 in memory
flw f2, 0(x2) # load 0xf98ed2c9bad01ec8 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmadd.s f25, f17, f2, f22, dyn # perform operation
fnmadd.s f25, f17, f2, f22, rdn # perform operation
fnmadd.s f25, f17, f2, f22, rmm # perform operation
fnmadd.s f25, f17, f2, f22, rne # perform operation
fnmadd.s f25, f17, f2, f22, rtz # perform operation
fnmadd.s f25, f17, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x22, 0xec9742b7a50dab11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x44892825c7fab1c7 # load x3 with value 0x44892825c7fab1c7
sw x3, 0(x2) # store 0x44892825c7fab1c7 in memory
flw f7, 0(x2) # load 0x44892825c7fab1c7 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.s f22, f19, f7, f29, dyn # perform operation
fnmadd.s f22, f19, f7, f29, rdn # perform operation
fnmadd.s f22, f19, f7, f29, rmm # perform operation
fnmadd.s f22, f19, f7, f29, rne # perform operation
fnmadd.s f22, f19, f7, f29, rtz # perform operation
fnmadd.s f22, f19, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f19, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f19, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x20, 0xb0b8bb3ffb13fee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x16dfa7d68160b2fc # load x3 with value 0x16dfa7d68160b2fc
sw x3, 0(x2) # store 0x16dfa7d68160b2fc in memory
flw f5, 0(x2) # load 0x16dfa7d68160b2fc from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fnmadd.s f20, f15, f5, f26, dyn # perform operation
fnmadd.s f20, f15, f5, f26, rdn # perform operation
fnmadd.s f20, f15, f5, f26, rmm # perform operation
fnmadd.s f20, f15, f5, f26, rne # perform operation
fnmadd.s f20, f15, f5, f26, rtz # perform operation
fnmadd.s f20, f15, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x7, 0x8232b0e53518e032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x403221a68859c4c3 # load x3 with value 0x403221a68859c4c3
sw x3, 0(x2) # store 0x403221a68859c4c3 in memory
flw f30, 0(x2) # load 0x403221a68859c4c3 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f7, f20, f30, f27, dyn # perform operation
fnmadd.s f7, f20, f30, f27, rdn # perform operation
fnmadd.s f7, f20, f30, f27, rmm # perform operation
fnmadd.s f7, f20, f30, f27, rne # perform operation
fnmadd.s f7, f20, f30, f27, rtz # perform operation
fnmadd.s f7, f20, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f20, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x2, 0x99d12374c0b8ad5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x9ad2321119fc0ad4 # load x3 with value 0x9ad2321119fc0ad4
sw x3, 0(x2) # store 0x9ad2321119fc0ad4 in memory
flw f4, 0(x2) # load 0x9ad2321119fc0ad4 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fnmadd.s f2, f27, f4, f20, dyn # perform operation
fnmadd.s f2, f27, f4, f20, rdn # perform operation
fnmadd.s f2, f27, f4, f20, rmm # perform operation
fnmadd.s f2, f27, f4, f20, rne # perform operation
fnmadd.s f2, f27, f4, f20, rtz # perform operation
fnmadd.s f2, f27, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f27, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x5, 0x425c220ec6afc3e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x6a174489c45b77b5 # load x3 with value 0x6a174489c45b77b5
sw x3, 0(x2) # store 0x6a174489c45b77b5 in memory
flw f17, 0(x2) # load 0x6a174489c45b77b5 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmadd.s f5, f22, f17, f15, dyn # perform operation
fnmadd.s f5, f22, f17, f15, rdn # perform operation
fnmadd.s f5, f22, f17, f15, rmm # perform operation
fnmadd.s f5, f22, f17, f15, rne # perform operation
fnmadd.s f5, f22, f17, f15, rtz # perform operation
fnmadd.s f5, f22, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x19, 0x4744a30ce6b6e5bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xf5fd2c4094ac9d67 # load x3 with value 0xf5fd2c4094ac9d67
sw x3, 0(x2) # store 0xf5fd2c4094ac9d67 in memory
flw f29, 0(x2) # load 0xf5fd2c4094ac9d67 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmadd.s f19, f16, f29, f31, dyn # perform operation
fnmadd.s f19, f16, f29, f31, rdn # perform operation
fnmadd.s f19, f16, f29, f31, rmm # perform operation
fnmadd.s f19, f16, f29, f31, rne # perform operation
fnmadd.s f19, f16, f29, f31, rtz # perform operation
fnmadd.s f19, f16, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x3, 0x8ee2803ec89e12a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xe12a27dcfbe4aa97 # load x3 with value 0xe12a27dcfbe4aa97
sw x3, 0(x2) # store 0xe12a27dcfbe4aa97 in memory
flw f7, 0(x2) # load 0xe12a27dcfbe4aa97 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fnmadd.s f3, f10, f7, f17, dyn # perform operation
fnmadd.s f3, f10, f7, f17, rdn # perform operation
fnmadd.s f3, f10, f7, f17, rmm # perform operation
fnmadd.s f3, f10, f7, f17, rne # perform operation
fnmadd.s f3, f10, f7, f17, rtz # perform operation
fnmadd.s f3, f10, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f10, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f10, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x11, 0xc4cb46d6dcc9f78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x94dd99de598f07dd # load x3 with value 0x94dd99de598f07dd
sw x3, 0(x2) # store 0x94dd99de598f07dd in memory
flw f31, 0(x2) # load 0x94dd99de598f07dd from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f11, f23, f31, f30, dyn # perform operation
fnmadd.s f11, f23, f31, f30, rdn # perform operation
fnmadd.s f11, f23, f31, f30, rmm # perform operation
fnmadd.s f11, f23, f31, f30, rne # perform operation
fnmadd.s f11, f23, f31, f30, rtz # perform operation
fnmadd.s f11, f23, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x31, 0x7a62076b7fa4ecaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xdad8f8bf5c4f501d # load x3 with value 0xdad8f8bf5c4f501d
sw x3, 0(x2) # store 0xdad8f8bf5c4f501d in memory
flw f6, 0(x2) # load 0xdad8f8bf5c4f501d from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmadd.s f31, f18, f6, f2, dyn # perform operation
fnmadd.s f31, f18, f6, f2, rdn # perform operation
fnmadd.s f31, f18, f6, f2, rmm # perform operation
fnmadd.s f31, f18, f6, f2, rne # perform operation
fnmadd.s f31, f18, f6, f2, rtz # perform operation
fnmadd.s f31, f18, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x21, 0x60061ccd462a0878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xbea667e1622f8b68 # load x3 with value 0xbea667e1622f8b68
sw x3, 0(x2) # store 0xbea667e1622f8b68 in memory
flw f9, 0(x2) # load 0xbea667e1622f8b68 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f21, f14, f9, f2, dyn # perform operation
fnmadd.s f21, f14, f9, f2, rdn # perform operation
fnmadd.s f21, f14, f9, f2, rmm # perform operation
fnmadd.s f21, f14, f9, f2, rne # perform operation
fnmadd.s f21, f14, f9, f2, rtz # perform operation
fnmadd.s f21, f14, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x19, 0xc7d7465d3c5fac1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x1d65a03a85cb4939 # load x3 with value 0x1d65a03a85cb4939
sw x3, 0(x2) # store 0x1d65a03a85cb4939 in memory
flw f21, 0(x2) # load 0x1d65a03a85cb4939 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f19, f13, f21, f27, dyn # perform operation
fnmadd.s f19, f13, f21, f27, rdn # perform operation
fnmadd.s f19, f13, f21, f27, rmm # perform operation
fnmadd.s f19, f13, f21, f27, rne # perform operation
fnmadd.s f19, f13, f21, f27, rtz # perform operation
fnmadd.s f19, f13, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x21, 0x09f10455e653eae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xa05d5af10d354b55 # load x3 with value 0xa05d5af10d354b55
sw x3, 0(x2) # store 0xa05d5af10d354b55 in memory
flw f12, 0(x2) # load 0xa05d5af10d354b55 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmadd.s f21, f9, f12, f19, dyn # perform operation
fnmadd.s f21, f9, f12, f19, rdn # perform operation
fnmadd.s f21, f9, f12, f19, rmm # perform operation
fnmadd.s f21, f9, f12, f19, rne # perform operation
fnmadd.s f21, f9, f12, f19, rtz # perform operation
fnmadd.s f21, f9, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f9, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f9, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f9, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f9, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f9, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x17, 0xa0405d2f31b9578f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x14301e64c237936d # load x3 with value 0x14301e64c237936d
sw x3, 0(x2) # store 0x14301e64c237936d in memory
flw f7, 0(x2) # load 0x14301e64c237936d from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmadd.s f17, f11, f7, f22, dyn # perform operation
fnmadd.s f17, f11, f7, f22, rdn # perform operation
fnmadd.s f17, f11, f7, f22, rmm # perform operation
fnmadd.s f17, f11, f7, f22, rne # perform operation
fnmadd.s f17, f11, f7, f22, rtz # perform operation
fnmadd.s f17, f11, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x2, 0x0608c93769c56098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x747d32fabe430b59 # load x3 with value 0x747d32fabe430b59
sw x3, 0(x2) # store 0x747d32fabe430b59 in memory
flw f13, 0(x2) # load 0x747d32fabe430b59 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmadd.s f2, f1, f13, f12, dyn # perform operation
fnmadd.s f2, f1, f13, f12, rdn # perform operation
fnmadd.s f2, f1, f13, f12, rmm # perform operation
fnmadd.s f2, f1, f13, f12, rne # perform operation
fnmadd.s f2, f1, f13, f12, rtz # perform operation
fnmadd.s f2, f1, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f1, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x14, 0x1e0fafe0c6eaa25f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x109f2fee2262be88 # load x3 with value 0x109f2fee2262be88
sw x3, 0(x2) # store 0x109f2fee2262be88 in memory
flw f16, 0(x2) # load 0x109f2fee2262be88 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fnmadd.s f14, f26, f16, f22, dyn # perform operation
fnmadd.s f14, f26, f16, f22, rdn # perform operation
fnmadd.s f14, f26, f16, f22, rmm # perform operation
fnmadd.s f14, f26, f16, f22, rne # perform operation
fnmadd.s f14, f26, f16, f22, rtz # perform operation
fnmadd.s f14, f26, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f26, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x21, 0x0b459a27f445f255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x5c6ba748e3aeb660 # load x3 with value 0x5c6ba748e3aeb660
sw x3, 0(x2) # store 0x5c6ba748e3aeb660 in memory
flw f28, 0(x2) # load 0x5c6ba748e3aeb660 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmadd.s f21, f3, f28, f27, dyn # perform operation
fnmadd.s f21, f3, f28, f27, rdn # perform operation
fnmadd.s f21, f3, f28, f27, rmm # perform operation
fnmadd.s f21, f3, f28, f27, rne # perform operation
fnmadd.s f21, f3, f28, f27, rtz # perform operation
fnmadd.s f21, f3, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x31, 0xcb4950f433335a83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xbc17742e4bd77533 # load x3 with value 0xbc17742e4bd77533
sw x3, 0(x2) # store 0xbc17742e4bd77533 in memory
flw f9, 0(x2) # load 0xbc17742e4bd77533 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fnmadd.s f31, f12, f9, f18, dyn # perform operation
fnmadd.s f31, f12, f9, f18, rdn # perform operation
fnmadd.s f31, f12, f9, f18, rmm # perform operation
fnmadd.s f31, f12, f9, f18, rne # perform operation
fnmadd.s f31, f12, f9, f18, rtz # perform operation
fnmadd.s f31, f12, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x21, 0x09a8b77b0ddba06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x5db39d493b4ab7ef # load x3 with value 0x5db39d493b4ab7ef
sw x3, 0(x2) # store 0x5db39d493b4ab7ef in memory
flw f14, 0(x2) # load 0x5db39d493b4ab7ef from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f21, f28, f14, f23, dyn # perform operation
fnmadd.s f21, f28, f14, f23, rdn # perform operation
fnmadd.s f21, f28, f14, f23, rmm # perform operation
fnmadd.s f21, f28, f14, f23, rne # perform operation
fnmadd.s f21, f28, f14, f23, rtz # perform operation
fnmadd.s f21, f28, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f28, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f28, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x5, 0x3569a7b4e89c01a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x763ec8a849a15dac # load x3 with value 0x763ec8a849a15dac
sw x3, 0(x2) # store 0x763ec8a849a15dac in memory
flw f11, 0(x2) # load 0x763ec8a849a15dac from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmadd.s f5, f27, f11, f17, dyn # perform operation
fnmadd.s f5, f27, f11, f17, rdn # perform operation
fnmadd.s f5, f27, f11, f17, rmm # perform operation
fnmadd.s f5, f27, f11, f17, rne # perform operation
fnmadd.s f5, f27, f11, f17, rtz # perform operation
fnmadd.s f5, f27, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x30, 0x6f2b23246f023032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x4d2c3cd7f6ac4578 # load x3 with value 0x4d2c3cd7f6ac4578
sw x3, 0(x2) # store 0x4d2c3cd7f6ac4578 in memory
flw f3, 0(x2) # load 0x4d2c3cd7f6ac4578 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f30, f7, f3, f11, dyn # perform operation
fnmadd.s f30, f7, f3, f11, rdn # perform operation
fnmadd.s f30, f7, f3, f11, rmm # perform operation
fnmadd.s f30, f7, f3, f11, rne # perform operation
fnmadd.s f30, f7, f3, f11, rtz # perform operation
fnmadd.s f30, f7, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x12, 0x5a06397e8c79e330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xfb027d747c5c19ab # load x3 with value 0xfb027d747c5c19ab
sw x3, 0(x2) # store 0xfb027d747c5c19ab in memory
flw f18, 0(x2) # load 0xfb027d747c5c19ab from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f12, f11, f18, f3, dyn # perform operation
fnmadd.s f12, f11, f18, f3, rdn # perform operation
fnmadd.s f12, f11, f18, f3, rmm # perform operation
fnmadd.s f12, f11, f18, f3, rne # perform operation
fnmadd.s f12, f11, f18, f3, rtz # perform operation
fnmadd.s f12, f11, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x26, 0xf7cae1fe9f7dddb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x5327df001179e7ab # load x3 with value 0x5327df001179e7ab
sw x3, 0(x2) # store 0x5327df001179e7ab in memory
flw f28, 0(x2) # load 0x5327df001179e7ab from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmadd.s f26, f12, f28, f7, dyn # perform operation
fnmadd.s f26, f12, f28, f7, rdn # perform operation
fnmadd.s f26, f12, f28, f7, rmm # perform operation
fnmadd.s f26, f12, f28, f7, rne # perform operation
fnmadd.s f26, f12, f28, f7, rtz # perform operation
fnmadd.s f26, f12, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x19, 0xa5b6aee341cf954d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xd1407a76d0bdb0db # load x3 with value 0xd1407a76d0bdb0db
sw x3, 0(x2) # store 0xd1407a76d0bdb0db in memory
flw f25, 0(x2) # load 0xd1407a76d0bdb0db from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmadd.s f19, f20, f25, f12, dyn # perform operation
fnmadd.s f19, f20, f25, f12, rdn # perform operation
fnmadd.s f19, f20, f25, f12, rmm # perform operation
fnmadd.s f19, f20, f25, f12, rne # perform operation
fnmadd.s f19, f20, f25, f12, rtz # perform operation
fnmadd.s f19, f20, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x20, 0x92ceb3b8f41d128e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x1545bd44f011873 # load x3 with value 0x1545bd44f011873
sw x3, 0(x2) # store 0x1545bd44f011873 in memory
flw f3, 0(x2) # load 0x1545bd44f011873 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fnmadd.s f20, f14, f3, f23, dyn # perform operation
fnmadd.s f20, f14, f3, f23, rdn # perform operation
fnmadd.s f20, f14, f3, f23, rmm # perform operation
fnmadd.s f20, f14, f3, f23, rne # perform operation
fnmadd.s f20, f14, f3, f23, rtz # perform operation
fnmadd.s f20, f14, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x14, 0x14edeb497d4bc345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xb2cdf1d706e21efd # load x3 with value 0xb2cdf1d706e21efd
sw x3, 0(x2) # store 0xb2cdf1d706e21efd in memory
flw f30, 0(x2) # load 0xb2cdf1d706e21efd from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmadd.s f14, f21, f30, f5, dyn # perform operation
fnmadd.s f14, f21, f30, f5, rdn # perform operation
fnmadd.s f14, f21, f30, f5, rmm # perform operation
fnmadd.s f14, f21, f30, f5, rne # perform operation
fnmadd.s f14, f21, f30, f5, rtz # perform operation
fnmadd.s f14, f21, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x13, 0x33dae9065b39fab9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xebcefbe3c954a48b # load x3 with value 0xebcefbe3c954a48b
sw x3, 0(x2) # store 0xebcefbe3c954a48b in memory
flw f17, 0(x2) # load 0xebcefbe3c954a48b from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmadd.s f13, f19, f17, f27, dyn # perform operation
fnmadd.s f13, f19, f17, f27, rdn # perform operation
fnmadd.s f13, f19, f17, f27, rmm # perform operation
fnmadd.s f13, f19, f17, f27, rne # perform operation
fnmadd.s f13, f19, f17, f27, rtz # perform operation
fnmadd.s f13, f19, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x9, 0xdae18e1bd7633275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x8a09e85482f779e2 # load x3 with value 0x8a09e85482f779e2
sw x3, 0(x2) # store 0x8a09e85482f779e2 in memory
flw f31, 0(x2) # load 0x8a09e85482f779e2 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f9, f3, f31, f19, dyn # perform operation
fnmadd.s f9, f3, f31, f19, rdn # perform operation
fnmadd.s f9, f3, f31, f19, rmm # perform operation
fnmadd.s f9, f3, f31, f19, rne # perform operation
fnmadd.s f9, f3, f31, f19, rtz # perform operation
fnmadd.s f9, f3, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f3, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x5, 0xdca164ce7e541405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xb775ae7ed828425b # load x3 with value 0xb775ae7ed828425b
sw x3, 0(x2) # store 0xb775ae7ed828425b in memory
flw f19, 0(x2) # load 0xb775ae7ed828425b from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmadd.s f5, f13, f19, f16, dyn # perform operation
fnmadd.s f5, f13, f19, f16, rdn # perform operation
fnmadd.s f5, f13, f19, f16, rmm # perform operation
fnmadd.s f5, f13, f19, f16, rne # perform operation
fnmadd.s f5, f13, f19, f16, rtz # perform operation
fnmadd.s f5, f13, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x10, 0xd348bc8460cf89d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xf34fb07d3030a086 # load x3 with value 0xf34fb07d3030a086
sw x3, 0(x2) # store 0xf34fb07d3030a086 in memory
flw f30, 0(x2) # load 0xf34fb07d3030a086 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmadd.s f10, f25, f30, f21, dyn # perform operation
fnmadd.s f10, f25, f30, f21, rdn # perform operation
fnmadd.s f10, f25, f30, f21, rmm # perform operation
fnmadd.s f10, f25, f30, f21, rne # perform operation
fnmadd.s f10, f25, f30, f21, rtz # perform operation
fnmadd.s f10, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x27, 0x99a35427ded61d12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xe2f5f4570fe1c0b5 # load x3 with value 0xe2f5f4570fe1c0b5
sw x3, 0(x2) # store 0xe2f5f4570fe1c0b5 in memory
flw f14, 0(x2) # load 0xe2f5f4570fe1c0b5 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fnmadd.s f27, f24, f14, f19, dyn # perform operation
fnmadd.s f27, f24, f14, f19, rdn # perform operation
fnmadd.s f27, f24, f14, f19, rmm # perform operation
fnmadd.s f27, f24, f14, f19, rne # perform operation
fnmadd.s f27, f24, f14, f19, rtz # perform operation
fnmadd.s f27, f24, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x18, 0x7c8fed7a55461d74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x4abefe6047e6071d # load x3 with value 0x4abefe6047e6071d
sw x3, 0(x2) # store 0x4abefe6047e6071d in memory
flw f7, 0(x2) # load 0x4abefe6047e6071d from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmadd.s f18, f13, f7, f11, dyn # perform operation
fnmadd.s f18, f13, f7, f11, rdn # perform operation
fnmadd.s f18, f13, f7, f11, rmm # perform operation
fnmadd.s f18, f13, f7, f11, rne # perform operation
fnmadd.s f18, f13, f7, f11, rtz # perform operation
fnmadd.s f18, f13, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x25, 0x7aa9b479d13ad126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x3c9ce9446914a11f # load x3 with value 0x3c9ce9446914a11f
sw x3, 0(x2) # store 0x3c9ce9446914a11f in memory
flw f15, 0(x2) # load 0x3c9ce9446914a11f from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fnmadd.s f25, f7, f15, f5, dyn # perform operation
fnmadd.s f25, f7, f15, f5, rdn # perform operation
fnmadd.s f25, f7, f15, f5, rmm # perform operation
fnmadd.s f25, f7, f15, f5, rne # perform operation
fnmadd.s f25, f7, f15, f5, rtz # perform operation
fnmadd.s f25, f7, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f7, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x7, 0xca3153a2fe382af7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x92fa5acc0cb3947d # load x3 with value 0x92fa5acc0cb3947d
sw x3, 0(x2) # store 0x92fa5acc0cb3947d in memory
flw f15, 0(x2) # load 0x92fa5acc0cb3947d from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fnmadd.s f7, f9, f15, f8, dyn # perform operation
fnmadd.s f7, f9, f15, f8, rdn # perform operation
fnmadd.s f7, f9, f15, f8, rmm # perform operation
fnmadd.s f7, f9, f15, f8, rne # perform operation
fnmadd.s f7, f9, f15, f8, rtz # perform operation
fnmadd.s f7, f9, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f9, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f9, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f9, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f9, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f9, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x2, 0xd9bca00185ad558c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x147bd76da209bca6 # load x3 with value 0x147bd76da209bca6
sw x3, 0(x2) # store 0x147bd76da209bca6 in memory
flw f22, 0(x2) # load 0x147bd76da209bca6 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f2, f15, f22, f11, dyn # perform operation
fnmadd.s f2, f15, f22, f11, rdn # perform operation
fnmadd.s f2, f15, f22, f11, rmm # perform operation
fnmadd.s f2, f15, f22, f11, rne # perform operation
fnmadd.s f2, f15, f22, f11, rtz # perform operation
fnmadd.s f2, f15, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x17, 0x0d4a8e32183463ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x53ef4c83646a02d2 # load x3 with value 0x53ef4c83646a02d2
sw x3, 0(x2) # store 0x53ef4c83646a02d2 in memory
flw f6, 0(x2) # load 0x53ef4c83646a02d2 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmadd.s f17, f3, f6, f10, dyn # perform operation
fnmadd.s f17, f3, f6, f10, rdn # perform operation
fnmadd.s f17, f3, f6, f10, rmm # perform operation
fnmadd.s f17, f3, f6, f10, rne # perform operation
fnmadd.s f17, f3, f6, f10, rtz # perform operation
fnmadd.s f17, f3, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f3, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f3, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f3, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f3, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f3, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x27, 0x81571c8463e2134b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x93bcdc48bf2e68e0 # load x3 with value 0x93bcdc48bf2e68e0
sw x3, 0(x2) # store 0x93bcdc48bf2e68e0 in memory
flw f2, 0(x2) # load 0x93bcdc48bf2e68e0 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmadd.s f27, f1, f2, f29, dyn # perform operation
fnmadd.s f27, f1, f2, f29, rdn # perform operation
fnmadd.s f27, f1, f2, f29, rmm # perform operation
fnmadd.s f27, f1, f2, f29, rne # perform operation
fnmadd.s f27, f1, f2, f29, rtz # perform operation
fnmadd.s f27, f1, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f1, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x2, 0x50e0980c95c71503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x359de42faf52bf6f # load x3 with value 0x359de42faf52bf6f
sw x3, 0(x2) # store 0x359de42faf52bf6f in memory
flw f1, 0(x2) # load 0x359de42faf52bf6f from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmadd.s f2, f17, f1, f14, dyn # perform operation
fnmadd.s f2, f17, f1, f14, rdn # perform operation
fnmadd.s f2, f17, f1, f14, rmm # perform operation
fnmadd.s f2, f17, f1, f14, rne # perform operation
fnmadd.s f2, f17, f1, f14, rtz # perform operation
fnmadd.s f2, f17, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x2, 0xe95cb7f1e2e94f49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x94c4dd62199fee6d # load x3 with value 0x94c4dd62199fee6d
sw x3, 0(x2) # store 0x94c4dd62199fee6d in memory
flw f31, 0(x2) # load 0x94c4dd62199fee6d from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmadd.s f2, f17, f31, f1, dyn # perform operation
fnmadd.s f2, f17, f31, f1, rdn # perform operation
fnmadd.s f2, f17, f31, f1, rmm # perform operation
fnmadd.s f2, f17, f31, f1, rne # perform operation
fnmadd.s f2, f17, f31, f1, rtz # perform operation
fnmadd.s f2, f17, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x28, 0x2c5e4b2d415ba339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xbf233d8057c66147 # load x3 with value 0xbf233d8057c66147
sw x3, 0(x2) # store 0xbf233d8057c66147 in memory
flw f15, 0(x2) # load 0xbf233d8057c66147 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f28, f31, f15, f9, dyn # perform operation
fnmadd.s f28, f31, f15, f9, rdn # perform operation
fnmadd.s f28, f31, f15, f9, rmm # perform operation
fnmadd.s f28, f31, f15, f9, rne # perform operation
fnmadd.s f28, f31, f15, f9, rtz # perform operation
fnmadd.s f28, f31, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f31, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x14, 0x26c6085f82ee7ff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xded525771c5e3651 # load x3 with value 0xded525771c5e3651
sw x3, 0(x2) # store 0xded525771c5e3651 in memory
flw f8, 0(x2) # load 0xded525771c5e3651 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmadd.s f14, f7, f8, f13, dyn # perform operation
fnmadd.s f14, f7, f8, f13, rdn # perform operation
fnmadd.s f14, f7, f8, f13, rmm # perform operation
fnmadd.s f14, f7, f8, f13, rne # perform operation
fnmadd.s f14, f7, f8, f13, rtz # perform operation
fnmadd.s f14, f7, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f8, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x23, 0xd7eab70a5e8a1d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xa1cdba04188191fe # load x3 with value 0xa1cdba04188191fe
sw x3, 0(x2) # store 0xa1cdba04188191fe in memory
flw f22, 0(x2) # load 0xa1cdba04188191fe from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fnmadd.s f23, f14, f22, f12, dyn # perform operation
fnmadd.s f23, f14, f22, f12, rdn # perform operation
fnmadd.s f23, f14, f22, f12, rmm # perform operation
fnmadd.s f23, f14, f22, f12, rne # perform operation
fnmadd.s f23, f14, f22, f12, rtz # perform operation
fnmadd.s f23, f14, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x29, 0xef10fd9c3f97c12e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x999ea9f11f19a82d # load x3 with value 0x999ea9f11f19a82d
sw x3, 0(x2) # store 0x999ea9f11f19a82d in memory
flw f17, 0(x2) # load 0x999ea9f11f19a82d from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fnmadd.s f29, f24, f17, f15, dyn # perform operation
fnmadd.s f29, f24, f17, f15, rdn # perform operation
fnmadd.s f29, f24, f17, f15, rmm # perform operation
fnmadd.s f29, f24, f17, f15, rne # perform operation
fnmadd.s f29, f24, f17, f15, rtz # perform operation
fnmadd.s f29, f24, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f24, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f24, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f24, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f24, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f24, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x4, 0xfbde8a5d37c0ecb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xc2e2cdca20c43f5a # load x3 with value 0xc2e2cdca20c43f5a
sw x3, 0(x2) # store 0xc2e2cdca20c43f5a in memory
flw f16, 0(x2) # load 0xc2e2cdca20c43f5a from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.s f4, f26, f16, f7, dyn # perform operation
fnmadd.s f4, f26, f16, f7, rdn # perform operation
fnmadd.s f4, f26, f16, f7, rmm # perform operation
fnmadd.s f4, f26, f16, f7, rne # perform operation
fnmadd.s f4, f26, f16, f7, rtz # perform operation
fnmadd.s f4, f26, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f26, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x12, 0x1d46a09c28dee41a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x82b15cb5d1ef7591 # load x3 with value 0x82b15cb5d1ef7591
sw x3, 0(x2) # store 0x82b15cb5d1ef7591 in memory
flw f4, 0(x2) # load 0x82b15cb5d1ef7591 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fnmadd.s f12, f3, f4, f13, dyn # perform operation
fnmadd.s f12, f3, f4, f13, rdn # perform operation
fnmadd.s f12, f3, f4, f13, rmm # perform operation
fnmadd.s f12, f3, f4, f13, rne # perform operation
fnmadd.s f12, f3, f4, f13, rtz # perform operation
fnmadd.s f12, f3, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x23, 0x54bbfb8b451f3f5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x83c01e64b23e49a7 # load x3 with value 0x83c01e64b23e49a7
sw x3, 0(x2) # store 0x83c01e64b23e49a7 in memory
flw f19, 0(x2) # load 0x83c01e64b23e49a7 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f23, f20, f19, f2, dyn # perform operation
fnmadd.s f23, f20, f19, f2, rdn # perform operation
fnmadd.s f23, f20, f19, f2, rmm # perform operation
fnmadd.s f23, f20, f19, f2, rne # perform operation
fnmadd.s f23, f20, f19, f2, rtz # perform operation
fnmadd.s f23, f20, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x10, 0x96d657d5674c3521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x86841b8ab4174e29 # load x3 with value 0x86841b8ab4174e29
sw x3, 0(x2) # store 0x86841b8ab4174e29 in memory
flw f31, 0(x2) # load 0x86841b8ab4174e29 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fnmadd.s f10, f20, f31, f2, dyn # perform operation
fnmadd.s f10, f20, f31, f2, rdn # perform operation
fnmadd.s f10, f20, f31, f2, rmm # perform operation
fnmadd.s f10, f20, f31, f2, rne # perform operation
fnmadd.s f10, f20, f31, f2, rtz # perform operation
fnmadd.s f10, f20, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x10, 0x3156bfa8e94a2de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xabaf8937eafc43f4 # load x3 with value 0xabaf8937eafc43f4
sw x3, 0(x2) # store 0xabaf8937eafc43f4 in memory
flw f3, 0(x2) # load 0xabaf8937eafc43f4 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmadd.s f10, f5, f3, f18, dyn # perform operation
fnmadd.s f10, f5, f3, f18, rdn # perform operation
fnmadd.s f10, f5, f3, f18, rmm # perform operation
fnmadd.s f10, f5, f3, f18, rne # perform operation
fnmadd.s f10, f5, f3, f18, rtz # perform operation
fnmadd.s f10, f5, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x5, 0x2682e47ef168f2fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x90d3fa8784bb8411 # load x3 with value 0x90d3fa8784bb8411
sw x3, 0(x2) # store 0x90d3fa8784bb8411 in memory
flw f14, 0(x2) # load 0x90d3fa8784bb8411 from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmadd.s f5, f22, f14, f10, dyn # perform operation
fnmadd.s f5, f22, f14, f10, rdn # perform operation
fnmadd.s f5, f22, f14, f10, rmm # perform operation
fnmadd.s f5, f22, f14, f10, rne # perform operation
fnmadd.s f5, f22, f14, f10, rtz # perform operation
fnmadd.s f5, f22, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x18, 0xa41738b21b32d1e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xff704ed48ab4781a # load x3 with value 0xff704ed48ab4781a
sw x3, 0(x2) # store 0xff704ed48ab4781a in memory
flw f13, 0(x2) # load 0xff704ed48ab4781a from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmadd.s f18, f28, f13, f31, dyn # perform operation
fnmadd.s f18, f28, f13, f31, rdn # perform operation
fnmadd.s f18, f28, f13, f31, rmm # perform operation
fnmadd.s f18, f28, f13, f31, rne # perform operation
fnmadd.s f18, f28, f13, f31, rtz # perform operation
fnmadd.s f18, f28, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x22, 0x048e1fe18d0636f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xbfd306dd7d2bce2a # load x3 with value 0xbfd306dd7d2bce2a
sw x3, 0(x2) # store 0xbfd306dd7d2bce2a in memory
flw f24, 0(x2) # load 0xbfd306dd7d2bce2a from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fnmadd.s f22, f20, f24, f6, dyn # perform operation
fnmadd.s f22, f20, f24, f6, rdn # perform operation
fnmadd.s f22, f20, f24, f6, rmm # perform operation
fnmadd.s f22, f20, f24, f6, rne # perform operation
fnmadd.s f22, f20, f24, f6, rtz # perform operation
fnmadd.s f22, f20, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x14, 0xebac87c38f5f4df7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0xf208236f36882750 # load x3 with value 0xf208236f36882750
sw x3, 0(x2) # store 0xf208236f36882750 in memory
flw f31, 0(x2) # load 0xf208236f36882750 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmadd.s f14, f10, f31, f5, dyn # perform operation
fnmadd.s f14, f10, f31, f5, rdn # perform operation
fnmadd.s f14, f10, f31, f5, rmm # perform operation
fnmadd.s f14, f10, f31, f5, rne # perform operation
fnmadd.s f14, f10, f31, f5, rtz # perform operation
fnmadd.s f14, f10, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f10, f31, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x29, 0x248165ffa9635a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xb113023014aae9ec # load x3 with value 0xb113023014aae9ec
sw x3, 0(x2) # store 0xb113023014aae9ec in memory
flw f27, 0(x2) # load 0xb113023014aae9ec from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fnmadd.s f29, f28, f27, f12, dyn # perform operation
fnmadd.s f29, f28, f27, f12, rdn # perform operation
fnmadd.s f29, f28, f27, f12, rmm # perform operation
fnmadd.s f29, f28, f27, f12, rne # perform operation
fnmadd.s f29, f28, f27, f12, rtz # perform operation
fnmadd.s f29, f28, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x4, 0xaad5b8e207a87c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xf6cb585c84263e03 # load x3 with value 0xf6cb585c84263e03
sw x3, 0(x2) # store 0xf6cb585c84263e03 in memory
flw f17, 0(x2) # load 0xf6cb585c84263e03 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.s f4, f2, f17, f10, dyn # perform operation
fnmadd.s f4, f2, f17, f10, rdn # perform operation
fnmadd.s f4, f2, f17, f10, rmm # perform operation
fnmadd.s f4, f2, f17, f10, rne # perform operation
fnmadd.s f4, f2, f17, f10, rtz # perform operation
fnmadd.s f4, f2, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f2, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f2, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x7, 0x0986aeec2aa71a85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xc2396cc487e831bc # load x3 with value 0xc2396cc487e831bc
sw x3, 0(x2) # store 0xc2396cc487e831bc in memory
flw f27, 0(x2) # load 0xc2396cc487e831bc from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmadd.s f7, f12, f27, f22, dyn # perform operation
fnmadd.s f7, f12, f27, f22, rdn # perform operation
fnmadd.s f7, f12, f27, f22, rmm # perform operation
fnmadd.s f7, f12, f27, f22, rne # perform operation
fnmadd.s f7, f12, f27, f22, rtz # perform operation
fnmadd.s f7, f12, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f27, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x30, 0xeffd422c5c155f2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xed01a2e0d4517b3d # load x3 with value 0xed01a2e0d4517b3d
sw x3, 0(x2) # store 0xed01a2e0d4517b3d in memory
flw f1, 0(x2) # load 0xed01a2e0d4517b3d from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmadd.s f30, f6, f1, f20, dyn # perform operation
fnmadd.s f30, f6, f1, f20, rdn # perform operation
fnmadd.s f30, f6, f1, f20, rmm # perform operation
fnmadd.s f30, f6, f1, f20, rne # perform operation
fnmadd.s f30, f6, f1, f20, rtz # perform operation
fnmadd.s f30, f6, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x21, 0x4e88dfacd2207841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xb71ac2d36388d1bd # load x3 with value 0xb71ac2d36388d1bd
sw x3, 0(x2) # store 0xb71ac2d36388d1bd in memory
flw f9, 0(x2) # load 0xb71ac2d36388d1bd from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmadd.s f21, f27, f9, f10, dyn # perform operation
fnmadd.s f21, f27, f9, f10, rdn # perform operation
fnmadd.s f21, f27, f9, f10, rmm # perform operation
fnmadd.s f21, f27, f9, f10, rne # perform operation
fnmadd.s f21, f27, f9, f10, rtz # perform operation
fnmadd.s f21, f27, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f27, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f27, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f27, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f27, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f27, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x22, 0x0d68b99de6468e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x1db79362f9fb41b6 # load x3 with value 0x1db79362f9fb41b6
sw x3, 0(x2) # store 0x1db79362f9fb41b6 in memory
flw f12, 0(x2) # load 0x1db79362f9fb41b6 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmadd.s f22, f13, f12, f3, dyn # perform operation
fnmadd.s f22, f13, f12, f3, rdn # perform operation
fnmadd.s f22, f13, f12, f3, rmm # perform operation
fnmadd.s f22, f13, f12, f3, rne # perform operation
fnmadd.s f22, f13, f12, f3, rtz # perform operation
fnmadd.s f22, f13, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x14, 0xdebc76f5278bdf33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xcebe6d7449ec2eea # load x3 with value 0xcebe6d7449ec2eea
sw x3, 0(x2) # store 0xcebe6d7449ec2eea in memory
flw f8, 0(x2) # load 0xcebe6d7449ec2eea from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f14, f16, f8, f9, dyn # perform operation
fnmadd.s f14, f16, f8, f9, rdn # perform operation
fnmadd.s f14, f16, f8, f9, rmm # perform operation
fnmadd.s f14, f16, f8, f9, rne # perform operation
fnmadd.s f14, f16, f8, f9, rtz # perform operation
fnmadd.s f14, f16, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x9, 0x39fa745bac48ba7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x6d609c67c930dc7c # load x3 with value 0x6d609c67c930dc7c
sw x3, 0(x2) # store 0x6d609c67c930dc7c in memory
flw f20, 0(x2) # load 0x6d609c67c930dc7c from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmadd.s f9, f14, f20, f16, dyn # perform operation
fnmadd.s f9, f14, f20, f16, rdn # perform operation
fnmadd.s f9, f14, f20, f16, rmm # perform operation
fnmadd.s f9, f14, f20, f16, rne # perform operation
fnmadd.s f9, f14, f20, f16, rtz # perform operation
fnmadd.s f9, f14, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f14, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x3, 0x55972a286128bef8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x2b056523af2b2f1e # load x3 with value 0x2b056523af2b2f1e
sw x3, 0(x2) # store 0x2b056523af2b2f1e in memory
flw f5, 0(x2) # load 0x2b056523af2b2f1e from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmadd.s f3, f15, f5, f4, dyn # perform operation
fnmadd.s f3, f15, f5, f4, rdn # perform operation
fnmadd.s f3, f15, f5, f4, rmm # perform operation
fnmadd.s f3, f15, f5, f4, rne # perform operation
fnmadd.s f3, f15, f5, f4, rtz # perform operation
fnmadd.s f3, f15, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x1, 0x33cb2f4b38f1a4e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x5404b1f157a98541 # load x3 with value 0x5404b1f157a98541
sw x3, 0(x2) # store 0x5404b1f157a98541 in memory
flw f13, 0(x2) # load 0x5404b1f157a98541 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmadd.s f1, f31, f13, f3, dyn # perform operation
fnmadd.s f1, f31, f13, f3, rdn # perform operation
fnmadd.s f1, f31, f13, f3, rmm # perform operation
fnmadd.s f1, f31, f13, f3, rne # perform operation
fnmadd.s f1, f31, f13, f3, rtz # perform operation
fnmadd.s f1, f31, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x1, 0x9fd89b584f903ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x52526e65162a5d19 # load x3 with value 0x52526e65162a5d19
sw x3, 0(x2) # store 0x52526e65162a5d19 in memory
flw f19, 0(x2) # load 0x52526e65162a5d19 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmadd.s f1, f5, f19, f29, dyn # perform operation
fnmadd.s f1, f5, f19, f29, rdn # perform operation
fnmadd.s f1, f5, f19, f29, rmm # perform operation
fnmadd.s f1, f5, f19, f29, rne # perform operation
fnmadd.s f1, f5, f19, f29, rtz # perform operation
fnmadd.s f1, f5, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f19, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x9, 0xdbb5afb7a9911207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0xffca390c4f002423 # load x3 with value 0xffca390c4f002423
sw x3, 0(x2) # store 0xffca390c4f002423 in memory
flw f19, 0(x2) # load 0xffca390c4f002423 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fnmadd.s f9, f21, f19, f6, dyn # perform operation
fnmadd.s f9, f21, f19, f6, rdn # perform operation
fnmadd.s f9, f21, f19, f6, rmm # perform operation
fnmadd.s f9, f21, f19, f6, rne # perform operation
fnmadd.s f9, f21, f19, f6, rtz # perform operation
fnmadd.s f9, f21, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f21, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x16, 0x88d81387dd7330a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xa5f716ec142dacb4 # load x3 with value 0xa5f716ec142dacb4
sw x3, 0(x2) # store 0xa5f716ec142dacb4 in memory
flw f20, 0(x2) # load 0xa5f716ec142dacb4 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f16, f24, f20, f9, dyn # perform operation
fnmadd.s f16, f24, f20, f9, rdn # perform operation
fnmadd.s f16, f24, f20, f9, rmm # perform operation
fnmadd.s f16, f24, f20, f9, rne # perform operation
fnmadd.s f16, f24, f20, f9, rtz # perform operation
fnmadd.s f16, f24, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x1, 0x9e3f5c3c580d76b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x309d2717b853cdd3 # load x3 with value 0x309d2717b853cdd3
sw x3, 0(x2) # store 0x309d2717b853cdd3 in memory
flw f17, 0(x2) # load 0x309d2717b853cdd3 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmadd.s f1, f14, f17, f12, dyn # perform operation
fnmadd.s f1, f14, f17, f12, rdn # perform operation
fnmadd.s f1, f14, f17, f12, rmm # perform operation
fnmadd.s f1, f14, f17, f12, rne # perform operation
fnmadd.s f1, f14, f17, f12, rtz # perform operation
fnmadd.s f1, f14, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x14, 0xabf7d2ffcee4e158 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x993a0302884db69a # load x3 with value 0x993a0302884db69a
sw x3, 0(x2) # store 0x993a0302884db69a in memory
flw f22, 0(x2) # load 0x993a0302884db69a from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmadd.s f14, f6, f22, f11, dyn # perform operation
fnmadd.s f14, f6, f22, f11, rdn # perform operation
fnmadd.s f14, f6, f22, f11, rmm # perform operation
fnmadd.s f14, f6, f22, f11, rne # perform operation
fnmadd.s f14, f6, f22, f11, rtz # perform operation
fnmadd.s f14, f6, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f6, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f6, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f6, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f6, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f6, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x11, 0x6bc84ad81c967f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x9984fdab66a3891f # load x3 with value 0x9984fdab66a3891f
sw x3, 0(x2) # store 0x9984fdab66a3891f in memory
flw f25, 0(x2) # load 0x9984fdab66a3891f from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fnmadd.s f11, f5, f25, f14, dyn # perform operation
fnmadd.s f11, f5, f25, f14, rdn # perform operation
fnmadd.s f11, f5, f25, f14, rmm # perform operation
fnmadd.s f11, f5, f25, f14, rne # perform operation
fnmadd.s f11, f5, f25, f14, rtz # perform operation
fnmadd.s f11, f5, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x20, 0x42460d8b07c6e27b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x838676517d78b1d # load x3 with value 0x838676517d78b1d
sw x3, 0(x2) # store 0x838676517d78b1d in memory
flw f26, 0(x2) # load 0x838676517d78b1d from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmadd.s f20, f5, f26, f28, dyn # perform operation
fnmadd.s f20, f5, f26, f28, rdn # perform operation
fnmadd.s f20, f5, f26, f28, rmm # perform operation
fnmadd.s f20, f5, f26, f28, rne # perform operation
fnmadd.s f20, f5, f26, f28, rtz # perform operation
fnmadd.s f20, f5, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x24, 0x12756c7b66a42a0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x791ec2304e9d357d # load x3 with value 0x791ec2304e9d357d
sw x3, 0(x2) # store 0x791ec2304e9d357d in memory
flw f27, 0(x2) # load 0x791ec2304e9d357d from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fnmadd.s f24, f30, f27, f8, dyn # perform operation
fnmadd.s f24, f30, f27, f8, rdn # perform operation
fnmadd.s f24, f30, f27, f8, rmm # perform operation
fnmadd.s f24, f30, f27, f8, rne # perform operation
fnmadd.s f24, f30, f27, f8, rtz # perform operation
fnmadd.s f24, f30, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x23, 0x162a4d9310076bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x11cc4c816034addb # load x3 with value 0x11cc4c816034addb
sw x3, 0(x2) # store 0x11cc4c816034addb in memory
flw f25, 0(x2) # load 0x11cc4c816034addb from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmadd.s f23, f5, f25, f15, dyn # perform operation
fnmadd.s f23, f5, f25, f15, rdn # perform operation
fnmadd.s f23, f5, f25, f15, rmm # perform operation
fnmadd.s f23, f5, f25, f15, rne # perform operation
fnmadd.s f23, f5, f25, f15, rtz # perform operation
fnmadd.s f23, f5, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f5, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x19, 0x3c81231f7af1957f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0xdbf422b2eb5cbcf8 # load x3 with value 0xdbf422b2eb5cbcf8
sw x3, 0(x2) # store 0xdbf422b2eb5cbcf8 in memory
flw f18, 0(x2) # load 0xdbf422b2eb5cbcf8 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fnmadd.s f19, f15, f18, f23, dyn # perform operation
fnmadd.s f19, f15, f18, f23, rdn # perform operation
fnmadd.s f19, f15, f18, f23, rmm # perform operation
fnmadd.s f19, f15, f18, f23, rne # perform operation
fnmadd.s f19, f15, f18, f23, rtz # perform operation
fnmadd.s f19, f15, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f15, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f15, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x3, 0x1d8d508092274b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x680f3c5fadd7ded1 # load x3 with value 0x680f3c5fadd7ded1
sw x3, 0(x2) # store 0x680f3c5fadd7ded1 in memory
flw f21, 0(x2) # load 0x680f3c5fadd7ded1 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fnmadd.s f3, f31, f21, f23, dyn # perform operation
fnmadd.s f3, f31, f21, f23, rdn # perform operation
fnmadd.s f3, f31, f21, f23, rmm # perform operation
fnmadd.s f3, f31, f21, f23, rne # perform operation
fnmadd.s f3, f31, f21, f23, rtz # perform operation
fnmadd.s f3, f31, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x29, 0x8206cd0542d11ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x80a1d5258a3ceff6 # load x3 with value 0x80a1d5258a3ceff6
sw x3, 0(x2) # store 0x80a1d5258a3ceff6 in memory
flw f23, 0(x2) # load 0x80a1d5258a3ceff6 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f29, f1, f23, f9, dyn # perform operation
fnmadd.s f29, f1, f23, f9, rdn # perform operation
fnmadd.s f29, f1, f23, f9, rmm # perform operation
fnmadd.s f29, f1, f23, f9, rne # perform operation
fnmadd.s f29, f1, f23, f9, rtz # perform operation
fnmadd.s f29, f1, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f1, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f1, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x8, 0x99109db70131a11e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x2e740493aa098af0 # load x3 with value 0x2e740493aa098af0
sw x3, 0(x2) # store 0x2e740493aa098af0 in memory
flw f22, 0(x2) # load 0x2e740493aa098af0 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f8, f19, f22, f20, dyn # perform operation
fnmadd.s f8, f19, f22, f20, rdn # perform operation
fnmadd.s f8, f19, f22, f20, rmm # perform operation
fnmadd.s f8, f19, f22, f20, rne # perform operation
fnmadd.s f8, f19, f22, f20, rtz # perform operation
fnmadd.s f8, f19, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x10, 0xcd7e9ea42fbd6dad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xdac449e8b2a50a1 # load x3 with value 0xdac449e8b2a50a1
sw x3, 0(x2) # store 0xdac449e8b2a50a1 in memory
flw f16, 0(x2) # load 0xdac449e8b2a50a1 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmadd.s f10, f23, f16, f24, dyn # perform operation
fnmadd.s f10, f23, f16, f24, rdn # perform operation
fnmadd.s f10, f23, f16, f24, rmm # perform operation
fnmadd.s f10, f23, f16, f24, rne # perform operation
fnmadd.s f10, f23, f16, f24, rtz # perform operation
fnmadd.s f10, f23, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x20, 0x77f615fbf70e872f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xa08e60fc714485e3 # load x3 with value 0xa08e60fc714485e3
sw x3, 0(x2) # store 0xa08e60fc714485e3 in memory
flw f23, 0(x2) # load 0xa08e60fc714485e3 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmadd.s f20, f9, f23, f11, dyn # perform operation
fnmadd.s f20, f9, f23, f11, rdn # perform operation
fnmadd.s f20, f9, f23, f11, rmm # perform operation
fnmadd.s f20, f9, f23, f11, rne # perform operation
fnmadd.s f20, f9, f23, f11, rtz # perform operation
fnmadd.s f20, f9, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x23, 0x6a7d7eb5a9fe72a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x7f0acff1317ebecb # load x3 with value 0x7f0acff1317ebecb
sw x3, 0(x2) # store 0x7f0acff1317ebecb in memory
flw f31, 0(x2) # load 0x7f0acff1317ebecb from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fnmadd.s f23, f22, f31, f2, dyn # perform operation
fnmadd.s f23, f22, f31, f2, rdn # perform operation
fnmadd.s f23, f22, f31, f2, rmm # perform operation
fnmadd.s f23, f22, f31, f2, rne # perform operation
fnmadd.s f23, f22, f31, f2, rtz # perform operation
fnmadd.s f23, f22, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f22, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x3, 0x156ba5190c415a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xe358bc3d68527548 # load x3 with value 0xe358bc3d68527548
sw x3, 0(x2) # store 0xe358bc3d68527548 in memory
flw f29, 0(x2) # load 0xe358bc3d68527548 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmadd.s f3, f30, f29, f31, dyn # perform operation
fnmadd.s f3, f30, f29, f31, rdn # perform operation
fnmadd.s f3, f30, f29, f31, rmm # perform operation
fnmadd.s f3, f30, f29, f31, rne # perform operation
fnmadd.s f3, f30, f29, f31, rtz # perform operation
fnmadd.s f3, f30, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x8, 0xa9a1d05519b5bb89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x97467e239c9ca01e # load x3 with value 0x97467e239c9ca01e
sw x3, 0(x2) # store 0x97467e239c9ca01e in memory
flw f11, 0(x2) # load 0x97467e239c9ca01e from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f8, f9, f11, f19, dyn # perform operation
fnmadd.s f8, f9, f11, f19, rdn # perform operation
fnmadd.s f8, f9, f11, f19, rmm # perform operation
fnmadd.s f8, f9, f11, f19, rne # perform operation
fnmadd.s f8, f9, f11, f19, rtz # perform operation
fnmadd.s f8, f9, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f9, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x18, 0xab795dbcd52e9ecd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0xeeb797a066fd625a # load x3 with value 0xeeb797a066fd625a
sw x3, 0(x2) # store 0xeeb797a066fd625a in memory
flw f12, 0(x2) # load 0xeeb797a066fd625a from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f18, f29, f12, f21, dyn # perform operation
fnmadd.s f18, f29, f12, f21, rdn # perform operation
fnmadd.s f18, f29, f12, f21, rmm # perform operation
fnmadd.s f18, f29, f12, f21, rne # perform operation
fnmadd.s f18, f29, f12, f21, rtz # perform operation
fnmadd.s f18, f29, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x17, 0xd7e6e982b9c362de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x94788eae2cd6491e # load x3 with value 0x94788eae2cd6491e
sw x3, 0(x2) # store 0x94788eae2cd6491e in memory
flw f11, 0(x2) # load 0x94788eae2cd6491e from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f17, f25, f11, f15, dyn # perform operation
fnmadd.s f17, f25, f11, f15, rdn # perform operation
fnmadd.s f17, f25, f11, f15, rmm # perform operation
fnmadd.s f17, f25, f11, f15, rne # perform operation
fnmadd.s f17, f25, f11, f15, rtz # perform operation
fnmadd.s f17, f25, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x6, 0xa17adfeab8dd2bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xbaac96ddded3a4e3 # load x3 with value 0xbaac96ddded3a4e3
sw x3, 0(x2) # store 0xbaac96ddded3a4e3 in memory
flw f21, 0(x2) # load 0xbaac96ddded3a4e3 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fnmadd.s f6, f10, f21, f17, dyn # perform operation
fnmadd.s f6, f10, f21, f17, rdn # perform operation
fnmadd.s f6, f10, f21, f17, rmm # perform operation
fnmadd.s f6, f10, f21, f17, rne # perform operation
fnmadd.s f6, f10, f21, f17, rtz # perform operation
fnmadd.s f6, f10, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x3, 0xc4db5638204fc433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x9c0027a34717cf73 # load x3 with value 0x9c0027a34717cf73
sw x3, 0(x2) # store 0x9c0027a34717cf73 in memory
flw f18, 0(x2) # load 0x9c0027a34717cf73 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fnmadd.s f3, f9, f18, f25, dyn # perform operation
fnmadd.s f3, f9, f18, f25, rdn # perform operation
fnmadd.s f3, f9, f18, f25, rmm # perform operation
fnmadd.s f3, f9, f18, f25, rne # perform operation
fnmadd.s f3, f9, f18, f25, rtz # perform operation
fnmadd.s f3, f9, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x2, 0x94c6b1203916271f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x231c6e135f657047 # load x3 with value 0x231c6e135f657047
sw x3, 0(x2) # store 0x231c6e135f657047 in memory
flw f24, 0(x2) # load 0x231c6e135f657047 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmadd.s f2, f29, f24, f6, dyn # perform operation
fnmadd.s f2, f29, f24, f6, rdn # perform operation
fnmadd.s f2, f29, f24, f6, rmm # perform operation
fnmadd.s f2, f29, f24, f6, rne # perform operation
fnmadd.s f2, f29, f24, f6, rtz # perform operation
fnmadd.s f2, f29, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x30, 0x2faa566ac22b5e4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xb32175fddabda5aa # load x3 with value 0xb32175fddabda5aa
sw x3, 0(x2) # store 0xb32175fddabda5aa in memory
flw f10, 0(x2) # load 0xb32175fddabda5aa from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fnmadd.s f30, f8, f10, f22, dyn # perform operation
fnmadd.s f30, f8, f10, f22, rdn # perform operation
fnmadd.s f30, f8, f10, f22, rmm # perform operation
fnmadd.s f30, f8, f10, f22, rne # perform operation
fnmadd.s f30, f8, f10, f22, rtz # perform operation
fnmadd.s f30, f8, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f8, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f8, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x15, 0xed5188246248afbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x5b0b4334d899a50c # load x3 with value 0x5b0b4334d899a50c
sw x3, 0(x2) # store 0x5b0b4334d899a50c in memory
flw f29, 0(x2) # load 0x5b0b4334d899a50c from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmadd.s f15, f20, f29, f26, dyn # perform operation
fnmadd.s f15, f20, f29, f26, rdn # perform operation
fnmadd.s f15, f20, f29, f26, rmm # perform operation
fnmadd.s f15, f20, f29, f26, rne # perform operation
fnmadd.s f15, f20, f29, f26, rtz # perform operation
fnmadd.s f15, f20, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x27, 0xcf1d56371114b007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xac8e9df5a7667f3d # load x3 with value 0xac8e9df5a7667f3d
sw x3, 0(x2) # store 0xac8e9df5a7667f3d in memory
flw f4, 0(x2) # load 0xac8e9df5a7667f3d from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmadd.s f27, f26, f4, f18, dyn # perform operation
fnmadd.s f27, f26, f4, f18, rdn # perform operation
fnmadd.s f27, f26, f4, f18, rmm # perform operation
fnmadd.s f27, f26, f4, f18, rne # perform operation
fnmadd.s f27, f26, f4, f18, rtz # perform operation
fnmadd.s f27, f26, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x19, 0x0fbc03c0e6295e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xee8fa9867ffeb309 # load x3 with value 0xee8fa9867ffeb309
sw x3, 0(x2) # store 0xee8fa9867ffeb309 in memory
flw f21, 0(x2) # load 0xee8fa9867ffeb309 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmadd.s f19, f3, f21, f31, dyn # perform operation
fnmadd.s f19, f3, f21, f31, rdn # perform operation
fnmadd.s f19, f3, f21, f31, rmm # perform operation
fnmadd.s f19, f3, f21, f31, rne # perform operation
fnmadd.s f19, f3, f21, f31, rtz # perform operation
fnmadd.s f19, f3, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x19, 0x038d46f8352c5a35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x6bf1b84a8dc6d80e # load x3 with value 0x6bf1b84a8dc6d80e
sw x3, 0(x2) # store 0x6bf1b84a8dc6d80e in memory
flw f16, 0(x2) # load 0x6bf1b84a8dc6d80e from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmadd.s f19, f17, f16, f8, dyn # perform operation
fnmadd.s f19, f17, f16, f8, rdn # perform operation
fnmadd.s f19, f17, f16, f8, rmm # perform operation
fnmadd.s f19, f17, f16, f8, rne # perform operation
fnmadd.s f19, f17, f16, f8, rtz # perform operation
fnmadd.s f19, f17, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f17, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f17, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x14, 0xe74291a287090a8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x98606e9f40084cc # load x3 with value 0x98606e9f40084cc
sw x3, 0(x2) # store 0x98606e9f40084cc in memory
flw f4, 0(x2) # load 0x98606e9f40084cc from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fnmadd.s f14, f16, f4, f17, dyn # perform operation
fnmadd.s f14, f16, f4, f17, rdn # perform operation
fnmadd.s f14, f16, f4, f17, rmm # perform operation
fnmadd.s f14, f16, f4, f17, rne # perform operation
fnmadd.s f14, f16, f4, f17, rtz # perform operation
fnmadd.s f14, f16, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x26, 0x2f42b5fa13ca2220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x77e5fba88fdf556c # load x3 with value 0x77e5fba88fdf556c
sw x3, 0(x2) # store 0x77e5fba88fdf556c in memory
flw f10, 0(x2) # load 0x77e5fba88fdf556c from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f26, f22, f10, f30, dyn # perform operation
fnmadd.s f26, f22, f10, f30, rdn # perform operation
fnmadd.s f26, f22, f10, f30, rmm # perform operation
fnmadd.s f26, f22, f10, f30, rne # perform operation
fnmadd.s f26, f22, f10, f30, rtz # perform operation
fnmadd.s f26, f22, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x16, 0x954f906462602267 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x6a91c575ecd8c376 # load x3 with value 0x6a91c575ecd8c376
sw x3, 0(x2) # store 0x6a91c575ecd8c376 in memory
flw f18, 0(x2) # load 0x6a91c575ecd8c376 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmadd.s f16, f23, f18, f3, dyn # perform operation
fnmadd.s f16, f23, f18, f3, rdn # perform operation
fnmadd.s f16, f23, f18, f3, rmm # perform operation
fnmadd.s f16, f23, f18, f3, rne # perform operation
fnmadd.s f16, f23, f18, f3, rtz # perform operation
fnmadd.s f16, f23, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x3, 0x1d8c93bee861fc0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xd3fb69786336de9c # load x3 with value 0xd3fb69786336de9c
sw x3, 0(x2) # store 0xd3fb69786336de9c in memory
flw f22, 0(x2) # load 0xd3fb69786336de9c from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmadd.s f3, f15, f22, f10, dyn # perform operation
fnmadd.s f3, f15, f22, f10, rdn # perform operation
fnmadd.s f3, f15, f22, f10, rmm # perform operation
fnmadd.s f3, f15, f22, f10, rne # perform operation
fnmadd.s f3, f15, f22, f10, rtz # perform operation
fnmadd.s f3, f15, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x10, 0x59d0fe87900830e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xc033822ec24b2c9d # load x3 with value 0xc033822ec24b2c9d
sw x3, 0(x2) # store 0xc033822ec24b2c9d in memory
flw f30, 0(x2) # load 0xc033822ec24b2c9d from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmadd.s f10, f1, f30, f20, dyn # perform operation
fnmadd.s f10, f1, f30, f20, rdn # perform operation
fnmadd.s f10, f1, f30, f20, rmm # perform operation
fnmadd.s f10, f1, f30, f20, rne # perform operation
fnmadd.s f10, f1, f30, f20, rtz # perform operation
fnmadd.s f10, f1, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x13, 0x5a58467351e91476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x9f7d27f456a69c7d # load x3 with value 0x9f7d27f456a69c7d
sw x3, 0(x2) # store 0x9f7d27f456a69c7d in memory
flw f28, 0(x2) # load 0x9f7d27f456a69c7d from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.s f13, f29, f28, f25, dyn # perform operation
fnmadd.s f13, f29, f28, f25, rdn # perform operation
fnmadd.s f13, f29, f28, f25, rmm # perform operation
fnmadd.s f13, f29, f28, f25, rne # perform operation
fnmadd.s f13, f29, f28, f25, rtz # perform operation
fnmadd.s f13, f29, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f29, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f29, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x12, 0xe9c95704d9571dc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x55b699dd88804f4b # load x3 with value 0x55b699dd88804f4b
sw x3, 0(x2) # store 0x55b699dd88804f4b in memory
flw f14, 0(x2) # load 0x55b699dd88804f4b from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fnmadd.s f12, f3, f14, f16, dyn # perform operation
fnmadd.s f12, f3, f14, f16, rdn # perform operation
fnmadd.s f12, f3, f14, f16, rmm # perform operation
fnmadd.s f12, f3, f14, f16, rne # perform operation
fnmadd.s f12, f3, f14, f16, rtz # perform operation
fnmadd.s f12, f3, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x11, 0x54200bbb4ae8277f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0xa789381b86b144d2 # load x3 with value 0xa789381b86b144d2
sw x3, 0(x2) # store 0xa789381b86b144d2 in memory
flw f30, 0(x2) # load 0xa789381b86b144d2 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fnmadd.s f11, f19, f30, f18, dyn # perform operation
fnmadd.s f11, f19, f30, f18, rdn # perform operation
fnmadd.s f11, f19, f30, f18, rmm # perform operation
fnmadd.s f11, f19, f30, f18, rne # perform operation
fnmadd.s f11, f19, f30, f18, rtz # perform operation
fnmadd.s f11, f19, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x22, 0x0f8cef75111ce1c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xc62c48b63d5991d3 # load x3 with value 0xc62c48b63d5991d3
sw x3, 0(x2) # store 0xc62c48b63d5991d3 in memory
flw f18, 0(x2) # load 0xc62c48b63d5991d3 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fnmadd.s f22, f3, f18, f10, dyn # perform operation
fnmadd.s f22, f3, f18, f10, rdn # perform operation
fnmadd.s f22, f3, f18, f10, rmm # perform operation
fnmadd.s f22, f3, f18, f10, rne # perform operation
fnmadd.s f22, f3, f18, f10, rtz # perform operation
fnmadd.s f22, f3, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x10, 0x3ba84e26a8f8655d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xe6395c9432bdde2c # load x3 with value 0xe6395c9432bdde2c
sw x3, 0(x2) # store 0xe6395c9432bdde2c in memory
flw f8, 0(x2) # load 0xe6395c9432bdde2c from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f10, f20, f8, f16, dyn # perform operation
fnmadd.s f10, f20, f8, f16, rdn # perform operation
fnmadd.s f10, f20, f8, f16, rmm # perform operation
fnmadd.s f10, f20, f8, f16, rne # perform operation
fnmadd.s f10, f20, f8, f16, rtz # perform operation
fnmadd.s f10, f20, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x3, 0x1c9246f5dc44bcbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x62dd0ee74b3b9842 # load x3 with value 0x62dd0ee74b3b9842
sw x3, 0(x2) # store 0x62dd0ee74b3b9842 in memory
flw f16, 0(x2) # load 0x62dd0ee74b3b9842 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmadd.s f3, f22, f16, f30, dyn # perform operation
fnmadd.s f3, f22, f16, f30, rdn # perform operation
fnmadd.s f3, f22, f16, f30, rmm # perform operation
fnmadd.s f3, f22, f16, f30, rne # perform operation
fnmadd.s f3, f22, f16, f30, rtz # perform operation
fnmadd.s f3, f22, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x7, 0x4a624270d8ec7bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x762b35c72790fbb2 # load x3 with value 0x762b35c72790fbb2
sw x3, 0(x2) # store 0x762b35c72790fbb2 in memory
flw f24, 0(x2) # load 0x762b35c72790fbb2 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f7, f21, f24, f14, dyn # perform operation
fnmadd.s f7, f21, f24, f14, rdn # perform operation
fnmadd.s f7, f21, f24, f14, rmm # perform operation
fnmadd.s f7, f21, f24, f14, rne # perform operation
fnmadd.s f7, f21, f24, f14, rtz # perform operation
fnmadd.s f7, f21, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f21, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f21, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x29, 0xdc5a9e5de43c8e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xa0e8a0475f0e5039 # load x3 with value 0xa0e8a0475f0e5039
sw x3, 0(x2) # store 0xa0e8a0475f0e5039 in memory
flw f4, 0(x2) # load 0xa0e8a0475f0e5039 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmadd.s f29, f15, f4, f26, dyn # perform operation
fnmadd.s f29, f15, f4, f26, rdn # perform operation
fnmadd.s f29, f15, f4, f26, rmm # perform operation
fnmadd.s f29, f15, f4, f26, rne # perform operation
fnmadd.s f29, f15, f4, f26, rtz # perform operation
fnmadd.s f29, f15, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f4, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x12, 0x13a59ecc6f441b1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x848e02e2919745a9 # load x3 with value 0x848e02e2919745a9
sw x3, 0(x2) # store 0x848e02e2919745a9 in memory
flw f16, 0(x2) # load 0x848e02e2919745a9 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fnmadd.s f12, f14, f16, f5, dyn # perform operation
fnmadd.s f12, f14, f16, f5, rdn # perform operation
fnmadd.s f12, f14, f16, f5, rmm # perform operation
fnmadd.s f12, f14, f16, f5, rne # perform operation
fnmadd.s f12, f14, f16, f5, rtz # perform operation
fnmadd.s f12, f14, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x3, 0xe1ad1f1a0dae85df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0xff07dbf8c8ad4a8e # load x3 with value 0xff07dbf8c8ad4a8e
sw x3, 0(x2) # store 0xff07dbf8c8ad4a8e in memory
flw f20, 0(x2) # load 0xff07dbf8c8ad4a8e from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmadd.s f3, f12, f20, f8, dyn # perform operation
fnmadd.s f3, f12, f20, f8, rdn # perform operation
fnmadd.s f3, f12, f20, f8, rmm # perform operation
fnmadd.s f3, f12, f20, f8, rne # perform operation
fnmadd.s f3, f12, f20, f8, rtz # perform operation
fnmadd.s f3, f12, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x18, 0x78e73674e407acb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xb249a4e3660f1bd # load x3 with value 0xb249a4e3660f1bd
sw x3, 0(x2) # store 0xb249a4e3660f1bd in memory
flw f19, 0(x2) # load 0xb249a4e3660f1bd from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fnmadd.s f18, f26, f19, f20, dyn # perform operation
fnmadd.s f18, f26, f19, f20, rdn # perform operation
fnmadd.s f18, f26, f19, f20, rmm # perform operation
fnmadd.s f18, f26, f19, f20, rne # perform operation
fnmadd.s f18, f26, f19, f20, rtz # perform operation
fnmadd.s f18, f26, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x26, 0x9fa508c262ac6bac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x608bcbcbd12be051 # load x3 with value 0x608bcbcbd12be051
sw x3, 0(x2) # store 0x608bcbcbd12be051 in memory
flw f27, 0(x2) # load 0x608bcbcbd12be051 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmadd.s f26, f31, f27, f1, dyn # perform operation
fnmadd.s f26, f31, f27, f1, rdn # perform operation
fnmadd.s f26, f31, f27, f1, rmm # perform operation
fnmadd.s f26, f31, f27, f1, rne # perform operation
fnmadd.s f26, f31, f27, f1, rtz # perform operation
fnmadd.s f26, f31, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x16, 0x40b58d759ac7e544 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xc39e6761082d39d4 # load x3 with value 0xc39e6761082d39d4
sw x3, 0(x2) # store 0xc39e6761082d39d4 in memory
flw f4, 0(x2) # load 0xc39e6761082d39d4 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmadd.s f16, f27, f4, f24, dyn # perform operation
fnmadd.s f16, f27, f4, f24, rdn # perform operation
fnmadd.s f16, f27, f4, f24, rmm # perform operation
fnmadd.s f16, f27, f4, f24, rne # perform operation
fnmadd.s f16, f27, f4, f24, rtz # perform operation
fnmadd.s f16, f27, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x6, 0x186489bf8753436f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xdc7c62a8efa02429 # load x3 with value 0xdc7c62a8efa02429
sw x3, 0(x2) # store 0xdc7c62a8efa02429 in memory
flw f4, 0(x2) # load 0xdc7c62a8efa02429 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fnmadd.s f6, f22, f4, f29, dyn # perform operation
fnmadd.s f6, f22, f4, f29, rdn # perform operation
fnmadd.s f6, f22, f4, f29, rmm # perform operation
fnmadd.s f6, f22, f4, f29, rne # perform operation
fnmadd.s f6, f22, f4, f29, rtz # perform operation
fnmadd.s f6, f22, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f22, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x11, 0x7b6c680d76aa8244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x4caa4bb6334cb00a # load x3 with value 0x4caa4bb6334cb00a
sw x3, 0(x2) # store 0x4caa4bb6334cb00a in memory
flw f26, 0(x2) # load 0x4caa4bb6334cb00a from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmadd.s f11, f18, f26, f2, dyn # perform operation
fnmadd.s f11, f18, f26, f2, rdn # perform operation
fnmadd.s f11, f18, f26, f2, rmm # perform operation
fnmadd.s f11, f18, f26, f2, rne # perform operation
fnmadd.s f11, f18, f26, f2, rtz # perform operation
fnmadd.s f11, f18, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x11, 0x3d0e7d8db2a71269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x81774cc6392cc384 # load x3 with value 0x81774cc6392cc384
sw x3, 0(x2) # store 0x81774cc6392cc384 in memory
flw f3, 0(x2) # load 0x81774cc6392cc384 from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmadd.s f11, f19, f3, f25, dyn # perform operation
fnmadd.s f11, f19, f3, f25, rdn # perform operation
fnmadd.s f11, f19, f3, f25, rmm # perform operation
fnmadd.s f11, f19, f3, f25, rne # perform operation
fnmadd.s f11, f19, f3, f25, rtz # perform operation
fnmadd.s f11, f19, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x26, 0xb8d1c19cee148842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xc3e96322ed0e1924 # load x3 with value 0xc3e96322ed0e1924
sw x3, 0(x2) # store 0xc3e96322ed0e1924 in memory
flw f21, 0(x2) # load 0xc3e96322ed0e1924 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f26, f27, f21, f2, dyn # perform operation
fnmadd.s f26, f27, f21, f2, rdn # perform operation
fnmadd.s f26, f27, f21, f2, rmm # perform operation
fnmadd.s f26, f27, f21, f2, rne # perform operation
fnmadd.s f26, f27, f21, f2, rtz # perform operation
fnmadd.s f26, f27, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x19, 0x5c787acde09f1510 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x82a04d0f0c0f26df # load x3 with value 0x82a04d0f0c0f26df
sw x3, 0(x2) # store 0x82a04d0f0c0f26df in memory
flw f26, 0(x2) # load 0x82a04d0f0c0f26df from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fnmadd.s f19, f13, f26, f4, dyn # perform operation
fnmadd.s f19, f13, f26, f4, rdn # perform operation
fnmadd.s f19, f13, f26, f4, rmm # perform operation
fnmadd.s f19, f13, f26, f4, rne # perform operation
fnmadd.s f19, f13, f26, f4, rtz # perform operation
fnmadd.s f19, f13, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x31, 0x34f3c5dd1f9a3bf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xf982d10b225c5955 # load x3 with value 0xf982d10b225c5955
sw x3, 0(x2) # store 0xf982d10b225c5955 in memory
flw f4, 0(x2) # load 0xf982d10b225c5955 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmadd.s f31, f17, f4, f27, dyn # perform operation
fnmadd.s f31, f17, f4, f27, rdn # perform operation
fnmadd.s f31, f17, f4, f27, rmm # perform operation
fnmadd.s f31, f17, f4, f27, rne # perform operation
fnmadd.s f31, f17, f4, f27, rtz # perform operation
fnmadd.s f31, f17, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x5, 0xdae4d385806ae1fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x5ab2f6dcf3911e73 # load x3 with value 0x5ab2f6dcf3911e73
sw x3, 0(x2) # store 0x5ab2f6dcf3911e73 in memory
flw f21, 0(x2) # load 0x5ab2f6dcf3911e73 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmadd.s f5, f22, f21, f31, dyn # perform operation
fnmadd.s f5, f22, f21, f31, rdn # perform operation
fnmadd.s f5, f22, f21, f31, rmm # perform operation
fnmadd.s f5, f22, f21, f31, rne # perform operation
fnmadd.s f5, f22, f21, f31, rtz # perform operation
fnmadd.s f5, f22, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x26, 0xab50b5a0d1d06495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xd05b1efad3066ebc # load x3 with value 0xd05b1efad3066ebc
sw x3, 0(x2) # store 0xd05b1efad3066ebc in memory
flw f18, 0(x2) # load 0xd05b1efad3066ebc from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fnmadd.s f26, f9, f18, f21, dyn # perform operation
fnmadd.s f26, f9, f18, f21, rdn # perform operation
fnmadd.s f26, f9, f18, f21, rmm # perform operation
fnmadd.s f26, f9, f18, f21, rne # perform operation
fnmadd.s f26, f9, f18, f21, rtz # perform operation
fnmadd.s f26, f9, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x29, 0x859cb50bd9147a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x36ef3f7fc146c2fd # load x3 with value 0x36ef3f7fc146c2fd
sw x3, 0(x2) # store 0x36ef3f7fc146c2fd in memory
flw f4, 0(x2) # load 0x36ef3f7fc146c2fd from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f29, f15, f4, f3, dyn # perform operation
fnmadd.s f29, f15, f4, f3, rdn # perform operation
fnmadd.s f29, f15, f4, f3, rmm # perform operation
fnmadd.s f29, f15, f4, f3, rne # perform operation
fnmadd.s f29, f15, f4, f3, rtz # perform operation
fnmadd.s f29, f15, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x31, 0xe28e49d2ac0ba4a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xba8abdafecd15ae9 # load x3 with value 0xba8abdafecd15ae9
sw x3, 0(x2) # store 0xba8abdafecd15ae9 in memory
flw f1, 0(x2) # load 0xba8abdafecd15ae9 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmadd.s f31, f5, f1, f11, dyn # perform operation
fnmadd.s f31, f5, f1, f11, rdn # perform operation
fnmadd.s f31, f5, f1, f11, rmm # perform operation
fnmadd.s f31, f5, f1, f11, rne # perform operation
fnmadd.s f31, f5, f1, f11, rtz # perform operation
fnmadd.s f31, f5, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x6, 0x89fcedd607b3d2d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7edcc3593fe79b5a # load x3 with value 0x7edcc3593fe79b5a
sw x3, 0(x2) # store 0x7edcc3593fe79b5a in memory
flw f18, 0(x2) # load 0x7edcc3593fe79b5a from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fnmadd.s f6, f23, f18, f30, dyn # perform operation
fnmadd.s f6, f23, f18, f30, rdn # perform operation
fnmadd.s f6, f23, f18, f30, rmm # perform operation
fnmadd.s f6, f23, f18, f30, rne # perform operation
fnmadd.s f6, f23, f18, f30, rtz # perform operation
fnmadd.s f6, f23, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f23, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x14, 0xcb2a959a215e9e26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x2f61b5c862f25e9d # load x3 with value 0x2f61b5c862f25e9d
sw x3, 0(x2) # store 0x2f61b5c862f25e9d in memory
flw f22, 0(x2) # load 0x2f61b5c862f25e9d from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fnmadd.s f14, f18, f22, f4, dyn # perform operation
fnmadd.s f14, f18, f22, f4, rdn # perform operation
fnmadd.s f14, f18, f22, f4, rmm # perform operation
fnmadd.s f14, f18, f22, f4, rne # perform operation
fnmadd.s f14, f18, f22, f4, rtz # perform operation
fnmadd.s f14, f18, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f18, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f18, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f18, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f18, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f18, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x18, 0x6f45f5828d97f106 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x66756b90e67c10bf # load x3 with value 0x66756b90e67c10bf
sw x3, 0(x2) # store 0x66756b90e67c10bf in memory
flw f26, 0(x2) # load 0x66756b90e67c10bf from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmadd.s f18, f16, f26, f6, dyn # perform operation
fnmadd.s f18, f16, f26, f6, rdn # perform operation
fnmadd.s f18, f16, f26, f6, rmm # perform operation
fnmadd.s f18, f16, f26, f6, rne # perform operation
fnmadd.s f18, f16, f26, f6, rtz # perform operation
fnmadd.s f18, f16, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f16, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x12, 0x40356dc8bbc41b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x1229caf6bb135aac # load x3 with value 0x1229caf6bb135aac
sw x3, 0(x2) # store 0x1229caf6bb135aac in memory
flw f7, 0(x2) # load 0x1229caf6bb135aac from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.s f12, f3, f7, f15, dyn # perform operation
fnmadd.s f12, f3, f7, f15, rdn # perform operation
fnmadd.s f12, f3, f7, f15, rmm # perform operation
fnmadd.s f12, f3, f7, f15, rne # perform operation
fnmadd.s f12, f3, f7, f15, rtz # perform operation
fnmadd.s f12, f3, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x3, 0xe5939e6660665fcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xf7b346561ed87e04 # load x3 with value 0xf7b346561ed87e04
sw x3, 0(x2) # store 0xf7b346561ed87e04 in memory
flw f13, 0(x2) # load 0xf7b346561ed87e04 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmadd.s f3, f27, f13, f17, dyn # perform operation
fnmadd.s f3, f27, f13, f17, rdn # perform operation
fnmadd.s f3, f27, f13, f17, rmm # perform operation
fnmadd.s f3, f27, f13, f17, rne # perform operation
fnmadd.s f3, f27, f13, f17, rtz # perform operation
fnmadd.s f3, f27, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x16, 0xde34969278aaf16b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xb202b51f37bc5875 # load x3 with value 0xb202b51f37bc5875
sw x3, 0(x2) # store 0xb202b51f37bc5875 in memory
flw f29, 0(x2) # load 0xb202b51f37bc5875 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmadd.s f16, f7, f29, f9, dyn # perform operation
fnmadd.s f16, f7, f29, f9, rdn # perform operation
fnmadd.s f16, f7, f29, f9, rmm # perform operation
fnmadd.s f16, f7, f29, f9, rne # perform operation
fnmadd.s f16, f7, f29, f9, rtz # perform operation
fnmadd.s f16, f7, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f7, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x31, 0x2fc0822d0878febe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xf1944eb0407a705 # load x3 with value 0xf1944eb0407a705
sw x3, 0(x2) # store 0xf1944eb0407a705 in memory
flw f17, 0(x2) # load 0xf1944eb0407a705 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fnmadd.s f31, f27, f17, f18, dyn # perform operation
fnmadd.s f31, f27, f17, f18, rdn # perform operation
fnmadd.s f31, f27, f17, f18, rmm # perform operation
fnmadd.s f31, f27, f17, f18, rne # perform operation
fnmadd.s f31, f27, f17, f18, rtz # perform operation
fnmadd.s f31, f27, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x8, 0x8b93a9afb172a779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xa4b3fb593aac7bd6 # load x3 with value 0xa4b3fb593aac7bd6
sw x3, 0(x2) # store 0xa4b3fb593aac7bd6 in memory
flw f14, 0(x2) # load 0xa4b3fb593aac7bd6 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmadd.s f8, f15, f14, f10, dyn # perform operation
fnmadd.s f8, f15, f14, f10, rdn # perform operation
fnmadd.s f8, f15, f14, f10, rmm # perform operation
fnmadd.s f8, f15, f14, f10, rne # perform operation
fnmadd.s f8, f15, f14, f10, rtz # perform operation
fnmadd.s f8, f15, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x8, 0x29a50a1756ae2266 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x80fdd8ea659c3777 # load x3 with value 0x80fdd8ea659c3777
sw x3, 0(x2) # store 0x80fdd8ea659c3777 in memory
flw f24, 0(x2) # load 0x80fdd8ea659c3777 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f8, f10, f24, f20, dyn # perform operation
fnmadd.s f8, f10, f24, f20, rdn # perform operation
fnmadd.s f8, f10, f24, f20, rmm # perform operation
fnmadd.s f8, f10, f24, f20, rne # perform operation
fnmadd.s f8, f10, f24, f20, rtz # perform operation
fnmadd.s f8, f10, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x15, 0x89e228d825279524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xb7ea19376e9942da # load x3 with value 0xb7ea19376e9942da
sw x3, 0(x2) # store 0xb7ea19376e9942da in memory
flw f22, 0(x2) # load 0xb7ea19376e9942da from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f15, f7, f22, f1, dyn # perform operation
fnmadd.s f15, f7, f22, f1, rdn # perform operation
fnmadd.s f15, f7, f22, f1, rmm # perform operation
fnmadd.s f15, f7, f22, f1, rne # perform operation
fnmadd.s f15, f7, f22, f1, rtz # perform operation
fnmadd.s f15, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f7, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x29, 0xeb4c4ce08f38673a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x8cc4a43ed80c058 # load x3 with value 0x8cc4a43ed80c058
sw x3, 0(x2) # store 0x8cc4a43ed80c058 in memory
flw f7, 0(x2) # load 0x8cc4a43ed80c058 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmadd.s f29, f2, f7, f9, dyn # perform operation
fnmadd.s f29, f2, f7, f9, rdn # perform operation
fnmadd.s f29, f2, f7, f9, rmm # perform operation
fnmadd.s f29, f2, f7, f9, rne # perform operation
fnmadd.s f29, f2, f7, f9, rtz # perform operation
fnmadd.s f29, f2, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f2, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x7, 0x218f34ea4826b7cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xe624d49f1b8c0f1a # load x3 with value 0xe624d49f1b8c0f1a
sw x3, 0(x2) # store 0xe624d49f1b8c0f1a in memory
flw f16, 0(x2) # load 0xe624d49f1b8c0f1a from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
fnmadd.s f7, f28, f16, f4, dyn # perform operation
fnmadd.s f7, f28, f16, f4, rdn # perform operation
fnmadd.s f7, f28, f16, f4, rmm # perform operation
fnmadd.s f7, f28, f16, f4, rne # perform operation
fnmadd.s f7, f28, f16, f4, rtz # perform operation
fnmadd.s f7, f28, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f28, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f28, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f28, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f28, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f28, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x3, 0x7a9a6a4dd2c0f3ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x85b8c07040830de1 # load x3 with value 0x85b8c07040830de1
sw x3, 0(x2) # store 0x85b8c07040830de1 in memory
flw f1, 0(x2) # load 0x85b8c07040830de1 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f3, f10, f1, f11, dyn # perform operation
fnmadd.s f3, f10, f1, f11, rdn # perform operation
fnmadd.s f3, f10, f1, f11, rmm # perform operation
fnmadd.s f3, f10, f1, f11, rne # perform operation
fnmadd.s f3, f10, f1, f11, rtz # perform operation
fnmadd.s f3, f10, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f10, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f10, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x14, 0xac448b27eb9f7274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xd6dbe629599ba59f # load x3 with value 0xd6dbe629599ba59f
sw x3, 0(x2) # store 0xd6dbe629599ba59f in memory
flw f8, 0(x2) # load 0xd6dbe629599ba59f from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.s f14, f1, f8, f18, dyn # perform operation
fnmadd.s f14, f1, f8, f18, rdn # perform operation
fnmadd.s f14, f1, f8, f18, rmm # perform operation
fnmadd.s f14, f1, f8, f18, rne # perform operation
fnmadd.s f14, f1, f8, f18, rtz # perform operation
fnmadd.s f14, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x28, 0x5966ac80be8722e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0xac18299845957829 # load x3 with value 0xac18299845957829
sw x3, 0(x2) # store 0xac18299845957829 in memory
flw f15, 0(x2) # load 0xac18299845957829 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f28, f14, f15, f8, dyn # perform operation
fnmadd.s f28, f14, f15, f8, rdn # perform operation
fnmadd.s f28, f14, f15, f8, rmm # perform operation
fnmadd.s f28, f14, f15, f8, rne # perform operation
fnmadd.s f28, f14, f15, f8, rtz # perform operation
fnmadd.s f28, f14, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x29, 0x321d47d4a129f178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x6605e00fb1a2aebe # load x3 with value 0x6605e00fb1a2aebe
sw x3, 0(x2) # store 0x6605e00fb1a2aebe in memory
flw f19, 0(x2) # load 0x6605e00fb1a2aebe from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fnmadd.s f29, f3, f19, f8, dyn # perform operation
fnmadd.s f29, f3, f19, f8, rdn # perform operation
fnmadd.s f29, f3, f19, f8, rmm # perform operation
fnmadd.s f29, f3, f19, f8, rne # perform operation
fnmadd.s f29, f3, f19, f8, rtz # perform operation
fnmadd.s f29, f3, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x2, 0xc438919285ba4220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x198d92fa0c0b1a4d # load x3 with value 0x198d92fa0c0b1a4d
sw x3, 0(x2) # store 0x198d92fa0c0b1a4d in memory
flw f29, 0(x2) # load 0x198d92fa0c0b1a4d from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f2, f30, f29, f14, dyn # perform operation
fnmadd.s f2, f30, f29, f14, rdn # perform operation
fnmadd.s f2, f30, f29, f14, rmm # perform operation
fnmadd.s f2, f30, f29, f14, rne # perform operation
fnmadd.s f2, f30, f29, f14, rtz # perform operation
fnmadd.s f2, f30, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x20, 0xc17e79a8346bebf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x220961368cb0803 # load x3 with value 0x220961368cb0803
sw x3, 0(x2) # store 0x220961368cb0803 in memory
flw f13, 0(x2) # load 0x220961368cb0803 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f20, f5, f13, f9, dyn # perform operation
fnmadd.s f20, f5, f13, f9, rdn # perform operation
fnmadd.s f20, f5, f13, f9, rmm # perform operation
fnmadd.s f20, f5, f13, f9, rne # perform operation
fnmadd.s f20, f5, f13, f9, rtz # perform operation
fnmadd.s f20, f5, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x23, 0x969a42f9f7288072 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x5906b6e106999186 # load x3 with value 0x5906b6e106999186
sw x3, 0(x2) # store 0x5906b6e106999186 in memory
flw f10, 0(x2) # load 0x5906b6e106999186 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fnmadd.s f23, f26, f10, f4, dyn # perform operation
fnmadd.s f23, f26, f10, f4, rdn # perform operation
fnmadd.s f23, f26, f10, f4, rmm # perform operation
fnmadd.s f23, f26, f10, f4, rne # perform operation
fnmadd.s f23, f26, f10, f4, rtz # perform operation
fnmadd.s f23, f26, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x14, 0x71db4a506fcda9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x20ab28504a70994b # load x3 with value 0x20ab28504a70994b
sw x3, 0(x2) # store 0x20ab28504a70994b in memory
flw f3, 0(x2) # load 0x20ab28504a70994b from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmadd.s f14, f19, f3, f1, dyn # perform operation
fnmadd.s f14, f19, f3, f1, rdn # perform operation
fnmadd.s f14, f19, f3, f1, rmm # perform operation
fnmadd.s f14, f19, f3, f1, rne # perform operation
fnmadd.s f14, f19, f3, f1, rtz # perform operation
fnmadd.s f14, f19, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x23, 0x8fe454c8f043d2b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0xb23a2769cec4f # load x3 with value 0xb23a2769cec4f
sw x3, 0(x2) # store 0xb23a2769cec4f in memory
flw f10, 0(x2) # load 0xb23a2769cec4f from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmadd.s f23, f20, f10, f30, dyn # perform operation
fnmadd.s f23, f20, f10, f30, rdn # perform operation
fnmadd.s f23, f20, f10, f30, rmm # perform operation
fnmadd.s f23, f20, f10, f30, rne # perform operation
fnmadd.s f23, f20, f10, f30, rtz # perform operation
fnmadd.s f23, f20, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x17, 0x645cde6bcf8aff19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x4d7cead8c4d73bf4 # load x3 with value 0x4d7cead8c4d73bf4
sw x3, 0(x2) # store 0x4d7cead8c4d73bf4 in memory
flw f7, 0(x2) # load 0x4d7cead8c4d73bf4 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmadd.s f17, f10, f7, f18, dyn # perform operation
fnmadd.s f17, f10, f7, f18, rdn # perform operation
fnmadd.s f17, f10, f7, f18, rmm # perform operation
fnmadd.s f17, f10, f7, f18, rne # perform operation
fnmadd.s f17, f10, f7, f18, rtz # perform operation
fnmadd.s f17, f10, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f10, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x4, 0xe9398d569d518c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x1eeb78b4fd38e7a8 # load x3 with value 0x1eeb78b4fd38e7a8
sw x3, 0(x2) # store 0x1eeb78b4fd38e7a8 in memory
flw f7, 0(x2) # load 0x1eeb78b4fd38e7a8 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f4, f5, f7, f6, dyn # perform operation
fnmadd.s f4, f5, f7, f6, rdn # perform operation
fnmadd.s f4, f5, f7, f6, rmm # perform operation
fnmadd.s f4, f5, f7, f6, rne # perform operation
fnmadd.s f4, f5, f7, f6, rtz # perform operation
fnmadd.s f4, f5, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f5, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x21, 0x7cdafdfbc418da4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xe8c8d6a59f97264b # load x3 with value 0xe8c8d6a59f97264b
sw x3, 0(x2) # store 0xe8c8d6a59f97264b in memory
flw f3, 0(x2) # load 0xe8c8d6a59f97264b from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f21, f7, f3, f28, dyn # perform operation
fnmadd.s f21, f7, f3, f28, rdn # perform operation
fnmadd.s f21, f7, f3, f28, rmm # perform operation
fnmadd.s f21, f7, f3, f28, rne # perform operation
fnmadd.s f21, f7, f3, f28, rtz # perform operation
fnmadd.s f21, f7, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f7, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x25, 0xa56501cf609f8e37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xe3b857b031e2d643 # load x3 with value 0xe3b857b031e2d643
sw x3, 0(x2) # store 0xe3b857b031e2d643 in memory
flw f14, 0(x2) # load 0xe3b857b031e2d643 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f25, f23, f14, f24, dyn # perform operation
fnmadd.s f25, f23, f14, f24, rdn # perform operation
fnmadd.s f25, f23, f14, f24, rmm # perform operation
fnmadd.s f25, f23, f14, f24, rne # perform operation
fnmadd.s f25, f23, f14, f24, rtz # perform operation
fnmadd.s f25, f23, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f23, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x16, 0xfff6c8245e20d983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x11928d1f184e04d1 # load x3 with value 0x11928d1f184e04d1
sw x3, 0(x2) # store 0x11928d1f184e04d1 in memory
flw f1, 0(x2) # load 0x11928d1f184e04d1 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmadd.s f16, f17, f1, f21, dyn # perform operation
fnmadd.s f16, f17, f1, f21, rdn # perform operation
fnmadd.s f16, f17, f1, f21, rmm # perform operation
fnmadd.s f16, f17, f1, f21, rne # perform operation
fnmadd.s f16, f17, f1, f21, rtz # perform operation
fnmadd.s f16, f17, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x9, 0x39e3d01bc183e476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x281b74873d6d048d # load x3 with value 0x281b74873d6d048d
sw x3, 0(x2) # store 0x281b74873d6d048d in memory
flw f4, 0(x2) # load 0x281b74873d6d048d from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmadd.s f9, f22, f4, f29, dyn # perform operation
fnmadd.s f9, f22, f4, f29, rdn # perform operation
fnmadd.s f9, f22, f4, f29, rmm # perform operation
fnmadd.s f9, f22, f4, f29, rne # perform operation
fnmadd.s f9, f22, f4, f29, rtz # perform operation
fnmadd.s f9, f22, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f22, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f22, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x25, 0x06b85ed038e3d4bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x7177f361a5cc44f9 # load x3 with value 0x7177f361a5cc44f9
sw x3, 0(x2) # store 0x7177f361a5cc44f9 in memory
flw f16, 0(x2) # load 0x7177f361a5cc44f9 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fnmadd.s f25, f28, f16, f18, dyn # perform operation
fnmadd.s f25, f28, f16, f18, rdn # perform operation
fnmadd.s f25, f28, f16, f18, rmm # perform operation
fnmadd.s f25, f28, f16, f18, rne # perform operation
fnmadd.s f25, f28, f16, f18, rtz # perform operation
fnmadd.s f25, f28, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x10, 0xc56f8ae19d9c2ba1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x472831a1b95215a5 # load x3 with value 0x472831a1b95215a5
sw x3, 0(x2) # store 0x472831a1b95215a5 in memory
flw f11, 0(x2) # load 0x472831a1b95215a5 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmadd.s f10, f2, f11, f26, dyn # perform operation
fnmadd.s f10, f2, f11, f26, rdn # perform operation
fnmadd.s f10, f2, f11, f26, rmm # perform operation
fnmadd.s f10, f2, f11, f26, rne # perform operation
fnmadd.s f10, f2, f11, f26, rtz # perform operation
fnmadd.s f10, f2, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x23, 0xbbbecd6b4127d369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x936cee424ca0e150 # load x3 with value 0x936cee424ca0e150
sw x3, 0(x2) # store 0x936cee424ca0e150 in memory
flw f2, 0(x2) # load 0x936cee424ca0e150 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f23, f17, f2, f14, dyn # perform operation
fnmadd.s f23, f17, f2, f14, rdn # perform operation
fnmadd.s f23, f17, f2, f14, rmm # perform operation
fnmadd.s f23, f17, f2, f14, rne # perform operation
fnmadd.s f23, f17, f2, f14, rtz # perform operation
fnmadd.s f23, f17, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x13, 0x3f50460810477a76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x80c72a2e1a5610c9 # load x3 with value 0x80c72a2e1a5610c9
sw x3, 0(x2) # store 0x80c72a2e1a5610c9 in memory
flw f23, 0(x2) # load 0x80c72a2e1a5610c9 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmadd.s f13, f24, f23, f20, dyn # perform operation
fnmadd.s f13, f24, f23, f20, rdn # perform operation
fnmadd.s f13, f24, f23, f20, rmm # perform operation
fnmadd.s f13, f24, f23, f20, rne # perform operation
fnmadd.s f13, f24, f23, f20, rtz # perform operation
fnmadd.s f13, f24, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f24, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f24, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x31, 0xb26387da958d0e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xb25995bd408b397e # load x3 with value 0xb25995bd408b397e
sw x3, 0(x2) # store 0xb25995bd408b397e in memory
flw f13, 0(x2) # load 0xb25995bd408b397e from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fnmadd.s f31, f21, f13, f24, dyn # perform operation
fnmadd.s f31, f21, f13, f24, rdn # perform operation
fnmadd.s f31, f21, f13, f24, rmm # perform operation
fnmadd.s f31, f21, f13, f24, rne # perform operation
fnmadd.s f31, f21, f13, f24, rtz # perform operation
fnmadd.s f31, f21, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f21, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f21, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f21, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f21, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f21, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x10, 0xabce22473fd33ee3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xf881b9d95ddddd06 # load x3 with value 0xf881b9d95ddddd06
sw x3, 0(x2) # store 0xf881b9d95ddddd06 in memory
flw f3, 0(x2) # load 0xf881b9d95ddddd06 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmadd.s f10, f21, f3, f1, dyn # perform operation
fnmadd.s f10, f21, f3, f1, rdn # perform operation
fnmadd.s f10, f21, f3, f1, rmm # perform operation
fnmadd.s f10, f21, f3, f1, rne # perform operation
fnmadd.s f10, f21, f3, f1, rtz # perform operation
fnmadd.s f10, f21, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x1, 0xcf1f67261d1813a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x333f2be9a306eea8 # load x3 with value 0x333f2be9a306eea8
sw x3, 0(x2) # store 0x333f2be9a306eea8 in memory
flw f16, 0(x2) # load 0x333f2be9a306eea8 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f1, f22, f16, f14, dyn # perform operation
fnmadd.s f1, f22, f16, f14, rdn # perform operation
fnmadd.s f1, f22, f16, f14, rmm # perform operation
fnmadd.s f1, f22, f16, f14, rne # perform operation
fnmadd.s f1, f22, f16, f14, rtz # perform operation
fnmadd.s f1, f22, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f22, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f22, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x20, 0xb34add7310551d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x31ee5cfed3162f98 # load x3 with value 0x31ee5cfed3162f98
sw x3, 0(x2) # store 0x31ee5cfed3162f98 in memory
flw f29, 0(x2) # load 0x31ee5cfed3162f98 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmadd.s f20, f1, f29, f27, dyn # perform operation
fnmadd.s f20, f1, f29, f27, rdn # perform operation
fnmadd.s f20, f1, f29, f27, rmm # perform operation
fnmadd.s f20, f1, f29, f27, rne # perform operation
fnmadd.s f20, f1, f29, f27, rtz # perform operation
fnmadd.s f20, f1, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f1, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f1, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x21, 0x88315f7d154493f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x8c90f4c514b5d387 # load x3 with value 0x8c90f4c514b5d387
sw x3, 0(x2) # store 0x8c90f4c514b5d387 in memory
flw f11, 0(x2) # load 0x8c90f4c514b5d387 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f21, f18, f11, f28, dyn # perform operation
fnmadd.s f21, f18, f11, f28, rdn # perform operation
fnmadd.s f21, f18, f11, f28, rmm # perform operation
fnmadd.s f21, f18, f11, f28, rne # perform operation
fnmadd.s f21, f18, f11, f28, rtz # perform operation
fnmadd.s f21, f18, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f18, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f18, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x26, 0x046e2e42955e07fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0xe2997e4acfa617c7 # load x3 with value 0xe2997e4acfa617c7
sw x3, 0(x2) # store 0xe2997e4acfa617c7 in memory
flw f25, 0(x2) # load 0xe2997e4acfa617c7 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fnmadd.s f26, f4, f25, f8, dyn # perform operation
fnmadd.s f26, f4, f25, f8, rdn # perform operation
fnmadd.s f26, f4, f25, f8, rmm # perform operation
fnmadd.s f26, f4, f25, f8, rne # perform operation
fnmadd.s f26, f4, f25, f8, rtz # perform operation
fnmadd.s f26, f4, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f4, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f4, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x27, 0xe01e49b25dec1648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x8dd7cbf33ca86198 # load x3 with value 0x8dd7cbf33ca86198
sw x3, 0(x2) # store 0x8dd7cbf33ca86198 in memory
flw f14, 0(x2) # load 0x8dd7cbf33ca86198 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f27, f28, f14, f6, dyn # perform operation
fnmadd.s f27, f28, f14, f6, rdn # perform operation
fnmadd.s f27, f28, f14, f6, rmm # perform operation
fnmadd.s f27, f28, f14, f6, rne # perform operation
fnmadd.s f27, f28, f14, f6, rtz # perform operation
fnmadd.s f27, f28, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x16, 0xb71ad97b69004514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xafc92e7b16d8e934 # load x3 with value 0xafc92e7b16d8e934
sw x3, 0(x2) # store 0xafc92e7b16d8e934 in memory
flw f17, 0(x2) # load 0xafc92e7b16d8e934 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmadd.s f16, f12, f17, f10, dyn # perform operation
fnmadd.s f16, f12, f17, f10, rdn # perform operation
fnmadd.s f16, f12, f17, f10, rmm # perform operation
fnmadd.s f16, f12, f17, f10, rne # perform operation
fnmadd.s f16, f12, f17, f10, rtz # perform operation
fnmadd.s f16, f12, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f12, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f12, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x18, 0xc2b67979e72f3700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x3c6a696fa8699b0f # load x3 with value 0x3c6a696fa8699b0f
sw x3, 0(x2) # store 0x3c6a696fa8699b0f in memory
flw f16, 0(x2) # load 0x3c6a696fa8699b0f from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f18, f23, f16, f12, dyn # perform operation
fnmadd.s f18, f23, f16, f12, rdn # perform operation
fnmadd.s f18, f23, f16, f12, rmm # perform operation
fnmadd.s f18, f23, f16, f12, rne # perform operation
fnmadd.s f18, f23, f16, f12, rtz # perform operation
fnmadd.s f18, f23, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f23, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x24, 0x7cbbc48a953e097b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x5be8f98c2bd78ee7 # load x3 with value 0x5be8f98c2bd78ee7
sw x3, 0(x2) # store 0x5be8f98c2bd78ee7 in memory
flw f27, 0(x2) # load 0x5be8f98c2bd78ee7 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fnmadd.s f24, f18, f27, f4, dyn # perform operation
fnmadd.s f24, f18, f27, f4, rdn # perform operation
fnmadd.s f24, f18, f27, f4, rmm # perform operation
fnmadd.s f24, f18, f27, f4, rne # perform operation
fnmadd.s f24, f18, f27, f4, rtz # perform operation
fnmadd.s f24, f18, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x21, 0x0b4c9afa5a06d1ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xfb434f8905750e7b # load x3 with value 0xfb434f8905750e7b
sw x3, 0(x2) # store 0xfb434f8905750e7b in memory
flw f13, 0(x2) # load 0xfb434f8905750e7b from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fnmadd.s f21, f19, f13, f22, dyn # perform operation
fnmadd.s f21, f19, f13, f22, rdn # perform operation
fnmadd.s f21, f19, f13, f22, rmm # perform operation
fnmadd.s f21, f19, f13, f22, rne # perform operation
fnmadd.s f21, f19, f13, f22, rtz # perform operation
fnmadd.s f21, f19, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f19, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f19, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f19, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f19, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f19, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x12, 0x137d36257f728b8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xc1624365dfa001d0 # load x3 with value 0xc1624365dfa001d0
sw x3, 0(x2) # store 0xc1624365dfa001d0 in memory
flw f25, 0(x2) # load 0xc1624365dfa001d0 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmadd.s f12, f2, f25, f16, dyn # perform operation
fnmadd.s f12, f2, f25, f16, rdn # perform operation
fnmadd.s f12, f2, f25, f16, rmm # perform operation
fnmadd.s f12, f2, f25, f16, rne # perform operation
fnmadd.s f12, f2, f25, f16, rtz # perform operation
fnmadd.s f12, f2, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x22, 0x0cdfce095de4b2c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x4325f6e0f9d09abe # load x3 with value 0x4325f6e0f9d09abe
sw x3, 0(x2) # store 0x4325f6e0f9d09abe in memory
flw f5, 0(x2) # load 0x4325f6e0f9d09abe from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmadd.s f22, f3, f5, f11, dyn # perform operation
fnmadd.s f22, f3, f5, f11, rdn # perform operation
fnmadd.s f22, f3, f5, f11, rmm # perform operation
fnmadd.s f22, f3, f5, f11, rne # perform operation
fnmadd.s f22, f3, f5, f11, rtz # perform operation
fnmadd.s f22, f3, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x6, 0xbe6f433ddc5f2cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x355779fafc1498fd # load x3 with value 0x355779fafc1498fd
sw x3, 0(x2) # store 0x355779fafc1498fd in memory
flw f30, 0(x2) # load 0x355779fafc1498fd from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fnmadd.s f6, f3, f30, f25, dyn # perform operation
fnmadd.s f6, f3, f30, f25, rdn # perform operation
fnmadd.s f6, f3, f30, f25, rmm # perform operation
fnmadd.s f6, f3, f30, f25, rne # perform operation
fnmadd.s f6, f3, f30, f25, rtz # perform operation
fnmadd.s f6, f3, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x30, 0xec3248a49b37fd06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x96d9099e470a3ef3 # load x3 with value 0x96d9099e470a3ef3
sw x3, 0(x2) # store 0x96d9099e470a3ef3 in memory
flw f20, 0(x2) # load 0x96d9099e470a3ef3 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fnmadd.s f30, f12, f20, f24, dyn # perform operation
fnmadd.s f30, f12, f20, f24, rdn # perform operation
fnmadd.s f30, f12, f20, f24, rmm # perform operation
fnmadd.s f30, f12, f20, f24, rne # perform operation
fnmadd.s f30, f12, f20, f24, rtz # perform operation
fnmadd.s f30, f12, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x25, 0x02c11047311e5225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xa35a0a75f7202fdc # load x3 with value 0xa35a0a75f7202fdc
sw x3, 0(x2) # store 0xa35a0a75f7202fdc in memory
flw f16, 0(x2) # load 0xa35a0a75f7202fdc from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fnmadd.s f25, f24, f16, f29, dyn # perform operation
fnmadd.s f25, f24, f16, f29, rdn # perform operation
fnmadd.s f25, f24, f16, f29, rmm # perform operation
fnmadd.s f25, f24, f16, f29, rne # perform operation
fnmadd.s f25, f24, f16, f29, rtz # perform operation
fnmadd.s f25, f24, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f24, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f24, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f24, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f24, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f24, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x23, 0x448d0a66382ddc66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xf363ab61af08bf5a # load x3 with value 0xf363ab61af08bf5a
sw x3, 0(x2) # store 0xf363ab61af08bf5a in memory
flw f11, 0(x2) # load 0xf363ab61af08bf5a from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmadd.s f23, f26, f11, f6, dyn # perform operation
fnmadd.s f23, f26, f11, f6, rdn # perform operation
fnmadd.s f23, f26, f11, f6, rmm # perform operation
fnmadd.s f23, f26, f11, f6, rne # perform operation
fnmadd.s f23, f26, f11, f6, rtz # perform operation
fnmadd.s f23, f26, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x13, 0xb5c5123acf5d0f7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0xb03261a683f0952a # load x3 with value 0xb03261a683f0952a
sw x3, 0(x2) # store 0xb03261a683f0952a in memory
flw f22, 0(x2) # load 0xb03261a683f0952a from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmadd.s f13, f15, f22, f3, dyn # perform operation
fnmadd.s f13, f15, f22, f3, rdn # perform operation
fnmadd.s f13, f15, f22, f3, rmm # perform operation
fnmadd.s f13, f15, f22, f3, rne # perform operation
fnmadd.s f13, f15, f22, f3, rtz # perform operation
fnmadd.s f13, f15, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x4, 0x44f450953f7ab929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xb536ddd50601d0f8 # load x3 with value 0xb536ddd50601d0f8
sw x3, 0(x2) # store 0xb536ddd50601d0f8 in memory
flw f21, 0(x2) # load 0xb536ddd50601d0f8 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f4, f11, f21, f3, dyn # perform operation
fnmadd.s f4, f11, f21, f3, rdn # perform operation
fnmadd.s f4, f11, f21, f3, rmm # perform operation
fnmadd.s f4, f11, f21, f3, rne # perform operation
fnmadd.s f4, f11, f21, f3, rtz # perform operation
fnmadd.s f4, f11, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f11, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x31, 0x1069c14dfc526300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x25bcd0fc942a522b # load x3 with value 0x25bcd0fc942a522b
sw x3, 0(x2) # store 0x25bcd0fc942a522b in memory
flw f12, 0(x2) # load 0x25bcd0fc942a522b from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f31, f21, f12, f10, dyn # perform operation
fnmadd.s f31, f21, f12, f10, rdn # perform operation
fnmadd.s f31, f21, f12, f10, rmm # perform operation
fnmadd.s f31, f21, f12, f10, rne # perform operation
fnmadd.s f31, f21, f12, f10, rtz # perform operation
fnmadd.s f31, f21, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f21, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x29, 0x85e4b91d28cc445a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x58cdfd46e7b4f292 # load x3 with value 0x58cdfd46e7b4f292
sw x3, 0(x2) # store 0x58cdfd46e7b4f292 in memory
flw f12, 0(x2) # load 0x58cdfd46e7b4f292 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f29, f9, f12, f20, dyn # perform operation
fnmadd.s f29, f9, f12, f20, rdn # perform operation
fnmadd.s f29, f9, f12, f20, rmm # perform operation
fnmadd.s f29, f9, f12, f20, rne # perform operation
fnmadd.s f29, f9, f12, f20, rtz # perform operation
fnmadd.s f29, f9, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x22, 0xf8b971da95b8dea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x1704b7bc2e02a7b3 # load x3 with value 0x1704b7bc2e02a7b3
sw x3, 0(x2) # store 0x1704b7bc2e02a7b3 in memory
flw f27, 0(x2) # load 0x1704b7bc2e02a7b3 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmadd.s f22, f25, f27, f14, dyn # perform operation
fnmadd.s f22, f25, f27, f14, rdn # perform operation
fnmadd.s f22, f25, f27, f14, rmm # perform operation
fnmadd.s f22, f25, f27, f14, rne # perform operation
fnmadd.s f22, f25, f27, f14, rtz # perform operation
fnmadd.s f22, f25, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x22, 0xc7ed49a4c088775b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0xa7b8fb6a9f70f531 # load x3 with value 0xa7b8fb6a9f70f531
sw x3, 0(x2) # store 0xa7b8fb6a9f70f531 in memory
flw f26, 0(x2) # load 0xa7b8fb6a9f70f531 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmadd.s f22, f25, f26, f29, dyn # perform operation
fnmadd.s f22, f25, f26, f29, rdn # perform operation
fnmadd.s f22, f25, f26, f29, rmm # perform operation
fnmadd.s f22, f25, f26, f29, rne # perform operation
fnmadd.s f22, f25, f26, f29, rtz # perform operation
fnmadd.s f22, f25, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x2, 0xee39a3a860fb8eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xe0e5a80603ba886d # load x3 with value 0xe0e5a80603ba886d
sw x3, 0(x2) # store 0xe0e5a80603ba886d in memory
flw f15, 0(x2) # load 0xe0e5a80603ba886d from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmadd.s f2, f6, f15, f18, dyn # perform operation
fnmadd.s f2, f6, f15, f18, rdn # perform operation
fnmadd.s f2, f6, f15, f18, rmm # perform operation
fnmadd.s f2, f6, f15, f18, rne # perform operation
fnmadd.s f2, f6, f15, f18, rtz # perform operation
fnmadd.s f2, f6, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f15, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x8, 0x9c08b88690a3fb57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x1d63c73c9225a1a6 # load x3 with value 0x1d63c73c9225a1a6
sw x3, 0(x2) # store 0x1d63c73c9225a1a6 in memory
flw f7, 0(x2) # load 0x1d63c73c9225a1a6 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fnmadd.s f8, f4, f7, f20, dyn # perform operation
fnmadd.s f8, f4, f7, f20, rdn # perform operation
fnmadd.s f8, f4, f7, f20, rmm # perform operation
fnmadd.s f8, f4, f7, f20, rne # perform operation
fnmadd.s f8, f4, f7, f20, rtz # perform operation
fnmadd.s f8, f4, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f4, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f4, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x5, 0x532cbe2a626d1b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x91e3c154291e653a # load x3 with value 0x91e3c154291e653a
sw x3, 0(x2) # store 0x91e3c154291e653a in memory
flw f26, 0(x2) # load 0x91e3c154291e653a from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmadd.s f5, f25, f26, f15, dyn # perform operation
fnmadd.s f5, f25, f26, f15, rdn # perform operation
fnmadd.s f5, f25, f26, f15, rmm # perform operation
fnmadd.s f5, f25, f26, f15, rne # perform operation
fnmadd.s f5, f25, f26, f15, rtz # perform operation
fnmadd.s f5, f25, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x20, 0x1efe9468f9f78b36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xceb8d2859fd97d8c # load x3 with value 0xceb8d2859fd97d8c
sw x3, 0(x2) # store 0xceb8d2859fd97d8c in memory
flw f13, 0(x2) # load 0xceb8d2859fd97d8c from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmadd.s f20, f21, f13, f26, dyn # perform operation
fnmadd.s f20, f21, f13, f26, rdn # perform operation
fnmadd.s f20, f21, f13, f26, rmm # perform operation
fnmadd.s f20, f21, f13, f26, rne # perform operation
fnmadd.s f20, f21, f13, f26, rtz # perform operation
fnmadd.s f20, f21, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f21, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f21, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x8, 0x31fe279b1e23b21a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x6faf3eb83064af25 # load x3 with value 0x6faf3eb83064af25
sw x3, 0(x2) # store 0x6faf3eb83064af25 in memory
flw f25, 0(x2) # load 0x6faf3eb83064af25 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmadd.s f8, f31, f25, f1, dyn # perform operation
fnmadd.s f8, f31, f25, f1, rdn # perform operation
fnmadd.s f8, f31, f25, f1, rmm # perform operation
fnmadd.s f8, f31, f25, f1, rne # perform operation
fnmadd.s f8, f31, f25, f1, rtz # perform operation
fnmadd.s f8, f31, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x18, 0x7df37a3f09340d0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xc16c9170dc21efbb # load x3 with value 0xc16c9170dc21efbb
sw x3, 0(x2) # store 0xc16c9170dc21efbb in memory
flw f28, 0(x2) # load 0xc16c9170dc21efbb from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f18, f4, f28, f24, dyn # perform operation
fnmadd.s f18, f4, f28, f24, rdn # perform operation
fnmadd.s f18, f4, f28, f24, rmm # perform operation
fnmadd.s f18, f4, f28, f24, rne # perform operation
fnmadd.s f18, f4, f28, f24, rtz # perform operation
fnmadd.s f18, f4, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f4, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x3, 0x9445de555f7c38c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x49357f314d8b4b30 # load x3 with value 0x49357f314d8b4b30
sw x3, 0(x2) # store 0x49357f314d8b4b30 in memory
flw f5, 0(x2) # load 0x49357f314d8b4b30 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f3, f16, f5, f22, dyn # perform operation
fnmadd.s f3, f16, f5, f22, rdn # perform operation
fnmadd.s f3, f16, f5, f22, rmm # perform operation
fnmadd.s f3, f16, f5, f22, rne # perform operation
fnmadd.s f3, f16, f5, f22, rtz # perform operation
fnmadd.s f3, f16, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f5, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x4, 0xd86ebdd500d9e3a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x40e42df09972d0b8 # load x3 with value 0x40e42df09972d0b8
sw x3, 0(x2) # store 0x40e42df09972d0b8 in memory
flw f14, 0(x2) # load 0x40e42df09972d0b8 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmadd.s f4, f15, f14, f12, dyn # perform operation
fnmadd.s f4, f15, f14, f12, rdn # perform operation
fnmadd.s f4, f15, f14, f12, rmm # perform operation
fnmadd.s f4, f15, f14, f12, rne # perform operation
fnmadd.s f4, f15, f14, f12, rtz # perform operation
fnmadd.s f4, f15, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f15, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f15, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f15, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f15, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f15, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x27, 0xb5857683d5481284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0xcce5bb44fe49e3a8 # load x3 with value 0xcce5bb44fe49e3a8
sw x3, 0(x2) # store 0xcce5bb44fe49e3a8 in memory
flw f21, 0(x2) # load 0xcce5bb44fe49e3a8 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f27, f8, f21, f2, dyn # perform operation
fnmadd.s f27, f8, f21, f2, rdn # perform operation
fnmadd.s f27, f8, f21, f2, rmm # perform operation
fnmadd.s f27, f8, f21, f2, rne # perform operation
fnmadd.s f27, f8, f21, f2, rtz # perform operation
fnmadd.s f27, f8, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x15, 0xff1c64e36ed770f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xcacc9116568761a1 # load x3 with value 0xcacc9116568761a1
sw x3, 0(x2) # store 0xcacc9116568761a1 in memory
flw f7, 0(x2) # load 0xcacc9116568761a1 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmadd.s f15, f29, f7, f30, dyn # perform operation
fnmadd.s f15, f29, f7, f30, rdn # perform operation
fnmadd.s f15, f29, f7, f30, rmm # perform operation
fnmadd.s f15, f29, f7, f30, rne # perform operation
fnmadd.s f15, f29, f7, f30, rtz # perform operation
fnmadd.s f15, f29, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x11, 0x8fa0b671ec96ce80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xbe12d009cca7646f # load x3 with value 0xbe12d009cca7646f
sw x3, 0(x2) # store 0xbe12d009cca7646f in memory
flw f29, 0(x2) # load 0xbe12d009cca7646f from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmadd.s f11, f14, f29, f22, dyn # perform operation
fnmadd.s f11, f14, f29, f22, rdn # perform operation
fnmadd.s f11, f14, f29, f22, rmm # perform operation
fnmadd.s f11, f14, f29, f22, rne # perform operation
fnmadd.s f11, f14, f29, f22, rtz # perform operation
fnmadd.s f11, f14, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x27, 0x37cefb738e29591e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x4867d33c4b056547 # load x3 with value 0x4867d33c4b056547
sw x3, 0(x2) # store 0x4867d33c4b056547 in memory
flw f2, 0(x2) # load 0x4867d33c4b056547 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.s f27, f13, f2, f26, dyn # perform operation
fnmadd.s f27, f13, f2, f26, rdn # perform operation
fnmadd.s f27, f13, f2, f26, rmm # perform operation
fnmadd.s f27, f13, f2, f26, rne # perform operation
fnmadd.s f27, f13, f2, f26, rtz # perform operation
fnmadd.s f27, f13, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x23, 0x2b1894d582cc3587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x22597dc68fcfc574 # load x3 with value 0x22597dc68fcfc574
sw x3, 0(x2) # store 0x22597dc68fcfc574 in memory
flw f22, 0(x2) # load 0x22597dc68fcfc574 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmadd.s f23, f16, f22, f24, dyn # perform operation
fnmadd.s f23, f16, f22, f24, rdn # perform operation
fnmadd.s f23, f16, f22, f24, rmm # perform operation
fnmadd.s f23, f16, f22, f24, rne # perform operation
fnmadd.s f23, f16, f22, f24, rtz # perform operation
fnmadd.s f23, f16, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x23, 0x8fac028f4eb5fe90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x21bc3d15d7806a23 # load x3 with value 0x21bc3d15d7806a23
sw x3, 0(x2) # store 0x21bc3d15d7806a23 in memory
flw f24, 0(x2) # load 0x21bc3d15d7806a23 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmadd.s f23, f16, f24, f5, dyn # perform operation
fnmadd.s f23, f16, f24, f5, rdn # perform operation
fnmadd.s f23, f16, f24, f5, rmm # perform operation
fnmadd.s f23, f16, f24, f5, rne # perform operation
fnmadd.s f23, f16, f24, f5, rtz # perform operation
fnmadd.s f23, f16, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x9, 0xa7876cf518f2551d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x6addcf2389351ce8 # load x3 with value 0x6addcf2389351ce8
sw x3, 0(x2) # store 0x6addcf2389351ce8 in memory
flw f15, 0(x2) # load 0x6addcf2389351ce8 from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmadd.s f9, f11, f15, f13, dyn # perform operation
fnmadd.s f9, f11, f15, f13, rdn # perform operation
fnmadd.s f9, f11, f15, f13, rmm # perform operation
fnmadd.s f9, f11, f15, f13, rne # perform operation
fnmadd.s f9, f11, f15, f13, rtz # perform operation
fnmadd.s f9, f11, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x20, 0xd3ec95ee43120032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xc5641591d202aaf2 # load x3 with value 0xc5641591d202aaf2
sw x3, 0(x2) # store 0xc5641591d202aaf2 in memory
flw f31, 0(x2) # load 0xc5641591d202aaf2 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fnmadd.s f20, f9, f31, f4, dyn # perform operation
fnmadd.s f20, f9, f31, f4, rdn # perform operation
fnmadd.s f20, f9, f31, f4, rmm # perform operation
fnmadd.s f20, f9, f31, f4, rne # perform operation
fnmadd.s f20, f9, f31, f4, rtz # perform operation
fnmadd.s f20, f9, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x7, 0x3c316a45331c442f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x42d7d5c864a9067f # load x3 with value 0x42d7d5c864a9067f
sw x3, 0(x2) # store 0x42d7d5c864a9067f in memory
flw f24, 0(x2) # load 0x42d7d5c864a9067f from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fnmadd.s f7, f23, f24, f16, dyn # perform operation
fnmadd.s f7, f23, f24, f16, rdn # perform operation
fnmadd.s f7, f23, f24, f16, rmm # perform operation
fnmadd.s f7, f23, f24, f16, rne # perform operation
fnmadd.s f7, f23, f24, f16, rtz # perform operation
fnmadd.s f7, f23, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x22, 0x3d43a65e17c4eade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x71b4d4ee0598926c # load x3 with value 0x71b4d4ee0598926c
sw x3, 0(x2) # store 0x71b4d4ee0598926c in memory
flw f8, 0(x2) # load 0x71b4d4ee0598926c from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmadd.s f22, f17, f8, f16, dyn # perform operation
fnmadd.s f22, f17, f8, f16, rdn # perform operation
fnmadd.s f22, f17, f8, f16, rmm # perform operation
fnmadd.s f22, f17, f8, f16, rne # perform operation
fnmadd.s f22, f17, f8, f16, rtz # perform operation
fnmadd.s f22, f17, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x17, 0xd88f01795e513502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x15e2a0b6cfc01f05 # load x3 with value 0x15e2a0b6cfc01f05
sw x3, 0(x2) # store 0x15e2a0b6cfc01f05 in memory
flw f30, 0(x2) # load 0x15e2a0b6cfc01f05 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmadd.s f17, f22, f30, f24, dyn # perform operation
fnmadd.s f17, f22, f30, f24, rdn # perform operation
fnmadd.s f17, f22, f30, f24, rmm # perform operation
fnmadd.s f17, f22, f30, f24, rne # perform operation
fnmadd.s f17, f22, f30, f24, rtz # perform operation
fnmadd.s f17, f22, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x1, 0xa2ff43a813cb50ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x891168a7fa2b3a9d # load x3 with value 0x891168a7fa2b3a9d
sw x3, 0(x2) # store 0x891168a7fa2b3a9d in memory
flw f19, 0(x2) # load 0x891168a7fa2b3a9d from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fnmadd.s f1, f26, f19, f24, dyn # perform operation
fnmadd.s f1, f26, f19, f24, rdn # perform operation
fnmadd.s f1, f26, f19, f24, rmm # perform operation
fnmadd.s f1, f26, f19, f24, rne # perform operation
fnmadd.s f1, f26, f19, f24, rtz # perform operation
fnmadd.s f1, f26, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x16, 0x277a28cf3776d884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x8d9ae29c5edca6c7 # load x3 with value 0x8d9ae29c5edca6c7
sw x3, 0(x2) # store 0x8d9ae29c5edca6c7 in memory
flw f4, 0(x2) # load 0x8d9ae29c5edca6c7 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fnmadd.s f16, f21, f4, f29, dyn # perform operation
fnmadd.s f16, f21, f4, f29, rdn # perform operation
fnmadd.s f16, f21, f4, f29, rmm # perform operation
fnmadd.s f16, f21, f4, f29, rne # perform operation
fnmadd.s f16, f21, f4, f29, rtz # perform operation
fnmadd.s f16, f21, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f21, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x11, 0xa4764a6036fd990b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x6f06692e7a0bd5d0 # load x3 with value 0x6f06692e7a0bd5d0
sw x3, 0(x2) # store 0x6f06692e7a0bd5d0 in memory
flw f25, 0(x2) # load 0x6f06692e7a0bd5d0 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmadd.s f11, f29, f25, f19, dyn # perform operation
fnmadd.s f11, f29, f25, f19, rdn # perform operation
fnmadd.s f11, f29, f25, f19, rmm # perform operation
fnmadd.s f11, f29, f25, f19, rne # perform operation
fnmadd.s f11, f29, f25, f19, rtz # perform operation
fnmadd.s f11, f29, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x22, 0xb92107b999b03f84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xf58281aaa67a8f70 # load x3 with value 0xf58281aaa67a8f70
sw x3, 0(x2) # store 0xf58281aaa67a8f70 in memory
flw f18, 0(x2) # load 0xf58281aaa67a8f70 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmadd.s f22, f6, f18, f19, dyn # perform operation
fnmadd.s f22, f6, f18, f19, rdn # perform operation
fnmadd.s f22, f6, f18, f19, rmm # perform operation
fnmadd.s f22, f6, f18, f19, rne # perform operation
fnmadd.s f22, f6, f18, f19, rtz # perform operation
fnmadd.s f22, f6, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f6, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x20, 0x238e45939962d454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x16365d8e3ba3641 # load x3 with value 0x16365d8e3ba3641
sw x3, 0(x2) # store 0x16365d8e3ba3641 in memory
flw f21, 0(x2) # load 0x16365d8e3ba3641 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmadd.s f20, f2, f21, f1, dyn # perform operation
fnmadd.s f20, f2, f21, f1, rdn # perform operation
fnmadd.s f20, f2, f21, f1, rmm # perform operation
fnmadd.s f20, f2, f21, f1, rne # perform operation
fnmadd.s f20, f2, f21, f1, rtz # perform operation
fnmadd.s f20, f2, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x30, 0x43d62c142546bc85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x2be8e9bb5cb34a04 # load x3 with value 0x2be8e9bb5cb34a04
sw x3, 0(x2) # store 0x2be8e9bb5cb34a04 in memory
flw f12, 0(x2) # load 0x2be8e9bb5cb34a04 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fnmadd.s f30, f4, f12, f7, dyn # perform operation
fnmadd.s f30, f4, f12, f7, rdn # perform operation
fnmadd.s f30, f4, f12, f7, rmm # perform operation
fnmadd.s f30, f4, f12, f7, rne # perform operation
fnmadd.s f30, f4, f12, f7, rtz # perform operation
fnmadd.s f30, f4, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f4, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x20, 0x6fbadec989da9ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xce96ccf8acdf7f0e # load x3 with value 0xce96ccf8acdf7f0e
sw x3, 0(x2) # store 0xce96ccf8acdf7f0e in memory
flw f31, 0(x2) # load 0xce96ccf8acdf7f0e from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmadd.s f20, f6, f31, f16, dyn # perform operation
fnmadd.s f20, f6, f31, f16, rdn # perform operation
fnmadd.s f20, f6, f31, f16, rmm # perform operation
fnmadd.s f20, f6, f31, f16, rne # perform operation
fnmadd.s f20, f6, f31, f16, rtz # perform operation
fnmadd.s f20, f6, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x15, 0x3ad8b062d87c344e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x720093507b0146a2 # load x3 with value 0x720093507b0146a2
sw x3, 0(x2) # store 0x720093507b0146a2 in memory
flw f3, 0(x2) # load 0x720093507b0146a2 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fnmadd.s f15, f12, f3, f2, dyn # perform operation
fnmadd.s f15, f12, f3, f2, rdn # perform operation
fnmadd.s f15, f12, f3, f2, rmm # perform operation
fnmadd.s f15, f12, f3, f2, rne # perform operation
fnmadd.s f15, f12, f3, f2, rtz # perform operation
fnmadd.s f15, f12, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f12, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f12, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x2, 0x99018a1882aff901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0xda05200949bab396 # load x3 with value 0xda05200949bab396
sw x3, 0(x2) # store 0xda05200949bab396 in memory
flw f1, 0(x2) # load 0xda05200949bab396 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.s f2, f21, f1, f28, dyn # perform operation
fnmadd.s f2, f21, f1, f28, rdn # perform operation
fnmadd.s f2, f21, f1, f28, rmm # perform operation
fnmadd.s f2, f21, f1, f28, rne # perform operation
fnmadd.s f2, f21, f1, f28, rtz # perform operation
fnmadd.s f2, f21, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f21, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f21, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x17, 0x0157203b996f7849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xcb073344d3b4bf4d # load x3 with value 0xcb073344d3b4bf4d
sw x3, 0(x2) # store 0xcb073344d3b4bf4d in memory
flw f19, 0(x2) # load 0xcb073344d3b4bf4d from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmadd.s f17, f3, f19, f28, dyn # perform operation
fnmadd.s f17, f3, f19, f28, rdn # perform operation
fnmadd.s f17, f3, f19, f28, rmm # perform operation
fnmadd.s f17, f3, f19, f28, rne # perform operation
fnmadd.s f17, f3, f19, f28, rtz # perform operation
fnmadd.s f17, f3, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f3, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x24, 0x477784f5a9a934e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x67c7d6108faa5b94 # load x3 with value 0x67c7d6108faa5b94
sw x3, 0(x2) # store 0x67c7d6108faa5b94 in memory
flw f7, 0(x2) # load 0x67c7d6108faa5b94 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fnmadd.s f24, f3, f7, f15, dyn # perform operation
fnmadd.s f24, f3, f7, f15, rdn # perform operation
fnmadd.s f24, f3, f7, f15, rmm # perform operation
fnmadd.s f24, f3, f7, f15, rne # perform operation
fnmadd.s f24, f3, f7, f15, rtz # perform operation
fnmadd.s f24, f3, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x10, 0xff5aba29b20f6340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x54234584f8cd68c6 # load x3 with value 0x54234584f8cd68c6
sw x3, 0(x2) # store 0x54234584f8cd68c6 in memory
flw f18, 0(x2) # load 0x54234584f8cd68c6 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fnmadd.s f10, f2, f18, f19, dyn # perform operation
fnmadd.s f10, f2, f18, f19, rdn # perform operation
fnmadd.s f10, f2, f18, f19, rmm # perform operation
fnmadd.s f10, f2, f18, f19, rne # perform operation
fnmadd.s f10, f2, f18, f19, rtz # perform operation
fnmadd.s f10, f2, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f2, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x31, 0xd09b7e85b86a23a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x50d1037445209be2 # load x3 with value 0x50d1037445209be2
sw x3, 0(x2) # store 0x50d1037445209be2 in memory
flw f21, 0(x2) # load 0x50d1037445209be2 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fnmadd.s f31, f18, f21, f19, dyn # perform operation
fnmadd.s f31, f18, f21, f19, rdn # perform operation
fnmadd.s f31, f18, f21, f19, rmm # perform operation
fnmadd.s f31, f18, f21, f19, rne # perform operation
fnmadd.s f31, f18, f21, f19, rtz # perform operation
fnmadd.s f31, f18, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x18, 0x1050a27b026a94a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x4184afcf280aa086 # load x3 with value 0x4184afcf280aa086
sw x3, 0(x2) # store 0x4184afcf280aa086 in memory
flw f6, 0(x2) # load 0x4184afcf280aa086 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f18, f29, f6, f21, dyn # perform operation
fnmadd.s f18, f29, f6, f21, rdn # perform operation
fnmadd.s f18, f29, f6, f21, rmm # perform operation
fnmadd.s f18, f29, f6, f21, rne # perform operation
fnmadd.s f18, f29, f6, f21, rtz # perform operation
fnmadd.s f18, f29, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x16, 0x1912ece41af9e5e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xff2311441550c87d # load x3 with value 0xff2311441550c87d
sw x3, 0(x2) # store 0xff2311441550c87d in memory
flw f9, 0(x2) # load 0xff2311441550c87d from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmadd.s f16, f25, f9, f8, dyn # perform operation
fnmadd.s f16, f25, f9, f8, rdn # perform operation
fnmadd.s f16, f25, f9, f8, rmm # perform operation
fnmadd.s f16, f25, f9, f8, rne # perform operation
fnmadd.s f16, f25, f9, f8, rtz # perform operation
fnmadd.s f16, f25, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x2, 0x9efe34d7ade8c603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0xe1643adad8c88d29 # load x3 with value 0xe1643adad8c88d29
sw x3, 0(x2) # store 0xe1643adad8c88d29 in memory
flw f12, 0(x2) # load 0xe1643adad8c88d29 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmadd.s f2, f14, f12, f31, dyn # perform operation
fnmadd.s f2, f14, f12, f31, rdn # perform operation
fnmadd.s f2, f14, f12, f31, rmm # perform operation
fnmadd.s f2, f14, f12, f31, rne # perform operation
fnmadd.s f2, f14, f12, f31, rtz # perform operation
fnmadd.s f2, f14, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f14, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x29, 0xe9176ea1250e653d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xfac3d2ee9e420206 # load x3 with value 0xfac3d2ee9e420206
sw x3, 0(x2) # store 0xfac3d2ee9e420206 in memory
flw f21, 0(x2) # load 0xfac3d2ee9e420206 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmadd.s f29, f20, f21, f25, dyn # perform operation
fnmadd.s f29, f20, f21, f25, rdn # perform operation
fnmadd.s f29, f20, f21, f25, rmm # perform operation
fnmadd.s f29, f20, f21, f25, rne # perform operation
fnmadd.s f29, f20, f21, f25, rtz # perform operation
fnmadd.s f29, f20, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x22, 0x8ae936cf2314d80b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x48ace4f45b057670 # load x3 with value 0x48ace4f45b057670
sw x3, 0(x2) # store 0x48ace4f45b057670 in memory
flw f28, 0(x2) # load 0x48ace4f45b057670 from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmadd.s f22, f12, f28, f8, dyn # perform operation
fnmadd.s f22, f12, f28, f8, rdn # perform operation
fnmadd.s f22, f12, f28, f8, rmm # perform operation
fnmadd.s f22, f12, f28, f8, rne # perform operation
fnmadd.s f22, f12, f28, f8, rtz # perform operation
fnmadd.s f22, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f12, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x14, 0x9750e14c53a2d101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x70e20e6d6695612b # load x3 with value 0x70e20e6d6695612b
sw x3, 0(x2) # store 0x70e20e6d6695612b in memory
flw f18, 0(x2) # load 0x70e20e6d6695612b from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f14, f9, f18, f19, dyn # perform operation
fnmadd.s f14, f9, f18, f19, rdn # perform operation
fnmadd.s f14, f9, f18, f19, rmm # perform operation
fnmadd.s f14, f9, f18, f19, rne # perform operation
fnmadd.s f14, f9, f18, f19, rtz # perform operation
fnmadd.s f14, f9, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x5, 0x15c071521f327ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xeea4b0dd1d4dfe8f # load x3 with value 0xeea4b0dd1d4dfe8f
sw x3, 0(x2) # store 0xeea4b0dd1d4dfe8f in memory
flw f12, 0(x2) # load 0xeea4b0dd1d4dfe8f from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmadd.s f5, f8, f12, f22, dyn # perform operation
fnmadd.s f5, f8, f12, f22, rdn # perform operation
fnmadd.s f5, f8, f12, f22, rmm # perform operation
fnmadd.s f5, f8, f12, f22, rne # perform operation
fnmadd.s f5, f8, f12, f22, rtz # perform operation
fnmadd.s f5, f8, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x8, 0xb4a796379b35fb28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x29fa638804f679d7 # load x3 with value 0x29fa638804f679d7
sw x3, 0(x2) # store 0x29fa638804f679d7 in memory
flw f31, 0(x2) # load 0x29fa638804f679d7 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmadd.s f8, f2, f31, f15, dyn # perform operation
fnmadd.s f8, f2, f31, f15, rdn # perform operation
fnmadd.s f8, f2, f31, f15, rmm # perform operation
fnmadd.s f8, f2, f31, f15, rne # perform operation
fnmadd.s f8, f2, f31, f15, rtz # perform operation
fnmadd.s f8, f2, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x8, 0xe8f7ebaac0e0778b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x6d5351d5dc6d2348 # load x3 with value 0x6d5351d5dc6d2348
sw x3, 0(x2) # store 0x6d5351d5dc6d2348 in memory
flw f25, 0(x2) # load 0x6d5351d5dc6d2348 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmadd.s f8, f17, f25, f11, dyn # perform operation
fnmadd.s f8, f17, f25, f11, rdn # perform operation
fnmadd.s f8, f17, f25, f11, rmm # perform operation
fnmadd.s f8, f17, f25, f11, rne # perform operation
fnmadd.s f8, f17, f25, f11, rtz # perform operation
fnmadd.s f8, f17, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x25, 0x12d8a0ac1cf3a8f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x532618688bfc595d # load x3 with value 0x532618688bfc595d
sw x3, 0(x2) # store 0x532618688bfc595d in memory
flw f17, 0(x2) # load 0x532618688bfc595d from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmadd.s f25, f18, f17, f21, dyn # perform operation
fnmadd.s f25, f18, f17, f21, rdn # perform operation
fnmadd.s f25, f18, f17, f21, rmm # perform operation
fnmadd.s f25, f18, f17, f21, rne # perform operation
fnmadd.s f25, f18, f17, f21, rtz # perform operation
fnmadd.s f25, f18, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f18, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x1, 0xcbb7e3a3be9888ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x88664bf566960d12 # load x3 with value 0x88664bf566960d12
sw x3, 0(x2) # store 0x88664bf566960d12 in memory
flw f13, 0(x2) # load 0x88664bf566960d12 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmadd.s f1, f20, f13, f22, dyn # perform operation
fnmadd.s f1, f20, f13, f22, rdn # perform operation
fnmadd.s f1, f20, f13, f22, rmm # perform operation
fnmadd.s f1, f20, f13, f22, rne # perform operation
fnmadd.s f1, f20, f13, f22, rtz # perform operation
fnmadd.s f1, f20, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f20, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f20, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f20, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f20, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f20, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x13, 0x0995795efe189c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x684a6bc342713198 # load x3 with value 0x684a6bc342713198
sw x3, 0(x2) # store 0x684a6bc342713198 in memory
flw f24, 0(x2) # load 0x684a6bc342713198 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f13, f21, f24, f2, dyn # perform operation
fnmadd.s f13, f21, f24, f2, rdn # perform operation
fnmadd.s f13, f21, f24, f2, rmm # perform operation
fnmadd.s f13, f21, f24, f2, rne # perform operation
fnmadd.s f13, f21, f24, f2, rtz # perform operation
fnmadd.s f13, f21, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f21, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f21, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f21, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f21, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f21, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x16, 0xc1a4919f6aa99d86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x85e88b181fa42594 # load x3 with value 0x85e88b181fa42594
sw x3, 0(x2) # store 0x85e88b181fa42594 in memory
flw f28, 0(x2) # load 0x85e88b181fa42594 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmadd.s f16, f15, f28, f7, dyn # perform operation
fnmadd.s f16, f15, f28, f7, rdn # perform operation
fnmadd.s f16, f15, f28, f7, rmm # perform operation
fnmadd.s f16, f15, f28, f7, rne # perform operation
fnmadd.s f16, f15, f28, f7, rtz # perform operation
fnmadd.s f16, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x31, 0x198fd8daf8e70e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x294d5da58dca32f5 # load x3 with value 0x294d5da58dca32f5
sw x3, 0(x2) # store 0x294d5da58dca32f5 in memory
flw f29, 0(x2) # load 0x294d5da58dca32f5 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fnmadd.s f31, f3, f29, f20, dyn # perform operation
fnmadd.s f31, f3, f29, f20, rdn # perform operation
fnmadd.s f31, f3, f29, f20, rmm # perform operation
fnmadd.s f31, f3, f29, f20, rne # perform operation
fnmadd.s f31, f3, f29, f20, rtz # perform operation
fnmadd.s f31, f3, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f3, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x12, 0xcebfc099dbd2cf24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x1516d7d335220b94 # load x3 with value 0x1516d7d335220b94
sw x3, 0(x2) # store 0x1516d7d335220b94 in memory
flw f30, 0(x2) # load 0x1516d7d335220b94 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f12, f29, f30, f2, dyn # perform operation
fnmadd.s f12, f29, f30, f2, rdn # perform operation
fnmadd.s f12, f29, f30, f2, rmm # perform operation
fnmadd.s f12, f29, f30, f2, rne # perform operation
fnmadd.s f12, f29, f30, f2, rtz # perform operation
fnmadd.s f12, f29, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x14, 0xca94214c9c41030f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0xa95cbbea3029911e # load x3 with value 0xa95cbbea3029911e
sw x3, 0(x2) # store 0xa95cbbea3029911e in memory
flw f17, 0(x2) # load 0xa95cbbea3029911e from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmadd.s f14, f16, f17, f19, dyn # perform operation
fnmadd.s f14, f16, f17, f19, rdn # perform operation
fnmadd.s f14, f16, f17, f19, rmm # perform operation
fnmadd.s f14, f16, f17, f19, rne # perform operation
fnmadd.s f14, f16, f17, f19, rtz # perform operation
fnmadd.s f14, f16, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x22, 0xeb93cbbc0265b4cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xbcb0f8a5b5aedf73 # load x3 with value 0xbcb0f8a5b5aedf73
sw x3, 0(x2) # store 0xbcb0f8a5b5aedf73 in memory
flw f13, 0(x2) # load 0xbcb0f8a5b5aedf73 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmadd.s f22, f15, f13, f1, dyn # perform operation
fnmadd.s f22, f15, f13, f1, rdn # perform operation
fnmadd.s f22, f15, f13, f1, rmm # perform operation
fnmadd.s f22, f15, f13, f1, rne # perform operation
fnmadd.s f22, f15, f13, f1, rtz # perform operation
fnmadd.s f22, f15, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f15, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f15, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f15, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f15, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f15, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x3, 0xade9883727ea0c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x36ed5fd69fc97a91 # load x3 with value 0x36ed5fd69fc97a91
sw x3, 0(x2) # store 0x36ed5fd69fc97a91 in memory
flw f25, 0(x2) # load 0x36ed5fd69fc97a91 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fnmadd.s f3, f27, f25, f24, dyn # perform operation
fnmadd.s f3, f27, f25, f24, rdn # perform operation
fnmadd.s f3, f27, f25, f24, rmm # perform operation
fnmadd.s f3, f27, f25, f24, rne # perform operation
fnmadd.s f3, f27, f25, f24, rtz # perform operation
fnmadd.s f3, f27, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x28, 0xdaebf154a7df23cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x5195e3b162c6f659 # load x3 with value 0x5195e3b162c6f659
sw x3, 0(x2) # store 0x5195e3b162c6f659 in memory
flw f27, 0(x2) # load 0x5195e3b162c6f659 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmadd.s f28, f29, f27, f25, dyn # perform operation
fnmadd.s f28, f29, f27, f25, rdn # perform operation
fnmadd.s f28, f29, f27, f25, rmm # perform operation
fnmadd.s f28, f29, f27, f25, rne # perform operation
fnmadd.s f28, f29, f27, f25, rtz # perform operation
fnmadd.s f28, f29, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x4, 0x73a096ba38108ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x1a0ff5d6ca154faa # load x3 with value 0x1a0ff5d6ca154faa
sw x3, 0(x2) # store 0x1a0ff5d6ca154faa in memory
flw f6, 0(x2) # load 0x1a0ff5d6ca154faa from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fnmadd.s f4, f26, f6, f20, dyn # perform operation
fnmadd.s f4, f26, f6, f20, rdn # perform operation
fnmadd.s f4, f26, f6, f20, rmm # perform operation
fnmadd.s f4, f26, f6, f20, rne # perform operation
fnmadd.s f4, f26, f6, f20, rtz # perform operation
fnmadd.s f4, f26, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f4, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f4, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f4, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f4, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f4, f26, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x22, 0x9c6ca7f655b85f08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x972e007d139ecb6f # load x3 with value 0x972e007d139ecb6f
sw x3, 0(x2) # store 0x972e007d139ecb6f in memory
flw f26, 0(x2) # load 0x972e007d139ecb6f from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmadd.s f22, f11, f26, f21, dyn # perform operation
fnmadd.s f22, f11, f26, f21, rdn # perform operation
fnmadd.s f22, f11, f26, f21, rmm # perform operation
fnmadd.s f22, f11, f26, f21, rne # perform operation
fnmadd.s f22, f11, f26, f21, rtz # perform operation
fnmadd.s f22, f11, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f11, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x27, 0x3abaea910e01b9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x27c9278e8644c0ea # load x3 with value 0x27c9278e8644c0ea
sw x3, 0(x2) # store 0x27c9278e8644c0ea in memory
flw f6, 0(x2) # load 0x27c9278e8644c0ea from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.s f27, f10, f6, f21, dyn # perform operation
fnmadd.s f27, f10, f6, f21, rdn # perform operation
fnmadd.s f27, f10, f6, f21, rmm # perform operation
fnmadd.s f27, f10, f6, f21, rne # perform operation
fnmadd.s f27, f10, f6, f21, rtz # perform operation
fnmadd.s f27, f10, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x19, 0x747d71b0b18893b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0xbaa70e38fdcd08f9 # load x3 with value 0xbaa70e38fdcd08f9
sw x3, 0(x2) # store 0xbaa70e38fdcd08f9 in memory
flw f24, 0(x2) # load 0xbaa70e38fdcd08f9 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmadd.s f19, f25, f24, f20, dyn # perform operation
fnmadd.s f19, f25, f24, f20, rdn # perform operation
fnmadd.s f19, f25, f24, f20, rmm # perform operation
fnmadd.s f19, f25, f24, f20, rne # perform operation
fnmadd.s f19, f25, f24, f20, rtz # perform operation
fnmadd.s f19, f25, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f25, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x20, 0x30e9e5ad69a13e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xaec47ee485899cc5 # load x3 with value 0xaec47ee485899cc5
sw x3, 0(x2) # store 0xaec47ee485899cc5 in memory
flw f25, 0(x2) # load 0xaec47ee485899cc5 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmadd.s f20, f30, f25, f8, dyn # perform operation
fnmadd.s f20, f30, f25, f8, rdn # perform operation
fnmadd.s f20, f30, f25, f8, rmm # perform operation
fnmadd.s f20, f30, f25, f8, rne # perform operation
fnmadd.s f20, f30, f25, f8, rtz # perform operation
fnmadd.s f20, f30, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x28, 0x4ad87cccb0a83054 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x9781554a8e5f32a7 # load x3 with value 0x9781554a8e5f32a7
sw x3, 0(x2) # store 0x9781554a8e5f32a7 in memory
flw f26, 0(x2) # load 0x9781554a8e5f32a7 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fnmadd.s f28, f20, f26, f29, dyn # perform operation
fnmadd.s f28, f20, f26, f29, rdn # perform operation
fnmadd.s f28, f20, f26, f29, rmm # perform operation
fnmadd.s f28, f20, f26, f29, rne # perform operation
fnmadd.s f28, f20, f26, f29, rtz # perform operation
fnmadd.s f28, f20, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x18, 0xf9d88e3a5914f09b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x8977672cef736fbd # load x3 with value 0x8977672cef736fbd
sw x3, 0(x2) # store 0x8977672cef736fbd in memory
flw f17, 0(x2) # load 0x8977672cef736fbd from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f18, f9, f17, f28, dyn # perform operation
fnmadd.s f18, f9, f17, f28, rdn # perform operation
fnmadd.s f18, f9, f17, f28, rmm # perform operation
fnmadd.s f18, f9, f17, f28, rne # perform operation
fnmadd.s f18, f9, f17, f28, rtz # perform operation
fnmadd.s f18, f9, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f9, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f9, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x14, 0xa5fbeaebb5080434 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xf830162384991153 # load x3 with value 0xf830162384991153
sw x3, 0(x2) # store 0xf830162384991153 in memory
flw f11, 0(x2) # load 0xf830162384991153 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f14, f26, f11, f24, dyn # perform operation
fnmadd.s f14, f26, f11, f24, rdn # perform operation
fnmadd.s f14, f26, f11, f24, rmm # perform operation
fnmadd.s f14, f26, f11, f24, rne # perform operation
fnmadd.s f14, f26, f11, f24, rtz # perform operation
fnmadd.s f14, f26, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f26, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x6, 0xf8f2ca47b65f2256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x1c14293dd104349b # load x3 with value 0x1c14293dd104349b
sw x3, 0(x2) # store 0x1c14293dd104349b in memory
flw f18, 0(x2) # load 0x1c14293dd104349b from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmadd.s f6, f1, f18, f24, dyn # perform operation
fnmadd.s f6, f1, f18, f24, rdn # perform operation
fnmadd.s f6, f1, f18, f24, rmm # perform operation
fnmadd.s f6, f1, f18, f24, rne # perform operation
fnmadd.s f6, f1, f18, f24, rtz # perform operation
fnmadd.s f6, f1, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f1, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x2, 0xb97c241cc6980365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x4ec737e39a36c89e # load x3 with value 0x4ec737e39a36c89e
sw x3, 0(x2) # store 0x4ec737e39a36c89e in memory
flw f11, 0(x2) # load 0x4ec737e39a36c89e from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmadd.s f2, f20, f11, f19, dyn # perform operation
fnmadd.s f2, f20, f11, f19, rdn # perform operation
fnmadd.s f2, f20, f11, f19, rmm # perform operation
fnmadd.s f2, f20, f11, f19, rne # perform operation
fnmadd.s f2, f20, f11, f19, rtz # perform operation
fnmadd.s f2, f20, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x12, 0x2e2b3713644d7270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xbdba155b112f7a6c # load x3 with value 0xbdba155b112f7a6c
sw x3, 0(x2) # store 0xbdba155b112f7a6c in memory
flw f18, 0(x2) # load 0xbdba155b112f7a6c from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmadd.s f12, f8, f18, f30, dyn # perform operation
fnmadd.s f12, f8, f18, f30, rdn # perform operation
fnmadd.s f12, f8, f18, f30, rmm # perform operation
fnmadd.s f12, f8, f18, f30, rne # perform operation
fnmadd.s f12, f8, f18, f30, rtz # perform operation
fnmadd.s f12, f8, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x14, 0xa7bea6a2eab8a69c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xb9e0da7c99443fcc # load x3 with value 0xb9e0da7c99443fcc
sw x3, 0(x2) # store 0xb9e0da7c99443fcc in memory
flw f6, 0(x2) # load 0xb9e0da7c99443fcc from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fnmadd.s f14, f22, f6, f29, dyn # perform operation
fnmadd.s f14, f22, f6, f29, rdn # perform operation
fnmadd.s f14, f22, f6, f29, rmm # perform operation
fnmadd.s f14, f22, f6, f29, rne # perform operation
fnmadd.s f14, f22, f6, f29, rtz # perform operation
fnmadd.s f14, f22, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f6, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x18, 0x4e5b6af44f0f9802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x90e925953c264406 # load x3 with value 0x90e925953c264406
sw x3, 0(x2) # store 0x90e925953c264406 in memory
flw f1, 0(x2) # load 0x90e925953c264406 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.s f18, f13, f1, f21, dyn # perform operation
fnmadd.s f18, f13, f1, f21, rdn # perform operation
fnmadd.s f18, f13, f1, f21, rmm # perform operation
fnmadd.s f18, f13, f1, f21, rne # perform operation
fnmadd.s f18, f13, f1, f21, rtz # perform operation
fnmadd.s f18, f13, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x5, 0x512262f36c3db9f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x7fd5737f11d7836c # load x3 with value 0x7fd5737f11d7836c
sw x3, 0(x2) # store 0x7fd5737f11d7836c in memory
flw f2, 0(x2) # load 0x7fd5737f11d7836c from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmadd.s f5, f29, f2, f23, dyn # perform operation
fnmadd.s f5, f29, f2, f23, rdn # perform operation
fnmadd.s f5, f29, f2, f23, rmm # perform operation
fnmadd.s f5, f29, f2, f23, rne # perform operation
fnmadd.s f5, f29, f2, f23, rtz # perform operation
fnmadd.s f5, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f29, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x16, 0x5b9b1110c3ecc744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x962fe977a13bed37 # load x3 with value 0x962fe977a13bed37
sw x3, 0(x2) # store 0x962fe977a13bed37 in memory
flw f21, 0(x2) # load 0x962fe977a13bed37 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f16, f20, f21, f30, dyn # perform operation
fnmadd.s f16, f20, f21, f30, rdn # perform operation
fnmadd.s f16, f20, f21, f30, rmm # perform operation
fnmadd.s f16, f20, f21, f30, rne # perform operation
fnmadd.s f16, f20, f21, f30, rtz # perform operation
fnmadd.s f16, f20, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x24, 0x6fda8a57a7f245a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xd8407a66d7d1d512 # load x3 with value 0xd8407a66d7d1d512
sw x3, 0(x2) # store 0xd8407a66d7d1d512 in memory
flw f16, 0(x2) # load 0xd8407a66d7d1d512 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmadd.s f24, f17, f16, f15, dyn # perform operation
fnmadd.s f24, f17, f16, f15, rdn # perform operation
fnmadd.s f24, f17, f16, f15, rmm # perform operation
fnmadd.s f24, f17, f16, f15, rne # perform operation
fnmadd.s f24, f17, f16, f15, rtz # perform operation
fnmadd.s f24, f17, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f17, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x5, 0x65bc14f2069a47e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x83d81cf9fd3606 # load x3 with value 0x83d81cf9fd3606
sw x3, 0(x2) # store 0x83d81cf9fd3606 in memory
flw f29, 0(x2) # load 0x83d81cf9fd3606 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmadd.s f5, f8, f29, f1, dyn # perform operation
fnmadd.s f5, f8, f29, f1, rdn # perform operation
fnmadd.s f5, f8, f29, f1, rmm # perform operation
fnmadd.s f5, f8, f29, f1, rne # perform operation
fnmadd.s f5, f8, f29, f1, rtz # perform operation
fnmadd.s f5, f8, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f29, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x6, 0xe11282ab6a98e333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x836417f7e9765fc3 # load x3 with value 0x836417f7e9765fc3
sw x3, 0(x2) # store 0x836417f7e9765fc3 in memory
flw f1, 0(x2) # load 0x836417f7e9765fc3 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fnmadd.s f6, f11, f1, f21, dyn # perform operation
fnmadd.s f6, f11, f1, f21, rdn # perform operation
fnmadd.s f6, f11, f1, f21, rmm # perform operation
fnmadd.s f6, f11, f1, f21, rne # perform operation
fnmadd.s f6, f11, f1, f21, rtz # perform operation
fnmadd.s f6, f11, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x30, 0xa370074a5ad467aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x4001ab19052f6ed0 # load x3 with value 0x4001ab19052f6ed0
sw x3, 0(x2) # store 0x4001ab19052f6ed0 in memory
flw f11, 0(x2) # load 0x4001ab19052f6ed0 from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmadd.s f30, f12, f11, f15, dyn # perform operation
fnmadd.s f30, f12, f11, f15, rdn # perform operation
fnmadd.s f30, f12, f11, f15, rmm # perform operation
fnmadd.s f30, f12, f11, f15, rne # perform operation
fnmadd.s f30, f12, f11, f15, rtz # perform operation
fnmadd.s f30, f12, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x30, 0x4a2917d3a2973595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xc39c37735cd693fb # load x3 with value 0xc39c37735cd693fb
sw x3, 0(x2) # store 0xc39c37735cd693fb in memory
flw f20, 0(x2) # load 0xc39c37735cd693fb from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmadd.s f30, f31, f20, f26, dyn # perform operation
fnmadd.s f30, f31, f20, f26, rdn # perform operation
fnmadd.s f30, f31, f20, f26, rmm # perform operation
fnmadd.s f30, f31, f20, f26, rne # perform operation
fnmadd.s f30, f31, f20, f26, rtz # perform operation
fnmadd.s f30, f31, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x18, 0x6bfdd33f9265ea53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xbba70d6147e3e811 # load x3 with value 0xbba70d6147e3e811
sw x3, 0(x2) # store 0xbba70d6147e3e811 in memory
flw f27, 0(x2) # load 0xbba70d6147e3e811 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f18, f1, f27, f12, dyn # perform operation
fnmadd.s f18, f1, f27, f12, rdn # perform operation
fnmadd.s f18, f1, f27, f12, rmm # perform operation
fnmadd.s f18, f1, f27, f12, rne # perform operation
fnmadd.s f18, f1, f27, f12, rtz # perform operation
fnmadd.s f18, f1, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x27, 0x4e5f498331542b36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x5c22e2c517c45ac0 # load x3 with value 0x5c22e2c517c45ac0
sw x3, 0(x2) # store 0x5c22e2c517c45ac0 in memory
flw f31, 0(x2) # load 0x5c22e2c517c45ac0 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmadd.s f27, f7, f31, f12, dyn # perform operation
fnmadd.s f27, f7, f31, f12, rdn # perform operation
fnmadd.s f27, f7, f31, f12, rmm # perform operation
fnmadd.s f27, f7, f31, f12, rne # perform operation
fnmadd.s f27, f7, f31, f12, rtz # perform operation
fnmadd.s f27, f7, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f7, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x22, 0xa13d57f6677f1294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x78b78cda311297c9 # load x3 with value 0x78b78cda311297c9
sw x3, 0(x2) # store 0x78b78cda311297c9 in memory
flw f1, 0(x2) # load 0x78b78cda311297c9 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmadd.s f22, f16, f1, f19, dyn # perform operation
fnmadd.s f22, f16, f1, f19, rdn # perform operation
fnmadd.s f22, f16, f1, f19, rmm # perform operation
fnmadd.s f22, f16, f1, f19, rne # perform operation
fnmadd.s f22, f16, f1, f19, rtz # perform operation
fnmadd.s f22, f16, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x23, 0x490665de5836e6fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x1c3b14b86105a715 # load x3 with value 0x1c3b14b86105a715
sw x3, 0(x2) # store 0x1c3b14b86105a715 in memory
flw f12, 0(x2) # load 0x1c3b14b86105a715 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f23, f17, f12, f3, dyn # perform operation
fnmadd.s f23, f17, f12, f3, rdn # perform operation
fnmadd.s f23, f17, f12, f3, rmm # perform operation
fnmadd.s f23, f17, f12, f3, rne # perform operation
fnmadd.s f23, f17, f12, f3, rtz # perform operation
fnmadd.s f23, f17, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x16, 0x8c771a9e9fda1599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x247fbd0a652440c5 # load x3 with value 0x247fbd0a652440c5
sw x3, 0(x2) # store 0x247fbd0a652440c5 in memory
flw f19, 0(x2) # load 0x247fbd0a652440c5 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmadd.s f16, f20, f19, f3, dyn # perform operation
fnmadd.s f16, f20, f19, f3, rdn # perform operation
fnmadd.s f16, f20, f19, f3, rmm # perform operation
fnmadd.s f16, f20, f19, f3, rne # perform operation
fnmadd.s f16, f20, f19, f3, rtz # perform operation
fnmadd.s f16, f20, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f20, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f20, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x10, 0xe304a6e6396a25dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xf8aeb6e9fcd1bf0f # load x3 with value 0xf8aeb6e9fcd1bf0f
sw x3, 0(x2) # store 0xf8aeb6e9fcd1bf0f in memory
flw f21, 0(x2) # load 0xf8aeb6e9fcd1bf0f from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f10, f1, f21, f9, dyn # perform operation
fnmadd.s f10, f1, f21, f9, rdn # perform operation
fnmadd.s f10, f1, f21, f9, rmm # perform operation
fnmadd.s f10, f1, f21, f9, rne # perform operation
fnmadd.s f10, f1, f21, f9, rtz # perform operation
fnmadd.s f10, f1, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x23, 0x0da761f9dd8ce4ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x56dbcff18929fca9 # load x3 with value 0x56dbcff18929fca9
sw x3, 0(x2) # store 0x56dbcff18929fca9 in memory
flw f1, 0(x2) # load 0x56dbcff18929fca9 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fnmadd.s f23, f21, f1, f2, dyn # perform operation
fnmadd.s f23, f21, f1, f2, rdn # perform operation
fnmadd.s f23, f21, f1, f2, rmm # perform operation
fnmadd.s f23, f21, f1, f2, rne # perform operation
fnmadd.s f23, f21, f1, f2, rtz # perform operation
fnmadd.s f23, f21, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x10, 0xc33c41f3e5836b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x3ccae2b942094831 # load x3 with value 0x3ccae2b942094831
sw x3, 0(x2) # store 0x3ccae2b942094831 in memory
flw f20, 0(x2) # load 0x3ccae2b942094831 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmadd.s f10, f24, f20, f28, dyn # perform operation
fnmadd.s f10, f24, f20, f28, rdn # perform operation
fnmadd.s f10, f24, f20, f28, rmm # perform operation
fnmadd.s f10, f24, f20, f28, rne # perform operation
fnmadd.s f10, f24, f20, f28, rtz # perform operation
fnmadd.s f10, f24, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x17, 0x71b9019e9ef84a0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x8f1c0f85057c19b7 # load x3 with value 0x8f1c0f85057c19b7
sw x3, 0(x2) # store 0x8f1c0f85057c19b7 in memory
flw f31, 0(x2) # load 0x8f1c0f85057c19b7 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.s f17, f6, f31, f3, dyn # perform operation
fnmadd.s f17, f6, f31, f3, rdn # perform operation
fnmadd.s f17, f6, f31, f3, rmm # perform operation
fnmadd.s f17, f6, f31, f3, rne # perform operation
fnmadd.s f17, f6, f31, f3, rtz # perform operation
fnmadd.s f17, f6, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f6, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f6, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f6, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f6, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f6, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x28, 0xa4ce67fe1cfa3dbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x4aa1a47d56eb2c14 # load x3 with value 0x4aa1a47d56eb2c14
sw x3, 0(x2) # store 0x4aa1a47d56eb2c14 in memory
flw f30, 0(x2) # load 0x4aa1a47d56eb2c14 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fnmadd.s f28, f11, f30, f26, dyn # perform operation
fnmadd.s f28, f11, f30, f26, rdn # perform operation
fnmadd.s f28, f11, f30, f26, rmm # perform operation
fnmadd.s f28, f11, f30, f26, rne # perform operation
fnmadd.s f28, f11, f30, f26, rtz # perform operation
fnmadd.s f28, f11, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f11, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x16, 0x9cad65dcb4796679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x9fa1752fec1680f9 # load x3 with value 0x9fa1752fec1680f9
sw x3, 0(x2) # store 0x9fa1752fec1680f9 in memory
flw f20, 0(x2) # load 0x9fa1752fec1680f9 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fnmadd.s f16, f3, f20, f26, dyn # perform operation
fnmadd.s f16, f3, f20, f26, rdn # perform operation
fnmadd.s f16, f3, f20, f26, rmm # perform operation
fnmadd.s f16, f3, f20, f26, rne # perform operation
fnmadd.s f16, f3, f20, f26, rtz # perform operation
fnmadd.s f16, f3, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x11, 0x6981d9bd7e4d650e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x89942e28a93c5727 # load x3 with value 0x89942e28a93c5727
sw x3, 0(x2) # store 0x89942e28a93c5727 in memory
flw f14, 0(x2) # load 0x89942e28a93c5727 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmadd.s f11, f16, f14, f8, dyn # perform operation
fnmadd.s f11, f16, f14, f8, rdn # perform operation
fnmadd.s f11, f16, f14, f8, rmm # perform operation
fnmadd.s f11, f16, f14, f8, rne # perform operation
fnmadd.s f11, f16, f14, f8, rtz # perform operation
fnmadd.s f11, f16, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x8, 0x5c40c50e545efbd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x835e48e60296b01 # load x3 with value 0x835e48e60296b01
sw x3, 0(x2) # store 0x835e48e60296b01 in memory
flw f2, 0(x2) # load 0x835e48e60296b01 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fnmadd.s f8, f15, f2, f6, dyn # perform operation
fnmadd.s f8, f15, f2, f6, rdn # perform operation
fnmadd.s f8, f15, f2, f6, rmm # perform operation
fnmadd.s f8, f15, f2, f6, rne # perform operation
fnmadd.s f8, f15, f2, f6, rtz # perform operation
fnmadd.s f8, f15, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f15, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f15, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x2, 0x241cc13e3981b066 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x72f35d801d3064ec # load x3 with value 0x72f35d801d3064ec
sw x3, 0(x2) # store 0x72f35d801d3064ec in memory
flw f17, 0(x2) # load 0x72f35d801d3064ec from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmadd.s f2, f22, f17, f26, dyn # perform operation
fnmadd.s f2, f22, f17, f26, rdn # perform operation
fnmadd.s f2, f22, f17, f26, rmm # perform operation
fnmadd.s f2, f22, f17, f26, rne # perform operation
fnmadd.s f2, f22, f17, f26, rtz # perform operation
fnmadd.s f2, f22, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x25, 0x411ed89f70cc7c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xe8ba68adf78d9562 # load x3 with value 0xe8ba68adf78d9562
sw x3, 0(x2) # store 0xe8ba68adf78d9562 in memory
flw f14, 0(x2) # load 0xe8ba68adf78d9562 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmadd.s f25, f22, f14, f7, dyn # perform operation
fnmadd.s f25, f22, f14, f7, rdn # perform operation
fnmadd.s f25, f22, f14, f7, rmm # perform operation
fnmadd.s f25, f22, f14, f7, rne # perform operation
fnmadd.s f25, f22, f14, f7, rtz # perform operation
fnmadd.s f25, f22, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x13, 0xcbd2b117f0e09146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xf9e3fa036810a9b4 # load x3 with value 0xf9e3fa036810a9b4
sw x3, 0(x2) # store 0xf9e3fa036810a9b4 in memory
flw f24, 0(x2) # load 0xf9e3fa036810a9b4 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmadd.s f13, f25, f24, f14, dyn # perform operation
fnmadd.s f13, f25, f24, f14, rdn # perform operation
fnmadd.s f13, f25, f24, f14, rmm # perform operation
fnmadd.s f13, f25, f24, f14, rne # perform operation
fnmadd.s f13, f25, f24, f14, rtz # perform operation
fnmadd.s f13, f25, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x9, 0xefe450d0831bf6c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x4e3140d768f2fafc # load x3 with value 0x4e3140d768f2fafc
sw x3, 0(x2) # store 0x4e3140d768f2fafc in memory
flw f27, 0(x2) # load 0x4e3140d768f2fafc from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fnmadd.s f9, f15, f27, f29, dyn # perform operation
fnmadd.s f9, f15, f27, f29, rdn # perform operation
fnmadd.s f9, f15, f27, f29, rmm # perform operation
fnmadd.s f9, f15, f27, f29, rne # perform operation
fnmadd.s f9, f15, f27, f29, rtz # perform operation
fnmadd.s f9, f15, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x31, 0x4efb144086d9dcc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xc3458ea9d1bcd51c # load x3 with value 0xc3458ea9d1bcd51c
sw x3, 0(x2) # store 0xc3458ea9d1bcd51c in memory
flw f1, 0(x2) # load 0xc3458ea9d1bcd51c from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f31, f26, f1, f21, dyn # perform operation
fnmadd.s f31, f26, f1, f21, rdn # perform operation
fnmadd.s f31, f26, f1, f21, rmm # perform operation
fnmadd.s f31, f26, f1, f21, rne # perform operation
fnmadd.s f31, f26, f1, f21, rtz # perform operation
fnmadd.s f31, f26, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f26, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f26, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f26, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f26, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f26, f1, f21 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x88a26fea6eebd938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb74d33174232759 # load x3 with value 0xb74d33174232759
sw x3, 0(x2) # store 0xb74d33174232759 in memory
flw f30, 0(x2) # load 0xb74d33174232759 from memory into f30
li x3, 0x549ef30965625f0a # load x3 with value 0x549ef30965625f0a
sw x3, 0(x2) # store 0x549ef30965625f0a in memory
flw f16, 0(x2) # load 0x549ef30965625f0a from memory into f16
li x3, 0x2cfb61226fc004fd # load x3 with value 0x2cfb61226fc004fd
sw x3, 0(x2) # store 0x2cfb61226fc004fd in memory
flw f8, 0(x2) # load 0x2cfb61226fc004fd from memory into f8
fnmadd.s f0, f30, f16, f8 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x9439d31ee7e7992a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b945c5d3b81c149 # load x3 with value 0x7b945c5d3b81c149
sw x3, 0(x2) # store 0x7b945c5d3b81c149 in memory
flw f1, 0(x2) # load 0x7b945c5d3b81c149 from memory into f1
li x3, 0x8b7a59445ce36a78 # load x3 with value 0x8b7a59445ce36a78
sw x3, 0(x2) # store 0x8b7a59445ce36a78 in memory
flw f20, 0(x2) # load 0x8b7a59445ce36a78 from memory into f20
li x3, 0xf305c4d0f92bea8e # load x3 with value 0xf305c4d0f92bea8e
sw x3, 0(x2) # store 0xf305c4d0f92bea8e in memory
flw f15, 0(x2) # load 0xf305c4d0f92bea8e from memory into f15
fnmadd.s f1, f1, f20, f15 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x433b53fc8b0e0ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78ed7a5ba1114bff # load x3 with value 0x78ed7a5ba1114bff
sw x3, 0(x2) # store 0x78ed7a5ba1114bff in memory
flw f12, 0(x2) # load 0x78ed7a5ba1114bff from memory into f12
li x3, 0x68148eaa705a5467 # load x3 with value 0x68148eaa705a5467
sw x3, 0(x2) # store 0x68148eaa705a5467 in memory
flw f18, 0(x2) # load 0x68148eaa705a5467 from memory into f18
li x3, 0x5700fd0f9d970043 # load x3 with value 0x5700fd0f9d970043
sw x3, 0(x2) # store 0x5700fd0f9d970043 in memory
flw f4, 0(x2) # load 0x5700fd0f9d970043 from memory into f4
fnmadd.s f2, f12, f18, f4 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xbe275e5a5997095b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d3448ea14844ae4 # load x3 with value 0x5d3448ea14844ae4
sw x3, 0(x2) # store 0x5d3448ea14844ae4 in memory
flw f29, 0(x2) # load 0x5d3448ea14844ae4 from memory into f29
li x3, 0xe0615819c13c7774 # load x3 with value 0xe0615819c13c7774
sw x3, 0(x2) # store 0xe0615819c13c7774 in memory
flw f2, 0(x2) # load 0xe0615819c13c7774 from memory into f2
li x3, 0x7c15922c507685bf # load x3 with value 0x7c15922c507685bf
sw x3, 0(x2) # store 0x7c15922c507685bf in memory
flw f24, 0(x2) # load 0x7c15922c507685bf from memory into f24
fnmadd.s f3, f29, f2, f24 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0xefaeebc3e9361f12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x82a5c29f187e612f # load x3 with value 0x82a5c29f187e612f
sw x3, 0(x2) # store 0x82a5c29f187e612f in memory
flw f22, 0(x2) # load 0x82a5c29f187e612f from memory into f22
li x3, 0x36858578e7568a6b # load x3 with value 0x36858578e7568a6b
sw x3, 0(x2) # store 0x36858578e7568a6b in memory
flw f10, 0(x2) # load 0x36858578e7568a6b from memory into f10
li x3, 0xe67cb27771d1262 # load x3 with value 0xe67cb27771d1262
sw x3, 0(x2) # store 0xe67cb27771d1262 in memory
flw f17, 0(x2) # load 0xe67cb27771d1262 from memory into f17
fnmadd.s f4, f22, f10, f17 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x0bf81f59b1b71bcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50d82ff99e4ee8fd # load x3 with value 0x50d82ff99e4ee8fd
sw x3, 0(x2) # store 0x50d82ff99e4ee8fd in memory
flw f26, 0(x2) # load 0x50d82ff99e4ee8fd from memory into f26
li x3, 0xcd2e5826127b7e8c # load x3 with value 0xcd2e5826127b7e8c
sw x3, 0(x2) # store 0xcd2e5826127b7e8c in memory
flw f8, 0(x2) # load 0xcd2e5826127b7e8c from memory into f8
li x3, 0x18a1921fbb4929ef # load x3 with value 0x18a1921fbb4929ef
sw x3, 0(x2) # store 0x18a1921fbb4929ef in memory
flw f10, 0(x2) # load 0x18a1921fbb4929ef from memory into f10
fnmadd.s f5, f26, f8, f10 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x71b5a8c9a457fc92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4fbfd6e520c5b8ed # load x3 with value 0x4fbfd6e520c5b8ed
sw x3, 0(x2) # store 0x4fbfd6e520c5b8ed in memory
flw f26, 0(x2) # load 0x4fbfd6e520c5b8ed from memory into f26
li x3, 0x1708d710ee61e2e3 # load x3 with value 0x1708d710ee61e2e3
sw x3, 0(x2) # store 0x1708d710ee61e2e3 in memory
flw f2, 0(x2) # load 0x1708d710ee61e2e3 from memory into f2
li x3, 0xc4164c7e365ca205 # load x3 with value 0xc4164c7e365ca205
sw x3, 0(x2) # store 0xc4164c7e365ca205 in memory
flw f1, 0(x2) # load 0xc4164c7e365ca205 from memory into f1
fnmadd.s f6, f26, f2, f1 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x3c0fe502223f2c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98676901536b34d4 # load x3 with value 0x98676901536b34d4
sw x3, 0(x2) # store 0x98676901536b34d4 in memory
flw f3, 0(x2) # load 0x98676901536b34d4 from memory into f3
li x3, 0xdade289d73d1aa25 # load x3 with value 0xdade289d73d1aa25
sw x3, 0(x2) # store 0xdade289d73d1aa25 in memory
flw f26, 0(x2) # load 0xdade289d73d1aa25 from memory into f26
li x3, 0x43dd79d4ec8e6b4f # load x3 with value 0x43dd79d4ec8e6b4f
sw x3, 0(x2) # store 0x43dd79d4ec8e6b4f in memory
flw f29, 0(x2) # load 0x43dd79d4ec8e6b4f from memory into f29
fnmadd.s f7, f3, f26, f29 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xaf6782372e100bc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaaf8af7e92282e9 # load x3 with value 0xaaf8af7e92282e9
sw x3, 0(x2) # store 0xaaf8af7e92282e9 in memory
flw f1, 0(x2) # load 0xaaf8af7e92282e9 from memory into f1
li x3, 0x4140f73f805a37d2 # load x3 with value 0x4140f73f805a37d2
sw x3, 0(x2) # store 0x4140f73f805a37d2 in memory
flw f27, 0(x2) # load 0x4140f73f805a37d2 from memory into f27
li x3, 0x765c3cb14874939b # load x3 with value 0x765c3cb14874939b
sw x3, 0(x2) # store 0x765c3cb14874939b in memory
flw f14, 0(x2) # load 0x765c3cb14874939b from memory into f14
fnmadd.s f8, f1, f27, f14 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x6b5251500a55475e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9feb98ee5f94d4a # load x3 with value 0xa9feb98ee5f94d4a
sw x3, 0(x2) # store 0xa9feb98ee5f94d4a in memory
flw f24, 0(x2) # load 0xa9feb98ee5f94d4a from memory into f24
li x3, 0xfdeac57cc8bcdbc8 # load x3 with value 0xfdeac57cc8bcdbc8
sw x3, 0(x2) # store 0xfdeac57cc8bcdbc8 in memory
flw f25, 0(x2) # load 0xfdeac57cc8bcdbc8 from memory into f25
li x3, 0x7d81b2b701a4314f # load x3 with value 0x7d81b2b701a4314f
sw x3, 0(x2) # store 0x7d81b2b701a4314f in memory
flw f16, 0(x2) # load 0x7d81b2b701a4314f from memory into f16
fnmadd.s f9, f24, f25, f16 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xf31b89f55840666f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc8763ebdf8a168f # load x3 with value 0xcc8763ebdf8a168f
sw x3, 0(x2) # store 0xcc8763ebdf8a168f in memory
flw f26, 0(x2) # load 0xcc8763ebdf8a168f from memory into f26
li x3, 0x516931b1d093a92e # load x3 with value 0x516931b1d093a92e
sw x3, 0(x2) # store 0x516931b1d093a92e in memory
flw f2, 0(x2) # load 0x516931b1d093a92e from memory into f2
li x3, 0xcc37d57727fdb183 # load x3 with value 0xcc37d57727fdb183
sw x3, 0(x2) # store 0xcc37d57727fdb183 in memory
flw f7, 0(x2) # load 0xcc37d57727fdb183 from memory into f7
fnmadd.s f10, f26, f2, f7 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xb6425b2d45d407ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc349282f8f804889 # load x3 with value 0xc349282f8f804889
sw x3, 0(x2) # store 0xc349282f8f804889 in memory
flw f3, 0(x2) # load 0xc349282f8f804889 from memory into f3
li x3, 0x51b353cb5844e4e1 # load x3 with value 0x51b353cb5844e4e1
sw x3, 0(x2) # store 0x51b353cb5844e4e1 in memory
flw f2, 0(x2) # load 0x51b353cb5844e4e1 from memory into f2
li x3, 0x1b331de708100350 # load x3 with value 0x1b331de708100350
sw x3, 0(x2) # store 0x1b331de708100350 in memory
flw f14, 0(x2) # load 0x1b331de708100350 from memory into f14
fnmadd.s f11, f3, f2, f14 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xa14cf9247e6eb944 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1121847b90af434e # load x3 with value 0x1121847b90af434e
sw x3, 0(x2) # store 0x1121847b90af434e in memory
flw f3, 0(x2) # load 0x1121847b90af434e from memory into f3
li x3, 0x49613de7f3d90995 # load x3 with value 0x49613de7f3d90995
sw x3, 0(x2) # store 0x49613de7f3d90995 in memory
flw f28, 0(x2) # load 0x49613de7f3d90995 from memory into f28
li x3, 0xbee4495077f757b1 # load x3 with value 0xbee4495077f757b1
sw x3, 0(x2) # store 0xbee4495077f757b1 in memory
flw f7, 0(x2) # load 0xbee4495077f757b1 from memory into f7
fnmadd.s f12, f3, f28, f7 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0xbe588fa6daa83f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5c6632b9d3d875 # load x3 with value 0xc5c6632b9d3d875
sw x3, 0(x2) # store 0xc5c6632b9d3d875 in memory
flw f11, 0(x2) # load 0xc5c6632b9d3d875 from memory into f11
li x3, 0x20fa63b73796015d # load x3 with value 0x20fa63b73796015d
sw x3, 0(x2) # store 0x20fa63b73796015d in memory
flw f18, 0(x2) # load 0x20fa63b73796015d from memory into f18
li x3, 0x62f840523aa3cf7 # load x3 with value 0x62f840523aa3cf7
sw x3, 0(x2) # store 0x62f840523aa3cf7 in memory
flw f28, 0(x2) # load 0x62f840523aa3cf7 from memory into f28
fnmadd.s f13, f11, f18, f28 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x1daec9b5964682e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3c2db2b47fb381c # load x3 with value 0xc3c2db2b47fb381c
sw x3, 0(x2) # store 0xc3c2db2b47fb381c in memory
flw f23, 0(x2) # load 0xc3c2db2b47fb381c from memory into f23
li x3, 0xe34393d035da1f7b # load x3 with value 0xe34393d035da1f7b
sw x3, 0(x2) # store 0xe34393d035da1f7b in memory
flw f7, 0(x2) # load 0xe34393d035da1f7b from memory into f7
li x3, 0x62cc0fbdbecf15c4 # load x3 with value 0x62cc0fbdbecf15c4
sw x3, 0(x2) # store 0x62cc0fbdbecf15c4 in memory
flw f5, 0(x2) # load 0x62cc0fbdbecf15c4 from memory into f5
fnmadd.s f14, f23, f7, f5 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x44f4f78ed3c2d51b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b79be4f9ae64795 # load x3 with value 0x2b79be4f9ae64795
sw x3, 0(x2) # store 0x2b79be4f9ae64795 in memory
flw f18, 0(x2) # load 0x2b79be4f9ae64795 from memory into f18
li x3, 0x3f9da3489309d8e # load x3 with value 0x3f9da3489309d8e
sw x3, 0(x2) # store 0x3f9da3489309d8e in memory
flw f31, 0(x2) # load 0x3f9da3489309d8e from memory into f31
li x3, 0x349689b9b8d2e5eb # load x3 with value 0x349689b9b8d2e5eb
sw x3, 0(x2) # store 0x349689b9b8d2e5eb in memory
flw f26, 0(x2) # load 0x349689b9b8d2e5eb from memory into f26
fnmadd.s f15, f18, f31, f26 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x3dab31aec7538572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa60d013841097797 # load x3 with value 0xa60d013841097797
sw x3, 0(x2) # store 0xa60d013841097797 in memory
flw f20, 0(x2) # load 0xa60d013841097797 from memory into f20
li x3, 0xe18b8767dc2acd6d # load x3 with value 0xe18b8767dc2acd6d
sw x3, 0(x2) # store 0xe18b8767dc2acd6d in memory
flw f13, 0(x2) # load 0xe18b8767dc2acd6d from memory into f13
li x3, 0xdc29c1df0935c154 # load x3 with value 0xdc29c1df0935c154
sw x3, 0(x2) # store 0xdc29c1df0935c154 in memory
flw f31, 0(x2) # load 0xdc29c1df0935c154 from memory into f31
fnmadd.s f16, f20, f13, f31 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x9a6ddefce2b06a9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2dffb25c01149f6 # load x3 with value 0xa2dffb25c01149f6
sw x3, 0(x2) # store 0xa2dffb25c01149f6 in memory
flw f23, 0(x2) # load 0xa2dffb25c01149f6 from memory into f23
li x3, 0x87340c64177a95a4 # load x3 with value 0x87340c64177a95a4
sw x3, 0(x2) # store 0x87340c64177a95a4 in memory
flw f11, 0(x2) # load 0x87340c64177a95a4 from memory into f11
li x3, 0xbc6936aa3e41a176 # load x3 with value 0xbc6936aa3e41a176
sw x3, 0(x2) # store 0xbc6936aa3e41a176 in memory
flw f27, 0(x2) # load 0xbc6936aa3e41a176 from memory into f27
fnmadd.s f17, f23, f11, f27 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x3ccebea685e43873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c2429ebd1f55661 # load x3 with value 0x2c2429ebd1f55661
sw x3, 0(x2) # store 0x2c2429ebd1f55661 in memory
flw f6, 0(x2) # load 0x2c2429ebd1f55661 from memory into f6
li x3, 0xd22ae9683ea3c9d5 # load x3 with value 0xd22ae9683ea3c9d5
sw x3, 0(x2) # store 0xd22ae9683ea3c9d5 in memory
flw f14, 0(x2) # load 0xd22ae9683ea3c9d5 from memory into f14
li x3, 0xa9aba5471302eab6 # load x3 with value 0xa9aba5471302eab6
sw x3, 0(x2) # store 0xa9aba5471302eab6 in memory
flw f22, 0(x2) # load 0xa9aba5471302eab6 from memory into f22
fnmadd.s f18, f6, f14, f22 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x12ea682bf9bc5d01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe158c3ed7f84841c # load x3 with value 0xe158c3ed7f84841c
sw x3, 0(x2) # store 0xe158c3ed7f84841c in memory
flw f17, 0(x2) # load 0xe158c3ed7f84841c from memory into f17
li x3, 0x246af65d8700f60c # load x3 with value 0x246af65d8700f60c
sw x3, 0(x2) # store 0x246af65d8700f60c in memory
flw f16, 0(x2) # load 0x246af65d8700f60c from memory into f16
li x3, 0x6cbaf9e0dfc24afb # load x3 with value 0x6cbaf9e0dfc24afb
sw x3, 0(x2) # store 0x6cbaf9e0dfc24afb in memory
flw f5, 0(x2) # load 0x6cbaf9e0dfc24afb from memory into f5
fnmadd.s f19, f17, f16, f5 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x5541d0f42c178ce5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f69ef1b6c0b5927 # load x3 with value 0x4f69ef1b6c0b5927
sw x3, 0(x2) # store 0x4f69ef1b6c0b5927 in memory
flw f10, 0(x2) # load 0x4f69ef1b6c0b5927 from memory into f10
li x3, 0x3167c22a8d0a7487 # load x3 with value 0x3167c22a8d0a7487
sw x3, 0(x2) # store 0x3167c22a8d0a7487 in memory
flw f7, 0(x2) # load 0x3167c22a8d0a7487 from memory into f7
li x3, 0x74868f7857f3b26b # load x3 with value 0x74868f7857f3b26b
sw x3, 0(x2) # store 0x74868f7857f3b26b in memory
flw f27, 0(x2) # load 0x74868f7857f3b26b from memory into f27
fnmadd.s f20, f10, f7, f27 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x86183c2444b48985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x34c6f377c4fc938a # load x3 with value 0x34c6f377c4fc938a
sw x3, 0(x2) # store 0x34c6f377c4fc938a in memory
flw f19, 0(x2) # load 0x34c6f377c4fc938a from memory into f19
li x3, 0x64eab59d98677be # load x3 with value 0x64eab59d98677be
sw x3, 0(x2) # store 0x64eab59d98677be in memory
flw f24, 0(x2) # load 0x64eab59d98677be from memory into f24
li x3, 0xa42dc9f5ed11709c # load x3 with value 0xa42dc9f5ed11709c
sw x3, 0(x2) # store 0xa42dc9f5ed11709c in memory
flw f3, 0(x2) # load 0xa42dc9f5ed11709c from memory into f3
fnmadd.s f21, f19, f24, f3 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x511f865b5685b761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa7ed93cbd976f68 # load x3 with value 0xfa7ed93cbd976f68
sw x3, 0(x2) # store 0xfa7ed93cbd976f68 in memory
flw f26, 0(x2) # load 0xfa7ed93cbd976f68 from memory into f26
li x3, 0x1e1e74cc283c471d # load x3 with value 0x1e1e74cc283c471d
sw x3, 0(x2) # store 0x1e1e74cc283c471d in memory
flw f5, 0(x2) # load 0x1e1e74cc283c471d from memory into f5
li x3, 0x2696b37ba5e9249e # load x3 with value 0x2696b37ba5e9249e
sw x3, 0(x2) # store 0x2696b37ba5e9249e in memory
flw f31, 0(x2) # load 0x2696b37ba5e9249e from memory into f31
fnmadd.s f22, f26, f5, f31 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xbd1e42fad805993a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda2ccf361136dfba # load x3 with value 0xda2ccf361136dfba
sw x3, 0(x2) # store 0xda2ccf361136dfba in memory
flw f2, 0(x2) # load 0xda2ccf361136dfba from memory into f2
li x3, 0x6d5eb11c7d4a1b52 # load x3 with value 0x6d5eb11c7d4a1b52
sw x3, 0(x2) # store 0x6d5eb11c7d4a1b52 in memory
flw f3, 0(x2) # load 0x6d5eb11c7d4a1b52 from memory into f3
li x3, 0x9db3001d714b9dcb # load x3 with value 0x9db3001d714b9dcb
sw x3, 0(x2) # store 0x9db3001d714b9dcb in memory
flw f29, 0(x2) # load 0x9db3001d714b9dcb from memory into f29
fnmadd.s f23, f2, f3, f29 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0xafcb6783281ca40d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd02db71822d072d # load x3 with value 0xbd02db71822d072d
sw x3, 0(x2) # store 0xbd02db71822d072d in memory
flw f23, 0(x2) # load 0xbd02db71822d072d from memory into f23
li x3, 0xe92258bef0d7badd # load x3 with value 0xe92258bef0d7badd
sw x3, 0(x2) # store 0xe92258bef0d7badd in memory
flw f14, 0(x2) # load 0xe92258bef0d7badd from memory into f14
li x3, 0xafa8b5f9b52d693 # load x3 with value 0xafa8b5f9b52d693
sw x3, 0(x2) # store 0xafa8b5f9b52d693 in memory
flw f24, 0(x2) # load 0xafa8b5f9b52d693 from memory into f24
fnmadd.s f24, f23, f14, f24 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xd8b9dff17ce97ef3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x513b63f054c777bf # load x3 with value 0x513b63f054c777bf
sw x3, 0(x2) # store 0x513b63f054c777bf in memory
flw f11, 0(x2) # load 0x513b63f054c777bf from memory into f11
li x3, 0xa944dfb32ca6465c # load x3 with value 0xa944dfb32ca6465c
sw x3, 0(x2) # store 0xa944dfb32ca6465c in memory
flw f17, 0(x2) # load 0xa944dfb32ca6465c from memory into f17
li x3, 0x51375df4ff692d6c # load x3 with value 0x51375df4ff692d6c
sw x3, 0(x2) # store 0x51375df4ff692d6c in memory
flw f19, 0(x2) # load 0x51375df4ff692d6c from memory into f19
fnmadd.s f25, f11, f17, f19 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x133db253408a0ae9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd5256510b1fb208 # load x3 with value 0xdd5256510b1fb208
sw x3, 0(x2) # store 0xdd5256510b1fb208 in memory
flw f29, 0(x2) # load 0xdd5256510b1fb208 from memory into f29
li x3, 0x8fc67ce3d1cdf92b # load x3 with value 0x8fc67ce3d1cdf92b
sw x3, 0(x2) # store 0x8fc67ce3d1cdf92b in memory
flw f11, 0(x2) # load 0x8fc67ce3d1cdf92b from memory into f11
li x3, 0x6619b28c65ba6743 # load x3 with value 0x6619b28c65ba6743
sw x3, 0(x2) # store 0x6619b28c65ba6743 in memory
flw f13, 0(x2) # load 0x6619b28c65ba6743 from memory into f13
fnmadd.s f26, f29, f11, f13 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x51675e7e1075e000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41ace739f4e8e5e2 # load x3 with value 0x41ace739f4e8e5e2
sw x3, 0(x2) # store 0x41ace739f4e8e5e2 in memory
flw f16, 0(x2) # load 0x41ace739f4e8e5e2 from memory into f16
li x3, 0x29cf10ba720b8622 # load x3 with value 0x29cf10ba720b8622
sw x3, 0(x2) # store 0x29cf10ba720b8622 in memory
flw f24, 0(x2) # load 0x29cf10ba720b8622 from memory into f24
li x3, 0x219ca8a07522966a # load x3 with value 0x219ca8a07522966a
sw x3, 0(x2) # store 0x219ca8a07522966a in memory
flw f31, 0(x2) # load 0x219ca8a07522966a from memory into f31
fnmadd.s f27, f16, f24, f31 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x7099b4d139d11589 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8537c3beb47e415d # load x3 with value 0x8537c3beb47e415d
sw x3, 0(x2) # store 0x8537c3beb47e415d in memory
flw f6, 0(x2) # load 0x8537c3beb47e415d from memory into f6
li x3, 0xf3c6d315f15d272f # load x3 with value 0xf3c6d315f15d272f
sw x3, 0(x2) # store 0xf3c6d315f15d272f in memory
flw f21, 0(x2) # load 0xf3c6d315f15d272f from memory into f21
li x3, 0x3c54049233722186 # load x3 with value 0x3c54049233722186
sw x3, 0(x2) # store 0x3c54049233722186 in memory
flw f20, 0(x2) # load 0x3c54049233722186 from memory into f20
fnmadd.s f28, f6, f21, f20 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xe18024a92a31dde8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7122a42b7c16b43b # load x3 with value 0x7122a42b7c16b43b
sw x3, 0(x2) # store 0x7122a42b7c16b43b in memory
flw f5, 0(x2) # load 0x7122a42b7c16b43b from memory into f5
li x3, 0x5673b8f35c37593f # load x3 with value 0x5673b8f35c37593f
sw x3, 0(x2) # store 0x5673b8f35c37593f in memory
flw f15, 0(x2) # load 0x5673b8f35c37593f from memory into f15
li x3, 0xacc0f73ae2a70573 # load x3 with value 0xacc0f73ae2a70573
sw x3, 0(x2) # store 0xacc0f73ae2a70573 in memory
flw f11, 0(x2) # load 0xacc0f73ae2a70573 from memory into f11
fnmadd.s f29, f5, f15, f11 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xce410f364323fb7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc13caf3f6619aed2 # load x3 with value 0xc13caf3f6619aed2
sw x3, 0(x2) # store 0xc13caf3f6619aed2 in memory
flw f10, 0(x2) # load 0xc13caf3f6619aed2 from memory into f10
li x3, 0xd5f2b6cc2d3a7df2 # load x3 with value 0xd5f2b6cc2d3a7df2
sw x3, 0(x2) # store 0xd5f2b6cc2d3a7df2 in memory
flw f21, 0(x2) # load 0xd5f2b6cc2d3a7df2 from memory into f21
li x3, 0xc16280b1c347a6fc # load x3 with value 0xc16280b1c347a6fc
sw x3, 0(x2) # store 0xc16280b1c347a6fc in memory
flw f19, 0(x2) # load 0xc16280b1c347a6fc from memory into f19
fnmadd.s f30, f10, f21, f19 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xe809575aed81a8ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2101b3bd3086823c # load x3 with value 0x2101b3bd3086823c
sw x3, 0(x2) # store 0x2101b3bd3086823c in memory
flw f30, 0(x2) # load 0x2101b3bd3086823c from memory into f30
li x3, 0x478ef0234d7c42f7 # load x3 with value 0x478ef0234d7c42f7
sw x3, 0(x2) # store 0x478ef0234d7c42f7 in memory
flw f8, 0(x2) # load 0x478ef0234d7c42f7 from memory into f8
li x3, 0xa19a1bc517472de7 # load x3 with value 0xa19a1bc517472de7
sw x3, 0(x2) # store 0xa19a1bc517472de7 in memory
flw f29, 0(x2) # load 0xa19a1bc517472de7 from memory into f29
fnmadd.s f31, f30, f8, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x28, 0x140b2173de5f53d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6cb1dd9b09643972 # load x3 with value 0x6cb1dd9b09643972
sw x3, 0(x2) # store 0x6cb1dd9b09643972 in memory
flw f0, 0(x2) # load 0x6cb1dd9b09643972 from memory into f0
li x3, 0xd95010c2b12a7afd # load x3 with value 0xd95010c2b12a7afd
sw x3, 0(x2) # store 0xd95010c2b12a7afd in memory
flw f3, 0(x2) # load 0xd95010c2b12a7afd from memory into f3
li x3, 0x69758c42534dd3c6 # load x3 with value 0x69758c42534dd3c6
sw x3, 0(x2) # store 0x69758c42534dd3c6 in memory
flw f18, 0(x2) # load 0x69758c42534dd3c6 from memory into f18
fnmadd.s f28, f0, f3, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x28, 0x4867ca85036d79b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7bc4be4e02026a1d # load x3 with value 0x7bc4be4e02026a1d
sw x3, 0(x2) # store 0x7bc4be4e02026a1d in memory
flw f1, 0(x2) # load 0x7bc4be4e02026a1d from memory into f1
li x3, 0x856d7a4edc053b03 # load x3 with value 0x856d7a4edc053b03
sw x3, 0(x2) # store 0x856d7a4edc053b03 in memory
flw f13, 0(x2) # load 0x856d7a4edc053b03 from memory into f13
li x3, 0x9bcc1d45380d6a0 # load x3 with value 0x9bcc1d45380d6a0
sw x3, 0(x2) # store 0x9bcc1d45380d6a0 in memory
flw f4, 0(x2) # load 0x9bcc1d45380d6a0 from memory into f4
fnmadd.s f28, f1, f13, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x16, 0xc7f42602f0185c10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf063bc367544d70f # load x3 with value 0xf063bc367544d70f
sw x3, 0(x2) # store 0xf063bc367544d70f in memory
flw f2, 0(x2) # load 0xf063bc367544d70f from memory into f2
li x3, 0xb6271280d941c8d1 # load x3 with value 0xb6271280d941c8d1
sw x3, 0(x2) # store 0xb6271280d941c8d1 in memory
flw f27, 0(x2) # load 0xb6271280d941c8d1 from memory into f27
li x3, 0x4920c8065b16f4e8 # load x3 with value 0x4920c8065b16f4e8
sw x3, 0(x2) # store 0x4920c8065b16f4e8 in memory
flw f20, 0(x2) # load 0x4920c8065b16f4e8 from memory into f20
fnmadd.s f16, f2, f27, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x7, 0x5fbe58edcfb1a9aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32301442d83200e0 # load x3 with value 0x32301442d83200e0
sw x3, 0(x2) # store 0x32301442d83200e0 in memory
flw f3, 0(x2) # load 0x32301442d83200e0 from memory into f3
li x3, 0x6f29d9dae714822a # load x3 with value 0x6f29d9dae714822a
sw x3, 0(x2) # store 0x6f29d9dae714822a in memory
flw f4, 0(x2) # load 0x6f29d9dae714822a from memory into f4
li x3, 0x1c0b2f51c9261b97 # load x3 with value 0x1c0b2f51c9261b97
sw x3, 0(x2) # store 0x1c0b2f51c9261b97 in memory
flw f31, 0(x2) # load 0x1c0b2f51c9261b97 from memory into f31
fnmadd.s f7, f3, f4, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x10, 0x35b5fc7b0b6617e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xecccd30ae864cfbf # load x3 with value 0xecccd30ae864cfbf
sw x3, 0(x2) # store 0xecccd30ae864cfbf in memory
flw f4, 0(x2) # load 0xecccd30ae864cfbf from memory into f4
li x3, 0x322175e1d8b5ce66 # load x3 with value 0x322175e1d8b5ce66
sw x3, 0(x2) # store 0x322175e1d8b5ce66 in memory
flw f8, 0(x2) # load 0x322175e1d8b5ce66 from memory into f8
li x3, 0xda1462831c0829d0 # load x3 with value 0xda1462831c0829d0
sw x3, 0(x2) # store 0xda1462831c0829d0 in memory
flw f21, 0(x2) # load 0xda1462831c0829d0 from memory into f21
fnmadd.s f10, f4, f8, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x8, 0x5fa1545e2c3288b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe86cc0a51a67e34c # load x3 with value 0xe86cc0a51a67e34c
sw x3, 0(x2) # store 0xe86cc0a51a67e34c in memory
flw f5, 0(x2) # load 0xe86cc0a51a67e34c from memory into f5
li x3, 0xe1f4e406a1cbf2d3 # load x3 with value 0xe1f4e406a1cbf2d3
sw x3, 0(x2) # store 0xe1f4e406a1cbf2d3 in memory
flw f2, 0(x2) # load 0xe1f4e406a1cbf2d3 from memory into f2
li x3, 0xe9b74b0a88fe61b6 # load x3 with value 0xe9b74b0a88fe61b6
sw x3, 0(x2) # store 0xe9b74b0a88fe61b6 in memory
flw f31, 0(x2) # load 0xe9b74b0a88fe61b6 from memory into f31
fnmadd.s f8, f5, f2, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x6, 0x4c8b2d8815fc4e86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d14649de97cfa84 # load x3 with value 0x5d14649de97cfa84
sw x3, 0(x2) # store 0x5d14649de97cfa84 in memory
flw f6, 0(x2) # load 0x5d14649de97cfa84 from memory into f6
li x3, 0x5f8901de9d6ec37 # load x3 with value 0x5f8901de9d6ec37
sw x3, 0(x2) # store 0x5f8901de9d6ec37 in memory
flw f17, 0(x2) # load 0x5f8901de9d6ec37 from memory into f17
li x3, 0x4553f9b467778800 # load x3 with value 0x4553f9b467778800
sw x3, 0(x2) # store 0x4553f9b467778800 in memory
flw f26, 0(x2) # load 0x4553f9b467778800 from memory into f26
fnmadd.s f6, f6, f17, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x25, 0x91f77b5bb290731a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x26c0a974272ad7c5 # load x3 with value 0x26c0a974272ad7c5
sw x3, 0(x2) # store 0x26c0a974272ad7c5 in memory
flw f7, 0(x2) # load 0x26c0a974272ad7c5 from memory into f7
li x3, 0x7252a2220952bd7a # load x3 with value 0x7252a2220952bd7a
sw x3, 0(x2) # store 0x7252a2220952bd7a in memory
flw f8, 0(x2) # load 0x7252a2220952bd7a from memory into f8
li x3, 0xabd2af3411307f77 # load x3 with value 0xabd2af3411307f77
sw x3, 0(x2) # store 0xabd2af3411307f77 in memory
flw f3, 0(x2) # load 0xabd2af3411307f77 from memory into f3
fnmadd.s f25, f7, f8, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x6, 0x968cedb8f3cdb9d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6189d4ddeda5be2a # load x3 with value 0x6189d4ddeda5be2a
sw x3, 0(x2) # store 0x6189d4ddeda5be2a in memory
flw f8, 0(x2) # load 0x6189d4ddeda5be2a from memory into f8
li x3, 0x31b35962b027eda9 # load x3 with value 0x31b35962b027eda9
sw x3, 0(x2) # store 0x31b35962b027eda9 in memory
flw f16, 0(x2) # load 0x31b35962b027eda9 from memory into f16
li x3, 0xc6d39d0cc6baa42 # load x3 with value 0xc6d39d0cc6baa42
sw x3, 0(x2) # store 0xc6d39d0cc6baa42 in memory
flw f2, 0(x2) # load 0xc6d39d0cc6baa42 from memory into f2
fnmadd.s f6, f8, f16, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x31, 0x44e57d8357cab4a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37ad4e0ebcfbc6ee # load x3 with value 0x37ad4e0ebcfbc6ee
sw x3, 0(x2) # store 0x37ad4e0ebcfbc6ee in memory
flw f9, 0(x2) # load 0x37ad4e0ebcfbc6ee from memory into f9
li x3, 0xd9cef198ed7bb359 # load x3 with value 0xd9cef198ed7bb359
sw x3, 0(x2) # store 0xd9cef198ed7bb359 in memory
flw f13, 0(x2) # load 0xd9cef198ed7bb359 from memory into f13
li x3, 0xbdf08f0047d5cd1d # load x3 with value 0xbdf08f0047d5cd1d
sw x3, 0(x2) # store 0xbdf08f0047d5cd1d in memory
flw f7, 0(x2) # load 0xbdf08f0047d5cd1d from memory into f7
fnmadd.s f31, f9, f13, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x9, 0xa3c24d193058cda0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa49da1dc4cb50d69 # load x3 with value 0xa49da1dc4cb50d69
sw x3, 0(x2) # store 0xa49da1dc4cb50d69 in memory
flw f10, 0(x2) # load 0xa49da1dc4cb50d69 from memory into f10
li x3, 0x8b77fceb442d0e39 # load x3 with value 0x8b77fceb442d0e39
sw x3, 0(x2) # store 0x8b77fceb442d0e39 in memory
flw f26, 0(x2) # load 0x8b77fceb442d0e39 from memory into f26
li x3, 0x9b51fe82700eb965 # load x3 with value 0x9b51fe82700eb965
sw x3, 0(x2) # store 0x9b51fe82700eb965 in memory
flw f8, 0(x2) # load 0x9b51fe82700eb965 from memory into f8
fnmadd.s f9, f10, f26, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x3, 0x3648822c0d37d2c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13b01b656c05e611 # load x3 with value 0x13b01b656c05e611
sw x3, 0(x2) # store 0x13b01b656c05e611 in memory
flw f11, 0(x2) # load 0x13b01b656c05e611 from memory into f11
li x3, 0x7a77c107d92b5aee # load x3 with value 0x7a77c107d92b5aee
sw x3, 0(x2) # store 0x7a77c107d92b5aee in memory
flw f24, 0(x2) # load 0x7a77c107d92b5aee from memory into f24
li x3, 0xfde34501f1535190 # load x3 with value 0xfde34501f1535190
sw x3, 0(x2) # store 0xfde34501f1535190 in memory
flw f19, 0(x2) # load 0xfde34501f1535190 from memory into f19
fnmadd.s f3, f11, f24, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x24, 0x2dae28d7c29c9ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x477ed0f906f88ba7 # load x3 with value 0x477ed0f906f88ba7
sw x3, 0(x2) # store 0x477ed0f906f88ba7 in memory
flw f12, 0(x2) # load 0x477ed0f906f88ba7 from memory into f12
li x3, 0xe8dbf2dbf06d7fa1 # load x3 with value 0xe8dbf2dbf06d7fa1
sw x3, 0(x2) # store 0xe8dbf2dbf06d7fa1 in memory
flw f3, 0(x2) # load 0xe8dbf2dbf06d7fa1 from memory into f3
li x3, 0x42f1fd992bcd34be # load x3 with value 0x42f1fd992bcd34be
sw x3, 0(x2) # store 0x42f1fd992bcd34be in memory
flw f14, 0(x2) # load 0x42f1fd992bcd34be from memory into f14
fnmadd.s f24, f12, f3, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x15, 0x8c379391cc659de5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b958be02e9098cd # load x3 with value 0x8b958be02e9098cd
sw x3, 0(x2) # store 0x8b958be02e9098cd in memory
flw f13, 0(x2) # load 0x8b958be02e9098cd from memory into f13
li x3, 0x6b84466f47835647 # load x3 with value 0x6b84466f47835647
sw x3, 0(x2) # store 0x6b84466f47835647 in memory
flw f25, 0(x2) # load 0x6b84466f47835647 from memory into f25
li x3, 0x5036d35bf8667300 # load x3 with value 0x5036d35bf8667300
sw x3, 0(x2) # store 0x5036d35bf8667300 in memory
flw f19, 0(x2) # load 0x5036d35bf8667300 from memory into f19
fnmadd.s f15, f13, f25, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x6, 0x9ad070ed495565ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x206efdba7ebc1cd # load x3 with value 0x206efdba7ebc1cd
sw x3, 0(x2) # store 0x206efdba7ebc1cd in memory
flw f14, 0(x2) # load 0x206efdba7ebc1cd from memory into f14
li x3, 0x84c6875664c69d91 # load x3 with value 0x84c6875664c69d91
sw x3, 0(x2) # store 0x84c6875664c69d91 in memory
flw f7, 0(x2) # load 0x84c6875664c69d91 from memory into f7
li x3, 0x8f5a002a3f622af7 # load x3 with value 0x8f5a002a3f622af7
sw x3, 0(x2) # store 0x8f5a002a3f622af7 in memory
flw f16, 0(x2) # load 0x8f5a002a3f622af7 from memory into f16
fnmadd.s f6, f14, f7, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x12, 0xc2ef27ff864ebe7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89eb764883dd4a18 # load x3 with value 0x89eb764883dd4a18
sw x3, 0(x2) # store 0x89eb764883dd4a18 in memory
flw f15, 0(x2) # load 0x89eb764883dd4a18 from memory into f15
li x3, 0xd2347526a9211e1 # load x3 with value 0xd2347526a9211e1
sw x3, 0(x2) # store 0xd2347526a9211e1 in memory
flw f4, 0(x2) # load 0xd2347526a9211e1 from memory into f4
li x3, 0xb22452412314d3b0 # load x3 with value 0xb22452412314d3b0
sw x3, 0(x2) # store 0xb22452412314d3b0 in memory
flw f24, 0(x2) # load 0xb22452412314d3b0 from memory into f24
fnmadd.s f12, f15, f4, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x17, 0x6f5ec3d93e731478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcd73d923da2d1c4 # load x3 with value 0xfcd73d923da2d1c4
sw x3, 0(x2) # store 0xfcd73d923da2d1c4 in memory
flw f16, 0(x2) # load 0xfcd73d923da2d1c4 from memory into f16
li x3, 0x11bd701375ecdb6b # load x3 with value 0x11bd701375ecdb6b
sw x3, 0(x2) # store 0x11bd701375ecdb6b in memory
flw f4, 0(x2) # load 0x11bd701375ecdb6b from memory into f4
li x3, 0xf761c35c50d647c3 # load x3 with value 0xf761c35c50d647c3
sw x3, 0(x2) # store 0xf761c35c50d647c3 in memory
flw f7, 0(x2) # load 0xf761c35c50d647c3 from memory into f7
fnmadd.s f17, f16, f4, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x10, 0x0900942ee49d4277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e6165c295f19fff # load x3 with value 0x4e6165c295f19fff
sw x3, 0(x2) # store 0x4e6165c295f19fff in memory
flw f17, 0(x2) # load 0x4e6165c295f19fff from memory into f17
li x3, 0x200bc71186740de0 # load x3 with value 0x200bc71186740de0
sw x3, 0(x2) # store 0x200bc71186740de0 in memory
flw f15, 0(x2) # load 0x200bc71186740de0 from memory into f15
li x3, 0x157b322ad4c5b535 # load x3 with value 0x157b322ad4c5b535
sw x3, 0(x2) # store 0x157b322ad4c5b535 in memory
flw f14, 0(x2) # load 0x157b322ad4c5b535 from memory into f14
fnmadd.s f10, f17, f15, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x11, 0x59fa27784a1f4298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2220297891f61d53 # load x3 with value 0x2220297891f61d53
sw x3, 0(x2) # store 0x2220297891f61d53 in memory
flw f18, 0(x2) # load 0x2220297891f61d53 from memory into f18
li x3, 0x93af99ffa8cc5b51 # load x3 with value 0x93af99ffa8cc5b51
sw x3, 0(x2) # store 0x93af99ffa8cc5b51 in memory
flw f8, 0(x2) # load 0x93af99ffa8cc5b51 from memory into f8
li x3, 0xa47f5213877b88f9 # load x3 with value 0xa47f5213877b88f9
sw x3, 0(x2) # store 0xa47f5213877b88f9 in memory
flw f24, 0(x2) # load 0xa47f5213877b88f9 from memory into f24
fnmadd.s f11, f18, f8, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x16, 0x70001c8a475eee77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe41b0daf46ca8602 # load x3 with value 0xe41b0daf46ca8602
sw x3, 0(x2) # store 0xe41b0daf46ca8602 in memory
flw f19, 0(x2) # load 0xe41b0daf46ca8602 from memory into f19
li x3, 0x9449cf8034f40e83 # load x3 with value 0x9449cf8034f40e83
sw x3, 0(x2) # store 0x9449cf8034f40e83 in memory
flw f25, 0(x2) # load 0x9449cf8034f40e83 from memory into f25
li x3, 0x8c86ddf952cf4f1e # load x3 with value 0x8c86ddf952cf4f1e
sw x3, 0(x2) # store 0x8c86ddf952cf4f1e in memory
flw f14, 0(x2) # load 0x8c86ddf952cf4f1e from memory into f14
fnmadd.s f16, f19, f25, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x6, 0x511db25cdc2189bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xabe50286405394fc # load x3 with value 0xabe50286405394fc
sw x3, 0(x2) # store 0xabe50286405394fc in memory
flw f20, 0(x2) # load 0xabe50286405394fc from memory into f20
li x3, 0xa5be6f08e8dcbc42 # load x3 with value 0xa5be6f08e8dcbc42
sw x3, 0(x2) # store 0xa5be6f08e8dcbc42 in memory
flw f9, 0(x2) # load 0xa5be6f08e8dcbc42 from memory into f9
li x3, 0x9dbbdf634caa1164 # load x3 with value 0x9dbbdf634caa1164
sw x3, 0(x2) # store 0x9dbbdf634caa1164 in memory
flw f30, 0(x2) # load 0x9dbbdf634caa1164 from memory into f30
fnmadd.s f6, f20, f9, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x14, 0x3b33d592aea1b2ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28d2c8d607cfdef2 # load x3 with value 0x28d2c8d607cfdef2
sw x3, 0(x2) # store 0x28d2c8d607cfdef2 in memory
flw f21, 0(x2) # load 0x28d2c8d607cfdef2 from memory into f21
li x3, 0xe4c336d7d8d3b2fd # load x3 with value 0xe4c336d7d8d3b2fd
sw x3, 0(x2) # store 0xe4c336d7d8d3b2fd in memory
flw f18, 0(x2) # load 0xe4c336d7d8d3b2fd from memory into f18
li x3, 0xa3af0282afbb1b7f # load x3 with value 0xa3af0282afbb1b7f
sw x3, 0(x2) # store 0xa3af0282afbb1b7f in memory
flw f11, 0(x2) # load 0xa3af0282afbb1b7f from memory into f11
fnmadd.s f14, f21, f18, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x11, 0x1120ac37c6cc8a8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb0e8c7ff174274e # load x3 with value 0xfb0e8c7ff174274e
sw x3, 0(x2) # store 0xfb0e8c7ff174274e in memory
flw f22, 0(x2) # load 0xfb0e8c7ff174274e from memory into f22
li x3, 0x9af379c08c3a7c54 # load x3 with value 0x9af379c08c3a7c54
sw x3, 0(x2) # store 0x9af379c08c3a7c54 in memory
flw f27, 0(x2) # load 0x9af379c08c3a7c54 from memory into f27
li x3, 0x8d4e97912ad29af5 # load x3 with value 0x8d4e97912ad29af5
sw x3, 0(x2) # store 0x8d4e97912ad29af5 in memory
flw f12, 0(x2) # load 0x8d4e97912ad29af5 from memory into f12
fnmadd.s f11, f22, f27, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x27, 0xaca8f347b0943c47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd4c3c78625e86 # load x3 with value 0xbd4c3c78625e86
sw x3, 0(x2) # store 0xbd4c3c78625e86 in memory
flw f23, 0(x2) # load 0xbd4c3c78625e86 from memory into f23
li x3, 0x949d89e17ed3dd27 # load x3 with value 0x949d89e17ed3dd27
sw x3, 0(x2) # store 0x949d89e17ed3dd27 in memory
flw f22, 0(x2) # load 0x949d89e17ed3dd27 from memory into f22
li x3, 0x9b1066dc8e074b9f # load x3 with value 0x9b1066dc8e074b9f
sw x3, 0(x2) # store 0x9b1066dc8e074b9f in memory
flw f2, 0(x2) # load 0x9b1066dc8e074b9f from memory into f2
fnmadd.s f27, f23, f22, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x24, 0xf29d71ac147ebedd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd792b2677be738fa # load x3 with value 0xd792b2677be738fa
sw x3, 0(x2) # store 0xd792b2677be738fa in memory
flw f24, 0(x2) # load 0xd792b2677be738fa from memory into f24
li x3, 0x519c0a8c9981345b # load x3 with value 0x519c0a8c9981345b
sw x3, 0(x2) # store 0x519c0a8c9981345b in memory
flw f2, 0(x2) # load 0x519c0a8c9981345b from memory into f2
li x3, 0x144d9d9f9c23810e # load x3 with value 0x144d9d9f9c23810e
sw x3, 0(x2) # store 0x144d9d9f9c23810e in memory
flw f6, 0(x2) # load 0x144d9d9f9c23810e from memory into f6
fnmadd.s f24, f24, f2, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x13, 0x5f2dacc65316c620 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb23a0cd39bbfb1f8 # load x3 with value 0xb23a0cd39bbfb1f8
sw x3, 0(x2) # store 0xb23a0cd39bbfb1f8 in memory
flw f25, 0(x2) # load 0xb23a0cd39bbfb1f8 from memory into f25
li x3, 0xc6843d0595952a7 # load x3 with value 0xc6843d0595952a7
sw x3, 0(x2) # store 0xc6843d0595952a7 in memory
flw f18, 0(x2) # load 0xc6843d0595952a7 from memory into f18
li x3, 0xddf5a61476ee4077 # load x3 with value 0xddf5a61476ee4077
sw x3, 0(x2) # store 0xddf5a61476ee4077 in memory
flw f5, 0(x2) # load 0xddf5a61476ee4077 from memory into f5
fnmadd.s f13, f25, f18, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x29, 0xfa7e2c50c1154261 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd709db1d5143c2e5 # load x3 with value 0xd709db1d5143c2e5
sw x3, 0(x2) # store 0xd709db1d5143c2e5 in memory
flw f26, 0(x2) # load 0xd709db1d5143c2e5 from memory into f26
li x3, 0x3cb4d4ac85bc5214 # load x3 with value 0x3cb4d4ac85bc5214
sw x3, 0(x2) # store 0x3cb4d4ac85bc5214 in memory
flw f25, 0(x2) # load 0x3cb4d4ac85bc5214 from memory into f25
li x3, 0xad3a5770d1d926eb # load x3 with value 0xad3a5770d1d926eb
sw x3, 0(x2) # store 0xad3a5770d1d926eb in memory
flw f26, 0(x2) # load 0xad3a5770d1d926eb from memory into f26
fnmadd.s f29, f26, f25, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x20, 0xc27c3bb09aa31d92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa070a768eaf6eb0a # load x3 with value 0xa070a768eaf6eb0a
sw x3, 0(x2) # store 0xa070a768eaf6eb0a in memory
flw f27, 0(x2) # load 0xa070a768eaf6eb0a from memory into f27
li x3, 0x35540001a3abd73a # load x3 with value 0x35540001a3abd73a
sw x3, 0(x2) # store 0x35540001a3abd73a in memory
flw f12, 0(x2) # load 0x35540001a3abd73a from memory into f12
li x3, 0x8014629b4c33cc59 # load x3 with value 0x8014629b4c33cc59
sw x3, 0(x2) # store 0x8014629b4c33cc59 in memory
flw f25, 0(x2) # load 0x8014629b4c33cc59 from memory into f25
fnmadd.s f20, f27, f12, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x5, 0x5433e07eab9889b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf2b4eb513104454d # load x3 with value 0xf2b4eb513104454d
sw x3, 0(x2) # store 0xf2b4eb513104454d in memory
flw f28, 0(x2) # load 0xf2b4eb513104454d from memory into f28
li x3, 0xfb74f86a39b90f8f # load x3 with value 0xfb74f86a39b90f8f
sw x3, 0(x2) # store 0xfb74f86a39b90f8f in memory
flw f29, 0(x2) # load 0xfb74f86a39b90f8f from memory into f29
li x3, 0x42331a24377e4392 # load x3 with value 0x42331a24377e4392
sw x3, 0(x2) # store 0x42331a24377e4392 in memory
flw f13, 0(x2) # load 0x42331a24377e4392 from memory into f13
fnmadd.s f5, f28, f29, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x24, 0xe80b76393dc80b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5fbdd3bc5a19413c # load x3 with value 0x5fbdd3bc5a19413c
sw x3, 0(x2) # store 0x5fbdd3bc5a19413c in memory
flw f29, 0(x2) # load 0x5fbdd3bc5a19413c from memory into f29
li x3, 0x3a55f67136278394 # load x3 with value 0x3a55f67136278394
sw x3, 0(x2) # store 0x3a55f67136278394 in memory
flw f18, 0(x2) # load 0x3a55f67136278394 from memory into f18
li x3, 0x2380be3f5f009bb6 # load x3 with value 0x2380be3f5f009bb6
sw x3, 0(x2) # store 0x2380be3f5f009bb6 in memory
flw f8, 0(x2) # load 0x2380be3f5f009bb6 from memory into f8
fnmadd.s f24, f29, f18, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x7, 0xf666b9e330ad085b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2972e87a51ee2f23 # load x3 with value 0x2972e87a51ee2f23
sw x3, 0(x2) # store 0x2972e87a51ee2f23 in memory
flw f30, 0(x2) # load 0x2972e87a51ee2f23 from memory into f30
li x3, 0xfa984e93e5a9e008 # load x3 with value 0xfa984e93e5a9e008
sw x3, 0(x2) # store 0xfa984e93e5a9e008 in memory
flw f9, 0(x2) # load 0xfa984e93e5a9e008 from memory into f9
li x3, 0xbf768d0a7be58834 # load x3 with value 0xbf768d0a7be58834
sw x3, 0(x2) # store 0xbf768d0a7be58834 in memory
flw f6, 0(x2) # load 0xbf768d0a7be58834 from memory into f6
fnmadd.s f7, f30, f9, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x6, 0xf96cd05843738c42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93f88d430de70cf0 # load x3 with value 0x93f88d430de70cf0
sw x3, 0(x2) # store 0x93f88d430de70cf0 in memory
flw f31, 0(x2) # load 0x93f88d430de70cf0 from memory into f31
li x3, 0x3642a6cdf07ff5f1 # load x3 with value 0x3642a6cdf07ff5f1
sw x3, 0(x2) # store 0x3642a6cdf07ff5f1 in memory
flw f11, 0(x2) # load 0x3642a6cdf07ff5f1 from memory into f11
li x3, 0x3d67a6c90acae3c2 # load x3 with value 0x3d67a6c90acae3c2
sw x3, 0(x2) # store 0x3d67a6c90acae3c2 in memory
flw f30, 0(x2) # load 0x3d67a6c90acae3c2 from memory into f30
fnmadd.s f6, f31, f11, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x16, 0x9b4536c742574957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76c51a64789dff89 # load x3 with value 0x76c51a64789dff89
sw x3, 0(x2) # store 0x76c51a64789dff89 in memory
flw f9, 0(x2) # load 0x76c51a64789dff89 from memory into f9
li x3, 0x3abe44a69bd24629 # load x3 with value 0x3abe44a69bd24629
sw x3, 0(x2) # store 0x3abe44a69bd24629 in memory
flw f0, 0(x2) # load 0x3abe44a69bd24629 from memory into f0
li x3, 0xdd1bb969c551285c # load x3 with value 0xdd1bb969c551285c
sw x3, 0(x2) # store 0xdd1bb969c551285c in memory
flw f21, 0(x2) # load 0xdd1bb969c551285c from memory into f21
fnmadd.s f16, f9, f0, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x21, 0x25a0e4b6dd65e2bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x48f468bc22bac138 # load x3 with value 0x48f468bc22bac138
sw x3, 0(x2) # store 0x48f468bc22bac138 in memory
flw f17, 0(x2) # load 0x48f468bc22bac138 from memory into f17
li x3, 0xba99d8d4c5d89f1f # load x3 with value 0xba99d8d4c5d89f1f
sw x3, 0(x2) # store 0xba99d8d4c5d89f1f in memory
flw f1, 0(x2) # load 0xba99d8d4c5d89f1f from memory into f1
li x3, 0x95f68cfdfab328af # load x3 with value 0x95f68cfdfab328af
sw x3, 0(x2) # store 0x95f68cfdfab328af in memory
flw f1, 0(x2) # load 0x95f68cfdfab328af from memory into f1
fnmadd.s f21, f17, f1, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x8, 0xc467ac924e0d72b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x612f8b8bd2dda411 # load x3 with value 0x612f8b8bd2dda411
sw x3, 0(x2) # store 0x612f8b8bd2dda411 in memory
flw f31, 0(x2) # load 0x612f8b8bd2dda411 from memory into f31
li x3, 0xb2a4a3cddb04571 # load x3 with value 0xb2a4a3cddb04571
sw x3, 0(x2) # store 0xb2a4a3cddb04571 in memory
flw f2, 0(x2) # load 0xb2a4a3cddb04571 from memory into f2
li x3, 0x576280832d32860d # load x3 with value 0x576280832d32860d
sw x3, 0(x2) # store 0x576280832d32860d in memory
flw f17, 0(x2) # load 0x576280832d32860d from memory into f17
fnmadd.s f8, f31, f2, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x29, 0xc08a5d29c3984cb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8e8b51efb3e1aac # load x3 with value 0xb8e8b51efb3e1aac
sw x3, 0(x2) # store 0xb8e8b51efb3e1aac in memory
flw f25, 0(x2) # load 0xb8e8b51efb3e1aac from memory into f25
li x3, 0x6b732f7a1eebde1 # load x3 with value 0x6b732f7a1eebde1
sw x3, 0(x2) # store 0x6b732f7a1eebde1 in memory
flw f3, 0(x2) # load 0x6b732f7a1eebde1 from memory into f3
li x3, 0xe5f81d88a8bf8bbb # load x3 with value 0xe5f81d88a8bf8bbb
sw x3, 0(x2) # store 0xe5f81d88a8bf8bbb in memory
flw f3, 0(x2) # load 0xe5f81d88a8bf8bbb from memory into f3
fnmadd.s f29, f25, f3, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x19, 0xa4f02f129a2883e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b1bad5a83769f45 # load x3 with value 0x6b1bad5a83769f45
sw x3, 0(x2) # store 0x6b1bad5a83769f45 in memory
flw f10, 0(x2) # load 0x6b1bad5a83769f45 from memory into f10
li x3, 0x1f26129a55edc0b # load x3 with value 0x1f26129a55edc0b
sw x3, 0(x2) # store 0x1f26129a55edc0b in memory
flw f4, 0(x2) # load 0x1f26129a55edc0b from memory into f4
li x3, 0x6cc5512e03a707b0 # load x3 with value 0x6cc5512e03a707b0
sw x3, 0(x2) # store 0x6cc5512e03a707b0 in memory
flw f11, 0(x2) # load 0x6cc5512e03a707b0 from memory into f11
fnmadd.s f19, f10, f4, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x9, 0x28aefc46d6fc8b6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd510f85e2b2d2dcf # load x3 with value 0xd510f85e2b2d2dcf
sw x3, 0(x2) # store 0xd510f85e2b2d2dcf in memory
flw f20, 0(x2) # load 0xd510f85e2b2d2dcf from memory into f20
li x3, 0x2afcb47623c1c647 # load x3 with value 0x2afcb47623c1c647
sw x3, 0(x2) # store 0x2afcb47623c1c647 in memory
flw f5, 0(x2) # load 0x2afcb47623c1c647 from memory into f5
li x3, 0x8f1d3e7733a35239 # load x3 with value 0x8f1d3e7733a35239
sw x3, 0(x2) # store 0x8f1d3e7733a35239 in memory
flw f3, 0(x2) # load 0x8f1d3e7733a35239 from memory into f3
fnmadd.s f9, f20, f5, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x16, 0x1fc99d5ef331955f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x147c4347d62f888d # load x3 with value 0x147c4347d62f888d
sw x3, 0(x2) # store 0x147c4347d62f888d in memory
flw f5, 0(x2) # load 0x147c4347d62f888d from memory into f5
li x3, 0x9e19e770e90476c9 # load x3 with value 0x9e19e770e90476c9
sw x3, 0(x2) # store 0x9e19e770e90476c9 in memory
flw f6, 0(x2) # load 0x9e19e770e90476c9 from memory into f6
li x3, 0x802a4a1792c2c146 # load x3 with value 0x802a4a1792c2c146
sw x3, 0(x2) # store 0x802a4a1792c2c146 in memory
flw f17, 0(x2) # load 0x802a4a1792c2c146 from memory into f17
fnmadd.s f16, f5, f6, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x25, 0x08340a87a1953ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80490800e7c4bef3 # load x3 with value 0x80490800e7c4bef3
sw x3, 0(x2) # store 0x80490800e7c4bef3 in memory
flw f13, 0(x2) # load 0x80490800e7c4bef3 from memory into f13
li x3, 0x7c7361a3fa506340 # load x3 with value 0x7c7361a3fa506340
sw x3, 0(x2) # store 0x7c7361a3fa506340 in memory
flw f7, 0(x2) # load 0x7c7361a3fa506340 from memory into f7
li x3, 0x9a3555b5c2b5a383 # load x3 with value 0x9a3555b5c2b5a383
sw x3, 0(x2) # store 0x9a3555b5c2b5a383 in memory
flw f23, 0(x2) # load 0x9a3555b5c2b5a383 from memory into f23
fnmadd.s f25, f13, f7, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x20, 0xce409f8c1818e299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf2b3978836b5afa4 # load x3 with value 0xf2b3978836b5afa4
sw x3, 0(x2) # store 0xf2b3978836b5afa4 in memory
flw f21, 0(x2) # load 0xf2b3978836b5afa4 from memory into f21
li x3, 0x97787670856405b1 # load x3 with value 0x97787670856405b1
sw x3, 0(x2) # store 0x97787670856405b1 in memory
flw f8, 0(x2) # load 0x97787670856405b1 from memory into f8
li x3, 0x901aa263856140ca # load x3 with value 0x901aa263856140ca
sw x3, 0(x2) # store 0x901aa263856140ca in memory
flw f17, 0(x2) # load 0x901aa263856140ca from memory into f17
fnmadd.s f20, f21, f8, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x1, 0x561eccd91aa2526c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2594542ad4500430 # load x3 with value 0x2594542ad4500430
sw x3, 0(x2) # store 0x2594542ad4500430 in memory
flw f11, 0(x2) # load 0x2594542ad4500430 from memory into f11
li x3, 0x2ea8728ffe016ff5 # load x3 with value 0x2ea8728ffe016ff5
sw x3, 0(x2) # store 0x2ea8728ffe016ff5 in memory
flw f9, 0(x2) # load 0x2ea8728ffe016ff5 from memory into f9
li x3, 0x1dedeb6de10ca47b # load x3 with value 0x1dedeb6de10ca47b
sw x3, 0(x2) # store 0x1dedeb6de10ca47b in memory
flw f15, 0(x2) # load 0x1dedeb6de10ca47b from memory into f15
fnmadd.s f1, f11, f9, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x18, 0x8f9c240aab202e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x272427ffe8d25f9d # load x3 with value 0x272427ffe8d25f9d
sw x3, 0(x2) # store 0x272427ffe8d25f9d in memory
flw f22, 0(x2) # load 0x272427ffe8d25f9d from memory into f22
li x3, 0x81f755f5be016610 # load x3 with value 0x81f755f5be016610
sw x3, 0(x2) # store 0x81f755f5be016610 in memory
flw f10, 0(x2) # load 0x81f755f5be016610 from memory into f10
li x3, 0x5a6b82ee1ee0a315 # load x3 with value 0x5a6b82ee1ee0a315
sw x3, 0(x2) # store 0x5a6b82ee1ee0a315 in memory
flw f7, 0(x2) # load 0x5a6b82ee1ee0a315 from memory into f7
fnmadd.s f18, f22, f10, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x23, 0x14a99e3193c0bf58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd87e231ba0873ea1 # load x3 with value 0xd87e231ba0873ea1
sw x3, 0(x2) # store 0xd87e231ba0873ea1 in memory
flw f14, 0(x2) # load 0xd87e231ba0873ea1 from memory into f14
li x3, 0x714e6bc6418a995e # load x3 with value 0x714e6bc6418a995e
sw x3, 0(x2) # store 0x714e6bc6418a995e in memory
flw f11, 0(x2) # load 0x714e6bc6418a995e from memory into f11
li x3, 0xf260605d54cbe60d # load x3 with value 0xf260605d54cbe60d
sw x3, 0(x2) # store 0xf260605d54cbe60d in memory
flw f4, 0(x2) # load 0xf260605d54cbe60d from memory into f4
fnmadd.s f23, f14, f11, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x14, 0xeacd0a1b4f6bdd95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39e206504fb6346a # load x3 with value 0x39e206504fb6346a
sw x3, 0(x2) # store 0x39e206504fb6346a in memory
flw f30, 0(x2) # load 0x39e206504fb6346a from memory into f30
li x3, 0x6f333b1d34dd2064 # load x3 with value 0x6f333b1d34dd2064
sw x3, 0(x2) # store 0x6f333b1d34dd2064 in memory
flw f12, 0(x2) # load 0x6f333b1d34dd2064 from memory into f12
li x3, 0xf691d54a3beda47a # load x3 with value 0xf691d54a3beda47a
sw x3, 0(x2) # store 0xf691d54a3beda47a in memory
flw f3, 0(x2) # load 0xf691d54a3beda47a from memory into f3
fnmadd.s f14, f30, f12, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x29, 0x2837fb4d816535f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe88570cd570db81d # load x3 with value 0xe88570cd570db81d
sw x3, 0(x2) # store 0xe88570cd570db81d in memory
flw f24, 0(x2) # load 0xe88570cd570db81d from memory into f24
li x3, 0x82a0acfa7dab389b # load x3 with value 0x82a0acfa7dab389b
sw x3, 0(x2) # store 0x82a0acfa7dab389b in memory
flw f13, 0(x2) # load 0x82a0acfa7dab389b from memory into f13
li x3, 0xf2dc4e506b3039e4 # load x3 with value 0xf2dc4e506b3039e4
sw x3, 0(x2) # store 0xf2dc4e506b3039e4 in memory
flw f4, 0(x2) # load 0xf2dc4e506b3039e4 from memory into f4
fnmadd.s f29, f24, f13, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x8, 0x48b965c58f9babb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xefee5058bd302e43 # load x3 with value 0xefee5058bd302e43
sw x3, 0(x2) # store 0xefee5058bd302e43 in memory
flw f13, 0(x2) # load 0xefee5058bd302e43 from memory into f13
li x3, 0xc07de92f0326a95 # load x3 with value 0xc07de92f0326a95
sw x3, 0(x2) # store 0xc07de92f0326a95 in memory
flw f14, 0(x2) # load 0xc07de92f0326a95 from memory into f14
li x3, 0x634d8fd21c41152a # load x3 with value 0x634d8fd21c41152a
sw x3, 0(x2) # store 0x634d8fd21c41152a in memory
flw f24, 0(x2) # load 0x634d8fd21c41152a from memory into f24
fnmadd.s f8, f13, f14, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x18, 0x5c4e6b70c2d0f4c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1023cf3606fc3d7a # load x3 with value 0x1023cf3606fc3d7a
sw x3, 0(x2) # store 0x1023cf3606fc3d7a in memory
flw f21, 0(x2) # load 0x1023cf3606fc3d7a from memory into f21
li x3, 0xca80333eca115394 # load x3 with value 0xca80333eca115394
sw x3, 0(x2) # store 0xca80333eca115394 in memory
flw f15, 0(x2) # load 0xca80333eca115394 from memory into f15
li x3, 0x2b5154db0d0e61fd # load x3 with value 0x2b5154db0d0e61fd
sw x3, 0(x2) # store 0x2b5154db0d0e61fd in memory
flw f29, 0(x2) # load 0x2b5154db0d0e61fd from memory into f29
fnmadd.s f18, f21, f15, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x22, 0x81727e255ad375a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9848f2b578a958a # load x3 with value 0xb9848f2b578a958a
sw x3, 0(x2) # store 0xb9848f2b578a958a in memory
flw f24, 0(x2) # load 0xb9848f2b578a958a from memory into f24
li x3, 0x5e60e7f31ef8adc4 # load x3 with value 0x5e60e7f31ef8adc4
sw x3, 0(x2) # store 0x5e60e7f31ef8adc4 in memory
flw f16, 0(x2) # load 0x5e60e7f31ef8adc4 from memory into f16
li x3, 0x55675c6f830f96cf # load x3 with value 0x55675c6f830f96cf
sw x3, 0(x2) # store 0x55675c6f830f96cf in memory
flw f25, 0(x2) # load 0x55675c6f830f96cf from memory into f25
fnmadd.s f22, f24, f16, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x29, 0xecb8e672d1830112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f11da6a4082be49 # load x3 with value 0x8f11da6a4082be49
sw x3, 0(x2) # store 0x8f11da6a4082be49 in memory
flw f18, 0(x2) # load 0x8f11da6a4082be49 from memory into f18
li x3, 0x5d4d75a7958aa658 # load x3 with value 0x5d4d75a7958aa658
sw x3, 0(x2) # store 0x5d4d75a7958aa658 in memory
flw f17, 0(x2) # load 0x5d4d75a7958aa658 from memory into f17
li x3, 0x3f032ae21301710 # load x3 with value 0x3f032ae21301710
sw x3, 0(x2) # store 0x3f032ae21301710 in memory
flw f24, 0(x2) # load 0x3f032ae21301710 from memory into f24
fnmadd.s f29, f18, f17, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x18, 0xfa2a3cdbb32fc921 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a9beeff4a03022f # load x3 with value 0x1a9beeff4a03022f
sw x3, 0(x2) # store 0x1a9beeff4a03022f in memory
flw f16, 0(x2) # load 0x1a9beeff4a03022f from memory into f16
li x3, 0xc18a7fe5bc989ec4 # load x3 with value 0xc18a7fe5bc989ec4
sw x3, 0(x2) # store 0xc18a7fe5bc989ec4 in memory
flw f18, 0(x2) # load 0xc18a7fe5bc989ec4 from memory into f18
li x3, 0xa186469522edc7fc # load x3 with value 0xa186469522edc7fc
sw x3, 0(x2) # store 0xa186469522edc7fc in memory
flw f25, 0(x2) # load 0xa186469522edc7fc from memory into f25
fnmadd.s f18, f16, f18, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x20, 0x3ffa3f2771a312a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58d28dc6ce156a0e # load x3 with value 0x58d28dc6ce156a0e
sw x3, 0(x2) # store 0x58d28dc6ce156a0e in memory
flw f31, 0(x2) # load 0x58d28dc6ce156a0e from memory into f31
li x3, 0x82ada41186b239b2 # load x3 with value 0x82ada41186b239b2
sw x3, 0(x2) # store 0x82ada41186b239b2 in memory
flw f19, 0(x2) # load 0x82ada41186b239b2 from memory into f19
li x3, 0xd17a7cfe30e58e4a # load x3 with value 0xd17a7cfe30e58e4a
sw x3, 0(x2) # store 0xd17a7cfe30e58e4a in memory
flw f12, 0(x2) # load 0xd17a7cfe30e58e4a from memory into f12
fnmadd.s f20, f31, f19, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x6, 0x8604c3b470be6ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa17cf23a123d4dd # load x3 with value 0xaa17cf23a123d4dd
sw x3, 0(x2) # store 0xaa17cf23a123d4dd in memory
flw f24, 0(x2) # load 0xaa17cf23a123d4dd from memory into f24
li x3, 0xb9d9b7b83e5a4491 # load x3 with value 0xb9d9b7b83e5a4491
sw x3, 0(x2) # store 0xb9d9b7b83e5a4491 in memory
flw f20, 0(x2) # load 0xb9d9b7b83e5a4491 from memory into f20
li x3, 0xd02d2200923b2f4f # load x3 with value 0xd02d2200923b2f4f
sw x3, 0(x2) # store 0xd02d2200923b2f4f in memory
flw f23, 0(x2) # load 0xd02d2200923b2f4f from memory into f23
fnmadd.s f6, f24, f20, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x19, 0xe02faa94319e73e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x53da8cb8e5666df1 # load x3 with value 0x53da8cb8e5666df1
sw x3, 0(x2) # store 0x53da8cb8e5666df1 in memory
flw f2, 0(x2) # load 0x53da8cb8e5666df1 from memory into f2
li x3, 0x8e435dc349929f2a # load x3 with value 0x8e435dc349929f2a
sw x3, 0(x2) # store 0x8e435dc349929f2a in memory
flw f21, 0(x2) # load 0x8e435dc349929f2a from memory into f21
li x3, 0x9119bb9f2ffbb517 # load x3 with value 0x9119bb9f2ffbb517
sw x3, 0(x2) # store 0x9119bb9f2ffbb517 in memory
flw f5, 0(x2) # load 0x9119bb9f2ffbb517 from memory into f5
fnmadd.s f19, f2, f21, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x6, 0x80dd8025d9a66c3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x38583c89fbeabccb # load x3 with value 0x38583c89fbeabccb
sw x3, 0(x2) # store 0x38583c89fbeabccb in memory
flw f21, 0(x2) # load 0x38583c89fbeabccb from memory into f21
li x3, 0x7133efd3ac04287d # load x3 with value 0x7133efd3ac04287d
sw x3, 0(x2) # store 0x7133efd3ac04287d in memory
flw f22, 0(x2) # load 0x7133efd3ac04287d from memory into f22
li x3, 0xcd99be4080ed9768 # load x3 with value 0xcd99be4080ed9768
sw x3, 0(x2) # store 0xcd99be4080ed9768 in memory
flw f15, 0(x2) # load 0xcd99be4080ed9768 from memory into f15
fnmadd.s f6, f21, f22, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x2, 0x6131c0f552eed06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x384bb4191209efc6 # load x3 with value 0x384bb4191209efc6
sw x3, 0(x2) # store 0x384bb4191209efc6 in memory
flw f7, 0(x2) # load 0x384bb4191209efc6 from memory into f7
li x3, 0x7b8985f3aa5b410a # load x3 with value 0x7b8985f3aa5b410a
sw x3, 0(x2) # store 0x7b8985f3aa5b410a in memory
flw f23, 0(x2) # load 0x7b8985f3aa5b410a from memory into f23
li x3, 0xecaa22244867d2dd # load x3 with value 0xecaa22244867d2dd
sw x3, 0(x2) # store 0xecaa22244867d2dd in memory
flw f13, 0(x2) # load 0xecaa22244867d2dd from memory into f13
fnmadd.s f2, f7, f23, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x14, 0xdd6c6f29e4c6642c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2c6bc5789b72370 # load x3 with value 0xd2c6bc5789b72370
sw x3, 0(x2) # store 0xd2c6bc5789b72370 in memory
flw f5, 0(x2) # load 0xd2c6bc5789b72370 from memory into f5
li x3, 0x80e95a02649909ea # load x3 with value 0x80e95a02649909ea
sw x3, 0(x2) # store 0x80e95a02649909ea in memory
flw f24, 0(x2) # load 0x80e95a02649909ea from memory into f24
li x3, 0xa9c2fe0f307f41ec # load x3 with value 0xa9c2fe0f307f41ec
sw x3, 0(x2) # store 0xa9c2fe0f307f41ec in memory
flw f9, 0(x2) # load 0xa9c2fe0f307f41ec from memory into f9
fnmadd.s f14, f5, f24, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x25, 0x588f8f9f5d3c1efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7273ff847ebaf8e5 # load x3 with value 0x7273ff847ebaf8e5
sw x3, 0(x2) # store 0x7273ff847ebaf8e5 in memory
flw f6, 0(x2) # load 0x7273ff847ebaf8e5 from memory into f6
li x3, 0x34ab46231fcce55f # load x3 with value 0x34ab46231fcce55f
sw x3, 0(x2) # store 0x34ab46231fcce55f in memory
flw f25, 0(x2) # load 0x34ab46231fcce55f from memory into f25
li x3, 0xec86fb99f34358d6 # load x3 with value 0xec86fb99f34358d6
sw x3, 0(x2) # store 0xec86fb99f34358d6 in memory
flw f11, 0(x2) # load 0xec86fb99f34358d6 from memory into f11
fnmadd.s f25, f6, f25, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x5, 0xa70621ff7bd20334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd51e88d487b20376 # load x3 with value 0xd51e88d487b20376
sw x3, 0(x2) # store 0xd51e88d487b20376 in memory
flw f7, 0(x2) # load 0xd51e88d487b20376 from memory into f7
li x3, 0x4f04e4fef6a59fb6 # load x3 with value 0x4f04e4fef6a59fb6
sw x3, 0(x2) # store 0x4f04e4fef6a59fb6 in memory
flw f26, 0(x2) # load 0x4f04e4fef6a59fb6 from memory into f26
li x3, 0xd93b94f3a380153c # load x3 with value 0xd93b94f3a380153c
sw x3, 0(x2) # store 0xd93b94f3a380153c in memory
flw f28, 0(x2) # load 0xd93b94f3a380153c from memory into f28
fnmadd.s f5, f7, f26, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x5, 0xa3ee3723a254e11a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9660e9b014ec495a # load x3 with value 0x9660e9b014ec495a
sw x3, 0(x2) # store 0x9660e9b014ec495a in memory
flw f8, 0(x2) # load 0x9660e9b014ec495a from memory into f8
li x3, 0xabc02d7c179febe1 # load x3 with value 0xabc02d7c179febe1
sw x3, 0(x2) # store 0xabc02d7c179febe1 in memory
flw f27, 0(x2) # load 0xabc02d7c179febe1 from memory into f27
li x3, 0x6140cb07c102100 # load x3 with value 0x6140cb07c102100
sw x3, 0(x2) # store 0x6140cb07c102100 in memory
flw f6, 0(x2) # load 0x6140cb07c102100 from memory into f6
fnmadd.s f5, f8, f27, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x14, 0x42d3330c859edd5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7296a5781ec40c59 # load x3 with value 0x7296a5781ec40c59
sw x3, 0(x2) # store 0x7296a5781ec40c59 in memory
flw f19, 0(x2) # load 0x7296a5781ec40c59 from memory into f19
li x3, 0xf0007021ac51015e # load x3 with value 0xf0007021ac51015e
sw x3, 0(x2) # store 0xf0007021ac51015e in memory
flw f28, 0(x2) # load 0xf0007021ac51015e from memory into f28
li x3, 0x41363e17c11a3de4 # load x3 with value 0x41363e17c11a3de4
sw x3, 0(x2) # store 0x41363e17c11a3de4 in memory
flw f2, 0(x2) # load 0x41363e17c11a3de4 from memory into f2
fnmadd.s f14, f19, f28, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x24, 0xb8962ac94766d850 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf896c85a7c09f35a # load x3 with value 0xf896c85a7c09f35a
sw x3, 0(x2) # store 0xf896c85a7c09f35a in memory
flw f3, 0(x2) # load 0xf896c85a7c09f35a from memory into f3
li x3, 0xc9cb1c0d3315c129 # load x3 with value 0xc9cb1c0d3315c129
sw x3, 0(x2) # store 0xc9cb1c0d3315c129 in memory
flw f29, 0(x2) # load 0xc9cb1c0d3315c129 from memory into f29
li x3, 0x164f24d39491b029 # load x3 with value 0x164f24d39491b029
sw x3, 0(x2) # store 0x164f24d39491b029 in memory
flw f9, 0(x2) # load 0x164f24d39491b029 from memory into f9
fnmadd.s f24, f3, f29, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x27, 0x6e686ee9ed156fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fcf54aede53c892 # load x3 with value 0x9fcf54aede53c892
sw x3, 0(x2) # store 0x9fcf54aede53c892 in memory
flw f3, 0(x2) # load 0x9fcf54aede53c892 from memory into f3
li x3, 0x274de109cb3ae868 # load x3 with value 0x274de109cb3ae868
sw x3, 0(x2) # store 0x274de109cb3ae868 in memory
flw f30, 0(x2) # load 0x274de109cb3ae868 from memory into f30
li x3, 0x12e2f448cea729c3 # load x3 with value 0x12e2f448cea729c3
sw x3, 0(x2) # store 0x12e2f448cea729c3 in memory
flw f11, 0(x2) # load 0x12e2f448cea729c3 from memory into f11
fnmadd.s f27, f3, f30, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x14, 0xf6df64b4edee3d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6a930de8b6a7a1a # load x3 with value 0xa6a930de8b6a7a1a
sw x3, 0(x2) # store 0xa6a930de8b6a7a1a in memory
flw f6, 0(x2) # load 0xa6a930de8b6a7a1a from memory into f6
li x3, 0xf8caec1428839501 # load x3 with value 0xf8caec1428839501
sw x3, 0(x2) # store 0xf8caec1428839501 in memory
flw f31, 0(x2) # load 0xf8caec1428839501 from memory into f31
li x3, 0xdace651fd90accc9 # load x3 with value 0xdace651fd90accc9
sw x3, 0(x2) # store 0xdace651fd90accc9 in memory
flw f1, 0(x2) # load 0xdace651fd90accc9 from memory into f1
fnmadd.s f14, f6, f31, f1 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
