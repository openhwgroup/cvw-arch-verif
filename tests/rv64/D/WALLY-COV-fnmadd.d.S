///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/D//WALLY-COV-fnmadd.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:23.699025
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmadd.d f25, f22, f30, f13 # perform first operation
fnmadd.d f29, f25, f28, f14 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmadd.d f2, f15, f30, f27 # perform first operation
fnmadd.d f19, f11, f2, f6 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.d f22, f29, f26, f10 # perform first operation
fnmadd.d f22, f27, f16, f3 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.d f19, f27, f1, f23 # perform first operation
fnmadd.d f19, f21, f9, f30 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.d f15, f23, f14, f24 # perform first operation
fnmadd.d f23, f7, f10, f20 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.d f10, f6, f17, f20 # perform first operation
fnmadd.d f17, f30, f1, f25 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xc97f8ae1adbe57c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42d19c813ba49886 # load x3 with value 0x42d19c813ba49886
sd x3, 0(x2) # store 0x42d19c813ba49886 in memory
fld f0, 0(x2) # load 0x42d19c813ba49886 from memory into f0
li x3, 0xe6a09226f3b87396 # load x3 with value 0xe6a09226f3b87396
sd x3, 0(x2) # store 0xe6a09226f3b87396 in memory
fld f28, 0(x2) # load 0xe6a09226f3b87396 from memory into f28
li x3, 0x65c3f1ebb2dae026 # load x3 with value 0x65c3f1ebb2dae026
sd x3, 0(x2) # store 0x65c3f1ebb2dae026 in memory
fld f20, 0(x2) # load 0x65c3f1ebb2dae026 from memory into f20
fnmadd.d f0, f0, f28, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x3c48647a75075903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x489555381883001b # load x3 with value 0x489555381883001b
sd x3, 0(x2) # store 0x489555381883001b in memory
fld f1, 0(x2) # load 0x489555381883001b from memory into f1
li x3, 0x23ea89c66c666543 # load x3 with value 0x23ea89c66c666543
sd x3, 0(x2) # store 0x23ea89c66c666543 in memory
fld f23, 0(x2) # load 0x23ea89c66c666543 from memory into f23
li x3, 0x82662c81e57e78b0 # load x3 with value 0x82662c81e57e78b0
sd x3, 0(x2) # store 0x82662c81e57e78b0 in memory
fld f11, 0(x2) # load 0x82662c81e57e78b0 from memory into f11
fnmadd.d f1, f1, f23, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x890062ee2a56fe45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd83d2fca16123e8b # load x3 with value 0xd83d2fca16123e8b
sd x3, 0(x2) # store 0xd83d2fca16123e8b in memory
fld f2, 0(x2) # load 0xd83d2fca16123e8b from memory into f2
li x3, 0x3465810dd07dc86d # load x3 with value 0x3465810dd07dc86d
sd x3, 0(x2) # store 0x3465810dd07dc86d in memory
fld f30, 0(x2) # load 0x3465810dd07dc86d from memory into f30
li x3, 0x027df54fdc90921d # load x3 with value 0x027df54fdc90921d
sd x3, 0(x2) # store 0x027df54fdc90921d in memory
fld f17, 0(x2) # load 0x027df54fdc90921d from memory into f17
fnmadd.d f2, f2, f30, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x7cec2169d962cae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x074c05b055a668df # load x3 with value 0x074c05b055a668df
sd x3, 0(x2) # store 0x074c05b055a668df in memory
fld f3, 0(x2) # load 0x074c05b055a668df from memory into f3
li x3, 0xc47dbcc4edaed375 # load x3 with value 0xc47dbcc4edaed375
sd x3, 0(x2) # store 0xc47dbcc4edaed375 in memory
fld f3, 0(x2) # load 0xc47dbcc4edaed375 from memory into f3
li x3, 0x9948e106fa9f01d8 # load x3 with value 0x9948e106fa9f01d8
sd x3, 0(x2) # store 0x9948e106fa9f01d8 in memory
fld f29, 0(x2) # load 0x9948e106fa9f01d8 from memory into f29
fnmadd.d f3, f3, f3, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xfb995f91fbe485b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6011e31963bb757a # load x3 with value 0x6011e31963bb757a
sd x3, 0(x2) # store 0x6011e31963bb757a in memory
fld f4, 0(x2) # load 0x6011e31963bb757a from memory into f4
li x3, 0xdaaf08cfc6c71728 # load x3 with value 0xdaaf08cfc6c71728
sd x3, 0(x2) # store 0xdaaf08cfc6c71728 in memory
fld f23, 0(x2) # load 0xdaaf08cfc6c71728 from memory into f23
li x3, 0x16e6e7afc13df9db # load x3 with value 0x16e6e7afc13df9db
sd x3, 0(x2) # store 0x16e6e7afc13df9db in memory
fld f1, 0(x2) # load 0x16e6e7afc13df9db from memory into f1
fnmadd.d f4, f4, f23, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x3eacd0b7cfda7005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98d1dff5943a7124 # load x3 with value 0x98d1dff5943a7124
sd x3, 0(x2) # store 0x98d1dff5943a7124 in memory
fld f5, 0(x2) # load 0x98d1dff5943a7124 from memory into f5
li x3, 0x638504567f6affdc # load x3 with value 0x638504567f6affdc
sd x3, 0(x2) # store 0x638504567f6affdc in memory
fld f2, 0(x2) # load 0x638504567f6affdc from memory into f2
li x3, 0x52a0134a9da45096 # load x3 with value 0x52a0134a9da45096
sd x3, 0(x2) # store 0x52a0134a9da45096 in memory
fld f6, 0(x2) # load 0x52a0134a9da45096 from memory into f6
fnmadd.d f5, f5, f2, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xf65c9f741ef20ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00598e2fa36bc3ca # load x3 with value 0x00598e2fa36bc3ca
sd x3, 0(x2) # store 0x00598e2fa36bc3ca in memory
fld f6, 0(x2) # load 0x00598e2fa36bc3ca from memory into f6
li x3, 0x1481c90777a28910 # load x3 with value 0x1481c90777a28910
sd x3, 0(x2) # store 0x1481c90777a28910 in memory
fld f27, 0(x2) # load 0x1481c90777a28910 from memory into f27
li x3, 0xdacfc61aeab9fa25 # load x3 with value 0xdacfc61aeab9fa25
sd x3, 0(x2) # store 0xdacfc61aeab9fa25 in memory
fld f30, 0(x2) # load 0xdacfc61aeab9fa25 from memory into f30
fnmadd.d f6, f6, f27, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x507ce9f859402228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x286e0b64003640ed # load x3 with value 0x286e0b64003640ed
sd x3, 0(x2) # store 0x286e0b64003640ed in memory
fld f7, 0(x2) # load 0x286e0b64003640ed from memory into f7
li x3, 0x7ea0337b49031170 # load x3 with value 0x7ea0337b49031170
sd x3, 0(x2) # store 0x7ea0337b49031170 in memory
fld f7, 0(x2) # load 0x7ea0337b49031170 from memory into f7
li x3, 0x20cb0482614dde9f # load x3 with value 0x20cb0482614dde9f
sd x3, 0(x2) # store 0x20cb0482614dde9f in memory
fld f3, 0(x2) # load 0x20cb0482614dde9f from memory into f3
fnmadd.d f7, f7, f7, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x7d93b764731ff6b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb64b884879ec45eb # load x3 with value 0xb64b884879ec45eb
sd x3, 0(x2) # store 0xb64b884879ec45eb in memory
fld f8, 0(x2) # load 0xb64b884879ec45eb from memory into f8
li x3, 0xe47d60c363525dbf # load x3 with value 0xe47d60c363525dbf
sd x3, 0(x2) # store 0xe47d60c363525dbf in memory
fld f1, 0(x2) # load 0xe47d60c363525dbf from memory into f1
li x3, 0x0aabed396adf5d2c # load x3 with value 0x0aabed396adf5d2c
sd x3, 0(x2) # store 0x0aabed396adf5d2c in memory
fld f12, 0(x2) # load 0x0aabed396adf5d2c from memory into f12
fnmadd.d f8, f8, f1, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x877d1e4da08d638d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce3b2f291fed4ef1 # load x3 with value 0xce3b2f291fed4ef1
sd x3, 0(x2) # store 0xce3b2f291fed4ef1 in memory
fld f9, 0(x2) # load 0xce3b2f291fed4ef1 from memory into f9
li x3, 0x338199a28cf9b4f3 # load x3 with value 0x338199a28cf9b4f3
sd x3, 0(x2) # store 0x338199a28cf9b4f3 in memory
fld f7, 0(x2) # load 0x338199a28cf9b4f3 from memory into f7
li x3, 0x140f4ccdd822f3bb # load x3 with value 0x140f4ccdd822f3bb
sd x3, 0(x2) # store 0x140f4ccdd822f3bb in memory
fld f30, 0(x2) # load 0x140f4ccdd822f3bb from memory into f30
fnmadd.d f9, f9, f7, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x3f512b53fe3579cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d0a2c6a192d35d9 # load x3 with value 0x3d0a2c6a192d35d9
sd x3, 0(x2) # store 0x3d0a2c6a192d35d9 in memory
fld f10, 0(x2) # load 0x3d0a2c6a192d35d9 from memory into f10
li x3, 0x737c934554b1d9fe # load x3 with value 0x737c934554b1d9fe
sd x3, 0(x2) # store 0x737c934554b1d9fe in memory
fld f31, 0(x2) # load 0x737c934554b1d9fe from memory into f31
li x3, 0x811776b8ccc8597d # load x3 with value 0x811776b8ccc8597d
sd x3, 0(x2) # store 0x811776b8ccc8597d in memory
fld f10, 0(x2) # load 0x811776b8ccc8597d from memory into f10
fnmadd.d f10, f10, f31, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x74ee8c46f28ad706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x962e86d653741be3 # load x3 with value 0x962e86d653741be3
sd x3, 0(x2) # store 0x962e86d653741be3 in memory
fld f11, 0(x2) # load 0x962e86d653741be3 from memory into f11
li x3, 0x6c822b976058561e # load x3 with value 0x6c822b976058561e
sd x3, 0(x2) # store 0x6c822b976058561e in memory
fld f9, 0(x2) # load 0x6c822b976058561e from memory into f9
li x3, 0x8b640110a842a617 # load x3 with value 0x8b640110a842a617
sd x3, 0(x2) # store 0x8b640110a842a617 in memory
fld f13, 0(x2) # load 0x8b640110a842a617 from memory into f13
fnmadd.d f11, f11, f9, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x5d6ecbac39629f05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x546f8a78ca9fcc1f # load x3 with value 0x546f8a78ca9fcc1f
sd x3, 0(x2) # store 0x546f8a78ca9fcc1f in memory
fld f12, 0(x2) # load 0x546f8a78ca9fcc1f from memory into f12
li x3, 0x02c94a5142637df5 # load x3 with value 0x02c94a5142637df5
sd x3, 0(x2) # store 0x02c94a5142637df5 in memory
fld f13, 0(x2) # load 0x02c94a5142637df5 from memory into f13
li x3, 0xc4803a5e282ac0cd # load x3 with value 0xc4803a5e282ac0cd
sd x3, 0(x2) # store 0xc4803a5e282ac0cd in memory
fld f25, 0(x2) # load 0xc4803a5e282ac0cd from memory into f25
fnmadd.d f12, f12, f13, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xc70c5a80ed197a93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8fa4266ae1d3a36 # load x3 with value 0xb8fa4266ae1d3a36
sd x3, 0(x2) # store 0xb8fa4266ae1d3a36 in memory
fld f13, 0(x2) # load 0xb8fa4266ae1d3a36 from memory into f13
li x3, 0x7ffb6990e2185c54 # load x3 with value 0x7ffb6990e2185c54
sd x3, 0(x2) # store 0x7ffb6990e2185c54 in memory
fld f27, 0(x2) # load 0x7ffb6990e2185c54 from memory into f27
li x3, 0xeed12cf43058ee2c # load x3 with value 0xeed12cf43058ee2c
sd x3, 0(x2) # store 0xeed12cf43058ee2c in memory
fld f21, 0(x2) # load 0xeed12cf43058ee2c from memory into f21
fnmadd.d f13, f13, f27, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x4beefb2edc47dbe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdcf3c6e334f03109 # load x3 with value 0xdcf3c6e334f03109
sd x3, 0(x2) # store 0xdcf3c6e334f03109 in memory
fld f14, 0(x2) # load 0xdcf3c6e334f03109 from memory into f14
li x3, 0x0c573fa51d76deb4 # load x3 with value 0x0c573fa51d76deb4
sd x3, 0(x2) # store 0x0c573fa51d76deb4 in memory
fld f20, 0(x2) # load 0x0c573fa51d76deb4 from memory into f20
li x3, 0xaf0bb12ce094ba68 # load x3 with value 0xaf0bb12ce094ba68
sd x3, 0(x2) # store 0xaf0bb12ce094ba68 in memory
fld f30, 0(x2) # load 0xaf0bb12ce094ba68 from memory into f30
fnmadd.d f14, f14, f20, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x5677de67db82351f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x809b1799b4cfabf7 # load x3 with value 0x809b1799b4cfabf7
sd x3, 0(x2) # store 0x809b1799b4cfabf7 in memory
fld f15, 0(x2) # load 0x809b1799b4cfabf7 from memory into f15
li x3, 0xc2e721f3c6ce4552 # load x3 with value 0xc2e721f3c6ce4552
sd x3, 0(x2) # store 0xc2e721f3c6ce4552 in memory
fld f4, 0(x2) # load 0xc2e721f3c6ce4552 from memory into f4
li x3, 0xe566da3032602030 # load x3 with value 0xe566da3032602030
sd x3, 0(x2) # store 0xe566da3032602030 in memory
fld f24, 0(x2) # load 0xe566da3032602030 from memory into f24
fnmadd.d f15, f15, f4, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xf6704add61880859 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x49e90f4d43a252ea # load x3 with value 0x49e90f4d43a252ea
sd x3, 0(x2) # store 0x49e90f4d43a252ea in memory
fld f16, 0(x2) # load 0x49e90f4d43a252ea from memory into f16
li x3, 0x39304195e1d728b3 # load x3 with value 0x39304195e1d728b3
sd x3, 0(x2) # store 0x39304195e1d728b3 in memory
fld f3, 0(x2) # load 0x39304195e1d728b3 from memory into f3
li x3, 0xf0be5bddc1ec922f # load x3 with value 0xf0be5bddc1ec922f
sd x3, 0(x2) # store 0xf0be5bddc1ec922f in memory
fld f26, 0(x2) # load 0xf0be5bddc1ec922f from memory into f26
fnmadd.d f16, f16, f3, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x6b894eb5881aa6fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60823709fffec2df # load x3 with value 0x60823709fffec2df
sd x3, 0(x2) # store 0x60823709fffec2df in memory
fld f17, 0(x2) # load 0x60823709fffec2df from memory into f17
li x3, 0x3c2ff8148a2c5b07 # load x3 with value 0x3c2ff8148a2c5b07
sd x3, 0(x2) # store 0x3c2ff8148a2c5b07 in memory
fld f5, 0(x2) # load 0x3c2ff8148a2c5b07 from memory into f5
li x3, 0x41a9eafae9daed4c # load x3 with value 0x41a9eafae9daed4c
sd x3, 0(x2) # store 0x41a9eafae9daed4c in memory
fld f23, 0(x2) # load 0x41a9eafae9daed4c from memory into f23
fnmadd.d f17, f17, f5, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0xef99fe1c734ab698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10194c660ac544fe # load x3 with value 0x10194c660ac544fe
sd x3, 0(x2) # store 0x10194c660ac544fe in memory
fld f18, 0(x2) # load 0x10194c660ac544fe from memory into f18
li x3, 0x070971fceb4945f1 # load x3 with value 0x070971fceb4945f1
sd x3, 0(x2) # store 0x070971fceb4945f1 in memory
fld f13, 0(x2) # load 0x070971fceb4945f1 from memory into f13
li x3, 0xe137a21b6009a51e # load x3 with value 0xe137a21b6009a51e
sd x3, 0(x2) # store 0xe137a21b6009a51e in memory
fld f7, 0(x2) # load 0xe137a21b6009a51e from memory into f7
fnmadd.d f18, f18, f13, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x0f599e9e47e2a638 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e9cdde5535515a9 # load x3 with value 0x3e9cdde5535515a9
sd x3, 0(x2) # store 0x3e9cdde5535515a9 in memory
fld f19, 0(x2) # load 0x3e9cdde5535515a9 from memory into f19
li x3, 0xea1163e0b5613aa1 # load x3 with value 0xea1163e0b5613aa1
sd x3, 0(x2) # store 0xea1163e0b5613aa1 in memory
fld f4, 0(x2) # load 0xea1163e0b5613aa1 from memory into f4
li x3, 0x5eecdec55d073981 # load x3 with value 0x5eecdec55d073981
sd x3, 0(x2) # store 0x5eecdec55d073981 in memory
fld f24, 0(x2) # load 0x5eecdec55d073981 from memory into f24
fnmadd.d f19, f19, f4, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x05f32357cf246fc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xddba8598e7061a39 # load x3 with value 0xddba8598e7061a39
sd x3, 0(x2) # store 0xddba8598e7061a39 in memory
fld f20, 0(x2) # load 0xddba8598e7061a39 from memory into f20
li x3, 0xeb8dc3836cbae705 # load x3 with value 0xeb8dc3836cbae705
sd x3, 0(x2) # store 0xeb8dc3836cbae705 in memory
fld f19, 0(x2) # load 0xeb8dc3836cbae705 from memory into f19
li x3, 0x9c2fb852e25c1c42 # load x3 with value 0x9c2fb852e25c1c42
sd x3, 0(x2) # store 0x9c2fb852e25c1c42 in memory
fld f1, 0(x2) # load 0x9c2fb852e25c1c42 from memory into f1
fnmadd.d f20, f20, f19, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xcc79972a252e7ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6eaa99d792e69cf # load x3 with value 0xd6eaa99d792e69cf
sd x3, 0(x2) # store 0xd6eaa99d792e69cf in memory
fld f21, 0(x2) # load 0xd6eaa99d792e69cf from memory into f21
li x3, 0xc9cea4d4e69bd571 # load x3 with value 0xc9cea4d4e69bd571
sd x3, 0(x2) # store 0xc9cea4d4e69bd571 in memory
fld f7, 0(x2) # load 0xc9cea4d4e69bd571 from memory into f7
li x3, 0x2f92b21e2b067354 # load x3 with value 0x2f92b21e2b067354
sd x3, 0(x2) # store 0x2f92b21e2b067354 in memory
fld f6, 0(x2) # load 0x2f92b21e2b067354 from memory into f6
fnmadd.d f21, f21, f7, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xec4519a2d3c9bb19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7153ba6c62111bbf # load x3 with value 0x7153ba6c62111bbf
sd x3, 0(x2) # store 0x7153ba6c62111bbf in memory
fld f22, 0(x2) # load 0x7153ba6c62111bbf from memory into f22
li x3, 0x51edc66fac99154f # load x3 with value 0x51edc66fac99154f
sd x3, 0(x2) # store 0x51edc66fac99154f in memory
fld f25, 0(x2) # load 0x51edc66fac99154f from memory into f25
li x3, 0xf051b936c0c8a9e1 # load x3 with value 0xf051b936c0c8a9e1
sd x3, 0(x2) # store 0xf051b936c0c8a9e1 in memory
fld f13, 0(x2) # load 0xf051b936c0c8a9e1 from memory into f13
fnmadd.d f22, f22, f25, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xbd39b2f214d00d29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6579af442860a875 # load x3 with value 0x6579af442860a875
sd x3, 0(x2) # store 0x6579af442860a875 in memory
fld f23, 0(x2) # load 0x6579af442860a875 from memory into f23
li x3, 0x8718a3a3bf65ee37 # load x3 with value 0x8718a3a3bf65ee37
sd x3, 0(x2) # store 0x8718a3a3bf65ee37 in memory
fld f28, 0(x2) # load 0x8718a3a3bf65ee37 from memory into f28
li x3, 0x382f8e03ddc92280 # load x3 with value 0x382f8e03ddc92280
sd x3, 0(x2) # store 0x382f8e03ddc92280 in memory
fld f1, 0(x2) # load 0x382f8e03ddc92280 from memory into f1
fnmadd.d f23, f23, f28, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x3da1ef92a52c775e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x613427a00d73ee9a # load x3 with value 0x613427a00d73ee9a
sd x3, 0(x2) # store 0x613427a00d73ee9a in memory
fld f24, 0(x2) # load 0x613427a00d73ee9a from memory into f24
li x3, 0xc06e6d7d7035d3f3 # load x3 with value 0xc06e6d7d7035d3f3
sd x3, 0(x2) # store 0xc06e6d7d7035d3f3 in memory
fld f4, 0(x2) # load 0xc06e6d7d7035d3f3 from memory into f4
li x3, 0xa71ea648ab21b20c # load x3 with value 0xa71ea648ab21b20c
sd x3, 0(x2) # store 0xa71ea648ab21b20c in memory
fld f1, 0(x2) # load 0xa71ea648ab21b20c from memory into f1
fnmadd.d f24, f24, f4, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x726781d655812f62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa44f7bb1a8182a14 # load x3 with value 0xa44f7bb1a8182a14
sd x3, 0(x2) # store 0xa44f7bb1a8182a14 in memory
fld f25, 0(x2) # load 0xa44f7bb1a8182a14 from memory into f25
li x3, 0xa7756b4a590a2a77 # load x3 with value 0xa7756b4a590a2a77
sd x3, 0(x2) # store 0xa7756b4a590a2a77 in memory
fld f1, 0(x2) # load 0xa7756b4a590a2a77 from memory into f1
li x3, 0x573817741919f0b5 # load x3 with value 0x573817741919f0b5
sd x3, 0(x2) # store 0x573817741919f0b5 in memory
fld f31, 0(x2) # load 0x573817741919f0b5 from memory into f31
fnmadd.d f25, f25, f1, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x7cd96b94913e7a96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c453d8fd90ad51a # load x3 with value 0x8c453d8fd90ad51a
sd x3, 0(x2) # store 0x8c453d8fd90ad51a in memory
fld f26, 0(x2) # load 0x8c453d8fd90ad51a from memory into f26
li x3, 0x4005562d38f42611 # load x3 with value 0x4005562d38f42611
sd x3, 0(x2) # store 0x4005562d38f42611 in memory
fld f29, 0(x2) # load 0x4005562d38f42611 from memory into f29
li x3, 0xaed08e84c8c76973 # load x3 with value 0xaed08e84c8c76973
sd x3, 0(x2) # store 0xaed08e84c8c76973 in memory
fld f30, 0(x2) # load 0xaed08e84c8c76973 from memory into f30
fnmadd.d f26, f26, f29, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xa9c7584ae72a1369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea9f45eb02300f9a # load x3 with value 0xea9f45eb02300f9a
sd x3, 0(x2) # store 0xea9f45eb02300f9a in memory
fld f27, 0(x2) # load 0xea9f45eb02300f9a from memory into f27
li x3, 0x10286d3874059809 # load x3 with value 0x10286d3874059809
sd x3, 0(x2) # store 0x10286d3874059809 in memory
fld f29, 0(x2) # load 0x10286d3874059809 from memory into f29
li x3, 0xf8e7372eed69a241 # load x3 with value 0xf8e7372eed69a241
sd x3, 0(x2) # store 0xf8e7372eed69a241 in memory
fld f14, 0(x2) # load 0xf8e7372eed69a241 from memory into f14
fnmadd.d f27, f27, f29, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x5e8093e4bdb97ca6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0d6ab770938c9cc # load x3 with value 0xc0d6ab770938c9cc
sd x3, 0(x2) # store 0xc0d6ab770938c9cc in memory
fld f28, 0(x2) # load 0xc0d6ab770938c9cc from memory into f28
li x3, 0x049b4d4f0f723ab4 # load x3 with value 0x049b4d4f0f723ab4
sd x3, 0(x2) # store 0x049b4d4f0f723ab4 in memory
fld f22, 0(x2) # load 0x049b4d4f0f723ab4 from memory into f22
li x3, 0x320ce23f1840ccee # load x3 with value 0x320ce23f1840ccee
sd x3, 0(x2) # store 0x320ce23f1840ccee in memory
fld f9, 0(x2) # load 0x320ce23f1840ccee from memory into f9
fnmadd.d f28, f28, f22, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xd0b0176a58e5234c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01ce7c9d20053ecb # load x3 with value 0x01ce7c9d20053ecb
sd x3, 0(x2) # store 0x01ce7c9d20053ecb in memory
fld f29, 0(x2) # load 0x01ce7c9d20053ecb from memory into f29
li x3, 0xe7bdaffe064baea2 # load x3 with value 0xe7bdaffe064baea2
sd x3, 0(x2) # store 0xe7bdaffe064baea2 in memory
fld f5, 0(x2) # load 0xe7bdaffe064baea2 from memory into f5
li x3, 0xd0a671d1f6a8e08b # load x3 with value 0xd0a671d1f6a8e08b
sd x3, 0(x2) # store 0xd0a671d1f6a8e08b in memory
fld f19, 0(x2) # load 0xd0a671d1f6a8e08b from memory into f19
fnmadd.d f29, f29, f5, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x9b2c663e5d625f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe4ab71d90493cd8c # load x3 with value 0xe4ab71d90493cd8c
sd x3, 0(x2) # store 0xe4ab71d90493cd8c in memory
fld f30, 0(x2) # load 0xe4ab71d90493cd8c from memory into f30
li x3, 0x87ebad425db3510a # load x3 with value 0x87ebad425db3510a
sd x3, 0(x2) # store 0x87ebad425db3510a in memory
fld f11, 0(x2) # load 0x87ebad425db3510a from memory into f11
li x3, 0xc67a529f3ae5c307 # load x3 with value 0xc67a529f3ae5c307
sd x3, 0(x2) # store 0xc67a529f3ae5c307 in memory
fld f5, 0(x2) # load 0xc67a529f3ae5c307 from memory into f5
fnmadd.d f30, f30, f11, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xa63d9084d9247883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceb1cf3170e7c803 # load x3 with value 0xceb1cf3170e7c803
sd x3, 0(x2) # store 0xceb1cf3170e7c803 in memory
fld f31, 0(x2) # load 0xceb1cf3170e7c803 from memory into f31
li x3, 0xb0a49c2580916185 # load x3 with value 0xb0a49c2580916185
sd x3, 0(x2) # store 0xb0a49c2580916185 in memory
fld f21, 0(x2) # load 0xb0a49c2580916185 from memory into f21
li x3, 0x31f94082bcd689e8 # load x3 with value 0x31f94082bcd689e8
sd x3, 0(x2) # store 0x31f94082bcd689e8 in memory
fld f28, 0(x2) # load 0x31f94082bcd689e8 from memory into f28
fnmadd.d f31, f31, f21, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x28622fded7786158 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde096f83f3123ffc # load x3 with value 0xde096f83f3123ffc
sd x3, 0(x2) # store 0xde096f83f3123ffc in memory
fld f11, 0(x2) # load 0xde096f83f3123ffc from memory into f11
li x3, 0x91af897a1cbd31dc # load x3 with value 0x91af897a1cbd31dc
sd x3, 0(x2) # store 0x91af897a1cbd31dc in memory
fld f0, 0(x2) # load 0x91af897a1cbd31dc from memory into f0
li x3, 0x758744992bbdfd87 # load x3 with value 0x758744992bbdfd87
sd x3, 0(x2) # store 0x758744992bbdfd87 in memory
fld f6, 0(x2) # load 0x758744992bbdfd87 from memory into f6
fnmadd.d f0, f11, f0, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xa5be0204c6df2863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x586a57768809cedb # load x3 with value 0x586a57768809cedb
sd x3, 0(x2) # store 0x586a57768809cedb in memory
fld f30, 0(x2) # load 0x586a57768809cedb from memory into f30
li x3, 0xf19642bfc9a5617e # load x3 with value 0xf19642bfc9a5617e
sd x3, 0(x2) # store 0xf19642bfc9a5617e in memory
fld f1, 0(x2) # load 0xf19642bfc9a5617e from memory into f1
li x3, 0x61384ebd20c7fcdc # load x3 with value 0x61384ebd20c7fcdc
sd x3, 0(x2) # store 0x61384ebd20c7fcdc in memory
fld f6, 0(x2) # load 0x61384ebd20c7fcdc from memory into f6
fnmadd.d f1, f30, f1, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x783238411dde1a20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0992c4ce85bed7f # load x3 with value 0xe0992c4ce85bed7f
sd x3, 0(x2) # store 0xe0992c4ce85bed7f in memory
fld f6, 0(x2) # load 0xe0992c4ce85bed7f from memory into f6
li x3, 0x5d31def6e91c3580 # load x3 with value 0x5d31def6e91c3580
sd x3, 0(x2) # store 0x5d31def6e91c3580 in memory
fld f2, 0(x2) # load 0x5d31def6e91c3580 from memory into f2
li x3, 0x9463d8ed8b612b0f # load x3 with value 0x9463d8ed8b612b0f
sd x3, 0(x2) # store 0x9463d8ed8b612b0f in memory
fld f20, 0(x2) # load 0x9463d8ed8b612b0f from memory into f20
fnmadd.d f2, f6, f2, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x060b3015123ca115 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7f7e4a36c6af3d8 # load x3 with value 0xf7f7e4a36c6af3d8
sd x3, 0(x2) # store 0xf7f7e4a36c6af3d8 in memory
fld f30, 0(x2) # load 0xf7f7e4a36c6af3d8 from memory into f30
li x3, 0xa92da3c45caa3296 # load x3 with value 0xa92da3c45caa3296
sd x3, 0(x2) # store 0xa92da3c45caa3296 in memory
fld f3, 0(x2) # load 0xa92da3c45caa3296 from memory into f3
li x3, 0x2495f8eaf4cd9c92 # load x3 with value 0x2495f8eaf4cd9c92
sd x3, 0(x2) # store 0x2495f8eaf4cd9c92 in memory
fld f11, 0(x2) # load 0x2495f8eaf4cd9c92 from memory into f11
fnmadd.d f3, f30, f3, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x60a27adcfc002d84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x822550e55cbd6ef1 # load x3 with value 0x822550e55cbd6ef1
sd x3, 0(x2) # store 0x822550e55cbd6ef1 in memory
fld f19, 0(x2) # load 0x822550e55cbd6ef1 from memory into f19
li x3, 0xbe2fe189adbcdec6 # load x3 with value 0xbe2fe189adbcdec6
sd x3, 0(x2) # store 0xbe2fe189adbcdec6 in memory
fld f4, 0(x2) # load 0xbe2fe189adbcdec6 from memory into f4
li x3, 0xbfd4fad3ff67f7c7 # load x3 with value 0xbfd4fad3ff67f7c7
sd x3, 0(x2) # store 0xbfd4fad3ff67f7c7 in memory
fld f27, 0(x2) # load 0xbfd4fad3ff67f7c7 from memory into f27
fnmadd.d f4, f19, f4, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xc13c087b6e3e17a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10e93d134e12a742 # load x3 with value 0x10e93d134e12a742
sd x3, 0(x2) # store 0x10e93d134e12a742 in memory
fld f5, 0(x2) # load 0x10e93d134e12a742 from memory into f5
li x3, 0xc47ce5771baa2776 # load x3 with value 0xc47ce5771baa2776
sd x3, 0(x2) # store 0xc47ce5771baa2776 in memory
fld f5, 0(x2) # load 0xc47ce5771baa2776 from memory into f5
li x3, 0x3642f26127d643e9 # load x3 with value 0x3642f26127d643e9
sd x3, 0(x2) # store 0x3642f26127d643e9 in memory
fld f14, 0(x2) # load 0x3642f26127d643e9 from memory into f14
fnmadd.d f5, f5, f5, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xea48d0632cce5b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41743e1361c027f6 # load x3 with value 0x41743e1361c027f6
sd x3, 0(x2) # store 0x41743e1361c027f6 in memory
fld f5, 0(x2) # load 0x41743e1361c027f6 from memory into f5
li x3, 0xd9db5f58dccc28a1 # load x3 with value 0xd9db5f58dccc28a1
sd x3, 0(x2) # store 0xd9db5f58dccc28a1 in memory
fld f6, 0(x2) # load 0xd9db5f58dccc28a1 from memory into f6
li x3, 0x1d2c14c5fcbb26c2 # load x3 with value 0x1d2c14c5fcbb26c2
sd x3, 0(x2) # store 0x1d2c14c5fcbb26c2 in memory
fld f4, 0(x2) # load 0x1d2c14c5fcbb26c2 from memory into f4
fnmadd.d f6, f5, f6, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xbe96368f7bb91f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9c63c91ac408ee5 # load x3 with value 0xa9c63c91ac408ee5
sd x3, 0(x2) # store 0xa9c63c91ac408ee5 in memory
fld f3, 0(x2) # load 0xa9c63c91ac408ee5 from memory into f3
li x3, 0xe685fff801bb93b1 # load x3 with value 0xe685fff801bb93b1
sd x3, 0(x2) # store 0xe685fff801bb93b1 in memory
fld f7, 0(x2) # load 0xe685fff801bb93b1 from memory into f7
li x3, 0x8548cfd77f71278e # load x3 with value 0x8548cfd77f71278e
sd x3, 0(x2) # store 0x8548cfd77f71278e in memory
fld f6, 0(x2) # load 0x8548cfd77f71278e from memory into f6
fnmadd.d f7, f3, f7, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x9cdca551c14c127b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed2f5a8d736ed025 # load x3 with value 0xed2f5a8d736ed025
sd x3, 0(x2) # store 0xed2f5a8d736ed025 in memory
fld f3, 0(x2) # load 0xed2f5a8d736ed025 from memory into f3
li x3, 0xc98edbf3749abbb6 # load x3 with value 0xc98edbf3749abbb6
sd x3, 0(x2) # store 0xc98edbf3749abbb6 in memory
fld f8, 0(x2) # load 0xc98edbf3749abbb6 from memory into f8
li x3, 0x6084bf4dcb3bbb68 # load x3 with value 0x6084bf4dcb3bbb68
sd x3, 0(x2) # store 0x6084bf4dcb3bbb68 in memory
fld f30, 0(x2) # load 0x6084bf4dcb3bbb68 from memory into f30
fnmadd.d f8, f3, f8, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x68d252388696016e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa299bfdb6c7c2b4e # load x3 with value 0xa299bfdb6c7c2b4e
sd x3, 0(x2) # store 0xa299bfdb6c7c2b4e in memory
fld f6, 0(x2) # load 0xa299bfdb6c7c2b4e from memory into f6
li x3, 0x7c931533fc4aadba # load x3 with value 0x7c931533fc4aadba
sd x3, 0(x2) # store 0x7c931533fc4aadba in memory
fld f9, 0(x2) # load 0x7c931533fc4aadba from memory into f9
li x3, 0x889983e0d79e4911 # load x3 with value 0x889983e0d79e4911
sd x3, 0(x2) # store 0x889983e0d79e4911 in memory
fld f15, 0(x2) # load 0x889983e0d79e4911 from memory into f15
fnmadd.d f9, f6, f9, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x3cb47f493faeb8fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f4993300e226b56 # load x3 with value 0x6f4993300e226b56
sd x3, 0(x2) # store 0x6f4993300e226b56 in memory
fld f16, 0(x2) # load 0x6f4993300e226b56 from memory into f16
li x3, 0xe7354f1654feaf09 # load x3 with value 0xe7354f1654feaf09
sd x3, 0(x2) # store 0xe7354f1654feaf09 in memory
fld f10, 0(x2) # load 0xe7354f1654feaf09 from memory into f10
li x3, 0xa35739374236f1c9 # load x3 with value 0xa35739374236f1c9
sd x3, 0(x2) # store 0xa35739374236f1c9 in memory
fld f26, 0(x2) # load 0xa35739374236f1c9 from memory into f26
fnmadd.d f10, f16, f10, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x949f4cef0e6e0677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d393831a03e4aff # load x3 with value 0x3d393831a03e4aff
sd x3, 0(x2) # store 0x3d393831a03e4aff in memory
fld f9, 0(x2) # load 0x3d393831a03e4aff from memory into f9
li x3, 0xee4604768050e02b # load x3 with value 0xee4604768050e02b
sd x3, 0(x2) # store 0xee4604768050e02b in memory
fld f11, 0(x2) # load 0xee4604768050e02b from memory into f11
li x3, 0x196286dcb2147f2f # load x3 with value 0x196286dcb2147f2f
sd x3, 0(x2) # store 0x196286dcb2147f2f in memory
fld f25, 0(x2) # load 0x196286dcb2147f2f from memory into f25
fnmadd.d f11, f9, f11, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xa9b54a18c17c8e9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50814b6462669d80 # load x3 with value 0x50814b6462669d80
sd x3, 0(x2) # store 0x50814b6462669d80 in memory
fld f15, 0(x2) # load 0x50814b6462669d80 from memory into f15
li x3, 0x1693762f965a9846 # load x3 with value 0x1693762f965a9846
sd x3, 0(x2) # store 0x1693762f965a9846 in memory
fld f12, 0(x2) # load 0x1693762f965a9846 from memory into f12
li x3, 0x2f51853eab018441 # load x3 with value 0x2f51853eab018441
sd x3, 0(x2) # store 0x2f51853eab018441 in memory
fld f23, 0(x2) # load 0x2f51853eab018441 from memory into f23
fnmadd.d f12, f15, f12, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x95fb141460c7b10e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa37faf91db605df2 # load x3 with value 0xa37faf91db605df2
sd x3, 0(x2) # store 0xa37faf91db605df2 in memory
fld f27, 0(x2) # load 0xa37faf91db605df2 from memory into f27
li x3, 0x5d0f7fabbd6d8746 # load x3 with value 0x5d0f7fabbd6d8746
sd x3, 0(x2) # store 0x5d0f7fabbd6d8746 in memory
fld f13, 0(x2) # load 0x5d0f7fabbd6d8746 from memory into f13
li x3, 0xf21fb9a663f161d8 # load x3 with value 0xf21fb9a663f161d8
sd x3, 0(x2) # store 0xf21fb9a663f161d8 in memory
fld f28, 0(x2) # load 0xf21fb9a663f161d8 from memory into f28
fnmadd.d f13, f27, f13, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xb97b65423c1c30d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdcaf100c40f096cf # load x3 with value 0xdcaf100c40f096cf
sd x3, 0(x2) # store 0xdcaf100c40f096cf in memory
fld f14, 0(x2) # load 0xdcaf100c40f096cf from memory into f14
li x3, 0xe19ac18015fe3060 # load x3 with value 0xe19ac18015fe3060
sd x3, 0(x2) # store 0xe19ac18015fe3060 in memory
fld f14, 0(x2) # load 0xe19ac18015fe3060 from memory into f14
li x3, 0x7b2764faf7289b7e # load x3 with value 0x7b2764faf7289b7e
sd x3, 0(x2) # store 0x7b2764faf7289b7e in memory
fld f21, 0(x2) # load 0x7b2764faf7289b7e from memory into f21
fnmadd.d f14, f14, f14, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x76a0e616f97fb486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd45fdd375cf38c2 # load x3 with value 0xcd45fdd375cf38c2
sd x3, 0(x2) # store 0xcd45fdd375cf38c2 in memory
fld f16, 0(x2) # load 0xcd45fdd375cf38c2 from memory into f16
li x3, 0xdbbc8981d8288dfd # load x3 with value 0xdbbc8981d8288dfd
sd x3, 0(x2) # store 0xdbbc8981d8288dfd in memory
fld f15, 0(x2) # load 0xdbbc8981d8288dfd from memory into f15
li x3, 0xdbff492461c4f752 # load x3 with value 0xdbff492461c4f752
sd x3, 0(x2) # store 0xdbff492461c4f752 in memory
fld f7, 0(x2) # load 0xdbff492461c4f752 from memory into f7
fnmadd.d f15, f16, f15, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x92a7b29826462677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09d2df69fed8f290 # load x3 with value 0x09d2df69fed8f290
sd x3, 0(x2) # store 0x09d2df69fed8f290 in memory
fld f11, 0(x2) # load 0x09d2df69fed8f290 from memory into f11
li x3, 0xd123cd0765bd9dea # load x3 with value 0xd123cd0765bd9dea
sd x3, 0(x2) # store 0xd123cd0765bd9dea in memory
fld f16, 0(x2) # load 0xd123cd0765bd9dea from memory into f16
li x3, 0xe00f559703702523 # load x3 with value 0xe00f559703702523
sd x3, 0(x2) # store 0xe00f559703702523 in memory
fld f24, 0(x2) # load 0xe00f559703702523 from memory into f24
fnmadd.d f16, f11, f16, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x224cfa9e5ec09642 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96f3ad9c8769d262 # load x3 with value 0x96f3ad9c8769d262
sd x3, 0(x2) # store 0x96f3ad9c8769d262 in memory
fld f15, 0(x2) # load 0x96f3ad9c8769d262 from memory into f15
li x3, 0xedc6e4d9286d91e1 # load x3 with value 0xedc6e4d9286d91e1
sd x3, 0(x2) # store 0xedc6e4d9286d91e1 in memory
fld f17, 0(x2) # load 0xedc6e4d9286d91e1 from memory into f17
li x3, 0xe34d5a53d2724335 # load x3 with value 0xe34d5a53d2724335
sd x3, 0(x2) # store 0xe34d5a53d2724335 in memory
fld f28, 0(x2) # load 0xe34d5a53d2724335 from memory into f28
fnmadd.d f17, f15, f17, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x76530dc03c08088d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74d26877e81bbb09 # load x3 with value 0x74d26877e81bbb09
sd x3, 0(x2) # store 0x74d26877e81bbb09 in memory
fld f1, 0(x2) # load 0x74d26877e81bbb09 from memory into f1
li x3, 0xb502164486727b26 # load x3 with value 0xb502164486727b26
sd x3, 0(x2) # store 0xb502164486727b26 in memory
fld f18, 0(x2) # load 0xb502164486727b26 from memory into f18
li x3, 0x805d42b8ebf0d4ca # load x3 with value 0x805d42b8ebf0d4ca
sd x3, 0(x2) # store 0x805d42b8ebf0d4ca in memory
fld f2, 0(x2) # load 0x805d42b8ebf0d4ca from memory into f2
fnmadd.d f18, f1, f18, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x56305b0256b9e76e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf38fcbbc66f7276b # load x3 with value 0xf38fcbbc66f7276b
sd x3, 0(x2) # store 0xf38fcbbc66f7276b in memory
fld f13, 0(x2) # load 0xf38fcbbc66f7276b from memory into f13
li x3, 0x20c28ca3d04fa500 # load x3 with value 0x20c28ca3d04fa500
sd x3, 0(x2) # store 0x20c28ca3d04fa500 in memory
fld f19, 0(x2) # load 0x20c28ca3d04fa500 from memory into f19
li x3, 0x1ee4026247d98181 # load x3 with value 0x1ee4026247d98181
sd x3, 0(x2) # store 0x1ee4026247d98181 in memory
fld f9, 0(x2) # load 0x1ee4026247d98181 from memory into f9
fnmadd.d f19, f13, f19, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x0d6d3313058e174f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x743f7c9f0cf5a9ff # load x3 with value 0x743f7c9f0cf5a9ff
sd x3, 0(x2) # store 0x743f7c9f0cf5a9ff in memory
fld f11, 0(x2) # load 0x743f7c9f0cf5a9ff from memory into f11
li x3, 0x66866b210bec020e # load x3 with value 0x66866b210bec020e
sd x3, 0(x2) # store 0x66866b210bec020e in memory
fld f20, 0(x2) # load 0x66866b210bec020e from memory into f20
li x3, 0xfb57c3d7515bebb6 # load x3 with value 0xfb57c3d7515bebb6
sd x3, 0(x2) # store 0xfb57c3d7515bebb6 in memory
fld f26, 0(x2) # load 0xfb57c3d7515bebb6 from memory into f26
fnmadd.d f20, f11, f20, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0xf952f5c7bf0fcdf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7113e5ef83b13ad1 # load x3 with value 0x7113e5ef83b13ad1
sd x3, 0(x2) # store 0x7113e5ef83b13ad1 in memory
fld f8, 0(x2) # load 0x7113e5ef83b13ad1 from memory into f8
li x3, 0xcc08728fb4e71360 # load x3 with value 0xcc08728fb4e71360
sd x3, 0(x2) # store 0xcc08728fb4e71360 in memory
fld f21, 0(x2) # load 0xcc08728fb4e71360 from memory into f21
li x3, 0x9af621c6a5a9d1bd # load x3 with value 0x9af621c6a5a9d1bd
sd x3, 0(x2) # store 0x9af621c6a5a9d1bd in memory
fld f21, 0(x2) # load 0x9af621c6a5a9d1bd from memory into f21
fnmadd.d f21, f8, f21, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x0953e777c11c1e09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37a3df2f48d07660 # load x3 with value 0x37a3df2f48d07660
sd x3, 0(x2) # store 0x37a3df2f48d07660 in memory
fld f2, 0(x2) # load 0x37a3df2f48d07660 from memory into f2
li x3, 0x8e34a3d42c326867 # load x3 with value 0x8e34a3d42c326867
sd x3, 0(x2) # store 0x8e34a3d42c326867 in memory
fld f22, 0(x2) # load 0x8e34a3d42c326867 from memory into f22
li x3, 0xfd64a26e08088880 # load x3 with value 0xfd64a26e08088880
sd x3, 0(x2) # store 0xfd64a26e08088880 in memory
fld f21, 0(x2) # load 0xfd64a26e08088880 from memory into f21
fnmadd.d f22, f2, f22, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x69e8e29c7380194e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb73e69cb25487c8d # load x3 with value 0xb73e69cb25487c8d
sd x3, 0(x2) # store 0xb73e69cb25487c8d in memory
fld f30, 0(x2) # load 0xb73e69cb25487c8d from memory into f30
li x3, 0xb07c20ed65c1b440 # load x3 with value 0xb07c20ed65c1b440
sd x3, 0(x2) # store 0xb07c20ed65c1b440 in memory
fld f23, 0(x2) # load 0xb07c20ed65c1b440 from memory into f23
li x3, 0xac603a0a3d61486a # load x3 with value 0xac603a0a3d61486a
sd x3, 0(x2) # store 0xac603a0a3d61486a in memory
fld f22, 0(x2) # load 0xac603a0a3d61486a from memory into f22
fnmadd.d f23, f30, f23, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x945d8e18d74ac055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68a922292c794f1f # load x3 with value 0x68a922292c794f1f
sd x3, 0(x2) # store 0x68a922292c794f1f in memory
fld f10, 0(x2) # load 0x68a922292c794f1f from memory into f10
li x3, 0x412a4e6c96b226d5 # load x3 with value 0x412a4e6c96b226d5
sd x3, 0(x2) # store 0x412a4e6c96b226d5 in memory
fld f24, 0(x2) # load 0x412a4e6c96b226d5 from memory into f24
li x3, 0xcc26516eebfbafd1 # load x3 with value 0xcc26516eebfbafd1
sd x3, 0(x2) # store 0xcc26516eebfbafd1 in memory
fld f3, 0(x2) # load 0xcc26516eebfbafd1 from memory into f3
fnmadd.d f24, f10, f24, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xe62e0e9b5c19ae3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c2d8247fb520c20 # load x3 with value 0x6c2d8247fb520c20
sd x3, 0(x2) # store 0x6c2d8247fb520c20 in memory
fld f14, 0(x2) # load 0x6c2d8247fb520c20 from memory into f14
li x3, 0xcf40f7bb443d5dac # load x3 with value 0xcf40f7bb443d5dac
sd x3, 0(x2) # store 0xcf40f7bb443d5dac in memory
fld f25, 0(x2) # load 0xcf40f7bb443d5dac from memory into f25
li x3, 0x20c3be7e866005f5 # load x3 with value 0x20c3be7e866005f5
sd x3, 0(x2) # store 0x20c3be7e866005f5 in memory
fld f9, 0(x2) # load 0x20c3be7e866005f5 from memory into f9
fnmadd.d f25, f14, f25, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x49a2fb7fd2d5a9db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffb52ddf1f63fb62 # load x3 with value 0xffb52ddf1f63fb62
sd x3, 0(x2) # store 0xffb52ddf1f63fb62 in memory
fld f2, 0(x2) # load 0xffb52ddf1f63fb62 from memory into f2
li x3, 0x52b43b0978a52163 # load x3 with value 0x52b43b0978a52163
sd x3, 0(x2) # store 0x52b43b0978a52163 in memory
fld f26, 0(x2) # load 0x52b43b0978a52163 from memory into f26
li x3, 0x76e87c97a376c3b4 # load x3 with value 0x76e87c97a376c3b4
sd x3, 0(x2) # store 0x76e87c97a376c3b4 in memory
fld f18, 0(x2) # load 0x76e87c97a376c3b4 from memory into f18
fnmadd.d f26, f2, f26, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xc0a80589b0084b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ad569de92290f4f # load x3 with value 0x2ad569de92290f4f
sd x3, 0(x2) # store 0x2ad569de92290f4f in memory
fld f27, 0(x2) # load 0x2ad569de92290f4f from memory into f27
li x3, 0xf3a5cf49d8416a3e # load x3 with value 0xf3a5cf49d8416a3e
sd x3, 0(x2) # store 0xf3a5cf49d8416a3e in memory
fld f27, 0(x2) # load 0xf3a5cf49d8416a3e from memory into f27
li x3, 0xbbcebb01ecb2d012 # load x3 with value 0xbbcebb01ecb2d012
sd x3, 0(x2) # store 0xbbcebb01ecb2d012 in memory
fld f29, 0(x2) # load 0xbbcebb01ecb2d012 from memory into f29
fnmadd.d f27, f27, f27, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xe419623af66e859c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5e1ada2dbe979ad # load x3 with value 0xe5e1ada2dbe979ad
sd x3, 0(x2) # store 0xe5e1ada2dbe979ad in memory
fld f17, 0(x2) # load 0xe5e1ada2dbe979ad from memory into f17
li x3, 0x69f0f04d01f2b11d # load x3 with value 0x69f0f04d01f2b11d
sd x3, 0(x2) # store 0x69f0f04d01f2b11d in memory
fld f28, 0(x2) # load 0x69f0f04d01f2b11d from memory into f28
li x3, 0x05c44d07fa33307d # load x3 with value 0x05c44d07fa33307d
sd x3, 0(x2) # store 0x05c44d07fa33307d in memory
fld f18, 0(x2) # load 0x05c44d07fa33307d from memory into f18
fnmadd.d f28, f17, f28, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xc2d4a23c876c3038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4db24aced0dcd610 # load x3 with value 0x4db24aced0dcd610
sd x3, 0(x2) # store 0x4db24aced0dcd610 in memory
fld f5, 0(x2) # load 0x4db24aced0dcd610 from memory into f5
li x3, 0xcb789d4ee6729394 # load x3 with value 0xcb789d4ee6729394
sd x3, 0(x2) # store 0xcb789d4ee6729394 in memory
fld f29, 0(x2) # load 0xcb789d4ee6729394 from memory into f29
li x3, 0x847278701027416b # load x3 with value 0x847278701027416b
sd x3, 0(x2) # store 0x847278701027416b in memory
fld f16, 0(x2) # load 0x847278701027416b from memory into f16
fnmadd.d f29, f5, f29, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x0db7c8b8c3915b04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe883d6fa53774a32 # load x3 with value 0xe883d6fa53774a32
sd x3, 0(x2) # store 0xe883d6fa53774a32 in memory
fld f8, 0(x2) # load 0xe883d6fa53774a32 from memory into f8
li x3, 0xee16183f8674081b # load x3 with value 0xee16183f8674081b
sd x3, 0(x2) # store 0xee16183f8674081b in memory
fld f30, 0(x2) # load 0xee16183f8674081b from memory into f30
li x3, 0x27b21fd5bd9ac9f8 # load x3 with value 0x27b21fd5bd9ac9f8
sd x3, 0(x2) # store 0x27b21fd5bd9ac9f8 in memory
fld f18, 0(x2) # load 0x27b21fd5bd9ac9f8 from memory into f18
fnmadd.d f30, f8, f30, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x8622be76150a589b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbbf1ebbbdada1701 # load x3 with value 0xbbf1ebbbdada1701
sd x3, 0(x2) # store 0xbbf1ebbbdada1701 in memory
fld f4, 0(x2) # load 0xbbf1ebbbdada1701 from memory into f4
li x3, 0x2f43e29b6360c780 # load x3 with value 0x2f43e29b6360c780
sd x3, 0(x2) # store 0x2f43e29b6360c780 in memory
fld f31, 0(x2) # load 0x2f43e29b6360c780 from memory into f31
li x3, 0xc6bf3fb2cbcc204c # load x3 with value 0xc6bf3fb2cbcc204c
sd x3, 0(x2) # store 0xc6bf3fb2cbcc204c in memory
fld f7, 0(x2) # load 0xc6bf3fb2cbcc204c from memory into f7
fnmadd.d f31, f4, f31, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x13, 0x64c399908b3171bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xec376cb9f5628442 # load x3 with value 0xec376cb9f5628442
sd x3, 0(x2) # store 0xec376cb9f5628442 in memory
fld f16, 0(x2) # load 0xec376cb9f5628442 from memory into f16
li x3, 0x674cf33e46fa1594 # load x3 with value 0x674cf33e46fa1594
sd x3, 0(x2) # store 0x674cf33e46fa1594 in memory
fld f9, 0(x2) # load 0x674cf33e46fa1594 from memory into f9
fnmadd.d f13, f30, f16, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x14, 0x364edd98a4ab900b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x982929ed3b9764c3 # load x3 with value 0x982929ed3b9764c3
sd x3, 0(x2) # store 0x982929ed3b9764c3 in memory
fld f25, 0(x2) # load 0x982929ed3b9764c3 from memory into f25
li x3, 0x0d1a447b84b11a57 # load x3 with value 0x0d1a447b84b11a57
sd x3, 0(x2) # store 0x0d1a447b84b11a57 in memory
fld f2, 0(x2) # load 0x0d1a447b84b11a57 from memory into f2
fnmadd.d f14, f24, f25, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x7, 0xa5bd3d08d5f0929f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x55f80b0d394bb110 # load x3 with value 0x55f80b0d394bb110
sd x3, 0(x2) # store 0x55f80b0d394bb110 in memory
fld f24, 0(x2) # load 0x55f80b0d394bb110 from memory into f24
li x3, 0xca146364718015f9 # load x3 with value 0xca146364718015f9
sd x3, 0(x2) # store 0xca146364718015f9 in memory
fld f26, 0(x2) # load 0xca146364718015f9 from memory into f26
fnmadd.d f7, f15, f24, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x19, 0x81bc59a16f97085b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0xa86f24b237ea0a72 # load x3 with value 0xa86f24b237ea0a72
sd x3, 0(x2) # store 0xa86f24b237ea0a72 in memory
fld f9, 0(x2) # load 0xa86f24b237ea0a72 from memory into f9
li x3, 0xbf86dc260e7401bb # load x3 with value 0xbf86dc260e7401bb
sd x3, 0(x2) # store 0xbf86dc260e7401bb in memory
fld f31, 0(x2) # load 0xbf86dc260e7401bb from memory into f31
fnmadd.d f19, f4, f9, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x29, 0xb171904677380144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0xc8dc85406b21d2e8 # load x3 with value 0xc8dc85406b21d2e8
sd x3, 0(x2) # store 0xc8dc85406b21d2e8 in memory
fld f21, 0(x2) # load 0xc8dc85406b21d2e8 from memory into f21
li x3, 0xa70a293cf3a78b88 # load x3 with value 0xa70a293cf3a78b88
sd x3, 0(x2) # store 0xa70a293cf3a78b88 in memory
fld f28, 0(x2) # load 0xa70a293cf3a78b88 from memory into f28
fnmadd.d f29, f11, f21, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x14, 0xc5b64ac66ba1f963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xf0e076dcae0cd712 # load x3 with value 0xf0e076dcae0cd712
sd x3, 0(x2) # store 0xf0e076dcae0cd712 in memory
fld f7, 0(x2) # load 0xf0e076dcae0cd712 from memory into f7
li x3, 0x2feb92409f354b6f # load x3 with value 0x2feb92409f354b6f
sd x3, 0(x2) # store 0x2feb92409f354b6f in memory
fld f22, 0(x2) # load 0x2feb92409f354b6f from memory into f22
fnmadd.d f14, f28, f7, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x9, 0x652d4e2b79cf7d18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x83715a57f8b34d3d # load x3 with value 0x83715a57f8b34d3d
sd x3, 0(x2) # store 0x83715a57f8b34d3d in memory
fld f31, 0(x2) # load 0x83715a57f8b34d3d from memory into f31
li x3, 0x6af9966ef2fc0f28 # load x3 with value 0x6af9966ef2fc0f28
sd x3, 0(x2) # store 0x6af9966ef2fc0f28 in memory
fld f30, 0(x2) # load 0x6af9966ef2fc0f28 from memory into f30
fnmadd.d f9, f10, f31, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x28, 0x4eddf4d40eecc607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0xeb613e6eb86ae0a9 # load x3 with value 0xeb613e6eb86ae0a9
sd x3, 0(x2) # store 0xeb613e6eb86ae0a9 in memory
fld f21, 0(x2) # load 0xeb613e6eb86ae0a9 from memory into f21
li x3, 0x73a01194b01d78eb # load x3 with value 0x73a01194b01d78eb
sd x3, 0(x2) # store 0x73a01194b01d78eb in memory
fld f25, 0(x2) # load 0x73a01194b01d78eb from memory into f25
fnmadd.d f28, f27, f21, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x18, 0x4010f60e1162e7c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x20ec49b4d778daae # load x3 with value 0x20ec49b4d778daae
sd x3, 0(x2) # store 0x20ec49b4d778daae in memory
fld f23, 0(x2) # load 0x20ec49b4d778daae from memory into f23
li x3, 0x3b381297e19b7278 # load x3 with value 0x3b381297e19b7278
sd x3, 0(x2) # store 0x3b381297e19b7278 in memory
fld f13, 0(x2) # load 0x3b381297e19b7278 from memory into f13
fnmadd.d f18, f29, f23, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x21, 0xb8d238850261002f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xe6ba02b6da4a6c6c # load x3 with value 0xe6ba02b6da4a6c6c
sd x3, 0(x2) # store 0xe6ba02b6da4a6c6c in memory
fld f25, 0(x2) # load 0xe6ba02b6da4a6c6c from memory into f25
li x3, 0x29033a65bcd41d27 # load x3 with value 0x29033a65bcd41d27
sd x3, 0(x2) # store 0x29033a65bcd41d27 in memory
fld f7, 0(x2) # load 0x29033a65bcd41d27 from memory into f7
fnmadd.d f21, f3, f25, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x11, 0x0906907b62cec95b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x60defeab72685e98 # load x3 with value 0x60defeab72685e98
sd x3, 0(x2) # store 0x60defeab72685e98 in memory
fld f1, 0(x2) # load 0x60defeab72685e98 from memory into f1
li x3, 0x9e6aec3a3f2215d8 # load x3 with value 0x9e6aec3a3f2215d8
sd x3, 0(x2) # store 0x9e6aec3a3f2215d8 in memory
fld f14, 0(x2) # load 0x9e6aec3a3f2215d8 from memory into f14
fnmadd.d f11, f17, f1, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x29, 0xdc8bbaac32d21a2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0xc6d5b49666f5edc9 # load x3 with value 0xc6d5b49666f5edc9
sd x3, 0(x2) # store 0xc6d5b49666f5edc9 in memory
fld f17, 0(x2) # load 0xc6d5b49666f5edc9 from memory into f17
li x3, 0x4cc59c121df7e335 # load x3 with value 0x4cc59c121df7e335
sd x3, 0(x2) # store 0x4cc59c121df7e335 in memory
fld f3, 0(x2) # load 0x4cc59c121df7e335 from memory into f3
fnmadd.d f29, f23, f17, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x24, 0xa3f740ac8abdc539 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0xb14d418b1b041353 # load x3 with value 0xb14d418b1b041353
sd x3, 0(x2) # store 0xb14d418b1b041353 in memory
fld f4, 0(x2) # load 0xb14d418b1b041353 from memory into f4
li x3, 0xd1ce48ce6a7ace56 # load x3 with value 0xd1ce48ce6a7ace56
sd x3, 0(x2) # store 0xd1ce48ce6a7ace56 in memory
fld f10, 0(x2) # load 0xd1ce48ce6a7ace56 from memory into f10
fnmadd.d f24, f7, f4, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x30, 0x5a33f53679740410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xf022ae93f600f6af # load x3 with value 0xf022ae93f600f6af
sd x3, 0(x2) # store 0xf022ae93f600f6af in memory
fld f27, 0(x2) # load 0xf022ae93f600f6af from memory into f27
li x3, 0x3f664484633dd729 # load x3 with value 0x3f664484633dd729
sd x3, 0(x2) # store 0x3f664484633dd729 in memory
fld f9, 0(x2) # load 0x3f664484633dd729 from memory into f9
fnmadd.d f30, f19, f27, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x15, 0x337c0b37d3ba37ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xa74023c7365b1d58 # load x3 with value 0xa74023c7365b1d58
sd x3, 0(x2) # store 0xa74023c7365b1d58 in memory
fld f21, 0(x2) # load 0xa74023c7365b1d58 from memory into f21
li x3, 0xa91dad45c5d13ff2 # load x3 with value 0xa91dad45c5d13ff2
sd x3, 0(x2) # store 0xa91dad45c5d13ff2 in memory
fld f26, 0(x2) # load 0xa91dad45c5d13ff2 from memory into f26
fnmadd.d f15, f31, f21, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x23, 0xa3454ba968099a3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0xd8c4b80c531e0113 # load x3 with value 0xd8c4b80c531e0113
sd x3, 0(x2) # store 0xd8c4b80c531e0113 in memory
fld f14, 0(x2) # load 0xd8c4b80c531e0113 from memory into f14
li x3, 0x0968b69235bac75a # load x3 with value 0x0968b69235bac75a
sd x3, 0(x2) # store 0x0968b69235bac75a in memory
fld f10, 0(x2) # load 0x0968b69235bac75a from memory into f10
fnmadd.d f23, f18, f14, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x14, 0xd1e8613386783dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x6037046acef84065 # load x3 with value 0x6037046acef84065
sd x3, 0(x2) # store 0x6037046acef84065 in memory
fld f20, 0(x2) # load 0x6037046acef84065 from memory into f20
li x3, 0x71dcd60b782ddf66 # load x3 with value 0x71dcd60b782ddf66
sd x3, 0(x2) # store 0x71dcd60b782ddf66 in memory
fld f27, 0(x2) # load 0x71dcd60b782ddf66 from memory into f27
fnmadd.d f14, f19, f20, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x15, 0x3eb8490ec990adde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x1157ed22c2d0642d # load x3 with value 0x1157ed22c2d0642d
sd x3, 0(x2) # store 0x1157ed22c2d0642d in memory
fld f19, 0(x2) # load 0x1157ed22c2d0642d from memory into f19
li x3, 0x0e192928059a78ef # load x3 with value 0x0e192928059a78ef
sd x3, 0(x2) # store 0x0e192928059a78ef in memory
fld f7, 0(x2) # load 0x0e192928059a78ef from memory into f7
fnmadd.d f15, f29, f19, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x11, 0x10107ea7222258ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x7225ce9eb5415bc4 # load x3 with value 0x7225ce9eb5415bc4
sd x3, 0(x2) # store 0x7225ce9eb5415bc4 in memory
fld f8, 0(x2) # load 0x7225ce9eb5415bc4 from memory into f8
li x3, 0xb6ee3916953a7209 # load x3 with value 0xb6ee3916953a7209
sd x3, 0(x2) # store 0xb6ee3916953a7209 in memory
fld f20, 0(x2) # load 0xb6ee3916953a7209 from memory into f20
fnmadd.d f11, f12, f8, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x30, 0x2b3dd993aeed0d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x3e3ab4117a116c63 # load x3 with value 0x3e3ab4117a116c63
sd x3, 0(x2) # store 0x3e3ab4117a116c63 in memory
fld f26, 0(x2) # load 0x3e3ab4117a116c63 from memory into f26
li x3, 0xb30f2c43d055a064 # load x3 with value 0xb30f2c43d055a064
sd x3, 0(x2) # store 0xb30f2c43d055a064 in memory
fld f11, 0(x2) # load 0xb30f2c43d055a064 from memory into f11
fnmadd.d f30, f13, f26, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x30, 0xdcb6b4fe6fb96e43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x8a9cd1d74d928312 # load x3 with value 0x8a9cd1d74d928312
sd x3, 0(x2) # store 0x8a9cd1d74d928312 in memory
fld f12, 0(x2) # load 0x8a9cd1d74d928312 from memory into f12
li x3, 0x88cc17905d22e0a2 # load x3 with value 0x88cc17905d22e0a2
sd x3, 0(x2) # store 0x88cc17905d22e0a2 in memory
fld f23, 0(x2) # load 0x88cc17905d22e0a2 from memory into f23
fnmadd.d f30, f22, f12, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x20, 0x28b4a8ef641bf763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0xfc29e588a0c435a1 # load x3 with value 0xfc29e588a0c435a1
sd x3, 0(x2) # store 0xfc29e588a0c435a1 in memory
fld f16, 0(x2) # load 0xfc29e588a0c435a1 from memory into f16
li x3, 0xa5e3bf028965fb49 # load x3 with value 0xa5e3bf028965fb49
sd x3, 0(x2) # store 0xa5e3bf028965fb49 in memory
fld f17, 0(x2) # load 0xa5e3bf028965fb49 from memory into f17
fnmadd.d f20, f8, f16, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x24, 0x45ae0f98ba2b64ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xb1ec3731ae018511 # load x3 with value 0xb1ec3731ae018511
sd x3, 0(x2) # store 0xb1ec3731ae018511 in memory
fld f21, 0(x2) # load 0xb1ec3731ae018511 from memory into f21
li x3, 0x7bc87669c7676f71 # load x3 with value 0x7bc87669c7676f71
sd x3, 0(x2) # store 0x7bc87669c7676f71 in memory
fld f28, 0(x2) # load 0x7bc87669c7676f71 from memory into f28
fnmadd.d f24, f14, f21, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x17, 0x34c38576eca75528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x54729361bb203da0 # load x3 with value 0x54729361bb203da0
sd x3, 0(x2) # store 0x54729361bb203da0 in memory
fld f6, 0(x2) # load 0x54729361bb203da0 from memory into f6
li x3, 0xcf6c39e457e455ec # load x3 with value 0xcf6c39e457e455ec
sd x3, 0(x2) # store 0xcf6c39e457e455ec in memory
fld f30, 0(x2) # load 0xcf6c39e457e455ec from memory into f30
fnmadd.d f17, f25, f6, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x15, 0x4f67209a5a959c7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0xe36fb9339b23475c # load x3 with value 0xe36fb9339b23475c
sd x3, 0(x2) # store 0xe36fb9339b23475c in memory
fld f20, 0(x2) # load 0xe36fb9339b23475c from memory into f20
li x3, 0xc1708735a8ecbb5a # load x3 with value 0xc1708735a8ecbb5a
sd x3, 0(x2) # store 0xc1708735a8ecbb5a in memory
fld f4, 0(x2) # load 0xc1708735a8ecbb5a from memory into f4
fnmadd.d f15, f13, f20, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x5, 0xbd700ae70f9f4b1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x4da1b961a20167bf # load x3 with value 0x4da1b961a20167bf
sd x3, 0(x2) # store 0x4da1b961a20167bf in memory
fld f13, 0(x2) # load 0x4da1b961a20167bf from memory into f13
li x3, 0x529714578206cb37 # load x3 with value 0x529714578206cb37
sd x3, 0(x2) # store 0x529714578206cb37 in memory
fld f26, 0(x2) # load 0x529714578206cb37 from memory into f26
fnmadd.d f5, f16, f13, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x7, 0x9f98b21f67261e81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b7c86a2955198e3 # load x3 with value 0x9b7c86a2955198e3
sd x3, 0(x2) # store 0x9b7c86a2955198e3 in memory
fld f19, 0(x2) # load 0x9b7c86a2955198e3 from memory into f19
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x2c6d739d5bd25339 # load x3 with value 0x2c6d739d5bd25339
sd x3, 0(x2) # store 0x2c6d739d5bd25339 in memory
fld f31, 0(x2) # load 0x2c6d739d5bd25339 from memory into f31
fnmadd.d f7, f19, f25, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x3, 0x9fba35142e4cf8a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9dabcf2e1308b412 # load x3 with value 0x9dabcf2e1308b412
sd x3, 0(x2) # store 0x9dabcf2e1308b412 in memory
fld f23, 0(x2) # load 0x9dabcf2e1308b412 from memory into f23
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0xd10bbb336a8ffc26 # load x3 with value 0xd10bbb336a8ffc26
sd x3, 0(x2) # store 0xd10bbb336a8ffc26 in memory
fld f24, 0(x2) # load 0xd10bbb336a8ffc26 from memory into f24
fnmadd.d f3, f23, f29, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x9, 0x2fc791f865d3e84a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd5957e28a4af3cd # load x3 with value 0xcd5957e28a4af3cd
sd x3, 0(x2) # store 0xcd5957e28a4af3cd in memory
fld f16, 0(x2) # load 0xcd5957e28a4af3cd from memory into f16
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x23f3dfad53ff10cb # load x3 with value 0x23f3dfad53ff10cb
sd x3, 0(x2) # store 0x23f3dfad53ff10cb in memory
fld f24, 0(x2) # load 0x23f3dfad53ff10cb from memory into f24
fnmadd.d f9, f16, f25, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x25, 0x3d414e663eed25c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd1e5ca97d819366d # load x3 with value 0xd1e5ca97d819366d
sd x3, 0(x2) # store 0xd1e5ca97d819366d in memory
fld f15, 0(x2) # load 0xd1e5ca97d819366d from memory into f15
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x99fd00f691fd8f64 # load x3 with value 0x99fd00f691fd8f64
sd x3, 0(x2) # store 0x99fd00f691fd8f64 in memory
fld f19, 0(x2) # load 0x99fd00f691fd8f64 from memory into f19
fnmadd.d f25, f15, f2, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x25, 0x101ea7564efe1289 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x131a00d3893a27ff # load x3 with value 0x131a00d3893a27ff
sd x3, 0(x2) # store 0x131a00d3893a27ff in memory
fld f22, 0(x2) # load 0x131a00d3893a27ff from memory into f22
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0xeed313c7c0b3d737 # load x3 with value 0xeed313c7c0b3d737
sd x3, 0(x2) # store 0xeed313c7c0b3d737 in memory
fld f16, 0(x2) # load 0xeed313c7c0b3d737 from memory into f16
fnmadd.d f25, f22, f7, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x4, 0xcab091da875f447a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd16f9aa21915ccb # load x3 with value 0xdd16f9aa21915ccb
sd x3, 0(x2) # store 0xdd16f9aa21915ccb in memory
fld f27, 0(x2) # load 0xdd16f9aa21915ccb from memory into f27
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x2d00cb52136f314b # load x3 with value 0x2d00cb52136f314b
sd x3, 0(x2) # store 0x2d00cb52136f314b in memory
fld f6, 0(x2) # load 0x2d00cb52136f314b from memory into f6
fnmadd.d f4, f27, f23, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x12, 0x70f46e420fbc01c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x978667b13c6cd072 # load x3 with value 0x978667b13c6cd072
sd x3, 0(x2) # store 0x978667b13c6cd072 in memory
fld f13, 0(x2) # load 0x978667b13c6cd072 from memory into f13
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xd3018ceb16be54d4 # load x3 with value 0xd3018ceb16be54d4
sd x3, 0(x2) # store 0xd3018ceb16be54d4 in memory
fld f11, 0(x2) # load 0xd3018ceb16be54d4 from memory into f11
fnmadd.d f12, f13, f29, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x7, 0x32a8bd0a3be779d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad40ce95a15db016 # load x3 with value 0xad40ce95a15db016
sd x3, 0(x2) # store 0xad40ce95a15db016 in memory
fld f2, 0(x2) # load 0xad40ce95a15db016 from memory into f2
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0xc62c30fe1b91507d # load x3 with value 0xc62c30fe1b91507d
sd x3, 0(x2) # store 0xc62c30fe1b91507d in memory
fld f24, 0(x2) # load 0xc62c30fe1b91507d from memory into f24
fnmadd.d f7, f2, f17, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x31, 0x59160bab9b4d1597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd9c7837ab83e3af0 # load x3 with value 0xd9c7837ab83e3af0
sd x3, 0(x2) # store 0xd9c7837ab83e3af0 in memory
fld f10, 0(x2) # load 0xd9c7837ab83e3af0 from memory into f10
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x3497d91ca030ced7 # load x3 with value 0x3497d91ca030ced7
sd x3, 0(x2) # store 0x3497d91ca030ced7 in memory
fld f28, 0(x2) # load 0x3497d91ca030ced7 from memory into f28
fnmadd.d f31, f10, f30, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x6, 0x1ca1d27e8b43e48d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed83f1087cc9efa9 # load x3 with value 0xed83f1087cc9efa9
sd x3, 0(x2) # store 0xed83f1087cc9efa9 in memory
fld f2, 0(x2) # load 0xed83f1087cc9efa9 from memory into f2
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x8240cdf6f4850aef # load x3 with value 0x8240cdf6f4850aef
sd x3, 0(x2) # store 0x8240cdf6f4850aef in memory
fld f12, 0(x2) # load 0x8240cdf6f4850aef from memory into f12
fnmadd.d f6, f2, f26, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x17, 0x33621192a84d0c4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97c11c1dc0961f07 # load x3 with value 0x97c11c1dc0961f07
sd x3, 0(x2) # store 0x97c11c1dc0961f07 in memory
fld f22, 0(x2) # load 0x97c11c1dc0961f07 from memory into f22
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x562f147bef7a9c6f # load x3 with value 0x562f147bef7a9c6f
sd x3, 0(x2) # store 0x562f147bef7a9c6f in memory
fld f13, 0(x2) # load 0x562f147bef7a9c6f from memory into f13
fnmadd.d f17, f22, f23, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x20, 0xbf43951821e9846d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba2bd1e52880e219 # load x3 with value 0xba2bd1e52880e219
sd x3, 0(x2) # store 0xba2bd1e52880e219 in memory
fld f12, 0(x2) # load 0xba2bd1e52880e219 from memory into f12
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0xb76615d928c31056 # load x3 with value 0xb76615d928c31056
sd x3, 0(x2) # store 0xb76615d928c31056 in memory
fld f5, 0(x2) # load 0xb76615d928c31056 from memory into f5
fnmadd.d f20, f12, f4, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x7, 0x1b7c088f722b0874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81159a0d29b8060e # load x3 with value 0x81159a0d29b8060e
sd x3, 0(x2) # store 0x81159a0d29b8060e in memory
fld f14, 0(x2) # load 0x81159a0d29b8060e from memory into f14
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x0b05cc1cd618f951 # load x3 with value 0x0b05cc1cd618f951
sd x3, 0(x2) # store 0x0b05cc1cd618f951 in memory
fld f28, 0(x2) # load 0x0b05cc1cd618f951 from memory into f28
fnmadd.d f7, f14, f9, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x14, 0x155f572e049a628c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc7835373a2f7b21 # load x3 with value 0xbc7835373a2f7b21
sd x3, 0(x2) # store 0xbc7835373a2f7b21 in memory
fld f22, 0(x2) # load 0xbc7835373a2f7b21 from memory into f22
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0xdde16e08c81a5a67 # load x3 with value 0xdde16e08c81a5a67
sd x3, 0(x2) # store 0xdde16e08c81a5a67 in memory
fld f27, 0(x2) # load 0xdde16e08c81a5a67 from memory into f27
fnmadd.d f14, f22, f28, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x21, 0x832cecaeebdde314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf8a4010d4481dcb # load x3 with value 0xaf8a4010d4481dcb
sd x3, 0(x2) # store 0xaf8a4010d4481dcb in memory
fld f29, 0(x2) # load 0xaf8a4010d4481dcb from memory into f29
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0xd288eb36f4208f14 # load x3 with value 0xd288eb36f4208f14
sd x3, 0(x2) # store 0xd288eb36f4208f14 in memory
fld f26, 0(x2) # load 0xd288eb36f4208f14 from memory into f26
fnmadd.d f21, f29, f18, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x18, 0x653d5df4e918c33e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7724d2de2c50c84 # load x3 with value 0xf7724d2de2c50c84
sd x3, 0(x2) # store 0xf7724d2de2c50c84 in memory
fld f30, 0(x2) # load 0xf7724d2de2c50c84 from memory into f30
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x59b8c480b2509405 # load x3 with value 0x59b8c480b2509405
sd x3, 0(x2) # store 0x59b8c480b2509405 in memory
fld f19, 0(x2) # load 0x59b8c480b2509405 from memory into f19
fnmadd.d f18, f30, f31, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x1, 0x7e4c263d76610c60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62f07860ba75ea94 # load x3 with value 0x62f07860ba75ea94
sd x3, 0(x2) # store 0x62f07860ba75ea94 in memory
fld f15, 0(x2) # load 0x62f07860ba75ea94 from memory into f15
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xe316827517b14d71 # load x3 with value 0xe316827517b14d71
sd x3, 0(x2) # store 0xe316827517b14d71 in memory
fld f23, 0(x2) # load 0xe316827517b14d71 from memory into f23
fnmadd.d f1, f15, f2, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x5, 0x56964815d625e29c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcabaca0eeb97793c # load x3 with value 0xcabaca0eeb97793c
sd x3, 0(x2) # store 0xcabaca0eeb97793c in memory
fld f26, 0(x2) # load 0xcabaca0eeb97793c from memory into f26
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xc4c4a7e059553f73 # load x3 with value 0xc4c4a7e059553f73
sd x3, 0(x2) # store 0xc4c4a7e059553f73 in memory
fld f8, 0(x2) # load 0xc4c4a7e059553f73 from memory into f8
fnmadd.d f5, f26, f22, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x6, 0x7aada66a4fe5f416 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x467f8fd6b323803e # load x3 with value 0x467f8fd6b323803e
sd x3, 0(x2) # store 0x467f8fd6b323803e in memory
fld f21, 0(x2) # load 0x467f8fd6b323803e from memory into f21
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x3b1c2c4ec5816517 # load x3 with value 0x3b1c2c4ec5816517
sd x3, 0(x2) # store 0x3b1c2c4ec5816517 in memory
fld f19, 0(x2) # load 0x3b1c2c4ec5816517 from memory into f19
fnmadd.d f6, f21, f30, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x7, 0x209d0ee845e35ba2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44fe2376c6b7353c # load x3 with value 0x44fe2376c6b7353c
sd x3, 0(x2) # store 0x44fe2376c6b7353c in memory
fld f2, 0(x2) # load 0x44fe2376c6b7353c from memory into f2
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x62c27a39615fab8f # load x3 with value 0x62c27a39615fab8f
sd x3, 0(x2) # store 0x62c27a39615fab8f in memory
fld f26, 0(x2) # load 0x62c27a39615fab8f from memory into f26
fnmadd.d f7, f2, f27, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x25, 0x9c209af9632776b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f6efe9044480199 # load x3 with value 0x8f6efe9044480199
sd x3, 0(x2) # store 0x8f6efe9044480199 in memory
fld f28, 0(x2) # load 0x8f6efe9044480199 from memory into f28
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xbc2d774d4686a13c # load x3 with value 0xbc2d774d4686a13c
sd x3, 0(x2) # store 0xbc2d774d4686a13c in memory
fld f21, 0(x2) # load 0xbc2d774d4686a13c from memory into f21
fnmadd.d f25, f28, f11, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x11, 0x31e787b651c63306 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf273198d02b089b9 # load x3 with value 0xf273198d02b089b9
sd x3, 0(x2) # store 0xf273198d02b089b9 in memory
fld f18, 0(x2) # load 0xf273198d02b089b9 from memory into f18
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x4841502ab27bb244 # load x3 with value 0x4841502ab27bb244
sd x3, 0(x2) # store 0x4841502ab27bb244 in memory
fld f16, 0(x2) # load 0x4841502ab27bb244 from memory into f16
fnmadd.d f11, f18, f8, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x27, 0x48ac1c75f7062f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc642cbf1509bcc46 # load x3 with value 0xc642cbf1509bcc46
sd x3, 0(x2) # store 0xc642cbf1509bcc46 in memory
fld f3, 0(x2) # load 0xc642cbf1509bcc46 from memory into f3
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0x1b3b0d06c20183d2 # load x3 with value 0x1b3b0d06c20183d2
sd x3, 0(x2) # store 0x1b3b0d06c20183d2 in memory
fld f10, 0(x2) # load 0x1b3b0d06c20183d2 from memory into f10
fnmadd.d f27, f3, f20, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x31, 0x0ae88fbe565c9e90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x338289cb03d13f6f # load x3 with value 0x338289cb03d13f6f
sd x3, 0(x2) # store 0x338289cb03d13f6f in memory
fld f24, 0(x2) # load 0x338289cb03d13f6f from memory into f24
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0xe227c56aa278ff7f # load x3 with value 0xe227c56aa278ff7f
sd x3, 0(x2) # store 0xe227c56aa278ff7f in memory
fld f12, 0(x2) # load 0xe227c56aa278ff7f from memory into f12
fnmadd.d f31, f24, f20, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x21, 0x28e6ad3cae4fa604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3da095a7ea798fe # load x3 with value 0xb3da095a7ea798fe
sd x3, 0(x2) # store 0xb3da095a7ea798fe in memory
fld f11, 0(x2) # load 0xb3da095a7ea798fe from memory into f11
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xb75d486841433a67 # load x3 with value 0xb75d486841433a67
sd x3, 0(x2) # store 0xb75d486841433a67 in memory
fld f12, 0(x2) # load 0xb75d486841433a67 from memory into f12
fnmadd.d f21, f11, f23, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x3, 0x54aeee191791cd3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52adee2ecc0a61f5 # load x3 with value 0x52adee2ecc0a61f5
sd x3, 0(x2) # store 0x52adee2ecc0a61f5 in memory
fld f30, 0(x2) # load 0x52adee2ecc0a61f5 from memory into f30
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x92e980ca43a1c9b8 # load x3 with value 0x92e980ca43a1c9b8
sd x3, 0(x2) # store 0x92e980ca43a1c9b8 in memory
fld f31, 0(x2) # load 0x92e980ca43a1c9b8 from memory into f31
fnmadd.d f3, f30, f15, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x17, 0xfccf63e9da785c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb709feb5d59f0da9 # load x3 with value 0xb709feb5d59f0da9
sd x3, 0(x2) # store 0xb709feb5d59f0da9 in memory
fld f21, 0(x2) # load 0xb709feb5d59f0da9 from memory into f21
li x3, 0xc9626c4bd779671e # load x3 with value 0xc9626c4bd779671e
sd x3, 0(x2) # store 0xc9626c4bd779671e in memory
fld f19, 0(x2) # load 0xc9626c4bd779671e from memory into f19
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fnmadd.d f17, f21, f19, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000000)
li x4, 0x47820970e9da7de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8494411f889a8ae3 # load x3 with value 0x8494411f889a8ae3
sd x3, 0(x2) # store 0x8494411f889a8ae3 in memory
fld f13, 0(x2) # load 0x8494411f889a8ae3 from memory into f13
li x3, 0x91b4eab0f2715283 # load x3 with value 0x91b4eab0f2715283
sd x3, 0(x2) # store 0x91b4eab0f2715283 in memory
fld f2, 0(x2) # load 0x91b4eab0f2715283 from memory into f2
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fnmadd.d f4, f13, f2, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff0000000000000)
li x12, 0xdb0af77ddae502d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb24bcf5c1843df6b # load x3 with value 0xb24bcf5c1843df6b
sd x3, 0(x2) # store 0xb24bcf5c1843df6b in memory
fld f17, 0(x2) # load 0xb24bcf5c1843df6b from memory into f17
li x3, 0xed25a3cbb09be909 # load x3 with value 0xed25a3cbb09be909
sd x3, 0(x2) # store 0xed25a3cbb09be909 in memory
fld f5, 0(x2) # load 0xed25a3cbb09be909 from memory into f5
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmadd.d f12, f17, f5, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff0000000000000)
li x11, 0xd9bb8beae3aaf3f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e05fe8913697510 # load x3 with value 0x3e05fe8913697510
sd x3, 0(x2) # store 0x3e05fe8913697510 in memory
fld f22, 0(x2) # load 0x3e05fe8913697510 from memory into f22
li x3, 0x88ec358dd1217f9a # load x3 with value 0x88ec358dd1217f9a
sd x3, 0(x2) # store 0x88ec358dd1217f9a in memory
fld f2, 0(x2) # load 0x88ec358dd1217f9a from memory into f2
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fnmadd.d f11, f22, f2, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff8000000000000)
li x20, 0x4a02b08abce14069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13fbb370be8e4bc4 # load x3 with value 0x13fbb370be8e4bc4
sd x3, 0(x2) # store 0x13fbb370be8e4bc4 in memory
fld f13, 0(x2) # load 0x13fbb370be8e4bc4 from memory into f13
li x3, 0x4626ed4a695273a4 # load x3 with value 0x4626ed4a695273a4
sd x3, 0(x2) # store 0x4626ed4a695273a4 in memory
fld f10, 0(x2) # load 0x4626ed4a695273a4 from memory into f10
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fnmadd.d f20, f13, f10, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff8000000000000)
li x24, 0x87a14f888d4e21eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11f003756ec57818 # load x3 with value 0x11f003756ec57818
sd x3, 0(x2) # store 0x11f003756ec57818 in memory
fld f30, 0(x2) # load 0x11f003756ec57818 from memory into f30
li x3, 0xf57d496ed15f093b # load x3 with value 0xf57d496ed15f093b
sd x3, 0(x2) # store 0xf57d496ed15f093b in memory
fld f9, 0(x2) # load 0xf57d496ed15f093b from memory into f9
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fnmadd.d f24, f30, f9, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000000000000000)
li x3, 0x6d528e4a9ade93f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2547160a4bb0e521 # load x3 with value 0x2547160a4bb0e521
sd x3, 0(x2) # store 0x2547160a4bb0e521 in memory
fld f12, 0(x2) # load 0x2547160a4bb0e521 from memory into f12
li x3, 0x2e1add7d1212bda7 # load x3 with value 0x2e1add7d1212bda7
sd x3, 0(x2) # store 0x2e1add7d1212bda7 in memory
fld f19, 0(x2) # load 0x2e1add7d1212bda7 from memory into f19
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fnmadd.d f3, f12, f19, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000000000000000)
li x31, 0x668b342f280ee004 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03f2f1e26eea4e68 # load x3 with value 0x03f2f1e26eea4e68
sd x3, 0(x2) # store 0x03f2f1e26eea4e68 in memory
fld f11, 0(x2) # load 0x03f2f1e26eea4e68 from memory into f11
li x3, 0x02296b2584b8730c # load x3 with value 0x02296b2584b8730c
sd x3, 0(x2) # store 0x02296b2584b8730c in memory
fld f27, 0(x2) # load 0x02296b2584b8730c from memory into f27
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fnmadd.d f31, f11, f27, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x10000000000000)
li x6, 0xd886c9f7a167e7f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x727fecb0be7ea3b2 # load x3 with value 0x727fecb0be7ea3b2
sd x3, 0(x2) # store 0x727fecb0be7ea3b2 in memory
fld f17, 0(x2) # load 0x727fecb0be7ea3b2 from memory into f17
li x3, 0xa99894d6388b5d48 # load x3 with value 0xa99894d6388b5d48
sd x3, 0(x2) # store 0xa99894d6388b5d48 in memory
fld f15, 0(x2) # load 0xa99894d6388b5d48 from memory into f15
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fnmadd.d f6, f17, f15, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8010000000000000)
li x18, 0xf54af3a61e048fa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d553c2aa665a8d3 # load x3 with value 0x7d553c2aa665a8d3
sd x3, 0(x2) # store 0x7d553c2aa665a8d3 in memory
fld f24, 0(x2) # load 0x7d553c2aa665a8d3 from memory into f24
li x3, 0xd80392c1bf5138f5 # load x3 with value 0xd80392c1bf5138f5
sd x3, 0(x2) # store 0xd80392c1bf5138f5 in memory
fld f1, 0(x2) # load 0xd80392c1bf5138f5 from memory into f1
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fnmadd.d f18, f24, f1, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fefffffffffffff)
li x7, 0x154ec3c65b3bdf53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2357149e7248a93f # load x3 with value 0x2357149e7248a93f
sd x3, 0(x2) # store 0x2357149e7248a93f in memory
fld f18, 0(x2) # load 0x2357149e7248a93f from memory into f18
li x3, 0x6fd236a03fadb6fb # load x3 with value 0x6fd236a03fadb6fb
sd x3, 0(x2) # store 0x6fd236a03fadb6fb in memory
fld f24, 0(x2) # load 0x6fd236a03fadb6fb from memory into f24
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmadd.d f7, f18, f24, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffefffffffffffff)
li x26, 0x88d98f7a57bc21bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9457c12908341fae # load x3 with value 0x9457c12908341fae
sd x3, 0(x2) # store 0x9457c12908341fae in memory
fld f10, 0(x2) # load 0x9457c12908341fae from memory into f10
li x3, 0xbbbd77b959482653 # load x3 with value 0xbbbd77b959482653
sd x3, 0(x2) # store 0xbbbd77b959482653 in memory
fld f1, 0(x2) # load 0xbbbd77b959482653 from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fnmadd.d f26, f10, f1, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffffffffffff)
li x10, 0x2e72f02454864e03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x313e68967dbd19fe # load x3 with value 0x313e68967dbd19fe
sd x3, 0(x2) # store 0x313e68967dbd19fe in memory
fld f21, 0(x2) # load 0x313e68967dbd19fe from memory into f21
li x3, 0xd1ec3149238fa9c9 # load x3 with value 0xd1ec3149238fa9c9
sd x3, 0(x2) # store 0xd1ec3149238fa9c9 in memory
fld f27, 0(x2) # load 0xd1ec3149238fa9c9 from memory into f27
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fnmadd.d f10, f21, f27, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800fffffffffffff)
li x12, 0xa6f953c70cdc3b4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x34e8949d9dcc181f # load x3 with value 0x34e8949d9dcc181f
sd x3, 0(x2) # store 0x34e8949d9dcc181f in memory
fld f20, 0(x2) # load 0x34e8949d9dcc181f from memory into f20
li x3, 0xca87e9c71af2a97c # load x3 with value 0xca87e9c71af2a97c
sd x3, 0(x2) # store 0xca87e9c71af2a97c in memory
fld f5, 0(x2) # load 0xca87e9c71af2a97c from memory into f5
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fnmadd.d f12, f20, f5, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000)
li x5, 0xdf5807cd12e9ee14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e0980a04c2e446f # load x3 with value 0x4e0980a04c2e446f
sd x3, 0(x2) # store 0x4e0980a04c2e446f in memory
fld f27, 0(x2) # load 0x4e0980a04c2e446f from memory into f27
li x3, 0x5636a776792e5336 # load x3 with value 0x5636a776792e5336
sd x3, 0(x2) # store 0x5636a776792e5336 in memory
fld f21, 0(x2) # load 0x5636a776792e5336 from memory into f21
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fnmadd.d f5, f27, f21, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8008000000000000)
li x10, 0xee76f054703a56ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29d858dcc94ac2fa # load x3 with value 0x29d858dcc94ac2fa
sd x3, 0(x2) # store 0x29d858dcc94ac2fa in memory
fld f12, 0(x2) # load 0x29d858dcc94ac2fa from memory into f12
li x3, 0x2c306ba406413068 # load x3 with value 0x2c306ba406413068
sd x3, 0(x2) # store 0x2c306ba406413068 in memory
fld f26, 0(x2) # load 0x2c306ba406413068 from memory into f26
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fnmadd.d f10, f12, f26, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x7, 0x82eee857e173e9c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e784c479913c49d # load x3 with value 0x7e784c479913c49d
sd x3, 0(x2) # store 0x7e784c479913c49d in memory
fld f14, 0(x2) # load 0x7e784c479913c49d from memory into f14
li x3, 0x053448aae7a6b2f3 # load x3 with value 0x053448aae7a6b2f3
sd x3, 0(x2) # store 0x053448aae7a6b2f3 in memory
fld f21, 0(x2) # load 0x053448aae7a6b2f3 from memory into f21
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fnmadd.d f7, f14, f21, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000001)
li x18, 0x2d95a364b6a441cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d576cf83e09c08d # load x3 with value 0x1d576cf83e09c08d
sd x3, 0(x2) # store 0x1d576cf83e09c08d in memory
fld f7, 0(x2) # load 0x1d576cf83e09c08d from memory into f7
li x3, 0x604eedfaa9614430 # load x3 with value 0x604eedfaa9614430
sd x3, 0(x2) # store 0x604eedfaa9614430 in memory
fld f22, 0(x2) # load 0x604eedfaa9614430 from memory into f22
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fnmadd.d f18, f7, f22, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000000)
li x20, 0xfb107715953da504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ea2018e8d052409 # load x3 with value 0x5ea2018e8d052409
sd x3, 0(x2) # store 0x5ea2018e8d052409 in memory
fld f31, 0(x2) # load 0x5ea2018e8d052409 from memory into f31
li x3, 0x378cfc638332cacb # load x3 with value 0x378cfc638332cacb
sd x3, 0(x2) # store 0x378cfc638332cacb in memory
fld f28, 0(x2) # load 0x378cfc638332cacb from memory into f28
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f20, f31, f28, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff0000000000000)
li x10, 0x794f6aa1890c0ee6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd240484e007991d # load x3 with value 0xcd240484e007991d
sd x3, 0(x2) # store 0xcd240484e007991d in memory
fld f3, 0(x2) # load 0xcd240484e007991d from memory into f3
li x3, 0x3e4fe250370bfd12 # load x3 with value 0x3e4fe250370bfd12
sd x3, 0(x2) # store 0x3e4fe250370bfd12 in memory
fld f8, 0(x2) # load 0x3e4fe250370bfd12 from memory into f8
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fnmadd.d f10, f3, f8, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff8000000000000)
li x14, 0x431b7137843f650e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d8bcc22e6caaaa1 # load x3 with value 0x1d8bcc22e6caaaa1
sd x3, 0(x2) # store 0x1d8bcc22e6caaaa1 in memory
fld f25, 0(x2) # load 0x1d8bcc22e6caaaa1 from memory into f25
li x3, 0xe1fe7e2265d7ac08 # load x3 with value 0xe1fe7e2265d7ac08
sd x3, 0(x2) # store 0xe1fe7e2265d7ac08 in memory
fld f6, 0(x2) # load 0xe1fe7e2265d7ac08 from memory into f6
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fnmadd.d f14, f25, f6, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffffffffffff)
li x31, 0x3c8a1a3814a54816 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa346f2f42bd4a8f5 # load x3 with value 0xa346f2f42bd4a8f5
sd x3, 0(x2) # store 0xa346f2f42bd4a8f5 in memory
fld f6, 0(x2) # load 0xa346f2f42bd4a8f5 from memory into f6
li x3, 0xb3489cd4a99bbe87 # load x3 with value 0xb3489cd4a99bbe87
sd x3, 0(x2) # store 0xb3489cd4a99bbe87 in memory
fld f28, 0(x2) # load 0xb3489cd4a99bbe87 from memory into f28
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fnmadd.d f31, f6, f28, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000001)
li x1, 0x4e49c769f0ba3069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeda71af154031f5a # load x3 with value 0xeda71af154031f5a
sd x3, 0(x2) # store 0xeda71af154031f5a in memory
fld f16, 0(x2) # load 0xeda71af154031f5a from memory into f16
li x3, 0x0857d63b5aade084 # load x3 with value 0x0857d63b5aade084
sd x3, 0(x2) # store 0x0857d63b5aade084 in memory
fld f6, 0(x2) # load 0x0857d63b5aade084 from memory into f6
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fnmadd.d f1, f16, f6, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff7ffffffffffff)
li x3, 0xad1af531be939b04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0da41bc8d1808d3 # load x3 with value 0xf0da41bc8d1808d3
sd x3, 0(x2) # store 0xf0da41bc8d1808d3 in memory
fld f12, 0(x2) # load 0xf0da41bc8d1808d3 from memory into f12
li x3, 0x9400c4cca554bd3a # load x3 with value 0x9400c4cca554bd3a
sd x3, 0(x2) # store 0x9400c4cca554bd3a in memory
fld f23, 0(x2) # load 0x9400c4cca554bd3a from memory into f23
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f3, f12, f23, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x5a392534a57711ad)
li x4, 0xb822aadd75232cb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8c5a27f2e14d158 # load x3 with value 0xb8c5a27f2e14d158
sd x3, 0(x2) # store 0xb8c5a27f2e14d158 in memory
fld f15, 0(x2) # load 0xb8c5a27f2e14d158 from memory into f15
li x3, 0xda4855d85f77b8cb # load x3 with value 0xda4855d85f77b8cb
sd x3, 0(x2) # store 0xda4855d85f77b8cb in memory
fld f12, 0(x2) # load 0xda4855d85f77b8cb from memory into f12
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fnmadd.d f4, f15, f12, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa6e895993737426c)
li x4, 0xc6d960a9827eb302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x582be766250a8085 # load x3 with value 0x582be766250a8085
sd x3, 0(x2) # store 0x582be766250a8085 in memory
fld f3, 0(x2) # load 0x582be766250a8085 from memory into f3
li x3, 0xbca26e2f01b93e48 # load x3 with value 0xbca26e2f01b93e48
sd x3, 0(x2) # store 0xbca26e2f01b93e48 in memory
fld f18, 0(x2) # load 0xbca26e2f01b93e48 from memory into f18
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fnmadd.d f4, f3, f18, f19 # perform operation

# Testcase cp_frm
li x4, 0xad0b29b7ae3ab62f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0ad786b03391439 # load x3 with value 0xa0ad786b03391439
sd x3, 0(x2) # store 0xa0ad786b03391439 in memory
fld f9, 0(x2) # load 0xa0ad786b03391439 from memory into f9
li x3, 0x81c8dc2aab81b7c1 # load x3 with value 0x81c8dc2aab81b7c1
sd x3, 0(x2) # store 0x81c8dc2aab81b7c1 in memory
fld f13, 0(x2) # load 0x81c8dc2aab81b7c1 from memory into f13
li x3, 0x0000000000000003 # load x3 with value 0x0000000000000003
sd x3, 0(x2) # store 0x0000000000000003 in memory
fld f3, 0(x2) # load 0x0000000000000003 from memory into f3
fnmadd.d f4, f9, f13, f3, dyn # perform operation
fnmadd.d f4, f9, f13, f3, rdn # perform operation
fnmadd.d f4, f9, f13, f3, rmm # perform operation
fnmadd.d f4, f9, f13, f3, rne # perform operation
fnmadd.d f4, f9, f13, f3, rtz # perform operation
fnmadd.d f4, f9, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f9, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x31, 0x9b592dd3867efd32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xa92bb138e0a95b69 # load x3 with value 0xa92bb138e0a95b69
sd x3, 0(x2) # store 0xa92bb138e0a95b69 in memory
fld f9, 0(x2) # load 0xa92bb138e0a95b69 from memory into f9
fnmadd.d f31, f15, f6, f9, dyn # perform operation
fnmadd.d f31, f15, f6, f9, rdn # perform operation
fnmadd.d f31, f15, f6, f9, rmm # perform operation
fnmadd.d f31, f15, f6, f9, rne # perform operation
fnmadd.d f31, f15, f6, f9, rtz # perform operation
fnmadd.d f31, f15, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f15, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f15, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f15, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f15, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f15, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x9, 0x214681dcecc7ee8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x247a9e39d6a376d6 # load x3 with value 0x247a9e39d6a376d6
sd x3, 0(x2) # store 0x247a9e39d6a376d6 in memory
fld f31, 0(x2) # load 0x247a9e39d6a376d6 from memory into f31
fnmadd.d f9, f15, f14, f31, dyn # perform operation
fnmadd.d f9, f15, f14, f31, rdn # perform operation
fnmadd.d f9, f15, f14, f31, rmm # perform operation
fnmadd.d f9, f15, f14, f31, rne # perform operation
fnmadd.d f9, f15, f14, f31, rtz # perform operation
fnmadd.d f9, f15, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f15, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x25, 0x055af182b5192c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xf8ea97d49763d36a # load x3 with value 0xf8ea97d49763d36a
sd x3, 0(x2) # store 0xf8ea97d49763d36a in memory
fld f17, 0(x2) # load 0xf8ea97d49763d36a from memory into f17
fnmadd.d f25, f28, f11, f17, dyn # perform operation
fnmadd.d f25, f28, f11, f17, rdn # perform operation
fnmadd.d f25, f28, f11, f17, rmm # perform operation
fnmadd.d f25, f28, f11, f17, rne # perform operation
fnmadd.d f25, f28, f11, f17, rtz # perform operation
fnmadd.d f25, f28, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f28, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x18, 0x6f62a342f96f88f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xb9d154aae85f3c27 # load x3 with value 0xb9d154aae85f3c27
sd x3, 0(x2) # store 0xb9d154aae85f3c27 in memory
fld f28, 0(x2) # load 0xb9d154aae85f3c27 from memory into f28
fnmadd.d f18, f16, f23, f28, dyn # perform operation
fnmadd.d f18, f16, f23, f28, rdn # perform operation
fnmadd.d f18, f16, f23, f28, rmm # perform operation
fnmadd.d f18, f16, f23, f28, rne # perform operation
fnmadd.d f18, f16, f23, f28, rtz # perform operation
fnmadd.d f18, f16, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f16, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x22, 0x2da137c2d5fc31ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x4b7c20adc6e44d24 # load x3 with value 0x4b7c20adc6e44d24
sd x3, 0(x2) # store 0x4b7c20adc6e44d24 in memory
fld f21, 0(x2) # load 0x4b7c20adc6e44d24 from memory into f21
fnmadd.d f22, f28, f17, f21, dyn # perform operation
fnmadd.d f22, f28, f17, f21, rdn # perform operation
fnmadd.d f22, f28, f17, f21, rmm # perform operation
fnmadd.d f22, f28, f17, f21, rne # perform operation
fnmadd.d f22, f28, f17, f21, rtz # perform operation
fnmadd.d f22, f28, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f28, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f28, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f28, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f28, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f28, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x2, 0xca7bf1fce68bd9ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x25682b0db87d1fee # load x3 with value 0x25682b0db87d1fee
sd x3, 0(x2) # store 0x25682b0db87d1fee in memory
fld f26, 0(x2) # load 0x25682b0db87d1fee from memory into f26
fnmadd.d f2, f16, f7, f26, dyn # perform operation
fnmadd.d f2, f16, f7, f26, rdn # perform operation
fnmadd.d f2, f16, f7, f26, rmm # perform operation
fnmadd.d f2, f16, f7, f26, rne # perform operation
fnmadd.d f2, f16, f7, f26, rtz # perform operation
fnmadd.d f2, f16, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f16, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f16, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x12, 0x4b023efea53928b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x8ecc8d058277548e # load x3 with value 0x8ecc8d058277548e
sd x3, 0(x2) # store 0x8ecc8d058277548e in memory
fld f6, 0(x2) # load 0x8ecc8d058277548e from memory into f6
fnmadd.d f12, f25, f7, f6, dyn # perform operation
fnmadd.d f12, f25, f7, f6, rdn # perform operation
fnmadd.d f12, f25, f7, f6, rmm # perform operation
fnmadd.d f12, f25, f7, f6, rne # perform operation
fnmadd.d f12, f25, f7, f6, rtz # perform operation
fnmadd.d f12, f25, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f25, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f25, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x9, 0x2e98da62c01a49bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0xb093caf25e51de93 # load x3 with value 0xb093caf25e51de93
sd x3, 0(x2) # store 0xb093caf25e51de93 in memory
fld f8, 0(x2) # load 0xb093caf25e51de93 from memory into f8
fnmadd.d f9, f24, f28, f8, dyn # perform operation
fnmadd.d f9, f24, f28, f8, rdn # perform operation
fnmadd.d f9, f24, f28, f8, rmm # perform operation
fnmadd.d f9, f24, f28, f8, rne # perform operation
fnmadd.d f9, f24, f28, f8, rtz # perform operation
fnmadd.d f9, f24, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f24, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x14, 0x7ec6c90091094adf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x5b4dfcf912a03b12 # load x3 with value 0x5b4dfcf912a03b12
sd x3, 0(x2) # store 0x5b4dfcf912a03b12 in memory
fld f11, 0(x2) # load 0x5b4dfcf912a03b12 from memory into f11
fnmadd.d f14, f5, f6, f11, dyn # perform operation
fnmadd.d f14, f5, f6, f11, rdn # perform operation
fnmadd.d f14, f5, f6, f11, rmm # perform operation
fnmadd.d f14, f5, f6, f11, rne # perform operation
fnmadd.d f14, f5, f6, f11, rtz # perform operation
fnmadd.d f14, f5, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f5, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x20, 0xbaf05a5508408b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0xfd35648d834a95c5 # load x3 with value 0xfd35648d834a95c5
sd x3, 0(x2) # store 0xfd35648d834a95c5 in memory
fld f17, 0(x2) # load 0xfd35648d834a95c5 from memory into f17
fnmadd.d f20, f25, f26, f17, dyn # perform operation
fnmadd.d f20, f25, f26, f17, rdn # perform operation
fnmadd.d f20, f25, f26, f17, rmm # perform operation
fnmadd.d f20, f25, f26, f17, rne # perform operation
fnmadd.d f20, f25, f26, f17, rtz # perform operation
fnmadd.d f20, f25, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f25, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f25, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f25, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f25, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f25, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x9, 0x9085acd03a117480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x2f3224a33833c09d # load x3 with value 0x2f3224a33833c09d
sd x3, 0(x2) # store 0x2f3224a33833c09d in memory
fld f23, 0(x2) # load 0x2f3224a33833c09d from memory into f23
fnmadd.d f9, f12, f6, f23, dyn # perform operation
fnmadd.d f9, f12, f6, f23, rdn # perform operation
fnmadd.d f9, f12, f6, f23, rmm # perform operation
fnmadd.d f9, f12, f6, f23, rne # perform operation
fnmadd.d f9, f12, f6, f23, rtz # perform operation
fnmadd.d f9, f12, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f12, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f12, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f12, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f12, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f12, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x7, 0xe9f3066eb01f58a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x2c1fb97d2ee0a37f # load x3 with value 0x2c1fb97d2ee0a37f
sd x3, 0(x2) # store 0x2c1fb97d2ee0a37f in memory
fld f18, 0(x2) # load 0x2c1fb97d2ee0a37f from memory into f18
fnmadd.d f7, f21, f15, f18, dyn # perform operation
fnmadd.d f7, f21, f15, f18, rdn # perform operation
fnmadd.d f7, f21, f15, f18, rmm # perform operation
fnmadd.d f7, f21, f15, f18, rne # perform operation
fnmadd.d f7, f21, f15, f18, rtz # perform operation
fnmadd.d f7, f21, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f21, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f21, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f21, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f21, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f21, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x11, 0x7e64e804c7155960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0xde499e5411af6953 # load x3 with value 0xde499e5411af6953
sd x3, 0(x2) # store 0xde499e5411af6953 in memory
fld f30, 0(x2) # load 0xde499e5411af6953 from memory into f30
fnmadd.d f11, f22, f13, f30, dyn # perform operation
fnmadd.d f11, f22, f13, f30, rdn # perform operation
fnmadd.d f11, f22, f13, f30, rmm # perform operation
fnmadd.d f11, f22, f13, f30, rne # perform operation
fnmadd.d f11, f22, f13, f30, rtz # perform operation
fnmadd.d f11, f22, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f22, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f22, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x12, 0xd0fe24cad77fd86e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0xc8431c0068f410c2 # load x3 with value 0xc8431c0068f410c2
sd x3, 0(x2) # store 0xc8431c0068f410c2 in memory
fld f14, 0(x2) # load 0xc8431c0068f410c2 from memory into f14
fnmadd.d f12, f22, f23, f14, dyn # perform operation
fnmadd.d f12, f22, f23, f14, rdn # perform operation
fnmadd.d f12, f22, f23, f14, rmm # perform operation
fnmadd.d f12, f22, f23, f14, rne # perform operation
fnmadd.d f12, f22, f23, f14, rtz # perform operation
fnmadd.d f12, f22, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f22, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x11, 0xc8af4a36fe231763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xe15ff3bcc879b11e # load x3 with value 0xe15ff3bcc879b11e
sd x3, 0(x2) # store 0xe15ff3bcc879b11e in memory
fld f13, 0(x2) # load 0xe15ff3bcc879b11e from memory into f13
fnmadd.d f11, f2, f21, f13, dyn # perform operation
fnmadd.d f11, f2, f21, f13, rdn # perform operation
fnmadd.d f11, f2, f21, f13, rmm # perform operation
fnmadd.d f11, f2, f21, f13, rne # perform operation
fnmadd.d f11, f2, f21, f13, rtz # perform operation
fnmadd.d f11, f2, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f2, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f2, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x30, 0x3ea741202bf67606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x8d76095969b3c676 # load x3 with value 0x8d76095969b3c676
sd x3, 0(x2) # store 0x8d76095969b3c676 in memory
fld f14, 0(x2) # load 0x8d76095969b3c676 from memory into f14
fnmadd.d f30, f6, f20, f14, dyn # perform operation
fnmadd.d f30, f6, f20, f14, rdn # perform operation
fnmadd.d f30, f6, f20, f14, rmm # perform operation
fnmadd.d f30, f6, f20, f14, rne # perform operation
fnmadd.d f30, f6, f20, f14, rtz # perform operation
fnmadd.d f30, f6, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f6, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f6, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x20, 0x80b633eb53eacb96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xf8e7a3b5bba1f6d8 # load x3 with value 0xf8e7a3b5bba1f6d8
sd x3, 0(x2) # store 0xf8e7a3b5bba1f6d8 in memory
fld f1, 0(x2) # load 0xf8e7a3b5bba1f6d8 from memory into f1
fnmadd.d f20, f21, f4, f1, dyn # perform operation
fnmadd.d f20, f21, f4, f1, rdn # perform operation
fnmadd.d f20, f21, f4, f1, rmm # perform operation
fnmadd.d f20, f21, f4, f1, rne # perform operation
fnmadd.d f20, f21, f4, f1, rtz # perform operation
fnmadd.d f20, f21, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f21, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f21, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f21, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f21, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f21, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x16, 0x9c48a7cbd9f383d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xb51b7c0066839690 # load x3 with value 0xb51b7c0066839690
sd x3, 0(x2) # store 0xb51b7c0066839690 in memory
fld f7, 0(x2) # load 0xb51b7c0066839690 from memory into f7
fnmadd.d f16, f19, f25, f7, dyn # perform operation
fnmadd.d f16, f19, f25, f7, rdn # perform operation
fnmadd.d f16, f19, f25, f7, rmm # perform operation
fnmadd.d f16, f19, f25, f7, rne # perform operation
fnmadd.d f16, f19, f25, f7, rtz # perform operation
fnmadd.d f16, f19, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f19, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f19, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f19, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f19, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f19, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x26, 0x3e1579a39667bc7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0xb5447ee5c464264a # load x3 with value 0xb5447ee5c464264a
sd x3, 0(x2) # store 0xb5447ee5c464264a in memory
fld f25, 0(x2) # load 0xb5447ee5c464264a from memory into f25
fnmadd.d f26, f6, f14, f25, dyn # perform operation
fnmadd.d f26, f6, f14, f25, rdn # perform operation
fnmadd.d f26, f6, f14, f25, rmm # perform operation
fnmadd.d f26, f6, f14, f25, rne # perform operation
fnmadd.d f26, f6, f14, f25, rtz # perform operation
fnmadd.d f26, f6, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f6, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f6, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x14, 0x7230ae1662200ade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xf79a9bf46568d0f4 # load x3 with value 0xf79a9bf46568d0f4
sd x3, 0(x2) # store 0xf79a9bf46568d0f4 in memory
fld f8, 0(x2) # load 0xf79a9bf46568d0f4 from memory into f8
fnmadd.d f14, f9, f3, f8, dyn # perform operation
fnmadd.d f14, f9, f3, f8, rdn # perform operation
fnmadd.d f14, f9, f3, f8, rmm # perform operation
fnmadd.d f14, f9, f3, f8, rne # perform operation
fnmadd.d f14, f9, f3, f8, rtz # perform operation
fnmadd.d f14, f9, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f9, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x7, 0x3debae48c896b2d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0xffc40955a71e9710 # load x3 with value 0xffc40955a71e9710
sd x3, 0(x2) # store 0xffc40955a71e9710 in memory
fld f5, 0(x2) # load 0xffc40955a71e9710 from memory into f5
fnmadd.d f7, f16, f27, f5, dyn # perform operation
fnmadd.d f7, f16, f27, f5, rdn # perform operation
fnmadd.d f7, f16, f27, f5, rmm # perform operation
fnmadd.d f7, f16, f27, f5, rne # perform operation
fnmadd.d f7, f16, f27, f5, rtz # perform operation
fnmadd.d f7, f16, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f16, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x12, 0x286c235fb26b8acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xc1ec1a7856fa6eab # load x3 with value 0xc1ec1a7856fa6eab
sd x3, 0(x2) # store 0xc1ec1a7856fa6eab in memory
fld f16, 0(x2) # load 0xc1ec1a7856fa6eab from memory into f16
fnmadd.d f12, f30, f23, f16, dyn # perform operation
fnmadd.d f12, f30, f23, f16, rdn # perform operation
fnmadd.d f12, f30, f23, f16, rmm # perform operation
fnmadd.d f12, f30, f23, f16, rne # perform operation
fnmadd.d f12, f30, f23, f16, rtz # perform operation
fnmadd.d f12, f30, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x26, 0xff0cc346db58c56a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x6b5ee5e55812ad4b # load x3 with value 0x6b5ee5e55812ad4b
sd x3, 0(x2) # store 0x6b5ee5e55812ad4b in memory
fld f12, 0(x2) # load 0x6b5ee5e55812ad4b from memory into f12
fnmadd.d f26, f20, f19, f12, dyn # perform operation
fnmadd.d f26, f20, f19, f12, rdn # perform operation
fnmadd.d f26, f20, f19, f12, rmm # perform operation
fnmadd.d f26, f20, f19, f12, rne # perform operation
fnmadd.d f26, f20, f19, f12, rtz # perform operation
fnmadd.d f26, f20, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f20, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f20, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x24, 0xffc5354c0e2dcf48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x2bb818b46e7e31c8 # load x3 with value 0x2bb818b46e7e31c8
sd x3, 0(x2) # store 0x2bb818b46e7e31c8 in memory
fld f18, 0(x2) # load 0x2bb818b46e7e31c8 from memory into f18
fnmadd.d f24, f2, f7, f18, dyn # perform operation
fnmadd.d f24, f2, f7, f18, rdn # perform operation
fnmadd.d f24, f2, f7, f18, rmm # perform operation
fnmadd.d f24, f2, f7, f18, rne # perform operation
fnmadd.d f24, f2, f7, f18, rtz # perform operation
fnmadd.d f24, f2, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f2, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f2, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x24, 0xc3c1f1321c689095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x7cd0216f48211d99 # load x3 with value 0x7cd0216f48211d99
sd x3, 0(x2) # store 0x7cd0216f48211d99 in memory
fld f31, 0(x2) # load 0x7cd0216f48211d99 from memory into f31
fnmadd.d f24, f10, f18, f31, dyn # perform operation
fnmadd.d f24, f10, f18, f31, rdn # perform operation
fnmadd.d f24, f10, f18, f31, rmm # perform operation
fnmadd.d f24, f10, f18, f31, rne # perform operation
fnmadd.d f24, f10, f18, f31, rtz # perform operation
fnmadd.d f24, f10, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f10, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x2, 0xeb1bccf45f783c51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x81e4f435a1c91e02 # load x3 with value 0x81e4f435a1c91e02
sd x3, 0(x2) # store 0x81e4f435a1c91e02 in memory
fld f20, 0(x2) # load 0x81e4f435a1c91e02 from memory into f20
fnmadd.d f2, f9, f23, f20, dyn # perform operation
fnmadd.d f2, f9, f23, f20, rdn # perform operation
fnmadd.d f2, f9, f23, f20, rmm # perform operation
fnmadd.d f2, f9, f23, f20, rne # perform operation
fnmadd.d f2, f9, f23, f20, rtz # perform operation
fnmadd.d f2, f9, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x14, 0x8b44407b45d3c4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x84575a9f2f15810c # load x3 with value 0x84575a9f2f15810c
sd x3, 0(x2) # store 0x84575a9f2f15810c in memory
fld f26, 0(x2) # load 0x84575a9f2f15810c from memory into f26
fnmadd.d f14, f20, f11, f26, dyn # perform operation
fnmadd.d f14, f20, f11, f26, rdn # perform operation
fnmadd.d f14, f20, f11, f26, rmm # perform operation
fnmadd.d f14, f20, f11, f26, rne # perform operation
fnmadd.d f14, f20, f11, f26, rtz # perform operation
fnmadd.d f14, f20, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f20, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x6, 0x560721d234d47931 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x84d8fc6904366b02 # load x3 with value 0x84d8fc6904366b02
sd x3, 0(x2) # store 0x84d8fc6904366b02 in memory
fld f20, 0(x2) # load 0x84d8fc6904366b02 from memory into f20
fnmadd.d f6, f17, f23, f20, dyn # perform operation
fnmadd.d f6, f17, f23, f20, rdn # perform operation
fnmadd.d f6, f17, f23, f20, rmm # perform operation
fnmadd.d f6, f17, f23, f20, rne # perform operation
fnmadd.d f6, f17, f23, f20, rtz # perform operation
fnmadd.d f6, f17, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f17, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x22, 0x35ab63819c2a68e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0xa740d2cffd3f1a43 # load x3 with value 0xa740d2cffd3f1a43
sd x3, 0(x2) # store 0xa740d2cffd3f1a43 in memory
fld f25, 0(x2) # load 0xa740d2cffd3f1a43 from memory into f25
fnmadd.d f22, f6, f2, f25, dyn # perform operation
fnmadd.d f22, f6, f2, f25, rdn # perform operation
fnmadd.d f22, f6, f2, f25, rmm # perform operation
fnmadd.d f22, f6, f2, f25, rne # perform operation
fnmadd.d f22, f6, f2, f25, rtz # perform operation
fnmadd.d f22, f6, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f6, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f6, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f6, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f6, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f6, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x5, 0xf46c42517d7276a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x246bf888914243a6 # load x3 with value 0x246bf888914243a6
sd x3, 0(x2) # store 0x246bf888914243a6 in memory
fld f6, 0(x2) # load 0x246bf888914243a6 from memory into f6
fnmadd.d f5, f12, f4, f6, dyn # perform operation
fnmadd.d f5, f12, f4, f6, rdn # perform operation
fnmadd.d f5, f12, f4, f6, rmm # perform operation
fnmadd.d f5, f12, f4, f6, rne # perform operation
fnmadd.d f5, f12, f4, f6, rtz # perform operation
fnmadd.d f5, f12, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f12, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f12, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f12, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f12, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f12, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x29, 0xac32e29b36f432a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0xd05d55f0de1c6359 # load x3 with value 0xd05d55f0de1c6359
sd x3, 0(x2) # store 0xd05d55f0de1c6359 in memory
fld f2, 0(x2) # load 0xd05d55f0de1c6359 from memory into f2
fnmadd.d f29, f26, f4, f2, dyn # perform operation
fnmadd.d f29, f26, f4, f2, rdn # perform operation
fnmadd.d f29, f26, f4, f2, rmm # perform operation
fnmadd.d f29, f26, f4, f2, rne # perform operation
fnmadd.d f29, f26, f4, f2, rtz # perform operation
fnmadd.d f29, f26, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x25, 0xcd6966adfa91ae41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xddf9c17108586d59 # load x3 with value 0xddf9c17108586d59
sd x3, 0(x2) # store 0xddf9c17108586d59 in memory
fld f31, 0(x2) # load 0xddf9c17108586d59 from memory into f31
fnmadd.d f25, f6, f10, f31, dyn # perform operation
fnmadd.d f25, f6, f10, f31, rdn # perform operation
fnmadd.d f25, f6, f10, f31, rmm # perform operation
fnmadd.d f25, f6, f10, f31, rne # perform operation
fnmadd.d f25, f6, f10, f31, rtz # perform operation
fnmadd.d f25, f6, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x24, 0x7b6d586f9a070ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x6c9d7d2f4b6bde34 # load x3 with value 0x6c9d7d2f4b6bde34
sd x3, 0(x2) # store 0x6c9d7d2f4b6bde34 in memory
fld f17, 0(x2) # load 0x6c9d7d2f4b6bde34 from memory into f17
fnmadd.d f24, f22, f23, f17, dyn # perform operation
fnmadd.d f24, f22, f23, f17, rdn # perform operation
fnmadd.d f24, f22, f23, f17, rmm # perform operation
fnmadd.d f24, f22, f23, f17, rne # perform operation
fnmadd.d f24, f22, f23, f17, rtz # perform operation
fnmadd.d f24, f22, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f22, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x11, 0xb0b6286896bd1e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x55922294ff203eca # load x3 with value 0x55922294ff203eca
sd x3, 0(x2) # store 0x55922294ff203eca in memory
fld f25, 0(x2) # load 0x55922294ff203eca from memory into f25
fnmadd.d f11, f27, f3, f25, dyn # perform operation
fnmadd.d f11, f27, f3, f25, rdn # perform operation
fnmadd.d f11, f27, f3, f25, rmm # perform operation
fnmadd.d f11, f27, f3, f25, rne # perform operation
fnmadd.d f11, f27, f3, f25, rtz # perform operation
fnmadd.d f11, f27, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f27, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f27, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f27, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f27, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f27, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x11, 0x7e42694eb4c591cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x51ab1ae13be1011c # load x3 with value 0x51ab1ae13be1011c
sd x3, 0(x2) # store 0x51ab1ae13be1011c in memory
fld f26, 0(x2) # load 0x51ab1ae13be1011c from memory into f26
fnmadd.d f11, f12, f22, f26, dyn # perform operation
fnmadd.d f11, f12, f22, f26, rdn # perform operation
fnmadd.d f11, f12, f22, f26, rmm # perform operation
fnmadd.d f11, f12, f22, f26, rne # perform operation
fnmadd.d f11, f12, f22, f26, rtz # perform operation
fnmadd.d f11, f12, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f12, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f12, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x7, 0xbb1aa31cf9a4f65e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x07bbb70f971c446e # load x3 with value 0x07bbb70f971c446e
sd x3, 0(x2) # store 0x07bbb70f971c446e in memory
fld f31, 0(x2) # load 0x07bbb70f971c446e from memory into f31
fnmadd.d f7, f19, f16, f31, dyn # perform operation
fnmadd.d f7, f19, f16, f31, rdn # perform operation
fnmadd.d f7, f19, f16, f31, rmm # perform operation
fnmadd.d f7, f19, f16, f31, rne # perform operation
fnmadd.d f7, f19, f16, f31, rtz # perform operation
fnmadd.d f7, f19, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f19, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f19, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x17, 0xb6bcab796a613202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0xb2ee757ab442ce08 # load x3 with value 0xb2ee757ab442ce08
sd x3, 0(x2) # store 0xb2ee757ab442ce08 in memory
fld f25, 0(x2) # load 0xb2ee757ab442ce08 from memory into f25
fnmadd.d f17, f16, f23, f25, dyn # perform operation
fnmadd.d f17, f16, f23, f25, rdn # perform operation
fnmadd.d f17, f16, f23, f25, rmm # perform operation
fnmadd.d f17, f16, f23, f25, rne # perform operation
fnmadd.d f17, f16, f23, f25, rtz # perform operation
fnmadd.d f17, f16, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f16, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x3, 0xe32d2d16b6faa077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0xfbfa6fe02551002c # load x3 with value 0xfbfa6fe02551002c
sd x3, 0(x2) # store 0xfbfa6fe02551002c in memory
fld f28, 0(x2) # load 0xfbfa6fe02551002c from memory into f28
fnmadd.d f3, f17, f24, f28, dyn # perform operation
fnmadd.d f3, f17, f24, f28, rdn # perform operation
fnmadd.d f3, f17, f24, f28, rmm # perform operation
fnmadd.d f3, f17, f24, f28, rne # perform operation
fnmadd.d f3, f17, f24, f28, rtz # perform operation
fnmadd.d f3, f17, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f17, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x29, 0x3a75ef55a69177de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0xae615658f9f366ce # load x3 with value 0xae615658f9f366ce
sd x3, 0(x2) # store 0xae615658f9f366ce in memory
fld f14, 0(x2) # load 0xae615658f9f366ce from memory into f14
fnmadd.d f29, f25, f3, f14, dyn # perform operation
fnmadd.d f29, f25, f3, f14, rdn # perform operation
fnmadd.d f29, f25, f3, f14, rmm # perform operation
fnmadd.d f29, f25, f3, f14, rne # perform operation
fnmadd.d f29, f25, f3, f14, rtz # perform operation
fnmadd.d f29, f25, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f25, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f25, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f25, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f25, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f25, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x2, 0x59dd18c4d30dbac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x65cb07a4fe1e0bbe # load x3 with value 0x65cb07a4fe1e0bbe
sd x3, 0(x2) # store 0x65cb07a4fe1e0bbe in memory
fld f27, 0(x2) # load 0x65cb07a4fe1e0bbe from memory into f27
fnmadd.d f2, f31, f11, f27, dyn # perform operation
fnmadd.d f2, f31, f11, f27, rdn # perform operation
fnmadd.d f2, f31, f11, f27, rmm # perform operation
fnmadd.d f2, f31, f11, f27, rne # perform operation
fnmadd.d f2, f31, f11, f27, rtz # perform operation
fnmadd.d f2, f31, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f31, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x3, 0x4403350887cfe17a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x0317cc78ac5d54df # load x3 with value 0x0317cc78ac5d54df
sd x3, 0(x2) # store 0x0317cc78ac5d54df in memory
fld f12, 0(x2) # load 0x0317cc78ac5d54df from memory into f12
fnmadd.d f3, f17, f9, f12, dyn # perform operation
fnmadd.d f3, f17, f9, f12, rdn # perform operation
fnmadd.d f3, f17, f9, f12, rmm # perform operation
fnmadd.d f3, f17, f9, f12, rne # perform operation
fnmadd.d f3, f17, f9, f12, rtz # perform operation
fnmadd.d f3, f17, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f17, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x6, 0x3ab16a36437c0cae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x506a4d7855092d31 # load x3 with value 0x506a4d7855092d31
sd x3, 0(x2) # store 0x506a4d7855092d31 in memory
fld f27, 0(x2) # load 0x506a4d7855092d31 from memory into f27
fnmadd.d f6, f4, f28, f27, dyn # perform operation
fnmadd.d f6, f4, f28, f27, rdn # perform operation
fnmadd.d f6, f4, f28, f27, rmm # perform operation
fnmadd.d f6, f4, f28, f27, rne # perform operation
fnmadd.d f6, f4, f28, f27, rtz # perform operation
fnmadd.d f6, f4, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f4, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f4, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f4, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f4, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f4, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x7, 0x65d677eda7b71ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0xe9ac600340d04d12 # load x3 with value 0xe9ac600340d04d12
sd x3, 0(x2) # store 0xe9ac600340d04d12 in memory
fld f6, 0(x2) # load 0xe9ac600340d04d12 from memory into f6
fnmadd.d f7, f22, f15, f6, dyn # perform operation
fnmadd.d f7, f22, f15, f6, rdn # perform operation
fnmadd.d f7, f22, f15, f6, rmm # perform operation
fnmadd.d f7, f22, f15, f6, rne # perform operation
fnmadd.d f7, f22, f15, f6, rtz # perform operation
fnmadd.d f7, f22, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f22, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x12, 0xed3ec5ce3b3f4b38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x464837aa5b2595bd # load x3 with value 0x464837aa5b2595bd
sd x3, 0(x2) # store 0x464837aa5b2595bd in memory
fld f2, 0(x2) # load 0x464837aa5b2595bd from memory into f2
fnmadd.d f12, f30, f23, f2, dyn # perform operation
fnmadd.d f12, f30, f23, f2, rdn # perform operation
fnmadd.d f12, f30, f23, f2, rmm # perform operation
fnmadd.d f12, f30, f23, f2, rne # perform operation
fnmadd.d f12, f30, f23, f2, rtz # perform operation
fnmadd.d f12, f30, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x8, 0x781dae6f3fb6cb78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x9b0a04eb8374f313 # load x3 with value 0x9b0a04eb8374f313
sd x3, 0(x2) # store 0x9b0a04eb8374f313 in memory
fld f29, 0(x2) # load 0x9b0a04eb8374f313 from memory into f29
fnmadd.d f8, f30, f14, f29, dyn # perform operation
fnmadd.d f8, f30, f14, f29, rdn # perform operation
fnmadd.d f8, f30, f14, f29, rmm # perform operation
fnmadd.d f8, f30, f14, f29, rne # perform operation
fnmadd.d f8, f30, f14, f29, rtz # perform operation
fnmadd.d f8, f30, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f30, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f30, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x13, 0x1ce0d7187951b74f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x9f2e6996847c6c3f # load x3 with value 0x9f2e6996847c6c3f
sd x3, 0(x2) # store 0x9f2e6996847c6c3f in memory
fld f24, 0(x2) # load 0x9f2e6996847c6c3f from memory into f24
fnmadd.d f13, f22, f30, f24, dyn # perform operation
fnmadd.d f13, f22, f30, f24, rdn # perform operation
fnmadd.d f13, f22, f30, f24, rmm # perform operation
fnmadd.d f13, f22, f30, f24, rne # perform operation
fnmadd.d f13, f22, f30, f24, rtz # perform operation
fnmadd.d f13, f22, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f22, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f22, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x6, 0xc129be95f60ff413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0xe9f891de3860115c # load x3 with value 0xe9f891de3860115c
sd x3, 0(x2) # store 0xe9f891de3860115c in memory
fld f29, 0(x2) # load 0xe9f891de3860115c from memory into f29
fnmadd.d f6, f24, f7, f29, dyn # perform operation
fnmadd.d f6, f24, f7, f29, rdn # perform operation
fnmadd.d f6, f24, f7, f29, rmm # perform operation
fnmadd.d f6, f24, f7, f29, rne # perform operation
fnmadd.d f6, f24, f7, f29, rtz # perform operation
fnmadd.d f6, f24, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f24, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f24, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x4ab09dde668d1dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x180f537dc134cba8 # load x3 with value 0x180f537dc134cba8
sd x3, 0(x2) # store 0x180f537dc134cba8 in memory
fld f24, 0(x2) # load 0x180f537dc134cba8 from memory into f24
fnmadd.d f5, f31, f4, f24, dyn # perform operation
fnmadd.d f5, f31, f4, f24, rdn # perform operation
fnmadd.d f5, f31, f4, f24, rmm # perform operation
fnmadd.d f5, f31, f4, f24, rne # perform operation
fnmadd.d f5, f31, f4, f24, rtz # perform operation
fnmadd.d f5, f31, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x26, 0x3dc1bdbe7f9f14a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0x716cc16de81e4d57 # load x3 with value 0x716cc16de81e4d57
sd x3, 0(x2) # store 0x716cc16de81e4d57 in memory
fld f5, 0(x2) # load 0x716cc16de81e4d57 from memory into f5
fnmadd.d f26, f23, f10, f5, dyn # perform operation
fnmadd.d f26, f23, f10, f5, rdn # perform operation
fnmadd.d f26, f23, f10, f5, rmm # perform operation
fnmadd.d f26, f23, f10, f5, rne # perform operation
fnmadd.d f26, f23, f10, f5, rtz # perform operation
fnmadd.d f26, f23, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f23, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0xc0607de97b1c9413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x0223528dfcf9f651 # load x3 with value 0x0223528dfcf9f651
sd x3, 0(x2) # store 0x0223528dfcf9f651 in memory
fld f18, 0(x2) # load 0x0223528dfcf9f651 from memory into f18
fnmadd.d f3, f4, f29, f18, dyn # perform operation
fnmadd.d f3, f4, f29, f18, rdn # perform operation
fnmadd.d f3, f4, f29, f18, rmm # perform operation
fnmadd.d f3, f4, f29, f18, rne # perform operation
fnmadd.d f3, f4, f29, f18, rtz # perform operation
fnmadd.d f3, f4, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f4, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f4, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x20, 0x2b2d4c556f80c433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x3088ae7317a0cdd3 # load x3 with value 0x3088ae7317a0cdd3
sd x3, 0(x2) # store 0x3088ae7317a0cdd3 in memory
fld f19, 0(x2) # load 0x3088ae7317a0cdd3 from memory into f19
fnmadd.d f20, f18, f16, f19, dyn # perform operation
fnmadd.d f20, f18, f16, f19, rdn # perform operation
fnmadd.d f20, f18, f16, f19, rmm # perform operation
fnmadd.d f20, f18, f16, f19, rne # perform operation
fnmadd.d f20, f18, f16, f19, rtz # perform operation
fnmadd.d f20, f18, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f18, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f18, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f18, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f18, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f18, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x3, 0x9d5db85969ddbf98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x4a4b0c0a6d3d3add # load x3 with value 0x4a4b0c0a6d3d3add
sd x3, 0(x2) # store 0x4a4b0c0a6d3d3add in memory
fld f22, 0(x2) # load 0x4a4b0c0a6d3d3add from memory into f22
fnmadd.d f3, f28, f30, f22, dyn # perform operation
fnmadd.d f3, f28, f30, f22, rdn # perform operation
fnmadd.d f3, f28, f30, f22, rmm # perform operation
fnmadd.d f3, f28, f30, f22, rne # perform operation
fnmadd.d f3, f28, f30, f22, rtz # perform operation
fnmadd.d f3, f28, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f30, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x14, 0x018484a04bb98d78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x94f148d4c68a21a9 # load x3 with value 0x94f148d4c68a21a9
sd x3, 0(x2) # store 0x94f148d4c68a21a9 in memory
fld f13, 0(x2) # load 0x94f148d4c68a21a9 from memory into f13
fnmadd.d f14, f31, f28, f13, dyn # perform operation
fnmadd.d f14, f31, f28, f13, rdn # perform operation
fnmadd.d f14, f31, f28, f13, rmm # perform operation
fnmadd.d f14, f31, f28, f13, rne # perform operation
fnmadd.d f14, f31, f28, f13, rtz # perform operation
fnmadd.d f14, f31, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f31, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x31, 0xe06f6eff20f81803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x65ce0b05ffc207a3 # load x3 with value 0x65ce0b05ffc207a3
sd x3, 0(x2) # store 0x65ce0b05ffc207a3 in memory
fld f18, 0(x2) # load 0x65ce0b05ffc207a3 from memory into f18
fnmadd.d f31, f16, f29, f18, dyn # perform operation
fnmadd.d f31, f16, f29, f18, rdn # perform operation
fnmadd.d f31, f16, f29, f18, rmm # perform operation
fnmadd.d f31, f16, f29, f18, rne # perform operation
fnmadd.d f31, f16, f29, f18, rtz # perform operation
fnmadd.d f31, f16, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f16, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x14, 0x521de83ca8eee1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x203f7cd01991d949 # load x3 with value 0x203f7cd01991d949
sd x3, 0(x2) # store 0x203f7cd01991d949 in memory
fld f15, 0(x2) # load 0x203f7cd01991d949 from memory into f15
fnmadd.d f14, f3, f27, f15, dyn # perform operation
fnmadd.d f14, f3, f27, f15, rdn # perform operation
fnmadd.d f14, f3, f27, f15, rmm # perform operation
fnmadd.d f14, f3, f27, f15, rne # perform operation
fnmadd.d f14, f3, f27, f15, rtz # perform operation
fnmadd.d f14, f3, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f3, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f3, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x27, 0x66a6f7ebdd74890b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x1e665393b56e3360 # load x3 with value 0x1e665393b56e3360
sd x3, 0(x2) # store 0x1e665393b56e3360 in memory
fld f26, 0(x2) # load 0x1e665393b56e3360 from memory into f26
fnmadd.d f27, f30, f14, f26, dyn # perform operation
fnmadd.d f27, f30, f14, f26, rdn # perform operation
fnmadd.d f27, f30, f14, f26, rmm # perform operation
fnmadd.d f27, f30, f14, f26, rne # perform operation
fnmadd.d f27, f30, f14, f26, rtz # perform operation
fnmadd.d f27, f30, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f30, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f30, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x18, 0xd9d4ffeca4ea59fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0xd5e8c0676a01d4b4 # load x3 with value 0xd5e8c0676a01d4b4
sd x3, 0(x2) # store 0xd5e8c0676a01d4b4 in memory
fld f10, 0(x2) # load 0xd5e8c0676a01d4b4 from memory into f10
fnmadd.d f18, f12, f26, f10, dyn # perform operation
fnmadd.d f18, f12, f26, f10, rdn # perform operation
fnmadd.d f18, f12, f26, f10, rmm # perform operation
fnmadd.d f18, f12, f26, f10, rne # perform operation
fnmadd.d f18, f12, f26, f10, rtz # perform operation
fnmadd.d f18, f12, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f12, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f12, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f12, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f12, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f12, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x15, 0x83bd8ae47e216433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x61035b2160f78af8 # load x3 with value 0x61035b2160f78af8
sd x3, 0(x2) # store 0x61035b2160f78af8 in memory
fld f25, 0(x2) # load 0x61035b2160f78af8 from memory into f25
fnmadd.d f15, f30, f28, f25, dyn # perform operation
fnmadd.d f15, f30, f28, f25, rdn # perform operation
fnmadd.d f15, f30, f28, f25, rmm # perform operation
fnmadd.d f15, f30, f28, f25, rne # perform operation
fnmadd.d f15, f30, f28, f25, rtz # perform operation
fnmadd.d f15, f30, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x3, 0x272d81eec8fa2905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xee064ebf78441954 # load x3 with value 0xee064ebf78441954
sd x3, 0(x2) # store 0xee064ebf78441954 in memory
fld f2, 0(x2) # load 0xee064ebf78441954 from memory into f2
fnmadd.d f3, f14, f18, f2, dyn # perform operation
fnmadd.d f3, f14, f18, f2, rdn # perform operation
fnmadd.d f3, f14, f18, f2, rmm # perform operation
fnmadd.d f3, f14, f18, f2, rne # perform operation
fnmadd.d f3, f14, f18, f2, rtz # perform operation
fnmadd.d f3, f14, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f18, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x30, 0x04d4f29eb611a6c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x48ad124882d5bad3 # load x3 with value 0x48ad124882d5bad3
sd x3, 0(x2) # store 0x48ad124882d5bad3 in memory
fld f6, 0(x2) # load 0x48ad124882d5bad3 from memory into f6
fnmadd.d f30, f18, f19, f6, dyn # perform operation
fnmadd.d f30, f18, f19, f6, rdn # perform operation
fnmadd.d f30, f18, f19, f6, rmm # perform operation
fnmadd.d f30, f18, f19, f6, rne # perform operation
fnmadd.d f30, f18, f19, f6, rtz # perform operation
fnmadd.d f30, f18, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f18, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x21, 0x5115c2713a5b0d3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x81ec0b4e16c17c4e # load x3 with value 0x81ec0b4e16c17c4e
sd x3, 0(x2) # store 0x81ec0b4e16c17c4e in memory
fld f26, 0(x2) # load 0x81ec0b4e16c17c4e from memory into f26
fnmadd.d f21, f23, f7, f26, dyn # perform operation
fnmadd.d f21, f23, f7, f26, rdn # perform operation
fnmadd.d f21, f23, f7, f26, rmm # perform operation
fnmadd.d f21, f23, f7, f26, rne # perform operation
fnmadd.d f21, f23, f7, f26, rtz # perform operation
fnmadd.d f21, f23, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f23, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f23, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x30, 0x9f0878cb550ea95f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x46f93bf090be0759 # load x3 with value 0x46f93bf090be0759
sd x3, 0(x2) # store 0x46f93bf090be0759 in memory
fld f22, 0(x2) # load 0x46f93bf090be0759 from memory into f22
fnmadd.d f30, f7, f28, f22, dyn # perform operation
fnmadd.d f30, f7, f28, f22, rdn # perform operation
fnmadd.d f30, f7, f28, f22, rmm # perform operation
fnmadd.d f30, f7, f28, f22, rne # perform operation
fnmadd.d f30, f7, f28, f22, rtz # perform operation
fnmadd.d f30, f7, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f7, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0x2c603a378b948571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x54227e8e1c468231 # load x3 with value 0x54227e8e1c468231
sd x3, 0(x2) # store 0x54227e8e1c468231 in memory
fld f31, 0(x2) # load 0x54227e8e1c468231 from memory into f31
fnmadd.d f7, f24, f29, f31, dyn # perform operation
fnmadd.d f7, f24, f29, f31, rdn # perform operation
fnmadd.d f7, f24, f29, f31, rmm # perform operation
fnmadd.d f7, f24, f29, f31, rne # perform operation
fnmadd.d f7, f24, f29, f31, rtz # perform operation
fnmadd.d f7, f24, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f24, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f24, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f24, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f24, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f24, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x22, 0xf18623b1d149f339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0xf6a0f888376c2a96 # load x3 with value 0xf6a0f888376c2a96
sd x3, 0(x2) # store 0xf6a0f888376c2a96 in memory
fld f18, 0(x2) # load 0xf6a0f888376c2a96 from memory into f18
fnmadd.d f22, f2, f21, f18, dyn # perform operation
fnmadd.d f22, f2, f21, f18, rdn # perform operation
fnmadd.d f22, f2, f21, f18, rmm # perform operation
fnmadd.d f22, f2, f21, f18, rne # perform operation
fnmadd.d f22, f2, f21, f18, rtz # perform operation
fnmadd.d f22, f2, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f2, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f2, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f2, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f2, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f2, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x25, 0x32ace85065e7643a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xf9687a08c0ba0572 # load x3 with value 0xf9687a08c0ba0572
sd x3, 0(x2) # store 0xf9687a08c0ba0572 in memory
fld f2, 0(x2) # load 0xf9687a08c0ba0572 from memory into f2
fnmadd.d f25, f29, f12, f2, dyn # perform operation
fnmadd.d f25, f29, f12, f2, rdn # perform operation
fnmadd.d f25, f29, f12, f2, rmm # perform operation
fnmadd.d f25, f29, f12, f2, rne # perform operation
fnmadd.d f25, f29, f12, f2, rtz # perform operation
fnmadd.d f25, f29, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f29, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x31, 0xcf6bd8480977d383 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xb6d0c7a0f7a6d246 # load x3 with value 0xb6d0c7a0f7a6d246
sd x3, 0(x2) # store 0xb6d0c7a0f7a6d246 in memory
fld f20, 0(x2) # load 0xb6d0c7a0f7a6d246 from memory into f20
fnmadd.d f31, f17, f2, f20, dyn # perform operation
fnmadd.d f31, f17, f2, f20, rdn # perform operation
fnmadd.d f31, f17, f2, f20, rmm # perform operation
fnmadd.d f31, f17, f2, f20, rne # perform operation
fnmadd.d f31, f17, f2, f20, rtz # perform operation
fnmadd.d f31, f17, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f17, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x18, 0xf3d6efe0fd649c9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x7b7621d197c57aea # load x3 with value 0x7b7621d197c57aea
sd x3, 0(x2) # store 0x7b7621d197c57aea in memory
fld f27, 0(x2) # load 0x7b7621d197c57aea from memory into f27
fnmadd.d f18, f17, f8, f27, dyn # perform operation
fnmadd.d f18, f17, f8, f27, rdn # perform operation
fnmadd.d f18, f17, f8, f27, rmm # perform operation
fnmadd.d f18, f17, f8, f27, rne # perform operation
fnmadd.d f18, f17, f8, f27, rtz # perform operation
fnmadd.d f18, f17, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f17, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f17, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f17, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f17, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f17, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x18, 0x9398577fd78d745a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xf894c39be855c8e0 # load x3 with value 0xf894c39be855c8e0
sd x3, 0(x2) # store 0xf894c39be855c8e0 in memory
fld f4, 0(x2) # load 0xf894c39be855c8e0 from memory into f4
fnmadd.d f18, f17, f21, f4, dyn # perform operation
fnmadd.d f18, f17, f21, f4, rdn # perform operation
fnmadd.d f18, f17, f21, f4, rmm # perform operation
fnmadd.d f18, f17, f21, f4, rne # perform operation
fnmadd.d f18, f17, f21, f4, rtz # perform operation
fnmadd.d f18, f17, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f17, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x20, 0xd11bdec4abae628c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x1a469224ec224543 # load x3 with value 0x1a469224ec224543
sd x3, 0(x2) # store 0x1a469224ec224543 in memory
fld f16, 0(x2) # load 0x1a469224ec224543 from memory into f16
fnmadd.d f20, f27, f6, f16, dyn # perform operation
fnmadd.d f20, f27, f6, f16, rdn # perform operation
fnmadd.d f20, f27, f6, f16, rmm # perform operation
fnmadd.d f20, f27, f6, f16, rne # perform operation
fnmadd.d f20, f27, f6, f16, rtz # perform operation
fnmadd.d f20, f27, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f27, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f27, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x6, 0x5d553b183f68ba7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0xd421d9b49e12a4de # load x3 with value 0xd421d9b49e12a4de
sd x3, 0(x2) # store 0xd421d9b49e12a4de in memory
fld f3, 0(x2) # load 0xd421d9b49e12a4de from memory into f3
fnmadd.d f6, f13, f8, f3, dyn # perform operation
fnmadd.d f6, f13, f8, f3, rdn # perform operation
fnmadd.d f6, f13, f8, f3, rmm # perform operation
fnmadd.d f6, f13, f8, f3, rne # perform operation
fnmadd.d f6, f13, f8, f3, rtz # perform operation
fnmadd.d f6, f13, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f13, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x19, 0x36ec4921ef0a4c12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x45aadad5c3812b16 # load x3 with value 0x45aadad5c3812b16
sd x3, 0(x2) # store 0x45aadad5c3812b16 in memory
fld f17, 0(x2) # load 0x45aadad5c3812b16 from memory into f17
fnmadd.d f19, f10, f25, f17, dyn # perform operation
fnmadd.d f19, f10, f25, f17, rdn # perform operation
fnmadd.d f19, f10, f25, f17, rmm # perform operation
fnmadd.d f19, f10, f25, f17, rne # perform operation
fnmadd.d f19, f10, f25, f17, rtz # perform operation
fnmadd.d f19, f10, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f10, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x20, 0xee34ee2f0fd2f19e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x3746068c7f749fe6 # load x3 with value 0x3746068c7f749fe6
sd x3, 0(x2) # store 0x3746068c7f749fe6 in memory
fld f29, 0(x2) # load 0x3746068c7f749fe6 from memory into f29
fnmadd.d f20, f3, f22, f29, dyn # perform operation
fnmadd.d f20, f3, f22, f29, rdn # perform operation
fnmadd.d f20, f3, f22, f29, rmm # perform operation
fnmadd.d f20, f3, f22, f29, rne # perform operation
fnmadd.d f20, f3, f22, f29, rtz # perform operation
fnmadd.d f20, f3, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f3, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f3, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f3, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f3, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f3, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x21, 0x42867e1278d7c960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x71beea6cf2c8595f # load x3 with value 0x71beea6cf2c8595f
sd x3, 0(x2) # store 0x71beea6cf2c8595f in memory
fld f9, 0(x2) # load 0x71beea6cf2c8595f from memory into f9
fnmadd.d f21, f28, f30, f9, dyn # perform operation
fnmadd.d f21, f28, f30, f9, rdn # perform operation
fnmadd.d f21, f28, f30, f9, rmm # perform operation
fnmadd.d f21, f28, f30, f9, rne # perform operation
fnmadd.d f21, f28, f30, f9, rtz # perform operation
fnmadd.d f21, f28, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f28, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f28, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0xb3a9bce6adcef99a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x5080d9fbf4dc748c # load x3 with value 0x5080d9fbf4dc748c
sd x3, 0(x2) # store 0x5080d9fbf4dc748c in memory
fld f30, 0(x2) # load 0x5080d9fbf4dc748c from memory into f30
fnmadd.d f6, f8, f5, f30, dyn # perform operation
fnmadd.d f6, f8, f5, f30, rdn # perform operation
fnmadd.d f6, f8, f5, f30, rmm # perform operation
fnmadd.d f6, f8, f5, f30, rne # perform operation
fnmadd.d f6, f8, f5, f30, rtz # perform operation
fnmadd.d f6, f8, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x9, 0x72bc194acbb1178d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0xc3581a3e3a4a09cd # load x3 with value 0xc3581a3e3a4a09cd
sd x3, 0(x2) # store 0xc3581a3e3a4a09cd in memory
fld f1, 0(x2) # load 0xc3581a3e3a4a09cd from memory into f1
fnmadd.d f9, f18, f13, f1, dyn # perform operation
fnmadd.d f9, f18, f13, f1, rdn # perform operation
fnmadd.d f9, f18, f13, f1, rmm # perform operation
fnmadd.d f9, f18, f13, f1, rne # perform operation
fnmadd.d f9, f18, f13, f1, rtz # perform operation
fnmadd.d f9, f18, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f18, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0x318f885713787182 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x3b1600545f2af634 # load x3 with value 0x3b1600545f2af634
sd x3, 0(x2) # store 0x3b1600545f2af634 in memory
fld f30, 0(x2) # load 0x3b1600545f2af634 from memory into f30
fnmadd.d f1, f7, f11, f30, dyn # perform operation
fnmadd.d f1, f7, f11, f30, rdn # perform operation
fnmadd.d f1, f7, f11, f30, rmm # perform operation
fnmadd.d f1, f7, f11, f30, rne # perform operation
fnmadd.d f1, f7, f11, f30, rtz # perform operation
fnmadd.d f1, f7, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f7, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x28, 0x928510adf7c1f7ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xfaa202ed0840ac87 # load x3 with value 0xfaa202ed0840ac87
sd x3, 0(x2) # store 0xfaa202ed0840ac87 in memory
fld f18, 0(x2) # load 0xfaa202ed0840ac87 from memory into f18
fnmadd.d f28, f11, f16, f18, dyn # perform operation
fnmadd.d f28, f11, f16, f18, rdn # perform operation
fnmadd.d f28, f11, f16, f18, rmm # perform operation
fnmadd.d f28, f11, f16, f18, rne # perform operation
fnmadd.d f28, f11, f16, f18, rtz # perform operation
fnmadd.d f28, f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f11, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x25, 0xa657babe7ec0d41a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x7a409dc2b555009f # load x3 with value 0x7a409dc2b555009f
sd x3, 0(x2) # store 0x7a409dc2b555009f in memory
fld f18, 0(x2) # load 0x7a409dc2b555009f from memory into f18
fnmadd.d f25, f10, f31, f18, dyn # perform operation
fnmadd.d f25, f10, f31, f18, rdn # perform operation
fnmadd.d f25, f10, f31, f18, rmm # perform operation
fnmadd.d f25, f10, f31, f18, rne # perform operation
fnmadd.d f25, f10, f31, f18, rtz # perform operation
fnmadd.d f25, f10, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f10, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x15, 0x09eb40c895609030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x64014b9cca71e928 # load x3 with value 0x64014b9cca71e928
sd x3, 0(x2) # store 0x64014b9cca71e928 in memory
fld f25, 0(x2) # load 0x64014b9cca71e928 from memory into f25
fnmadd.d f15, f30, f7, f25, dyn # perform operation
fnmadd.d f15, f30, f7, f25, rdn # perform operation
fnmadd.d f15, f30, f7, f25, rmm # perform operation
fnmadd.d f15, f30, f7, f25, rne # perform operation
fnmadd.d f15, f30, f7, f25, rtz # perform operation
fnmadd.d f15, f30, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x20, 0xd50ca35052437a02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0xbc89fa8ed5341761 # load x3 with value 0xbc89fa8ed5341761
sd x3, 0(x2) # store 0xbc89fa8ed5341761 in memory
fld f8, 0(x2) # load 0xbc89fa8ed5341761 from memory into f8
fnmadd.d f20, f11, f6, f8, dyn # perform operation
fnmadd.d f20, f11, f6, f8, rdn # perform operation
fnmadd.d f20, f11, f6, f8, rmm # perform operation
fnmadd.d f20, f11, f6, f8, rne # perform operation
fnmadd.d f20, f11, f6, f8, rtz # perform operation
fnmadd.d f20, f11, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f11, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f11, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x8, 0xa920830ef584fb1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0xe4865209273ad88c # load x3 with value 0xe4865209273ad88c
sd x3, 0(x2) # store 0xe4865209273ad88c in memory
fld f12, 0(x2) # load 0xe4865209273ad88c from memory into f12
fnmadd.d f8, f27, f25, f12, dyn # perform operation
fnmadd.d f8, f27, f25, f12, rdn # perform operation
fnmadd.d f8, f27, f25, f12, rmm # perform operation
fnmadd.d f8, f27, f25, f12, rne # perform operation
fnmadd.d f8, f27, f25, f12, rtz # perform operation
fnmadd.d f8, f27, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x17, 0x1ba9d1dc91e7823b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x1f286e5fd2c9b62a # load x3 with value 0x1f286e5fd2c9b62a
sd x3, 0(x2) # store 0x1f286e5fd2c9b62a in memory
fld f12, 0(x2) # load 0x1f286e5fd2c9b62a from memory into f12
fnmadd.d f17, f10, f4, f12, dyn # perform operation
fnmadd.d f17, f10, f4, f12, rdn # perform operation
fnmadd.d f17, f10, f4, f12, rmm # perform operation
fnmadd.d f17, f10, f4, f12, rne # perform operation
fnmadd.d f17, f10, f4, f12, rtz # perform operation
fnmadd.d f17, f10, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x30, 0x4b2158c83d77858a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xcd4402fe1496592a # load x3 with value 0xcd4402fe1496592a
sd x3, 0(x2) # store 0xcd4402fe1496592a in memory
fld f12, 0(x2) # load 0xcd4402fe1496592a from memory into f12
fnmadd.d f30, f17, f9, f12, dyn # perform operation
fnmadd.d f30, f17, f9, f12, rdn # perform operation
fnmadd.d f30, f17, f9, f12, rmm # perform operation
fnmadd.d f30, f17, f9, f12, rne # perform operation
fnmadd.d f30, f17, f9, f12, rtz # perform operation
fnmadd.d f30, f17, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f17, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f17, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x30, 0xe1dbf63693d1689a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x657d63e8e3fca74f # load x3 with value 0x657d63e8e3fca74f
sd x3, 0(x2) # store 0x657d63e8e3fca74f in memory
fld f17, 0(x2) # load 0x657d63e8e3fca74f from memory into f17
fnmadd.d f30, f11, f25, f17, dyn # perform operation
fnmadd.d f30, f11, f25, f17, rdn # perform operation
fnmadd.d f30, f11, f25, f17, rmm # perform operation
fnmadd.d f30, f11, f25, f17, rne # perform operation
fnmadd.d f30, f11, f25, f17, rtz # perform operation
fnmadd.d f30, f11, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f11, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x2, 0xa23bf59c5f8ea10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x351e7067a2b9bcf7 # load x3 with value 0x351e7067a2b9bcf7
sd x3, 0(x2) # store 0x351e7067a2b9bcf7 in memory
fld f31, 0(x2) # load 0x351e7067a2b9bcf7 from memory into f31
fnmadd.d f2, f30, f4, f31, dyn # perform operation
fnmadd.d f2, f30, f4, f31, rdn # perform operation
fnmadd.d f2, f30, f4, f31, rmm # perform operation
fnmadd.d f2, f30, f4, f31, rne # perform operation
fnmadd.d f2, f30, f4, f31, rtz # perform operation
fnmadd.d f2, f30, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f30, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f30, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f30, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f30, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f30, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x4, 0x144b76d35981d95c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0x1c9e8394704fef25 # load x3 with value 0x1c9e8394704fef25
sd x3, 0(x2) # store 0x1c9e8394704fef25 in memory
fld f9, 0(x2) # load 0x1c9e8394704fef25 from memory into f9
fnmadd.d f4, f24, f26, f9, dyn # perform operation
fnmadd.d f4, f24, f26, f9, rdn # perform operation
fnmadd.d f4, f24, f26, f9, rmm # perform operation
fnmadd.d f4, f24, f26, f9, rne # perform operation
fnmadd.d f4, f24, f26, f9, rtz # perform operation
fnmadd.d f4, f24, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f24, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x22, 0x1cbbf5d98114a04d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xcbdaac578a5b2d88 # load x3 with value 0xcbdaac578a5b2d88
sd x3, 0(x2) # store 0xcbdaac578a5b2d88 in memory
fld f16, 0(x2) # load 0xcbdaac578a5b2d88 from memory into f16
fnmadd.d f22, f1, f9, f16, dyn # perform operation
fnmadd.d f22, f1, f9, f16, rdn # perform operation
fnmadd.d f22, f1, f9, f16, rmm # perform operation
fnmadd.d f22, f1, f9, f16, rne # perform operation
fnmadd.d f22, f1, f9, f16, rtz # perform operation
fnmadd.d f22, f1, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f1, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x28, 0xecbaae09204090b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0xde12f3c4c55367fa # load x3 with value 0xde12f3c4c55367fa
sd x3, 0(x2) # store 0xde12f3c4c55367fa in memory
fld f7, 0(x2) # load 0xde12f3c4c55367fa from memory into f7
fnmadd.d f28, f10, f23, f7, dyn # perform operation
fnmadd.d f28, f10, f23, f7, rdn # perform operation
fnmadd.d f28, f10, f23, f7, rmm # perform operation
fnmadd.d f28, f10, f23, f7, rne # perform operation
fnmadd.d f28, f10, f23, f7, rtz # perform operation
fnmadd.d f28, f10, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x567fc305d9f2dc1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x43ab974cf3a81d2b # load x3 with value 0x43ab974cf3a81d2b
sd x3, 0(x2) # store 0x43ab974cf3a81d2b in memory
fld f15, 0(x2) # load 0x43ab974cf3a81d2b from memory into f15
fnmadd.d f18, f31, f27, f15, dyn # perform operation
fnmadd.d f18, f31, f27, f15, rdn # perform operation
fnmadd.d f18, f31, f27, f15, rmm # perform operation
fnmadd.d f18, f31, f27, f15, rne # perform operation
fnmadd.d f18, f31, f27, f15, rtz # perform operation
fnmadd.d f18, f31, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f31, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f31, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x20, 0xea7c0f6c33a61521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x38046d4d7fd6c0e5 # load x3 with value 0x38046d4d7fd6c0e5
sd x3, 0(x2) # store 0x38046d4d7fd6c0e5 in memory
fld f10, 0(x2) # load 0x38046d4d7fd6c0e5 from memory into f10
fnmadd.d f20, f12, f6, f10, dyn # perform operation
fnmadd.d f20, f12, f6, f10, rdn # perform operation
fnmadd.d f20, f12, f6, f10, rmm # perform operation
fnmadd.d f20, f12, f6, f10, rne # perform operation
fnmadd.d f20, f12, f6, f10, rtz # perform operation
fnmadd.d f20, f12, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f12, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x13, 0xe94259c11b4c4715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x6c0ad30e2bb4c6d1 # load x3 with value 0x6c0ad30e2bb4c6d1
sd x3, 0(x2) # store 0x6c0ad30e2bb4c6d1 in memory
fld f19, 0(x2) # load 0x6c0ad30e2bb4c6d1 from memory into f19
fnmadd.d f13, f27, f20, f19, dyn # perform operation
fnmadd.d f13, f27, f20, f19, rdn # perform operation
fnmadd.d f13, f27, f20, f19, rmm # perform operation
fnmadd.d f13, f27, f20, f19, rne # perform operation
fnmadd.d f13, f27, f20, f19, rtz # perform operation
fnmadd.d f13, f27, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f27, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f27, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x8, 0x7b9b66e4ceebe88f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x2c9906d60ed3b7c2 # load x3 with value 0x2c9906d60ed3b7c2
sd x3, 0(x2) # store 0x2c9906d60ed3b7c2 in memory
fld f6, 0(x2) # load 0x2c9906d60ed3b7c2 from memory into f6
fnmadd.d f8, f22, f19, f6, dyn # perform operation
fnmadd.d f8, f22, f19, f6, rdn # perform operation
fnmadd.d f8, f22, f19, f6, rmm # perform operation
fnmadd.d f8, f22, f19, f6, rne # perform operation
fnmadd.d f8, f22, f19, f6, rtz # perform operation
fnmadd.d f8, f22, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f22, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x15, 0xea703c0a380c7202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x5cc8a66fdc834421 # load x3 with value 0x5cc8a66fdc834421
sd x3, 0(x2) # store 0x5cc8a66fdc834421 in memory
fld f25, 0(x2) # load 0x5cc8a66fdc834421 from memory into f25
fnmadd.d f15, f23, f10, f25, dyn # perform operation
fnmadd.d f15, f23, f10, f25, rdn # perform operation
fnmadd.d f15, f23, f10, f25, rmm # perform operation
fnmadd.d f15, f23, f10, f25, rne # perform operation
fnmadd.d f15, f23, f10, f25, rtz # perform operation
fnmadd.d f15, f23, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f23, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f23, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x4, 0x0f735641d1dc8367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xe92984f09d746a19 # load x3 with value 0xe92984f09d746a19
sd x3, 0(x2) # store 0xe92984f09d746a19 in memory
fld f6, 0(x2) # load 0xe92984f09d746a19 from memory into f6
fnmadd.d f4, f15, f23, f6, dyn # perform operation
fnmadd.d f4, f15, f23, f6, rdn # perform operation
fnmadd.d f4, f15, f23, f6, rmm # perform operation
fnmadd.d f4, f15, f23, f6, rne # perform operation
fnmadd.d f4, f15, f23, f6, rtz # perform operation
fnmadd.d f4, f15, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f15, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x23, 0x0c7109f91a4970b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x0c0847a46e047b8d # load x3 with value 0x0c0847a46e047b8d
sd x3, 0(x2) # store 0x0c0847a46e047b8d in memory
fld f26, 0(x2) # load 0x0c0847a46e047b8d from memory into f26
fnmadd.d f23, f25, f21, f26, dyn # perform operation
fnmadd.d f23, f25, f21, f26, rdn # perform operation
fnmadd.d f23, f25, f21, f26, rmm # perform operation
fnmadd.d f23, f25, f21, f26, rne # perform operation
fnmadd.d f23, f25, f21, f26, rtz # perform operation
fnmadd.d f23, f25, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x27, 0xae42d48d9f95fa3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xb4aee554fe44c226 # load x3 with value 0xb4aee554fe44c226
sd x3, 0(x2) # store 0xb4aee554fe44c226 in memory
fld f26, 0(x2) # load 0xb4aee554fe44c226 from memory into f26
fnmadd.d f27, f25, f20, f26, dyn # perform operation
fnmadd.d f27, f25, f20, f26, rdn # perform operation
fnmadd.d f27, f25, f20, f26, rmm # perform operation
fnmadd.d f27, f25, f20, f26, rne # perform operation
fnmadd.d f27, f25, f20, f26, rtz # perform operation
fnmadd.d f27, f25, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f25, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x27, 0xe7c13c1a7738b833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xdd02d55a3af83a4a # load x3 with value 0xdd02d55a3af83a4a
sd x3, 0(x2) # store 0xdd02d55a3af83a4a in memory
fld f23, 0(x2) # load 0xdd02d55a3af83a4a from memory into f23
fnmadd.d f27, f1, f3, f23, dyn # perform operation
fnmadd.d f27, f1, f3, f23, rdn # perform operation
fnmadd.d f27, f1, f3, f23, rmm # perform operation
fnmadd.d f27, f1, f3, f23, rne # perform operation
fnmadd.d f27, f1, f3, f23, rtz # perform operation
fnmadd.d f27, f1, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f1, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f1, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x2, 0x6d30d832fe27e698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x629f7c71a96a40fd # load x3 with value 0x629f7c71a96a40fd
sd x3, 0(x2) # store 0x629f7c71a96a40fd in memory
fld f1, 0(x2) # load 0x629f7c71a96a40fd from memory into f1
fnmadd.d f2, f21, f9, f1, dyn # perform operation
fnmadd.d f2, f21, f9, f1, rdn # perform operation
fnmadd.d f2, f21, f9, f1, rmm # perform operation
fnmadd.d f2, f21, f9, f1, rne # perform operation
fnmadd.d f2, f21, f9, f1, rtz # perform operation
fnmadd.d f2, f21, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x3a6d7833056cc05f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x720c0bdb02ec715e # load x3 with value 0x720c0bdb02ec715e
sd x3, 0(x2) # store 0x720c0bdb02ec715e in memory
fld f5, 0(x2) # load 0x720c0bdb02ec715e from memory into f5
fnmadd.d f10, f20, f17, f5, dyn # perform operation
fnmadd.d f10, f20, f17, f5, rdn # perform operation
fnmadd.d f10, f20, f17, f5, rmm # perform operation
fnmadd.d f10, f20, f17, f5, rne # perform operation
fnmadd.d f10, f20, f17, f5, rtz # perform operation
fnmadd.d f10, f20, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f20, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x4, 0xfb78ce6dd1065ef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x7c8598f585a1081b # load x3 with value 0x7c8598f585a1081b
sd x3, 0(x2) # store 0x7c8598f585a1081b in memory
fld f15, 0(x2) # load 0x7c8598f585a1081b from memory into f15
fnmadd.d f4, f29, f2, f15, dyn # perform operation
fnmadd.d f4, f29, f2, f15, rdn # perform operation
fnmadd.d f4, f29, f2, f15, rmm # perform operation
fnmadd.d f4, f29, f2, f15, rne # perform operation
fnmadd.d f4, f29, f2, f15, rtz # perform operation
fnmadd.d f4, f29, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f29, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x9, 0xd612cd95ffa49239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0xc7c47a3555ffb963 # load x3 with value 0xc7c47a3555ffb963
sd x3, 0(x2) # store 0xc7c47a3555ffb963 in memory
fld f15, 0(x2) # load 0xc7c47a3555ffb963 from memory into f15
fnmadd.d f9, f6, f10, f15, dyn # perform operation
fnmadd.d f9, f6, f10, f15, rdn # perform operation
fnmadd.d f9, f6, f10, f15, rmm # perform operation
fnmadd.d f9, f6, f10, f15, rne # perform operation
fnmadd.d f9, f6, f10, f15, rtz # perform operation
fnmadd.d f9, f6, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f6, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0x821df40b6088cc80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x24abae69f4b0ba37 # load x3 with value 0x24abae69f4b0ba37
sd x3, 0(x2) # store 0x24abae69f4b0ba37 in memory
fld f15, 0(x2) # load 0x24abae69f4b0ba37 from memory into f15
fnmadd.d f30, f5, f29, f15, dyn # perform operation
fnmadd.d f30, f5, f29, f15, rdn # perform operation
fnmadd.d f30, f5, f29, f15, rmm # perform operation
fnmadd.d f30, f5, f29, f15, rne # perform operation
fnmadd.d f30, f5, f29, f15, rtz # perform operation
fnmadd.d f30, f5, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f5, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x16, 0xb2ceb26c499c10b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x3ccaab0d5e9a5887 # load x3 with value 0x3ccaab0d5e9a5887
sd x3, 0(x2) # store 0x3ccaab0d5e9a5887 in memory
fld f21, 0(x2) # load 0x3ccaab0d5e9a5887 from memory into f21
fnmadd.d f16, f2, f20, f21, dyn # perform operation
fnmadd.d f16, f2, f20, f21, rdn # perform operation
fnmadd.d f16, f2, f20, f21, rmm # perform operation
fnmadd.d f16, f2, f20, f21, rne # perform operation
fnmadd.d f16, f2, f20, f21, rtz # perform operation
fnmadd.d f16, f2, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f2, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x28, 0x916477540839f8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0xd25a63a48014ab94 # load x3 with value 0xd25a63a48014ab94
sd x3, 0(x2) # store 0xd25a63a48014ab94 in memory
fld f27, 0(x2) # load 0xd25a63a48014ab94 from memory into f27
fnmadd.d f28, f14, f17, f27, dyn # perform operation
fnmadd.d f28, f14, f17, f27, rdn # perform operation
fnmadd.d f28, f14, f17, f27, rmm # perform operation
fnmadd.d f28, f14, f17, f27, rne # perform operation
fnmadd.d f28, f14, f17, f27, rtz # perform operation
fnmadd.d f28, f14, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f14, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x1, 0xb71637f531d276ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x7a63b57041ae9261 # load x3 with value 0x7a63b57041ae9261
sd x3, 0(x2) # store 0x7a63b57041ae9261 in memory
fld f14, 0(x2) # load 0x7a63b57041ae9261 from memory into f14
fnmadd.d f1, f2, f10, f14, dyn # perform operation
fnmadd.d f1, f2, f10, f14, rdn # perform operation
fnmadd.d f1, f2, f10, f14, rmm # perform operation
fnmadd.d f1, f2, f10, f14, rne # perform operation
fnmadd.d f1, f2, f10, f14, rtz # perform operation
fnmadd.d f1, f2, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f2, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x9, 0x7437c427573551b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xe9c4190fe873e544 # load x3 with value 0xe9c4190fe873e544
sd x3, 0(x2) # store 0xe9c4190fe873e544 in memory
fld f31, 0(x2) # load 0xe9c4190fe873e544 from memory into f31
fnmadd.d f9, f30, f3, f31, dyn # perform operation
fnmadd.d f9, f30, f3, f31, rdn # perform operation
fnmadd.d f9, f30, f3, f31, rmm # perform operation
fnmadd.d f9, f30, f3, f31, rne # perform operation
fnmadd.d f9, f30, f3, f31, rtz # perform operation
fnmadd.d f9, f30, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f30, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x30, 0x367d7ce636bf2435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x5c6d290a33ae2b80 # load x3 with value 0x5c6d290a33ae2b80
sd x3, 0(x2) # store 0x5c6d290a33ae2b80 in memory
fld f22, 0(x2) # load 0x5c6d290a33ae2b80 from memory into f22
fnmadd.d f30, f16, f31, f22, dyn # perform operation
fnmadd.d f30, f16, f31, f22, rdn # perform operation
fnmadd.d f30, f16, f31, f22, rmm # perform operation
fnmadd.d f30, f16, f31, f22, rne # perform operation
fnmadd.d f30, f16, f31, f22, rtz # perform operation
fnmadd.d f30, f16, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f16, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f16, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x24, 0xef9422255aa3ce73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x70ecfb1a5e12b35a # load x3 with value 0x70ecfb1a5e12b35a
sd x3, 0(x2) # store 0x70ecfb1a5e12b35a in memory
fld f6, 0(x2) # load 0x70ecfb1a5e12b35a from memory into f6
fnmadd.d f24, f22, f31, f6, dyn # perform operation
fnmadd.d f24, f22, f31, f6, rdn # perform operation
fnmadd.d f24, f22, f31, f6, rmm # perform operation
fnmadd.d f24, f22, f31, f6, rne # perform operation
fnmadd.d f24, f22, f31, f6, rtz # perform operation
fnmadd.d f24, f22, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f22, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f22, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x4, 0x4012a71ef5f21e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x02b19c1e73b7714c # load x3 with value 0x02b19c1e73b7714c
sd x3, 0(x2) # store 0x02b19c1e73b7714c in memory
fld f1, 0(x2) # load 0x02b19c1e73b7714c from memory into f1
fnmadd.d f4, f18, f25, f1, dyn # perform operation
fnmadd.d f4, f18, f25, f1, rdn # perform operation
fnmadd.d f4, f18, f25, f1, rmm # perform operation
fnmadd.d f4, f18, f25, f1, rne # perform operation
fnmadd.d f4, f18, f25, f1, rtz # perform operation
fnmadd.d f4, f18, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f18, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f18, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f18, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f18, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f18, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x31, 0xb7b4323da2f94617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x1282695e5a18e1a8 # load x3 with value 0x1282695e5a18e1a8
sd x3, 0(x2) # store 0x1282695e5a18e1a8 in memory
fld f1, 0(x2) # load 0x1282695e5a18e1a8 from memory into f1
fnmadd.d f31, f27, f5, f1, dyn # perform operation
fnmadd.d f31, f27, f5, f1, rdn # perform operation
fnmadd.d f31, f27, f5, f1, rmm # perform operation
fnmadd.d f31, f27, f5, f1, rne # perform operation
fnmadd.d f31, f27, f5, f1, rtz # perform operation
fnmadd.d f31, f27, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f27, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f27, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x5, 0x2ea99fec1004069a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x67311d212ffe1f9e # load x3 with value 0x67311d212ffe1f9e
sd x3, 0(x2) # store 0x67311d212ffe1f9e in memory
fld f20, 0(x2) # load 0x67311d212ffe1f9e from memory into f20
fnmadd.d f5, f15, f23, f20, dyn # perform operation
fnmadd.d f5, f15, f23, f20, rdn # perform operation
fnmadd.d f5, f15, f23, f20, rmm # perform operation
fnmadd.d f5, f15, f23, f20, rne # perform operation
fnmadd.d f5, f15, f23, f20, rtz # perform operation
fnmadd.d f5, f15, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f15, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x5, 0x31d9bcd4333565f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0x7968b6f274074cc8 # load x3 with value 0x7968b6f274074cc8
sd x3, 0(x2) # store 0x7968b6f274074cc8 in memory
fld f25, 0(x2) # load 0x7968b6f274074cc8 from memory into f25
fnmadd.d f5, f16, f26, f25, dyn # perform operation
fnmadd.d f5, f16, f26, f25, rdn # perform operation
fnmadd.d f5, f16, f26, f25, rmm # perform operation
fnmadd.d f5, f16, f26, f25, rne # perform operation
fnmadd.d f5, f16, f26, f25, rtz # perform operation
fnmadd.d f5, f16, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f16, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f16, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x29, 0xa95e902fe26abb12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0xe634dd57186d69e4 # load x3 with value 0xe634dd57186d69e4
sd x3, 0(x2) # store 0xe634dd57186d69e4 in memory
fld f9, 0(x2) # load 0xe634dd57186d69e4 from memory into f9
fnmadd.d f29, f7, f16, f9, dyn # perform operation
fnmadd.d f29, f7, f16, f9, rdn # perform operation
fnmadd.d f29, f7, f16, f9, rmm # perform operation
fnmadd.d f29, f7, f16, f9, rne # perform operation
fnmadd.d f29, f7, f16, f9, rtz # perform operation
fnmadd.d f29, f7, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x9, 0x04c5962c3bd2ef0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x95e082b8aa2aa612 # load x3 with value 0x95e082b8aa2aa612
sd x3, 0(x2) # store 0x95e082b8aa2aa612 in memory
fld f30, 0(x2) # load 0x95e082b8aa2aa612 from memory into f30
fnmadd.d f9, f16, f4, f30, dyn # perform operation
fnmadd.d f9, f16, f4, f30, rdn # perform operation
fnmadd.d f9, f16, f4, f30, rmm # perform operation
fnmadd.d f9, f16, f4, f30, rne # perform operation
fnmadd.d f9, f16, f4, f30, rtz # perform operation
fnmadd.d f9, f16, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f16, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x8cec6a030166b78f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x3ee87cfa27c7750d # load x3 with value 0x3ee87cfa27c7750d
sd x3, 0(x2) # store 0x3ee87cfa27c7750d in memory
fld f5, 0(x2) # load 0x3ee87cfa27c7750d from memory into f5
fnmadd.d f15, f30, f2, f5, dyn # perform operation
fnmadd.d f15, f30, f2, f5, rdn # perform operation
fnmadd.d f15, f30, f2, f5, rmm # perform operation
fnmadd.d f15, f30, f2, f5, rne # perform operation
fnmadd.d f15, f30, f2, f5, rtz # perform operation
fnmadd.d f15, f30, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x15, 0x65ff9edf4fb183d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x0a6f94e17b748cd5 # load x3 with value 0x0a6f94e17b748cd5
sd x3, 0(x2) # store 0x0a6f94e17b748cd5 in memory
fld f22, 0(x2) # load 0x0a6f94e17b748cd5 from memory into f22
fnmadd.d f15, f6, f11, f22, dyn # perform operation
fnmadd.d f15, f6, f11, f22, rdn # perform operation
fnmadd.d f15, f6, f11, f22, rmm # perform operation
fnmadd.d f15, f6, f11, f22, rne # perform operation
fnmadd.d f15, f6, f11, f22, rtz # perform operation
fnmadd.d f15, f6, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f6, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f6, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x2, 0xccd2004a9d65b161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x0b83c5f0e5734c68 # load x3 with value 0x0b83c5f0e5734c68
sd x3, 0(x2) # store 0x0b83c5f0e5734c68 in memory
fld f8, 0(x2) # load 0x0b83c5f0e5734c68 from memory into f8
fnmadd.d f2, f27, f9, f8, dyn # perform operation
fnmadd.d f2, f27, f9, f8, rdn # perform operation
fnmadd.d f2, f27, f9, f8, rmm # perform operation
fnmadd.d f2, f27, f9, f8, rne # perform operation
fnmadd.d f2, f27, f9, f8, rtz # perform operation
fnmadd.d f2, f27, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f27, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f27, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x17, 0xa26e9facf15977af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x3ab785436f5122eb # load x3 with value 0x3ab785436f5122eb
sd x3, 0(x2) # store 0x3ab785436f5122eb in memory
fld f20, 0(x2) # load 0x3ab785436f5122eb from memory into f20
fnmadd.d f17, f26, f6, f20, dyn # perform operation
fnmadd.d f17, f26, f6, f20, rdn # perform operation
fnmadd.d f17, f26, f6, f20, rmm # perform operation
fnmadd.d f17, f26, f6, f20, rne # perform operation
fnmadd.d f17, f26, f6, f20, rtz # perform operation
fnmadd.d f17, f26, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f26, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x17, 0x7cee73e38e83a7f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x58dd017f51970e00 # load x3 with value 0x58dd017f51970e00
sd x3, 0(x2) # store 0x58dd017f51970e00 in memory
fld f18, 0(x2) # load 0x58dd017f51970e00 from memory into f18
fnmadd.d f17, f15, f19, f18, dyn # perform operation
fnmadd.d f17, f15, f19, f18, rdn # perform operation
fnmadd.d f17, f15, f19, f18, rmm # perform operation
fnmadd.d f17, f15, f19, f18, rne # perform operation
fnmadd.d f17, f15, f19, f18, rtz # perform operation
fnmadd.d f17, f15, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f15, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f15, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f15, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f15, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f15, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x14, 0xb3d7ae6cd186676e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0xf568ca0a1969f31c # load x3 with value 0xf568ca0a1969f31c
sd x3, 0(x2) # store 0xf568ca0a1969f31c in memory
fld f20, 0(x2) # load 0xf568ca0a1969f31c from memory into f20
fnmadd.d f14, f1, f16, f20, dyn # perform operation
fnmadd.d f14, f1, f16, f20, rdn # perform operation
fnmadd.d f14, f1, f16, f20, rmm # perform operation
fnmadd.d f14, f1, f16, f20, rne # perform operation
fnmadd.d f14, f1, f16, f20, rtz # perform operation
fnmadd.d f14, f1, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f1, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f1, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x30, 0x328d28c03affb794 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0x55ac80260f821e8a # load x3 with value 0x55ac80260f821e8a
sd x3, 0(x2) # store 0x55ac80260f821e8a in memory
fld f25, 0(x2) # load 0x55ac80260f821e8a from memory into f25
fnmadd.d f30, f4, f8, f25, dyn # perform operation
fnmadd.d f30, f4, f8, f25, rdn # perform operation
fnmadd.d f30, f4, f8, f25, rmm # perform operation
fnmadd.d f30, f4, f8, f25, rne # perform operation
fnmadd.d f30, f4, f8, f25, rtz # perform operation
fnmadd.d f30, f4, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f4, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f4, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f4, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f4, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f4, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x19, 0xd5296731d1eeb05d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0xa4dd7dd791b96b45 # load x3 with value 0xa4dd7dd791b96b45
sd x3, 0(x2) # store 0xa4dd7dd791b96b45 in memory
fld f24, 0(x2) # load 0xa4dd7dd791b96b45 from memory into f24
fnmadd.d f19, f3, f1, f24, dyn # perform operation
fnmadd.d f19, f3, f1, f24, rdn # perform operation
fnmadd.d f19, f3, f1, f24, rmm # perform operation
fnmadd.d f19, f3, f1, f24, rne # perform operation
fnmadd.d f19, f3, f1, f24, rtz # perform operation
fnmadd.d f19, f3, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f3, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f3, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f3, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f3, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f3, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x23, 0xcda08de113895c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xbd5c5a9489619db9 # load x3 with value 0xbd5c5a9489619db9
sd x3, 0(x2) # store 0xbd5c5a9489619db9 in memory
fld f13, 0(x2) # load 0xbd5c5a9489619db9 from memory into f13
fnmadd.d f23, f18, f25, f13, dyn # perform operation
fnmadd.d f23, f18, f25, f13, rdn # perform operation
fnmadd.d f23, f18, f25, f13, rmm # perform operation
fnmadd.d f23, f18, f25, f13, rne # perform operation
fnmadd.d f23, f18, f25, f13, rtz # perform operation
fnmadd.d f23, f18, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x19, 0x123b91e6534d4a64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x9ee874ccd8c2b4e9 # load x3 with value 0x9ee874ccd8c2b4e9
sd x3, 0(x2) # store 0x9ee874ccd8c2b4e9 in memory
fld f25, 0(x2) # load 0x9ee874ccd8c2b4e9 from memory into f25
fnmadd.d f19, f11, f6, f25, dyn # perform operation
fnmadd.d f19, f11, f6, f25, rdn # perform operation
fnmadd.d f19, f11, f6, f25, rmm # perform operation
fnmadd.d f19, f11, f6, f25, rne # perform operation
fnmadd.d f19, f11, f6, f25, rtz # perform operation
fnmadd.d f19, f11, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f11, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x28, 0xd52b68db5504d56f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x23ed8e5bca7f444c # load x3 with value 0x23ed8e5bca7f444c
sd x3, 0(x2) # store 0x23ed8e5bca7f444c in memory
fld f2, 0(x2) # load 0x23ed8e5bca7f444c from memory into f2
fnmadd.d f28, f26, f24, f2, dyn # perform operation
fnmadd.d f28, f26, f24, f2, rdn # perform operation
fnmadd.d f28, f26, f24, f2, rmm # perform operation
fnmadd.d f28, f26, f24, f2, rne # perform operation
fnmadd.d f28, f26, f24, f2, rtz # perform operation
fnmadd.d f28, f26, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f26, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x9, 0xd361e51292ee86ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x949235057f7f0626 # load x3 with value 0x949235057f7f0626
sd x3, 0(x2) # store 0x949235057f7f0626 in memory
fld f23, 0(x2) # load 0x949235057f7f0626 from memory into f23
fnmadd.d f9, f4, f3, f23, dyn # perform operation
fnmadd.d f9, f4, f3, f23, rdn # perform operation
fnmadd.d f9, f4, f3, f23, rmm # perform operation
fnmadd.d f9, f4, f3, f23, rne # perform operation
fnmadd.d f9, f4, f3, f23, rtz # perform operation
fnmadd.d f9, f4, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f4, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x10, 0xdd22ab599f3f517d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x289ff1dbe0489934 # load x3 with value 0x289ff1dbe0489934
sd x3, 0(x2) # store 0x289ff1dbe0489934 in memory
fld f16, 0(x2) # load 0x289ff1dbe0489934 from memory into f16
fnmadd.d f10, f9, f6, f16, dyn # perform operation
fnmadd.d f10, f9, f6, f16, rdn # perform operation
fnmadd.d f10, f9, f6, f16, rmm # perform operation
fnmadd.d f10, f9, f6, f16, rne # perform operation
fnmadd.d f10, f9, f6, f16, rtz # perform operation
fnmadd.d f10, f9, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f9, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f9, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f9, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f9, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f9, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x26, 0xe8ecfce2446928bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xafa5f6c7f5931deb # load x3 with value 0xafa5f6c7f5931deb
sd x3, 0(x2) # store 0xafa5f6c7f5931deb in memory
fld f8, 0(x2) # load 0xafa5f6c7f5931deb from memory into f8
fnmadd.d f26, f10, f24, f8, dyn # perform operation
fnmadd.d f26, f10, f24, f8, rdn # perform operation
fnmadd.d f26, f10, f24, f8, rmm # perform operation
fnmadd.d f26, f10, f24, f8, rne # perform operation
fnmadd.d f26, f10, f24, f8, rtz # perform operation
fnmadd.d f26, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f10, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x1, 0xe0a13cf2342ce2b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0x97b302de022dc272 # load x3 with value 0x97b302de022dc272
sd x3, 0(x2) # store 0x97b302de022dc272 in memory
fld f29, 0(x2) # load 0x97b302de022dc272 from memory into f29
fnmadd.d f1, f23, f19, f29, dyn # perform operation
fnmadd.d f1, f23, f19, f29, rdn # perform operation
fnmadd.d f1, f23, f19, f29, rmm # perform operation
fnmadd.d f1, f23, f19, f29, rne # perform operation
fnmadd.d f1, f23, f19, f29, rtz # perform operation
fnmadd.d f1, f23, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f23, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x10, 0x1bae3c8593225614 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0xd9209b0fb3c9246a # load x3 with value 0xd9209b0fb3c9246a
sd x3, 0(x2) # store 0xd9209b0fb3c9246a in memory
fld f12, 0(x2) # load 0xd9209b0fb3c9246a from memory into f12
fnmadd.d f10, f14, f27, f12, dyn # perform operation
fnmadd.d f10, f14, f27, f12, rdn # perform operation
fnmadd.d f10, f14, f27, f12, rmm # perform operation
fnmadd.d f10, f14, f27, f12, rne # perform operation
fnmadd.d f10, f14, f27, f12, rtz # perform operation
fnmadd.d f10, f14, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f14, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f14, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f14, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f14, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f14, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x19, 0x1ad68d6755b23d02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x251b2b8f88802789 # load x3 with value 0x251b2b8f88802789
sd x3, 0(x2) # store 0x251b2b8f88802789 in memory
fld f11, 0(x2) # load 0x251b2b8f88802789 from memory into f11
fnmadd.d f19, f25, f8, f11, dyn # perform operation
fnmadd.d f19, f25, f8, f11, rdn # perform operation
fnmadd.d f19, f25, f8, f11, rmm # perform operation
fnmadd.d f19, f25, f8, f11, rne # perform operation
fnmadd.d f19, f25, f8, f11, rtz # perform operation
fnmadd.d f19, f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f25, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x9, 0xd5a5d2959666f551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0x860ceb3e35f76d29 # load x3 with value 0x860ceb3e35f76d29
sd x3, 0(x2) # store 0x860ceb3e35f76d29 in memory
fld f1, 0(x2) # load 0x860ceb3e35f76d29 from memory into f1
fnmadd.d f9, f31, f28, f1, dyn # perform operation
fnmadd.d f9, f31, f28, f1, rdn # perform operation
fnmadd.d f9, f31, f28, f1, rmm # perform operation
fnmadd.d f9, f31, f28, f1, rne # perform operation
fnmadd.d f9, f31, f28, f1, rtz # perform operation
fnmadd.d f9, f31, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f31, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f31, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f31, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f31, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f31, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x14, 0xbbe3c01c235985ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0xb35d96241217446a # load x3 with value 0xb35d96241217446a
sd x3, 0(x2) # store 0xb35d96241217446a in memory
fld f24, 0(x2) # load 0xb35d96241217446a from memory into f24
fnmadd.d f14, f26, f19, f24, dyn # perform operation
fnmadd.d f14, f26, f19, f24, rdn # perform operation
fnmadd.d f14, f26, f19, f24, rmm # perform operation
fnmadd.d f14, f26, f19, f24, rne # perform operation
fnmadd.d f14, f26, f19, f24, rtz # perform operation
fnmadd.d f14, f26, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f26, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x21, 0xb1c6cce65711a5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xf2a3ca82fa64453d # load x3 with value 0xf2a3ca82fa64453d
sd x3, 0(x2) # store 0xf2a3ca82fa64453d in memory
fld f29, 0(x2) # load 0xf2a3ca82fa64453d from memory into f29
fnmadd.d f21, f22, f20, f29, dyn # perform operation
fnmadd.d f21, f22, f20, f29, rdn # perform operation
fnmadd.d f21, f22, f20, f29, rmm # perform operation
fnmadd.d f21, f22, f20, f29, rne # perform operation
fnmadd.d f21, f22, f20, f29, rtz # perform operation
fnmadd.d f21, f22, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f22, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x9, 0x0bbf53653b6ce23a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x00596dc6e87ad832 # load x3 with value 0x00596dc6e87ad832
sd x3, 0(x2) # store 0x00596dc6e87ad832 in memory
fld f19, 0(x2) # load 0x00596dc6e87ad832 from memory into f19
fnmadd.d f9, f23, f22, f19, dyn # perform operation
fnmadd.d f9, f23, f22, f19, rdn # perform operation
fnmadd.d f9, f23, f22, f19, rmm # perform operation
fnmadd.d f9, f23, f22, f19, rne # perform operation
fnmadd.d f9, f23, f22, f19, rtz # perform operation
fnmadd.d f9, f23, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f23, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f23, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x29, 0x4f795ba64aecbddc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0xfae893426bbce23e # load x3 with value 0xfae893426bbce23e
sd x3, 0(x2) # store 0xfae893426bbce23e in memory
fld f3, 0(x2) # load 0xfae893426bbce23e from memory into f3
fnmadd.d f29, f30, f5, f3, dyn # perform operation
fnmadd.d f29, f30, f5, f3, rdn # perform operation
fnmadd.d f29, f30, f5, f3, rmm # perform operation
fnmadd.d f29, f30, f5, f3, rne # perform operation
fnmadd.d f29, f30, f5, f3, rtz # perform operation
fnmadd.d f29, f30, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f30, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x25, 0xf0492bf84d41994d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0xf84f268df55f9ffc # load x3 with value 0xf84f268df55f9ffc
sd x3, 0(x2) # store 0xf84f268df55f9ffc in memory
fld f8, 0(x2) # load 0xf84f268df55f9ffc from memory into f8
fnmadd.d f25, f2, f18, f8, dyn # perform operation
fnmadd.d f25, f2, f18, f8, rdn # perform operation
fnmadd.d f25, f2, f18, f8, rmm # perform operation
fnmadd.d f25, f2, f18, f8, rne # perform operation
fnmadd.d f25, f2, f18, f8, rtz # perform operation
fnmadd.d f25, f2, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f2, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f2, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f2, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f2, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f2, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x24, 0x1125d52c3faee312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x23fe339e89b5808c # load x3 with value 0x23fe339e89b5808c
sd x3, 0(x2) # store 0x23fe339e89b5808c in memory
fld f15, 0(x2) # load 0x23fe339e89b5808c from memory into f15
fnmadd.d f24, f21, f30, f15, dyn # perform operation
fnmadd.d f24, f21, f30, f15, rdn # perform operation
fnmadd.d f24, f21, f30, f15, rmm # perform operation
fnmadd.d f24, f21, f30, f15, rne # perform operation
fnmadd.d f24, f21, f30, f15, rtz # perform operation
fnmadd.d f24, f21, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f21, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x29, 0xf817a90f0362faae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x527b36425f83208d # load x3 with value 0x527b36425f83208d
sd x3, 0(x2) # store 0x527b36425f83208d in memory
fld f12, 0(x2) # load 0x527b36425f83208d from memory into f12
fnmadd.d f29, f19, f6, f12, dyn # perform operation
fnmadd.d f29, f19, f6, f12, rdn # perform operation
fnmadd.d f29, f19, f6, f12, rmm # perform operation
fnmadd.d f29, f19, f6, f12, rne # perform operation
fnmadd.d f29, f19, f6, f12, rtz # perform operation
fnmadd.d f29, f19, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f19, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x5, 0x0beb559c2dc2a31e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xfaa3d396b8441119 # load x3 with value 0xfaa3d396b8441119
sd x3, 0(x2) # store 0xfaa3d396b8441119 in memory
fld f21, 0(x2) # load 0xfaa3d396b8441119 from memory into f21
fnmadd.d f5, f13, f4, f21, dyn # perform operation
fnmadd.d f5, f13, f4, f21, rdn # perform operation
fnmadd.d f5, f13, f4, f21, rmm # perform operation
fnmadd.d f5, f13, f4, f21, rne # perform operation
fnmadd.d f5, f13, f4, f21, rtz # perform operation
fnmadd.d f5, f13, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f13, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x31, 0x08ca3446a2d63fff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x458b2e650c190679 # load x3 with value 0x458b2e650c190679
sd x3, 0(x2) # store 0x458b2e650c190679 in memory
fld f12, 0(x2) # load 0x458b2e650c190679 from memory into f12
fnmadd.d f31, f26, f8, f12, dyn # perform operation
fnmadd.d f31, f26, f8, f12, rdn # perform operation
fnmadd.d f31, f26, f8, f12, rmm # perform operation
fnmadd.d f31, f26, f8, f12, rne # perform operation
fnmadd.d f31, f26, f8, f12, rtz # perform operation
fnmadd.d f31, f26, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f26, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f26, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x15, 0x5404ef2c9d65e2d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x9b4030a72607b74b # load x3 with value 0x9b4030a72607b74b
sd x3, 0(x2) # store 0x9b4030a72607b74b in memory
fld f20, 0(x2) # load 0x9b4030a72607b74b from memory into f20
fnmadd.d f15, f30, f7, f20, dyn # perform operation
fnmadd.d f15, f30, f7, f20, rdn # perform operation
fnmadd.d f15, f30, f7, f20, rmm # perform operation
fnmadd.d f15, f30, f7, f20, rne # perform operation
fnmadd.d f15, f30, f7, f20, rtz # perform operation
fnmadd.d f15, f30, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x25, 0x471bee695c39823c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0xdf6be54c9751cf6f # load x3 with value 0xdf6be54c9751cf6f
sd x3, 0(x2) # store 0xdf6be54c9751cf6f in memory
fld f22, 0(x2) # load 0xdf6be54c9751cf6f from memory into f22
fnmadd.d f25, f20, f27, f22, dyn # perform operation
fnmadd.d f25, f20, f27, f22, rdn # perform operation
fnmadd.d f25, f20, f27, f22, rmm # perform operation
fnmadd.d f25, f20, f27, f22, rne # perform operation
fnmadd.d f25, f20, f27, f22, rtz # perform operation
fnmadd.d f25, f20, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f20, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x26, 0x612d1044330e1ea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x1f4e3573f7e7fe62 # load x3 with value 0x1f4e3573f7e7fe62
sd x3, 0(x2) # store 0x1f4e3573f7e7fe62 in memory
fld f25, 0(x2) # load 0x1f4e3573f7e7fe62 from memory into f25
fnmadd.d f26, f8, f4, f25, dyn # perform operation
fnmadd.d f26, f8, f4, f25, rdn # perform operation
fnmadd.d f26, f8, f4, f25, rmm # perform operation
fnmadd.d f26, f8, f4, f25, rne # perform operation
fnmadd.d f26, f8, f4, f25, rtz # perform operation
fnmadd.d f26, f8, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f8, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x26, 0x9879e7a9c044a119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0xe20aa0c440cc06b2 # load x3 with value 0xe20aa0c440cc06b2
sd x3, 0(x2) # store 0xe20aa0c440cc06b2 in memory
fld f16, 0(x2) # load 0xe20aa0c440cc06b2 from memory into f16
fnmadd.d f26, f28, f10, f16, dyn # perform operation
fnmadd.d f26, f28, f10, f16, rdn # perform operation
fnmadd.d f26, f28, f10, f16, rmm # perform operation
fnmadd.d f26, f28, f10, f16, rne # perform operation
fnmadd.d f26, f28, f10, f16, rtz # perform operation
fnmadd.d f26, f28, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f28, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f28, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f28, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f28, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f28, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x6, 0x4fb90f4653b612ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xd0e8278cc7463fbc # load x3 with value 0xd0e8278cc7463fbc
sd x3, 0(x2) # store 0xd0e8278cc7463fbc in memory
fld f30, 0(x2) # load 0xd0e8278cc7463fbc from memory into f30
fnmadd.d f6, f18, f27, f30, dyn # perform operation
fnmadd.d f6, f18, f27, f30, rdn # perform operation
fnmadd.d f6, f18, f27, f30, rmm # perform operation
fnmadd.d f6, f18, f27, f30, rne # perform operation
fnmadd.d f6, f18, f27, f30, rtz # perform operation
fnmadd.d f6, f18, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f18, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f18, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f18, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f18, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f18, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x6, 0xe7ea73fde961bb0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x4b490bb611b40f7d # load x3 with value 0x4b490bb611b40f7d
sd x3, 0(x2) # store 0x4b490bb611b40f7d in memory
fld f7, 0(x2) # load 0x4b490bb611b40f7d from memory into f7
fnmadd.d f6, f10, f22, f7, dyn # perform operation
fnmadd.d f6, f10, f22, f7, rdn # perform operation
fnmadd.d f6, f10, f22, f7, rmm # perform operation
fnmadd.d f6, f10, f22, f7, rne # perform operation
fnmadd.d f6, f10, f22, f7, rtz # perform operation
fnmadd.d f6, f10, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f10, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f10, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f10, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f10, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f10, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x1, 0xd37b228b713aad09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xeda55dad340106de # load x3 with value 0xeda55dad340106de
sd x3, 0(x2) # store 0xeda55dad340106de in memory
fld f23, 0(x2) # load 0xeda55dad340106de from memory into f23
fnmadd.d f1, f9, f20, f23, dyn # perform operation
fnmadd.d f1, f9, f20, f23, rdn # perform operation
fnmadd.d f1, f9, f20, f23, rmm # perform operation
fnmadd.d f1, f9, f20, f23, rne # perform operation
fnmadd.d f1, f9, f20, f23, rtz # perform operation
fnmadd.d f1, f9, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f9, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x18, 0x51a18c49345e8763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x45319c9ee7c7cc34 # load x3 with value 0x45319c9ee7c7cc34
sd x3, 0(x2) # store 0x45319c9ee7c7cc34 in memory
fld f26, 0(x2) # load 0x45319c9ee7c7cc34 from memory into f26
fnmadd.d f18, f15, f31, f26, dyn # perform operation
fnmadd.d f18, f15, f31, f26, rdn # perform operation
fnmadd.d f18, f15, f31, f26, rmm # perform operation
fnmadd.d f18, f15, f31, f26, rne # perform operation
fnmadd.d f18, f15, f31, f26, rtz # perform operation
fnmadd.d f18, f15, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f15, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f15, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x7, 0x038bbb0cb9e5d190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x267efaa8bbd5c36e # load x3 with value 0x267efaa8bbd5c36e
sd x3, 0(x2) # store 0x267efaa8bbd5c36e in memory
fld f23, 0(x2) # load 0x267efaa8bbd5c36e from memory into f23
fnmadd.d f7, f28, f25, f23, dyn # perform operation
fnmadd.d f7, f28, f25, f23, rdn # perform operation
fnmadd.d f7, f28, f25, f23, rmm # perform operation
fnmadd.d f7, f28, f25, f23, rne # perform operation
fnmadd.d f7, f28, f25, f23, rtz # perform operation
fnmadd.d f7, f28, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f28, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f28, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x2, 0x9e9a7b4750d9a120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0xf1feeb2ffd4a6dcb # load x3 with value 0xf1feeb2ffd4a6dcb
sd x3, 0(x2) # store 0xf1feeb2ffd4a6dcb in memory
fld f31, 0(x2) # load 0xf1feeb2ffd4a6dcb from memory into f31
fnmadd.d f2, f28, f3, f31, dyn # perform operation
fnmadd.d f2, f28, f3, f31, rdn # perform operation
fnmadd.d f2, f28, f3, f31, rmm # perform operation
fnmadd.d f2, f28, f3, f31, rne # perform operation
fnmadd.d f2, f28, f3, f31, rtz # perform operation
fnmadd.d f2, f28, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f28, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x19, 0x430b35a0dd4b42c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x5e4c1970783bce7a # load x3 with value 0x5e4c1970783bce7a
sd x3, 0(x2) # store 0x5e4c1970783bce7a in memory
fld f20, 0(x2) # load 0x5e4c1970783bce7a from memory into f20
fnmadd.d f19, f30, f12, f20, dyn # perform operation
fnmadd.d f19, f30, f12, f20, rdn # perform operation
fnmadd.d f19, f30, f12, f20, rmm # perform operation
fnmadd.d f19, f30, f12, f20, rne # perform operation
fnmadd.d f19, f30, f12, f20, rtz # perform operation
fnmadd.d f19, f30, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f30, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x25, 0xbc19a0290863ee7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x99b9c676d5cea0ba # load x3 with value 0x99b9c676d5cea0ba
sd x3, 0(x2) # store 0x99b9c676d5cea0ba in memory
fld f13, 0(x2) # load 0x99b9c676d5cea0ba from memory into f13
fnmadd.d f25, f8, f3, f13, dyn # perform operation
fnmadd.d f25, f8, f3, f13, rdn # perform operation
fnmadd.d f25, f8, f3, f13, rmm # perform operation
fnmadd.d f25, f8, f3, f13, rne # perform operation
fnmadd.d f25, f8, f3, f13, rtz # perform operation
fnmadd.d f25, f8, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f8, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0xbc2a641e8ee4ffb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xcca282df34560f55 # load x3 with value 0xcca282df34560f55
sd x3, 0(x2) # store 0xcca282df34560f55 in memory
fld f19, 0(x2) # load 0xcca282df34560f55 from memory into f19
fnmadd.d f3, f7, f28, f19, dyn # perform operation
fnmadd.d f3, f7, f28, f19, rdn # perform operation
fnmadd.d f3, f7, f28, f19, rmm # perform operation
fnmadd.d f3, f7, f28, f19, rne # perform operation
fnmadd.d f3, f7, f28, f19, rtz # perform operation
fnmadd.d f3, f7, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f7, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f7, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0x912f58a6e393f6b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0xf96d468042e7df12 # load x3 with value 0xf96d468042e7df12
sd x3, 0(x2) # store 0xf96d468042e7df12 in memory
fld f26, 0(x2) # load 0xf96d468042e7df12 from memory into f26
fnmadd.d f31, f21, f11, f26, dyn # perform operation
fnmadd.d f31, f21, f11, f26, rdn # perform operation
fnmadd.d f31, f21, f11, f26, rmm # perform operation
fnmadd.d f31, f21, f11, f26, rne # perform operation
fnmadd.d f31, f21, f11, f26, rtz # perform operation
fnmadd.d f31, f21, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f21, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f21, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x3, 0x747acd6dcbe698e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x724e5c2b0bbca022 # load x3 with value 0x724e5c2b0bbca022
sd x3, 0(x2) # store 0x724e5c2b0bbca022 in memory
fld f25, 0(x2) # load 0x724e5c2b0bbca022 from memory into f25
fnmadd.d f3, f29, f15, f25, dyn # perform operation
fnmadd.d f3, f29, f15, f25, rdn # perform operation
fnmadd.d f3, f29, f15, f25, rmm # perform operation
fnmadd.d f3, f29, f15, f25, rne # perform operation
fnmadd.d f3, f29, f15, f25, rtz # perform operation
fnmadd.d f3, f29, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f29, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x29, 0x0b7a54bfccc3ced8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x930da15ddda28dbb # load x3 with value 0x930da15ddda28dbb
sd x3, 0(x2) # store 0x930da15ddda28dbb in memory
fld f23, 0(x2) # load 0x930da15ddda28dbb from memory into f23
fnmadd.d f29, f26, f21, f23, dyn # perform operation
fnmadd.d f29, f26, f21, f23, rdn # perform operation
fnmadd.d f29, f26, f21, f23, rmm # perform operation
fnmadd.d f29, f26, f21, f23, rne # perform operation
fnmadd.d f29, f26, f21, f23, rtz # perform operation
fnmadd.d f29, f26, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x2, 0x5eb57ff50b06fae7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x3285fc57d999ea34 # load x3 with value 0x3285fc57d999ea34
sd x3, 0(x2) # store 0x3285fc57d999ea34 in memory
fld f7, 0(x2) # load 0x3285fc57d999ea34 from memory into f7
fnmadd.d f2, f26, f27, f7, dyn # perform operation
fnmadd.d f2, f26, f27, f7, rdn # perform operation
fnmadd.d f2, f26, f27, f7, rmm # perform operation
fnmadd.d f2, f26, f27, f7, rne # perform operation
fnmadd.d f2, f26, f27, f7, rtz # perform operation
fnmadd.d f2, f26, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f26, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f26, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f26, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f26, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f26, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x29, 0xa2dc6e32c7303cea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0xb9dfebb9b43706d2 # load x3 with value 0xb9dfebb9b43706d2
sd x3, 0(x2) # store 0xb9dfebb9b43706d2 in memory
fld f31, 0(x2) # load 0xb9dfebb9b43706d2 from memory into f31
fnmadd.d f29, f15, f22, f31, dyn # perform operation
fnmadd.d f29, f15, f22, f31, rdn # perform operation
fnmadd.d f29, f15, f22, f31, rmm # perform operation
fnmadd.d f29, f15, f22, f31, rne # perform operation
fnmadd.d f29, f15, f22, f31, rtz # perform operation
fnmadd.d f29, f15, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f15, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x21, 0x103c23301435d0e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x944e44d384f8f7e6 # load x3 with value 0x944e44d384f8f7e6
sd x3, 0(x2) # store 0x944e44d384f8f7e6 in memory
fld f10, 0(x2) # load 0x944e44d384f8f7e6 from memory into f10
fnmadd.d f21, f26, f7, f10, dyn # perform operation
fnmadd.d f21, f26, f7, f10, rdn # perform operation
fnmadd.d f21, f26, f7, f10, rmm # perform operation
fnmadd.d f21, f26, f7, f10, rne # perform operation
fnmadd.d f21, f26, f7, f10, rtz # perform operation
fnmadd.d f21, f26, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f26, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f26, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f26, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f26, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f26, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x26, 0xbce49d2a8d3f94af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x89344919aabe3b48 # load x3 with value 0x89344919aabe3b48
sd x3, 0(x2) # store 0x89344919aabe3b48 in memory
fld f28, 0(x2) # load 0x89344919aabe3b48 from memory into f28
fnmadd.d f26, f31, f22, f28, dyn # perform operation
fnmadd.d f26, f31, f22, f28, rdn # perform operation
fnmadd.d f26, f31, f22, f28, rmm # perform operation
fnmadd.d f26, f31, f22, f28, rne # perform operation
fnmadd.d f26, f31, f22, f28, rtz # perform operation
fnmadd.d f26, f31, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f31, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x4, 0x9289b6c3545b8d0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0xbfdbde0614556580 # load x3 with value 0xbfdbde0614556580
sd x3, 0(x2) # store 0xbfdbde0614556580 in memory
fld f1, 0(x2) # load 0xbfdbde0614556580 from memory into f1
fnmadd.d f4, f30, f11, f1, dyn # perform operation
fnmadd.d f4, f30, f11, f1, rdn # perform operation
fnmadd.d f4, f30, f11, f1, rmm # perform operation
fnmadd.d f4, f30, f11, f1, rne # perform operation
fnmadd.d f4, f30, f11, f1, rtz # perform operation
fnmadd.d f4, f30, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f30, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x14, 0x492797026fb7c9a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x5de31a688e824e1e # load x3 with value 0x5de31a688e824e1e
sd x3, 0(x2) # store 0x5de31a688e824e1e in memory
fld f21, 0(x2) # load 0x5de31a688e824e1e from memory into f21
fnmadd.d f14, f29, f8, f21, dyn # perform operation
fnmadd.d f14, f29, f8, f21, rdn # perform operation
fnmadd.d f14, f29, f8, f21, rmm # perform operation
fnmadd.d f14, f29, f8, f21, rne # perform operation
fnmadd.d f14, f29, f8, f21, rtz # perform operation
fnmadd.d f14, f29, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f29, f8, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x26, 0xa0ea57100f406095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x31785d18b57a5444 # load x3 with value 0x31785d18b57a5444
sd x3, 0(x2) # store 0x31785d18b57a5444 in memory
fld f20, 0(x2) # load 0x31785d18b57a5444 from memory into f20
fnmadd.d f26, f16, f29, f20, dyn # perform operation
fnmadd.d f26, f16, f29, f20, rdn # perform operation
fnmadd.d f26, f16, f29, f20, rmm # perform operation
fnmadd.d f26, f16, f29, f20, rne # perform operation
fnmadd.d f26, f16, f29, f20, rtz # perform operation
fnmadd.d f26, f16, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f16, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f16, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x1, 0xd3bde3277b19f3ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x7b8e1d1fa6ba6425 # load x3 with value 0x7b8e1d1fa6ba6425
sd x3, 0(x2) # store 0x7b8e1d1fa6ba6425 in memory
fld f10, 0(x2) # load 0x7b8e1d1fa6ba6425 from memory into f10
fnmadd.d f1, f20, f14, f10, dyn # perform operation
fnmadd.d f1, f20, f14, f10, rdn # perform operation
fnmadd.d f1, f20, f14, f10, rmm # perform operation
fnmadd.d f1, f20, f14, f10, rne # perform operation
fnmadd.d f1, f20, f14, f10, rtz # perform operation
fnmadd.d f1, f20, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f20, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f20, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x14, 0xed7d28fa2f60fe53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xe80f1be1c6af10c2 # load x3 with value 0xe80f1be1c6af10c2
sd x3, 0(x2) # store 0xe80f1be1c6af10c2 in memory
fld f29, 0(x2) # load 0xe80f1be1c6af10c2 from memory into f29
fnmadd.d f14, f1, f24, f29, dyn # perform operation
fnmadd.d f14, f1, f24, f29, rdn # perform operation
fnmadd.d f14, f1, f24, f29, rmm # perform operation
fnmadd.d f14, f1, f24, f29, rne # perform operation
fnmadd.d f14, f1, f24, f29, rtz # perform operation
fnmadd.d f14, f1, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f1, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f1, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x231563442df1bb29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x8e9e12d314b35288 # load x3 with value 0x8e9e12d314b35288
sd x3, 0(x2) # store 0x8e9e12d314b35288 in memory
fld f4, 0(x2) # load 0x8e9e12d314b35288 from memory into f4
fnmadd.d f15, f9, f2, f4, dyn # perform operation
fnmadd.d f15, f9, f2, f4, rdn # perform operation
fnmadd.d f15, f9, f2, f4, rmm # perform operation
fnmadd.d f15, f9, f2, f4, rne # perform operation
fnmadd.d f15, f9, f2, f4, rtz # perform operation
fnmadd.d f15, f9, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f9, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f9, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f9, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f9, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f9, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x3, 0xea6a524e6d7bd387 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x2b2b0d42fb31cf76 # load x3 with value 0x2b2b0d42fb31cf76
sd x3, 0(x2) # store 0x2b2b0d42fb31cf76 in memory
fld f15, 0(x2) # load 0x2b2b0d42fb31cf76 from memory into f15
fnmadd.d f3, f7, f11, f15, dyn # perform operation
fnmadd.d f3, f7, f11, f15, rdn # perform operation
fnmadd.d f3, f7, f11, f15, rmm # perform operation
fnmadd.d f3, f7, f11, f15, rne # perform operation
fnmadd.d f3, f7, f11, f15, rtz # perform operation
fnmadd.d f3, f7, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f7, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x16, 0x4e8dc0de621dfe71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x166840c33e939752 # load x3 with value 0x166840c33e939752
sd x3, 0(x2) # store 0x166840c33e939752 in memory
fld f1, 0(x2) # load 0x166840c33e939752 from memory into f1
fnmadd.d f16, f18, f19, f1, dyn # perform operation
fnmadd.d f16, f18, f19, f1, rdn # perform operation
fnmadd.d f16, f18, f19, f1, rmm # perform operation
fnmadd.d f16, f18, f19, f1, rne # perform operation
fnmadd.d f16, f18, f19, f1, rtz # perform operation
fnmadd.d f16, f18, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f18, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x30, 0x368ad14bbb9d1a23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x194797a03fca1892 # load x3 with value 0x194797a03fca1892
sd x3, 0(x2) # store 0x194797a03fca1892 in memory
fld f5, 0(x2) # load 0x194797a03fca1892 from memory into f5
fnmadd.d f30, f9, f1, f5, dyn # perform operation
fnmadd.d f30, f9, f1, f5, rdn # perform operation
fnmadd.d f30, f9, f1, f5, rmm # perform operation
fnmadd.d f30, f9, f1, f5, rne # perform operation
fnmadd.d f30, f9, f1, f5, rtz # perform operation
fnmadd.d f30, f9, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f9, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x1, 0xdead06553f179198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x5584c1df390d85c7 # load x3 with value 0x5584c1df390d85c7
sd x3, 0(x2) # store 0x5584c1df390d85c7 in memory
fld f18, 0(x2) # load 0x5584c1df390d85c7 from memory into f18
fnmadd.d f1, f28, f21, f18, dyn # perform operation
fnmadd.d f1, f28, f21, f18, rdn # perform operation
fnmadd.d f1, f28, f21, f18, rmm # perform operation
fnmadd.d f1, f28, f21, f18, rne # perform operation
fnmadd.d f1, f28, f21, f18, rtz # perform operation
fnmadd.d f1, f28, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f28, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f28, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f28, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f28, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f28, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x6, 0xc30184161dc8163d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0xcbcf56eac12b2fa8 # load x3 with value 0xcbcf56eac12b2fa8
sd x3, 0(x2) # store 0xcbcf56eac12b2fa8 in memory
fld f7, 0(x2) # load 0xcbcf56eac12b2fa8 from memory into f7
fnmadd.d f6, f25, f22, f7, dyn # perform operation
fnmadd.d f6, f25, f22, f7, rdn # perform operation
fnmadd.d f6, f25, f22, f7, rmm # perform operation
fnmadd.d f6, f25, f22, f7, rne # perform operation
fnmadd.d f6, f25, f22, f7, rtz # perform operation
fnmadd.d f6, f25, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f25, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x12, 0x79e6fb09ef79acda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x83aea782d2ac0b7e # load x3 with value 0x83aea782d2ac0b7e
sd x3, 0(x2) # store 0x83aea782d2ac0b7e in memory
fld f14, 0(x2) # load 0x83aea782d2ac0b7e from memory into f14
fnmadd.d f12, f13, f7, f14, dyn # perform operation
fnmadd.d f12, f13, f7, f14, rdn # perform operation
fnmadd.d f12, f13, f7, f14, rmm # perform operation
fnmadd.d f12, f13, f7, f14, rne # perform operation
fnmadd.d f12, f13, f7, f14, rtz # perform operation
fnmadd.d f12, f13, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x4, 0x24a5909be995d1d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x45c6af76632c276c # load x3 with value 0x45c6af76632c276c
sd x3, 0(x2) # store 0x45c6af76632c276c in memory
fld f27, 0(x2) # load 0x45c6af76632c276c from memory into f27
fnmadd.d f4, f6, f10, f27, dyn # perform operation
fnmadd.d f4, f6, f10, f27, rdn # perform operation
fnmadd.d f4, f6, f10, f27, rmm # perform operation
fnmadd.d f4, f6, f10, f27, rne # perform operation
fnmadd.d f4, f6, f10, f27, rtz # perform operation
fnmadd.d f4, f6, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f6, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f6, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f6, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f6, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f6, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x1, 0x586528dac9225ac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x316b8484e8632e93 # load x3 with value 0x316b8484e8632e93
sd x3, 0(x2) # store 0x316b8484e8632e93 in memory
fld f22, 0(x2) # load 0x316b8484e8632e93 from memory into f22
fnmadd.d f1, f11, f19, f22, dyn # perform operation
fnmadd.d f1, f11, f19, f22, rdn # perform operation
fnmadd.d f1, f11, f19, f22, rmm # perform operation
fnmadd.d f1, f11, f19, f22, rne # perform operation
fnmadd.d f1, f11, f19, f22, rtz # perform operation
fnmadd.d f1, f11, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f11, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x16, 0x32f2998561652de8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0xa80f2fdfa6efb4bc # load x3 with value 0xa80f2fdfa6efb4bc
sd x3, 0(x2) # store 0xa80f2fdfa6efb4bc in memory
fld f9, 0(x2) # load 0xa80f2fdfa6efb4bc from memory into f9
fnmadd.d f16, f19, f11, f9, dyn # perform operation
fnmadd.d f16, f19, f11, f9, rdn # perform operation
fnmadd.d f16, f19, f11, f9, rmm # perform operation
fnmadd.d f16, f19, f11, f9, rne # perform operation
fnmadd.d f16, f19, f11, f9, rtz # perform operation
fnmadd.d f16, f19, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f19, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x11, 0xa66fe8aae7e927f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x1bf0fe8ccd298a4a # load x3 with value 0x1bf0fe8ccd298a4a
sd x3, 0(x2) # store 0x1bf0fe8ccd298a4a in memory
fld f23, 0(x2) # load 0x1bf0fe8ccd298a4a from memory into f23
fnmadd.d f11, f1, f16, f23, dyn # perform operation
fnmadd.d f11, f1, f16, f23, rdn # perform operation
fnmadd.d f11, f1, f16, f23, rmm # perform operation
fnmadd.d f11, f1, f16, f23, rne # perform operation
fnmadd.d f11, f1, f16, f23, rtz # perform operation
fnmadd.d f11, f1, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f1, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f1, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x14, 0x665534fc0fc16179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0xa31ca7d3641555fe # load x3 with value 0xa31ca7d3641555fe
sd x3, 0(x2) # store 0xa31ca7d3641555fe in memory
fld f13, 0(x2) # load 0xa31ca7d3641555fe from memory into f13
fnmadd.d f14, f31, f29, f13, dyn # perform operation
fnmadd.d f14, f31, f29, f13, rdn # perform operation
fnmadd.d f14, f31, f29, f13, rmm # perform operation
fnmadd.d f14, f31, f29, f13, rne # perform operation
fnmadd.d f14, f31, f29, f13, rtz # perform operation
fnmadd.d f14, f31, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f31, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f31, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x23, 0xaee0ef6b31645f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x6ec1972da5e5326c # load x3 with value 0x6ec1972da5e5326c
sd x3, 0(x2) # store 0x6ec1972da5e5326c in memory
fld f8, 0(x2) # load 0x6ec1972da5e5326c from memory into f8
fnmadd.d f23, f12, f25, f8, dyn # perform operation
fnmadd.d f23, f12, f25, f8, rdn # perform operation
fnmadd.d f23, f12, f25, f8, rmm # perform operation
fnmadd.d f23, f12, f25, f8, rne # perform operation
fnmadd.d f23, f12, f25, f8, rtz # perform operation
fnmadd.d f23, f12, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x29, 0x8233856c9e030099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x1f13b6efb0d61f6b # load x3 with value 0x1f13b6efb0d61f6b
sd x3, 0(x2) # store 0x1f13b6efb0d61f6b in memory
fld f18, 0(x2) # load 0x1f13b6efb0d61f6b from memory into f18
fnmadd.d f29, f7, f17, f18, dyn # perform operation
fnmadd.d f29, f7, f17, f18, rdn # perform operation
fnmadd.d f29, f7, f17, f18, rmm # perform operation
fnmadd.d f29, f7, f17, f18, rne # perform operation
fnmadd.d f29, f7, f17, f18, rtz # perform operation
fnmadd.d f29, f7, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x9, 0xbaaf8597bd1e96a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x89f2fde2e96ee469 # load x3 with value 0x89f2fde2e96ee469
sd x3, 0(x2) # store 0x89f2fde2e96ee469 in memory
fld f26, 0(x2) # load 0x89f2fde2e96ee469 from memory into f26
fnmadd.d f9, f14, f2, f26, dyn # perform operation
fnmadd.d f9, f14, f2, f26, rdn # perform operation
fnmadd.d f9, f14, f2, f26, rmm # perform operation
fnmadd.d f9, f14, f2, f26, rne # perform operation
fnmadd.d f9, f14, f2, f26, rtz # perform operation
fnmadd.d f9, f14, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f14, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f14, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f14, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f14, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f14, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x10, 0x5ca9249257c22efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x7e1b5a3a854af4c3 # load x3 with value 0x7e1b5a3a854af4c3
sd x3, 0(x2) # store 0x7e1b5a3a854af4c3 in memory
fld f24, 0(x2) # load 0x7e1b5a3a854af4c3 from memory into f24
fnmadd.d f10, f30, f13, f24, dyn # perform operation
fnmadd.d f10, f30, f13, f24, rdn # perform operation
fnmadd.d f10, f30, f13, f24, rmm # perform operation
fnmadd.d f10, f30, f13, f24, rne # perform operation
fnmadd.d f10, f30, f13, f24, rtz # perform operation
fnmadd.d f10, f30, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f30, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f30, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f30, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f30, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f30, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x6, 0xf7a76c3b3cb9b334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xac559428330f8876 # load x3 with value 0xac559428330f8876
sd x3, 0(x2) # store 0xac559428330f8876 in memory
fld f22, 0(x2) # load 0xac559428330f8876 from memory into f22
fnmadd.d f6, f28, f8, f22, dyn # perform operation
fnmadd.d f6, f28, f8, f22, rdn # perform operation
fnmadd.d f6, f28, f8, f22, rmm # perform operation
fnmadd.d f6, f28, f8, f22, rne # perform operation
fnmadd.d f6, f28, f8, f22, rtz # perform operation
fnmadd.d f6, f28, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f28, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x21, 0x95724f81655a0c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0xf49b71c6623d75bc # load x3 with value 0xf49b71c6623d75bc
sd x3, 0(x2) # store 0xf49b71c6623d75bc in memory
fld f14, 0(x2) # load 0xf49b71c6623d75bc from memory into f14
fnmadd.d f21, f23, f5, f14, dyn # perform operation
fnmadd.d f21, f23, f5, f14, rdn # perform operation
fnmadd.d f21, f23, f5, f14, rmm # perform operation
fnmadd.d f21, f23, f5, f14, rne # perform operation
fnmadd.d f21, f23, f5, f14, rtz # perform operation
fnmadd.d f21, f23, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f23, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f23, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x11, 0x5d6fdf7c5c01a18b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x25715e737b5ab86f # load x3 with value 0x25715e737b5ab86f
sd x3, 0(x2) # store 0x25715e737b5ab86f in memory
fld f21, 0(x2) # load 0x25715e737b5ab86f from memory into f21
fnmadd.d f11, f19, f13, f21, dyn # perform operation
fnmadd.d f11, f19, f13, f21, rdn # perform operation
fnmadd.d f11, f19, f13, f21, rmm # perform operation
fnmadd.d f11, f19, f13, f21, rne # perform operation
fnmadd.d f11, f19, f13, f21, rtz # perform operation
fnmadd.d f11, f19, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f19, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f19, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x31, 0xe52992cf5014cbcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0xc4c31efacd1ba65c # load x3 with value 0xc4c31efacd1ba65c
sd x3, 0(x2) # store 0xc4c31efacd1ba65c in memory
fld f16, 0(x2) # load 0xc4c31efacd1ba65c from memory into f16
fnmadd.d f31, f2, f22, f16, dyn # perform operation
fnmadd.d f31, f2, f22, f16, rdn # perform operation
fnmadd.d f31, f2, f22, f16, rmm # perform operation
fnmadd.d f31, f2, f22, f16, rne # perform operation
fnmadd.d f31, f2, f22, f16, rtz # perform operation
fnmadd.d f31, f2, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f2, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f2, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f2, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f2, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f2, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x4, 0x9c7147021562a4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x6f5c3358fef093e9 # load x3 with value 0x6f5c3358fef093e9
sd x3, 0(x2) # store 0x6f5c3358fef093e9 in memory
fld f31, 0(x2) # load 0x6f5c3358fef093e9 from memory into f31
fnmadd.d f4, f25, f9, f31, dyn # perform operation
fnmadd.d f4, f25, f9, f31, rdn # perform operation
fnmadd.d f4, f25, f9, f31, rmm # perform operation
fnmadd.d f4, f25, f9, f31, rne # perform operation
fnmadd.d f4, f25, f9, f31, rtz # perform operation
fnmadd.d f4, f25, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f25, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x30, 0x76ec9313a399eca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x0a74664e79e37805 # load x3 with value 0x0a74664e79e37805
sd x3, 0(x2) # store 0x0a74664e79e37805 in memory
fld f7, 0(x2) # load 0x0a74664e79e37805 from memory into f7
fnmadd.d f30, f8, f27, f7, dyn # perform operation
fnmadd.d f30, f8, f27, f7, rdn # perform operation
fnmadd.d f30, f8, f27, f7, rmm # perform operation
fnmadd.d f30, f8, f27, f7, rne # perform operation
fnmadd.d f30, f8, f27, f7, rtz # perform operation
fnmadd.d f30, f8, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f8, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x14, 0x25cabcf15960707c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0xe4d44f8d2b339c8d # load x3 with value 0xe4d44f8d2b339c8d
sd x3, 0(x2) # store 0xe4d44f8d2b339c8d in memory
fld f10, 0(x2) # load 0xe4d44f8d2b339c8d from memory into f10
fnmadd.d f14, f23, f8, f10, dyn # perform operation
fnmadd.d f14, f23, f8, f10, rdn # perform operation
fnmadd.d f14, f23, f8, f10, rmm # perform operation
fnmadd.d f14, f23, f8, f10, rne # perform operation
fnmadd.d f14, f23, f8, f10, rtz # perform operation
fnmadd.d f14, f23, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f23, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f23, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x9, 0x66ef7fef3612090c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x28464dcd9f4fc4f8 # load x3 with value 0x28464dcd9f4fc4f8
sd x3, 0(x2) # store 0x28464dcd9f4fc4f8 in memory
fld f7, 0(x2) # load 0x28464dcd9f4fc4f8 from memory into f7
fnmadd.d f9, f15, f28, f7, dyn # perform operation
fnmadd.d f9, f15, f28, f7, rdn # perform operation
fnmadd.d f9, f15, f28, f7, rmm # perform operation
fnmadd.d f9, f15, f28, f7, rne # perform operation
fnmadd.d f9, f15, f28, f7, rtz # perform operation
fnmadd.d f9, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f15, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x12, 0xdc61cd5683dcc34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x192a962b89f5d106 # load x3 with value 0x192a962b89f5d106
sd x3, 0(x2) # store 0x192a962b89f5d106 in memory
fld f11, 0(x2) # load 0x192a962b89f5d106 from memory into f11
fnmadd.d f12, f9, f25, f11, dyn # perform operation
fnmadd.d f12, f9, f25, f11, rdn # perform operation
fnmadd.d f12, f9, f25, f11, rmm # perform operation
fnmadd.d f12, f9, f25, f11, rne # perform operation
fnmadd.d f12, f9, f25, f11, rtz # perform operation
fnmadd.d f12, f9, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f9, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x4, 0xfe431e4112f0888d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x2bc200eea46546e4 # load x3 with value 0x2bc200eea46546e4
sd x3, 0(x2) # store 0x2bc200eea46546e4 in memory
fld f30, 0(x2) # load 0x2bc200eea46546e4 from memory into f30
fnmadd.d f4, f1, f6, f30, dyn # perform operation
fnmadd.d f4, f1, f6, f30, rdn # perform operation
fnmadd.d f4, f1, f6, f30, rmm # perform operation
fnmadd.d f4, f1, f6, f30, rne # perform operation
fnmadd.d f4, f1, f6, f30, rtz # perform operation
fnmadd.d f4, f1, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f1, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f1, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f1, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f1, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f1, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x4, 0x3085ddfca31d5a3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x2879a47d2c80f7ea # load x3 with value 0x2879a47d2c80f7ea
sd x3, 0(x2) # store 0x2879a47d2c80f7ea in memory
fld f15, 0(x2) # load 0x2879a47d2c80f7ea from memory into f15
fnmadd.d f4, f24, f30, f15, dyn # perform operation
fnmadd.d f4, f24, f30, f15, rdn # perform operation
fnmadd.d f4, f24, f30, f15, rmm # perform operation
fnmadd.d f4, f24, f30, f15, rne # perform operation
fnmadd.d f4, f24, f30, f15, rtz # perform operation
fnmadd.d f4, f24, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f24, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f24, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f24, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f24, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f24, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x545f5b1b0342c796 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x95a3b0004e9e3acd # load x3 with value 0x95a3b0004e9e3acd
sd x3, 0(x2) # store 0x95a3b0004e9e3acd in memory
fld f8, 0(x2) # load 0x95a3b0004e9e3acd from memory into f8
fnmadd.d f9, f6, f10, f8, dyn # perform operation
fnmadd.d f9, f6, f10, f8, rdn # perform operation
fnmadd.d f9, f6, f10, f8, rmm # perform operation
fnmadd.d f9, f6, f10, f8, rne # perform operation
fnmadd.d f9, f6, f10, f8, rtz # perform operation
fnmadd.d f9, f6, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f6, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x16, 0x8bc884dd5ea95b7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x2282d98ed7bdb18b # load x3 with value 0x2282d98ed7bdb18b
sd x3, 0(x2) # store 0x2282d98ed7bdb18b in memory
fld f30, 0(x2) # load 0x2282d98ed7bdb18b from memory into f30
fnmadd.d f16, f29, f23, f30, dyn # perform operation
fnmadd.d f16, f29, f23, f30, rdn # perform operation
fnmadd.d f16, f29, f23, f30, rmm # perform operation
fnmadd.d f16, f29, f23, f30, rne # perform operation
fnmadd.d f16, f29, f23, f30, rtz # perform operation
fnmadd.d f16, f29, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f29, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x3, 0x5933891809e1d4ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0xd7d54487f698b434 # load x3 with value 0xd7d54487f698b434
sd x3, 0(x2) # store 0xd7d54487f698b434 in memory
fld f16, 0(x2) # load 0xd7d54487f698b434 from memory into f16
fnmadd.d f3, f24, f9, f16, dyn # perform operation
fnmadd.d f3, f24, f9, f16, rdn # perform operation
fnmadd.d f3, f24, f9, f16, rmm # perform operation
fnmadd.d f3, f24, f9, f16, rne # perform operation
fnmadd.d f3, f24, f9, f16, rtz # perform operation
fnmadd.d f3, f24, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f24, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f24, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x25, 0x036b72bfe64db483 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xf8c6b3f474778c8d # load x3 with value 0xf8c6b3f474778c8d
sd x3, 0(x2) # store 0xf8c6b3f474778c8d in memory
fld f27, 0(x2) # load 0xf8c6b3f474778c8d from memory into f27
fnmadd.d f25, f23, f9, f27, dyn # perform operation
fnmadd.d f25, f23, f9, f27, rdn # perform operation
fnmadd.d f25, f23, f9, f27, rmm # perform operation
fnmadd.d f25, f23, f9, f27, rne # perform operation
fnmadd.d f25, f23, f9, f27, rtz # perform operation
fnmadd.d f25, f23, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f23, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f23, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f23, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f23, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f23, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x23, 0x626adaa50803d834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xaeed891e525d0240 # load x3 with value 0xaeed891e525d0240
sd x3, 0(x2) # store 0xaeed891e525d0240 in memory
fld f16, 0(x2) # load 0xaeed891e525d0240 from memory into f16
fnmadd.d f23, f29, f3, f16, dyn # perform operation
fnmadd.d f23, f29, f3, f16, rdn # perform operation
fnmadd.d f23, f29, f3, f16, rmm # perform operation
fnmadd.d f23, f29, f3, f16, rne # perform operation
fnmadd.d f23, f29, f3, f16, rtz # perform operation
fnmadd.d f23, f29, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f29, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f29, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x28, 0x723a701d32e13612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x10812c3ad786b750 # load x3 with value 0x10812c3ad786b750
sd x3, 0(x2) # store 0x10812c3ad786b750 in memory
fld f22, 0(x2) # load 0x10812c3ad786b750 from memory into f22
fnmadd.d f28, f6, f19, f22, dyn # perform operation
fnmadd.d f28, f6, f19, f22, rdn # perform operation
fnmadd.d f28, f6, f19, f22, rmm # perform operation
fnmadd.d f28, f6, f19, f22, rne # perform operation
fnmadd.d f28, f6, f19, f22, rtz # perform operation
fnmadd.d f28, f6, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f6, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x10, 0xb2fac149695cb642 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x0f9e18dc67e16047 # load x3 with value 0x0f9e18dc67e16047
sd x3, 0(x2) # store 0x0f9e18dc67e16047 in memory
fld f15, 0(x2) # load 0x0f9e18dc67e16047 from memory into f15
fnmadd.d f10, f28, f7, f15, dyn # perform operation
fnmadd.d f10, f28, f7, f15, rdn # perform operation
fnmadd.d f10, f28, f7, f15, rmm # perform operation
fnmadd.d f10, f28, f7, f15, rne # perform operation
fnmadd.d f10, f28, f7, f15, rtz # perform operation
fnmadd.d f10, f28, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f28, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f28, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x24, 0x9545e5ad04191f09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x4767e9a1929b7dfa # load x3 with value 0x4767e9a1929b7dfa
sd x3, 0(x2) # store 0x4767e9a1929b7dfa in memory
fld f5, 0(x2) # load 0x4767e9a1929b7dfa from memory into f5
fnmadd.d f24, f10, f26, f5, dyn # perform operation
fnmadd.d f24, f10, f26, f5, rdn # perform operation
fnmadd.d f24, f10, f26, f5, rmm # perform operation
fnmadd.d f24, f10, f26, f5, rne # perform operation
fnmadd.d f24, f10, f26, f5, rtz # perform operation
fnmadd.d f24, f10, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f10, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f10, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x23, 0xb16ec2e45ee0a432 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x367a9db9bbc2d7c3 # load x3 with value 0x367a9db9bbc2d7c3
sd x3, 0(x2) # store 0x367a9db9bbc2d7c3 in memory
fld f7, 0(x2) # load 0x367a9db9bbc2d7c3 from memory into f7
fnmadd.d f23, f14, f19, f7, dyn # perform operation
fnmadd.d f23, f14, f19, f7, rdn # perform operation
fnmadd.d f23, f14, f19, f7, rmm # perform operation
fnmadd.d f23, f14, f19, f7, rne # perform operation
fnmadd.d f23, f14, f19, f7, rtz # perform operation
fnmadd.d f23, f14, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x26, 0xbb975295970eaae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0xb583a5ed049db28f # load x3 with value 0xb583a5ed049db28f
sd x3, 0(x2) # store 0xb583a5ed049db28f in memory
fld f10, 0(x2) # load 0xb583a5ed049db28f from memory into f10
fnmadd.d f26, f15, f17, f10, dyn # perform operation
fnmadd.d f26, f15, f17, f10, rdn # perform operation
fnmadd.d f26, f15, f17, f10, rmm # perform operation
fnmadd.d f26, f15, f17, f10, rne # perform operation
fnmadd.d f26, f15, f17, f10, rtz # perform operation
fnmadd.d f26, f15, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f15, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0xa8320815dd4c6260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xb864da0cbe94b9a2 # load x3 with value 0xb864da0cbe94b9a2
sd x3, 0(x2) # store 0xb864da0cbe94b9a2 in memory
fld f8, 0(x2) # load 0xb864da0cbe94b9a2 from memory into f8
fnmadd.d f12, f13, f11, f8, dyn # perform operation
fnmadd.d f12, f13, f11, f8, rdn # perform operation
fnmadd.d f12, f13, f11, f8, rmm # perform operation
fnmadd.d f12, f13, f11, f8, rne # perform operation
fnmadd.d f12, f13, f11, f8, rtz # perform operation
fnmadd.d f12, f13, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x12, 0xdcf5fa76f505a715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x418a5a6121b9423b # load x3 with value 0x418a5a6121b9423b
sd x3, 0(x2) # store 0x418a5a6121b9423b in memory
fld f3, 0(x2) # load 0x418a5a6121b9423b from memory into f3
fnmadd.d f12, f2, f24, f3, dyn # perform operation
fnmadd.d f12, f2, f24, f3, rdn # perform operation
fnmadd.d f12, f2, f24, f3, rmm # perform operation
fnmadd.d f12, f2, f24, f3, rne # perform operation
fnmadd.d f12, f2, f24, f3, rtz # perform operation
fnmadd.d f12, f2, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f2, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x5, 0x98fc35a4a9aa7bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x3c9e0d34ed604f46 # load x3 with value 0x3c9e0d34ed604f46
sd x3, 0(x2) # store 0x3c9e0d34ed604f46 in memory
fld f15, 0(x2) # load 0x3c9e0d34ed604f46 from memory into f15
fnmadd.d f5, f12, f17, f15, dyn # perform operation
fnmadd.d f5, f12, f17, f15, rdn # perform operation
fnmadd.d f5, f12, f17, f15, rmm # perform operation
fnmadd.d f5, f12, f17, f15, rne # perform operation
fnmadd.d f5, f12, f17, f15, rtz # perform operation
fnmadd.d f5, f12, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f12, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0xf98c10f55a5e3a8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x53d94326cfd269b9 # load x3 with value 0x53d94326cfd269b9
sd x3, 0(x2) # store 0x53d94326cfd269b9 in memory
fld f31, 0(x2) # load 0x53d94326cfd269b9 from memory into f31
fnmadd.d f22, f25, f27, f31, dyn # perform operation
fnmadd.d f22, f25, f27, f31, rdn # perform operation
fnmadd.d f22, f25, f27, f31, rmm # perform operation
fnmadd.d f22, f25, f27, f31, rne # perform operation
fnmadd.d f22, f25, f27, f31, rtz # perform operation
fnmadd.d f22, f25, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f25, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f25, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x3, 0xd5a22602127fa0f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x481257d5b221ec91 # load x3 with value 0x481257d5b221ec91
sd x3, 0(x2) # store 0x481257d5b221ec91 in memory
fld f26, 0(x2) # load 0x481257d5b221ec91 from memory into f26
fnmadd.d f3, f12, f9, f26, dyn # perform operation
fnmadd.d f3, f12, f9, f26, rdn # perform operation
fnmadd.d f3, f12, f9, f26, rmm # perform operation
fnmadd.d f3, f12, f9, f26, rne # perform operation
fnmadd.d f3, f12, f9, f26, rtz # perform operation
fnmadd.d f3, f12, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f12, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x24, 0x25bd2f1aecf99d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x61109c5056802f20 # load x3 with value 0x61109c5056802f20
sd x3, 0(x2) # store 0x61109c5056802f20 in memory
fld f30, 0(x2) # load 0x61109c5056802f20 from memory into f30
fnmadd.d f24, f5, f27, f30, dyn # perform operation
fnmadd.d f24, f5, f27, f30, rdn # perform operation
fnmadd.d f24, f5, f27, f30, rmm # perform operation
fnmadd.d f24, f5, f27, f30, rne # perform operation
fnmadd.d f24, f5, f27, f30, rtz # perform operation
fnmadd.d f24, f5, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x8, 0xb5bfd010a5612730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xb5fd407f0d5dbda4 # load x3 with value 0xb5fd407f0d5dbda4
sd x3, 0(x2) # store 0xb5fd407f0d5dbda4 in memory
fld f4, 0(x2) # load 0xb5fd407f0d5dbda4 from memory into f4
fnmadd.d f8, f2, f26, f4, dyn # perform operation
fnmadd.d f8, f2, f26, f4, rdn # perform operation
fnmadd.d f8, f2, f26, f4, rmm # perform operation
fnmadd.d f8, f2, f26, f4, rne # perform operation
fnmadd.d f8, f2, f26, f4, rtz # perform operation
fnmadd.d f8, f2, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f2, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x31, 0xc1ab9cd09023ef14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0xdffbc447a0f7f9ec # load x3 with value 0xdffbc447a0f7f9ec
sd x3, 0(x2) # store 0xdffbc447a0f7f9ec in memory
fld f16, 0(x2) # load 0xdffbc447a0f7f9ec from memory into f16
fnmadd.d f31, f13, f8, f16, dyn # perform operation
fnmadd.d f31, f13, f8, f16, rdn # perform operation
fnmadd.d f31, f13, f8, f16, rmm # perform operation
fnmadd.d f31, f13, f8, f16, rne # perform operation
fnmadd.d f31, f13, f8, f16, rtz # perform operation
fnmadd.d f31, f13, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f13, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x8, 0x958e89f67170208d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0xb2714539b67ce5ed # load x3 with value 0xb2714539b67ce5ed
sd x3, 0(x2) # store 0xb2714539b67ce5ed in memory
fld f9, 0(x2) # load 0xb2714539b67ce5ed from memory into f9
fnmadd.d f8, f13, f27, f9, dyn # perform operation
fnmadd.d f8, f13, f27, f9, rdn # perform operation
fnmadd.d f8, f13, f27, f9, rmm # perform operation
fnmadd.d f8, f13, f27, f9, rne # perform operation
fnmadd.d f8, f13, f27, f9, rtz # perform operation
fnmadd.d f8, f13, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f13, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x13, 0x4ae32f63594e2377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xe1756aafde38822f # load x3 with value 0xe1756aafde38822f
sd x3, 0(x2) # store 0xe1756aafde38822f in memory
fld f5, 0(x2) # load 0xe1756aafde38822f from memory into f5
fnmadd.d f13, f3, f9, f5, dyn # perform operation
fnmadd.d f13, f3, f9, f5, rdn # perform operation
fnmadd.d f13, f3, f9, f5, rmm # perform operation
fnmadd.d f13, f3, f9, f5, rne # perform operation
fnmadd.d f13, f3, f9, f5, rtz # perform operation
fnmadd.d f13, f3, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f3, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f3, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x28, 0x0d5c5173caecf0a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0xa989f42176f2e04a # load x3 with value 0xa989f42176f2e04a
sd x3, 0(x2) # store 0xa989f42176f2e04a in memory
fld f10, 0(x2) # load 0xa989f42176f2e04a from memory into f10
fnmadd.d f28, f26, f12, f10, dyn # perform operation
fnmadd.d f28, f26, f12, f10, rdn # perform operation
fnmadd.d f28, f26, f12, f10, rmm # perform operation
fnmadd.d f28, f26, f12, f10, rne # perform operation
fnmadd.d f28, f26, f12, f10, rtz # perform operation
fnmadd.d f28, f26, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f26, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f26, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x3, 0x54c98eaabea28ed0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0xf23e5329ccb22a68 # load x3 with value 0xf23e5329ccb22a68
sd x3, 0(x2) # store 0xf23e5329ccb22a68 in memory
fld f29, 0(x2) # load 0xf23e5329ccb22a68 from memory into f29
fnmadd.d f3, f2, f27, f29, dyn # perform operation
fnmadd.d f3, f2, f27, f29, rdn # perform operation
fnmadd.d f3, f2, f27, f29, rmm # perform operation
fnmadd.d f3, f2, f27, f29, rne # perform operation
fnmadd.d f3, f2, f27, f29, rtz # perform operation
fnmadd.d f3, f2, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x3, 0x2c19ebaaba0d20f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x54fc7aa3f4e43762 # load x3 with value 0x54fc7aa3f4e43762
sd x3, 0(x2) # store 0x54fc7aa3f4e43762 in memory
fld f25, 0(x2) # load 0x54fc7aa3f4e43762 from memory into f25
fnmadd.d f3, f9, f23, f25, dyn # perform operation
fnmadd.d f3, f9, f23, f25, rdn # perform operation
fnmadd.d f3, f9, f23, f25, rmm # perform operation
fnmadd.d f3, f9, f23, f25, rne # perform operation
fnmadd.d f3, f9, f23, f25, rtz # perform operation
fnmadd.d f3, f9, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f9, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x11, 0xce4ff9376b2f519d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x332db16be52b36bc # load x3 with value 0x332db16be52b36bc
sd x3, 0(x2) # store 0x332db16be52b36bc in memory
fld f22, 0(x2) # load 0x332db16be52b36bc from memory into f22
fnmadd.d f11, f20, f2, f22, dyn # perform operation
fnmadd.d f11, f20, f2, f22, rdn # perform operation
fnmadd.d f11, f20, f2, f22, rmm # perform operation
fnmadd.d f11, f20, f2, f22, rne # perform operation
fnmadd.d f11, f20, f2, f22, rtz # perform operation
fnmadd.d f11, f20, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f20, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f20, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x5, 0x70ea884ee585c0d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x4729184f811f4e67 # load x3 with value 0x4729184f811f4e67
sd x3, 0(x2) # store 0x4729184f811f4e67 in memory
fld f27, 0(x2) # load 0x4729184f811f4e67 from memory into f27
fnmadd.d f5, f11, f25, f27, dyn # perform operation
fnmadd.d f5, f11, f25, f27, rdn # perform operation
fnmadd.d f5, f11, f25, f27, rmm # perform operation
fnmadd.d f5, f11, f25, f27, rne # perform operation
fnmadd.d f5, f11, f25, f27, rtz # perform operation
fnmadd.d f5, f11, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x29, 0x5903c46fef082cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x0571a6eb9de7d206 # load x3 with value 0x0571a6eb9de7d206
sd x3, 0(x2) # store 0x0571a6eb9de7d206 in memory
fld f27, 0(x2) # load 0x0571a6eb9de7d206 from memory into f27
fnmadd.d f29, f22, f6, f27, dyn # perform operation
fnmadd.d f29, f22, f6, f27, rdn # perform operation
fnmadd.d f29, f22, f6, f27, rmm # perform operation
fnmadd.d f29, f22, f6, f27, rne # perform operation
fnmadd.d f29, f22, f6, f27, rtz # perform operation
fnmadd.d f29, f22, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f22, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x20, 0xb3a29fc6001c0ef0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x9cd8a75ae2fa3da9 # load x3 with value 0x9cd8a75ae2fa3da9
sd x3, 0(x2) # store 0x9cd8a75ae2fa3da9 in memory
fld f8, 0(x2) # load 0x9cd8a75ae2fa3da9 from memory into f8
fnmadd.d f20, f29, f27, f8, dyn # perform operation
fnmadd.d f20, f29, f27, f8, rdn # perform operation
fnmadd.d f20, f29, f27, f8, rmm # perform operation
fnmadd.d f20, f29, f27, f8, rne # perform operation
fnmadd.d f20, f29, f27, f8, rtz # perform operation
fnmadd.d f20, f29, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f29, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f29, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f29, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f29, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f29, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x18, 0x34c9c5fc5ec65e49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x1df492b8fb231fb2 # load x3 with value 0x1df492b8fb231fb2
sd x3, 0(x2) # store 0x1df492b8fb231fb2 in memory
fld f31, 0(x2) # load 0x1df492b8fb231fb2 from memory into f31
fnmadd.d f18, f7, f2, f31, dyn # perform operation
fnmadd.d f18, f7, f2, f31, rdn # perform operation
fnmadd.d f18, f7, f2, f31, rmm # perform operation
fnmadd.d f18, f7, f2, f31, rne # perform operation
fnmadd.d f18, f7, f2, f31, rtz # perform operation
fnmadd.d f18, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x31, 0x85f78f71a4cd18d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x104ec0b0e4402dcf # load x3 with value 0x104ec0b0e4402dcf
sd x3, 0(x2) # store 0x104ec0b0e4402dcf in memory
fld f18, 0(x2) # load 0x104ec0b0e4402dcf from memory into f18
fnmadd.d f31, f27, f17, f18, dyn # perform operation
fnmadd.d f31, f27, f17, f18, rdn # perform operation
fnmadd.d f31, f27, f17, f18, rmm # perform operation
fnmadd.d f31, f27, f17, f18, rne # perform operation
fnmadd.d f31, f27, f17, f18, rtz # perform operation
fnmadd.d f31, f27, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f27, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f27, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x29, 0x8f843490d6815118 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x63b0a2c0ce25d45b # load x3 with value 0x63b0a2c0ce25d45b
sd x3, 0(x2) # store 0x63b0a2c0ce25d45b in memory
fld f16, 0(x2) # load 0x63b0a2c0ce25d45b from memory into f16
fnmadd.d f29, f19, f14, f16, dyn # perform operation
fnmadd.d f29, f19, f14, f16, rdn # perform operation
fnmadd.d f29, f19, f14, f16, rmm # perform operation
fnmadd.d f29, f19, f14, f16, rne # perform operation
fnmadd.d f29, f19, f14, f16, rtz # perform operation
fnmadd.d f29, f19, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f19, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x9, 0x024b15abc37249d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x966863ea623b61ef # load x3 with value 0x966863ea623b61ef
sd x3, 0(x2) # store 0x966863ea623b61ef in memory
fld f19, 0(x2) # load 0x966863ea623b61ef from memory into f19
fnmadd.d f9, f25, f5, f19, dyn # perform operation
fnmadd.d f9, f25, f5, f19, rdn # perform operation
fnmadd.d f9, f25, f5, f19, rmm # perform operation
fnmadd.d f9, f25, f5, f19, rne # perform operation
fnmadd.d f9, f25, f5, f19, rtz # perform operation
fnmadd.d f9, f25, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f25, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x24, 0x65797b20cb8b2995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0xb37d67a8f8e088db # load x3 with value 0xb37d67a8f8e088db
sd x3, 0(x2) # store 0xb37d67a8f8e088db in memory
fld f19, 0(x2) # load 0xb37d67a8f8e088db from memory into f19
fnmadd.d f24, f1, f22, f19, dyn # perform operation
fnmadd.d f24, f1, f22, f19, rdn # perform operation
fnmadd.d f24, f1, f22, f19, rmm # perform operation
fnmadd.d f24, f1, f22, f19, rne # perform operation
fnmadd.d f24, f1, f22, f19, rtz # perform operation
fnmadd.d f24, f1, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f1, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f1, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x5, 0x0a48a73aa7dbcb44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x542ac5999b16becf # load x3 with value 0x542ac5999b16becf
sd x3, 0(x2) # store 0x542ac5999b16becf in memory
fld f23, 0(x2) # load 0x542ac5999b16becf from memory into f23
fnmadd.d f5, f8, f13, f23, dyn # perform operation
fnmadd.d f5, f8, f13, f23, rdn # perform operation
fnmadd.d f5, f8, f13, f23, rmm # perform operation
fnmadd.d f5, f8, f13, f23, rne # perform operation
fnmadd.d f5, f8, f13, f23, rtz # perform operation
fnmadd.d f5, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f8, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x27, 0x4340f6077ff2c74b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x9f57ec657ccf7b80 # load x3 with value 0x9f57ec657ccf7b80
sd x3, 0(x2) # store 0x9f57ec657ccf7b80 in memory
fld f9, 0(x2) # load 0x9f57ec657ccf7b80 from memory into f9
fnmadd.d f27, f18, f23, f9, dyn # perform operation
fnmadd.d f27, f18, f23, f9, rdn # perform operation
fnmadd.d f27, f18, f23, f9, rmm # perform operation
fnmadd.d f27, f18, f23, f9, rne # perform operation
fnmadd.d f27, f18, f23, f9, rtz # perform operation
fnmadd.d f27, f18, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f18, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x2, 0x634ddc982dd129be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x3a26f2454249c77c # load x3 with value 0x3a26f2454249c77c
sd x3, 0(x2) # store 0x3a26f2454249c77c in memory
fld f17, 0(x2) # load 0x3a26f2454249c77c from memory into f17
fnmadd.d f2, f5, f4, f17, dyn # perform operation
fnmadd.d f2, f5, f4, f17, rdn # perform operation
fnmadd.d f2, f5, f4, f17, rmm # perform operation
fnmadd.d f2, f5, f4, f17, rne # perform operation
fnmadd.d f2, f5, f4, f17, rtz # perform operation
fnmadd.d f2, f5, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f5, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f5, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x74f052190250da1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0xb8e5570f0d7be43e # load x3 with value 0xb8e5570f0d7be43e
sd x3, 0(x2) # store 0xb8e5570f0d7be43e in memory
fld f3, 0(x2) # load 0xb8e5570f0d7be43e from memory into f3
fnmadd.d f10, f13, f28, f3, dyn # perform operation
fnmadd.d f10, f13, f28, f3, rdn # perform operation
fnmadd.d f10, f13, f28, f3, rmm # perform operation
fnmadd.d f10, f13, f28, f3, rne # perform operation
fnmadd.d f10, f13, f28, f3, rtz # perform operation
fnmadd.d f10, f13, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f13, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f13, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0x80894bc743456cd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0xd198198e46c4d25b # load x3 with value 0xd198198e46c4d25b
sd x3, 0(x2) # store 0xd198198e46c4d25b in memory
fld f15, 0(x2) # load 0xd198198e46c4d25b from memory into f15
fnmadd.d f12, f6, f7, f15, dyn # perform operation
fnmadd.d f12, f6, f7, f15, rdn # perform operation
fnmadd.d f12, f6, f7, f15, rmm # perform operation
fnmadd.d f12, f6, f7, f15, rne # perform operation
fnmadd.d f12, f6, f7, f15, rtz # perform operation
fnmadd.d f12, f6, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f6, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f6, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x1, 0x614c0921851566ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x61dea00b0af4c21c # load x3 with value 0x61dea00b0af4c21c
sd x3, 0(x2) # store 0x61dea00b0af4c21c in memory
fld f27, 0(x2) # load 0x61dea00b0af4c21c from memory into f27
fnmadd.d f1, f2, f22, f27, dyn # perform operation
fnmadd.d f1, f2, f22, f27, rdn # perform operation
fnmadd.d f1, f2, f22, f27, rmm # perform operation
fnmadd.d f1, f2, f22, f27, rne # perform operation
fnmadd.d f1, f2, f22, f27, rtz # perform operation
fnmadd.d f1, f2, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f2, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x24, 0xdcedfafefc4d91d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x2977b50cb2ff978f # load x3 with value 0x2977b50cb2ff978f
sd x3, 0(x2) # store 0x2977b50cb2ff978f in memory
fld f23, 0(x2) # load 0x2977b50cb2ff978f from memory into f23
fnmadd.d f24, f1, f20, f23, dyn # perform operation
fnmadd.d f24, f1, f20, f23, rdn # perform operation
fnmadd.d f24, f1, f20, f23, rmm # perform operation
fnmadd.d f24, f1, f20, f23, rne # perform operation
fnmadd.d f24, f1, f20, f23, rtz # perform operation
fnmadd.d f24, f1, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f1, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x28, 0x733b51bd9c745639 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x8cf89955790a27b2 # load x3 with value 0x8cf89955790a27b2
sd x3, 0(x2) # store 0x8cf89955790a27b2 in memory
fld f9, 0(x2) # load 0x8cf89955790a27b2 from memory into f9
fnmadd.d f28, f24, f31, f9, dyn # perform operation
fnmadd.d f28, f24, f31, f9, rdn # perform operation
fnmadd.d f28, f24, f31, f9, rmm # perform operation
fnmadd.d f28, f24, f31, f9, rne # perform operation
fnmadd.d f28, f24, f31, f9, rtz # perform operation
fnmadd.d f28, f24, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f24, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f24, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f24, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f24, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f24, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x28, 0xa79203127ec4bcb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x8f68f14ad32d6240 # load x3 with value 0x8f68f14ad32d6240
sd x3, 0(x2) # store 0x8f68f14ad32d6240 in memory
fld f25, 0(x2) # load 0x8f68f14ad32d6240 from memory into f25
fnmadd.d f28, f24, f10, f25, dyn # perform operation
fnmadd.d f28, f24, f10, f25, rdn # perform operation
fnmadd.d f28, f24, f10, f25, rmm # perform operation
fnmadd.d f28, f24, f10, f25, rne # perform operation
fnmadd.d f28, f24, f10, f25, rtz # perform operation
fnmadd.d f28, f24, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f24, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x27, 0x7e62d91343c01656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x3a32353c4a639504 # load x3 with value 0x3a32353c4a639504
sd x3, 0(x2) # store 0x3a32353c4a639504 in memory
fld f2, 0(x2) # load 0x3a32353c4a639504 from memory into f2
fnmadd.d f27, f6, f28, f2, dyn # perform operation
fnmadd.d f27, f6, f28, f2, rdn # perform operation
fnmadd.d f27, f6, f28, f2, rmm # perform operation
fnmadd.d f27, f6, f28, f2, rne # perform operation
fnmadd.d f27, f6, f28, f2, rtz # perform operation
fnmadd.d f27, f6, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x23, 0xfe0c5c11001035ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0xe3f7a0bf7c8c9a8b # load x3 with value 0xe3f7a0bf7c8c9a8b
sd x3, 0(x2) # store 0xe3f7a0bf7c8c9a8b in memory
fld f28, 0(x2) # load 0xe3f7a0bf7c8c9a8b from memory into f28
fnmadd.d f23, f18, f5, f28, dyn # perform operation
fnmadd.d f23, f18, f5, f28, rdn # perform operation
fnmadd.d f23, f18, f5, f28, rmm # perform operation
fnmadd.d f23, f18, f5, f28, rne # perform operation
fnmadd.d f23, f18, f5, f28, rtz # perform operation
fnmadd.d f23, f18, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x23, 0x6454ea3923e5d0e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0xaf9872ccef482872 # load x3 with value 0xaf9872ccef482872
sd x3, 0(x2) # store 0xaf9872ccef482872 in memory
fld f7, 0(x2) # load 0xaf9872ccef482872 from memory into f7
fnmadd.d f23, f4, f26, f7, dyn # perform operation
fnmadd.d f23, f4, f26, f7, rdn # perform operation
fnmadd.d f23, f4, f26, f7, rmm # perform operation
fnmadd.d f23, f4, f26, f7, rne # perform operation
fnmadd.d f23, f4, f26, f7, rtz # perform operation
fnmadd.d f23, f4, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f4, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f4, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f4, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f4, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f4, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x12, 0x06248678aa63fc0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0xee98a912baa68a31 # load x3 with value 0xee98a912baa68a31
sd x3, 0(x2) # store 0xee98a912baa68a31 in memory
fld f17, 0(x2) # load 0xee98a912baa68a31 from memory into f17
fnmadd.d f12, f3, f2, f17, dyn # perform operation
fnmadd.d f12, f3, f2, f17, rdn # perform operation
fnmadd.d f12, f3, f2, f17, rmm # perform operation
fnmadd.d f12, f3, f2, f17, rne # perform operation
fnmadd.d f12, f3, f2, f17, rtz # perform operation
fnmadd.d f12, f3, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f3, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x18, 0x7919e41a76b837ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0xc78bfc9594e69e76 # load x3 with value 0xc78bfc9594e69e76
sd x3, 0(x2) # store 0xc78bfc9594e69e76 in memory
fld f11, 0(x2) # load 0xc78bfc9594e69e76 from memory into f11
fnmadd.d f18, f21, f23, f11, dyn # perform operation
fnmadd.d f18, f21, f23, f11, rdn # perform operation
fnmadd.d f18, f21, f23, f11, rmm # perform operation
fnmadd.d f18, f21, f23, f11, rne # perform operation
fnmadd.d f18, f21, f23, f11, rtz # perform operation
fnmadd.d f18, f21, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f21, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f21, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f21, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f21, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f21, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x12, 0xdc275ff6e1922c65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x735fb43c8258194d # load x3 with value 0x735fb43c8258194d
sd x3, 0(x2) # store 0x735fb43c8258194d in memory
fld f13, 0(x2) # load 0x735fb43c8258194d from memory into f13
fnmadd.d f12, f31, f15, f13, dyn # perform operation
fnmadd.d f12, f31, f15, f13, rdn # perform operation
fnmadd.d f12, f31, f15, f13, rmm # perform operation
fnmadd.d f12, f31, f15, f13, rne # perform operation
fnmadd.d f12, f31, f15, f13, rtz # perform operation
fnmadd.d f12, f31, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f31, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x28, 0x6130f0927081f358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0xdd034d5fab074965 # load x3 with value 0xdd034d5fab074965
sd x3, 0(x2) # store 0xdd034d5fab074965 in memory
fld f1, 0(x2) # load 0xdd034d5fab074965 from memory into f1
fnmadd.d f28, f29, f19, f1, dyn # perform operation
fnmadd.d f28, f29, f19, f1, rdn # perform operation
fnmadd.d f28, f29, f19, f1, rmm # perform operation
fnmadd.d f28, f29, f19, f1, rne # perform operation
fnmadd.d f28, f29, f19, f1, rtz # perform operation
fnmadd.d f28, f29, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x7, 0x990b4946412f72dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xa0c378834cf72822 # load x3 with value 0xa0c378834cf72822
sd x3, 0(x2) # store 0xa0c378834cf72822 in memory
fld f1, 0(x2) # load 0xa0c378834cf72822 from memory into f1
fnmadd.d f7, f4, f29, f1, dyn # perform operation
fnmadd.d f7, f4, f29, f1, rdn # perform operation
fnmadd.d f7, f4, f29, f1, rmm # perform operation
fnmadd.d f7, f4, f29, f1, rne # perform operation
fnmadd.d f7, f4, f29, f1, rtz # perform operation
fnmadd.d f7, f4, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f4, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f4, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f4, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f4, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f4, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x28, 0x50667ef1f85e9eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0xc9f50a95c596e9e7 # load x3 with value 0xc9f50a95c596e9e7
sd x3, 0(x2) # store 0xc9f50a95c596e9e7 in memory
fld f26, 0(x2) # load 0xc9f50a95c596e9e7 from memory into f26
fnmadd.d f28, f5, f10, f26, dyn # perform operation
fnmadd.d f28, f5, f10, f26, rdn # perform operation
fnmadd.d f28, f5, f10, f26, rmm # perform operation
fnmadd.d f28, f5, f10, f26, rne # perform operation
fnmadd.d f28, f5, f10, f26, rtz # perform operation
fnmadd.d f28, f5, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f5, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x14, 0xe1ab6163a6a06827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x7db1c0d61ee3002f # load x3 with value 0x7db1c0d61ee3002f
sd x3, 0(x2) # store 0x7db1c0d61ee3002f in memory
fld f21, 0(x2) # load 0x7db1c0d61ee3002f from memory into f21
fnmadd.d f14, f17, f7, f21, dyn # perform operation
fnmadd.d f14, f17, f7, f21, rdn # perform operation
fnmadd.d f14, f17, f7, f21, rmm # perform operation
fnmadd.d f14, f17, f7, f21, rne # perform operation
fnmadd.d f14, f17, f7, f21, rtz # perform operation
fnmadd.d f14, f17, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f17, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x22, 0xa5a8fbde509c9809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0x96a34c2a8fd947ee # load x3 with value 0x96a34c2a8fd947ee
sd x3, 0(x2) # store 0x96a34c2a8fd947ee in memory
fld f13, 0(x2) # load 0x96a34c2a8fd947ee from memory into f13
fnmadd.d f22, f21, f28, f13, dyn # perform operation
fnmadd.d f22, f21, f28, f13, rdn # perform operation
fnmadd.d f22, f21, f28, f13, rmm # perform operation
fnmadd.d f22, f21, f28, f13, rne # perform operation
fnmadd.d f22, f21, f28, f13, rtz # perform operation
fnmadd.d f22, f21, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f21, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x18, 0x24e3d1c1ea6463de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x787da500e75b7e56 # load x3 with value 0x787da500e75b7e56
sd x3, 0(x2) # store 0x787da500e75b7e56 in memory
fld f27, 0(x2) # load 0x787da500e75b7e56 from memory into f27
fnmadd.d f18, f28, f29, f27, dyn # perform operation
fnmadd.d f18, f28, f29, f27, rdn # perform operation
fnmadd.d f18, f28, f29, f27, rmm # perform operation
fnmadd.d f18, f28, f29, f27, rne # perform operation
fnmadd.d f18, f28, f29, f27, rtz # perform operation
fnmadd.d f18, f28, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f28, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f28, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x2, 0x1b6839d33d2a041c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x7fc9c20ec8d52ae2 # load x3 with value 0x7fc9c20ec8d52ae2
sd x3, 0(x2) # store 0x7fc9c20ec8d52ae2 in memory
fld f4, 0(x2) # load 0x7fc9c20ec8d52ae2 from memory into f4
fnmadd.d f2, f29, f26, f4, dyn # perform operation
fnmadd.d f2, f29, f26, f4, rdn # perform operation
fnmadd.d f2, f29, f26, f4, rmm # perform operation
fnmadd.d f2, f29, f26, f4, rne # perform operation
fnmadd.d f2, f29, f26, f4, rtz # perform operation
fnmadd.d f2, f29, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f29, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x3, 0x249d99b131cc1a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x39b38bd547cc9661 # load x3 with value 0x39b38bd547cc9661
sd x3, 0(x2) # store 0x39b38bd547cc9661 in memory
fld f13, 0(x2) # load 0x39b38bd547cc9661 from memory into f13
fnmadd.d f3, f18, f16, f13, dyn # perform operation
fnmadd.d f3, f18, f16, f13, rdn # perform operation
fnmadd.d f3, f18, f16, f13, rmm # perform operation
fnmadd.d f3, f18, f16, f13, rne # perform operation
fnmadd.d f3, f18, f16, f13, rtz # perform operation
fnmadd.d f3, f18, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f18, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x9, 0xbbb21d36dde596fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x29198f64e7a8d732 # load x3 with value 0x29198f64e7a8d732
sd x3, 0(x2) # store 0x29198f64e7a8d732 in memory
fld f31, 0(x2) # load 0x29198f64e7a8d732 from memory into f31
fnmadd.d f9, f30, f13, f31, dyn # perform operation
fnmadd.d f9, f30, f13, f31, rdn # perform operation
fnmadd.d f9, f30, f13, f31, rmm # perform operation
fnmadd.d f9, f30, f13, f31, rne # perform operation
fnmadd.d f9, f30, f13, f31, rtz # perform operation
fnmadd.d f9, f30, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f30, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x17, 0xa8cb3a16405d9a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xfd37ac0d4d652fa5 # load x3 with value 0xfd37ac0d4d652fa5
sd x3, 0(x2) # store 0xfd37ac0d4d652fa5 in memory
fld f23, 0(x2) # load 0xfd37ac0d4d652fa5 from memory into f23
fnmadd.d f17, f22, f11, f23, dyn # perform operation
fnmadd.d f17, f22, f11, f23, rdn # perform operation
fnmadd.d f17, f22, f11, f23, rmm # perform operation
fnmadd.d f17, f22, f11, f23, rne # perform operation
fnmadd.d f17, f22, f11, f23, rtz # perform operation
fnmadd.d f17, f22, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f22, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x18, 0xa890b3ab2c1486ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0xa7c7daf2cf6c4c7f # load x3 with value 0xa7c7daf2cf6c4c7f
sd x3, 0(x2) # store 0xa7c7daf2cf6c4c7f in memory
fld f2, 0(x2) # load 0xa7c7daf2cf6c4c7f from memory into f2
fnmadd.d f18, f7, f14, f2, dyn # perform operation
fnmadd.d f18, f7, f14, f2, rdn # perform operation
fnmadd.d f18, f7, f14, f2, rmm # perform operation
fnmadd.d f18, f7, f14, f2, rne # perform operation
fnmadd.d f18, f7, f14, f2, rtz # perform operation
fnmadd.d f18, f7, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f7, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x27, 0xf2784d111a2642a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0xb662e293d29df5a3 # load x3 with value 0xb662e293d29df5a3
sd x3, 0(x2) # store 0xb662e293d29df5a3 in memory
fld f8, 0(x2) # load 0xb662e293d29df5a3 from memory into f8
fnmadd.d f27, f20, f2, f8, dyn # perform operation
fnmadd.d f27, f20, f2, f8, rdn # perform operation
fnmadd.d f27, f20, f2, f8, rmm # perform operation
fnmadd.d f27, f20, f2, f8, rne # perform operation
fnmadd.d f27, f20, f2, f8, rtz # perform operation
fnmadd.d f27, f20, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f20, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x4, 0xf708ca1780cf462e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x457d0992ba4fbb88 # load x3 with value 0x457d0992ba4fbb88
sd x3, 0(x2) # store 0x457d0992ba4fbb88 in memory
fld f26, 0(x2) # load 0x457d0992ba4fbb88 from memory into f26
fnmadd.d f4, f19, f10, f26, dyn # perform operation
fnmadd.d f4, f19, f10, f26, rdn # perform operation
fnmadd.d f4, f19, f10, f26, rmm # perform operation
fnmadd.d f4, f19, f10, f26, rne # perform operation
fnmadd.d f4, f19, f10, f26, rtz # perform operation
fnmadd.d f4, f19, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f19, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x20, 0x4536f676587a2064 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x1c72cddbf428f70c # load x3 with value 0x1c72cddbf428f70c
sd x3, 0(x2) # store 0x1c72cddbf428f70c in memory
fld f13, 0(x2) # load 0x1c72cddbf428f70c from memory into f13
fnmadd.d f20, f11, f23, f13, dyn # perform operation
fnmadd.d f20, f11, f23, f13, rdn # perform operation
fnmadd.d f20, f11, f23, f13, rmm # perform operation
fnmadd.d f20, f11, f23, f13, rne # perform operation
fnmadd.d f20, f11, f23, f13, rtz # perform operation
fnmadd.d f20, f11, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f11, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x17, 0x6931d640acd1109f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x89dd19a391298024 # load x3 with value 0x89dd19a391298024
sd x3, 0(x2) # store 0x89dd19a391298024 in memory
fld f28, 0(x2) # load 0x89dd19a391298024 from memory into f28
fnmadd.d f17, f21, f26, f28, dyn # perform operation
fnmadd.d f17, f21, f26, f28, rdn # perform operation
fnmadd.d f17, f21, f26, f28, rmm # perform operation
fnmadd.d f17, f21, f26, f28, rne # perform operation
fnmadd.d f17, f21, f26, f28, rtz # perform operation
fnmadd.d f17, f21, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f21, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f21, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f21, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f21, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f21, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x23, 0x4f5f1d9dc2a997af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xb4a5c9147f82292d # load x3 with value 0xb4a5c9147f82292d
sd x3, 0(x2) # store 0xb4a5c9147f82292d in memory
fld f26, 0(x2) # load 0xb4a5c9147f82292d from memory into f26
fnmadd.d f23, f8, f20, f26, dyn # perform operation
fnmadd.d f23, f8, f20, f26, rdn # perform operation
fnmadd.d f23, f8, f20, f26, rmm # perform operation
fnmadd.d f23, f8, f20, f26, rne # perform operation
fnmadd.d f23, f8, f20, f26, rtz # perform operation
fnmadd.d f23, f8, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f8, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f8, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x26, 0x1a2a6c8358bbeb58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x1b850a9e6c503e3e # load x3 with value 0x1b850a9e6c503e3e
sd x3, 0(x2) # store 0x1b850a9e6c503e3e in memory
fld f18, 0(x2) # load 0x1b850a9e6c503e3e from memory into f18
fnmadd.d f26, f1, f6, f18, dyn # perform operation
fnmadd.d f26, f1, f6, f18, rdn # perform operation
fnmadd.d f26, f1, f6, f18, rmm # perform operation
fnmadd.d f26, f1, f6, f18, rne # perform operation
fnmadd.d f26, f1, f6, f18, rtz # perform operation
fnmadd.d f26, f1, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f1, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f1, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x2, 0x3b278b71a2b25d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xa024f13b10710d07 # load x3 with value 0xa024f13b10710d07
sd x3, 0(x2) # store 0xa024f13b10710d07 in memory
fld f29, 0(x2) # load 0xa024f13b10710d07 from memory into f29
fnmadd.d f2, f3, f19, f29, dyn # perform operation
fnmadd.d f2, f3, f19, f29, rdn # perform operation
fnmadd.d f2, f3, f19, f29, rmm # perform operation
fnmadd.d f2, f3, f19, f29, rne # perform operation
fnmadd.d f2, f3, f19, f29, rtz # perform operation
fnmadd.d f2, f3, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f3, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x24, 0x94e7ba3e7d0bf749 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0xc52ab45f3440924e # load x3 with value 0xc52ab45f3440924e
sd x3, 0(x2) # store 0xc52ab45f3440924e in memory
fld f30, 0(x2) # load 0xc52ab45f3440924e from memory into f30
fnmadd.d f24, f15, f18, f30, dyn # perform operation
fnmadd.d f24, f15, f18, f30, rdn # perform operation
fnmadd.d f24, f15, f18, f30, rmm # perform operation
fnmadd.d f24, f15, f18, f30, rne # perform operation
fnmadd.d f24, f15, f18, f30, rtz # perform operation
fnmadd.d f24, f15, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f15, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f15, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f15, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f15, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f15, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x27, 0xd52aeec0d6aa56f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x948faabf1c6179e3 # load x3 with value 0x948faabf1c6179e3
sd x3, 0(x2) # store 0x948faabf1c6179e3 in memory
fld f31, 0(x2) # load 0x948faabf1c6179e3 from memory into f31
fnmadd.d f27, f24, f10, f31, dyn # perform operation
fnmadd.d f27, f24, f10, f31, rdn # perform operation
fnmadd.d f27, f24, f10, f31, rmm # perform operation
fnmadd.d f27, f24, f10, f31, rne # perform operation
fnmadd.d f27, f24, f10, f31, rtz # perform operation
fnmadd.d f27, f24, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f24, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x20, 0xbda56f79431c146d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x2f69da59530ffdaf # load x3 with value 0x2f69da59530ffdaf
sd x3, 0(x2) # store 0x2f69da59530ffdaf in memory
fld f26, 0(x2) # load 0x2f69da59530ffdaf from memory into f26
fnmadd.d f20, f19, f2, f26, dyn # perform operation
fnmadd.d f20, f19, f2, f26, rdn # perform operation
fnmadd.d f20, f19, f2, f26, rmm # perform operation
fnmadd.d f20, f19, f2, f26, rne # perform operation
fnmadd.d f20, f19, f2, f26, rtz # perform operation
fnmadd.d f20, f19, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f19, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f19, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x10, 0x99235c2005c1271d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x2db3b034b82966e8 # load x3 with value 0x2db3b034b82966e8
sd x3, 0(x2) # store 0x2db3b034b82966e8 in memory
fld f25, 0(x2) # load 0x2db3b034b82966e8 from memory into f25
fnmadd.d f10, f16, f20, f25, dyn # perform operation
fnmadd.d f10, f16, f20, f25, rdn # perform operation
fnmadd.d f10, f16, f20, f25, rmm # perform operation
fnmadd.d f10, f16, f20, f25, rne # perform operation
fnmadd.d f10, f16, f20, f25, rtz # perform operation
fnmadd.d f10, f16, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f16, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f16, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x10, 0x438dcfe51599656e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0x7ca51b9051764ef2 # load x3 with value 0x7ca51b9051764ef2
sd x3, 0(x2) # store 0x7ca51b9051764ef2 in memory
fld f16, 0(x2) # load 0x7ca51b9051764ef2 from memory into f16
fnmadd.d f10, f30, f8, f16, dyn # perform operation
fnmadd.d f10, f30, f8, f16, rdn # perform operation
fnmadd.d f10, f30, f8, f16, rmm # perform operation
fnmadd.d f10, f30, f8, f16, rne # perform operation
fnmadd.d f10, f30, f8, f16, rtz # perform operation
fnmadd.d f10, f30, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f30, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f30, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x6, 0x12167b92deea4f0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x1411e910c7959b6e # load x3 with value 0x1411e910c7959b6e
sd x3, 0(x2) # store 0x1411e910c7959b6e in memory
fld f29, 0(x2) # load 0x1411e910c7959b6e from memory into f29
fnmadd.d f6, f31, f27, f29, dyn # perform operation
fnmadd.d f6, f31, f27, f29, rdn # perform operation
fnmadd.d f6, f31, f27, f29, rmm # perform operation
fnmadd.d f6, f31, f27, f29, rne # perform operation
fnmadd.d f6, f31, f27, f29, rtz # perform operation
fnmadd.d f6, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f31, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x7, 0x3c3b9ce810533bf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0xd171e4d7de7c4c05 # load x3 with value 0xd171e4d7de7c4c05
sd x3, 0(x2) # store 0xd171e4d7de7c4c05 in memory
fld f19, 0(x2) # load 0xd171e4d7de7c4c05 from memory into f19
fnmadd.d f7, f3, f23, f19, dyn # perform operation
fnmadd.d f7, f3, f23, f19, rdn # perform operation
fnmadd.d f7, f3, f23, f19, rmm # perform operation
fnmadd.d f7, f3, f23, f19, rne # perform operation
fnmadd.d f7, f3, f23, f19, rtz # perform operation
fnmadd.d f7, f3, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x3, 0xc4d22e2ecad688f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xdbd2d855d53e710d # load x3 with value 0xdbd2d855d53e710d
sd x3, 0(x2) # store 0xdbd2d855d53e710d in memory
fld f14, 0(x2) # load 0xdbd2d855d53e710d from memory into f14
fnmadd.d f3, f23, f10, f14, dyn # perform operation
fnmadd.d f3, f23, f10, f14, rdn # perform operation
fnmadd.d f3, f23, f10, f14, rmm # perform operation
fnmadd.d f3, f23, f10, f14, rne # perform operation
fnmadd.d f3, f23, f10, f14, rtz # perform operation
fnmadd.d f3, f23, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f23, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f23, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f23, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f23, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f23, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x30, 0x228c5357d4cf7d3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x4f5b2f0a9dc9f743 # load x3 with value 0x4f5b2f0a9dc9f743
sd x3, 0(x2) # store 0x4f5b2f0a9dc9f743 in memory
fld f12, 0(x2) # load 0x4f5b2f0a9dc9f743 from memory into f12
fnmadd.d f30, f26, f10, f12, dyn # perform operation
fnmadd.d f30, f26, f10, f12, rdn # perform operation
fnmadd.d f30, f26, f10, f12, rmm # perform operation
fnmadd.d f30, f26, f10, f12, rne # perform operation
fnmadd.d f30, f26, f10, f12, rtz # perform operation
fnmadd.d f30, f26, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f26, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x23, 0xfe29c679cfaa278f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x4cd55741fa25a991 # load x3 with value 0x4cd55741fa25a991
sd x3, 0(x2) # store 0x4cd55741fa25a991 in memory
fld f5, 0(x2) # load 0x4cd55741fa25a991 from memory into f5
fnmadd.d f23, f30, f7, f5, dyn # perform operation
fnmadd.d f23, f30, f7, f5, rdn # perform operation
fnmadd.d f23, f30, f7, f5, rmm # perform operation
fnmadd.d f23, f30, f7, f5, rne # perform operation
fnmadd.d f23, f30, f7, f5, rtz # perform operation
fnmadd.d f23, f30, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f30, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f30, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f30, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f30, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f30, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x26, 0xddfd151d46933ad8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x862df4718686565e # load x3 with value 0x862df4718686565e
sd x3, 0(x2) # store 0x862df4718686565e in memory
fld f9, 0(x2) # load 0x862df4718686565e from memory into f9
fnmadd.d f26, f11, f27, f9, dyn # perform operation
fnmadd.d f26, f11, f27, f9, rdn # perform operation
fnmadd.d f26, f11, f27, f9, rmm # perform operation
fnmadd.d f26, f11, f27, f9, rne # perform operation
fnmadd.d f26, f11, f27, f9, rtz # perform operation
fnmadd.d f26, f11, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f11, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f11, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x29, 0xcbd99a5206783bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x280e578402182f96 # load x3 with value 0x280e578402182f96
sd x3, 0(x2) # store 0x280e578402182f96 in memory
fld f31, 0(x2) # load 0x280e578402182f96 from memory into f31
fnmadd.d f29, f11, f8, f31, dyn # perform operation
fnmadd.d f29, f11, f8, f31, rdn # perform operation
fnmadd.d f29, f11, f8, f31, rmm # perform operation
fnmadd.d f29, f11, f8, f31, rne # perform operation
fnmadd.d f29, f11, f8, f31, rtz # perform operation
fnmadd.d f29, f11, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f11, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f11, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f11, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f11, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f11, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x29, 0xe1f88217b7f9f72d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x21b6f2062b735ce2 # load x3 with value 0x21b6f2062b735ce2
sd x3, 0(x2) # store 0x21b6f2062b735ce2 in memory
fld f8, 0(x2) # load 0x21b6f2062b735ce2 from memory into f8
fnmadd.d f29, f30, f3, f8, dyn # perform operation
fnmadd.d f29, f30, f3, f8, rdn # perform operation
fnmadd.d f29, f30, f3, f8, rmm # perform operation
fnmadd.d f29, f30, f3, f8, rne # perform operation
fnmadd.d f29, f30, f3, f8, rtz # perform operation
fnmadd.d f29, f30, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f30, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x11, 0xb3947ef127bb8beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x3256bcb3b913729b # load x3 with value 0x3256bcb3b913729b
sd x3, 0(x2) # store 0x3256bcb3b913729b in memory
fld f27, 0(x2) # load 0x3256bcb3b913729b from memory into f27
fnmadd.d f11, f24, f21, f27, dyn # perform operation
fnmadd.d f11, f24, f21, f27, rdn # perform operation
fnmadd.d f11, f24, f21, f27, rmm # perform operation
fnmadd.d f11, f24, f21, f27, rne # perform operation
fnmadd.d f11, f24, f21, f27, rtz # perform operation
fnmadd.d f11, f24, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f24, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x22, 0x477efc645f83b975 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x39695c43444c5f2b # load x3 with value 0x39695c43444c5f2b
sd x3, 0(x2) # store 0x39695c43444c5f2b in memory
fld f27, 0(x2) # load 0x39695c43444c5f2b from memory into f27
fnmadd.d f22, f7, f31, f27, dyn # perform operation
fnmadd.d f22, f7, f31, f27, rdn # perform operation
fnmadd.d f22, f7, f31, f27, rmm # perform operation
fnmadd.d f22, f7, f31, f27, rne # perform operation
fnmadd.d f22, f7, f31, f27, rtz # perform operation
fnmadd.d f22, f7, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x19, 0x54b5effce8c7cbe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x22ab39cc9df1d51c # load x3 with value 0x22ab39cc9df1d51c
sd x3, 0(x2) # store 0x22ab39cc9df1d51c in memory
fld f27, 0(x2) # load 0x22ab39cc9df1d51c from memory into f27
fnmadd.d f19, f23, f13, f27, dyn # perform operation
fnmadd.d f19, f23, f13, f27, rdn # perform operation
fnmadd.d f19, f23, f13, f27, rmm # perform operation
fnmadd.d f19, f23, f13, f27, rne # perform operation
fnmadd.d f19, f23, f13, f27, rtz # perform operation
fnmadd.d f19, f23, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f23, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x29, 0x97bb6b626ccc09ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0xfb747589b124f042 # load x3 with value 0xfb747589b124f042
sd x3, 0(x2) # store 0xfb747589b124f042 in memory
fld f15, 0(x2) # load 0xfb747589b124f042 from memory into f15
fnmadd.d f29, f30, f11, f15, dyn # perform operation
fnmadd.d f29, f30, f11, f15, rdn # perform operation
fnmadd.d f29, f30, f11, f15, rmm # perform operation
fnmadd.d f29, f30, f11, f15, rne # perform operation
fnmadd.d f29, f30, f11, f15, rtz # perform operation
fnmadd.d f29, f30, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f30, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f30, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f30, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f30, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f30, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x20, 0x633289d11c694e30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x88fc2add3c5f151f # load x3 with value 0x88fc2add3c5f151f
sd x3, 0(x2) # store 0x88fc2add3c5f151f in memory
fld f15, 0(x2) # load 0x88fc2add3c5f151f from memory into f15
fnmadd.d f20, f22, f16, f15, dyn # perform operation
fnmadd.d f20, f22, f16, f15, rdn # perform operation
fnmadd.d f20, f22, f16, f15, rmm # perform operation
fnmadd.d f20, f22, f16, f15, rne # perform operation
fnmadd.d f20, f22, f16, f15, rtz # perform operation
fnmadd.d f20, f22, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f22, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f22, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f22, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f22, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f22, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x14, 0x37667c92fad097da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x252538d47eafc238 # load x3 with value 0x252538d47eafc238
sd x3, 0(x2) # store 0x252538d47eafc238 in memory
fld f27, 0(x2) # load 0x252538d47eafc238 from memory into f27
fnmadd.d f14, f26, f7, f27, dyn # perform operation
fnmadd.d f14, f26, f7, f27, rdn # perform operation
fnmadd.d f14, f26, f7, f27, rmm # perform operation
fnmadd.d f14, f26, f7, f27, rne # perform operation
fnmadd.d f14, f26, f7, f27, rtz # perform operation
fnmadd.d f14, f26, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f26, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x27, 0x1bd0c06c6e3118f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xebb63a0c2edd6ef8 # load x3 with value 0xebb63a0c2edd6ef8
sd x3, 0(x2) # store 0xebb63a0c2edd6ef8 in memory
fld f6, 0(x2) # load 0xebb63a0c2edd6ef8 from memory into f6
fnmadd.d f27, f7, f15, f6, dyn # perform operation
fnmadd.d f27, f7, f15, f6, rdn # perform operation
fnmadd.d f27, f7, f15, f6, rmm # perform operation
fnmadd.d f27, f7, f15, f6, rne # perform operation
fnmadd.d f27, f7, f15, f6, rtz # perform operation
fnmadd.d f27, f7, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f7, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f7, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f7, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f7, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f7, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x25, 0x209ddffdbbb44e86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x42fe72476d192810 # load x3 with value 0x42fe72476d192810
sd x3, 0(x2) # store 0x42fe72476d192810 in memory
fld f4, 0(x2) # load 0x42fe72476d192810 from memory into f4
fnmadd.d f25, f14, f17, f4, dyn # perform operation
fnmadd.d f25, f14, f17, f4, rdn # perform operation
fnmadd.d f25, f14, f17, f4, rmm # perform operation
fnmadd.d f25, f14, f17, f4, rne # perform operation
fnmadd.d f25, f14, f17, f4, rtz # perform operation
fnmadd.d f25, f14, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x30, 0xd910118e3d95d609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0xf4ffc5af8a0b0631 # load x3 with value 0xf4ffc5af8a0b0631
sd x3, 0(x2) # store 0xf4ffc5af8a0b0631 in memory
fld f10, 0(x2) # load 0xf4ffc5af8a0b0631 from memory into f10
fnmadd.d f30, f15, f14, f10, dyn # perform operation
fnmadd.d f30, f15, f14, f10, rdn # perform operation
fnmadd.d f30, f15, f14, f10, rmm # perform operation
fnmadd.d f30, f15, f14, f10, rne # perform operation
fnmadd.d f30, f15, f14, f10, rtz # perform operation
fnmadd.d f30, f15, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f15, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x18, 0x78db47557921b109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x5391955ec121e19e # load x3 with value 0x5391955ec121e19e
sd x3, 0(x2) # store 0x5391955ec121e19e in memory
fld f12, 0(x2) # load 0x5391955ec121e19e from memory into f12
fnmadd.d f18, f23, f13, f12, dyn # perform operation
fnmadd.d f18, f23, f13, f12, rdn # perform operation
fnmadd.d f18, f23, f13, f12, rmm # perform operation
fnmadd.d f18, f23, f13, f12, rne # perform operation
fnmadd.d f18, f23, f13, f12, rtz # perform operation
fnmadd.d f18, f23, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f23, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f23, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f23, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f23, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f23, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x23, 0x63c30429dbaf02c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x40d400b44a8658e6 # load x3 with value 0x40d400b44a8658e6
sd x3, 0(x2) # store 0x40d400b44a8658e6 in memory
fld f14, 0(x2) # load 0x40d400b44a8658e6 from memory into f14
fnmadd.d f23, f5, f29, f14, dyn # perform operation
fnmadd.d f23, f5, f29, f14, rdn # perform operation
fnmadd.d f23, f5, f29, f14, rmm # perform operation
fnmadd.d f23, f5, f29, f14, rne # perform operation
fnmadd.d f23, f5, f29, f14, rtz # perform operation
fnmadd.d f23, f5, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f5, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x7, 0xe569aea2a8033e28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0xb140e4f7ebc2fffa # load x3 with value 0xb140e4f7ebc2fffa
sd x3, 0(x2) # store 0xb140e4f7ebc2fffa in memory
fld f28, 0(x2) # load 0xb140e4f7ebc2fffa from memory into f28
fnmadd.d f7, f11, f12, f28, dyn # perform operation
fnmadd.d f7, f11, f12, f28, rdn # perform operation
fnmadd.d f7, f11, f12, f28, rmm # perform operation
fnmadd.d f7, f11, f12, f28, rne # perform operation
fnmadd.d f7, f11, f12, f28, rtz # perform operation
fnmadd.d f7, f11, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f11, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x23, 0xdc84b1197cb3cff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x11b7a178489cc260 # load x3 with value 0x11b7a178489cc260
sd x3, 0(x2) # store 0x11b7a178489cc260 in memory
fld f9, 0(x2) # load 0x11b7a178489cc260 from memory into f9
fnmadd.d f23, f17, f20, f9, dyn # perform operation
fnmadd.d f23, f17, f20, f9, rdn # perform operation
fnmadd.d f23, f17, f20, f9, rmm # perform operation
fnmadd.d f23, f17, f20, f9, rne # perform operation
fnmadd.d f23, f17, f20, f9, rtz # perform operation
fnmadd.d f23, f17, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f17, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x11, 0xa22df2d2badc9882 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x1d9504d69f212ff7 # load x3 with value 0x1d9504d69f212ff7
sd x3, 0(x2) # store 0x1d9504d69f212ff7 in memory
fld f21, 0(x2) # load 0x1d9504d69f212ff7 from memory into f21
fnmadd.d f11, f17, f16, f21, dyn # perform operation
fnmadd.d f11, f17, f16, f21, rdn # perform operation
fnmadd.d f11, f17, f16, f21, rmm # perform operation
fnmadd.d f11, f17, f16, f21, rne # perform operation
fnmadd.d f11, f17, f16, f21, rtz # perform operation
fnmadd.d f11, f17, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x22, 0x9112d2f628d9dc1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x9582dfeded6b47d4 # load x3 with value 0x9582dfeded6b47d4
sd x3, 0(x2) # store 0x9582dfeded6b47d4 in memory
fld f31, 0(x2) # load 0x9582dfeded6b47d4 from memory into f31
fnmadd.d f22, f7, f10, f31, dyn # perform operation
fnmadd.d f22, f7, f10, f31, rdn # perform operation
fnmadd.d f22, f7, f10, f31, rmm # perform operation
fnmadd.d f22, f7, f10, f31, rne # perform operation
fnmadd.d f22, f7, f10, f31, rtz # perform operation
fnmadd.d f22, f7, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x14, 0xf7653b1a454fa312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x5243124d40f8c3bc # load x3 with value 0x5243124d40f8c3bc
sd x3, 0(x2) # store 0x5243124d40f8c3bc in memory
fld f15, 0(x2) # load 0x5243124d40f8c3bc from memory into f15
fnmadd.d f14, f9, f20, f15, dyn # perform operation
fnmadd.d f14, f9, f20, f15, rdn # perform operation
fnmadd.d f14, f9, f20, f15, rmm # perform operation
fnmadd.d f14, f9, f20, f15, rne # perform operation
fnmadd.d f14, f9, f20, f15, rtz # perform operation
fnmadd.d f14, f9, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f9, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x24, 0xa506157c25fed57b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0xc526402993b18261 # load x3 with value 0xc526402993b18261
sd x3, 0(x2) # store 0xc526402993b18261 in memory
fld f7, 0(x2) # load 0xc526402993b18261 from memory into f7
fnmadd.d f24, f9, f20, f7, dyn # perform operation
fnmadd.d f24, f9, f20, f7, rdn # perform operation
fnmadd.d f24, f9, f20, f7, rmm # perform operation
fnmadd.d f24, f9, f20, f7, rne # perform operation
fnmadd.d f24, f9, f20, f7, rtz # perform operation
fnmadd.d f24, f9, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f9, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f9, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x17, 0x0a4286fed9cb7e07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x016ca4aa305a9a91 # load x3 with value 0x016ca4aa305a9a91
sd x3, 0(x2) # store 0x016ca4aa305a9a91 in memory
fld f8, 0(x2) # load 0x016ca4aa305a9a91 from memory into f8
fnmadd.d f17, f27, f21, f8, dyn # perform operation
fnmadd.d f17, f27, f21, f8, rdn # perform operation
fnmadd.d f17, f27, f21, f8, rmm # perform operation
fnmadd.d f17, f27, f21, f8, rne # perform operation
fnmadd.d f17, f27, f21, f8, rtz # perform operation
fnmadd.d f17, f27, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f27, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x13, 0x379d38492ea0cb81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x2e1dac78ab492c68 # load x3 with value 0x2e1dac78ab492c68
sd x3, 0(x2) # store 0x2e1dac78ab492c68 in memory
fld f28, 0(x2) # load 0x2e1dac78ab492c68 from memory into f28
fnmadd.d f13, f11, f30, f28, dyn # perform operation
fnmadd.d f13, f11, f30, f28, rdn # perform operation
fnmadd.d f13, f11, f30, f28, rmm # perform operation
fnmadd.d f13, f11, f30, f28, rne # perform operation
fnmadd.d f13, f11, f30, f28, rtz # perform operation
fnmadd.d f13, f11, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f11, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x14, 0x36cebbe8b4baa39a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x82e659e1e53c04aa # load x3 with value 0x82e659e1e53c04aa
sd x3, 0(x2) # store 0x82e659e1e53c04aa in memory
fld f23, 0(x2) # load 0x82e659e1e53c04aa from memory into f23
fnmadd.d f14, f4, f5, f23, dyn # perform operation
fnmadd.d f14, f4, f5, f23, rdn # perform operation
fnmadd.d f14, f4, f5, f23, rmm # perform operation
fnmadd.d f14, f4, f5, f23, rne # perform operation
fnmadd.d f14, f4, f5, f23, rtz # perform operation
fnmadd.d f14, f4, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f4, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f4, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f4, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f4, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f4, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x21, 0x755622ef45abaef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xbdac418954fb2e69 # load x3 with value 0xbdac418954fb2e69
sd x3, 0(x2) # store 0xbdac418954fb2e69 in memory
fld f19, 0(x2) # load 0xbdac418954fb2e69 from memory into f19
fnmadd.d f21, f7, f25, f19, dyn # perform operation
fnmadd.d f21, f7, f25, f19, rdn # perform operation
fnmadd.d f21, f7, f25, f19, rmm # perform operation
fnmadd.d f21, f7, f25, f19, rne # perform operation
fnmadd.d f21, f7, f25, f19, rtz # perform operation
fnmadd.d f21, f7, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f7, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f7, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x5, 0xca6184d8aee36377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xd9d1718f89910ee0 # load x3 with value 0xd9d1718f89910ee0
sd x3, 0(x2) # store 0xd9d1718f89910ee0 in memory
fld f18, 0(x2) # load 0xd9d1718f89910ee0 from memory into f18
fnmadd.d f5, f16, f2, f18, dyn # perform operation
fnmadd.d f5, f16, f2, f18, rdn # perform operation
fnmadd.d f5, f16, f2, f18, rmm # perform operation
fnmadd.d f5, f16, f2, f18, rne # perform operation
fnmadd.d f5, f16, f2, f18, rtz # perform operation
fnmadd.d f5, f16, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f16, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f16, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x25, 0x9eb89bb977b0f9c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0xe32925be6d53e8ec # load x3 with value 0xe32925be6d53e8ec
sd x3, 0(x2) # store 0xe32925be6d53e8ec in memory
fld f18, 0(x2) # load 0xe32925be6d53e8ec from memory into f18
fnmadd.d f25, f20, f21, f18, dyn # perform operation
fnmadd.d f25, f20, f21, f18, rdn # perform operation
fnmadd.d f25, f20, f21, f18, rmm # perform operation
fnmadd.d f25, f20, f21, f18, rne # perform operation
fnmadd.d f25, f20, f21, f18, rtz # perform operation
fnmadd.d f25, f20, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f20, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x31, 0x69b5b30941a553d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xf54b6f54ba26e68b # load x3 with value 0xf54b6f54ba26e68b
sd x3, 0(x2) # store 0xf54b6f54ba26e68b in memory
fld f7, 0(x2) # load 0xf54b6f54ba26e68b from memory into f7
fnmadd.d f31, f4, f24, f7, dyn # perform operation
fnmadd.d f31, f4, f24, f7, rdn # perform operation
fnmadd.d f31, f4, f24, f7, rmm # perform operation
fnmadd.d f31, f4, f24, f7, rne # perform operation
fnmadd.d f31, f4, f24, f7, rtz # perform operation
fnmadd.d f31, f4, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f4, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f4, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f4, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f4, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f4, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x17, 0x2e81ffebab273b9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x67cf801d4b3f688a # load x3 with value 0x67cf801d4b3f688a
sd x3, 0(x2) # store 0x67cf801d4b3f688a in memory
fld f29, 0(x2) # load 0x67cf801d4b3f688a from memory into f29
fnmadd.d f17, f20, f12, f29, dyn # perform operation
fnmadd.d f17, f20, f12, f29, rdn # perform operation
fnmadd.d f17, f20, f12, f29, rmm # perform operation
fnmadd.d f17, f20, f12, f29, rne # perform operation
fnmadd.d f17, f20, f12, f29, rtz # perform operation
fnmadd.d f17, f20, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f20, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x18, 0x8740b77b93ed9732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0xee08fc8ff79a37a1 # load x3 with value 0xee08fc8ff79a37a1
sd x3, 0(x2) # store 0xee08fc8ff79a37a1 in memory
fld f14, 0(x2) # load 0xee08fc8ff79a37a1 from memory into f14
fnmadd.d f18, f26, f24, f14, dyn # perform operation
fnmadd.d f18, f26, f24, f14, rdn # perform operation
fnmadd.d f18, f26, f24, f14, rmm # perform operation
fnmadd.d f18, f26, f24, f14, rne # perform operation
fnmadd.d f18, f26, f24, f14, rtz # perform operation
fnmadd.d f18, f26, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f26, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f26, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x2, 0xdb1de7ced46075ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xae7b6761e82b295c # load x3 with value 0xae7b6761e82b295c
sd x3, 0(x2) # store 0xae7b6761e82b295c in memory
fld f1, 0(x2) # load 0xae7b6761e82b295c from memory into f1
fnmadd.d f2, f9, f19, f1, dyn # perform operation
fnmadd.d f2, f9, f19, f1, rdn # perform operation
fnmadd.d f2, f9, f19, f1, rmm # perform operation
fnmadd.d f2, f9, f19, f1, rne # perform operation
fnmadd.d f2, f9, f19, f1, rtz # perform operation
fnmadd.d f2, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x22, 0x54387fcd208e9680 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x3689886b60ea6ac7 # load x3 with value 0x3689886b60ea6ac7
sd x3, 0(x2) # store 0x3689886b60ea6ac7 in memory
fld f30, 0(x2) # load 0x3689886b60ea6ac7 from memory into f30
fnmadd.d f22, f31, f23, f30, dyn # perform operation
fnmadd.d f22, f31, f23, f30, rdn # perform operation
fnmadd.d f22, f31, f23, f30, rmm # perform operation
fnmadd.d f22, f31, f23, f30, rne # perform operation
fnmadd.d f22, f31, f23, f30, rtz # perform operation
fnmadd.d f22, f31, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f31, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f31, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f31, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f31, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f31, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x27, 0x174e6eeca64a2915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0xce7a2cf168de3ddc # load x3 with value 0xce7a2cf168de3ddc
sd x3, 0(x2) # store 0xce7a2cf168de3ddc in memory
fld f26, 0(x2) # load 0xce7a2cf168de3ddc from memory into f26
fnmadd.d f27, f8, f23, f26, dyn # perform operation
fnmadd.d f27, f8, f23, f26, rdn # perform operation
fnmadd.d f27, f8, f23, f26, rmm # perform operation
fnmadd.d f27, f8, f23, f26, rne # perform operation
fnmadd.d f27, f8, f23, f26, rtz # perform operation
fnmadd.d f27, f8, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f8, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f8, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f8, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f8, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f8, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x19, 0x05e8efffa95144aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x536348f4797e039a # load x3 with value 0x536348f4797e039a
sd x3, 0(x2) # store 0x536348f4797e039a in memory
fld f26, 0(x2) # load 0x536348f4797e039a from memory into f26
fnmadd.d f19, f3, f16, f26, dyn # perform operation
fnmadd.d f19, f3, f16, f26, rdn # perform operation
fnmadd.d f19, f3, f16, f26, rmm # perform operation
fnmadd.d f19, f3, f16, f26, rne # perform operation
fnmadd.d f19, f3, f16, f26, rtz # perform operation
fnmadd.d f19, f3, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f3, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f3, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x4, 0x5df6b14782ea7d93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xbc6cde18a191b303 # load x3 with value 0xbc6cde18a191b303
sd x3, 0(x2) # store 0xbc6cde18a191b303 in memory
fld f11, 0(x2) # load 0xbc6cde18a191b303 from memory into f11
fnmadd.d f4, f28, f19, f11, dyn # perform operation
fnmadd.d f4, f28, f19, f11, rdn # perform operation
fnmadd.d f4, f28, f19, f11, rmm # perform operation
fnmadd.d f4, f28, f19, f11, rne # perform operation
fnmadd.d f4, f28, f19, f11, rtz # perform operation
fnmadd.d f4, f28, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f28, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x21, 0x033509bab2dea020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x96358128208a8a22 # load x3 with value 0x96358128208a8a22
sd x3, 0(x2) # store 0x96358128208a8a22 in memory
fld f5, 0(x2) # load 0x96358128208a8a22 from memory into f5
fnmadd.d f21, f28, f23, f5, dyn # perform operation
fnmadd.d f21, f28, f23, f5, rdn # perform operation
fnmadd.d f21, f28, f23, f5, rmm # perform operation
fnmadd.d f21, f28, f23, f5, rne # perform operation
fnmadd.d f21, f28, f23, f5, rtz # perform operation
fnmadd.d f21, f28, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f28, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x22, 0xd18c2d044556880e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x456d125efb9e7ed2 # load x3 with value 0x456d125efb9e7ed2
sd x3, 0(x2) # store 0x456d125efb9e7ed2 in memory
fld f25, 0(x2) # load 0x456d125efb9e7ed2 from memory into f25
fnmadd.d f22, f15, f30, f25, dyn # perform operation
fnmadd.d f22, f15, f30, f25, rdn # perform operation
fnmadd.d f22, f15, f30, f25, rmm # perform operation
fnmadd.d f22, f15, f30, f25, rne # perform operation
fnmadd.d f22, f15, f30, f25, rtz # perform operation
fnmadd.d f22, f15, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f15, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x31, 0x0b0b11aca5b1e64a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x66fef589fd5555e2 # load x3 with value 0x66fef589fd5555e2
sd x3, 0(x2) # store 0x66fef589fd5555e2 in memory
fld f8, 0(x2) # load 0x66fef589fd5555e2 from memory into f8
fnmadd.d f31, f29, f25, f8, dyn # perform operation
fnmadd.d f31, f29, f25, f8, rdn # perform operation
fnmadd.d f31, f29, f25, f8, rmm # perform operation
fnmadd.d f31, f29, f25, f8, rne # perform operation
fnmadd.d f31, f29, f25, f8, rtz # perform operation
fnmadd.d f31, f29, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f29, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f29, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f29, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f29, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f29, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x8, 0xe5deaa2f5c39d487 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x45d96422ba9db8ff # load x3 with value 0x45d96422ba9db8ff
sd x3, 0(x2) # store 0x45d96422ba9db8ff in memory
fld f17, 0(x2) # load 0x45d96422ba9db8ff from memory into f17
fnmadd.d f8, f24, f26, f17, dyn # perform operation
fnmadd.d f8, f24, f26, f17, rdn # perform operation
fnmadd.d f8, f24, f26, f17, rmm # perform operation
fnmadd.d f8, f24, f26, f17, rne # perform operation
fnmadd.d f8, f24, f26, f17, rtz # perform operation
fnmadd.d f8, f24, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f24, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x28, 0xf3140ab268e1be61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x0f00053dadae8001 # load x3 with value 0x0f00053dadae8001
sd x3, 0(x2) # store 0x0f00053dadae8001 in memory
fld f15, 0(x2) # load 0x0f00053dadae8001 from memory into f15
fnmadd.d f28, f12, f2, f15, dyn # perform operation
fnmadd.d f28, f12, f2, f15, rdn # perform operation
fnmadd.d f28, f12, f2, f15, rmm # perform operation
fnmadd.d f28, f12, f2, f15, rne # perform operation
fnmadd.d f28, f12, f2, f15, rtz # perform operation
fnmadd.d f28, f12, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f12, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x29, 0x8031bf41bca248b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x8516fe6def15ff5e # load x3 with value 0x8516fe6def15ff5e
sd x3, 0(x2) # store 0x8516fe6def15ff5e in memory
fld f30, 0(x2) # load 0x8516fe6def15ff5e from memory into f30
fnmadd.d f29, f2, f23, f30, dyn # perform operation
fnmadd.d f29, f2, f23, f30, rdn # perform operation
fnmadd.d f29, f2, f23, f30, rmm # perform operation
fnmadd.d f29, f2, f23, f30, rne # perform operation
fnmadd.d f29, f2, f23, f30, rtz # perform operation
fnmadd.d f29, f2, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f2, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x10, 0xee57bb8373224904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xeafd2e3b40b26678 # load x3 with value 0xeafd2e3b40b26678
sd x3, 0(x2) # store 0xeafd2e3b40b26678 in memory
fld f3, 0(x2) # load 0xeafd2e3b40b26678 from memory into f3
fnmadd.d f10, f28, f17, f3, dyn # perform operation
fnmadd.d f10, f28, f17, f3, rdn # perform operation
fnmadd.d f10, f28, f17, f3, rmm # perform operation
fnmadd.d f10, f28, f17, f3, rne # perform operation
fnmadd.d f10, f28, f17, f3, rtz # perform operation
fnmadd.d f10, f28, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f28, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x4, 0xf4d222bd3f296ca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0xd0d8005205442cfc # load x3 with value 0xd0d8005205442cfc
sd x3, 0(x2) # store 0xd0d8005205442cfc in memory
fld f8, 0(x2) # load 0xd0d8005205442cfc from memory into f8
fnmadd.d f4, f20, f23, f8, dyn # perform operation
fnmadd.d f4, f20, f23, f8, rdn # perform operation
fnmadd.d f4, f20, f23, f8, rmm # perform operation
fnmadd.d f4, f20, f23, f8, rne # perform operation
fnmadd.d f4, f20, f23, f8, rtz # perform operation
fnmadd.d f4, f20, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x5, 0x128b5cba43d26248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xef9dbfe733c179a6 # load x3 with value 0xef9dbfe733c179a6
sd x3, 0(x2) # store 0xef9dbfe733c179a6 in memory
fld f8, 0(x2) # load 0xef9dbfe733c179a6 from memory into f8
fnmadd.d f5, f11, f1, f8, dyn # perform operation
fnmadd.d f5, f11, f1, f8, rdn # perform operation
fnmadd.d f5, f11, f1, f8, rmm # perform operation
fnmadd.d f5, f11, f1, f8, rne # perform operation
fnmadd.d f5, f11, f1, f8, rtz # perform operation
fnmadd.d f5, f11, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x8, 0xc500b76b0b21286e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xe9580e024f38b5fa # load x3 with value 0xe9580e024f38b5fa
sd x3, 0(x2) # store 0xe9580e024f38b5fa in memory
fld f13, 0(x2) # load 0xe9580e024f38b5fa from memory into f13
fnmadd.d f8, f14, f20, f13, dyn # perform operation
fnmadd.d f8, f14, f20, f13, rdn # perform operation
fnmadd.d f8, f14, f20, f13, rmm # perform operation
fnmadd.d f8, f14, f20, f13, rne # perform operation
fnmadd.d f8, f14, f20, f13, rtz # perform operation
fnmadd.d f8, f14, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f14, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x25, 0xa41de8d23598f37b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x0b55264a8b2bd041 # load x3 with value 0x0b55264a8b2bd041
sd x3, 0(x2) # store 0x0b55264a8b2bd041 in memory
fld f15, 0(x2) # load 0x0b55264a8b2bd041 from memory into f15
fnmadd.d f25, f10, f16, f15, dyn # perform operation
fnmadd.d f25, f10, f16, f15, rdn # perform operation
fnmadd.d f25, f10, f16, f15, rmm # perform operation
fnmadd.d f25, f10, f16, f15, rne # perform operation
fnmadd.d f25, f10, f16, f15, rtz # perform operation
fnmadd.d f25, f10, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f10, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f10, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x22, 0xbf69b1ce769a24dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x845267221877116d # load x3 with value 0x845267221877116d
sd x3, 0(x2) # store 0x845267221877116d in memory
fld f8, 0(x2) # load 0x845267221877116d from memory into f8
fnmadd.d f22, f7, f15, f8, dyn # perform operation
fnmadd.d f22, f7, f15, f8, rdn # perform operation
fnmadd.d f22, f7, f15, f8, rmm # perform operation
fnmadd.d f22, f7, f15, f8, rne # perform operation
fnmadd.d f22, f7, f15, f8, rtz # perform operation
fnmadd.d f22, f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x2, 0x959298fc99d0ecb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0xb6bc99c59885110d # load x3 with value 0xb6bc99c59885110d
sd x3, 0(x2) # store 0xb6bc99c59885110d in memory
fld f8, 0(x2) # load 0xb6bc99c59885110d from memory into f8
fnmadd.d f2, f12, f25, f8, dyn # perform operation
fnmadd.d f2, f12, f25, f8, rdn # perform operation
fnmadd.d f2, f12, f25, f8, rmm # perform operation
fnmadd.d f2, f12, f25, f8, rne # perform operation
fnmadd.d f2, f12, f25, f8, rtz # perform operation
fnmadd.d f2, f12, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f12, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f12, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x6, 0x2812c197fd08a724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x00132f85ba48b8fa # load x3 with value 0x00132f85ba48b8fa
sd x3, 0(x2) # store 0x00132f85ba48b8fa in memory
fld f29, 0(x2) # load 0x00132f85ba48b8fa from memory into f29
fnmadd.d f6, f13, f22, f29, dyn # perform operation
fnmadd.d f6, f13, f22, f29, rdn # perform operation
fnmadd.d f6, f13, f22, f29, rmm # perform operation
fnmadd.d f6, f13, f22, f29, rne # perform operation
fnmadd.d f6, f13, f22, f29, rtz # perform operation
fnmadd.d f6, f13, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f13, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f13, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f13, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f13, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f13, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x26, 0x1a18bdd309223649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x5c0301664ab9abc3 # load x3 with value 0x5c0301664ab9abc3
sd x3, 0(x2) # store 0x5c0301664ab9abc3 in memory
fld f10, 0(x2) # load 0x5c0301664ab9abc3 from memory into f10
fnmadd.d f26, f31, f25, f10, dyn # perform operation
fnmadd.d f26, f31, f25, f10, rdn # perform operation
fnmadd.d f26, f31, f25, f10, rmm # perform operation
fnmadd.d f26, f31, f25, f10, rne # perform operation
fnmadd.d f26, f31, f25, f10, rtz # perform operation
fnmadd.d f26, f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f31, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x18, 0xfc4d90347633dfcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xe98cd4025d1cef06 # load x3 with value 0xe98cd4025d1cef06
sd x3, 0(x2) # store 0xe98cd4025d1cef06 in memory
fld f10, 0(x2) # load 0xe98cd4025d1cef06 from memory into f10
fnmadd.d f18, f6, f9, f10, dyn # perform operation
fnmadd.d f18, f6, f9, f10, rdn # perform operation
fnmadd.d f18, f6, f9, f10, rmm # perform operation
fnmadd.d f18, f6, f9, f10, rne # perform operation
fnmadd.d f18, f6, f9, f10, rtz # perform operation
fnmadd.d f18, f6, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f6, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f6, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x25, 0x2b81638548793349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x0915524d1d09b28e # load x3 with value 0x0915524d1d09b28e
sd x3, 0(x2) # store 0x0915524d1d09b28e in memory
fld f8, 0(x2) # load 0x0915524d1d09b28e from memory into f8
fnmadd.d f25, f11, f26, f8, dyn # perform operation
fnmadd.d f25, f11, f26, f8, rdn # perform operation
fnmadd.d f25, f11, f26, f8, rmm # perform operation
fnmadd.d f25, f11, f26, f8, rne # perform operation
fnmadd.d f25, f11, f26, f8, rtz # perform operation
fnmadd.d f25, f11, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f11, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f11, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f11, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f11, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f11, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x25, 0x020802c2f26765f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x435b4094d943becf # load x3 with value 0x435b4094d943becf
sd x3, 0(x2) # store 0x435b4094d943becf in memory
fld f13, 0(x2) # load 0x435b4094d943becf from memory into f13
fnmadd.d f25, f14, f29, f13, dyn # perform operation
fnmadd.d f25, f14, f29, f13, rdn # perform operation
fnmadd.d f25, f14, f29, f13, rmm # perform operation
fnmadd.d f25, f14, f29, f13, rne # perform operation
fnmadd.d f25, f14, f29, f13, rtz # perform operation
fnmadd.d f25, f14, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x18, 0x3677aa7a03010df6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xe9ac8e2bc061f51e # load x3 with value 0xe9ac8e2bc061f51e
sd x3, 0(x2) # store 0xe9ac8e2bc061f51e in memory
fld f10, 0(x2) # load 0xe9ac8e2bc061f51e from memory into f10
fnmadd.d f18, f9, f17, f10, dyn # perform operation
fnmadd.d f18, f9, f17, f10, rdn # perform operation
fnmadd.d f18, f9, f17, f10, rmm # perform operation
fnmadd.d f18, f9, f17, f10, rne # perform operation
fnmadd.d f18, f9, f17, f10, rtz # perform operation
fnmadd.d f18, f9, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f9, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f9, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f9, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f9, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f9, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x24, 0x00ec3febb640b017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x5fe96badd4b56fd9 # load x3 with value 0x5fe96badd4b56fd9
sd x3, 0(x2) # store 0x5fe96badd4b56fd9 in memory
fld f27, 0(x2) # load 0x5fe96badd4b56fd9 from memory into f27
fnmadd.d f24, f29, f30, f27, dyn # perform operation
fnmadd.d f24, f29, f30, f27, rdn # perform operation
fnmadd.d f24, f29, f30, f27, rmm # perform operation
fnmadd.d f24, f29, f30, f27, rne # perform operation
fnmadd.d f24, f29, f30, f27, rtz # perform operation
fnmadd.d f24, f29, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f29, f30, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x3, 0x23e83eabef65bcb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x126058d87ea94dcf # load x3 with value 0x126058d87ea94dcf
sd x3, 0(x2) # store 0x126058d87ea94dcf in memory
fld f26, 0(x2) # load 0x126058d87ea94dcf from memory into f26
fnmadd.d f3, f19, f17, f26, dyn # perform operation
fnmadd.d f3, f19, f17, f26, rdn # perform operation
fnmadd.d f3, f19, f17, f26, rmm # perform operation
fnmadd.d f3, f19, f17, f26, rne # perform operation
fnmadd.d f3, f19, f17, f26, rtz # perform operation
fnmadd.d f3, f19, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f19, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x9, 0x608331f85d496cc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0xe0b206fc6ae5d92f # load x3 with value 0xe0b206fc6ae5d92f
sd x3, 0(x2) # store 0xe0b206fc6ae5d92f in memory
fld f10, 0(x2) # load 0xe0b206fc6ae5d92f from memory into f10
fnmadd.d f9, f17, f14, f10, dyn # perform operation
fnmadd.d f9, f17, f14, f10, rdn # perform operation
fnmadd.d f9, f17, f14, f10, rmm # perform operation
fnmadd.d f9, f17, f14, f10, rne # perform operation
fnmadd.d f9, f17, f14, f10, rtz # perform operation
fnmadd.d f9, f17, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f17, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f17, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f17, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f17, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f17, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x18, 0x5e4930b847f81424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xcb089f5004cd451e # load x3 with value 0xcb089f5004cd451e
sd x3, 0(x2) # store 0xcb089f5004cd451e in memory
fld f22, 0(x2) # load 0xcb089f5004cd451e from memory into f22
fnmadd.d f18, f27, f19, f22, dyn # perform operation
fnmadd.d f18, f27, f19, f22, rdn # perform operation
fnmadd.d f18, f27, f19, f22, rmm # perform operation
fnmadd.d f18, f27, f19, f22, rne # perform operation
fnmadd.d f18, f27, f19, f22, rtz # perform operation
fnmadd.d f18, f27, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f27, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x23, 0xe4de96cf8d313fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0xc7e2526f928b8c1c # load x3 with value 0xc7e2526f928b8c1c
sd x3, 0(x2) # store 0xc7e2526f928b8c1c in memory
fld f29, 0(x2) # load 0xc7e2526f928b8c1c from memory into f29
fnmadd.d f23, f30, f24, f29, dyn # perform operation
fnmadd.d f23, f30, f24, f29, rdn # perform operation
fnmadd.d f23, f30, f24, f29, rmm # perform operation
fnmadd.d f23, f30, f24, f29, rne # perform operation
fnmadd.d f23, f30, f24, f29, rtz # perform operation
fnmadd.d f23, f30, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f30, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f30, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x17, 0xb12b012761ae323e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x8149a769ae4500c3 # load x3 with value 0x8149a769ae4500c3
sd x3, 0(x2) # store 0x8149a769ae4500c3 in memory
fld f4, 0(x2) # load 0x8149a769ae4500c3 from memory into f4
fnmadd.d f17, f24, f30, f4, dyn # perform operation
fnmadd.d f17, f24, f30, f4, rdn # perform operation
fnmadd.d f17, f24, f30, f4, rmm # perform operation
fnmadd.d f17, f24, f30, f4, rne # perform operation
fnmadd.d f17, f24, f30, f4, rtz # perform operation
fnmadd.d f17, f24, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x26, 0x584513068731d0f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xdba23ed749c3ef3c # load x3 with value 0xdba23ed749c3ef3c
sd x3, 0(x2) # store 0xdba23ed749c3ef3c in memory
fld f22, 0(x2) # load 0xdba23ed749c3ef3c from memory into f22
fnmadd.d f26, f18, f23, f22, dyn # perform operation
fnmadd.d f26, f18, f23, f22, rdn # perform operation
fnmadd.d f26, f18, f23, f22, rmm # perform operation
fnmadd.d f26, f18, f23, f22, rne # perform operation
fnmadd.d f26, f18, f23, f22, rtz # perform operation
fnmadd.d f26, f18, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f18, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x19, 0xe66764dbda1a0b73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0xa38369349ad179bc # load x3 with value 0xa38369349ad179bc
sd x3, 0(x2) # store 0xa38369349ad179bc in memory
fld f9, 0(x2) # load 0xa38369349ad179bc from memory into f9
fnmadd.d f19, f11, f17, f9, dyn # perform operation
fnmadd.d f19, f11, f17, f9, rdn # perform operation
fnmadd.d f19, f11, f17, f9, rmm # perform operation
fnmadd.d f19, f11, f17, f9, rne # perform operation
fnmadd.d f19, f11, f17, f9, rtz # perform operation
fnmadd.d f19, f11, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f11, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f11, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f11, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f11, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f11, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x23, 0x35dd476ed4a1c8cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x0a9bbda352ada0c4 # load x3 with value 0x0a9bbda352ada0c4
sd x3, 0(x2) # store 0x0a9bbda352ada0c4 in memory
fld f24, 0(x2) # load 0x0a9bbda352ada0c4 from memory into f24
fnmadd.d f23, f4, f3, f24, dyn # perform operation
fnmadd.d f23, f4, f3, f24, rdn # perform operation
fnmadd.d f23, f4, f3, f24, rmm # perform operation
fnmadd.d f23, f4, f3, f24, rne # perform operation
fnmadd.d f23, f4, f3, f24, rtz # perform operation
fnmadd.d f23, f4, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f4, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f4, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f4, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f4, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f4, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x9, 0x476f035e08ec4ddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x51d2c289cbe3f29b # load x3 with value 0x51d2c289cbe3f29b
sd x3, 0(x2) # store 0x51d2c289cbe3f29b in memory
fld f30, 0(x2) # load 0x51d2c289cbe3f29b from memory into f30
fnmadd.d f9, f25, f7, f30, dyn # perform operation
fnmadd.d f9, f25, f7, f30, rdn # perform operation
fnmadd.d f9, f25, f7, f30, rmm # perform operation
fnmadd.d f9, f25, f7, f30, rne # perform operation
fnmadd.d f9, f25, f7, f30, rtz # perform operation
fnmadd.d f9, f25, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f25, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x10, 0xfed761cefbe5fa77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xa56f509fd5186837 # load x3 with value 0xa56f509fd5186837
sd x3, 0(x2) # store 0xa56f509fd5186837 in memory
fld f12, 0(x2) # load 0xa56f509fd5186837 from memory into f12
fnmadd.d f10, f22, f27, f12, dyn # perform operation
fnmadd.d f10, f22, f27, f12, rdn # perform operation
fnmadd.d f10, f22, f27, f12, rmm # perform operation
fnmadd.d f10, f22, f27, f12, rne # perform operation
fnmadd.d f10, f22, f27, f12, rtz # perform operation
fnmadd.d f10, f22, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f22, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x21, 0x5d07836da274cce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x3e615d9a92dfc31a # load x3 with value 0x3e615d9a92dfc31a
sd x3, 0(x2) # store 0x3e615d9a92dfc31a in memory
fld f10, 0(x2) # load 0x3e615d9a92dfc31a from memory into f10
fnmadd.d f21, f23, f24, f10, dyn # perform operation
fnmadd.d f21, f23, f24, f10, rdn # perform operation
fnmadd.d f21, f23, f24, f10, rmm # perform operation
fnmadd.d f21, f23, f24, f10, rne # perform operation
fnmadd.d f21, f23, f24, f10, rtz # perform operation
fnmadd.d f21, f23, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f23, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f23, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f23, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f23, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f23, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x9, 0xcbee9483af2fb721 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x4af638f094804b85 # load x3 with value 0x4af638f094804b85
sd x3, 0(x2) # store 0x4af638f094804b85 in memory
fld f2, 0(x2) # load 0x4af638f094804b85 from memory into f2
fnmadd.d f9, f28, f1, f2, dyn # perform operation
fnmadd.d f9, f28, f1, f2, rdn # perform operation
fnmadd.d f9, f28, f1, f2, rmm # perform operation
fnmadd.d f9, f28, f1, f2, rne # perform operation
fnmadd.d f9, f28, f1, f2, rtz # perform operation
fnmadd.d f9, f28, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f28, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f28, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x13, 0x53bb65b13eb613ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x0d10594f1bc017c3 # load x3 with value 0x0d10594f1bc017c3
sd x3, 0(x2) # store 0x0d10594f1bc017c3 in memory
fld f5, 0(x2) # load 0x0d10594f1bc017c3 from memory into f5
fnmadd.d f13, f8, f3, f5, dyn # perform operation
fnmadd.d f13, f8, f3, f5, rdn # perform operation
fnmadd.d f13, f8, f3, f5, rmm # perform operation
fnmadd.d f13, f8, f3, f5, rne # perform operation
fnmadd.d f13, f8, f3, f5, rtz # perform operation
fnmadd.d f13, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f8, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x20, 0xe40bca5b93e9346c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x52f1a6f76e9bc9c7 # load x3 with value 0x52f1a6f76e9bc9c7
sd x3, 0(x2) # store 0x52f1a6f76e9bc9c7 in memory
fld f28, 0(x2) # load 0x52f1a6f76e9bc9c7 from memory into f28
fnmadd.d f20, f27, f12, f28, dyn # perform operation
fnmadd.d f20, f27, f12, f28, rdn # perform operation
fnmadd.d f20, f27, f12, f28, rmm # perform operation
fnmadd.d f20, f27, f12, f28, rne # perform operation
fnmadd.d f20, f27, f12, f28, rtz # perform operation
fnmadd.d f20, f27, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f27, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x4, 0x201c67156daf4065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x56a5a09ec455e408 # load x3 with value 0x56a5a09ec455e408
sd x3, 0(x2) # store 0x56a5a09ec455e408 in memory
fld f9, 0(x2) # load 0x56a5a09ec455e408 from memory into f9
fnmadd.d f4, f30, f18, f9, dyn # perform operation
fnmadd.d f4, f30, f18, f9, rdn # perform operation
fnmadd.d f4, f30, f18, f9, rmm # perform operation
fnmadd.d f4, f30, f18, f9, rne # perform operation
fnmadd.d f4, f30, f18, f9, rtz # perform operation
fnmadd.d f4, f30, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f30, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f30, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x7, 0x45359b08647839e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x933e2988d40e4566 # load x3 with value 0x933e2988d40e4566
sd x3, 0(x2) # store 0x933e2988d40e4566 in memory
fld f9, 0(x2) # load 0x933e2988d40e4566 from memory into f9
fnmadd.d f7, f17, f19, f9, dyn # perform operation
fnmadd.d f7, f17, f19, f9, rdn # perform operation
fnmadd.d f7, f17, f19, f9, rmm # perform operation
fnmadd.d f7, f17, f19, f9, rne # perform operation
fnmadd.d f7, f17, f19, f9, rtz # perform operation
fnmadd.d f7, f17, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f17, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x7, 0x3ef3ea94c5eb4762 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x42a4379f4115ee35 # load x3 with value 0x42a4379f4115ee35
sd x3, 0(x2) # store 0x42a4379f4115ee35 in memory
fld f16, 0(x2) # load 0x42a4379f4115ee35 from memory into f16
fnmadd.d f7, f31, f19, f16, dyn # perform operation
fnmadd.d f7, f31, f19, f16, rdn # perform operation
fnmadd.d f7, f31, f19, f16, rmm # perform operation
fnmadd.d f7, f31, f19, f16, rne # perform operation
fnmadd.d f7, f31, f19, f16, rtz # perform operation
fnmadd.d f7, f31, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f31, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f31, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x26, 0xf10781637a425d18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x3d1608f002183636 # load x3 with value 0x3d1608f002183636
sd x3, 0(x2) # store 0x3d1608f002183636 in memory
fld f6, 0(x2) # load 0x3d1608f002183636 from memory into f6
fnmadd.d f26, f21, f29, f6, dyn # perform operation
fnmadd.d f26, f21, f29, f6, rdn # perform operation
fnmadd.d f26, f21, f29, f6, rmm # perform operation
fnmadd.d f26, f21, f29, f6, rne # perform operation
fnmadd.d f26, f21, f29, f6, rtz # perform operation
fnmadd.d f26, f21, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x16, 0x0d935ef7563b0707 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0xeae9d5f064d9c7f7 # load x3 with value 0xeae9d5f064d9c7f7
sd x3, 0(x2) # store 0xeae9d5f064d9c7f7 in memory
fld f23, 0(x2) # load 0xeae9d5f064d9c7f7 from memory into f23
fnmadd.d f16, f26, f4, f23, dyn # perform operation
fnmadd.d f16, f26, f4, f23, rdn # perform operation
fnmadd.d f16, f26, f4, f23, rmm # perform operation
fnmadd.d f16, f26, f4, f23, rne # perform operation
fnmadd.d f16, f26, f4, f23, rtz # perform operation
fnmadd.d f16, f26, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f26, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f26, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f26, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f26, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f26, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x19, 0x9e2d1b2f76c7ab69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x68d74b18d4708c92 # load x3 with value 0x68d74b18d4708c92
sd x3, 0(x2) # store 0x68d74b18d4708c92 in memory
fld f5, 0(x2) # load 0x68d74b18d4708c92 from memory into f5
fnmadd.d f19, f25, f16, f5, dyn # perform operation
fnmadd.d f19, f25, f16, f5, rdn # perform operation
fnmadd.d f19, f25, f16, f5, rmm # perform operation
fnmadd.d f19, f25, f16, f5, rne # perform operation
fnmadd.d f19, f25, f16, f5, rtz # perform operation
fnmadd.d f19, f25, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f25, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x15, 0xa2aa993ab8696e4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x7a15f656f65c2d8f # load x3 with value 0x7a15f656f65c2d8f
sd x3, 0(x2) # store 0x7a15f656f65c2d8f in memory
fld f27, 0(x2) # load 0x7a15f656f65c2d8f from memory into f27
fnmadd.d f15, f22, f11, f27, dyn # perform operation
fnmadd.d f15, f22, f11, f27, rdn # perform operation
fnmadd.d f15, f22, f11, f27, rmm # perform operation
fnmadd.d f15, f22, f11, f27, rne # perform operation
fnmadd.d f15, f22, f11, f27, rtz # perform operation
fnmadd.d f15, f22, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f22, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x8, 0x9a63527efb97b9e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x3c1a63c136c3e04a # load x3 with value 0x3c1a63c136c3e04a
sd x3, 0(x2) # store 0x3c1a63c136c3e04a in memory
fld f25, 0(x2) # load 0x3c1a63c136c3e04a from memory into f25
fnmadd.d f8, f30, f31, f25, dyn # perform operation
fnmadd.d f8, f30, f31, f25, rdn # perform operation
fnmadd.d f8, f30, f31, f25, rmm # perform operation
fnmadd.d f8, f30, f31, f25, rne # perform operation
fnmadd.d f8, f30, f31, f25, rtz # perform operation
fnmadd.d f8, f30, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f30, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x7, 0x1787e2609d7c2545 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x78098c149da6ee4a # load x3 with value 0x78098c149da6ee4a
sd x3, 0(x2) # store 0x78098c149da6ee4a in memory
fld f24, 0(x2) # load 0x78098c149da6ee4a from memory into f24
fnmadd.d f7, f3, f22, f24, dyn # perform operation
fnmadd.d f7, f3, f22, f24, rdn # perform operation
fnmadd.d f7, f3, f22, f24, rmm # perform operation
fnmadd.d f7, f3, f22, f24, rne # perform operation
fnmadd.d f7, f3, f22, f24, rtz # perform operation
fnmadd.d f7, f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x3, 0xfd2bc6ba7f264d7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x4acd0a3eaf9dec63 # load x3 with value 0x4acd0a3eaf9dec63
sd x3, 0(x2) # store 0x4acd0a3eaf9dec63 in memory
fld f11, 0(x2) # load 0x4acd0a3eaf9dec63 from memory into f11
fnmadd.d f3, f16, f5, f11, dyn # perform operation
fnmadd.d f3, f16, f5, f11, rdn # perform operation
fnmadd.d f3, f16, f5, f11, rmm # perform operation
fnmadd.d f3, f16, f5, f11, rne # perform operation
fnmadd.d f3, f16, f5, f11, rtz # perform operation
fnmadd.d f3, f16, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x13, 0xe6ce2b556f916a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x73080da986e4698b # load x3 with value 0x73080da986e4698b
sd x3, 0(x2) # store 0x73080da986e4698b in memory
fld f7, 0(x2) # load 0x73080da986e4698b from memory into f7
fnmadd.d f13, f16, f5, f7, dyn # perform operation
fnmadd.d f13, f16, f5, f7, rdn # perform operation
fnmadd.d f13, f16, f5, f7, rmm # perform operation
fnmadd.d f13, f16, f5, f7, rne # perform operation
fnmadd.d f13, f16, f5, f7, rtz # perform operation
fnmadd.d f13, f16, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f16, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f16, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f16, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f16, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f16, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x9, 0x15b86ef6241168a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x987993a351ea2785 # load x3 with value 0x987993a351ea2785
sd x3, 0(x2) # store 0x987993a351ea2785 in memory
fld f12, 0(x2) # load 0x987993a351ea2785 from memory into f12
fnmadd.d f9, f15, f30, f12, dyn # perform operation
fnmadd.d f9, f15, f30, f12, rdn # perform operation
fnmadd.d f9, f15, f30, f12, rmm # perform operation
fnmadd.d f9, f15, f30, f12, rne # perform operation
fnmadd.d f9, f15, f30, f12, rtz # perform operation
fnmadd.d f9, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x24, 0xc04f980ed9f2f06c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x59d94369b567cf3b # load x3 with value 0x59d94369b567cf3b
sd x3, 0(x2) # store 0x59d94369b567cf3b in memory
fld f22, 0(x2) # load 0x59d94369b567cf3b from memory into f22
fnmadd.d f24, f26, f29, f22, dyn # perform operation
fnmadd.d f24, f26, f29, f22, rdn # perform operation
fnmadd.d f24, f26, f29, f22, rmm # perform operation
fnmadd.d f24, f26, f29, f22, rne # perform operation
fnmadd.d f24, f26, f29, f22, rtz # perform operation
fnmadd.d f24, f26, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f26, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x28, 0xc257a277102e8020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x289c15cefe95b70f # load x3 with value 0x289c15cefe95b70f
sd x3, 0(x2) # store 0x289c15cefe95b70f in memory
fld f13, 0(x2) # load 0x289c15cefe95b70f from memory into f13
fnmadd.d f28, f29, f6, f13, dyn # perform operation
fnmadd.d f28, f29, f6, f13, rdn # perform operation
fnmadd.d f28, f29, f6, f13, rmm # perform operation
fnmadd.d f28, f29, f6, f13, rne # perform operation
fnmadd.d f28, f29, f6, f13, rtz # perform operation
fnmadd.d f28, f29, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x1, 0x0db7b41c55b68609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xb5d922f2a3a14e74 # load x3 with value 0xb5d922f2a3a14e74
sd x3, 0(x2) # store 0xb5d922f2a3a14e74 in memory
fld f7, 0(x2) # load 0xb5d922f2a3a14e74 from memory into f7
fnmadd.d f1, f26, f16, f7, dyn # perform operation
fnmadd.d f1, f26, f16, f7, rdn # perform operation
fnmadd.d f1, f26, f16, f7, rmm # perform operation
fnmadd.d f1, f26, f16, f7, rne # perform operation
fnmadd.d f1, f26, f16, f7, rtz # perform operation
fnmadd.d f1, f26, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f26, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x22, 0x0c6b88bd8bcbfb09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xcf5782f1c98f800c # load x3 with value 0xcf5782f1c98f800c
sd x3, 0(x2) # store 0xcf5782f1c98f800c in memory
fld f30, 0(x2) # load 0xcf5782f1c98f800c from memory into f30
fnmadd.d f22, f13, f7, f30, dyn # perform operation
fnmadd.d f22, f13, f7, f30, rdn # perform operation
fnmadd.d f22, f13, f7, f30, rmm # perform operation
fnmadd.d f22, f13, f7, f30, rne # perform operation
fnmadd.d f22, f13, f7, f30, rtz # perform operation
fnmadd.d f22, f13, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f13, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f13, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f13, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f13, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f13, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x3, 0x0c6ed04351db6533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x505b013d1028a0ba # load x3 with value 0x505b013d1028a0ba
sd x3, 0(x2) # store 0x505b013d1028a0ba in memory
fld f13, 0(x2) # load 0x505b013d1028a0ba from memory into f13
fnmadd.d f3, f5, f19, f13, dyn # perform operation
fnmadd.d f3, f5, f19, f13, rdn # perform operation
fnmadd.d f3, f5, f19, f13, rmm # perform operation
fnmadd.d f3, f5, f19, f13, rne # perform operation
fnmadd.d f3, f5, f19, f13, rtz # perform operation
fnmadd.d f3, f5, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f5, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x4, 0x8ebe3052a87920af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x4be06e1eff9e26bd # load x3 with value 0x4be06e1eff9e26bd
sd x3, 0(x2) # store 0x4be06e1eff9e26bd in memory
fld f8, 0(x2) # load 0x4be06e1eff9e26bd from memory into f8
fnmadd.d f4, f17, f19, f8, dyn # perform operation
fnmadd.d f4, f17, f19, f8, rdn # perform operation
fnmadd.d f4, f17, f19, f8, rmm # perform operation
fnmadd.d f4, f17, f19, f8, rne # perform operation
fnmadd.d f4, f17, f19, f8, rtz # perform operation
fnmadd.d f4, f17, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f17, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x17, 0x14bd5843bfaac2a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xd932440d9bb4e207 # load x3 with value 0xd932440d9bb4e207
sd x3, 0(x2) # store 0xd932440d9bb4e207 in memory
fld f31, 0(x2) # load 0xd932440d9bb4e207 from memory into f31
fnmadd.d f17, f8, f12, f31, dyn # perform operation
fnmadd.d f17, f8, f12, f31, rdn # perform operation
fnmadd.d f17, f8, f12, f31, rmm # perform operation
fnmadd.d f17, f8, f12, f31, rne # perform operation
fnmadd.d f17, f8, f12, f31, rtz # perform operation
fnmadd.d f17, f8, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x1, 0xcddbdb74f143d4bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x2ea4e093451598e4 # load x3 with value 0x2ea4e093451598e4
sd x3, 0(x2) # store 0x2ea4e093451598e4 in memory
fld f17, 0(x2) # load 0x2ea4e093451598e4 from memory into f17
fnmadd.d f1, f24, f2, f17, dyn # perform operation
fnmadd.d f1, f24, f2, f17, rdn # perform operation
fnmadd.d f1, f24, f2, f17, rmm # perform operation
fnmadd.d f1, f24, f2, f17, rne # perform operation
fnmadd.d f1, f24, f2, f17, rtz # perform operation
fnmadd.d f1, f24, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f24, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f24, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f24, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f24, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f24, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x3, 0xe8bb793ed463ce63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0x9b000371307bfa2a # load x3 with value 0x9b000371307bfa2a
sd x3, 0(x2) # store 0x9b000371307bfa2a in memory
fld f5, 0(x2) # load 0x9b000371307bfa2a from memory into f5
fnmadd.d f3, f18, f22, f5, dyn # perform operation
fnmadd.d f3, f18, f22, f5, rdn # perform operation
fnmadd.d f3, f18, f22, f5, rmm # perform operation
fnmadd.d f3, f18, f22, f5, rne # perform operation
fnmadd.d f3, f18, f22, f5, rtz # perform operation
fnmadd.d f3, f18, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f18, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f18, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x11, 0xf2864f4bfa1a0b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xa8ded398775ea443 # load x3 with value 0xa8ded398775ea443
sd x3, 0(x2) # store 0xa8ded398775ea443 in memory
fld f24, 0(x2) # load 0xa8ded398775ea443 from memory into f24
fnmadd.d f11, f4, f27, f24, dyn # perform operation
fnmadd.d f11, f4, f27, f24, rdn # perform operation
fnmadd.d f11, f4, f27, f24, rmm # perform operation
fnmadd.d f11, f4, f27, f24, rne # perform operation
fnmadd.d f11, f4, f27, f24, rtz # perform operation
fnmadd.d f11, f4, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f4, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f4, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f4, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f4, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f4, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x2, 0xf24181b0b8b4422b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xc1769224abd76129 # load x3 with value 0xc1769224abd76129
sd x3, 0(x2) # store 0xc1769224abd76129 in memory
fld f9, 0(x2) # load 0xc1769224abd76129 from memory into f9
fnmadd.d f2, f1, f5, f9, dyn # perform operation
fnmadd.d f2, f1, f5, f9, rdn # perform operation
fnmadd.d f2, f1, f5, f9, rmm # perform operation
fnmadd.d f2, f1, f5, f9, rne # perform operation
fnmadd.d f2, f1, f5, f9, rtz # perform operation
fnmadd.d f2, f1, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f1, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x15, 0x5a3e5a8002600b3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0xf8bc75f06e3fc4ff # load x3 with value 0xf8bc75f06e3fc4ff
sd x3, 0(x2) # store 0xf8bc75f06e3fc4ff in memory
fld f21, 0(x2) # load 0xf8bc75f06e3fc4ff from memory into f21
fnmadd.d f15, f3, f10, f21, dyn # perform operation
fnmadd.d f15, f3, f10, f21, rdn # perform operation
fnmadd.d f15, f3, f10, f21, rmm # perform operation
fnmadd.d f15, f3, f10, f21, rne # perform operation
fnmadd.d f15, f3, f10, f21, rtz # perform operation
fnmadd.d f15, f3, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f3, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x3, 0xd5e192b132b7e43c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x0c74b27ddc1ae59e # load x3 with value 0x0c74b27ddc1ae59e
sd x3, 0(x2) # store 0x0c74b27ddc1ae59e in memory
fld f25, 0(x2) # load 0x0c74b27ddc1ae59e from memory into f25
fnmadd.d f3, f4, f24, f25, dyn # perform operation
fnmadd.d f3, f4, f24, f25, rdn # perform operation
fnmadd.d f3, f4, f24, f25, rmm # perform operation
fnmadd.d f3, f4, f24, f25, rne # perform operation
fnmadd.d f3, f4, f24, f25, rtz # perform operation
fnmadd.d f3, f4, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f4, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f4, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f4, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f4, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f4, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x1, 0x5ec0d1bdd35c4809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xa4e9694d299be850 # load x3 with value 0xa4e9694d299be850
sd x3, 0(x2) # store 0xa4e9694d299be850 in memory
fld f4, 0(x2) # load 0xa4e9694d299be850 from memory into f4
fnmadd.d f1, f16, f11, f4, dyn # perform operation
fnmadd.d f1, f16, f11, f4, rdn # perform operation
fnmadd.d f1, f16, f11, f4, rmm # perform operation
fnmadd.d f1, f16, f11, f4, rne # perform operation
fnmadd.d f1, f16, f11, f4, rtz # perform operation
fnmadd.d f1, f16, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f16, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f16, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x21, 0x3987fad8b9f107c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x63497d845c259df9 # load x3 with value 0x63497d845c259df9
sd x3, 0(x2) # store 0x63497d845c259df9 in memory
fld f22, 0(x2) # load 0x63497d845c259df9 from memory into f22
fnmadd.d f21, f9, f16, f22, dyn # perform operation
fnmadd.d f21, f9, f16, f22, rdn # perform operation
fnmadd.d f21, f9, f16, f22, rmm # perform operation
fnmadd.d f21, f9, f16, f22, rne # perform operation
fnmadd.d f21, f9, f16, f22, rtz # perform operation
fnmadd.d f21, f9, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f9, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f9, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xb42723a9c17b3c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x6bfcdefa9177d8c8 # load x3 with value 0x6bfcdefa9177d8c8
sd x3, 0(x2) # store 0x6bfcdefa9177d8c8 in memory
fld f24, 0(x2) # load 0x6bfcdefa9177d8c8 from memory into f24
fnmadd.d f17, f15, f1, f24, dyn # perform operation
fnmadd.d f17, f15, f1, f24, rdn # perform operation
fnmadd.d f17, f15, f1, f24, rmm # perform operation
fnmadd.d f17, f15, f1, f24, rne # perform operation
fnmadd.d f17, f15, f1, f24, rtz # perform operation
fnmadd.d f17, f15, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f15, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x12, 0xfcc8e1b8fae6aff2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xf4cb45c472cf9baa # load x3 with value 0xf4cb45c472cf9baa
sd x3, 0(x2) # store 0xf4cb45c472cf9baa in memory
fld f31, 0(x2) # load 0xf4cb45c472cf9baa from memory into f31
fnmadd.d f12, f28, f26, f31, dyn # perform operation
fnmadd.d f12, f28, f26, f31, rdn # perform operation
fnmadd.d f12, f28, f26, f31, rmm # perform operation
fnmadd.d f12, f28, f26, f31, rne # perform operation
fnmadd.d f12, f28, f26, f31, rtz # perform operation
fnmadd.d f12, f28, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f28, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f28, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f28, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f28, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f28, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x22, 0x13731eae48481424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0xc44e17d6f60bd1b7 # load x3 with value 0xc44e17d6f60bd1b7
sd x3, 0(x2) # store 0xc44e17d6f60bd1b7 in memory
fld f24, 0(x2) # load 0xc44e17d6f60bd1b7 from memory into f24
fnmadd.d f22, f27, f12, f24, dyn # perform operation
fnmadd.d f22, f27, f12, f24, rdn # perform operation
fnmadd.d f22, f27, f12, f24, rmm # perform operation
fnmadd.d f22, f27, f12, f24, rne # perform operation
fnmadd.d f22, f27, f12, f24, rtz # perform operation
fnmadd.d f22, f27, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f27, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x10, 0x5a2830fca67839c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xaf640476d50076e5 # load x3 with value 0xaf640476d50076e5
sd x3, 0(x2) # store 0xaf640476d50076e5 in memory
fld f5, 0(x2) # load 0xaf640476d50076e5 from memory into f5
fnmadd.d f10, f30, f28, f5, dyn # perform operation
fnmadd.d f10, f30, f28, f5, rdn # perform operation
fnmadd.d f10, f30, f28, f5, rmm # perform operation
fnmadd.d f10, f30, f28, f5, rne # perform operation
fnmadd.d f10, f30, f28, f5, rtz # perform operation
fnmadd.d f10, f30, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f30, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x31, 0xb2614e6b4aab7b9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x68a8659bc5e8afb8 # load x3 with value 0x68a8659bc5e8afb8
sd x3, 0(x2) # store 0x68a8659bc5e8afb8 in memory
fld f17, 0(x2) # load 0x68a8659bc5e8afb8 from memory into f17
fnmadd.d f31, f6, f2, f17, dyn # perform operation
fnmadd.d f31, f6, f2, f17, rdn # perform operation
fnmadd.d f31, f6, f2, f17, rmm # perform operation
fnmadd.d f31, f6, f2, f17, rne # perform operation
fnmadd.d f31, f6, f2, f17, rtz # perform operation
fnmadd.d f31, f6, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x1, 0x8cb3d8e7e5f5c525 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0xffcaf1b5ea888ba4 # load x3 with value 0xffcaf1b5ea888ba4
sd x3, 0(x2) # store 0xffcaf1b5ea888ba4 in memory
fld f14, 0(x2) # load 0xffcaf1b5ea888ba4 from memory into f14
fnmadd.d f1, f19, f17, f14, dyn # perform operation
fnmadd.d f1, f19, f17, f14, rdn # perform operation
fnmadd.d f1, f19, f17, f14, rmm # perform operation
fnmadd.d f1, f19, f17, f14, rne # perform operation
fnmadd.d f1, f19, f17, f14, rtz # perform operation
fnmadd.d f1, f19, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x23, 0x1a87cbc172c8becd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xefda2bf6a79b4f49 # load x3 with value 0xefda2bf6a79b4f49
sd x3, 0(x2) # store 0xefda2bf6a79b4f49 in memory
fld f19, 0(x2) # load 0xefda2bf6a79b4f49 from memory into f19
fnmadd.d f23, f3, f30, f19, dyn # perform operation
fnmadd.d f23, f3, f30, f19, rdn # perform operation
fnmadd.d f23, f3, f30, f19, rmm # perform operation
fnmadd.d f23, f3, f30, f19, rne # perform operation
fnmadd.d f23, f3, f30, f19, rtz # perform operation
fnmadd.d f23, f3, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f3, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f3, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x6, 0x28f732d09d37aa8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x2bc6a868bad8aefb # load x3 with value 0x2bc6a868bad8aefb
sd x3, 0(x2) # store 0x2bc6a868bad8aefb in memory
fld f9, 0(x2) # load 0x2bc6a868bad8aefb from memory into f9
fnmadd.d f6, f27, f5, f9, dyn # perform operation
fnmadd.d f6, f27, f5, f9, rdn # perform operation
fnmadd.d f6, f27, f5, f9, rmm # perform operation
fnmadd.d f6, f27, f5, f9, rne # perform operation
fnmadd.d f6, f27, f5, f9, rtz # perform operation
fnmadd.d f6, f27, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f27, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f27, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x15, 0x71da5bc9bcde62e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x3b652695daa15a80 # load x3 with value 0x3b652695daa15a80
sd x3, 0(x2) # store 0x3b652695daa15a80 in memory
fld f21, 0(x2) # load 0x3b652695daa15a80 from memory into f21
fnmadd.d f15, f22, f12, f21, dyn # perform operation
fnmadd.d f15, f22, f12, f21, rdn # perform operation
fnmadd.d f15, f22, f12, f21, rmm # perform operation
fnmadd.d f15, f22, f12, f21, rne # perform operation
fnmadd.d f15, f22, f12, f21, rtz # perform operation
fnmadd.d f15, f22, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f22, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f22, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x14, 0xe869b0e0d3076df8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x3fd97333ebb5cad2 # load x3 with value 0x3fd97333ebb5cad2
sd x3, 0(x2) # store 0x3fd97333ebb5cad2 in memory
fld f29, 0(x2) # load 0x3fd97333ebb5cad2 from memory into f29
fnmadd.d f14, f2, f15, f29, dyn # perform operation
fnmadd.d f14, f2, f15, f29, rdn # perform operation
fnmadd.d f14, f2, f15, f29, rmm # perform operation
fnmadd.d f14, f2, f15, f29, rne # perform operation
fnmadd.d f14, f2, f15, f29, rtz # perform operation
fnmadd.d f14, f2, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f2, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x11, 0x49edd68083c1c918 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0xecc38969c19995d4 # load x3 with value 0xecc38969c19995d4
sd x3, 0(x2) # store 0xecc38969c19995d4 in memory
fld f8, 0(x2) # load 0xecc38969c19995d4 from memory into f8
fnmadd.d f11, f17, f20, f8, dyn # perform operation
fnmadd.d f11, f17, f20, f8, rdn # perform operation
fnmadd.d f11, f17, f20, f8, rmm # perform operation
fnmadd.d f11, f17, f20, f8, rne # perform operation
fnmadd.d f11, f17, f20, f8, rtz # perform operation
fnmadd.d f11, f17, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x23, 0xe8bbe4f50079926d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0xa881571eacd78ee1 # load x3 with value 0xa881571eacd78ee1
sd x3, 0(x2) # store 0xa881571eacd78ee1 in memory
fld f27, 0(x2) # load 0xa881571eacd78ee1 from memory into f27
fnmadd.d f23, f14, f17, f27, dyn # perform operation
fnmadd.d f23, f14, f17, f27, rdn # perform operation
fnmadd.d f23, f14, f17, f27, rmm # perform operation
fnmadd.d f23, f14, f17, f27, rne # perform operation
fnmadd.d f23, f14, f17, f27, rtz # perform operation
fnmadd.d f23, f14, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x91087c9793829b02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x1cbc65fd1e2d8f1f # load x3 with value 0x1cbc65fd1e2d8f1f
sd x3, 0(x2) # store 0x1cbc65fd1e2d8f1f in memory
fld f26, 0(x2) # load 0x1cbc65fd1e2d8f1f from memory into f26
fnmadd.d f1, f3, f7, f26, dyn # perform operation
fnmadd.d f1, f3, f7, f26, rdn # perform operation
fnmadd.d f1, f3, f7, f26, rmm # perform operation
fnmadd.d f1, f3, f7, f26, rne # perform operation
fnmadd.d f1, f3, f7, f26, rtz # perform operation
fnmadd.d f1, f3, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f3, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f3, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f3, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f3, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f3, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x1, 0xabbf81d18ad5b5b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0xdbb01fb738b7f8e6 # load x3 with value 0xdbb01fb738b7f8e6
sd x3, 0(x2) # store 0xdbb01fb738b7f8e6 in memory
fld f14, 0(x2) # load 0xdbb01fb738b7f8e6 from memory into f14
fnmadd.d f1, f12, f20, f14, dyn # perform operation
fnmadd.d f1, f12, f20, f14, rdn # perform operation
fnmadd.d f1, f12, f20, f14, rmm # perform operation
fnmadd.d f1, f12, f20, f14, rne # perform operation
fnmadd.d f1, f12, f20, f14, rtz # perform operation
fnmadd.d f1, f12, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f12, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x18, 0x8cf36661c2ff3e94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x155a44177f50295d # load x3 with value 0x155a44177f50295d
sd x3, 0(x2) # store 0x155a44177f50295d in memory
fld f5, 0(x2) # load 0x155a44177f50295d from memory into f5
fnmadd.d f18, f26, f17, f5, dyn # perform operation
fnmadd.d f18, f26, f17, f5, rdn # perform operation
fnmadd.d f18, f26, f17, f5, rmm # perform operation
fnmadd.d f18, f26, f17, f5, rne # perform operation
fnmadd.d f18, f26, f17, f5, rtz # perform operation
fnmadd.d f18, f26, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f26, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f26, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f26, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f26, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f26, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x26, 0x561e8c915bc191ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0xc0c3e5716db3b44a # load x3 with value 0xc0c3e5716db3b44a
sd x3, 0(x2) # store 0xc0c3e5716db3b44a in memory
fld f10, 0(x2) # load 0xc0c3e5716db3b44a from memory into f10
fnmadd.d f26, f30, f11, f10, dyn # perform operation
fnmadd.d f26, f30, f11, f10, rdn # perform operation
fnmadd.d f26, f30, f11, f10, rmm # perform operation
fnmadd.d f26, f30, f11, f10, rne # perform operation
fnmadd.d f26, f30, f11, f10, rtz # perform operation
fnmadd.d f26, f30, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f30, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f30, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f30, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f30, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f30, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x29, 0x029112321073a9c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x6db169971f804124 # load x3 with value 0x6db169971f804124
sd x3, 0(x2) # store 0x6db169971f804124 in memory
fld f14, 0(x2) # load 0x6db169971f804124 from memory into f14
fnmadd.d f29, f31, f22, f14, dyn # perform operation
fnmadd.d f29, f31, f22, f14, rdn # perform operation
fnmadd.d f29, f31, f22, f14, rmm # perform operation
fnmadd.d f29, f31, f22, f14, rne # perform operation
fnmadd.d f29, f31, f22, f14, rtz # perform operation
fnmadd.d f29, f31, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f31, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x3, 0x09f3e196ef8a3506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0x9788459d161b1013 # load x3 with value 0x9788459d161b1013
sd x3, 0(x2) # store 0x9788459d161b1013 in memory
fld f7, 0(x2) # load 0x9788459d161b1013 from memory into f7
fnmadd.d f3, f2, f16, f7, dyn # perform operation
fnmadd.d f3, f2, f16, f7, rdn # perform operation
fnmadd.d f3, f2, f16, f7, rmm # perform operation
fnmadd.d f3, f2, f16, f7, rne # perform operation
fnmadd.d f3, f2, f16, f7, rtz # perform operation
fnmadd.d f3, f2, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x17, 0x97aa4a95ea4034bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0xbd25ecebecf61629 # load x3 with value 0xbd25ecebecf61629
sd x3, 0(x2) # store 0xbd25ecebecf61629 in memory
fld f11, 0(x2) # load 0xbd25ecebecf61629 from memory into f11
fnmadd.d f17, f9, f27, f11, dyn # perform operation
fnmadd.d f17, f9, f27, f11, rdn # perform operation
fnmadd.d f17, f9, f27, f11, rmm # perform operation
fnmadd.d f17, f9, f27, f11, rne # perform operation
fnmadd.d f17, f9, f27, f11, rtz # perform operation
fnmadd.d f17, f9, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x12, 0x6e07a27fbfaf6646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x076406c7fbb57dc9 # load x3 with value 0x076406c7fbb57dc9
sd x3, 0(x2) # store 0x076406c7fbb57dc9 in memory
fld f15, 0(x2) # load 0x076406c7fbb57dc9 from memory into f15
fnmadd.d f12, f8, f4, f15, dyn # perform operation
fnmadd.d f12, f8, f4, f15, rdn # perform operation
fnmadd.d f12, f8, f4, f15, rmm # perform operation
fnmadd.d f12, f8, f4, f15, rne # perform operation
fnmadd.d f12, f8, f4, f15, rtz # perform operation
fnmadd.d f12, f8, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f8, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f8, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f8, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f8, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f8, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x20, 0xc9dfd3c7417200c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0xda67c8d35cced693 # load x3 with value 0xda67c8d35cced693
sd x3, 0(x2) # store 0xda67c8d35cced693 in memory
fld f10, 0(x2) # load 0xda67c8d35cced693 from memory into f10
fnmadd.d f20, f5, f7, f10, dyn # perform operation
fnmadd.d f20, f5, f7, f10, rdn # perform operation
fnmadd.d f20, f5, f7, f10, rmm # perform operation
fnmadd.d f20, f5, f7, f10, rne # perform operation
fnmadd.d f20, f5, f7, f10, rtz # perform operation
fnmadd.d f20, f5, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f5, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f5, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f5, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f5, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f5, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x10, 0x98ff2c6eeeeea484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x98f603fef9f80775 # load x3 with value 0x98f603fef9f80775
sd x3, 0(x2) # store 0x98f603fef9f80775 in memory
fld f12, 0(x2) # load 0x98f603fef9f80775 from memory into f12
fnmadd.d f10, f13, f6, f12, dyn # perform operation
fnmadd.d f10, f13, f6, f12, rdn # perform operation
fnmadd.d f10, f13, f6, f12, rmm # perform operation
fnmadd.d f10, f13, f6, f12, rne # perform operation
fnmadd.d f10, f13, f6, f12, rtz # perform operation
fnmadd.d f10, f13, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f13, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f13, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f13, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f13, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f13, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0x6c837a994542740f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x353b3582d4bd85bb # load x3 with value 0x353b3582d4bd85bb
sd x3, 0(x2) # store 0x353b3582d4bd85bb in memory
fld f4, 0(x2) # load 0x353b3582d4bd85bb from memory into f4
fnmadd.d f6, f25, f16, f4, dyn # perform operation
fnmadd.d f6, f25, f16, f4, rdn # perform operation
fnmadd.d f6, f25, f16, f4, rmm # perform operation
fnmadd.d f6, f25, f16, f4, rne # perform operation
fnmadd.d f6, f25, f16, f4, rtz # perform operation
fnmadd.d f6, f25, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f25, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f25, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f25, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f25, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f25, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x7, 0xab1b5c448f696841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x8ad40b3bb91fbee7 # load x3 with value 0x8ad40b3bb91fbee7
sd x3, 0(x2) # store 0x8ad40b3bb91fbee7 in memory
fld f23, 0(x2) # load 0x8ad40b3bb91fbee7 from memory into f23
fnmadd.d f7, f28, f8, f23, dyn # perform operation
fnmadd.d f7, f28, f8, f23, rdn # perform operation
fnmadd.d f7, f28, f8, f23, rmm # perform operation
fnmadd.d f7, f28, f8, f23, rne # perform operation
fnmadd.d f7, f28, f8, f23, rtz # perform operation
fnmadd.d f7, f28, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f28, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f28, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f28, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f28, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f28, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0xecf9c15bda3825a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x6a3a3b4549ba5d2c # load x3 with value 0x6a3a3b4549ba5d2c
sd x3, 0(x2) # store 0x6a3a3b4549ba5d2c in memory
fld f4, 0(x2) # load 0x6a3a3b4549ba5d2c from memory into f4
fnmadd.d f1, f19, f12, f4, dyn # perform operation
fnmadd.d f1, f19, f12, f4, rdn # perform operation
fnmadd.d f1, f19, f12, f4, rmm # perform operation
fnmadd.d f1, f19, f12, f4, rne # perform operation
fnmadd.d f1, f19, f12, f4, rtz # perform operation
fnmadd.d f1, f19, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x20, 0x487dbd27bbd886ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x4b842ae206c3b309 # load x3 with value 0x4b842ae206c3b309
sd x3, 0(x2) # store 0x4b842ae206c3b309 in memory
fld f4, 0(x2) # load 0x4b842ae206c3b309 from memory into f4
fnmadd.d f20, f17, f21, f4, dyn # perform operation
fnmadd.d f20, f17, f21, f4, rdn # perform operation
fnmadd.d f20, f17, f21, f4, rmm # perform operation
fnmadd.d f20, f17, f21, f4, rne # perform operation
fnmadd.d f20, f17, f21, f4, rtz # perform operation
fnmadd.d f20, f17, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f17, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x21, 0x9a31cbea2c282413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x358d0dd32d59ef04 # load x3 with value 0x358d0dd32d59ef04
sd x3, 0(x2) # store 0x358d0dd32d59ef04 in memory
fld f5, 0(x2) # load 0x358d0dd32d59ef04 from memory into f5
fnmadd.d f21, f8, f1, f5, dyn # perform operation
fnmadd.d f21, f8, f1, f5, rdn # perform operation
fnmadd.d f21, f8, f1, f5, rmm # perform operation
fnmadd.d f21, f8, f1, f5, rne # perform operation
fnmadd.d f21, f8, f1, f5, rtz # perform operation
fnmadd.d f21, f8, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x6, 0xf08225a01feaa9bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x1b8c96115c3dddf5 # load x3 with value 0x1b8c96115c3dddf5
sd x3, 0(x2) # store 0x1b8c96115c3dddf5 in memory
fld f31, 0(x2) # load 0x1b8c96115c3dddf5 from memory into f31
fnmadd.d f6, f14, f3, f31, dyn # perform operation
fnmadd.d f6, f14, f3, f31, rdn # perform operation
fnmadd.d f6, f14, f3, f31, rmm # perform operation
fnmadd.d f6, f14, f3, f31, rne # perform operation
fnmadd.d f6, f14, f3, f31, rtz # perform operation
fnmadd.d f6, f14, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f14, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f14, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f14, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f14, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f14, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x13, 0xc26aa2e985e182eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x64fb65a840be3e9d # load x3 with value 0x64fb65a840be3e9d
sd x3, 0(x2) # store 0x64fb65a840be3e9d in memory
fld f29, 0(x2) # load 0x64fb65a840be3e9d from memory into f29
fnmadd.d f13, f8, f12, f29, dyn # perform operation
fnmadd.d f13, f8, f12, f29, rdn # perform operation
fnmadd.d f13, f8, f12, f29, rmm # perform operation
fnmadd.d f13, f8, f12, f29, rne # perform operation
fnmadd.d f13, f8, f12, f29, rtz # perform operation
fnmadd.d f13, f8, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f8, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x7c59869072ef7a43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xb0d2c66881820c0e # load x3 with value 0xb0d2c66881820c0e
sd x3, 0(x2) # store 0xb0d2c66881820c0e in memory
fld f14, 0(x2) # load 0xb0d2c66881820c0e from memory into f14
fnmadd.d f21, f31, f1, f14, dyn # perform operation
fnmadd.d f21, f31, f1, f14, rdn # perform operation
fnmadd.d f21, f31, f1, f14, rmm # perform operation
fnmadd.d f21, f31, f1, f14, rne # perform operation
fnmadd.d f21, f31, f1, f14, rtz # perform operation
fnmadd.d f21, f31, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f31, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f31, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f31, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f31, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f31, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x21, 0x4ce9cc44aa5730d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x166938f27891eac8 # load x3 with value 0x166938f27891eac8
sd x3, 0(x2) # store 0x166938f27891eac8 in memory
fld f17, 0(x2) # load 0x166938f27891eac8 from memory into f17
fnmadd.d f21, f19, f20, f17, dyn # perform operation
fnmadd.d f21, f19, f20, f17, rdn # perform operation
fnmadd.d f21, f19, f20, f17, rmm # perform operation
fnmadd.d f21, f19, f20, f17, rne # perform operation
fnmadd.d f21, f19, f20, f17, rtz # perform operation
fnmadd.d f21, f19, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f19, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f19, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f19, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f19, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f19, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x7, 0x75cf880d4b2d730f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x950bb3077f330c8f # load x3 with value 0x950bb3077f330c8f
sd x3, 0(x2) # store 0x950bb3077f330c8f in memory
fld f13, 0(x2) # load 0x950bb3077f330c8f from memory into f13
fnmadd.d f7, f12, f3, f13, dyn # perform operation
fnmadd.d f7, f12, f3, f13, rdn # perform operation
fnmadd.d f7, f12, f3, f13, rmm # perform operation
fnmadd.d f7, f12, f3, f13, rne # perform operation
fnmadd.d f7, f12, f3, f13, rtz # perform operation
fnmadd.d f7, f12, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f12, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x28, 0x472ec9f170e0a563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0xabe68f16c5e398a1 # load x3 with value 0xabe68f16c5e398a1
sd x3, 0(x2) # store 0xabe68f16c5e398a1 in memory
fld f23, 0(x2) # load 0xabe68f16c5e398a1 from memory into f23
fnmadd.d f28, f26, f17, f23, dyn # perform operation
fnmadd.d f28, f26, f17, f23, rdn # perform operation
fnmadd.d f28, f26, f17, f23, rmm # perform operation
fnmadd.d f28, f26, f17, f23, rne # perform operation
fnmadd.d f28, f26, f17, f23, rtz # perform operation
fnmadd.d f28, f26, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f26, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f26, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f26, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f26, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f26, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x16, 0x1f3e595391ec14ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0xde44f0aef31351c6 # load x3 with value 0xde44f0aef31351c6
sd x3, 0(x2) # store 0xde44f0aef31351c6 in memory
fld f22, 0(x2) # load 0xde44f0aef31351c6 from memory into f22
fnmadd.d f16, f20, f10, f22, dyn # perform operation
fnmadd.d f16, f20, f10, f22, rdn # perform operation
fnmadd.d f16, f20, f10, f22, rmm # perform operation
fnmadd.d f16, f20, f10, f22, rne # perform operation
fnmadd.d f16, f20, f10, f22, rtz # perform operation
fnmadd.d f16, f20, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f20, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x3, 0x142fac9126015879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x004a657b9ab8e7b1 # load x3 with value 0x004a657b9ab8e7b1
sd x3, 0(x2) # store 0x004a657b9ab8e7b1 in memory
fld f21, 0(x2) # load 0x004a657b9ab8e7b1 from memory into f21
fnmadd.d f3, f11, f27, f21, dyn # perform operation
fnmadd.d f3, f11, f27, f21, rdn # perform operation
fnmadd.d f3, f11, f27, f21, rmm # perform operation
fnmadd.d f3, f11, f27, f21, rne # perform operation
fnmadd.d f3, f11, f27, f21, rtz # perform operation
fnmadd.d f3, f11, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f11, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x24, 0xb21328c37ae2e565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x2993676cb4fa6701 # load x3 with value 0x2993676cb4fa6701
sd x3, 0(x2) # store 0x2993676cb4fa6701 in memory
fld f17, 0(x2) # load 0x2993676cb4fa6701 from memory into f17
fnmadd.d f24, f16, f20, f17, dyn # perform operation
fnmadd.d f24, f16, f20, f17, rdn # perform operation
fnmadd.d f24, f16, f20, f17, rmm # perform operation
fnmadd.d f24, f16, f20, f17, rne # perform operation
fnmadd.d f24, f16, f20, f17, rtz # perform operation
fnmadd.d f24, f16, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f16, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x3, 0x5fae44a190152308 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0x3ce31695eda63359 # load x3 with value 0x3ce31695eda63359
sd x3, 0(x2) # store 0x3ce31695eda63359 in memory
fld f13, 0(x2) # load 0x3ce31695eda63359 from memory into f13
fnmadd.d f3, f5, f15, f13, dyn # perform operation
fnmadd.d f3, f5, f15, f13, rdn # perform operation
fnmadd.d f3, f5, f15, f13, rmm # perform operation
fnmadd.d f3, f5, f15, f13, rne # perform operation
fnmadd.d f3, f5, f15, f13, rtz # perform operation
fnmadd.d f3, f5, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f5, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f5, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x238400d4bbb257f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0xe215ed721a8c3386 # load x3 with value 0xe215ed721a8c3386
sd x3, 0(x2) # store 0xe215ed721a8c3386 in memory
fld f28, 0(x2) # load 0xe215ed721a8c3386 from memory into f28
fnmadd.d f18, f21, f14, f28, dyn # perform operation
fnmadd.d f18, f21, f14, f28, rdn # perform operation
fnmadd.d f18, f21, f14, f28, rmm # perform operation
fnmadd.d f18, f21, f14, f28, rne # perform operation
fnmadd.d f18, f21, f14, f28, rtz # perform operation
fnmadd.d f18, f21, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f21, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f21, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f21, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f21, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f21, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x14, 0xa8c710bde5418ee0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x2480d4c5d3fce03a # load x3 with value 0x2480d4c5d3fce03a
sd x3, 0(x2) # store 0x2480d4c5d3fce03a in memory
fld f5, 0(x2) # load 0x2480d4c5d3fce03a from memory into f5
fnmadd.d f14, f29, f24, f5, dyn # perform operation
fnmadd.d f14, f29, f24, f5, rdn # perform operation
fnmadd.d f14, f29, f24, f5, rmm # perform operation
fnmadd.d f14, f29, f24, f5, rne # perform operation
fnmadd.d f14, f29, f24, f5, rtz # perform operation
fnmadd.d f14, f29, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f29, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x28, 0xd2ccf1d4eb38cec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x209dc212fe32dee2 # load x3 with value 0x209dc212fe32dee2
sd x3, 0(x2) # store 0x209dc212fe32dee2 in memory
fld f22, 0(x2) # load 0x209dc212fe32dee2 from memory into f22
fnmadd.d f28, f23, f4, f22, dyn # perform operation
fnmadd.d f28, f23, f4, f22, rdn # perform operation
fnmadd.d f28, f23, f4, f22, rmm # perform operation
fnmadd.d f28, f23, f4, f22, rne # perform operation
fnmadd.d f28, f23, f4, f22, rtz # perform operation
fnmadd.d f28, f23, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f23, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f23, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x16, 0xa13ee29baf880b88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xf0677558691b2bed # load x3 with value 0xf0677558691b2bed
sd x3, 0(x2) # store 0xf0677558691b2bed in memory
fld f26, 0(x2) # load 0xf0677558691b2bed from memory into f26
fnmadd.d f16, f6, f29, f26, dyn # perform operation
fnmadd.d f16, f6, f29, f26, rdn # perform operation
fnmadd.d f16, f6, f29, f26, rmm # perform operation
fnmadd.d f16, f6, f29, f26, rne # perform operation
fnmadd.d f16, f6, f29, f26, rtz # perform operation
fnmadd.d f16, f6, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f6, f29, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x19, 0x4853b3d4859ce4ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0xba15f4b65a9629f9 # load x3 with value 0xba15f4b65a9629f9
sd x3, 0(x2) # store 0xba15f4b65a9629f9 in memory
fld f23, 0(x2) # load 0xba15f4b65a9629f9 from memory into f23
fnmadd.d f19, f17, f13, f23, dyn # perform operation
fnmadd.d f19, f17, f13, f23, rdn # perform operation
fnmadd.d f19, f17, f13, f23, rmm # perform operation
fnmadd.d f19, f17, f13, f23, rne # perform operation
fnmadd.d f19, f17, f13, f23, rtz # perform operation
fnmadd.d f19, f17, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f17, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x16, 0xee04831b93fd8314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0xe578bce7b30dc409 # load x3 with value 0xe578bce7b30dc409
sd x3, 0(x2) # store 0xe578bce7b30dc409 in memory
fld f22, 0(x2) # load 0xe578bce7b30dc409 from memory into f22
fnmadd.d f16, f31, f4, f22, dyn # perform operation
fnmadd.d f16, f31, f4, f22, rdn # perform operation
fnmadd.d f16, f31, f4, f22, rmm # perform operation
fnmadd.d f16, f31, f4, f22, rne # perform operation
fnmadd.d f16, f31, f4, f22, rtz # perform operation
fnmadd.d f16, f31, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x17, 0x78f6cfeb5bf0860b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x898edcfe4c7e55c1 # load x3 with value 0x898edcfe4c7e55c1
sd x3, 0(x2) # store 0x898edcfe4c7e55c1 in memory
fld f27, 0(x2) # load 0x898edcfe4c7e55c1 from memory into f27
fnmadd.d f17, f31, f19, f27, dyn # perform operation
fnmadd.d f17, f31, f19, f27, rdn # perform operation
fnmadd.d f17, f31, f19, f27, rmm # perform operation
fnmadd.d f17, f31, f19, f27, rne # perform operation
fnmadd.d f17, f31, f19, f27, rtz # perform operation
fnmadd.d f17, f31, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f31, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x31, 0xbf86cd84c0dae2fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x96c077d11c9bb129 # load x3 with value 0x96c077d11c9bb129
sd x3, 0(x2) # store 0x96c077d11c9bb129 in memory
fld f23, 0(x2) # load 0x96c077d11c9bb129 from memory into f23
fnmadd.d f31, f12, f9, f23, dyn # perform operation
fnmadd.d f31, f12, f9, f23, rdn # perform operation
fnmadd.d f31, f12, f9, f23, rmm # perform operation
fnmadd.d f31, f12, f9, f23, rne # perform operation
fnmadd.d f31, f12, f9, f23, rtz # perform operation
fnmadd.d f31, f12, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x17, 0x133bc973a7df16bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x82e268ff8f0eeb7a # load x3 with value 0x82e268ff8f0eeb7a
sd x3, 0(x2) # store 0x82e268ff8f0eeb7a in memory
fld f1, 0(x2) # load 0x82e268ff8f0eeb7a from memory into f1
fnmadd.d f17, f4, f25, f1, dyn # perform operation
fnmadd.d f17, f4, f25, f1, rdn # perform operation
fnmadd.d f17, f4, f25, f1, rmm # perform operation
fnmadd.d f17, f4, f25, f1, rne # perform operation
fnmadd.d f17, f4, f25, f1, rtz # perform operation
fnmadd.d f17, f4, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f4, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f4, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f4, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f4, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f4, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x14, 0x7644b62e9edb5855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x16889a94a7b4f45b # load x3 with value 0x16889a94a7b4f45b
sd x3, 0(x2) # store 0x16889a94a7b4f45b in memory
fld f22, 0(x2) # load 0x16889a94a7b4f45b from memory into f22
fnmadd.d f14, f30, f13, f22, dyn # perform operation
fnmadd.d f14, f30, f13, f22, rdn # perform operation
fnmadd.d f14, f30, f13, f22, rmm # perform operation
fnmadd.d f14, f30, f13, f22, rne # perform operation
fnmadd.d f14, f30, f13, f22, rtz # perform operation
fnmadd.d f14, f30, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f30, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f30, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f30, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f30, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f30, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x7, 0x9a270ba446412232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0xbbd2206002b65565 # load x3 with value 0xbbd2206002b65565
sd x3, 0(x2) # store 0xbbd2206002b65565 in memory
fld f20, 0(x2) # load 0xbbd2206002b65565 from memory into f20
fnmadd.d f7, f17, f23, f20, dyn # perform operation
fnmadd.d f7, f17, f23, f20, rdn # perform operation
fnmadd.d f7, f17, f23, f20, rmm # perform operation
fnmadd.d f7, f17, f23, f20, rne # perform operation
fnmadd.d f7, f17, f23, f20, rtz # perform operation
fnmadd.d f7, f17, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f17, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f17, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x29, 0x671b0fc5273f490c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x55a2968d2396cf41 # load x3 with value 0x55a2968d2396cf41
sd x3, 0(x2) # store 0x55a2968d2396cf41 in memory
fld f27, 0(x2) # load 0x55a2968d2396cf41 from memory into f27
fnmadd.d f29, f23, f24, f27, dyn # perform operation
fnmadd.d f29, f23, f24, f27, rdn # perform operation
fnmadd.d f29, f23, f24, f27, rmm # perform operation
fnmadd.d f29, f23, f24, f27, rne # perform operation
fnmadd.d f29, f23, f24, f27, rtz # perform operation
fnmadd.d f29, f23, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f23, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f23, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f23, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f23, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f23, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x30, 0xc736e32c3ab17522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xf164d0cde10d6dc9 # load x3 with value 0xf164d0cde10d6dc9
sd x3, 0(x2) # store 0xf164d0cde10d6dc9 in memory
fld f4, 0(x2) # load 0xf164d0cde10d6dc9 from memory into f4
fnmadd.d f30, f6, f17, f4, dyn # perform operation
fnmadd.d f30, f6, f17, f4, rdn # perform operation
fnmadd.d f30, f6, f17, f4, rmm # perform operation
fnmadd.d f30, f6, f17, f4, rne # perform operation
fnmadd.d f30, f6, f17, f4, rtz # perform operation
fnmadd.d f30, f6, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f6, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x19, 0xa8438ca1ca5f01ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xf478603098ed903f # load x3 with value 0xf478603098ed903f
sd x3, 0(x2) # store 0xf478603098ed903f in memory
fld f30, 0(x2) # load 0xf478603098ed903f from memory into f30
fnmadd.d f19, f14, f11, f30, dyn # perform operation
fnmadd.d f19, f14, f11, f30, rdn # perform operation
fnmadd.d f19, f14, f11, f30, rmm # perform operation
fnmadd.d f19, f14, f11, f30, rne # perform operation
fnmadd.d f19, f14, f11, f30, rtz # perform operation
fnmadd.d f19, f14, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f14, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x11, 0x1bf749b6eb5dde53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0xf25f5c00aabbef39 # load x3 with value 0xf25f5c00aabbef39
sd x3, 0(x2) # store 0xf25f5c00aabbef39 in memory
fld f14, 0(x2) # load 0xf25f5c00aabbef39 from memory into f14
fnmadd.d f11, f25, f18, f14, dyn # perform operation
fnmadd.d f11, f25, f18, f14, rdn # perform operation
fnmadd.d f11, f25, f18, f14, rmm # perform operation
fnmadd.d f11, f25, f18, f14, rne # perform operation
fnmadd.d f11, f25, f18, f14, rtz # perform operation
fnmadd.d f11, f25, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f25, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x17, 0x86e20f7817c13388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x1a787f5ce751c034 # load x3 with value 0x1a787f5ce751c034
sd x3, 0(x2) # store 0x1a787f5ce751c034 in memory
fld f10, 0(x2) # load 0x1a787f5ce751c034 from memory into f10
fnmadd.d f17, f31, f16, f10, dyn # perform operation
fnmadd.d f17, f31, f16, f10, rdn # perform operation
fnmadd.d f17, f31, f16, f10, rmm # perform operation
fnmadd.d f17, f31, f16, f10, rne # perform operation
fnmadd.d f17, f31, f16, f10, rtz # perform operation
fnmadd.d f17, f31, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f31, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x23, 0x3e01013b3267fd69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x8abd5b9654abc343 # load x3 with value 0x8abd5b9654abc343
sd x3, 0(x2) # store 0x8abd5b9654abc343 in memory
fld f6, 0(x2) # load 0x8abd5b9654abc343 from memory into f6
fnmadd.d f23, f20, f17, f6, dyn # perform operation
fnmadd.d f23, f20, f17, f6, rdn # perform operation
fnmadd.d f23, f20, f17, f6, rmm # perform operation
fnmadd.d f23, f20, f17, f6, rne # perform operation
fnmadd.d f23, f20, f17, f6, rtz # perform operation
fnmadd.d f23, f20, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f20, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x31, 0x1e48c5b46be30532 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xfbe021e6679775c7 # load x3 with value 0xfbe021e6679775c7
sd x3, 0(x2) # store 0xfbe021e6679775c7 in memory
fld f26, 0(x2) # load 0xfbe021e6679775c7 from memory into f26
fnmadd.d f31, f10, f23, f26, dyn # perform operation
fnmadd.d f31, f10, f23, f26, rdn # perform operation
fnmadd.d f31, f10, f23, f26, rmm # perform operation
fnmadd.d f31, f10, f23, f26, rne # perform operation
fnmadd.d f31, f10, f23, f26, rtz # perform operation
fnmadd.d f31, f10, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f10, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f10, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x7, 0x8ba9879a2137fbd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0xcb8c528bd9ceb026 # load x3 with value 0xcb8c528bd9ceb026
sd x3, 0(x2) # store 0xcb8c528bd9ceb026 in memory
fld f16, 0(x2) # load 0xcb8c528bd9ceb026 from memory into f16
fnmadd.d f7, f21, f26, f16, dyn # perform operation
fnmadd.d f7, f21, f26, f16, rdn # perform operation
fnmadd.d f7, f21, f26, f16, rmm # perform operation
fnmadd.d f7, f21, f26, f16, rne # perform operation
fnmadd.d f7, f21, f26, f16, rtz # perform operation
fnmadd.d f7, f21, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f21, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x12, 0xf7ebc0dec2937a29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x01f60e8bdbc847ec # load x3 with value 0x01f60e8bdbc847ec
sd x3, 0(x2) # store 0x01f60e8bdbc847ec in memory
fld f21, 0(x2) # load 0x01f60e8bdbc847ec from memory into f21
fnmadd.d f12, f11, f5, f21, dyn # perform operation
fnmadd.d f12, f11, f5, f21, rdn # perform operation
fnmadd.d f12, f11, f5, f21, rmm # perform operation
fnmadd.d f12, f11, f5, f21, rne # perform operation
fnmadd.d f12, f11, f5, f21, rtz # perform operation
fnmadd.d f12, f11, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f11, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f11, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x12, 0x546cb9f6fde255c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
li x3, 0x61a92e94a8991490 # load x3 with value 0x61a92e94a8991490
sd x3, 0(x2) # store 0x61a92e94a8991490 in memory
fld f24, 0(x2) # load 0x61a92e94a8991490 from memory into f24
fnmadd.d f12, f22, f1, f24, dyn # perform operation
fnmadd.d f12, f22, f1, f24, rdn # perform operation
fnmadd.d f12, f22, f1, f24, rmm # perform operation
fnmadd.d f12, f22, f1, f24, rne # perform operation
fnmadd.d f12, f22, f1, f24, rtz # perform operation
fnmadd.d f12, f22, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f22, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f22, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x29, 0xe9c41ed394c36443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xcdb95a91c8e7b00f # load x3 with value 0xcdb95a91c8e7b00f
sd x3, 0(x2) # store 0xcdb95a91c8e7b00f in memory
fld f21, 0(x2) # load 0xcdb95a91c8e7b00f from memory into f21
fnmadd.d f29, f7, f13, f21, dyn # perform operation
fnmadd.d f29, f7, f13, f21, rdn # perform operation
fnmadd.d f29, f7, f13, f21, rmm # perform operation
fnmadd.d f29, f7, f13, f21, rne # perform operation
fnmadd.d f29, f7, f13, f21, rtz # perform operation
fnmadd.d f29, f7, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x1, 0x4243b43f0f720174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0x886e231a02a2a422 # load x3 with value 0x886e231a02a2a422
sd x3, 0(x2) # store 0x886e231a02a2a422 in memory
fld f19, 0(x2) # load 0x886e231a02a2a422 from memory into f19
fnmadd.d f1, f29, f14, f19, dyn # perform operation
fnmadd.d f1, f29, f14, f19, rdn # perform operation
fnmadd.d f1, f29, f14, f19, rmm # perform operation
fnmadd.d f1, f29, f14, f19, rne # perform operation
fnmadd.d f1, f29, f14, f19, rtz # perform operation
fnmadd.d f1, f29, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f29, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f29, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x3, 0x680a5b36c7e7911f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x18a1531b5dc89d5e # load x3 with value 0x18a1531b5dc89d5e
sd x3, 0(x2) # store 0x18a1531b5dc89d5e in memory
fld f20, 0(x2) # load 0x18a1531b5dc89d5e from memory into f20
fnmadd.d f3, f16, f19, f20, dyn # perform operation
fnmadd.d f3, f16, f19, f20, rdn # perform operation
fnmadd.d f3, f16, f19, f20, rmm # perform operation
fnmadd.d f3, f16, f19, f20, rne # perform operation
fnmadd.d f3, f16, f19, f20, rtz # perform operation
fnmadd.d f3, f16, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x23, 0x096544602508f2f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x79071f8b313efccd # load x3 with value 0x79071f8b313efccd
sd x3, 0(x2) # store 0x79071f8b313efccd in memory
fld f7, 0(x2) # load 0x79071f8b313efccd from memory into f7
fnmadd.d f23, f24, f2, f7, dyn # perform operation
fnmadd.d f23, f24, f2, f7, rdn # perform operation
fnmadd.d f23, f24, f2, f7, rmm # perform operation
fnmadd.d f23, f24, f2, f7, rne # perform operation
fnmadd.d f23, f24, f2, f7, rtz # perform operation
fnmadd.d f23, f24, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f24, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f24, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f24, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f24, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f24, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x7, 0xf975838f990815ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0xf03523aecc0b4d89 # load x3 with value 0xf03523aecc0b4d89
sd x3, 0(x2) # store 0xf03523aecc0b4d89 in memory
fld f5, 0(x2) # load 0xf03523aecc0b4d89 from memory into f5
fnmadd.d f7, f25, f19, f5, dyn # perform operation
fnmadd.d f7, f25, f19, f5, rdn # perform operation
fnmadd.d f7, f25, f19, f5, rmm # perform operation
fnmadd.d f7, f25, f19, f5, rne # perform operation
fnmadd.d f7, f25, f19, f5, rtz # perform operation
fnmadd.d f7, f25, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f25, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x26, 0xfdd723b35e7cc04e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xbd0abb75bc1e92e9 # load x3 with value 0xbd0abb75bc1e92e9
sd x3, 0(x2) # store 0xbd0abb75bc1e92e9 in memory
fld f4, 0(x2) # load 0xbd0abb75bc1e92e9 from memory into f4
fnmadd.d f26, f17, f27, f4, dyn # perform operation
fnmadd.d f26, f17, f27, f4, rdn # perform operation
fnmadd.d f26, f17, f27, f4, rmm # perform operation
fnmadd.d f26, f17, f27, f4, rne # perform operation
fnmadd.d f26, f17, f27, f4, rtz # perform operation
fnmadd.d f26, f17, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f17, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x30, 0x73cbea87a7de942a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x7991e2027e9cf057 # load x3 with value 0x7991e2027e9cf057
sd x3, 0(x2) # store 0x7991e2027e9cf057 in memory
fld f28, 0(x2) # load 0x7991e2027e9cf057 from memory into f28
fnmadd.d f30, f1, f17, f28, dyn # perform operation
fnmadd.d f30, f1, f17, f28, rdn # perform operation
fnmadd.d f30, f1, f17, f28, rmm # perform operation
fnmadd.d f30, f1, f17, f28, rne # perform operation
fnmadd.d f30, f1, f17, f28, rtz # perform operation
fnmadd.d f30, f1, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f1, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x30, 0x20b254c5baf7d36b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0xc02e6f94bfc64dcc # load x3 with value 0xc02e6f94bfc64dcc
sd x3, 0(x2) # store 0xc02e6f94bfc64dcc in memory
fld f5, 0(x2) # load 0xc02e6f94bfc64dcc from memory into f5
fnmadd.d f30, f23, f22, f5, dyn # perform operation
fnmadd.d f30, f23, f22, f5, rdn # perform operation
fnmadd.d f30, f23, f22, f5, rmm # perform operation
fnmadd.d f30, f23, f22, f5, rne # perform operation
fnmadd.d f30, f23, f22, f5, rtz # perform operation
fnmadd.d f30, f23, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f23, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f23, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x15, 0x3676889282962cf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x936d52ae8df884b7 # load x3 with value 0x936d52ae8df884b7
sd x3, 0(x2) # store 0x936d52ae8df884b7 in memory
fld f19, 0(x2) # load 0x936d52ae8df884b7 from memory into f19
fnmadd.d f15, f23, f10, f19, dyn # perform operation
fnmadd.d f15, f23, f10, f19, rdn # perform operation
fnmadd.d f15, f23, f10, f19, rmm # perform operation
fnmadd.d f15, f23, f10, f19, rne # perform operation
fnmadd.d f15, f23, f10, f19, rtz # perform operation
fnmadd.d f15, f23, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f23, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f23, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f23, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f23, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f23, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x20, 0x32738651bfcfefe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xf8a37446641c3380 # load x3 with value 0xf8a37446641c3380
sd x3, 0(x2) # store 0xf8a37446641c3380 in memory
fld f19, 0(x2) # load 0xf8a37446641c3380 from memory into f19
fnmadd.d f20, f30, f4, f19, dyn # perform operation
fnmadd.d f20, f30, f4, f19, rdn # perform operation
fnmadd.d f20, f30, f4, f19, rmm # perform operation
fnmadd.d f20, f30, f4, f19, rne # perform operation
fnmadd.d f20, f30, f4, f19, rtz # perform operation
fnmadd.d f20, f30, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f30, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f30, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x15, 0x0e920774761dc456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0xb732fb220e124e8d # load x3 with value 0xb732fb220e124e8d
sd x3, 0(x2) # store 0xb732fb220e124e8d in memory
fld f9, 0(x2) # load 0xb732fb220e124e8d from memory into f9
fnmadd.d f15, f30, f17, f9, dyn # perform operation
fnmadd.d f15, f30, f17, f9, rdn # perform operation
fnmadd.d f15, f30, f17, f9, rmm # perform operation
fnmadd.d f15, f30, f17, f9, rne # perform operation
fnmadd.d f15, f30, f17, f9, rtz # perform operation
fnmadd.d f15, f30, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x9, 0x132d57f4337a912f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xd262ca88bcd7c4d7 # load x3 with value 0xd262ca88bcd7c4d7
sd x3, 0(x2) # store 0xd262ca88bcd7c4d7 in memory
fld f5, 0(x2) # load 0xd262ca88bcd7c4d7 from memory into f5
fnmadd.d f9, f21, f28, f5, dyn # perform operation
fnmadd.d f9, f21, f28, f5, rdn # perform operation
fnmadd.d f9, f21, f28, f5, rmm # perform operation
fnmadd.d f9, f21, f28, f5, rne # perform operation
fnmadd.d f9, f21, f28, f5, rtz # perform operation
fnmadd.d f9, f21, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f21, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f21, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f21, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f21, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f21, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x17, 0x161ab2d4a8dfb521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xc7a5679e1dbb531b # load x3 with value 0xc7a5679e1dbb531b
sd x3, 0(x2) # store 0xc7a5679e1dbb531b in memory
fld f27, 0(x2) # load 0xc7a5679e1dbb531b from memory into f27
fnmadd.d f17, f14, f25, f27, dyn # perform operation
fnmadd.d f17, f14, f25, f27, rdn # perform operation
fnmadd.d f17, f14, f25, f27, rmm # perform operation
fnmadd.d f17, f14, f25, f27, rne # perform operation
fnmadd.d f17, f14, f25, f27, rtz # perform operation
fnmadd.d f17, f14, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f14, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f14, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f14, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f14, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f14, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x17, 0xb8fa69841d58ce09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x68f91d11ae90bb8d # load x3 with value 0x68f91d11ae90bb8d
sd x3, 0(x2) # store 0x68f91d11ae90bb8d in memory
fld f14, 0(x2) # load 0x68f91d11ae90bb8d from memory into f14
fnmadd.d f17, f31, f3, f14, dyn # perform operation
fnmadd.d f17, f31, f3, f14, rdn # perform operation
fnmadd.d f17, f31, f3, f14, rmm # perform operation
fnmadd.d f17, f31, f3, f14, rne # perform operation
fnmadd.d f17, f31, f3, f14, rtz # perform operation
fnmadd.d f17, f31, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f31, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x22, 0x3260538eb6fa0897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xcfab2e79a579404f # load x3 with value 0xcfab2e79a579404f
sd x3, 0(x2) # store 0xcfab2e79a579404f in memory
fld f9, 0(x2) # load 0xcfab2e79a579404f from memory into f9
fnmadd.d f22, f29, f24, f9, dyn # perform operation
fnmadd.d f22, f29, f24, f9, rdn # perform operation
fnmadd.d f22, f29, f24, f9, rmm # perform operation
fnmadd.d f22, f29, f24, f9, rne # perform operation
fnmadd.d f22, f29, f24, f9, rtz # perform operation
fnmadd.d f22, f29, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f29, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x29, 0x28f2e6bbdc376114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0xc9c833f99e85c05f # load x3 with value 0xc9c833f99e85c05f
sd x3, 0(x2) # store 0xc9c833f99e85c05f in memory
fld f15, 0(x2) # load 0xc9c833f99e85c05f from memory into f15
fnmadd.d f29, f11, f14, f15, dyn # perform operation
fnmadd.d f29, f11, f14, f15, rdn # perform operation
fnmadd.d f29, f11, f14, f15, rmm # perform operation
fnmadd.d f29, f11, f14, f15, rne # perform operation
fnmadd.d f29, f11, f14, f15, rtz # perform operation
fnmadd.d f29, f11, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f11, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x8, 0xeea300d36fca170e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0xf04eac3989953e0c # load x3 with value 0xf04eac3989953e0c
sd x3, 0(x2) # store 0xf04eac3989953e0c in memory
fld f18, 0(x2) # load 0xf04eac3989953e0c from memory into f18
fnmadd.d f8, f6, f24, f18, dyn # perform operation
fnmadd.d f8, f6, f24, f18, rdn # perform operation
fnmadd.d f8, f6, f24, f18, rmm # perform operation
fnmadd.d f8, f6, f24, f18, rne # perform operation
fnmadd.d f8, f6, f24, f18, rtz # perform operation
fnmadd.d f8, f6, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f6, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x3, 0x5b7cc0fa7ca5c50b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x919528011796c1ba # load x3 with value 0x919528011796c1ba
sd x3, 0(x2) # store 0x919528011796c1ba in memory
fld f10, 0(x2) # load 0x919528011796c1ba from memory into f10
fnmadd.d f3, f30, f15, f10, dyn # perform operation
fnmadd.d f3, f30, f15, f10, rdn # perform operation
fnmadd.d f3, f30, f15, f10, rmm # perform operation
fnmadd.d f3, f30, f15, f10, rne # perform operation
fnmadd.d f3, f30, f15, f10, rtz # perform operation
fnmadd.d f3, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f30, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x26, 0x0fe21675f3bfd695 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x383494aa278aa065 # load x3 with value 0x383494aa278aa065
sd x3, 0(x2) # store 0x383494aa278aa065 in memory
fld f11, 0(x2) # load 0x383494aa278aa065 from memory into f11
fnmadd.d f26, f20, f7, f11, dyn # perform operation
fnmadd.d f26, f20, f7, f11, rdn # perform operation
fnmadd.d f26, f20, f7, f11, rmm # perform operation
fnmadd.d f26, f20, f7, f11, rne # perform operation
fnmadd.d f26, f20, f7, f11, rtz # perform operation
fnmadd.d f26, f20, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f20, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f20, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x5, 0x89b7d0a2e41961a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x4e7341a677eea0c5 # load x3 with value 0x4e7341a677eea0c5
sd x3, 0(x2) # store 0x4e7341a677eea0c5 in memory
fld f23, 0(x2) # load 0x4e7341a677eea0c5 from memory into f23
fnmadd.d f5, f21, f14, f23, dyn # perform operation
fnmadd.d f5, f21, f14, f23, rdn # perform operation
fnmadd.d f5, f21, f14, f23, rmm # perform operation
fnmadd.d f5, f21, f14, f23, rne # perform operation
fnmadd.d f5, f21, f14, f23, rtz # perform operation
fnmadd.d f5, f21, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f21, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x26, 0xdef95bef30383b42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x99fd769cb06a3f09 # load x3 with value 0x99fd769cb06a3f09
sd x3, 0(x2) # store 0x99fd769cb06a3f09 in memory
fld f15, 0(x2) # load 0x99fd769cb06a3f09 from memory into f15
fnmadd.d f26, f13, f22, f15, dyn # perform operation
fnmadd.d f26, f13, f22, f15, rdn # perform operation
fnmadd.d f26, f13, f22, f15, rmm # perform operation
fnmadd.d f26, f13, f22, f15, rne # perform operation
fnmadd.d f26, f13, f22, f15, rtz # perform operation
fnmadd.d f26, f13, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f13, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f13, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f13, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f13, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f13, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x8, 0x99ed55da5e77f0a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x876ceb84691b77da # load x3 with value 0x876ceb84691b77da
sd x3, 0(x2) # store 0x876ceb84691b77da in memory
fld f6, 0(x2) # load 0x876ceb84691b77da from memory into f6
fnmadd.d f8, f31, f23, f6, dyn # perform operation
fnmadd.d f8, f31, f23, f6, rdn # perform operation
fnmadd.d f8, f31, f23, f6, rmm # perform operation
fnmadd.d f8, f31, f23, f6, rne # perform operation
fnmadd.d f8, f31, f23, f6, rtz # perform operation
fnmadd.d f8, f31, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x31, 0x891925ff89b18cc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x7d649407a2204226 # load x3 with value 0x7d649407a2204226
sd x3, 0(x2) # store 0x7d649407a2204226 in memory
fld f20, 0(x2) # load 0x7d649407a2204226 from memory into f20
fnmadd.d f31, f24, f11, f20, dyn # perform operation
fnmadd.d f31, f24, f11, f20, rdn # perform operation
fnmadd.d f31, f24, f11, f20, rmm # perform operation
fnmadd.d f31, f24, f11, f20, rne # perform operation
fnmadd.d f31, f24, f11, f20, rtz # perform operation
fnmadd.d f31, f24, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x10, 0xa0b190622280fbcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0xbe7bacf4fbfcbf14 # load x3 with value 0xbe7bacf4fbfcbf14
sd x3, 0(x2) # store 0xbe7bacf4fbfcbf14 in memory
fld f28, 0(x2) # load 0xbe7bacf4fbfcbf14 from memory into f28
fnmadd.d f10, f7, f8, f28, dyn # perform operation
fnmadd.d f10, f7, f8, f28, rdn # perform operation
fnmadd.d f10, f7, f8, f28, rmm # perform operation
fnmadd.d f10, f7, f8, f28, rne # perform operation
fnmadd.d f10, f7, f8, f28, rtz # perform operation
fnmadd.d f10, f7, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f7, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x11, 0x08cdd3bff4d4ea4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x4d35095087b9a8b0 # load x3 with value 0x4d35095087b9a8b0
sd x3, 0(x2) # store 0x4d35095087b9a8b0 in memory
fld f10, 0(x2) # load 0x4d35095087b9a8b0 from memory into f10
fnmadd.d f11, f23, f13, f10, dyn # perform operation
fnmadd.d f11, f23, f13, f10, rdn # perform operation
fnmadd.d f11, f23, f13, f10, rmm # perform operation
fnmadd.d f11, f23, f13, f10, rne # perform operation
fnmadd.d f11, f23, f13, f10, rtz # perform operation
fnmadd.d f11, f23, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f23, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x26, 0x013cabe5fea4bc61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0xb0ec99e2d746bb60 # load x3 with value 0xb0ec99e2d746bb60
sd x3, 0(x2) # store 0xb0ec99e2d746bb60 in memory
fld f28, 0(x2) # load 0xb0ec99e2d746bb60 from memory into f28
fnmadd.d f26, f8, f7, f28, dyn # perform operation
fnmadd.d f26, f8, f7, f28, rdn # perform operation
fnmadd.d f26, f8, f7, f28, rmm # perform operation
fnmadd.d f26, f8, f7, f28, rne # perform operation
fnmadd.d f26, f8, f7, f28, rtz # perform operation
fnmadd.d f26, f8, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f8, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x31, 0x494e5678dbc4b313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0xbd19add387456406 # load x3 with value 0xbd19add387456406
sd x3, 0(x2) # store 0xbd19add387456406 in memory
fld f17, 0(x2) # load 0xbd19add387456406 from memory into f17
fnmadd.d f31, f22, f26, f17, dyn # perform operation
fnmadd.d f31, f22, f26, f17, rdn # perform operation
fnmadd.d f31, f22, f26, f17, rmm # perform operation
fnmadd.d f31, f22, f26, f17, rne # perform operation
fnmadd.d f31, f22, f26, f17, rtz # perform operation
fnmadd.d f31, f22, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f22, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f22, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f22, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f22, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f22, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x1, 0x0ae62c78a96afef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x1f9725b19e454990 # load x3 with value 0x1f9725b19e454990
sd x3, 0(x2) # store 0x1f9725b19e454990 in memory
fld f18, 0(x2) # load 0x1f9725b19e454990 from memory into f18
fnmadd.d f1, f15, f29, f18, dyn # perform operation
fnmadd.d f1, f15, f29, f18, rdn # perform operation
fnmadd.d f1, f15, f29, f18, rmm # perform operation
fnmadd.d f1, f15, f29, f18, rne # perform operation
fnmadd.d f1, f15, f29, f18, rtz # perform operation
fnmadd.d f1, f15, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x4, 0x6c451721f006d220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xbde8c7a221dac606 # load x3 with value 0xbde8c7a221dac606
sd x3, 0(x2) # store 0xbde8c7a221dac606 in memory
fld f26, 0(x2) # load 0xbde8c7a221dac606 from memory into f26
fnmadd.d f4, f20, f25, f26, dyn # perform operation
fnmadd.d f4, f20, f25, f26, rdn # perform operation
fnmadd.d f4, f20, f25, f26, rmm # perform operation
fnmadd.d f4, f20, f25, f26, rne # perform operation
fnmadd.d f4, f20, f25, f26, rtz # perform operation
fnmadd.d f4, f20, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x17, 0x45afe310de1f07e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xdaf337d219f8aae9 # load x3 with value 0xdaf337d219f8aae9
sd x3, 0(x2) # store 0xdaf337d219f8aae9 in memory
fld f24, 0(x2) # load 0xdaf337d219f8aae9 from memory into f24
fnmadd.d f17, f2, f23, f24, dyn # perform operation
fnmadd.d f17, f2, f23, f24, rdn # perform operation
fnmadd.d f17, f2, f23, f24, rmm # perform operation
fnmadd.d f17, f2, f23, f24, rne # perform operation
fnmadd.d f17, f2, f23, f24, rtz # perform operation
fnmadd.d f17, f2, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f2, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x26, 0xf1a8df6f330ebeeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x8cd0be053b26f304 # load x3 with value 0x8cd0be053b26f304
sd x3, 0(x2) # store 0x8cd0be053b26f304 in memory
fld f23, 0(x2) # load 0x8cd0be053b26f304 from memory into f23
fnmadd.d f26, f4, f31, f23, dyn # perform operation
fnmadd.d f26, f4, f31, f23, rdn # perform operation
fnmadd.d f26, f4, f31, f23, rmm # perform operation
fnmadd.d f26, f4, f31, f23, rne # perform operation
fnmadd.d f26, f4, f31, f23, rtz # perform operation
fnmadd.d f26, f4, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f4, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f4, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f4, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f4, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f4, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x1, 0xc45902020c41c010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xe6fd4714b4e2bf5c # load x3 with value 0xe6fd4714b4e2bf5c
sd x3, 0(x2) # store 0xe6fd4714b4e2bf5c in memory
fld f9, 0(x2) # load 0xe6fd4714b4e2bf5c from memory into f9
fnmadd.d f1, f17, f27, f9, dyn # perform operation
fnmadd.d f1, f17, f27, f9, rdn # perform operation
fnmadd.d f1, f17, f27, f9, rmm # perform operation
fnmadd.d f1, f17, f27, f9, rne # perform operation
fnmadd.d f1, f17, f27, f9, rtz # perform operation
fnmadd.d f1, f17, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f17, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f17, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x8, 0xdce4342a247e801d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0xdc9cf4654c2189d3 # load x3 with value 0xdc9cf4654c2189d3
sd x3, 0(x2) # store 0xdc9cf4654c2189d3 in memory
fld f29, 0(x2) # load 0xdc9cf4654c2189d3 from memory into f29
fnmadd.d f8, f27, f28, f29, dyn # perform operation
fnmadd.d f8, f27, f28, f29, rdn # perform operation
fnmadd.d f8, f27, f28, f29, rmm # perform operation
fnmadd.d f8, f27, f28, f29, rne # perform operation
fnmadd.d f8, f27, f28, f29, rtz # perform operation
fnmadd.d f8, f27, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x4, 0x3fa4abe0a6119e09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xb18d06b900638856 # load x3 with value 0xb18d06b900638856
sd x3, 0(x2) # store 0xb18d06b900638856 in memory
fld f26, 0(x2) # load 0xb18d06b900638856 from memory into f26
fnmadd.d f4, f10, f6, f26, dyn # perform operation
fnmadd.d f4, f10, f6, f26, rdn # perform operation
fnmadd.d f4, f10, f6, f26, rmm # perform operation
fnmadd.d f4, f10, f6, f26, rne # perform operation
fnmadd.d f4, f10, f6, f26, rtz # perform operation
fnmadd.d f4, f10, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f10, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x24, 0xc99d1c552b515328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x7e7d1483311bd381 # load x3 with value 0x7e7d1483311bd381
sd x3, 0(x2) # store 0x7e7d1483311bd381 in memory
fld f31, 0(x2) # load 0x7e7d1483311bd381 from memory into f31
fnmadd.d f24, f22, f12, f31, dyn # perform operation
fnmadd.d f24, f22, f12, f31, rdn # perform operation
fnmadd.d f24, f22, f12, f31, rmm # perform operation
fnmadd.d f24, f22, f12, f31, rne # perform operation
fnmadd.d f24, f22, f12, f31, rtz # perform operation
fnmadd.d f24, f22, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f22, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f22, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x26, 0x039c0c3b140104d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xfc13838640e89a32 # load x3 with value 0xfc13838640e89a32
sd x3, 0(x2) # store 0xfc13838640e89a32 in memory
fld f21, 0(x2) # load 0xfc13838640e89a32 from memory into f21
fnmadd.d f26, f6, f4, f21, dyn # perform operation
fnmadd.d f26, f6, f4, f21, rdn # perform operation
fnmadd.d f26, f6, f4, f21, rmm # perform operation
fnmadd.d f26, f6, f4, f21, rne # perform operation
fnmadd.d f26, f6, f4, f21, rtz # perform operation
fnmadd.d f26, f6, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f6, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f6, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f6, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f6, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f6, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x12, 0x0e993ca3f3bf5df8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x84e64c1de14a11e0 # load x3 with value 0x84e64c1de14a11e0
sd x3, 0(x2) # store 0x84e64c1de14a11e0 in memory
fld f9, 0(x2) # load 0x84e64c1de14a11e0 from memory into f9
fnmadd.d f12, f6, f23, f9, dyn # perform operation
fnmadd.d f12, f6, f23, f9, rdn # perform operation
fnmadd.d f12, f6, f23, f9, rmm # perform operation
fnmadd.d f12, f6, f23, f9, rne # perform operation
fnmadd.d f12, f6, f23, f9, rtz # perform operation
fnmadd.d f12, f6, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f6, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x29, 0xf1ed7eabd7526340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x58b14345439b900a # load x3 with value 0x58b14345439b900a
sd x3, 0(x2) # store 0x58b14345439b900a in memory
fld f16, 0(x2) # load 0x58b14345439b900a from memory into f16
fnmadd.d f29, f23, f5, f16, dyn # perform operation
fnmadd.d f29, f23, f5, f16, rdn # perform operation
fnmadd.d f29, f23, f5, f16, rmm # perform operation
fnmadd.d f29, f23, f5, f16, rne # perform operation
fnmadd.d f29, f23, f5, f16, rtz # perform operation
fnmadd.d f29, f23, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f23, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f23, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x16, 0x64e91167f7a7c73e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x50c943dbb97dcf5b # load x3 with value 0x50c943dbb97dcf5b
sd x3, 0(x2) # store 0x50c943dbb97dcf5b in memory
fld f14, 0(x2) # load 0x50c943dbb97dcf5b from memory into f14
fnmadd.d f16, f3, f30, f14, dyn # perform operation
fnmadd.d f16, f3, f30, f14, rdn # perform operation
fnmadd.d f16, f3, f30, f14, rmm # perform operation
fnmadd.d f16, f3, f30, f14, rne # perform operation
fnmadd.d f16, f3, f30, f14, rtz # perform operation
fnmadd.d f16, f3, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f3, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f3, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x12, 0x0388914ae87f26c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x94d678222a14ff10 # load x3 with value 0x94d678222a14ff10
sd x3, 0(x2) # store 0x94d678222a14ff10 in memory
fld f25, 0(x2) # load 0x94d678222a14ff10 from memory into f25
fnmadd.d f12, f30, f14, f25, dyn # perform operation
fnmadd.d f12, f30, f14, f25, rdn # perform operation
fnmadd.d f12, f30, f14, f25, rmm # perform operation
fnmadd.d f12, f30, f14, f25, rne # perform operation
fnmadd.d f12, f30, f14, f25, rtz # perform operation
fnmadd.d f12, f30, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x24, 0x1d74e9cd5a3854e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0xa239e151434994d8 # load x3 with value 0xa239e151434994d8
sd x3, 0(x2) # store 0xa239e151434994d8 in memory
fld f29, 0(x2) # load 0xa239e151434994d8 from memory into f29
fnmadd.d f24, f5, f18, f29, dyn # perform operation
fnmadd.d f24, f5, f18, f29, rdn # perform operation
fnmadd.d f24, f5, f18, f29, rmm # perform operation
fnmadd.d f24, f5, f18, f29, rne # perform operation
fnmadd.d f24, f5, f18, f29, rtz # perform operation
fnmadd.d f24, f5, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x28, 0xedc8dcc6a60fc228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xc9bff96250f89a29 # load x3 with value 0xc9bff96250f89a29
sd x3, 0(x2) # store 0xc9bff96250f89a29 in memory
fld f27, 0(x2) # load 0xc9bff96250f89a29 from memory into f27
fnmadd.d f28, f7, f6, f27, dyn # perform operation
fnmadd.d f28, f7, f6, f27, rdn # perform operation
fnmadd.d f28, f7, f6, f27, rmm # perform operation
fnmadd.d f28, f7, f6, f27, rne # perform operation
fnmadd.d f28, f7, f6, f27, rtz # perform operation
fnmadd.d f28, f7, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x23, 0xd341651145731057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x2125bd8b47163a4f # load x3 with value 0x2125bd8b47163a4f
sd x3, 0(x2) # store 0x2125bd8b47163a4f in memory
fld f5, 0(x2) # load 0x2125bd8b47163a4f from memory into f5
fnmadd.d f23, f14, f9, f5, dyn # perform operation
fnmadd.d f23, f14, f9, f5, rdn # perform operation
fnmadd.d f23, f14, f9, f5, rmm # perform operation
fnmadd.d f23, f14, f9, f5, rne # perform operation
fnmadd.d f23, f14, f9, f5, rtz # perform operation
fnmadd.d f23, f14, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x8, 0xa082e5483dfcb4e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x438f4b48b3dd4191 # load x3 with value 0x438f4b48b3dd4191
sd x3, 0(x2) # store 0x438f4b48b3dd4191 in memory
fld f4, 0(x2) # load 0x438f4b48b3dd4191 from memory into f4
fnmadd.d f8, f12, f29, f4, dyn # perform operation
fnmadd.d f8, f12, f29, f4, rdn # perform operation
fnmadd.d f8, f12, f29, f4, rmm # perform operation
fnmadd.d f8, f12, f29, f4, rne # perform operation
fnmadd.d f8, f12, f29, f4, rtz # perform operation
fnmadd.d f8, f12, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x14, 0x4e618a9bb2526761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x2c8d4bfb9eb156b4 # load x3 with value 0x2c8d4bfb9eb156b4
sd x3, 0(x2) # store 0x2c8d4bfb9eb156b4 in memory
fld f24, 0(x2) # load 0x2c8d4bfb9eb156b4 from memory into f24
fnmadd.d f14, f2, f26, f24, dyn # perform operation
fnmadd.d f14, f2, f26, f24, rdn # perform operation
fnmadd.d f14, f2, f26, f24, rmm # perform operation
fnmadd.d f14, f2, f26, f24, rne # perform operation
fnmadd.d f14, f2, f26, f24, rtz # perform operation
fnmadd.d f14, f2, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f2, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f2, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f2, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f2, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f2, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x26, 0x48574aba4a5a654d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x58450f3520498450 # load x3 with value 0x58450f3520498450
sd x3, 0(x2) # store 0x58450f3520498450 in memory
fld f11, 0(x2) # load 0x58450f3520498450 from memory into f11
fnmadd.d f26, f6, f27, f11, dyn # perform operation
fnmadd.d f26, f6, f27, f11, rdn # perform operation
fnmadd.d f26, f6, f27, f11, rmm # perform operation
fnmadd.d f26, f6, f27, f11, rne # perform operation
fnmadd.d f26, f6, f27, f11, rtz # perform operation
fnmadd.d f26, f6, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f6, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f6, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f6, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f6, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f6, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x13, 0x3651a40e986604f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xa83f39c577c2e926 # load x3 with value 0xa83f39c577c2e926
sd x3, 0(x2) # store 0xa83f39c577c2e926 in memory
fld f19, 0(x2) # load 0xa83f39c577c2e926 from memory into f19
fnmadd.d f13, f17, f3, f19, dyn # perform operation
fnmadd.d f13, f17, f3, f19, rdn # perform operation
fnmadd.d f13, f17, f3, f19, rmm # perform operation
fnmadd.d f13, f17, f3, f19, rne # perform operation
fnmadd.d f13, f17, f3, f19, rtz # perform operation
fnmadd.d f13, f17, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f17, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x13, 0xd9c95e712d54a47c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0xb996c189d993ba57 # load x3 with value 0xb996c189d993ba57
sd x3, 0(x2) # store 0xb996c189d993ba57 in memory
fld f29, 0(x2) # load 0xb996c189d993ba57 from memory into f29
fnmadd.d f13, f12, f10, f29, dyn # perform operation
fnmadd.d f13, f12, f10, f29, rdn # perform operation
fnmadd.d f13, f12, f10, f29, rmm # perform operation
fnmadd.d f13, f12, f10, f29, rne # perform operation
fnmadd.d f13, f12, f10, f29, rtz # perform operation
fnmadd.d f13, f12, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f12, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x15, 0x6192f8b27bbc3050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xe535f1aff898e20a # load x3 with value 0xe535f1aff898e20a
sd x3, 0(x2) # store 0xe535f1aff898e20a in memory
fld f3, 0(x2) # load 0xe535f1aff898e20a from memory into f3
fnmadd.d f15, f16, f26, f3, dyn # perform operation
fnmadd.d f15, f16, f26, f3, rdn # perform operation
fnmadd.d f15, f16, f26, f3, rmm # perform operation
fnmadd.d f15, f16, f26, f3, rne # perform operation
fnmadd.d f15, f16, f26, f3, rtz # perform operation
fnmadd.d f15, f16, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f16, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x9, 0x6e5a9c4ab44242e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0x66150684527f7b13 # load x3 with value 0x66150684527f7b13
sd x3, 0(x2) # store 0x66150684527f7b13 in memory
fld f31, 0(x2) # load 0x66150684527f7b13 from memory into f31
fnmadd.d f9, f29, f3, f31, dyn # perform operation
fnmadd.d f9, f29, f3, f31, rdn # perform operation
fnmadd.d f9, f29, f3, f31, rmm # perform operation
fnmadd.d f9, f29, f3, f31, rne # perform operation
fnmadd.d f9, f29, f3, f31, rtz # perform operation
fnmadd.d f9, f29, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f29, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f29, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f29, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f29, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f29, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0xf31bf9197ffba72f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0xc5516ccd27bab015 # load x3 with value 0xc5516ccd27bab015
sd x3, 0(x2) # store 0xc5516ccd27bab015 in memory
fld f20, 0(x2) # load 0xc5516ccd27bab015 from memory into f20
fnmadd.d f1, f28, f19, f20, dyn # perform operation
fnmadd.d f1, f28, f19, f20, rdn # perform operation
fnmadd.d f1, f28, f19, f20, rmm # perform operation
fnmadd.d f1, f28, f19, f20, rne # perform operation
fnmadd.d f1, f28, f19, f20, rtz # perform operation
fnmadd.d f1, f28, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f28, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f28, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x11, 0x36eef46a28ce5f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x4e6a2971e3a5ed22 # load x3 with value 0x4e6a2971e3a5ed22
sd x3, 0(x2) # store 0x4e6a2971e3a5ed22 in memory
fld f31, 0(x2) # load 0x4e6a2971e3a5ed22 from memory into f31
fnmadd.d f11, f26, f16, f31, dyn # perform operation
fnmadd.d f11, f26, f16, f31, rdn # perform operation
fnmadd.d f11, f26, f16, f31, rmm # perform operation
fnmadd.d f11, f26, f16, f31, rne # perform operation
fnmadd.d f11, f26, f16, f31, rtz # perform operation
fnmadd.d f11, f26, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f26, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f26, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x4, 0xee64963a655f94a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x14ec8d8708310767 # load x3 with value 0x14ec8d8708310767
sd x3, 0(x2) # store 0x14ec8d8708310767 in memory
fld f15, 0(x2) # load 0x14ec8d8708310767 from memory into f15
fnmadd.d f4, f22, f18, f15, dyn # perform operation
fnmadd.d f4, f22, f18, f15, rdn # perform operation
fnmadd.d f4, f22, f18, f15, rmm # perform operation
fnmadd.d f4, f22, f18, f15, rne # perform operation
fnmadd.d f4, f22, f18, f15, rtz # perform operation
fnmadd.d f4, f22, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f22, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x20, 0x10ff6c972e1887da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x36a45694e2592eb4 # load x3 with value 0x36a45694e2592eb4
sd x3, 0(x2) # store 0x36a45694e2592eb4 in memory
fld f7, 0(x2) # load 0x36a45694e2592eb4 from memory into f7
fnmadd.d f20, f12, f5, f7, dyn # perform operation
fnmadd.d f20, f12, f5, f7, rdn # perform operation
fnmadd.d f20, f12, f5, f7, rmm # perform operation
fnmadd.d f20, f12, f5, f7, rne # perform operation
fnmadd.d f20, f12, f5, f7, rtz # perform operation
fnmadd.d f20, f12, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f12, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f12, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f12, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f12, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f12, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x7, 0x95a8b21bf1e0aa13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0xfce464e2c779f8c1 # load x3 with value 0xfce464e2c779f8c1
sd x3, 0(x2) # store 0xfce464e2c779f8c1 in memory
fld f2, 0(x2) # load 0xfce464e2c779f8c1 from memory into f2
fnmadd.d f7, f8, f27, f2, dyn # perform operation
fnmadd.d f7, f8, f27, f2, rdn # perform operation
fnmadd.d f7, f8, f27, f2, rmm # perform operation
fnmadd.d f7, f8, f27, f2, rne # perform operation
fnmadd.d f7, f8, f27, f2, rtz # perform operation
fnmadd.d f7, f8, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f8, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x4, 0x68e7397960063f31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x7f08fe621d0c407a # load x3 with value 0x7f08fe621d0c407a
sd x3, 0(x2) # store 0x7f08fe621d0c407a in memory
fld f27, 0(x2) # load 0x7f08fe621d0c407a from memory into f27
fnmadd.d f4, f1, f9, f27, dyn # perform operation
fnmadd.d f4, f1, f9, f27, rdn # perform operation
fnmadd.d f4, f1, f9, f27, rmm # perform operation
fnmadd.d f4, f1, f9, f27, rne # perform operation
fnmadd.d f4, f1, f9, f27, rtz # perform operation
fnmadd.d f4, f1, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f1, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f1, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f1, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f1, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f1, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x3, 0xc868d282f876b1ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x7345902e5eb4a0d1 # load x3 with value 0x7345902e5eb4a0d1
sd x3, 0(x2) # store 0x7345902e5eb4a0d1 in memory
fld f14, 0(x2) # load 0x7345902e5eb4a0d1 from memory into f14
fnmadd.d f3, f22, f5, f14, dyn # perform operation
fnmadd.d f3, f22, f5, f14, rdn # perform operation
fnmadd.d f3, f22, f5, f14, rmm # perform operation
fnmadd.d f3, f22, f5, f14, rne # perform operation
fnmadd.d f3, f22, f5, f14, rtz # perform operation
fnmadd.d f3, f22, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f22, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x19, 0x451b7226d8b48443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x0bc4f05c7fc29786 # load x3 with value 0x0bc4f05c7fc29786
sd x3, 0(x2) # store 0x0bc4f05c7fc29786 in memory
fld f29, 0(x2) # load 0x0bc4f05c7fc29786 from memory into f29
fnmadd.d f19, f16, f15, f29, dyn # perform operation
fnmadd.d f19, f16, f15, f29, rdn # perform operation
fnmadd.d f19, f16, f15, f29, rmm # perform operation
fnmadd.d f19, f16, f15, f29, rne # perform operation
fnmadd.d f19, f16, f15, f29, rtz # perform operation
fnmadd.d f19, f16, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f16, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f16, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f16, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f16, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f16, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x31, 0xbf92c8d40421c4f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x95ed8a46b6d22b9b # load x3 with value 0x95ed8a46b6d22b9b
sd x3, 0(x2) # store 0x95ed8a46b6d22b9b in memory
fld f6, 0(x2) # load 0x95ed8a46b6d22b9b from memory into f6
fnmadd.d f31, f3, f26, f6, dyn # perform operation
fnmadd.d f31, f3, f26, f6, rdn # perform operation
fnmadd.d f31, f3, f26, f6, rmm # perform operation
fnmadd.d f31, f3, f26, f6, rne # perform operation
fnmadd.d f31, f3, f26, f6, rtz # perform operation
fnmadd.d f31, f3, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f3, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f3, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x27, 0x32ca90cb69f6303b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x2137ebcc1a109e2d # load x3 with value 0x2137ebcc1a109e2d
sd x3, 0(x2) # store 0x2137ebcc1a109e2d in memory
fld f1, 0(x2) # load 0x2137ebcc1a109e2d from memory into f1
fnmadd.d f27, f13, f7, f1, dyn # perform operation
fnmadd.d f27, f13, f7, f1, rdn # perform operation
fnmadd.d f27, f13, f7, f1, rmm # perform operation
fnmadd.d f27, f13, f7, f1, rne # perform operation
fnmadd.d f27, f13, f7, f1, rtz # perform operation
fnmadd.d f27, f13, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f13, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f13, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x22, 0x5bb610bcb440c428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xd8f77c5b2309f52c # load x3 with value 0xd8f77c5b2309f52c
sd x3, 0(x2) # store 0xd8f77c5b2309f52c in memory
fld f10, 0(x2) # load 0xd8f77c5b2309f52c from memory into f10
fnmadd.d f22, f7, f13, f10, dyn # perform operation
fnmadd.d f22, f7, f13, f10, rdn # perform operation
fnmadd.d f22, f7, f13, f10, rmm # perform operation
fnmadd.d f22, f7, f13, f10, rne # perform operation
fnmadd.d f22, f7, f13, f10, rtz # perform operation
fnmadd.d f22, f7, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x14, 0x1c99500e0a4950b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x7f70f38510247743 # load x3 with value 0x7f70f38510247743
sd x3, 0(x2) # store 0x7f70f38510247743 in memory
fld f9, 0(x2) # load 0x7f70f38510247743 from memory into f9
fnmadd.d f14, f5, f6, f9, dyn # perform operation
fnmadd.d f14, f5, f6, f9, rdn # perform operation
fnmadd.d f14, f5, f6, f9, rmm # perform operation
fnmadd.d f14, f5, f6, f9, rne # perform operation
fnmadd.d f14, f5, f6, f9, rtz # perform operation
fnmadd.d f14, f5, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f5, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f5, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f5, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f5, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f5, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x5, 0x83d5e2a9174438f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x3300955cf3b7a38e # load x3 with value 0x3300955cf3b7a38e
sd x3, 0(x2) # store 0x3300955cf3b7a38e in memory
fld f20, 0(x2) # load 0x3300955cf3b7a38e from memory into f20
fnmadd.d f5, f16, f14, f20, dyn # perform operation
fnmadd.d f5, f16, f14, f20, rdn # perform operation
fnmadd.d f5, f16, f14, f20, rmm # perform operation
fnmadd.d f5, f16, f14, f20, rne # perform operation
fnmadd.d f5, f16, f14, f20, rtz # perform operation
fnmadd.d f5, f16, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f16, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x30, 0x739dbe9822c052da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0xfbab8ca629a12998 # load x3 with value 0xfbab8ca629a12998
sd x3, 0(x2) # store 0xfbab8ca629a12998 in memory
fld f13, 0(x2) # load 0xfbab8ca629a12998 from memory into f13
fnmadd.d f30, f17, f7, f13, dyn # perform operation
fnmadd.d f30, f17, f7, f13, rdn # perform operation
fnmadd.d f30, f17, f7, f13, rmm # perform operation
fnmadd.d f30, f17, f7, f13, rne # perform operation
fnmadd.d f30, f17, f7, f13, rtz # perform operation
fnmadd.d f30, f17, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f17, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f17, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f17, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f17, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f17, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x8, 0x47b841a9e79a4f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0xa1b4f6af59241a50 # load x3 with value 0xa1b4f6af59241a50
sd x3, 0(x2) # store 0xa1b4f6af59241a50 in memory
fld f3, 0(x2) # load 0xa1b4f6af59241a50 from memory into f3
fnmadd.d f8, f4, f28, f3, dyn # perform operation
fnmadd.d f8, f4, f28, f3, rdn # perform operation
fnmadd.d f8, f4, f28, f3, rmm # perform operation
fnmadd.d f8, f4, f28, f3, rne # perform operation
fnmadd.d f8, f4, f28, f3, rtz # perform operation
fnmadd.d f8, f4, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f4, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f4, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f4, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f4, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f4, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x11, 0x3476759356036123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x4f92fdc57182f747 # load x3 with value 0x4f92fdc57182f747
sd x3, 0(x2) # store 0x4f92fdc57182f747 in memory
fld f23, 0(x2) # load 0x4f92fdc57182f747 from memory into f23
fnmadd.d f11, f10, f27, f23, dyn # perform operation
fnmadd.d f11, f10, f27, f23, rdn # perform operation
fnmadd.d f11, f10, f27, f23, rmm # perform operation
fnmadd.d f11, f10, f27, f23, rne # perform operation
fnmadd.d f11, f10, f27, f23, rtz # perform operation
fnmadd.d f11, f10, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x20, 0xfae87e9058059aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x798c269b7265530b # load x3 with value 0x798c269b7265530b
sd x3, 0(x2) # store 0x798c269b7265530b in memory
fld f2, 0(x2) # load 0x798c269b7265530b from memory into f2
fnmadd.d f20, f25, f12, f2, dyn # perform operation
fnmadd.d f20, f25, f12, f2, rdn # perform operation
fnmadd.d f20, f25, f12, f2, rmm # perform operation
fnmadd.d f20, f25, f12, f2, rne # perform operation
fnmadd.d f20, f25, f12, f2, rtz # perform operation
fnmadd.d f20, f25, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f25, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x15, 0xdfd22b2c69d9791e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x87ac8a76ab4cc208 # load x3 with value 0x87ac8a76ab4cc208
sd x3, 0(x2) # store 0x87ac8a76ab4cc208 in memory
fld f16, 0(x2) # load 0x87ac8a76ab4cc208 from memory into f16
fnmadd.d f15, f6, f4, f16, dyn # perform operation
fnmadd.d f15, f6, f4, f16, rdn # perform operation
fnmadd.d f15, f6, f4, f16, rmm # perform operation
fnmadd.d f15, f6, f4, f16, rne # perform operation
fnmadd.d f15, f6, f4, f16, rtz # perform operation
fnmadd.d f15, f6, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f6, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f6, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f6, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f6, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f6, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x45bb9ff6e2904247 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x0f79403186ad65d5 # load x3 with value 0x0f79403186ad65d5
sd x3, 0(x2) # store 0x0f79403186ad65d5 in memory
fld f12, 0(x2) # load 0x0f79403186ad65d5 from memory into f12
fnmadd.d f5, f14, f25, f12, dyn # perform operation
fnmadd.d f5, f14, f25, f12, rdn # perform operation
fnmadd.d f5, f14, f25, f12, rmm # perform operation
fnmadd.d f5, f14, f25, f12, rne # perform operation
fnmadd.d f5, f14, f25, f12, rtz # perform operation
fnmadd.d f5, f14, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x23, 0x71a75a0a399f3a05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xf50e5f54be01b164 # load x3 with value 0xf50e5f54be01b164
sd x3, 0(x2) # store 0xf50e5f54be01b164 in memory
fld f31, 0(x2) # load 0xf50e5f54be01b164 from memory into f31
fnmadd.d f23, f13, f15, f31, dyn # perform operation
fnmadd.d f23, f13, f15, f31, rdn # perform operation
fnmadd.d f23, f13, f15, f31, rmm # perform operation
fnmadd.d f23, f13, f15, f31, rne # perform operation
fnmadd.d f23, f13, f15, f31, rtz # perform operation
fnmadd.d f23, f13, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f13, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f13, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f13, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f13, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f13, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x19, 0x20fb29f48ecb900d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x90d5d36fb3adfc13 # load x3 with value 0x90d5d36fb3adfc13
sd x3, 0(x2) # store 0x90d5d36fb3adfc13 in memory
fld f30, 0(x2) # load 0x90d5d36fb3adfc13 from memory into f30
fnmadd.d f19, f8, f12, f30, dyn # perform operation
fnmadd.d f19, f8, f12, f30, rdn # perform operation
fnmadd.d f19, f8, f12, f30, rmm # perform operation
fnmadd.d f19, f8, f12, f30, rne # perform operation
fnmadd.d f19, f8, f12, f30, rtz # perform operation
fnmadd.d f19, f8, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x21, 0x74496da088a2f2b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0x262c06b25b67b5dc # load x3 with value 0x262c06b25b67b5dc
sd x3, 0(x2) # store 0x262c06b25b67b5dc in memory
fld f13, 0(x2) # load 0x262c06b25b67b5dc from memory into f13
fnmadd.d f21, f27, f30, f13, dyn # perform operation
fnmadd.d f21, f27, f30, f13, rdn # perform operation
fnmadd.d f21, f27, f30, f13, rmm # perform operation
fnmadd.d f21, f27, f30, f13, rne # perform operation
fnmadd.d f21, f27, f30, f13, rtz # perform operation
fnmadd.d f21, f27, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f27, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x28, 0x55d9e66a0460058b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x9c53128e60850089 # load x3 with value 0x9c53128e60850089
sd x3, 0(x2) # store 0x9c53128e60850089 in memory
fld f6, 0(x2) # load 0x9c53128e60850089 from memory into f6
fnmadd.d f28, f4, f2, f6, dyn # perform operation
fnmadd.d f28, f4, f2, f6, rdn # perform operation
fnmadd.d f28, f4, f2, f6, rmm # perform operation
fnmadd.d f28, f4, f2, f6, rne # perform operation
fnmadd.d f28, f4, f2, f6, rtz # perform operation
fnmadd.d f28, f4, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f4, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f4, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x5, 0x0b64c7374b48ca70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x56a796e89eedd381 # load x3 with value 0x56a796e89eedd381
sd x3, 0(x2) # store 0x56a796e89eedd381 in memory
fld f12, 0(x2) # load 0x56a796e89eedd381 from memory into f12
fnmadd.d f5, f19, f31, f12, dyn # perform operation
fnmadd.d f5, f19, f31, f12, rdn # perform operation
fnmadd.d f5, f19, f31, f12, rmm # perform operation
fnmadd.d f5, f19, f31, f12, rne # perform operation
fnmadd.d f5, f19, f31, f12, rtz # perform operation
fnmadd.d f5, f19, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f19, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f19, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x5, 0xa8def556a9438b44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
li x3, 0xe9eb19a413bc297e # load x3 with value 0xe9eb19a413bc297e
sd x3, 0(x2) # store 0xe9eb19a413bc297e in memory
fld f10, 0(x2) # load 0xe9eb19a413bc297e from memory into f10
fnmadd.d f5, f22, f2, f10, dyn # perform operation
fnmadd.d f5, f22, f2, f10, rdn # perform operation
fnmadd.d f5, f22, f2, f10, rmm # perform operation
fnmadd.d f5, f22, f2, f10, rne # perform operation
fnmadd.d f5, f22, f2, f10, rtz # perform operation
fnmadd.d f5, f22, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f22, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f22, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f22, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f22, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f22, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x15, 0x2d0ab7bfc98e0b1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xe16f77fcbf7a4171 # load x3 with value 0xe16f77fcbf7a4171
sd x3, 0(x2) # store 0xe16f77fcbf7a4171 in memory
fld f7, 0(x2) # load 0xe16f77fcbf7a4171 from memory into f7
fnmadd.d f15, f23, f20, f7, dyn # perform operation
fnmadd.d f15, f23, f20, f7, rdn # perform operation
fnmadd.d f15, f23, f20, f7, rmm # perform operation
fnmadd.d f15, f23, f20, f7, rne # perform operation
fnmadd.d f15, f23, f20, f7, rtz # perform operation
fnmadd.d f15, f23, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f23, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x23, 0x610e97d69a4f3e24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x39feda482dd346b9 # load x3 with value 0x39feda482dd346b9
sd x3, 0(x2) # store 0x39feda482dd346b9 in memory
fld f6, 0(x2) # load 0x39feda482dd346b9 from memory into f6
fnmadd.d f23, f17, f14, f6, dyn # perform operation
fnmadd.d f23, f17, f14, f6, rdn # perform operation
fnmadd.d f23, f17, f14, f6, rmm # perform operation
fnmadd.d f23, f17, f14, f6, rne # perform operation
fnmadd.d f23, f17, f14, f6, rtz # perform operation
fnmadd.d f23, f17, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f17, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f17, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f17, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f17, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f17, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x2, 0x0ee80fb83f9d6436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x212a9d3c6725f1cb # load x3 with value 0x212a9d3c6725f1cb
sd x3, 0(x2) # store 0x212a9d3c6725f1cb in memory
fld f15, 0(x2) # load 0x212a9d3c6725f1cb from memory into f15
fnmadd.d f2, f13, f28, f15, dyn # perform operation
fnmadd.d f2, f13, f28, f15, rdn # perform operation
fnmadd.d f2, f13, f28, f15, rmm # perform operation
fnmadd.d f2, f13, f28, f15, rne # perform operation
fnmadd.d f2, f13, f28, f15, rtz # perform operation
fnmadd.d f2, f13, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x7, 0x649a14f384d94717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x4f540826c9c3c3c5 # load x3 with value 0x4f540826c9c3c3c5
sd x3, 0(x2) # store 0x4f540826c9c3c3c5 in memory
fld f19, 0(x2) # load 0x4f540826c9c3c3c5 from memory into f19
fnmadd.d f7, f29, f24, f19, dyn # perform operation
fnmadd.d f7, f29, f24, f19, rdn # perform operation
fnmadd.d f7, f29, f24, f19, rmm # perform operation
fnmadd.d f7, f29, f24, f19, rne # perform operation
fnmadd.d f7, f29, f24, f19, rtz # perform operation
fnmadd.d f7, f29, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f29, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f29, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x30, 0xaed5d9ab1d3bd4e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x15c84476a1af413f # load x3 with value 0x15c84476a1af413f
sd x3, 0(x2) # store 0x15c84476a1af413f in memory
fld f16, 0(x2) # load 0x15c84476a1af413f from memory into f16
fnmadd.d f30, f1, f10, f16, dyn # perform operation
fnmadd.d f30, f1, f10, f16, rdn # perform operation
fnmadd.d f30, f1, f10, f16, rmm # perform operation
fnmadd.d f30, f1, f10, f16, rne # perform operation
fnmadd.d f30, f1, f10, f16, rtz # perform operation
fnmadd.d f30, f1, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f1, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f1, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x27, 0x415e4b807794502e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x2fe11bec9099bb59 # load x3 with value 0x2fe11bec9099bb59
sd x3, 0(x2) # store 0x2fe11bec9099bb59 in memory
fld f23, 0(x2) # load 0x2fe11bec9099bb59 from memory into f23
fnmadd.d f27, f30, f10, f23, dyn # perform operation
fnmadd.d f27, f30, f10, f23, rdn # perform operation
fnmadd.d f27, f30, f10, f23, rmm # perform operation
fnmadd.d f27, f30, f10, f23, rne # perform operation
fnmadd.d f27, f30, f10, f23, rtz # perform operation
fnmadd.d f27, f30, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f30, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x31, 0xd4ba1df26758b8d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x6cd5c9591df536f9 # load x3 with value 0x6cd5c9591df536f9
sd x3, 0(x2) # store 0x6cd5c9591df536f9 in memory
fld f11, 0(x2) # load 0x6cd5c9591df536f9 from memory into f11
fnmadd.d f31, f1, f15, f11, dyn # perform operation
fnmadd.d f31, f1, f15, f11, rdn # perform operation
fnmadd.d f31, f1, f15, f11, rmm # perform operation
fnmadd.d f31, f1, f15, f11, rne # perform operation
fnmadd.d f31, f1, f15, f11, rtz # perform operation
fnmadd.d f31, f1, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f1, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x31, 0x80eb88ed3e652415 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x79a169ec39857163 # load x3 with value 0x79a169ec39857163
sd x3, 0(x2) # store 0x79a169ec39857163 in memory
fld f14, 0(x2) # load 0x79a169ec39857163 from memory into f14
fnmadd.d f31, f20, f24, f14, dyn # perform operation
fnmadd.d f31, f20, f24, f14, rdn # perform operation
fnmadd.d f31, f20, f24, f14, rmm # perform operation
fnmadd.d f31, f20, f24, f14, rne # perform operation
fnmadd.d f31, f20, f24, f14, rtz # perform operation
fnmadd.d f31, f20, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f20, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f20, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x21, 0xec8137fbcad21e82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x6986f57df96b2060 # load x3 with value 0x6986f57df96b2060
sd x3, 0(x2) # store 0x6986f57df96b2060 in memory
fld f18, 0(x2) # load 0x6986f57df96b2060 from memory into f18
fnmadd.d f21, f16, f23, f18, dyn # perform operation
fnmadd.d f21, f16, f23, f18, rdn # perform operation
fnmadd.d f21, f16, f23, f18, rmm # perform operation
fnmadd.d f21, f16, f23, f18, rne # perform operation
fnmadd.d f21, f16, f23, f18, rtz # perform operation
fnmadd.d f21, f16, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f16, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x27c5e6db5f2c511b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0xd5630fc84b6c22c6 # load x3 with value 0xd5630fc84b6c22c6
sd x3, 0(x2) # store 0xd5630fc84b6c22c6 in memory
fld f12, 0(x2) # load 0xd5630fc84b6c22c6 from memory into f12
fnmadd.d f9, f23, f6, f12, dyn # perform operation
fnmadd.d f9, f23, f6, f12, rdn # perform operation
fnmadd.d f9, f23, f6, f12, rmm # perform operation
fnmadd.d f9, f23, f6, f12, rne # perform operation
fnmadd.d f9, f23, f6, f12, rtz # perform operation
fnmadd.d f9, f23, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f23, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x4, 0xf22b9c9968c61c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x867d40b9ccfd6e5b # load x3 with value 0x867d40b9ccfd6e5b
sd x3, 0(x2) # store 0x867d40b9ccfd6e5b in memory
fld f2, 0(x2) # load 0x867d40b9ccfd6e5b from memory into f2
fnmadd.d f4, f17, f5, f2, dyn # perform operation
fnmadd.d f4, f17, f5, f2, rdn # perform operation
fnmadd.d f4, f17, f5, f2, rmm # perform operation
fnmadd.d f4, f17, f5, f2, rne # perform operation
fnmadd.d f4, f17, f5, f2, rtz # perform operation
fnmadd.d f4, f17, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f17, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f17, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x15, 0xefb6f3ca22956b9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x6bda300092966b96 # load x3 with value 0x6bda300092966b96
sd x3, 0(x2) # store 0x6bda300092966b96 in memory
fld f26, 0(x2) # load 0x6bda300092966b96 from memory into f26
fnmadd.d f15, f9, f3, f26, dyn # perform operation
fnmadd.d f15, f9, f3, f26, rdn # perform operation
fnmadd.d f15, f9, f3, f26, rmm # perform operation
fnmadd.d f15, f9, f3, f26, rne # perform operation
fnmadd.d f15, f9, f3, f26, rtz # perform operation
fnmadd.d f15, f9, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f9, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x21, 0xaccf12b09a3a3e7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0xdc2939569225e90d # load x3 with value 0xdc2939569225e90d
sd x3, 0(x2) # store 0xdc2939569225e90d in memory
fld f29, 0(x2) # load 0xdc2939569225e90d from memory into f29
fnmadd.d f21, f30, f28, f29, dyn # perform operation
fnmadd.d f21, f30, f28, f29, rdn # perform operation
fnmadd.d f21, f30, f28, f29, rmm # perform operation
fnmadd.d f21, f30, f28, f29, rne # perform operation
fnmadd.d f21, f30, f28, f29, rtz # perform operation
fnmadd.d f21, f30, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f30, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x7, 0xbe6c9460690beed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x4ac4ebecbcf08dec # load x3 with value 0x4ac4ebecbcf08dec
sd x3, 0(x2) # store 0x4ac4ebecbcf08dec in memory
fld f1, 0(x2) # load 0x4ac4ebecbcf08dec from memory into f1
fnmadd.d f7, f29, f24, f1, dyn # perform operation
fnmadd.d f7, f29, f24, f1, rdn # perform operation
fnmadd.d f7, f29, f24, f1, rmm # perform operation
fnmadd.d f7, f29, f24, f1, rne # perform operation
fnmadd.d f7, f29, f24, f1, rtz # perform operation
fnmadd.d f7, f29, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f29, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f29, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f29, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f29, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f29, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x13, 0xc13e52759724f4b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0xe81805bcf2c6b3dd # load x3 with value 0xe81805bcf2c6b3dd
sd x3, 0(x2) # store 0xe81805bcf2c6b3dd in memory
fld f15, 0(x2) # load 0xe81805bcf2c6b3dd from memory into f15
fnmadd.d f13, f5, f20, f15, dyn # perform operation
fnmadd.d f13, f5, f20, f15, rdn # perform operation
fnmadd.d f13, f5, f20, f15, rmm # perform operation
fnmadd.d f13, f5, f20, f15, rne # perform operation
fnmadd.d f13, f5, f20, f15, rtz # perform operation
fnmadd.d f13, f5, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f5, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f5, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x19, 0xca6031efa54588c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xa75c8f7b07e315d0 # load x3 with value 0xa75c8f7b07e315d0
sd x3, 0(x2) # store 0xa75c8f7b07e315d0 in memory
fld f14, 0(x2) # load 0xa75c8f7b07e315d0 from memory into f14
fnmadd.d f19, f15, f11, f14, dyn # perform operation
fnmadd.d f19, f15, f11, f14, rdn # perform operation
fnmadd.d f19, f15, f11, f14, rmm # perform operation
fnmadd.d f19, f15, f11, f14, rne # perform operation
fnmadd.d f19, f15, f11, f14, rtz # perform operation
fnmadd.d f19, f15, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f15, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f15, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x6, 0xed65311285afbe87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x684774edcf9f2875 # load x3 with value 0x684774edcf9f2875
sd x3, 0(x2) # store 0x684774edcf9f2875 in memory
fld f20, 0(x2) # load 0x684774edcf9f2875 from memory into f20
fnmadd.d f6, f2, f3, f20, dyn # perform operation
fnmadd.d f6, f2, f3, f20, rdn # perform operation
fnmadd.d f6, f2, f3, f20, rmm # perform operation
fnmadd.d f6, f2, f3, f20, rne # perform operation
fnmadd.d f6, f2, f3, f20, rtz # perform operation
fnmadd.d f6, f2, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f2, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f2, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x8, 0xbfbd967aeb29eef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x67f7aa190e9a15b0 # load x3 with value 0x67f7aa190e9a15b0
sd x3, 0(x2) # store 0x67f7aa190e9a15b0 in memory
fld f2, 0(x2) # load 0x67f7aa190e9a15b0 from memory into f2
fnmadd.d f8, f23, f13, f2, dyn # perform operation
fnmadd.d f8, f23, f13, f2, rdn # perform operation
fnmadd.d f8, f23, f13, f2, rmm # perform operation
fnmadd.d f8, f23, f13, f2, rne # perform operation
fnmadd.d f8, f23, f13, f2, rtz # perform operation
fnmadd.d f8, f23, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f23, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f23, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f23, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f23, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f23, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x24, 0x57cec4bfa913cd46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0xd969465dbd74ff93 # load x3 with value 0xd969465dbd74ff93
sd x3, 0(x2) # store 0xd969465dbd74ff93 in memory
fld f2, 0(x2) # load 0xd969465dbd74ff93 from memory into f2
fnmadd.d f24, f31, f29, f2, dyn # perform operation
fnmadd.d f24, f31, f29, f2, rdn # perform operation
fnmadd.d f24, f31, f29, f2, rmm # perform operation
fnmadd.d f24, f31, f29, f2, rne # perform operation
fnmadd.d f24, f31, f29, f2, rtz # perform operation
fnmadd.d f24, f31, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f31, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f31, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f31, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f31, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f31, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x30, 0xcbb5f3b368e3edac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0xb2ee2a5b08dd7824 # load x3 with value 0xb2ee2a5b08dd7824
sd x3, 0(x2) # store 0xb2ee2a5b08dd7824 in memory
fld f13, 0(x2) # load 0xb2ee2a5b08dd7824 from memory into f13
fnmadd.d f30, f31, f14, f13, dyn # perform operation
fnmadd.d f30, f31, f14, f13, rdn # perform operation
fnmadd.d f30, f31, f14, f13, rmm # perform operation
fnmadd.d f30, f31, f14, f13, rne # perform operation
fnmadd.d f30, f31, f14, f13, rtz # perform operation
fnmadd.d f30, f31, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f31, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f31, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x3, 0xa4a60db4f760ab48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x43fbbd9c6ba6862b # load x3 with value 0x43fbbd9c6ba6862b
sd x3, 0(x2) # store 0x43fbbd9c6ba6862b in memory
fld f11, 0(x2) # load 0x43fbbd9c6ba6862b from memory into f11
fnmadd.d f3, f8, f18, f11, dyn # perform operation
fnmadd.d f3, f8, f18, f11, rdn # perform operation
fnmadd.d f3, f8, f18, f11, rmm # perform operation
fnmadd.d f3, f8, f18, f11, rne # perform operation
fnmadd.d f3, f8, f18, f11, rtz # perform operation
fnmadd.d f3, f8, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f8, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f8, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x31, 0x15cb8067386d40d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xc9d254a7aec93d88 # load x3 with value 0xc9d254a7aec93d88
sd x3, 0(x2) # store 0xc9d254a7aec93d88 in memory
fld f10, 0(x2) # load 0xc9d254a7aec93d88 from memory into f10
fnmadd.d f31, f2, f28, f10, dyn # perform operation
fnmadd.d f31, f2, f28, f10, rdn # perform operation
fnmadd.d f31, f2, f28, f10, rmm # perform operation
fnmadd.d f31, f2, f28, f10, rne # perform operation
fnmadd.d f31, f2, f28, f10, rtz # perform operation
fnmadd.d f31, f2, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f2, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x19, 0xe2d50dcc14aae5e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x7a8cf7d7052db9e1 # load x3 with value 0x7a8cf7d7052db9e1
sd x3, 0(x2) # store 0x7a8cf7d7052db9e1 in memory
fld f5, 0(x2) # load 0x7a8cf7d7052db9e1 from memory into f5
fnmadd.d f19, f11, f3, f5, dyn # perform operation
fnmadd.d f19, f11, f3, f5, rdn # perform operation
fnmadd.d f19, f11, f3, f5, rmm # perform operation
fnmadd.d f19, f11, f3, f5, rne # perform operation
fnmadd.d f19, f11, f3, f5, rtz # perform operation
fnmadd.d f19, f11, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f11, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x12, 0x5bba3c73c6e2206a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x187729b672998715 # load x3 with value 0x187729b672998715
sd x3, 0(x2) # store 0x187729b672998715 in memory
fld f30, 0(x2) # load 0x187729b672998715 from memory into f30
fnmadd.d f12, f21, f2, f30, dyn # perform operation
fnmadd.d f12, f21, f2, f30, rdn # perform operation
fnmadd.d f12, f21, f2, f30, rmm # perform operation
fnmadd.d f12, f21, f2, f30, rne # perform operation
fnmadd.d f12, f21, f2, f30, rtz # perform operation
fnmadd.d f12, f21, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f21, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x26, 0x228c747f92fa015a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0xb7e669fd1fa7d55d # load x3 with value 0xb7e669fd1fa7d55d
sd x3, 0(x2) # store 0xb7e669fd1fa7d55d in memory
fld f14, 0(x2) # load 0xb7e669fd1fa7d55d from memory into f14
fnmadd.d f26, f24, f17, f14, dyn # perform operation
fnmadd.d f26, f24, f17, f14, rdn # perform operation
fnmadd.d f26, f24, f17, f14, rmm # perform operation
fnmadd.d f26, f24, f17, f14, rne # perform operation
fnmadd.d f26, f24, f17, f14, rtz # perform operation
fnmadd.d f26, f24, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f24, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f24, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f24, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f24, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f24, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x15, 0x3c6c9d202492d21d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x72cf756a248e1ebd # load x3 with value 0x72cf756a248e1ebd
sd x3, 0(x2) # store 0x72cf756a248e1ebd in memory
fld f17, 0(x2) # load 0x72cf756a248e1ebd from memory into f17
fnmadd.d f15, f19, f10, f17, dyn # perform operation
fnmadd.d f15, f19, f10, f17, rdn # perform operation
fnmadd.d f15, f19, f10, f17, rmm # perform operation
fnmadd.d f15, f19, f10, f17, rne # perform operation
fnmadd.d f15, f19, f10, f17, rtz # perform operation
fnmadd.d f15, f19, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f19, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f19, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f19, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f19, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f19, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x16, 0x5aab7b179210da0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x12a3d0ef9b97c4f4 # load x3 with value 0x12a3d0ef9b97c4f4
sd x3, 0(x2) # store 0x12a3d0ef9b97c4f4 in memory
fld f29, 0(x2) # load 0x12a3d0ef9b97c4f4 from memory into f29
fnmadd.d f16, f21, f17, f29, dyn # perform operation
fnmadd.d f16, f21, f17, f29, rdn # perform operation
fnmadd.d f16, f21, f17, f29, rmm # perform operation
fnmadd.d f16, f21, f17, f29, rne # perform operation
fnmadd.d f16, f21, f17, f29, rtz # perform operation
fnmadd.d f16, f21, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f21, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f21, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x28, 0x225645094b993d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xd6f472d69242b11f # load x3 with value 0xd6f472d69242b11f
sd x3, 0(x2) # store 0xd6f472d69242b11f in memory
fld f3, 0(x2) # load 0xd6f472d69242b11f from memory into f3
fnmadd.d f28, f6, f13, f3, dyn # perform operation
fnmadd.d f28, f6, f13, f3, rdn # perform operation
fnmadd.d f28, f6, f13, f3, rmm # perform operation
fnmadd.d f28, f6, f13, f3, rne # perform operation
fnmadd.d f28, f6, f13, f3, rtz # perform operation
fnmadd.d f28, f6, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f6, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x29, 0x589a4b18164c26b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0xf77fe28383d215ce # load x3 with value 0xf77fe28383d215ce
sd x3, 0(x2) # store 0xf77fe28383d215ce in memory
fld f20, 0(x2) # load 0xf77fe28383d215ce from memory into f20
fnmadd.d f29, f14, f2, f20, dyn # perform operation
fnmadd.d f29, f14, f2, f20, rdn # perform operation
fnmadd.d f29, f14, f2, f20, rmm # perform operation
fnmadd.d f29, f14, f2, f20, rne # perform operation
fnmadd.d f29, f14, f2, f20, rtz # perform operation
fnmadd.d f29, f14, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f14, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f14, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x22, 0x2137382e465fe7d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x4aab3142ce2142ef # load x3 with value 0x4aab3142ce2142ef
sd x3, 0(x2) # store 0x4aab3142ce2142ef in memory
fld f3, 0(x2) # load 0x4aab3142ce2142ef from memory into f3
fnmadd.d f22, f30, f17, f3, dyn # perform operation
fnmadd.d f22, f30, f17, f3, rdn # perform operation
fnmadd.d f22, f30, f17, f3, rmm # perform operation
fnmadd.d f22, f30, f17, f3, rne # perform operation
fnmadd.d f22, f30, f17, f3, rtz # perform operation
fnmadd.d f22, f30, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f30, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x18, 0xe805f65e9b7119cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0xf1b531966795939b # load x3 with value 0xf1b531966795939b
sd x3, 0(x2) # store 0xf1b531966795939b in memory
fld f25, 0(x2) # load 0xf1b531966795939b from memory into f25
fnmadd.d f18, f26, f30, f25, dyn # perform operation
fnmadd.d f18, f26, f30, f25, rdn # perform operation
fnmadd.d f18, f26, f30, f25, rmm # perform operation
fnmadd.d f18, f26, f30, f25, rne # perform operation
fnmadd.d f18, f26, f30, f25, rtz # perform operation
fnmadd.d f18, f26, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f26, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f26, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f26, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f26, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f26, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x13, 0x0f23fc2e0f3ed87c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x51f274950f54724c # load x3 with value 0x51f274950f54724c
sd x3, 0(x2) # store 0x51f274950f54724c in memory
fld f4, 0(x2) # load 0x51f274950f54724c from memory into f4
fnmadd.d f13, f22, f1, f4, dyn # perform operation
fnmadd.d f13, f22, f1, f4, rdn # perform operation
fnmadd.d f13, f22, f1, f4, rmm # perform operation
fnmadd.d f13, f22, f1, f4, rne # perform operation
fnmadd.d f13, f22, f1, f4, rtz # perform operation
fnmadd.d f13, f22, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f22, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f22, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f22, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f22, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f22, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x8, 0xac1e3d379a08b4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x28098d220e9156f8 # load x3 with value 0x28098d220e9156f8
sd x3, 0(x2) # store 0x28098d220e9156f8 in memory
fld f25, 0(x2) # load 0x28098d220e9156f8 from memory into f25
fnmadd.d f8, f5, f26, f25, dyn # perform operation
fnmadd.d f8, f5, f26, f25, rdn # perform operation
fnmadd.d f8, f5, f26, f25, rmm # perform operation
fnmadd.d f8, f5, f26, f25, rne # perform operation
fnmadd.d f8, f5, f26, f25, rtz # perform operation
fnmadd.d f8, f5, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x1, 0xf558c60dfefadc36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x55e77e3c162f2b69 # load x3 with value 0x55e77e3c162f2b69
sd x3, 0(x2) # store 0x55e77e3c162f2b69 in memory
fld f9, 0(x2) # load 0x55e77e3c162f2b69 from memory into f9
fnmadd.d f1, f21, f14, f9, dyn # perform operation
fnmadd.d f1, f21, f14, f9, rdn # perform operation
fnmadd.d f1, f21, f14, f9, rmm # perform operation
fnmadd.d f1, f21, f14, f9, rne # perform operation
fnmadd.d f1, f21, f14, f9, rtz # perform operation
fnmadd.d f1, f21, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f21, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x31, 0xe784441d70cf986a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x897a24b9a2b2f39a # load x3 with value 0x897a24b9a2b2f39a
sd x3, 0(x2) # store 0x897a24b9a2b2f39a in memory
fld f13, 0(x2) # load 0x897a24b9a2b2f39a from memory into f13
fnmadd.d f31, f24, f1, f13, dyn # perform operation
fnmadd.d f31, f24, f1, f13, rdn # perform operation
fnmadd.d f31, f24, f1, f13, rmm # perform operation
fnmadd.d f31, f24, f1, f13, rne # perform operation
fnmadd.d f31, f24, f1, f13, rtz # perform operation
fnmadd.d f31, f24, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x1, 0x0becda2cc560423a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x109ad0f8c40ddc44 # load x3 with value 0x109ad0f8c40ddc44
sd x3, 0(x2) # store 0x109ad0f8c40ddc44 in memory
fld f2, 0(x2) # load 0x109ad0f8c40ddc44 from memory into f2
fnmadd.d f1, f25, f12, f2, dyn # perform operation
fnmadd.d f1, f25, f12, f2, rdn # perform operation
fnmadd.d f1, f25, f12, f2, rmm # perform operation
fnmadd.d f1, f25, f12, f2, rne # perform operation
fnmadd.d f1, f25, f12, f2, rtz # perform operation
fnmadd.d f1, f25, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f25, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x12, 0x9ac98ec9710f2165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x69388d23397101bf # load x3 with value 0x69388d23397101bf
sd x3, 0(x2) # store 0x69388d23397101bf in memory
fld f23, 0(x2) # load 0x69388d23397101bf from memory into f23
fnmadd.d f12, f25, f17, f23, dyn # perform operation
fnmadd.d f12, f25, f17, f23, rdn # perform operation
fnmadd.d f12, f25, f17, f23, rmm # perform operation
fnmadd.d f12, f25, f17, f23, rne # perform operation
fnmadd.d f12, f25, f17, f23, rtz # perform operation
fnmadd.d f12, f25, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f25, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x23, 0xe0998814a26b0e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0x91692798a916a5fd # load x3 with value 0x91692798a916a5fd
sd x3, 0(x2) # store 0x91692798a916a5fd in memory
fld f11, 0(x2) # load 0x91692798a916a5fd from memory into f11
fnmadd.d f23, f2, f18, f11, dyn # perform operation
fnmadd.d f23, f2, f18, f11, rdn # perform operation
fnmadd.d f23, f2, f18, f11, rmm # perform operation
fnmadd.d f23, f2, f18, f11, rne # perform operation
fnmadd.d f23, f2, f18, f11, rtz # perform operation
fnmadd.d f23, f2, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f2, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f2, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f2, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f2, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f2, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x8, 0x5ec2dd77f6d5ff64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xfde7e9a37e7cbea5 # load x3 with value 0xfde7e9a37e7cbea5
sd x3, 0(x2) # store 0xfde7e9a37e7cbea5 in memory
fld f4, 0(x2) # load 0xfde7e9a37e7cbea5 from memory into f4
fnmadd.d f8, f14, f27, f4, dyn # perform operation
fnmadd.d f8, f14, f27, f4, rdn # perform operation
fnmadd.d f8, f14, f27, f4, rmm # perform operation
fnmadd.d f8, f14, f27, f4, rne # perform operation
fnmadd.d f8, f14, f27, f4, rtz # perform operation
fnmadd.d f8, f14, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f14, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f14, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x4, 0x20f7d433aee1fa57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x118268b531f0eaed # load x3 with value 0x118268b531f0eaed
sd x3, 0(x2) # store 0x118268b531f0eaed in memory
fld f10, 0(x2) # load 0x118268b531f0eaed from memory into f10
fnmadd.d f4, f16, f2, f10, dyn # perform operation
fnmadd.d f4, f16, f2, f10, rdn # perform operation
fnmadd.d f4, f16, f2, f10, rmm # perform operation
fnmadd.d f4, f16, f2, f10, rne # perform operation
fnmadd.d f4, f16, f2, f10, rtz # perform operation
fnmadd.d f4, f16, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f16, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x12, 0x7c64d87036699183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x4ca85d5141a1f466 # load x3 with value 0x4ca85d5141a1f466
sd x3, 0(x2) # store 0x4ca85d5141a1f466 in memory
fld f26, 0(x2) # load 0x4ca85d5141a1f466 from memory into f26
fnmadd.d f12, f3, f25, f26, dyn # perform operation
fnmadd.d f12, f3, f25, f26, rdn # perform operation
fnmadd.d f12, f3, f25, f26, rmm # perform operation
fnmadd.d f12, f3, f25, f26, rne # perform operation
fnmadd.d f12, f3, f25, f26, rtz # perform operation
fnmadd.d f12, f3, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f3, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x11, 0x1cd1d73d1e236c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xd887cd24354837a4 # load x3 with value 0xd887cd24354837a4
sd x3, 0(x2) # store 0xd887cd24354837a4 in memory
fld f1, 0(x2) # load 0xd887cd24354837a4 from memory into f1
fnmadd.d f11, f2, f20, f1, dyn # perform operation
fnmadd.d f11, f2, f20, f1, rdn # perform operation
fnmadd.d f11, f2, f20, f1, rmm # perform operation
fnmadd.d f11, f2, f20, f1, rne # perform operation
fnmadd.d f11, f2, f20, f1, rtz # perform operation
fnmadd.d f11, f2, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f2, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f2, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f2, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f2, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f2, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x2, 0x3b1b84d167f0c973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x24328e8091317b0e # load x3 with value 0x24328e8091317b0e
sd x3, 0(x2) # store 0x24328e8091317b0e in memory
fld f16, 0(x2) # load 0x24328e8091317b0e from memory into f16
fnmadd.d f2, f22, f11, f16, dyn # perform operation
fnmadd.d f2, f22, f11, f16, rdn # perform operation
fnmadd.d f2, f22, f11, f16, rmm # perform operation
fnmadd.d f2, f22, f11, f16, rne # perform operation
fnmadd.d f2, f22, f11, f16, rtz # perform operation
fnmadd.d f2, f22, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f22, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x22, 0x45e1706b441bbe7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x72bb0a380e8890bc # load x3 with value 0x72bb0a380e8890bc
sd x3, 0(x2) # store 0x72bb0a380e8890bc in memory
fld f1, 0(x2) # load 0x72bb0a380e8890bc from memory into f1
fnmadd.d f22, f6, f17, f1, dyn # perform operation
fnmadd.d f22, f6, f17, f1, rdn # perform operation
fnmadd.d f22, f6, f17, f1, rmm # perform operation
fnmadd.d f22, f6, f17, f1, rne # perform operation
fnmadd.d f22, f6, f17, f1, rtz # perform operation
fnmadd.d f22, f6, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f6, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x6, 0xd90ad5963ea814e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0xfbac912d9937dc72 # load x3 with value 0xfbac912d9937dc72
sd x3, 0(x2) # store 0xfbac912d9937dc72 in memory
fld f10, 0(x2) # load 0xfbac912d9937dc72 from memory into f10
fnmadd.d f6, f24, f31, f10, dyn # perform operation
fnmadd.d f6, f24, f31, f10, rdn # perform operation
fnmadd.d f6, f24, f31, f10, rmm # perform operation
fnmadd.d f6, f24, f31, f10, rne # perform operation
fnmadd.d f6, f24, f31, f10, rtz # perform operation
fnmadd.d f6, f24, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f24, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f24, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x23, 0x05c2e5ba61b786c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0x947a2aeed0ebba64 # load x3 with value 0x947a2aeed0ebba64
sd x3, 0(x2) # store 0x947a2aeed0ebba64 in memory
fld f25, 0(x2) # load 0x947a2aeed0ebba64 from memory into f25
fnmadd.d f23, f21, f27, f25, dyn # perform operation
fnmadd.d f23, f21, f27, f25, rdn # perform operation
fnmadd.d f23, f21, f27, f25, rmm # perform operation
fnmadd.d f23, f21, f27, f25, rne # perform operation
fnmadd.d f23, f21, f27, f25, rtz # perform operation
fnmadd.d f23, f21, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f21, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f21, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x9, 0x186705e1ee566c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x330cf6b0f0ddd8a8 # load x3 with value 0x330cf6b0f0ddd8a8
sd x3, 0(x2) # store 0x330cf6b0f0ddd8a8 in memory
fld f12, 0(x2) # load 0x330cf6b0f0ddd8a8 from memory into f12
fnmadd.d f9, f4, f1, f12, dyn # perform operation
fnmadd.d f9, f4, f1, f12, rdn # perform operation
fnmadd.d f9, f4, f1, f12, rmm # perform operation
fnmadd.d f9, f4, f1, f12, rne # perform operation
fnmadd.d f9, f4, f1, f12, rtz # perform operation
fnmadd.d f9, f4, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f4, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f4, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f4, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f4, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f4, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x20, 0x9e1941c1cfd48e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0xbd6f3fff642b4063 # load x3 with value 0xbd6f3fff642b4063
sd x3, 0(x2) # store 0xbd6f3fff642b4063 in memory
fld f4, 0(x2) # load 0xbd6f3fff642b4063 from memory into f4
fnmadd.d f20, f8, f13, f4, dyn # perform operation
fnmadd.d f20, f8, f13, f4, rdn # perform operation
fnmadd.d f20, f8, f13, f4, rmm # perform operation
fnmadd.d f20, f8, f13, f4, rne # perform operation
fnmadd.d f20, f8, f13, f4, rtz # perform operation
fnmadd.d f20, f8, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f8, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0x906b3b58d94d2c34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0xf2998a29028d8756 # load x3 with value 0xf2998a29028d8756
sd x3, 0(x2) # store 0xf2998a29028d8756 in memory
fld f7, 0(x2) # load 0xf2998a29028d8756 from memory into f7
fnmadd.d f10, f19, f15, f7, dyn # perform operation
fnmadd.d f10, f19, f15, f7, rdn # perform operation
fnmadd.d f10, f19, f15, f7, rmm # perform operation
fnmadd.d f10, f19, f15, f7, rne # perform operation
fnmadd.d f10, f19, f15, f7, rtz # perform operation
fnmadd.d f10, f19, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f19, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x18, 0x6ee4aafa42ebcd15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0xfebc052f35462e5b # load x3 with value 0xfebc052f35462e5b
sd x3, 0(x2) # store 0xfebc052f35462e5b in memory
fld f31, 0(x2) # load 0xfebc052f35462e5b from memory into f31
fnmadd.d f18, f26, f10, f31, dyn # perform operation
fnmadd.d f18, f26, f10, f31, rdn # perform operation
fnmadd.d f18, f26, f10, f31, rmm # perform operation
fnmadd.d f18, f26, f10, f31, rne # perform operation
fnmadd.d f18, f26, f10, f31, rtz # perform operation
fnmadd.d f18, f26, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f26, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x26, 0x1ecec889ba1d6927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x4d36fdb94f7ea9a8 # load x3 with value 0x4d36fdb94f7ea9a8
sd x3, 0(x2) # store 0x4d36fdb94f7ea9a8 in memory
fld f23, 0(x2) # load 0x4d36fdb94f7ea9a8 from memory into f23
fnmadd.d f26, f6, f19, f23, dyn # perform operation
fnmadd.d f26, f6, f19, f23, rdn # perform operation
fnmadd.d f26, f6, f19, f23, rmm # perform operation
fnmadd.d f26, f6, f19, f23, rne # perform operation
fnmadd.d f26, f6, f19, f23, rtz # perform operation
fnmadd.d f26, f6, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f6, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x23, 0xbd909f508081ea7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x95cdd7c1100b098f # load x3 with value 0x95cdd7c1100b098f
sd x3, 0(x2) # store 0x95cdd7c1100b098f in memory
fld f11, 0(x2) # load 0x95cdd7c1100b098f from memory into f11
fnmadd.d f23, f3, f20, f11, dyn # perform operation
fnmadd.d f23, f3, f20, f11, rdn # perform operation
fnmadd.d f23, f3, f20, f11, rmm # perform operation
fnmadd.d f23, f3, f20, f11, rne # perform operation
fnmadd.d f23, f3, f20, f11, rtz # perform operation
fnmadd.d f23, f3, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f3, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x1, 0x1adf10745ff5bf02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xae4f35a1e6fcadda # load x3 with value 0xae4f35a1e6fcadda
sd x3, 0(x2) # store 0xae4f35a1e6fcadda in memory
fld f23, 0(x2) # load 0xae4f35a1e6fcadda from memory into f23
fnmadd.d f1, f9, f6, f23, dyn # perform operation
fnmadd.d f1, f9, f6, f23, rdn # perform operation
fnmadd.d f1, f9, f6, f23, rmm # perform operation
fnmadd.d f1, f9, f6, f23, rne # perform operation
fnmadd.d f1, f9, f6, f23, rtz # perform operation
fnmadd.d f1, f9, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f9, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f9, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f9, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f9, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f9, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x19, 0xe16ce59707a9471e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xf2a2eda0b239841c # load x3 with value 0xf2a2eda0b239841c
sd x3, 0(x2) # store 0xf2a2eda0b239841c in memory
fld f20, 0(x2) # load 0xf2a2eda0b239841c from memory into f20
fnmadd.d f19, f5, f11, f20, dyn # perform operation
fnmadd.d f19, f5, f11, f20, rdn # perform operation
fnmadd.d f19, f5, f11, f20, rmm # perform operation
fnmadd.d f19, f5, f11, f20, rne # perform operation
fnmadd.d f19, f5, f11, f20, rtz # perform operation
fnmadd.d f19, f5, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f5, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f5, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f5, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f5, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f5, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x14, 0x38d27efa43d05a1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x1959a4466052cb53 # load x3 with value 0x1959a4466052cb53
sd x3, 0(x2) # store 0x1959a4466052cb53 in memory
fld f9, 0(x2) # load 0x1959a4466052cb53 from memory into f9
fnmadd.d f14, f12, f27, f9, dyn # perform operation
fnmadd.d f14, f12, f27, f9, rdn # perform operation
fnmadd.d f14, f12, f27, f9, rmm # perform operation
fnmadd.d f14, f12, f27, f9, rne # perform operation
fnmadd.d f14, f12, f27, f9, rtz # perform operation
fnmadd.d f14, f12, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f12, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f12, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x3, 0x806e37fbcb65facf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0xafc2293e86a599c8 # load x3 with value 0xafc2293e86a599c8
sd x3, 0(x2) # store 0xafc2293e86a599c8 in memory
fld f4, 0(x2) # load 0xafc2293e86a599c8 from memory into f4
fnmadd.d f3, f30, f7, f4, dyn # perform operation
fnmadd.d f3, f30, f7, f4, rdn # perform operation
fnmadd.d f3, f30, f7, f4, rmm # perform operation
fnmadd.d f3, f30, f7, f4, rne # perform operation
fnmadd.d f3, f30, f7, f4, rtz # perform operation
fnmadd.d f3, f30, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f30, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f30, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f30, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f30, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f30, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x13, 0xe0ed787f9856e3f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xa00862194cafca80 # load x3 with value 0xa00862194cafca80
sd x3, 0(x2) # store 0xa00862194cafca80 in memory
fld f23, 0(x2) # load 0xa00862194cafca80 from memory into f23
fnmadd.d f13, f12, f21, f23, dyn # perform operation
fnmadd.d f13, f12, f21, f23, rdn # perform operation
fnmadd.d f13, f12, f21, f23, rmm # perform operation
fnmadd.d f13, f12, f21, f23, rne # perform operation
fnmadd.d f13, f12, f21, f23, rtz # perform operation
fnmadd.d f13, f12, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f12, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f12, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f12, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f12, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f12, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x10, 0xd836c633c80e46e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0xa7f4d77e2fc8f5af # load x3 with value 0xa7f4d77e2fc8f5af
sd x3, 0(x2) # store 0xa7f4d77e2fc8f5af in memory
fld f7, 0(x2) # load 0xa7f4d77e2fc8f5af from memory into f7
fnmadd.d f10, f9, f16, f7, dyn # perform operation
fnmadd.d f10, f9, f16, f7, rdn # perform operation
fnmadd.d f10, f9, f16, f7, rmm # perform operation
fnmadd.d f10, f9, f16, f7, rne # perform operation
fnmadd.d f10, f9, f16, f7, rtz # perform operation
fnmadd.d f10, f9, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f9, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f9, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f9, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f9, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f9, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x8, 0x838d684d45b965a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x6242286c2d6bae74 # load x3 with value 0x6242286c2d6bae74
sd x3, 0(x2) # store 0x6242286c2d6bae74 in memory
fld f17, 0(x2) # load 0x6242286c2d6bae74 from memory into f17
fnmadd.d f8, f24, f10, f17, dyn # perform operation
fnmadd.d f8, f24, f10, f17, rdn # perform operation
fnmadd.d f8, f24, f10, f17, rmm # perform operation
fnmadd.d f8, f24, f10, f17, rne # perform operation
fnmadd.d f8, f24, f10, f17, rtz # perform operation
fnmadd.d f8, f24, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f24, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x9, 0x3c972ee595c0dd7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0xb7a934d13244f129 # load x3 with value 0xb7a934d13244f129
sd x3, 0(x2) # store 0xb7a934d13244f129 in memory
fld f5, 0(x2) # load 0xb7a934d13244f129 from memory into f5
fnmadd.d f9, f23, f30, f5, dyn # perform operation
fnmadd.d f9, f23, f30, f5, rdn # perform operation
fnmadd.d f9, f23, f30, f5, rmm # perform operation
fnmadd.d f9, f23, f30, f5, rne # perform operation
fnmadd.d f9, f23, f30, f5, rtz # perform operation
fnmadd.d f9, f23, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f23, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x30, 0x49bbea2cae15e447 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x428fb396be885e14 # load x3 with value 0x428fb396be885e14
sd x3, 0(x2) # store 0x428fb396be885e14 in memory
fld f5, 0(x2) # load 0x428fb396be885e14 from memory into f5
fnmadd.d f30, f3, f8, f5, dyn # perform operation
fnmadd.d f30, f3, f8, f5, rdn # perform operation
fnmadd.d f30, f3, f8, f5, rmm # perform operation
fnmadd.d f30, f3, f8, f5, rne # perform operation
fnmadd.d f30, f3, f8, f5, rtz # perform operation
fnmadd.d f30, f3, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f3, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f3, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f3, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f3, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f3, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x28, 0x0ffbf0da81e7907d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x95c02c16c1bf2a24 # load x3 with value 0x95c02c16c1bf2a24
sd x3, 0(x2) # store 0x95c02c16c1bf2a24 in memory
fld f13, 0(x2) # load 0x95c02c16c1bf2a24 from memory into f13
fnmadd.d f28, f23, f19, f13, dyn # perform operation
fnmadd.d f28, f23, f19, f13, rdn # perform operation
fnmadd.d f28, f23, f19, f13, rmm # perform operation
fnmadd.d f28, f23, f19, f13, rne # perform operation
fnmadd.d f28, f23, f19, f13, rtz # perform operation
fnmadd.d f28, f23, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f23, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x6, 0x933df6d8e9ef4fe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x818e331cfdaf7e49 # load x3 with value 0x818e331cfdaf7e49
sd x3, 0(x2) # store 0x818e331cfdaf7e49 in memory
fld f9, 0(x2) # load 0x818e331cfdaf7e49 from memory into f9
fnmadd.d f6, f16, f2, f9, dyn # perform operation
fnmadd.d f6, f16, f2, f9, rdn # perform operation
fnmadd.d f6, f16, f2, f9, rmm # perform operation
fnmadd.d f6, f16, f2, f9, rne # perform operation
fnmadd.d f6, f16, f2, f9, rtz # perform operation
fnmadd.d f6, f16, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x14, 0xfa2e0d607d6a3c7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x697defabc27ac645 # load x3 with value 0x697defabc27ac645
sd x3, 0(x2) # store 0x697defabc27ac645 in memory
fld f4, 0(x2) # load 0x697defabc27ac645 from memory into f4
fnmadd.d f14, f30, f12, f4, dyn # perform operation
fnmadd.d f14, f30, f12, f4, rdn # perform operation
fnmadd.d f14, f30, f12, f4, rmm # perform operation
fnmadd.d f14, f30, f12, f4, rne # perform operation
fnmadd.d f14, f30, f12, f4, rtz # perform operation
fnmadd.d f14, f30, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f30, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f30, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f30, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f30, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f30, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x6, 0x3feedd8bf861d3a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0xe98d5516c1ba5b6a # load x3 with value 0xe98d5516c1ba5b6a
sd x3, 0(x2) # store 0xe98d5516c1ba5b6a in memory
fld f7, 0(x2) # load 0xe98d5516c1ba5b6a from memory into f7
fnmadd.d f6, f28, f10, f7, dyn # perform operation
fnmadd.d f6, f28, f10, f7, rdn # perform operation
fnmadd.d f6, f28, f10, f7, rmm # perform operation
fnmadd.d f6, f28, f10, f7, rne # perform operation
fnmadd.d f6, f28, f10, f7, rtz # perform operation
fnmadd.d f6, f28, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f28, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f28, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f28, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f28, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f28, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x6, 0xfe58434ca17cbab6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x843d58b44ee94e7c # load x3 with value 0x843d58b44ee94e7c
sd x3, 0(x2) # store 0x843d58b44ee94e7c in memory
fld f29, 0(x2) # load 0x843d58b44ee94e7c from memory into f29
fnmadd.d f6, f16, f18, f29, dyn # perform operation
fnmadd.d f6, f16, f18, f29, rdn # perform operation
fnmadd.d f6, f16, f18, f29, rmm # perform operation
fnmadd.d f6, f16, f18, f29, rne # perform operation
fnmadd.d f6, f16, f18, f29, rtz # perform operation
fnmadd.d f6, f16, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x21, 0x5e9a3eb614d3c6cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0xf949e1ee0cdc4593 # load x3 with value 0xf949e1ee0cdc4593
sd x3, 0(x2) # store 0xf949e1ee0cdc4593 in memory
fld f16, 0(x2) # load 0xf949e1ee0cdc4593 from memory into f16
fnmadd.d f21, f11, f6, f16, dyn # perform operation
fnmadd.d f21, f11, f6, f16, rdn # perform operation
fnmadd.d f21, f11, f6, f16, rmm # perform operation
fnmadd.d f21, f11, f6, f16, rne # perform operation
fnmadd.d f21, f11, f6, f16, rtz # perform operation
fnmadd.d f21, f11, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f11, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x19, 0x66fdd5720fd0e80b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xa8e79dbed1cce80e # load x3 with value 0xa8e79dbed1cce80e
sd x3, 0(x2) # store 0xa8e79dbed1cce80e in memory
fld f28, 0(x2) # load 0xa8e79dbed1cce80e from memory into f28
fnmadd.d f19, f8, f6, f28, dyn # perform operation
fnmadd.d f19, f8, f6, f28, rdn # perform operation
fnmadd.d f19, f8, f6, f28, rmm # perform operation
fnmadd.d f19, f8, f6, f28, rne # perform operation
fnmadd.d f19, f8, f6, f28, rtz # perform operation
fnmadd.d f19, f8, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x8, 0xa87b495bca043aa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xbffd31e3950d6d4c # load x3 with value 0xbffd31e3950d6d4c
sd x3, 0(x2) # store 0xbffd31e3950d6d4c in memory
fld f26, 0(x2) # load 0xbffd31e3950d6d4c from memory into f26
fnmadd.d f8, f12, f9, f26, dyn # perform operation
fnmadd.d f8, f12, f9, f26, rdn # perform operation
fnmadd.d f8, f12, f9, f26, rmm # perform operation
fnmadd.d f8, f12, f9, f26, rne # perform operation
fnmadd.d f8, f12, f9, f26, rtz # perform operation
fnmadd.d f8, f12, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x12, 0x7b6a471f70171be1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xc72f0635f66ee137 # load x3 with value 0xc72f0635f66ee137
sd x3, 0(x2) # store 0xc72f0635f66ee137 in memory
fld f28, 0(x2) # load 0xc72f0635f66ee137 from memory into f28
fnmadd.d f12, f26, f24, f28, dyn # perform operation
fnmadd.d f12, f26, f24, f28, rdn # perform operation
fnmadd.d f12, f26, f24, f28, rmm # perform operation
fnmadd.d f12, f26, f24, f28, rne # perform operation
fnmadd.d f12, f26, f24, f28, rtz # perform operation
fnmadd.d f12, f26, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f26, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f26, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x14, 0x1e5b82887d2dfcb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x0cd008f63c3749b5 # load x3 with value 0x0cd008f63c3749b5
sd x3, 0(x2) # store 0x0cd008f63c3749b5 in memory
fld f28, 0(x2) # load 0x0cd008f63c3749b5 from memory into f28
fnmadd.d f14, f25, f6, f28, dyn # perform operation
fnmadd.d f14, f25, f6, f28, rdn # perform operation
fnmadd.d f14, f25, f6, f28, rmm # perform operation
fnmadd.d f14, f25, f6, f28, rne # perform operation
fnmadd.d f14, f25, f6, f28, rtz # perform operation
fnmadd.d f14, f25, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f25, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x1, 0xe7d457050636e206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x4a2a7978d9e16779 # load x3 with value 0x4a2a7978d9e16779
sd x3, 0(x2) # store 0x4a2a7978d9e16779 in memory
fld f16, 0(x2) # load 0x4a2a7978d9e16779 from memory into f16
fnmadd.d f1, f10, f9, f16, dyn # perform operation
fnmadd.d f1, f10, f9, f16, rdn # perform operation
fnmadd.d f1, f10, f9, f16, rmm # perform operation
fnmadd.d f1, f10, f9, f16, rne # perform operation
fnmadd.d f1, f10, f9, f16, rtz # perform operation
fnmadd.d f1, f10, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f10, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x27, 0x9cfa4e9bfcb762c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xccb26cf891eb4520 # load x3 with value 0xccb26cf891eb4520
sd x3, 0(x2) # store 0xccb26cf891eb4520 in memory
fld f19, 0(x2) # load 0xccb26cf891eb4520 from memory into f19
fnmadd.d f27, f5, f9, f19, dyn # perform operation
fnmadd.d f27, f5, f9, f19, rdn # perform operation
fnmadd.d f27, f5, f9, f19, rmm # perform operation
fnmadd.d f27, f5, f9, f19, rne # perform operation
fnmadd.d f27, f5, f9, f19, rtz # perform operation
fnmadd.d f27, f5, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f5, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f5, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f5, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f5, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f5, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x15, 0x49705dcfdf9c9154 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xeef5ce36b747d03d # load x3 with value 0xeef5ce36b747d03d
sd x3, 0(x2) # store 0xeef5ce36b747d03d in memory
fld f18, 0(x2) # load 0xeef5ce36b747d03d from memory into f18
fnmadd.d f15, f24, f16, f18, dyn # perform operation
fnmadd.d f15, f24, f16, f18, rdn # perform operation
fnmadd.d f15, f24, f16, f18, rmm # perform operation
fnmadd.d f15, f24, f16, f18, rne # perform operation
fnmadd.d f15, f24, f16, f18, rtz # perform operation
fnmadd.d f15, f24, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f24, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x17, 0x35f66ea5029c7599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x1c9daefb49c3d2ab # load x3 with value 0x1c9daefb49c3d2ab
sd x3, 0(x2) # store 0x1c9daefb49c3d2ab in memory
fld f2, 0(x2) # load 0x1c9daefb49c3d2ab from memory into f2
fnmadd.d f17, f13, f1, f2, dyn # perform operation
fnmadd.d f17, f13, f1, f2, rdn # perform operation
fnmadd.d f17, f13, f1, f2, rmm # perform operation
fnmadd.d f17, f13, f1, f2, rne # perform operation
fnmadd.d f17, f13, f1, f2, rtz # perform operation
fnmadd.d f17, f13, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f13, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f13, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x5, 0x218763ee64874b0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0xf44c81eed1c48524 # load x3 with value 0xf44c81eed1c48524
sd x3, 0(x2) # store 0xf44c81eed1c48524 in memory
fld f13, 0(x2) # load 0xf44c81eed1c48524 from memory into f13
fnmadd.d f5, f19, f10, f13, dyn # perform operation
fnmadd.d f5, f19, f10, f13, rdn # perform operation
fnmadd.d f5, f19, f10, f13, rmm # perform operation
fnmadd.d f5, f19, f10, f13, rne # perform operation
fnmadd.d f5, f19, f10, f13, rtz # perform operation
fnmadd.d f5, f19, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f19, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f19, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f19, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f19, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f19, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x7, 0x3a07a1788c9edd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x92d8df095336e70e # load x3 with value 0x92d8df095336e70e
sd x3, 0(x2) # store 0x92d8df095336e70e in memory
fld f6, 0(x2) # load 0x92d8df095336e70e from memory into f6
fnmadd.d f7, f4, f27, f6, dyn # perform operation
fnmadd.d f7, f4, f27, f6, rdn # perform operation
fnmadd.d f7, f4, f27, f6, rmm # perform operation
fnmadd.d f7, f4, f27, f6, rne # perform operation
fnmadd.d f7, f4, f27, f6, rtz # perform operation
fnmadd.d f7, f4, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f4, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f4, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x9, 0x69468e8b51e761b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xad90a6d6545eafe0 # load x3 with value 0xad90a6d6545eafe0
sd x3, 0(x2) # store 0xad90a6d6545eafe0 in memory
fld f15, 0(x2) # load 0xad90a6d6545eafe0 from memory into f15
fnmadd.d f9, f30, f16, f15, dyn # perform operation
fnmadd.d f9, f30, f16, f15, rdn # perform operation
fnmadd.d f9, f30, f16, f15, rmm # perform operation
fnmadd.d f9, f30, f16, f15, rne # perform operation
fnmadd.d f9, f30, f16, f15, rtz # perform operation
fnmadd.d f9, f30, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f30, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x14, 0xc036256e470a9556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x57a01e69d9c8d00c # load x3 with value 0x57a01e69d9c8d00c
sd x3, 0(x2) # store 0x57a01e69d9c8d00c in memory
fld f11, 0(x2) # load 0x57a01e69d9c8d00c from memory into f11
fnmadd.d f14, f15, f2, f11, dyn # perform operation
fnmadd.d f14, f15, f2, f11, rdn # perform operation
fnmadd.d f14, f15, f2, f11, rmm # perform operation
fnmadd.d f14, f15, f2, f11, rne # perform operation
fnmadd.d f14, f15, f2, f11, rtz # perform operation
fnmadd.d f14, f15, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f15, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x27, 0x1deb762aaa57283d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x84fe310d420c5364 # load x3 with value 0x84fe310d420c5364
sd x3, 0(x2) # store 0x84fe310d420c5364 in memory
fld f2, 0(x2) # load 0x84fe310d420c5364 from memory into f2
fnmadd.d f27, f14, f9, f2, dyn # perform operation
fnmadd.d f27, f14, f9, f2, rdn # perform operation
fnmadd.d f27, f14, f9, f2, rmm # perform operation
fnmadd.d f27, f14, f9, f2, rne # perform operation
fnmadd.d f27, f14, f9, f2, rtz # perform operation
fnmadd.d f27, f14, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f14, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x6, 0x111d8b63123b1e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0xaaebdeb7d083e529 # load x3 with value 0xaaebdeb7d083e529
sd x3, 0(x2) # store 0xaaebdeb7d083e529 in memory
fld f23, 0(x2) # load 0xaaebdeb7d083e529 from memory into f23
fnmadd.d f6, f11, f13, f23, dyn # perform operation
fnmadd.d f6, f11, f13, f23, rdn # perform operation
fnmadd.d f6, f11, f13, f23, rmm # perform operation
fnmadd.d f6, f11, f13, f23, rne # perform operation
fnmadd.d f6, f11, f13, f23, rtz # perform operation
fnmadd.d f6, f11, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x7, 0x68c97f99f2d9a652 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xa9d8cab37d1e284a # load x3 with value 0xa9d8cab37d1e284a
sd x3, 0(x2) # store 0xa9d8cab37d1e284a in memory
fld f5, 0(x2) # load 0xa9d8cab37d1e284a from memory into f5
fnmadd.d f7, f30, f23, f5, dyn # perform operation
fnmadd.d f7, f30, f23, f5, rdn # perform operation
fnmadd.d f7, f30, f23, f5, rmm # perform operation
fnmadd.d f7, f30, f23, f5, rne # perform operation
fnmadd.d f7, f30, f23, f5, rtz # perform operation
fnmadd.d f7, f30, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f30, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f30, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f30, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f30, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f30, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x8, 0x450573a4ab57cd29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x3e2cb4917d49bc5c # load x3 with value 0x3e2cb4917d49bc5c
sd x3, 0(x2) # store 0x3e2cb4917d49bc5c in memory
fld f23, 0(x2) # load 0x3e2cb4917d49bc5c from memory into f23
fnmadd.d f8, f3, f13, f23, dyn # perform operation
fnmadd.d f8, f3, f13, f23, rdn # perform operation
fnmadd.d f8, f3, f13, f23, rmm # perform operation
fnmadd.d f8, f3, f13, f23, rne # perform operation
fnmadd.d f8, f3, f13, f23, rtz # perform operation
fnmadd.d f8, f3, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f3, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f3, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x5, 0xe53e74c89c5f7c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x99b8039b2e878f6d # load x3 with value 0x99b8039b2e878f6d
sd x3, 0(x2) # store 0x99b8039b2e878f6d in memory
fld f2, 0(x2) # load 0x99b8039b2e878f6d from memory into f2
fnmadd.d f5, f31, f12, f2, dyn # perform operation
fnmadd.d f5, f31, f12, f2, rdn # perform operation
fnmadd.d f5, f31, f12, f2, rmm # perform operation
fnmadd.d f5, f31, f12, f2, rne # perform operation
fnmadd.d f5, f31, f12, f2, rtz # perform operation
fnmadd.d f5, f31, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x16, 0x5be8cab4395bf2e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x2b2923a3a3ad822d # load x3 with value 0x2b2923a3a3ad822d
sd x3, 0(x2) # store 0x2b2923a3a3ad822d in memory
fld f27, 0(x2) # load 0x2b2923a3a3ad822d from memory into f27
fnmadd.d f16, f11, f17, f27, dyn # perform operation
fnmadd.d f16, f11, f17, f27, rdn # perform operation
fnmadd.d f16, f11, f17, f27, rmm # perform operation
fnmadd.d f16, f11, f17, f27, rne # perform operation
fnmadd.d f16, f11, f17, f27, rtz # perform operation
fnmadd.d f16, f11, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f11, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f11, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x26, 0xec496a44e06e842d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x597a5bf435eaf034 # load x3 with value 0x597a5bf435eaf034
sd x3, 0(x2) # store 0x597a5bf435eaf034 in memory
fld f6, 0(x2) # load 0x597a5bf435eaf034 from memory into f6
fnmadd.d f26, f15, f8, f6, dyn # perform operation
fnmadd.d f26, f15, f8, f6, rdn # perform operation
fnmadd.d f26, f15, f8, f6, rmm # perform operation
fnmadd.d f26, f15, f8, f6, rne # perform operation
fnmadd.d f26, f15, f8, f6, rtz # perform operation
fnmadd.d f26, f15, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f15, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x30, 0x08036a2cb59535df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x52ec5c94ab4a70c2 # load x3 with value 0x52ec5c94ab4a70c2
sd x3, 0(x2) # store 0x52ec5c94ab4a70c2 in memory
fld f19, 0(x2) # load 0x52ec5c94ab4a70c2 from memory into f19
fnmadd.d f30, f8, f7, f19, dyn # perform operation
fnmadd.d f30, f8, f7, f19, rdn # perform operation
fnmadd.d f30, f8, f7, f19, rmm # perform operation
fnmadd.d f30, f8, f7, f19, rne # perform operation
fnmadd.d f30, f8, f7, f19, rtz # perform operation
fnmadd.d f30, f8, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f8, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f8, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f8, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f8, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f8, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x4, 0x334cf40e0e94b248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x45d9fcf071574d2f # load x3 with value 0x45d9fcf071574d2f
sd x3, 0(x2) # store 0x45d9fcf071574d2f in memory
fld f8, 0(x2) # load 0x45d9fcf071574d2f from memory into f8
fnmadd.d f4, f18, f9, f8, dyn # perform operation
fnmadd.d f4, f18, f9, f8, rdn # perform operation
fnmadd.d f4, f18, f9, f8, rmm # perform operation
fnmadd.d f4, f18, f9, f8, rne # perform operation
fnmadd.d f4, f18, f9, f8, rtz # perform operation
fnmadd.d f4, f18, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f18, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x29, 0x5cd238d99be91b1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0xb29c3ecfb3b33839 # load x3 with value 0xb29c3ecfb3b33839
sd x3, 0(x2) # store 0xb29c3ecfb3b33839 in memory
fld f19, 0(x2) # load 0xb29c3ecfb3b33839 from memory into f19
fnmadd.d f29, f30, f13, f19, dyn # perform operation
fnmadd.d f29, f30, f13, f19, rdn # perform operation
fnmadd.d f29, f30, f13, f19, rmm # perform operation
fnmadd.d f29, f30, f13, f19, rne # perform operation
fnmadd.d f29, f30, f13, f19, rtz # perform operation
fnmadd.d f29, f30, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f30, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x15, 0xa5103dccea4d7f03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x6eec23646d9e47f5 # load x3 with value 0x6eec23646d9e47f5
sd x3, 0(x2) # store 0x6eec23646d9e47f5 in memory
fld f3, 0(x2) # load 0x6eec23646d9e47f5 from memory into f3
fnmadd.d f15, f4, f17, f3, dyn # perform operation
fnmadd.d f15, f4, f17, f3, rdn # perform operation
fnmadd.d f15, f4, f17, f3, rmm # perform operation
fnmadd.d f15, f4, f17, f3, rne # perform operation
fnmadd.d f15, f4, f17, f3, rtz # perform operation
fnmadd.d f15, f4, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f4, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f4, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f4, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f4, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f4, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x13, 0x3d84c8c8dcd14939 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
li x3, 0x29e0d164af02c575 # load x3 with value 0x29e0d164af02c575
sd x3, 0(x2) # store 0x29e0d164af02c575 in memory
fld f18, 0(x2) # load 0x29e0d164af02c575 from memory into f18
fnmadd.d f13, f29, f11, f18, dyn # perform operation
fnmadd.d f13, f29, f11, f18, rdn # perform operation
fnmadd.d f13, f29, f11, f18, rmm # perform operation
fnmadd.d f13, f29, f11, f18, rne # perform operation
fnmadd.d f13, f29, f11, f18, rtz # perform operation
fnmadd.d f13, f29, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f29, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x14, 0xd3ad33fcc3f6f1f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0xfb7e8b6e8da5a8fd # load x3 with value 0xfb7e8b6e8da5a8fd
sd x3, 0(x2) # store 0xfb7e8b6e8da5a8fd in memory
fld f8, 0(x2) # load 0xfb7e8b6e8da5a8fd from memory into f8
fnmadd.d f14, f9, f18, f8, dyn # perform operation
fnmadd.d f14, f9, f18, f8, rdn # perform operation
fnmadd.d f14, f9, f18, f8, rmm # perform operation
fnmadd.d f14, f9, f18, f8, rne # perform operation
fnmadd.d f14, f9, f18, f8, rtz # perform operation
fnmadd.d f14, f9, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f9, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f9, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f9, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f9, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f9, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x28, 0x03f48cb5dde5c7d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x586fe7102cd5bd3e # load x3 with value 0x586fe7102cd5bd3e
sd x3, 0(x2) # store 0x586fe7102cd5bd3e in memory
fld f29, 0(x2) # load 0x586fe7102cd5bd3e from memory into f29
fnmadd.d f28, f16, f14, f29, dyn # perform operation
fnmadd.d f28, f16, f14, f29, rdn # perform operation
fnmadd.d f28, f16, f14, f29, rmm # perform operation
fnmadd.d f28, f16, f14, f29, rne # perform operation
fnmadd.d f28, f16, f14, f29, rtz # perform operation
fnmadd.d f28, f16, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f16, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x5, 0x0be514c460f9d394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0xc3c2ba603ea3519d # load x3 with value 0xc3c2ba603ea3519d
sd x3, 0(x2) # store 0xc3c2ba603ea3519d in memory
fld f19, 0(x2) # load 0xc3c2ba603ea3519d from memory into f19
fnmadd.d f5, f31, f10, f19, dyn # perform operation
fnmadd.d f5, f31, f10, f19, rdn # perform operation
fnmadd.d f5, f31, f10, f19, rmm # perform operation
fnmadd.d f5, f31, f10, f19, rne # perform operation
fnmadd.d f5, f31, f10, f19, rtz # perform operation
fnmadd.d f5, f31, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x19, 0x66fec98f9ec0ee62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0xbac5bba0c3c4c2a9 # load x3 with value 0xbac5bba0c3c4c2a9
sd x3, 0(x2) # store 0xbac5bba0c3c4c2a9 in memory
fld f25, 0(x2) # load 0xbac5bba0c3c4c2a9 from memory into f25
fnmadd.d f19, f24, f13, f25, dyn # perform operation
fnmadd.d f19, f24, f13, f25, rdn # perform operation
fnmadd.d f19, f24, f13, f25, rmm # perform operation
fnmadd.d f19, f24, f13, f25, rne # perform operation
fnmadd.d f19, f24, f13, f25, rtz # perform operation
fnmadd.d f19, f24, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f24, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f24, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x8, 0xd374ad902cf72fe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x6d3478aac8c2f618 # load x3 with value 0x6d3478aac8c2f618
sd x3, 0(x2) # store 0x6d3478aac8c2f618 in memory
fld f10, 0(x2) # load 0x6d3478aac8c2f618 from memory into f10
fnmadd.d f8, f5, f17, f10, dyn # perform operation
fnmadd.d f8, f5, f17, f10, rdn # perform operation
fnmadd.d f8, f5, f17, f10, rmm # perform operation
fnmadd.d f8, f5, f17, f10, rne # perform operation
fnmadd.d f8, f5, f17, f10, rtz # perform operation
fnmadd.d f8, f5, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x18, 0x65e94566078d49fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xa38224eaa7fbd355 # load x3 with value 0xa38224eaa7fbd355
sd x3, 0(x2) # store 0xa38224eaa7fbd355 in memory
fld f10, 0(x2) # load 0xa38224eaa7fbd355 from memory into f10
fnmadd.d f18, f4, f21, f10, dyn # perform operation
fnmadd.d f18, f4, f21, f10, rdn # perform operation
fnmadd.d f18, f4, f21, f10, rmm # perform operation
fnmadd.d f18, f4, f21, f10, rne # perform operation
fnmadd.d f18, f4, f21, f10, rtz # perform operation
fnmadd.d f18, f4, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f4, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x18, 0xf6c24505a0d2cab3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x4e102f78dfd67533 # load x3 with value 0x4e102f78dfd67533
sd x3, 0(x2) # store 0x4e102f78dfd67533 in memory
fld f2, 0(x2) # load 0x4e102f78dfd67533 from memory into f2
fnmadd.d f18, f15, f5, f2, dyn # perform operation
fnmadd.d f18, f15, f5, f2, rdn # perform operation
fnmadd.d f18, f15, f5, f2, rmm # perform operation
fnmadd.d f18, f15, f5, f2, rne # perform operation
fnmadd.d f18, f15, f5, f2, rtz # perform operation
fnmadd.d f18, f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f15, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x2, 0xbc88d0fb75f9c8fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0xac6ae7579f434bae # load x3 with value 0xac6ae7579f434bae
sd x3, 0(x2) # store 0xac6ae7579f434bae in memory
fld f27, 0(x2) # load 0xac6ae7579f434bae from memory into f27
fnmadd.d f2, f9, f22, f27, dyn # perform operation
fnmadd.d f2, f9, f22, f27, rdn # perform operation
fnmadd.d f2, f9, f22, f27, rmm # perform operation
fnmadd.d f2, f9, f22, f27, rne # perform operation
fnmadd.d f2, f9, f22, f27, rtz # perform operation
fnmadd.d f2, f9, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x27, 0x57ed49bb5b4c2fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x8c8a9e8de8719d83 # load x3 with value 0x8c8a9e8de8719d83
sd x3, 0(x2) # store 0x8c8a9e8de8719d83 in memory
fld f23, 0(x2) # load 0x8c8a9e8de8719d83 from memory into f23
fnmadd.d f27, f8, f10, f23, dyn # perform operation
fnmadd.d f27, f8, f10, f23, rdn # perform operation
fnmadd.d f27, f8, f10, f23, rmm # perform operation
fnmadd.d f27, f8, f10, f23, rne # perform operation
fnmadd.d f27, f8, f10, f23, rtz # perform operation
fnmadd.d f27, f8, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f8, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x28, 0x355b2c0c96535ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x1645797e90ca9e63 # load x3 with value 0x1645797e90ca9e63
sd x3, 0(x2) # store 0x1645797e90ca9e63 in memory
fld f19, 0(x2) # load 0x1645797e90ca9e63 from memory into f19
fnmadd.d f28, f10, f24, f19, dyn # perform operation
fnmadd.d f28, f10, f24, f19, rdn # perform operation
fnmadd.d f28, f10, f24, f19, rmm # perform operation
fnmadd.d f28, f10, f24, f19, rne # perform operation
fnmadd.d f28, f10, f24, f19, rtz # perform operation
fnmadd.d f28, f10, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x12, 0x3c818dbd43f7606a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x2f39cf2e1356c656 # load x3 with value 0x2f39cf2e1356c656
sd x3, 0(x2) # store 0x2f39cf2e1356c656 in memory
fld f20, 0(x2) # load 0x2f39cf2e1356c656 from memory into f20
fnmadd.d f12, f7, f9, f20, dyn # perform operation
fnmadd.d f12, f7, f9, f20, rdn # perform operation
fnmadd.d f12, f7, f9, f20, rmm # perform operation
fnmadd.d f12, f7, f9, f20, rne # perform operation
fnmadd.d f12, f7, f9, f20, rtz # perform operation
fnmadd.d f12, f7, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x3, 0x3e42119ada5c5ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0xf22fb041797a7876 # load x3 with value 0xf22fb041797a7876
sd x3, 0(x2) # store 0xf22fb041797a7876 in memory
fld f26, 0(x2) # load 0xf22fb041797a7876 from memory into f26
fnmadd.d f3, f28, f23, f26, dyn # perform operation
fnmadd.d f3, f28, f23, f26, rdn # perform operation
fnmadd.d f3, f28, f23, f26, rmm # perform operation
fnmadd.d f3, f28, f23, f26, rne # perform operation
fnmadd.d f3, f28, f23, f26, rtz # perform operation
fnmadd.d f3, f28, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x13, 0x0f522be95170f799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x86a7418f122ab386 # load x3 with value 0x86a7418f122ab386
sd x3, 0(x2) # store 0x86a7418f122ab386 in memory
fld f31, 0(x2) # load 0x86a7418f122ab386 from memory into f31
fnmadd.d f13, f2, f4, f31, dyn # perform operation
fnmadd.d f13, f2, f4, f31, rdn # perform operation
fnmadd.d f13, f2, f4, f31, rmm # perform operation
fnmadd.d f13, f2, f4, f31, rne # perform operation
fnmadd.d f13, f2, f4, f31, rtz # perform operation
fnmadd.d f13, f2, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f2, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f2, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f2, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f2, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f2, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x20, 0x4bfa053589175bef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xc75c8ee331ab5a7f # load x3 with value 0xc75c8ee331ab5a7f
sd x3, 0(x2) # store 0xc75c8ee331ab5a7f in memory
fld f9, 0(x2) # load 0xc75c8ee331ab5a7f from memory into f9
fnmadd.d f20, f28, f5, f9, dyn # perform operation
fnmadd.d f20, f28, f5, f9, rdn # perform operation
fnmadd.d f20, f28, f5, f9, rmm # perform operation
fnmadd.d f20, f28, f5, f9, rne # perform operation
fnmadd.d f20, f28, f5, f9, rtz # perform operation
fnmadd.d f20, f28, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f28, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x2, 0x1e561ce924419a8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0xb78b167d4d5aa6b9 # load x3 with value 0xb78b167d4d5aa6b9
sd x3, 0(x2) # store 0xb78b167d4d5aa6b9 in memory
fld f1, 0(x2) # load 0xb78b167d4d5aa6b9 from memory into f1
fnmadd.d f2, f19, f16, f1, dyn # perform operation
fnmadd.d f2, f19, f16, f1, rdn # perform operation
fnmadd.d f2, f19, f16, f1, rmm # perform operation
fnmadd.d f2, f19, f16, f1, rne # perform operation
fnmadd.d f2, f19, f16, f1, rtz # perform operation
fnmadd.d f2, f19, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x26, 0x1bf42a4f860315f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x1a51db3357b3f14c # load x3 with value 0x1a51db3357b3f14c
sd x3, 0(x2) # store 0x1a51db3357b3f14c in memory
fld f5, 0(x2) # load 0x1a51db3357b3f14c from memory into f5
fnmadd.d f26, f8, f20, f5, dyn # perform operation
fnmadd.d f26, f8, f20, f5, rdn # perform operation
fnmadd.d f26, f8, f20, f5, rmm # perform operation
fnmadd.d f26, f8, f20, f5, rne # perform operation
fnmadd.d f26, f8, f20, f5, rtz # perform operation
fnmadd.d f26, f8, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f8, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x9, 0x20f24775460b956e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x37d636d3a4bf18de # load x3 with value 0x37d636d3a4bf18de
sd x3, 0(x2) # store 0x37d636d3a4bf18de in memory
fld f20, 0(x2) # load 0x37d636d3a4bf18de from memory into f20
fnmadd.d f9, f8, f4, f20, dyn # perform operation
fnmadd.d f9, f8, f4, f20, rdn # perform operation
fnmadd.d f9, f8, f4, f20, rmm # perform operation
fnmadd.d f9, f8, f4, f20, rne # perform operation
fnmadd.d f9, f8, f4, f20, rtz # perform operation
fnmadd.d f9, f8, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x21, 0x33bfe46be915c518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xbe4173f470dd3881 # load x3 with value 0xbe4173f470dd3881
sd x3, 0(x2) # store 0xbe4173f470dd3881 in memory
fld f27, 0(x2) # load 0xbe4173f470dd3881 from memory into f27
fnmadd.d f21, f11, f24, f27, dyn # perform operation
fnmadd.d f21, f11, f24, f27, rdn # perform operation
fnmadd.d f21, f11, f24, f27, rmm # perform operation
fnmadd.d f21, f11, f24, f27, rne # perform operation
fnmadd.d f21, f11, f24, f27, rtz # perform operation
fnmadd.d f21, f11, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f11, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x7, 0x684bcb26e6f19d34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xe1200a6715f6cf98 # load x3 with value 0xe1200a6715f6cf98
sd x3, 0(x2) # store 0xe1200a6715f6cf98 in memory
fld f12, 0(x2) # load 0xe1200a6715f6cf98 from memory into f12
fnmadd.d f7, f14, f29, f12, dyn # perform operation
fnmadd.d f7, f14, f29, f12, rdn # perform operation
fnmadd.d f7, f14, f29, f12, rmm # perform operation
fnmadd.d f7, f14, f29, f12, rne # perform operation
fnmadd.d f7, f14, f29, f12, rtz # perform operation
fnmadd.d f7, f14, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f14, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f14, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x17, 0x4add5709754ad9be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xccb8d353b2a893aa # load x3 with value 0xccb8d353b2a893aa
sd x3, 0(x2) # store 0xccb8d353b2a893aa in memory
fld f4, 0(x2) # load 0xccb8d353b2a893aa from memory into f4
fnmadd.d f17, f18, f29, f4, dyn # perform operation
fnmadd.d f17, f18, f29, f4, rdn # perform operation
fnmadd.d f17, f18, f29, f4, rmm # perform operation
fnmadd.d f17, f18, f29, f4, rne # perform operation
fnmadd.d f17, f18, f29, f4, rtz # perform operation
fnmadd.d f17, f18, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f18, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f18, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x28, 0xf26e0ee81d0421de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x2c828a0e9390673e # load x3 with value 0x2c828a0e9390673e
sd x3, 0(x2) # store 0x2c828a0e9390673e in memory
fld f24, 0(x2) # load 0x2c828a0e9390673e from memory into f24
fnmadd.d f28, f26, f11, f24, dyn # perform operation
fnmadd.d f28, f26, f11, f24, rdn # perform operation
fnmadd.d f28, f26, f11, f24, rmm # perform operation
fnmadd.d f28, f26, f11, f24, rne # perform operation
fnmadd.d f28, f26, f11, f24, rtz # perform operation
fnmadd.d f28, f26, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f26, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f26, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x23, 0xce6362973cabc259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x11ecb850db14a9bb # load x3 with value 0x11ecb850db14a9bb
sd x3, 0(x2) # store 0x11ecb850db14a9bb in memory
fld f16, 0(x2) # load 0x11ecb850db14a9bb from memory into f16
fnmadd.d f23, f21, f3, f16, dyn # perform operation
fnmadd.d f23, f21, f3, f16, rdn # perform operation
fnmadd.d f23, f21, f3, f16, rmm # perform operation
fnmadd.d f23, f21, f3, f16, rne # perform operation
fnmadd.d f23, f21, f3, f16, rtz # perform operation
fnmadd.d f23, f21, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f21, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x13, 0x856be4e7e79eab28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x497f99af7a737d1a # load x3 with value 0x497f99af7a737d1a
sd x3, 0(x2) # store 0x497f99af7a737d1a in memory
fld f22, 0(x2) # load 0x497f99af7a737d1a from memory into f22
fnmadd.d f13, f10, f25, f22, dyn # perform operation
fnmadd.d f13, f10, f25, f22, rdn # perform operation
fnmadd.d f13, f10, f25, f22, rmm # perform operation
fnmadd.d f13, f10, f25, f22, rne # perform operation
fnmadd.d f13, f10, f25, f22, rtz # perform operation
fnmadd.d f13, f10, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f10, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f10, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f10, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f10, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f10, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x31, 0x2e8a13402963b3ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x6fd3dd72573f5c26 # load x3 with value 0x6fd3dd72573f5c26
sd x3, 0(x2) # store 0x6fd3dd72573f5c26 in memory
fld f17, 0(x2) # load 0x6fd3dd72573f5c26 from memory into f17
fnmadd.d f31, f24, f26, f17, dyn # perform operation
fnmadd.d f31, f24, f26, f17, rdn # perform operation
fnmadd.d f31, f24, f26, f17, rmm # perform operation
fnmadd.d f31, f24, f26, f17, rne # perform operation
fnmadd.d f31, f24, f26, f17, rtz # perform operation
fnmadd.d f31, f24, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x16, 0xd5b54122875c6a61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0x08934f116b16ef2c # load x3 with value 0x08934f116b16ef2c
sd x3, 0(x2) # store 0x08934f116b16ef2c in memory
fld f11, 0(x2) # load 0x08934f116b16ef2c from memory into f11
fnmadd.d f16, f21, f25, f11, dyn # perform operation
fnmadd.d f16, f21, f25, f11, rdn # perform operation
fnmadd.d f16, f21, f25, f11, rmm # perform operation
fnmadd.d f16, f21, f25, f11, rne # perform operation
fnmadd.d f16, f21, f25, f11, rtz # perform operation
fnmadd.d f16, f21, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f21, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f21, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f21, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f21, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f21, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x26, 0x549a87263438805a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0xd77994d7c966a754 # load x3 with value 0xd77994d7c966a754
sd x3, 0(x2) # store 0xd77994d7c966a754 in memory
fld f17, 0(x2) # load 0xd77994d7c966a754 from memory into f17
fnmadd.d f26, f9, f22, f17, dyn # perform operation
fnmadd.d f26, f9, f22, f17, rdn # perform operation
fnmadd.d f26, f9, f22, f17, rmm # perform operation
fnmadd.d f26, f9, f22, f17, rne # perform operation
fnmadd.d f26, f9, f22, f17, rtz # perform operation
fnmadd.d f26, f9, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x26, 0x5e3f74c1c182c427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x60c7d6e69c50d3af # load x3 with value 0x60c7d6e69c50d3af
sd x3, 0(x2) # store 0x60c7d6e69c50d3af in memory
fld f4, 0(x2) # load 0x60c7d6e69c50d3af from memory into f4
fnmadd.d f26, f1, f6, f4, dyn # perform operation
fnmadd.d f26, f1, f6, f4, rdn # perform operation
fnmadd.d f26, f1, f6, f4, rmm # perform operation
fnmadd.d f26, f1, f6, f4, rne # perform operation
fnmadd.d f26, f1, f6, f4, rtz # perform operation
fnmadd.d f26, f1, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f1, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f1, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f1, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f1, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f1, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x2, 0x91fb230109b1319a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x45fc6e522ba13795 # load x3 with value 0x45fc6e522ba13795
sd x3, 0(x2) # store 0x45fc6e522ba13795 in memory
fld f27, 0(x2) # load 0x45fc6e522ba13795 from memory into f27
fnmadd.d f2, f4, f19, f27, dyn # perform operation
fnmadd.d f2, f4, f19, f27, rdn # perform operation
fnmadd.d f2, f4, f19, f27, rmm # perform operation
fnmadd.d f2, f4, f19, f27, rne # perform operation
fnmadd.d f2, f4, f19, f27, rtz # perform operation
fnmadd.d f2, f4, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f4, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x17, 0xbee9596831ce246a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x632923f43c368c56 # load x3 with value 0x632923f43c368c56
sd x3, 0(x2) # store 0x632923f43c368c56 in memory
fld f25, 0(x2) # load 0x632923f43c368c56 from memory into f25
fnmadd.d f17, f6, f7, f25, dyn # perform operation
fnmadd.d f17, f6, f7, f25, rdn # perform operation
fnmadd.d f17, f6, f7, f25, rmm # perform operation
fnmadd.d f17, f6, f7, f25, rne # perform operation
fnmadd.d f17, f6, f7, f25, rtz # perform operation
fnmadd.d f17, f6, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x31, 0xcab9ad3dea89b5fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x03e7b86cbc495f4b # load x3 with value 0x03e7b86cbc495f4b
sd x3, 0(x2) # store 0x03e7b86cbc495f4b in memory
fld f25, 0(x2) # load 0x03e7b86cbc495f4b from memory into f25
fnmadd.d f31, f15, f13, f25, dyn # perform operation
fnmadd.d f31, f15, f13, f25, rdn # perform operation
fnmadd.d f31, f15, f13, f25, rmm # perform operation
fnmadd.d f31, f15, f13, f25, rne # perform operation
fnmadd.d f31, f15, f13, f25, rtz # perform operation
fnmadd.d f31, f15, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f15, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f15, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x19, 0xf36e701d3bd09a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xc692b6b0ec27e2de # load x3 with value 0xc692b6b0ec27e2de
sd x3, 0(x2) # store 0xc692b6b0ec27e2de in memory
fld f4, 0(x2) # load 0xc692b6b0ec27e2de from memory into f4
fnmadd.d f19, f15, f27, f4, dyn # perform operation
fnmadd.d f19, f15, f27, f4, rdn # perform operation
fnmadd.d f19, f15, f27, f4, rmm # perform operation
fnmadd.d f19, f15, f27, f4, rne # perform operation
fnmadd.d f19, f15, f27, f4, rtz # perform operation
fnmadd.d f19, f15, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f15, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x29, 0xc340e165adb74667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x8cdcee35582dfc00 # load x3 with value 0x8cdcee35582dfc00
sd x3, 0(x2) # store 0x8cdcee35582dfc00 in memory
fld f23, 0(x2) # load 0x8cdcee35582dfc00 from memory into f23
fnmadd.d f29, f2, f17, f23, dyn # perform operation
fnmadd.d f29, f2, f17, f23, rdn # perform operation
fnmadd.d f29, f2, f17, f23, rmm # perform operation
fnmadd.d f29, f2, f17, f23, rne # perform operation
fnmadd.d f29, f2, f17, f23, rtz # perform operation
fnmadd.d f29, f2, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f2, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x5, 0xd870a5e3720a740f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x58638ad1b09deb7e # load x3 with value 0x58638ad1b09deb7e
sd x3, 0(x2) # store 0x58638ad1b09deb7e in memory
fld f7, 0(x2) # load 0x58638ad1b09deb7e from memory into f7
fnmadd.d f5, f1, f23, f7, dyn # perform operation
fnmadd.d f5, f1, f23, f7, rdn # perform operation
fnmadd.d f5, f1, f23, f7, rmm # perform operation
fnmadd.d f5, f1, f23, f7, rne # perform operation
fnmadd.d f5, f1, f23, f7, rtz # perform operation
fnmadd.d f5, f1, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x3, 0x2e1f4bb74ace493d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0xfacfee5024a9e084 # load x3 with value 0xfacfee5024a9e084
sd x3, 0(x2) # store 0xfacfee5024a9e084 in memory
fld f9, 0(x2) # load 0xfacfee5024a9e084 from memory into f9
fnmadd.d f3, f20, f21, f9, dyn # perform operation
fnmadd.d f3, f20, f21, f9, rdn # perform operation
fnmadd.d f3, f20, f21, f9, rmm # perform operation
fnmadd.d f3, f20, f21, f9, rne # perform operation
fnmadd.d f3, f20, f21, f9, rtz # perform operation
fnmadd.d f3, f20, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f20, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x18, 0x4c8e4c11b857a327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0xb3a4e75446233671 # load x3 with value 0xb3a4e75446233671
sd x3, 0(x2) # store 0xb3a4e75446233671 in memory
fld f2, 0(x2) # load 0xb3a4e75446233671 from memory into f2
fnmadd.d f18, f4, f27, f2, dyn # perform operation
fnmadd.d f18, f4, f27, f2, rdn # perform operation
fnmadd.d f18, f4, f27, f2, rmm # perform operation
fnmadd.d f18, f4, f27, f2, rne # perform operation
fnmadd.d f18, f4, f27, f2, rtz # perform operation
fnmadd.d f18, f4, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f4, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f4, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f4, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f4, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f4, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x23, 0xc8a6920f24a1079e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x24eea11c7f391ae1 # load x3 with value 0x24eea11c7f391ae1
sd x3, 0(x2) # store 0x24eea11c7f391ae1 in memory
fld f12, 0(x2) # load 0x24eea11c7f391ae1 from memory into f12
fnmadd.d f23, f13, f8, f12, dyn # perform operation
fnmadd.d f23, f13, f8, f12, rdn # perform operation
fnmadd.d f23, f13, f8, f12, rmm # perform operation
fnmadd.d f23, f13, f8, f12, rne # perform operation
fnmadd.d f23, f13, f8, f12, rtz # perform operation
fnmadd.d f23, f13, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f13, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x12, 0x2605078933bd8bbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x9f901d572d423c07 # load x3 with value 0x9f901d572d423c07
sd x3, 0(x2) # store 0x9f901d572d423c07 in memory
fld f6, 0(x2) # load 0x9f901d572d423c07 from memory into f6
fnmadd.d f12, f13, f30, f6, dyn # perform operation
fnmadd.d f12, f13, f30, f6, rdn # perform operation
fnmadd.d f12, f13, f30, f6, rmm # perform operation
fnmadd.d f12, f13, f30, f6, rne # perform operation
fnmadd.d f12, f13, f30, f6, rtz # perform operation
fnmadd.d f12, f13, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x18, 0x224d10dc6642dc71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xccaf2f83d13b99e6 # load x3 with value 0xccaf2f83d13b99e6
sd x3, 0(x2) # store 0xccaf2f83d13b99e6 in memory
fld f22, 0(x2) # load 0xccaf2f83d13b99e6 from memory into f22
fnmadd.d f18, f28, f31, f22, dyn # perform operation
fnmadd.d f18, f28, f31, f22, rdn # perform operation
fnmadd.d f18, f28, f31, f22, rmm # perform operation
fnmadd.d f18, f28, f31, f22, rne # perform operation
fnmadd.d f18, f28, f31, f22, rtz # perform operation
fnmadd.d f18, f28, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f28, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x1, 0xba5946b3d2c6cc7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x959b20e264a49f29 # load x3 with value 0x959b20e264a49f29
sd x3, 0(x2) # store 0x959b20e264a49f29 in memory
fld f22, 0(x2) # load 0x959b20e264a49f29 from memory into f22
fnmadd.d f1, f18, f23, f22, dyn # perform operation
fnmadd.d f1, f18, f23, f22, rdn # perform operation
fnmadd.d f1, f18, f23, f22, rmm # perform operation
fnmadd.d f1, f18, f23, f22, rne # perform operation
fnmadd.d f1, f18, f23, f22, rtz # perform operation
fnmadd.d f1, f18, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f18, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f18, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x24, 0xa6720ceb10e046c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x4239c6f4b3d54421 # load x3 with value 0x4239c6f4b3d54421
sd x3, 0(x2) # store 0x4239c6f4b3d54421 in memory
fld f31, 0(x2) # load 0x4239c6f4b3d54421 from memory into f31
fnmadd.d f24, f5, f4, f31, dyn # perform operation
fnmadd.d f24, f5, f4, f31, rdn # perform operation
fnmadd.d f24, f5, f4, f31, rmm # perform operation
fnmadd.d f24, f5, f4, f31, rne # perform operation
fnmadd.d f24, f5, f4, f31, rtz # perform operation
fnmadd.d f24, f5, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x23, 0x87e0c73c32a0d5fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x6c2011246335bcd1 # load x3 with value 0x6c2011246335bcd1
sd x3, 0(x2) # store 0x6c2011246335bcd1 in memory
fld f9, 0(x2) # load 0x6c2011246335bcd1 from memory into f9
fnmadd.d f23, f26, f21, f9, dyn # perform operation
fnmadd.d f23, f26, f21, f9, rdn # perform operation
fnmadd.d f23, f26, f21, f9, rmm # perform operation
fnmadd.d f23, f26, f21, f9, rne # perform operation
fnmadd.d f23, f26, f21, f9, rtz # perform operation
fnmadd.d f23, f26, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f26, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x21, 0x06336c65591e8adc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x9c9ad98aa754223c # load x3 with value 0x9c9ad98aa754223c
sd x3, 0(x2) # store 0x9c9ad98aa754223c in memory
fld f28, 0(x2) # load 0x9c9ad98aa754223c from memory into f28
fnmadd.d f21, f6, f4, f28, dyn # perform operation
fnmadd.d f21, f6, f4, f28, rdn # perform operation
fnmadd.d f21, f6, f4, f28, rmm # perform operation
fnmadd.d f21, f6, f4, f28, rne # perform operation
fnmadd.d f21, f6, f4, f28, rtz # perform operation
fnmadd.d f21, f6, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f6, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f6, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f6, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f6, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f6, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x29, 0xf399276f63bac9ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x05c2212b28328968 # load x3 with value 0x05c2212b28328968
sd x3, 0(x2) # store 0x05c2212b28328968 in memory
fld f7, 0(x2) # load 0x05c2212b28328968 from memory into f7
fnmadd.d f29, f22, f24, f7, dyn # perform operation
fnmadd.d f29, f22, f24, f7, rdn # perform operation
fnmadd.d f29, f22, f24, f7, rmm # perform operation
fnmadd.d f29, f22, f24, f7, rne # perform operation
fnmadd.d f29, f22, f24, f7, rtz # perform operation
fnmadd.d f29, f22, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f22, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f22, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x8, 0x6f968192224a5d3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x037d976b9f36a616 # load x3 with value 0x037d976b9f36a616
sd x3, 0(x2) # store 0x037d976b9f36a616 in memory
fld f31, 0(x2) # load 0x037d976b9f36a616 from memory into f31
fnmadd.d f8, f13, f12, f31, dyn # perform operation
fnmadd.d f8, f13, f12, f31, rdn # perform operation
fnmadd.d f8, f13, f12, f31, rmm # perform operation
fnmadd.d f8, f13, f12, f31, rne # perform operation
fnmadd.d f8, f13, f12, f31, rtz # perform operation
fnmadd.d f8, f13, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f13, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x1, 0x9cd63286e2bb72a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x34371f58f36ebdb8 # load x3 with value 0x34371f58f36ebdb8
sd x3, 0(x2) # store 0x34371f58f36ebdb8 in memory
fld f7, 0(x2) # load 0x34371f58f36ebdb8 from memory into f7
fnmadd.d f1, f19, f6, f7, dyn # perform operation
fnmadd.d f1, f19, f6, f7, rdn # perform operation
fnmadd.d f1, f19, f6, f7, rmm # perform operation
fnmadd.d f1, f19, f6, f7, rne # perform operation
fnmadd.d f1, f19, f6, f7, rtz # perform operation
fnmadd.d f1, f19, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x17, 0xc0799154e696f5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x20e3c31a2d505f9c # load x3 with value 0x20e3c31a2d505f9c
sd x3, 0(x2) # store 0x20e3c31a2d505f9c in memory
fld f27, 0(x2) # load 0x20e3c31a2d505f9c from memory into f27
fnmadd.d f17, f24, f4, f27, dyn # perform operation
fnmadd.d f17, f24, f4, f27, rdn # perform operation
fnmadd.d f17, f24, f4, f27, rmm # perform operation
fnmadd.d f17, f24, f4, f27, rne # perform operation
fnmadd.d f17, f24, f4, f27, rtz # perform operation
fnmadd.d f17, f24, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x31, 0xc07d30cd069ee426 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xc14dca732b829839 # load x3 with value 0xc14dca732b829839
sd x3, 0(x2) # store 0xc14dca732b829839 in memory
fld f26, 0(x2) # load 0xc14dca732b829839 from memory into f26
fnmadd.d f31, f1, f14, f26, dyn # perform operation
fnmadd.d f31, f1, f14, f26, rdn # perform operation
fnmadd.d f31, f1, f14, f26, rmm # perform operation
fnmadd.d f31, f1, f14, f26, rne # perform operation
fnmadd.d f31, f1, f14, f26, rtz # perform operation
fnmadd.d f31, f1, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f1, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x21, 0x77fcefcee479fe32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x1c727f7488bc523d # load x3 with value 0x1c727f7488bc523d
sd x3, 0(x2) # store 0x1c727f7488bc523d in memory
fld f23, 0(x2) # load 0x1c727f7488bc523d from memory into f23
fnmadd.d f21, f10, f4, f23, dyn # perform operation
fnmadd.d f21, f10, f4, f23, rdn # perform operation
fnmadd.d f21, f10, f4, f23, rmm # perform operation
fnmadd.d f21, f10, f4, f23, rne # perform operation
fnmadd.d f21, f10, f4, f23, rtz # perform operation
fnmadd.d f21, f10, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f10, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x10, 0xf37b2a1c51cf8b63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x48e18ebc4a0d2dd1 # load x3 with value 0x48e18ebc4a0d2dd1
sd x3, 0(x2) # store 0x48e18ebc4a0d2dd1 in memory
fld f1, 0(x2) # load 0x48e18ebc4a0d2dd1 from memory into f1
fnmadd.d f10, f16, f24, f1, dyn # perform operation
fnmadd.d f10, f16, f24, f1, rdn # perform operation
fnmadd.d f10, f16, f24, f1, rmm # perform operation
fnmadd.d f10, f16, f24, f1, rne # perform operation
fnmadd.d f10, f16, f24, f1, rtz # perform operation
fnmadd.d f10, f16, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f16, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x6, 0xe287bbe855ac758a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x5aaac7ee179a35b9 # load x3 with value 0x5aaac7ee179a35b9
sd x3, 0(x2) # store 0x5aaac7ee179a35b9 in memory
fld f21, 0(x2) # load 0x5aaac7ee179a35b9 from memory into f21
fnmadd.d f6, f7, f23, f21, dyn # perform operation
fnmadd.d f6, f7, f23, f21, rdn # perform operation
fnmadd.d f6, f7, f23, f21, rmm # perform operation
fnmadd.d f6, f7, f23, f21, rne # perform operation
fnmadd.d f6, f7, f23, f21, rtz # perform operation
fnmadd.d f6, f7, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f7, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x2, 0xb7a1ddda6a3be143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x978836cc577ce183 # load x3 with value 0x978836cc577ce183
sd x3, 0(x2) # store 0x978836cc577ce183 in memory
fld f27, 0(x2) # load 0x978836cc577ce183 from memory into f27
fnmadd.d f2, f16, f17, f27, dyn # perform operation
fnmadd.d f2, f16, f17, f27, rdn # perform operation
fnmadd.d f2, f16, f17, f27, rmm # perform operation
fnmadd.d f2, f16, f17, f27, rne # perform operation
fnmadd.d f2, f16, f17, f27, rtz # perform operation
fnmadd.d f2, f16, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f16, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f16, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f16, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f16, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f16, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x18, 0xf647c47f5e26d067 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x7a82a63097e0c98b # load x3 with value 0x7a82a63097e0c98b
sd x3, 0(x2) # store 0x7a82a63097e0c98b in memory
fld f27, 0(x2) # load 0x7a82a63097e0c98b from memory into f27
fnmadd.d f18, f23, f7, f27, dyn # perform operation
fnmadd.d f18, f23, f7, f27, rdn # perform operation
fnmadd.d f18, f23, f7, f27, rmm # perform operation
fnmadd.d f18, f23, f7, f27, rne # perform operation
fnmadd.d f18, f23, f7, f27, rtz # perform operation
fnmadd.d f18, f23, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f23, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x19, 0x494c44554a1fa649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x3424a28adde4acbd # load x3 with value 0x3424a28adde4acbd
sd x3, 0(x2) # store 0x3424a28adde4acbd in memory
fld f14, 0(x2) # load 0x3424a28adde4acbd from memory into f14
fnmadd.d f19, f12, f28, f14, dyn # perform operation
fnmadd.d f19, f12, f28, f14, rdn # perform operation
fnmadd.d f19, f12, f28, f14, rmm # perform operation
fnmadd.d f19, f12, f28, f14, rne # perform operation
fnmadd.d f19, f12, f28, f14, rtz # perform operation
fnmadd.d f19, f12, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x23, 0x25a086a57dbcf2b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0xde10291552c67824 # load x3 with value 0xde10291552c67824
sd x3, 0(x2) # store 0xde10291552c67824 in memory
fld f17, 0(x2) # load 0xde10291552c67824 from memory into f17
fnmadd.d f23, f2, f26, f17, dyn # perform operation
fnmadd.d f23, f2, f26, f17, rdn # perform operation
fnmadd.d f23, f2, f26, f17, rmm # perform operation
fnmadd.d f23, f2, f26, f17, rne # perform operation
fnmadd.d f23, f2, f26, f17, rtz # perform operation
fnmadd.d f23, f2, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f2, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x24, 0x80ca8174bb815239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0xd80c0c563f46d322 # load x3 with value 0xd80c0c563f46d322
sd x3, 0(x2) # store 0xd80c0c563f46d322 in memory
fld f22, 0(x2) # load 0xd80c0c563f46d322 from memory into f22
fnmadd.d f24, f28, f31, f22, dyn # perform operation
fnmadd.d f24, f28, f31, f22, rdn # perform operation
fnmadd.d f24, f28, f31, f22, rmm # perform operation
fnmadd.d f24, f28, f31, f22, rne # perform operation
fnmadd.d f24, f28, f31, f22, rtz # perform operation
fnmadd.d f24, f28, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f28, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x12, 0xa3ef871ef4030079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x6742ed3cae08ef9a # load x3 with value 0x6742ed3cae08ef9a
sd x3, 0(x2) # store 0x6742ed3cae08ef9a in memory
fld f29, 0(x2) # load 0x6742ed3cae08ef9a from memory into f29
fnmadd.d f12, f8, f15, f29, dyn # perform operation
fnmadd.d f12, f8, f15, f29, rdn # perform operation
fnmadd.d f12, f8, f15, f29, rmm # perform operation
fnmadd.d f12, f8, f15, f29, rne # perform operation
fnmadd.d f12, f8, f15, f29, rtz # perform operation
fnmadd.d f12, f8, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f8, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x11, 0xdc1e3b958e1471d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x546fb7af36cd4a8f # load x3 with value 0x546fb7af36cd4a8f
sd x3, 0(x2) # store 0x546fb7af36cd4a8f in memory
fld f22, 0(x2) # load 0x546fb7af36cd4a8f from memory into f22
fnmadd.d f11, f16, f19, f22, dyn # perform operation
fnmadd.d f11, f16, f19, f22, rdn # perform operation
fnmadd.d f11, f16, f19, f22, rmm # perform operation
fnmadd.d f11, f16, f19, f22, rne # perform operation
fnmadd.d f11, f16, f19, f22, rtz # perform operation
fnmadd.d f11, f16, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x17, 0x93e778c9d0e0ec7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x3eb5bc110d5a70b3 # load x3 with value 0x3eb5bc110d5a70b3
sd x3, 0(x2) # store 0x3eb5bc110d5a70b3 in memory
fld f1, 0(x2) # load 0x3eb5bc110d5a70b3 from memory into f1
fnmadd.d f17, f23, f8, f1, dyn # perform operation
fnmadd.d f17, f23, f8, f1, rdn # perform operation
fnmadd.d f17, f23, f8, f1, rmm # perform operation
fnmadd.d f17, f23, f8, f1, rne # perform operation
fnmadd.d f17, f23, f8, f1, rtz # perform operation
fnmadd.d f17, f23, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f23, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f23, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x7, 0x4e672a19badeb5dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xe31f0e42cf3b3360 # load x3 with value 0xe31f0e42cf3b3360
sd x3, 0(x2) # store 0xe31f0e42cf3b3360 in memory
fld f23, 0(x2) # load 0xe31f0e42cf3b3360 from memory into f23
fnmadd.d f7, f24, f12, f23, dyn # perform operation
fnmadd.d f7, f24, f12, f23, rdn # perform operation
fnmadd.d f7, f24, f12, f23, rmm # perform operation
fnmadd.d f7, f24, f12, f23, rne # perform operation
fnmadd.d f7, f24, f12, f23, rtz # perform operation
fnmadd.d f7, f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f24, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x31, 0xd5dc59bb7bdb02ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0xd289ad4b00793119 # load x3 with value 0xd289ad4b00793119
sd x3, 0(x2) # store 0xd289ad4b00793119 in memory
fld f26, 0(x2) # load 0xd289ad4b00793119 from memory into f26
fnmadd.d f31, f6, f30, f26, dyn # perform operation
fnmadd.d f31, f6, f30, f26, rdn # perform operation
fnmadd.d f31, f6, f30, f26, rmm # perform operation
fnmadd.d f31, f6, f30, f26, rne # perform operation
fnmadd.d f31, f6, f30, f26, rtz # perform operation
fnmadd.d f31, f6, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x6, 0x25da4391f193ad93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xd3e96e7fdfe429b9 # load x3 with value 0xd3e96e7fdfe429b9
sd x3, 0(x2) # store 0xd3e96e7fdfe429b9 in memory
fld f24, 0(x2) # load 0xd3e96e7fdfe429b9 from memory into f24
fnmadd.d f6, f13, f28, f24, dyn # perform operation
fnmadd.d f6, f13, f28, f24, rdn # perform operation
fnmadd.d f6, f13, f28, f24, rmm # perform operation
fnmadd.d f6, f13, f28, f24, rne # perform operation
fnmadd.d f6, f13, f28, f24, rtz # perform operation
fnmadd.d f6, f13, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f13, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f13, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x7, 0x7f9cb29c48fc8340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0x921ec4794a063cfc # load x3 with value 0x921ec4794a063cfc
sd x3, 0(x2) # store 0x921ec4794a063cfc in memory
fld f21, 0(x2) # load 0x921ec4794a063cfc from memory into f21
fnmadd.d f7, f3, f19, f21, dyn # perform operation
fnmadd.d f7, f3, f19, f21, rdn # perform operation
fnmadd.d f7, f3, f19, f21, rmm # perform operation
fnmadd.d f7, f3, f19, f21, rne # perform operation
fnmadd.d f7, f3, f19, f21, rtz # perform operation
fnmadd.d f7, f3, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x6, 0xbb8d36b414d4de3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0xafb33ccd7c26dcc7 # load x3 with value 0xafb33ccd7c26dcc7
sd x3, 0(x2) # store 0xafb33ccd7c26dcc7 in memory
fld f19, 0(x2) # load 0xafb33ccd7c26dcc7 from memory into f19
fnmadd.d f6, f23, f5, f19, dyn # perform operation
fnmadd.d f6, f23, f5, f19, rdn # perform operation
fnmadd.d f6, f23, f5, f19, rmm # perform operation
fnmadd.d f6, f23, f5, f19, rne # perform operation
fnmadd.d f6, f23, f5, f19, rtz # perform operation
fnmadd.d f6, f23, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f23, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x4, 0xc5e8bceb24f25d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x36566d3dc3047a45 # load x3 with value 0x36566d3dc3047a45
sd x3, 0(x2) # store 0x36566d3dc3047a45 in memory
fld f8, 0(x2) # load 0x36566d3dc3047a45 from memory into f8
fnmadd.d f4, f9, f3, f8, dyn # perform operation
fnmadd.d f4, f9, f3, f8, rdn # perform operation
fnmadd.d f4, f9, f3, f8, rmm # perform operation
fnmadd.d f4, f9, f3, f8, rne # perform operation
fnmadd.d f4, f9, f3, f8, rtz # perform operation
fnmadd.d f4, f9, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f9, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x12, 0xbd0d3a92c77a090c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xe40cda653d9c58ed # load x3 with value 0xe40cda653d9c58ed
sd x3, 0(x2) # store 0xe40cda653d9c58ed in memory
fld f7, 0(x2) # load 0xe40cda653d9c58ed from memory into f7
fnmadd.d f12, f30, f3, f7, dyn # perform operation
fnmadd.d f12, f30, f3, f7, rdn # perform operation
fnmadd.d f12, f30, f3, f7, rmm # perform operation
fnmadd.d f12, f30, f3, f7, rne # perform operation
fnmadd.d f12, f30, f3, f7, rtz # perform operation
fnmadd.d f12, f30, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x3, 0xbb8e0a76d5316933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x557d15c5decd9299 # load x3 with value 0x557d15c5decd9299
sd x3, 0(x2) # store 0x557d15c5decd9299 in memory
fld f8, 0(x2) # load 0x557d15c5decd9299 from memory into f8
fnmadd.d f3, f21, f11, f8, dyn # perform operation
fnmadd.d f3, f21, f11, f8, rdn # perform operation
fnmadd.d f3, f21, f11, f8, rmm # perform operation
fnmadd.d f3, f21, f11, f8, rne # perform operation
fnmadd.d f3, f21, f11, f8, rtz # perform operation
fnmadd.d f3, f21, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f21, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f21, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x2, 0x6188d3608b08d5e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x2969394848f50f73 # load x3 with value 0x2969394848f50f73
sd x3, 0(x2) # store 0x2969394848f50f73 in memory
fld f26, 0(x2) # load 0x2969394848f50f73 from memory into f26
fnmadd.d f2, f12, f3, f26, dyn # perform operation
fnmadd.d f2, f12, f3, f26, rdn # perform operation
fnmadd.d f2, f12, f3, f26, rmm # perform operation
fnmadd.d f2, f12, f3, f26, rne # perform operation
fnmadd.d f2, f12, f3, f26, rtz # perform operation
fnmadd.d f2, f12, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f12, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f12, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f12, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f12, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f12, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x19, 0xa3c57894cd53253e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x83a32fb4582a2944 # load x3 with value 0x83a32fb4582a2944
sd x3, 0(x2) # store 0x83a32fb4582a2944 in memory
fld f25, 0(x2) # load 0x83a32fb4582a2944 from memory into f25
fnmadd.d f19, f5, f22, f25, dyn # perform operation
fnmadd.d f19, f5, f22, f25, rdn # perform operation
fnmadd.d f19, f5, f22, f25, rmm # perform operation
fnmadd.d f19, f5, f22, f25, rne # perform operation
fnmadd.d f19, f5, f22, f25, rtz # perform operation
fnmadd.d f19, f5, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f5, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f5, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x3, 0x190b5e4be33d4dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x31798b0e03ac9642 # load x3 with value 0x31798b0e03ac9642
sd x3, 0(x2) # store 0x31798b0e03ac9642 in memory
fld f8, 0(x2) # load 0x31798b0e03ac9642 from memory into f8
fnmadd.d f3, f10, f1, f8, dyn # perform operation
fnmadd.d f3, f10, f1, f8, rdn # perform operation
fnmadd.d f3, f10, f1, f8, rmm # perform operation
fnmadd.d f3, f10, f1, f8, rne # perform operation
fnmadd.d f3, f10, f1, f8, rtz # perform operation
fnmadd.d f3, f10, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f10, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f10, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f10, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f10, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f10, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x17, 0x5d6902364d6055bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x53f075876de6f7ce # load x3 with value 0x53f075876de6f7ce
sd x3, 0(x2) # store 0x53f075876de6f7ce in memory
fld f14, 0(x2) # load 0x53f075876de6f7ce from memory into f14
fnmadd.d f17, f9, f19, f14, dyn # perform operation
fnmadd.d f17, f9, f19, f14, rdn # perform operation
fnmadd.d f17, f9, f19, f14, rmm # perform operation
fnmadd.d f17, f9, f19, f14, rne # perform operation
fnmadd.d f17, f9, f19, f14, rtz # perform operation
fnmadd.d f17, f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x21, 0x5ffe150503f2fde2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xeb1a7971a0179793 # load x3 with value 0xeb1a7971a0179793
sd x3, 0(x2) # store 0xeb1a7971a0179793 in memory
fld f20, 0(x2) # load 0xeb1a7971a0179793 from memory into f20
fnmadd.d f21, f25, f30, f20, dyn # perform operation
fnmadd.d f21, f25, f30, f20, rdn # perform operation
fnmadd.d f21, f25, f30, f20, rmm # perform operation
fnmadd.d f21, f25, f30, f20, rne # perform operation
fnmadd.d f21, f25, f30, f20, rtz # perform operation
fnmadd.d f21, f25, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f25, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f25, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x7, 0x642954b13f80efd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xe5abe1a956a7027b # load x3 with value 0xe5abe1a956a7027b
sd x3, 0(x2) # store 0xe5abe1a956a7027b in memory
fld f24, 0(x2) # load 0xe5abe1a956a7027b from memory into f24
fnmadd.d f7, f5, f3, f24, dyn # perform operation
fnmadd.d f7, f5, f3, f24, rdn # perform operation
fnmadd.d f7, f5, f3, f24, rmm # perform operation
fnmadd.d f7, f5, f3, f24, rne # perform operation
fnmadd.d f7, f5, f3, f24, rtz # perform operation
fnmadd.d f7, f5, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f5, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x21, 0xe28618f335295270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xb25386a030d3e134 # load x3 with value 0xb25386a030d3e134
sd x3, 0(x2) # store 0xb25386a030d3e134 in memory
fld f23, 0(x2) # load 0xb25386a030d3e134 from memory into f23
fnmadd.d f21, f12, f27, f23, dyn # perform operation
fnmadd.d f21, f12, f27, f23, rdn # perform operation
fnmadd.d f21, f12, f27, f23, rmm # perform operation
fnmadd.d f21, f12, f27, f23, rne # perform operation
fnmadd.d f21, f12, f27, f23, rtz # perform operation
fnmadd.d f21, f12, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f12, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f12, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f12, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f12, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f12, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x30, 0x0d486f0043c297e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xbcf2c290c7dde504 # load x3 with value 0xbcf2c290c7dde504
sd x3, 0(x2) # store 0xbcf2c290c7dde504 in memory
fld f31, 0(x2) # load 0xbcf2c290c7dde504 from memory into f31
fnmadd.d f30, f26, f9, f31, dyn # perform operation
fnmadd.d f30, f26, f9, f31, rdn # perform operation
fnmadd.d f30, f26, f9, f31, rmm # perform operation
fnmadd.d f30, f26, f9, f31, rne # perform operation
fnmadd.d f30, f26, f9, f31, rtz # perform operation
fnmadd.d f30, f26, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f26, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x22, 0x84ee0ee47081a8ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0xdf35de8f2f67db33 # load x3 with value 0xdf35de8f2f67db33
sd x3, 0(x2) # store 0xdf35de8f2f67db33 in memory
fld f10, 0(x2) # load 0xdf35de8f2f67db33 from memory into f10
fnmadd.d f22, f26, f16, f10, dyn # perform operation
fnmadd.d f22, f26, f16, f10, rdn # perform operation
fnmadd.d f22, f26, f16, f10, rmm # perform operation
fnmadd.d f22, f26, f16, f10, rne # perform operation
fnmadd.d f22, f26, f16, f10, rtz # perform operation
fnmadd.d f22, f26, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f26, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f26, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f26, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f26, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f26, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x15, 0x2308a44138cc75ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x2ca60c2a54fdf343 # load x3 with value 0x2ca60c2a54fdf343
sd x3, 0(x2) # store 0x2ca60c2a54fdf343 in memory
fld f29, 0(x2) # load 0x2ca60c2a54fdf343 from memory into f29
fnmadd.d f15, f7, f25, f29, dyn # perform operation
fnmadd.d f15, f7, f25, f29, rdn # perform operation
fnmadd.d f15, f7, f25, f29, rmm # perform operation
fnmadd.d f15, f7, f25, f29, rne # perform operation
fnmadd.d f15, f7, f25, f29, rtz # perform operation
fnmadd.d f15, f7, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x31, 0x0208005a2c1aecb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x02a4028f6d5d8b97 # load x3 with value 0x02a4028f6d5d8b97
sd x3, 0(x2) # store 0x02a4028f6d5d8b97 in memory
fld f5, 0(x2) # load 0x02a4028f6d5d8b97 from memory into f5
fnmadd.d f31, f6, f24, f5, dyn # perform operation
fnmadd.d f31, f6, f24, f5, rdn # perform operation
fnmadd.d f31, f6, f24, f5, rmm # perform operation
fnmadd.d f31, f6, f24, f5, rne # perform operation
fnmadd.d f31, f6, f24, f5, rtz # perform operation
fnmadd.d f31, f6, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x16, 0xe91f76d7a5465bd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x1b681e0d9309c4fd # load x3 with value 0x1b681e0d9309c4fd
sd x3, 0(x2) # store 0x1b681e0d9309c4fd in memory
fld f22, 0(x2) # load 0x1b681e0d9309c4fd from memory into f22
fnmadd.d f16, f15, f19, f22, dyn # perform operation
fnmadd.d f16, f15, f19, f22, rdn # perform operation
fnmadd.d f16, f15, f19, f22, rmm # perform operation
fnmadd.d f16, f15, f19, f22, rne # perform operation
fnmadd.d f16, f15, f19, f22, rtz # perform operation
fnmadd.d f16, f15, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f15, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f15, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x8, 0xf7165259754f1932 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xfc711b0cdbc97f37 # load x3 with value 0xfc711b0cdbc97f37
sd x3, 0(x2) # store 0xfc711b0cdbc97f37 in memory
fld f28, 0(x2) # load 0xfc711b0cdbc97f37 from memory into f28
fnmadd.d f8, f22, f29, f28, dyn # perform operation
fnmadd.d f8, f22, f29, f28, rdn # perform operation
fnmadd.d f8, f22, f29, f28, rmm # perform operation
fnmadd.d f8, f22, f29, f28, rne # perform operation
fnmadd.d f8, f22, f29, f28, rtz # perform operation
fnmadd.d f8, f22, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f22, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f22, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f22, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f22, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f22, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x27, 0xd7b2c6486615c3f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xda26cae971dcb4b3 # load x3 with value 0xda26cae971dcb4b3
sd x3, 0(x2) # store 0xda26cae971dcb4b3 in memory
fld f18, 0(x2) # load 0xda26cae971dcb4b3 from memory into f18
fnmadd.d f27, f6, f24, f18, dyn # perform operation
fnmadd.d f27, f6, f24, f18, rdn # perform operation
fnmadd.d f27, f6, f24, f18, rmm # perform operation
fnmadd.d f27, f6, f24, f18, rne # perform operation
fnmadd.d f27, f6, f24, f18, rtz # perform operation
fnmadd.d f27, f6, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x22, 0x64bb959dba1b1828 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x2dd8da5521c6b288 # load x3 with value 0x2dd8da5521c6b288
sd x3, 0(x2) # store 0x2dd8da5521c6b288 in memory
fld f28, 0(x2) # load 0x2dd8da5521c6b288 from memory into f28
fnmadd.d f22, f14, f16, f28, dyn # perform operation
fnmadd.d f22, f14, f16, f28, rdn # perform operation
fnmadd.d f22, f14, f16, f28, rmm # perform operation
fnmadd.d f22, f14, f16, f28, rne # perform operation
fnmadd.d f22, f14, f16, f28, rtz # perform operation
fnmadd.d f22, f14, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f14, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x2, 0xc16e298605752609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xa63cbaa1e53bf1b1 # load x3 with value 0xa63cbaa1e53bf1b1
sd x3, 0(x2) # store 0xa63cbaa1e53bf1b1 in memory
fld f23, 0(x2) # load 0xa63cbaa1e53bf1b1 from memory into f23
fnmadd.d f2, f26, f15, f23, dyn # perform operation
fnmadd.d f2, f26, f15, f23, rdn # perform operation
fnmadd.d f2, f26, f15, f23, rmm # perform operation
fnmadd.d f2, f26, f15, f23, rne # perform operation
fnmadd.d f2, f26, f15, f23, rtz # perform operation
fnmadd.d f2, f26, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f26, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x4, 0x196474d3a845d9cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x110c72aae894eab9 # load x3 with value 0x110c72aae894eab9
sd x3, 0(x2) # store 0x110c72aae894eab9 in memory
fld f13, 0(x2) # load 0x110c72aae894eab9 from memory into f13
fnmadd.d f4, f6, f23, f13, dyn # perform operation
fnmadd.d f4, f6, f23, f13, rdn # perform operation
fnmadd.d f4, f6, f23, f13, rmm # perform operation
fnmadd.d f4, f6, f23, f13, rne # perform operation
fnmadd.d f4, f6, f23, f13, rtz # perform operation
fnmadd.d f4, f6, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f6, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x13, 0x59223d9d205b9bea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x9db7a6b1ea6d8ada # load x3 with value 0x9db7a6b1ea6d8ada
sd x3, 0(x2) # store 0x9db7a6b1ea6d8ada in memory
fld f29, 0(x2) # load 0x9db7a6b1ea6d8ada from memory into f29
fnmadd.d f13, f16, f1, f29, dyn # perform operation
fnmadd.d f13, f16, f1, f29, rdn # perform operation
fnmadd.d f13, f16, f1, f29, rmm # perform operation
fnmadd.d f13, f16, f1, f29, rne # perform operation
fnmadd.d f13, f16, f1, f29, rtz # perform operation
fnmadd.d f13, f16, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f16, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x23, 0x7d4e754bd36bb9a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x5af0990d112cbe93 # load x3 with value 0x5af0990d112cbe93
sd x3, 0(x2) # store 0x5af0990d112cbe93 in memory
fld f13, 0(x2) # load 0x5af0990d112cbe93 from memory into f13
fnmadd.d f23, f5, f19, f13, dyn # perform operation
fnmadd.d f23, f5, f19, f13, rdn # perform operation
fnmadd.d f23, f5, f19, f13, rmm # perform operation
fnmadd.d f23, f5, f19, f13, rne # perform operation
fnmadd.d f23, f5, f19, f13, rtz # perform operation
fnmadd.d f23, f5, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f5, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x16, 0x29d280ba94163c04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0xcb0db6aa500b8347 # load x3 with value 0xcb0db6aa500b8347
sd x3, 0(x2) # store 0xcb0db6aa500b8347 in memory
fld f5, 0(x2) # load 0xcb0db6aa500b8347 from memory into f5
fnmadd.d f16, f22, f8, f5, dyn # perform operation
fnmadd.d f16, f22, f8, f5, rdn # perform operation
fnmadd.d f16, f22, f8, f5, rmm # perform operation
fnmadd.d f16, f22, f8, f5, rne # perform operation
fnmadd.d f16, f22, f8, f5, rtz # perform operation
fnmadd.d f16, f22, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x23, 0x348025aed6b2abed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x983591ae7ef7cf02 # load x3 with value 0x983591ae7ef7cf02
sd x3, 0(x2) # store 0x983591ae7ef7cf02 in memory
fld f7, 0(x2) # load 0x983591ae7ef7cf02 from memory into f7
fnmadd.d f23, f19, f13, f7, dyn # perform operation
fnmadd.d f23, f19, f13, f7, rdn # perform operation
fnmadd.d f23, f19, f13, f7, rmm # perform operation
fnmadd.d f23, f19, f13, f7, rne # perform operation
fnmadd.d f23, f19, f13, f7, rtz # perform operation
fnmadd.d f23, f19, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x27, 0xee385c5d06fa508f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0xf44a4ab23b11773f # load x3 with value 0xf44a4ab23b11773f
sd x3, 0(x2) # store 0xf44a4ab23b11773f in memory
fld f12, 0(x2) # load 0xf44a4ab23b11773f from memory into f12
fnmadd.d f27, f17, f25, f12, dyn # perform operation
fnmadd.d f27, f17, f25, f12, rdn # perform operation
fnmadd.d f27, f17, f25, f12, rmm # perform operation
fnmadd.d f27, f17, f25, f12, rne # perform operation
fnmadd.d f27, f17, f25, f12, rtz # perform operation
fnmadd.d f27, f17, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f17, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f17, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x21, 0x7e51eeed60e458d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x274ec392cb98b799 # load x3 with value 0x274ec392cb98b799
sd x3, 0(x2) # store 0x274ec392cb98b799 in memory
fld f28, 0(x2) # load 0x274ec392cb98b799 from memory into f28
fnmadd.d f21, f17, f6, f28, dyn # perform operation
fnmadd.d f21, f17, f6, f28, rdn # perform operation
fnmadd.d f21, f17, f6, f28, rmm # perform operation
fnmadd.d f21, f17, f6, f28, rne # perform operation
fnmadd.d f21, f17, f6, f28, rtz # perform operation
fnmadd.d f21, f17, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f17, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f17, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f17, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f17, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f17, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x16, 0x4ddc4996c7fcddcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x4e777e68d327b4b7 # load x3 with value 0x4e777e68d327b4b7
sd x3, 0(x2) # store 0x4e777e68d327b4b7 in memory
fld f26, 0(x2) # load 0x4e777e68d327b4b7 from memory into f26
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fnmadd.d f16, f4, f26, f15, dyn # perform operation
fnmadd.d f16, f4, f26, f15, rdn # perform operation
fnmadd.d f16, f4, f26, f15, rmm # perform operation
fnmadd.d f16, f4, f26, f15, rne # perform operation
fnmadd.d f16, f4, f26, f15, rtz # perform operation
fnmadd.d f16, f4, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f4, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f4, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f4, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f4, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f4, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000000)
li x7, 0x602a080e4958def1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x2114552be75ae75d # load x3 with value 0x2114552be75ae75d
sd x3, 0(x2) # store 0x2114552be75ae75d in memory
fld f21, 0(x2) # load 0x2114552be75ae75d from memory into f21
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fnmadd.d f7, f30, f21, f18, dyn # perform operation
fnmadd.d f7, f30, f21, f18, rdn # perform operation
fnmadd.d f7, f30, f21, f18, rmm # perform operation
fnmadd.d f7, f30, f21, f18, rne # perform operation
fnmadd.d f7, f30, f21, f18, rtz # perform operation
fnmadd.d f7, f30, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f30, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f30, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f30, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f30, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f30, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff0000000000000)
li x25, 0x1b5c79a4ef6065ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0xab9303d408746711 # load x3 with value 0xab9303d408746711
sd x3, 0(x2) # store 0xab9303d408746711 in memory
fld f18, 0(x2) # load 0xab9303d408746711 from memory into f18
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fnmadd.d f25, f14, f18, f12, dyn # perform operation
fnmadd.d f25, f14, f18, f12, rdn # perform operation
fnmadd.d f25, f14, f18, f12, rmm # perform operation
fnmadd.d f25, f14, f18, f12, rne # perform operation
fnmadd.d f25, f14, f18, f12, rtz # perform operation
fnmadd.d f25, f14, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff0000000000000)
li x4, 0xfe1c92b1cd312a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x50e3f471e054f991 # load x3 with value 0x50e3f471e054f991
sd x3, 0(x2) # store 0x50e3f471e054f991 in memory
fld f19, 0(x2) # load 0x50e3f471e054f991 from memory into f19
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f4, f2, f19, f22, dyn # perform operation
fnmadd.d f4, f2, f19, f22, rdn # perform operation
fnmadd.d f4, f2, f19, f22, rmm # perform operation
fnmadd.d f4, f2, f19, f22, rne # perform operation
fnmadd.d f4, f2, f19, f22, rtz # perform operation
fnmadd.d f4, f2, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f2, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff8000000000000)
li x16, 0x14a0f1851ccf4528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xfbfc4ed8aa072ff4 # load x3 with value 0xfbfc4ed8aa072ff4
sd x3, 0(x2) # store 0xfbfc4ed8aa072ff4 in memory
fld f13, 0(x2) # load 0xfbfc4ed8aa072ff4 from memory into f13
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fnmadd.d f16, f25, f13, f8, dyn # perform operation
fnmadd.d f16, f25, f13, f8, rdn # perform operation
fnmadd.d f16, f25, f13, f8, rmm # perform operation
fnmadd.d f16, f25, f13, f8, rne # perform operation
fnmadd.d f16, f25, f13, f8, rtz # perform operation
fnmadd.d f16, f25, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f25, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff8000000000000)
li x12, 0xe2be315b42dacb8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x53a65cc04b049849 # load x3 with value 0x53a65cc04b049849
sd x3, 0(x2) # store 0x53a65cc04b049849 in memory
fld f10, 0(x2) # load 0x53a65cc04b049849 from memory into f10
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fnmadd.d f12, f1, f10, f28, dyn # perform operation
fnmadd.d f12, f1, f10, f28, rdn # perform operation
fnmadd.d f12, f1, f10, f28, rmm # perform operation
fnmadd.d f12, f1, f10, f28, rne # perform operation
fnmadd.d f12, f1, f10, f28, rtz # perform operation
fnmadd.d f12, f1, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f1, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f1, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f1, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f1, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f1, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000000000000000)
li x8, 0x95c4364c096976c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x31b168dec8f05756 # load x3 with value 0x31b168dec8f05756
sd x3, 0(x2) # store 0x31b168dec8f05756 in memory
fld f24, 0(x2) # load 0x31b168dec8f05756 from memory into f24
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fnmadd.d f8, f26, f24, f21, dyn # perform operation
fnmadd.d f8, f26, f24, f21, rdn # perform operation
fnmadd.d f8, f26, f24, f21, rmm # perform operation
fnmadd.d f8, f26, f24, f21, rne # perform operation
fnmadd.d f8, f26, f24, f21, rtz # perform operation
fnmadd.d f8, f26, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f26, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f26, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f26, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f26, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f26, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000000000000000)
li x28, 0x8d28223069a3d02d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xfbe399bf7f83712d # load x3 with value 0xfbe399bf7f83712d
sd x3, 0(x2) # store 0xfbe399bf7f83712d in memory
fld f6, 0(x2) # load 0xfbe399bf7f83712d from memory into f6
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmadd.d f28, f31, f6, f24, dyn # perform operation
fnmadd.d f28, f31, f6, f24, rdn # perform operation
fnmadd.d f28, f31, f6, f24, rmm # perform operation
fnmadd.d f28, f31, f6, f24, rne # perform operation
fnmadd.d f28, f31, f6, f24, rtz # perform operation
fnmadd.d f28, f31, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f31, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f31, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x10000000000000)
li x31, 0xcd67fdf4e1d1d848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0x3a296553669494db # load x3 with value 0x3a296553669494db
sd x3, 0(x2) # store 0x3a296553669494db in memory
fld f17, 0(x2) # load 0x3a296553669494db from memory into f17
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fnmadd.d f31, f18, f17, f29, dyn # perform operation
fnmadd.d f31, f18, f17, f29, rdn # perform operation
fnmadd.d f31, f18, f17, f29, rmm # perform operation
fnmadd.d f31, f18, f17, f29, rne # perform operation
fnmadd.d f31, f18, f17, f29, rtz # perform operation
fnmadd.d f31, f18, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f18, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8010000000000000)
li x18, 0xd66bdec811d164a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x03ee7a4d5fd2e14f # load x3 with value 0x03ee7a4d5fd2e14f
sd x3, 0(x2) # store 0x03ee7a4d5fd2e14f in memory
fld f22, 0(x2) # load 0x03ee7a4d5fd2e14f from memory into f22
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fnmadd.d f18, f29, f22, f25, dyn # perform operation
fnmadd.d f18, f29, f22, f25, rdn # perform operation
fnmadd.d f18, f29, f22, f25, rmm # perform operation
fnmadd.d f18, f29, f22, f25, rne # perform operation
fnmadd.d f18, f29, f22, f25, rtz # perform operation
fnmadd.d f18, f29, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fefffffffffffff)
li x31, 0xf46d74f9ca2cce70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0xfd1c785d914afab6 # load x3 with value 0xfd1c785d914afab6
sd x3, 0(x2) # store 0xfd1c785d914afab6 in memory
fld f22, 0(x2) # load 0xfd1c785d914afab6 from memory into f22
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fnmadd.d f31, f15, f22, f5, dyn # perform operation
fnmadd.d f31, f15, f22, f5, rdn # perform operation
fnmadd.d f31, f15, f22, f5, rmm # perform operation
fnmadd.d f31, f15, f22, f5, rne # perform operation
fnmadd.d f31, f15, f22, f5, rtz # perform operation
fnmadd.d f31, f15, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f15, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f15, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f15, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f15, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f15, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffefffffffffffff)
li x9, 0x75529b3792f43f3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x0b0e51273ef8a5d9 # load x3 with value 0x0b0e51273ef8a5d9
sd x3, 0(x2) # store 0x0b0e51273ef8a5d9 in memory
fld f31, 0(x2) # load 0x0b0e51273ef8a5d9 from memory into f31
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fnmadd.d f9, f1, f31, f2, dyn # perform operation
fnmadd.d f9, f1, f31, f2, rdn # perform operation
fnmadd.d f9, f1, f31, f2, rmm # perform operation
fnmadd.d f9, f1, f31, f2, rne # perform operation
fnmadd.d f9, f1, f31, f2, rtz # perform operation
fnmadd.d f9, f1, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f1, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f1, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfffffffffffff)
li x15, 0x2b393f1579003421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xf2fdd0c5db9ef426 # load x3 with value 0xf2fdd0c5db9ef426
sd x3, 0(x2) # store 0xf2fdd0c5db9ef426 in memory
fld f22, 0(x2) # load 0xf2fdd0c5db9ef426 from memory into f22
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fnmadd.d f15, f8, f22, f4, dyn # perform operation
fnmadd.d f15, f8, f22, f4, rdn # perform operation
fnmadd.d f15, f8, f22, f4, rmm # perform operation
fnmadd.d f15, f8, f22, f4, rne # perform operation
fnmadd.d f15, f8, f22, f4, rtz # perform operation
fnmadd.d f15, f8, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f8, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800fffffffffffff)
li x28, 0xc8324d231ca192c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x6d12960260e4bf2b # load x3 with value 0x6d12960260e4bf2b
sd x3, 0(x2) # store 0x6d12960260e4bf2b in memory
fld f2, 0(x2) # load 0x6d12960260e4bf2b from memory into f2
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fnmadd.d f28, f7, f2, f25, dyn # perform operation
fnmadd.d f28, f7, f2, f25, rdn # perform operation
fnmadd.d f28, f7, f2, f25, rmm # perform operation
fnmadd.d f28, f7, f2, f25, rne # perform operation
fnmadd.d f28, f7, f2, f25, rtz # perform operation
fnmadd.d f28, f7, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000)
li x13, 0x055af22cac2bc44d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x3513468b12f6ee75 # load x3 with value 0x3513468b12f6ee75
sd x3, 0(x2) # store 0x3513468b12f6ee75 in memory
fld f21, 0(x2) # load 0x3513468b12f6ee75 from memory into f21
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fnmadd.d f13, f27, f21, f5, dyn # perform operation
fnmadd.d f13, f27, f21, f5, rdn # perform operation
fnmadd.d f13, f27, f21, f5, rmm # perform operation
fnmadd.d f13, f27, f21, f5, rne # perform operation
fnmadd.d f13, f27, f21, f5, rtz # perform operation
fnmadd.d f13, f27, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f27, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8008000000000000)
li x14, 0x5d2b484f4c7a0a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xb9cf11dd84ec1ffd # load x3 with value 0xb9cf11dd84ec1ffd
sd x3, 0(x2) # store 0xb9cf11dd84ec1ffd in memory
fld f12, 0(x2) # load 0xb9cf11dd84ec1ffd from memory into f12
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fnmadd.d f14, f26, f12, f18, dyn # perform operation
fnmadd.d f14, f26, f12, f18, rdn # perform operation
fnmadd.d f14, f26, f12, f18, rmm # perform operation
fnmadd.d f14, f26, f12, f18, rne # perform operation
fnmadd.d f14, f26, f12, f18, rtz # perform operation
fnmadd.d f14, f26, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f26, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x2, 0x0fd17d2a768610b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x15d9562bffc3920c # load x3 with value 0x15d9562bffc3920c
sd x3, 0(x2) # store 0x15d9562bffc3920c in memory
fld f1, 0(x2) # load 0x15d9562bffc3920c from memory into f1
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f2, f25, f1, f12, dyn # perform operation
fnmadd.d f2, f25, f1, f12, rdn # perform operation
fnmadd.d f2, f25, f1, f12, rmm # perform operation
fnmadd.d f2, f25, f1, f12, rne # perform operation
fnmadd.d f2, f25, f1, f12, rtz # perform operation
fnmadd.d f2, f25, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f25, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f25, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f25, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f25, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f25, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000001)
li x11, 0xfa4c35b274d7936d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0xaf2e5c2ba5b811c6 # load x3 with value 0xaf2e5c2ba5b811c6
sd x3, 0(x2) # store 0xaf2e5c2ba5b811c6 in memory
fld f20, 0(x2) # load 0xaf2e5c2ba5b811c6 from memory into f20
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fnmadd.d f11, f28, f20, f30, dyn # perform operation
fnmadd.d f11, f28, f20, f30, rdn # perform operation
fnmadd.d f11, f28, f20, f30, rmm # perform operation
fnmadd.d f11, f28, f20, f30, rne # perform operation
fnmadd.d f11, f28, f20, f30, rtz # perform operation
fnmadd.d f11, f28, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f28, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f28, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f28, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f28, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f28, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000000)
li x6, 0x6354233f35b188f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x38eb9c9e6cf70c01 # load x3 with value 0x38eb9c9e6cf70c01
sd x3, 0(x2) # store 0x38eb9c9e6cf70c01 in memory
fld f1, 0(x2) # load 0x38eb9c9e6cf70c01 from memory into f1
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fnmadd.d f6, f8, f1, f2, dyn # perform operation
fnmadd.d f6, f8, f1, f2, rdn # perform operation
fnmadd.d f6, f8, f1, f2, rmm # perform operation
fnmadd.d f6, f8, f1, f2, rne # perform operation
fnmadd.d f6, f8, f1, f2, rtz # perform operation
fnmadd.d f6, f8, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfff0000000000000)
li x13, 0x9513d0e0533c41ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x3da761f92151c2de # load x3 with value 0x3da761f92151c2de
sd x3, 0(x2) # store 0x3da761f92151c2de in memory
fld f29, 0(x2) # load 0x3da761f92151c2de from memory into f29
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
fnmadd.d f13, f19, f29, f8, dyn # perform operation
fnmadd.d f13, f19, f29, f8, rdn # perform operation
fnmadd.d f13, f19, f29, f8, rmm # perform operation
fnmadd.d f13, f19, f29, f8, rne # perform operation
fnmadd.d f13, f19, f29, f8, rtz # perform operation
fnmadd.d f13, f19, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff8000000000000)
li x8, 0x76a89842555819eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0xc7df614c05d8ed1b # load x3 with value 0xc7df614c05d8ed1b
sd x3, 0(x2) # store 0xc7df614c05d8ed1b in memory
fld f23, 0(x2) # load 0xc7df614c05d8ed1b from memory into f23
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fnmadd.d f8, f7, f23, f14, dyn # perform operation
fnmadd.d f8, f7, f23, f14, rdn # perform operation
fnmadd.d f8, f7, f23, f14, rmm # perform operation
fnmadd.d f8, f7, f23, f14, rne # perform operation
fnmadd.d f8, f7, f23, f14, rtz # perform operation
fnmadd.d f8, f7, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f7, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f7, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f7, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f7, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f7, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffffffffffff)
li x17, 0x6e4536b3e17ce066 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xa9dd28e4e1d1e135 # load x3 with value 0xa9dd28e4e1d1e135
sd x3, 0(x2) # store 0xa9dd28e4e1d1e135 in memory
fld f6, 0(x2) # load 0xa9dd28e4e1d1e135 from memory into f6
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fnmadd.d f17, f8, f6, f16, dyn # perform operation
fnmadd.d f17, f8, f6, f16, rdn # perform operation
fnmadd.d f17, f8, f6, f16, rmm # perform operation
fnmadd.d f17, f8, f6, f16, rne # perform operation
fnmadd.d f17, f8, f6, f16, rtz # perform operation
fnmadd.d f17, f8, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000001)
li x18, 0xb614f5fa3ee7993c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x87732c32292a447d # load x3 with value 0x87732c32292a447d
sd x3, 0(x2) # store 0x87732c32292a447d in memory
fld f20, 0(x2) # load 0x87732c32292a447d from memory into f20
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fnmadd.d f18, f9, f20, f22, dyn # perform operation
fnmadd.d f18, f9, f20, f22, rdn # perform operation
fnmadd.d f18, f9, f20, f22, rmm # perform operation
fnmadd.d f18, f9, f20, f22, rne # perform operation
fnmadd.d f18, f9, f20, f22, rtz # perform operation
fnmadd.d f18, f9, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f9, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff7ffffffffffff)
li x15, 0x17ab6a55734d6250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x1fe15bf3f9798583 # load x3 with value 0x1fe15bf3f9798583
sd x3, 0(x2) # store 0x1fe15bf3f9798583 in memory
fld f6, 0(x2) # load 0x1fe15bf3f9798583 from memory into f6
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fnmadd.d f15, f7, f6, f9, dyn # perform operation
fnmadd.d f15, f7, f6, f9, rdn # perform operation
fnmadd.d f15, f7, f6, f9, rmm # perform operation
fnmadd.d f15, f7, f6, f9, rne # perform operation
fnmadd.d f15, f7, f6, f9, rtz # perform operation
fnmadd.d f15, f7, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x5a392534a57711ad)
li x1, 0xc9e3378663b1c3be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x4382272e6415cd46 # load x3 with value 0x4382272e6415cd46
sd x3, 0(x2) # store 0x4382272e6415cd46 in memory
fld f19, 0(x2) # load 0x4382272e6415cd46 from memory into f19
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fnmadd.d f1, f22, f19, f4, dyn # perform operation
fnmadd.d f1, f22, f19, f4, rdn # perform operation
fnmadd.d f1, f22, f19, f4, rmm # perform operation
fnmadd.d f1, f22, f19, f4, rne # perform operation
fnmadd.d f1, f22, f19, f4, rtz # perform operation
fnmadd.d f1, f22, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f22, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xa6e895993737426c)
li x26, 0x4678a159d177638e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x528203da3d4b9b23 # load x3 with value 0x528203da3d4b9b23
sd x3, 0(x2) # store 0x528203da3d4b9b23 in memory
fld f16, 0(x2) # load 0x528203da3d4b9b23 from memory into f16
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fnmadd.d f26, f13, f16, f30, dyn # perform operation
fnmadd.d f26, f13, f16, f30, rdn # perform operation
fnmadd.d f26, f13, f16, f30, rmm # perform operation
fnmadd.d f26, f13, f16, f30, rne # perform operation
fnmadd.d f26, f13, f16, f30, rtz # perform operation
fnmadd.d f26, f13, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f13, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x0)
li x22, 0xd539d64613377117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x130eee3afd77ed70 # load x3 with value 0x130eee3afd77ed70
sd x3, 0(x2) # store 0x130eee3afd77ed70 in memory
fld f20, 0(x2) # load 0x130eee3afd77ed70 from memory into f20
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fnmadd.d f22, f4, f20, f5, dyn # perform operation
fnmadd.d f22, f4, f20, f5, rdn # perform operation
fnmadd.d f22, f4, f20, f5, rmm # perform operation
fnmadd.d f22, f4, f20, f5, rne # perform operation
fnmadd.d f22, f4, f20, f5, rtz # perform operation
fnmadd.d f22, f4, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f4, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f4, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f4, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f4, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f4, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000000)
li x24, 0xa36db616c5f1f187 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x6937323c9aecb0a1 # load x3 with value 0x6937323c9aecb0a1
sd x3, 0(x2) # store 0x6937323c9aecb0a1 in memory
fld f1, 0(x2) # load 0x6937323c9aecb0a1 from memory into f1
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmadd.d f24, f9, f1, f4, dyn # perform operation
fnmadd.d f24, f9, f1, f4, rdn # perform operation
fnmadd.d f24, f9, f1, f4, rmm # perform operation
fnmadd.d f24, f9, f1, f4, rne # perform operation
fnmadd.d f24, f9, f1, f4, rtz # perform operation
fnmadd.d f24, f9, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f9, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f9, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f9, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f9, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f9, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff0000000000000)
li x24, 0x6b9aeb5b3659a583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x905bbb5259b8eedd # load x3 with value 0x905bbb5259b8eedd
sd x3, 0(x2) # store 0x905bbb5259b8eedd in memory
fld f28, 0(x2) # load 0x905bbb5259b8eedd from memory into f28
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmadd.d f24, f25, f28, f13, dyn # perform operation
fnmadd.d f24, f25, f28, f13, rdn # perform operation
fnmadd.d f24, f25, f28, f13, rmm # perform operation
fnmadd.d f24, f25, f28, f13, rne # perform operation
fnmadd.d f24, f25, f28, f13, rtz # perform operation
fnmadd.d f24, f25, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f25, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f25, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f25, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f25, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f25, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff0000000000000)
li x16, 0x5767bcbc5361baed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0x7b3283e104265d48 # load x3 with value 0x7b3283e104265d48
sd x3, 0(x2) # store 0x7b3283e104265d48 in memory
fld f4, 0(x2) # load 0x7b3283e104265d48 from memory into f4
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fnmadd.d f16, f8, f4, f30, dyn # perform operation
fnmadd.d f16, f8, f4, f30, rdn # perform operation
fnmadd.d f16, f8, f4, f30, rmm # perform operation
fnmadd.d f16, f8, f4, f30, rne # perform operation
fnmadd.d f16, f8, f4, f30, rtz # perform operation
fnmadd.d f16, f8, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f8, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff8000000000000)
li x18, 0xf28e71b19f6ebdfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0xb45577a42dda4abe # load x3 with value 0xb45577a42dda4abe
sd x3, 0(x2) # store 0xb45577a42dda4abe in memory
fld f15, 0(x2) # load 0xb45577a42dda4abe from memory into f15
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fnmadd.d f18, f3, f15, f21, dyn # perform operation
fnmadd.d f18, f3, f15, f21, rdn # perform operation
fnmadd.d f18, f3, f15, f21, rmm # perform operation
fnmadd.d f18, f3, f15, f21, rne # perform operation
fnmadd.d f18, f3, f15, f21, rtz # perform operation
fnmadd.d f18, f3, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f3, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff8000000000000)
li x16, 0x98a5101d4830d123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x6929c1333b992086 # load x3 with value 0x6929c1333b992086
sd x3, 0(x2) # store 0x6929c1333b992086 in memory
fld f9, 0(x2) # load 0x6929c1333b992086 from memory into f9
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fnmadd.d f16, f17, f9, f31, dyn # perform operation
fnmadd.d f16, f17, f9, f31, rdn # perform operation
fnmadd.d f16, f17, f9, f31, rmm # perform operation
fnmadd.d f16, f17, f9, f31, rne # perform operation
fnmadd.d f16, f17, f9, f31, rtz # perform operation
fnmadd.d f16, f17, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f17, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f17, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f17, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f17, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f17, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x4000000000000000)
li x28, 0xd30d9dc53241e886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0xa0cb8e1d6522129b # load x3 with value 0xa0cb8e1d6522129b
sd x3, 0(x2) # store 0xa0cb8e1d6522129b in memory
fld f15, 0(x2) # load 0xa0cb8e1d6522129b from memory into f15
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmadd.d f28, f6, f15, f2, dyn # perform operation
fnmadd.d f28, f6, f15, f2, rdn # perform operation
fnmadd.d f28, f6, f15, f2, rmm # perform operation
fnmadd.d f28, f6, f15, f2, rne # perform operation
fnmadd.d f28, f6, f15, f2, rtz # perform operation
fnmadd.d f28, f6, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f6, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xc000000000000000)
li x21, 0xc772067ce0b5c6bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x310c432db4925606 # load x3 with value 0x310c432db4925606
sd x3, 0(x2) # store 0x310c432db4925606 in memory
fld f8, 0(x2) # load 0x310c432db4925606 from memory into f8
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fnmadd.d f21, f18, f8, f28, dyn # perform operation
fnmadd.d f21, f18, f8, f28, rdn # perform operation
fnmadd.d f21, f18, f8, f28, rmm # perform operation
fnmadd.d f21, f18, f8, f28, rne # perform operation
fnmadd.d f21, f18, f8, f28, rtz # perform operation
fnmadd.d f21, f18, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f18, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f18, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f18, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f18, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f18, f8, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x10000000000000)
li x25, 0xf55e9c00c5321be6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xa0b9af854fddbaa2 # load x3 with value 0xa0b9af854fddbaa2
sd x3, 0(x2) # store 0xa0b9af854fddbaa2 in memory
fld f11, 0(x2) # load 0xa0b9af854fddbaa2 from memory into f11
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fnmadd.d f25, f26, f11, f10, dyn # perform operation
fnmadd.d f25, f26, f11, f10, rdn # perform operation
fnmadd.d f25, f26, f11, f10, rmm # perform operation
fnmadd.d f25, f26, f11, f10, rne # perform operation
fnmadd.d f25, f26, f11, f10, rtz # perform operation
fnmadd.d f25, f26, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f26, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8010000000000000)
li x9, 0x03c92e2d130de875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0x353f3e7e2dcea465 # load x3 with value 0x353f3e7e2dcea465
sd x3, 0(x2) # store 0x353f3e7e2dcea465 in memory
fld f14, 0(x2) # load 0x353f3e7e2dcea465 from memory into f14
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fnmadd.d f9, f13, f14, f18, dyn # perform operation
fnmadd.d f9, f13, f14, f18, rdn # perform operation
fnmadd.d f9, f13, f14, f18, rmm # perform operation
fnmadd.d f9, f13, f14, f18, rne # perform operation
fnmadd.d f9, f13, f14, f18, rtz # perform operation
fnmadd.d f9, f13, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f13, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f13, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fefffffffffffff)
li x7, 0x90f8ffe52a5bc155 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xb54e594e9ebba850 # load x3 with value 0xb54e594e9ebba850
sd x3, 0(x2) # store 0xb54e594e9ebba850 in memory
fld f2, 0(x2) # load 0xb54e594e9ebba850 from memory into f2
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fnmadd.d f7, f10, f2, f17, dyn # perform operation
fnmadd.d f7, f10, f2, f17, rdn # perform operation
fnmadd.d f7, f10, f2, f17, rmm # perform operation
fnmadd.d f7, f10, f2, f17, rne # perform operation
fnmadd.d f7, f10, f2, f17, rtz # perform operation
fnmadd.d f7, f10, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f10, f2, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xffefffffffffffff)
li x10, 0x615aef1cd4f01985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x4f3a46361dc8b7b3 # load x3 with value 0x4f3a46361dc8b7b3
sd x3, 0(x2) # store 0x4f3a46361dc8b7b3 in memory
fld f13, 0(x2) # load 0x4f3a46361dc8b7b3 from memory into f13
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
fnmadd.d f10, f14, f13, f12, dyn # perform operation
fnmadd.d f10, f14, f13, f12, rdn # perform operation
fnmadd.d f10, f14, f13, f12, rmm # perform operation
fnmadd.d f10, f14, f13, f12, rne # perform operation
fnmadd.d f10, f14, f13, f12, rtz # perform operation
fnmadd.d f10, f14, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f14, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfffffffffffff)
li x30, 0x95b7f6ac5f6c945f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x0661082f36de4a56 # load x3 with value 0x0661082f36de4a56
sd x3, 0(x2) # store 0x0661082f36de4a56 in memory
fld f19, 0(x2) # load 0x0661082f36de4a56 from memory into f19
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmadd.d f30, f10, f19, f21, dyn # perform operation
fnmadd.d f30, f10, f19, f21, rdn # perform operation
fnmadd.d f30, f10, f19, f21, rmm # perform operation
fnmadd.d f30, f10, f19, f21, rne # perform operation
fnmadd.d f30, f10, f19, f21, rtz # perform operation
fnmadd.d f30, f10, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f10, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x800fffffffffffff)
li x17, 0xce86e3a7faacb388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xaf6ff0c081a3e2ef # load x3 with value 0xaf6ff0c081a3e2ef
sd x3, 0(x2) # store 0xaf6ff0c081a3e2ef in memory
fld f24, 0(x2) # load 0xaf6ff0c081a3e2ef from memory into f24
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f17, f10, f24, f14, dyn # perform operation
fnmadd.d f17, f10, f24, f14, rdn # perform operation
fnmadd.d f17, f10, f24, f14, rmm # perform operation
fnmadd.d f17, f10, f24, f14, rne # perform operation
fnmadd.d f17, f10, f24, f14, rtz # perform operation
fnmadd.d f17, f10, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000)
li x23, 0x6c7ac39e5ce490ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x605806e4fb5d1840 # load x3 with value 0x605806e4fb5d1840
sd x3, 0(x2) # store 0x605806e4fb5d1840 in memory
fld f11, 0(x2) # load 0x605806e4fb5d1840 from memory into f11
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fnmadd.d f23, f27, f11, f16, dyn # perform operation
fnmadd.d f23, f27, f11, f16, rdn # perform operation
fnmadd.d f23, f27, f11, f16, rmm # perform operation
fnmadd.d f23, f27, f11, f16, rne # perform operation
fnmadd.d f23, f27, f11, f16, rtz # perform operation
fnmadd.d f23, f27, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f27, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f27, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f27, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f27, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f27, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8008000000000000)
li x26, 0x95e35a8cfafa2a23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x863bcb42f1086d5e # load x3 with value 0x863bcb42f1086d5e
sd x3, 0(x2) # store 0x863bcb42f1086d5e in memory
fld f25, 0(x2) # load 0x863bcb42f1086d5e from memory into f25
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fnmadd.d f26, f12, f25, f14, dyn # perform operation
fnmadd.d f26, f12, f25, f14, rdn # perform operation
fnmadd.d f26, f12, f25, f14, rmm # perform operation
fnmadd.d f26, f12, f25, f14, rne # perform operation
fnmadd.d f26, f12, f25, f14, rtz # perform operation
fnmadd.d f26, f12, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f12, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f12, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f12, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f12, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f12, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x1)
li x25, 0x7a5e528c45e4422f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x9dfe8812b425c490 # load x3 with value 0x9dfe8812b425c490
sd x3, 0(x2) # store 0x9dfe8812b425c490 in memory
fld f30, 0(x2) # load 0x9dfe8812b425c490 from memory into f30
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fnmadd.d f25, f18, f30, f1, dyn # perform operation
fnmadd.d f25, f18, f30, f1, rdn # perform operation
fnmadd.d f25, f18, f30, f1, rmm # perform operation
fnmadd.d f25, f18, f30, f1, rne # perform operation
fnmadd.d f25, f18, f30, f1, rtz # perform operation
fnmadd.d f25, f18, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f18, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000001)
li x16, 0xefac51ae7522e8ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x8104eb0819f63ec7 # load x3 with value 0x8104eb0819f63ec7
sd x3, 0(x2) # store 0x8104eb0819f63ec7 in memory
fld f1, 0(x2) # load 0x8104eb0819f63ec7 from memory into f1
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fnmadd.d f16, f22, f1, f3, dyn # perform operation
fnmadd.d f16, f22, f1, f3, rdn # perform operation
fnmadd.d f16, f22, f1, f3, rmm # perform operation
fnmadd.d f16, f22, f1, f3, rne # perform operation
fnmadd.d f16, f22, f1, f3, rtz # perform operation
fnmadd.d f16, f22, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000000)
li x25, 0x4a5310a99725629d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xfb08081e4f65921f # load x3 with value 0xfb08081e4f65921f
sd x3, 0(x2) # store 0xfb08081e4f65921f in memory
fld f11, 0(x2) # load 0xfb08081e4f65921f from memory into f11
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fnmadd.d f25, f7, f11, f21, dyn # perform operation
fnmadd.d f25, f7, f11, f21, rdn # perform operation
fnmadd.d f25, f7, f11, f21, rmm # perform operation
fnmadd.d f25, f7, f11, f21, rne # perform operation
fnmadd.d f25, f7, f11, f21, rtz # perform operation
fnmadd.d f25, f7, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f7, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f7, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfff0000000000000)
li x20, 0xd547756e594461de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x4308b4f6cad55a4b # load x3 with value 0x4308b4f6cad55a4b
sd x3, 0(x2) # store 0x4308b4f6cad55a4b in memory
fld f6, 0(x2) # load 0x4308b4f6cad55a4b from memory into f6
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fnmadd.d f20, f10, f6, f17, dyn # perform operation
fnmadd.d f20, f10, f6, f17, rdn # perform operation
fnmadd.d f20, f10, f6, f17, rmm # perform operation
fnmadd.d f20, f10, f6, f17, rne # perform operation
fnmadd.d f20, f10, f6, f17, rtz # perform operation
fnmadd.d f20, f10, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f10, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f10, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff8000000000000)
li x13, 0xe3888a7fd60cd72f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xa057865ab36fa40f # load x3 with value 0xa057865ab36fa40f
sd x3, 0(x2) # store 0xa057865ab36fa40f in memory
fld f1, 0(x2) # load 0xa057865ab36fa40f from memory into f1
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
fnmadd.d f13, f23, f1, f29, dyn # perform operation
fnmadd.d f13, f23, f1, f29, rdn # perform operation
fnmadd.d f13, f23, f1, f29, rmm # perform operation
fnmadd.d f13, f23, f1, f29, rne # perform operation
fnmadd.d f13, f23, f1, f29, rtz # perform operation
fnmadd.d f13, f23, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f23, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fffffffffffffff)
li x2, 0x5dd946afa42b86f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x6e944c1885a05d6e # load x3 with value 0x6e944c1885a05d6e
sd x3, 0(x2) # store 0x6e944c1885a05d6e in memory
fld f29, 0(x2) # load 0x6e944c1885a05d6e from memory into f29
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fnmadd.d f2, f19, f29, f22, dyn # perform operation
fnmadd.d f2, f19, f29, f22, rdn # perform operation
fnmadd.d f2, f19, f29, f22, rmm # perform operation
fnmadd.d f2, f19, f29, f22, rne # perform operation
fnmadd.d f2, f19, f29, f22, rtz # perform operation
fnmadd.d f2, f19, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000001)
li x11, 0x1aa905872acfce8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x3d7a832826d04f57 # load x3 with value 0x3d7a832826d04f57
sd x3, 0(x2) # store 0x3d7a832826d04f57 in memory
fld f27, 0(x2) # load 0x3d7a832826d04f57 from memory into f27
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fnmadd.d f11, f30, f27, f7, dyn # perform operation
fnmadd.d f11, f30, f27, f7, rdn # perform operation
fnmadd.d f11, f30, f27, f7, rmm # perform operation
fnmadd.d f11, f30, f27, f7, rne # perform operation
fnmadd.d f11, f30, f27, f7, rtz # perform operation
fnmadd.d f11, f30, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f30, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff7ffffffffffff)
li x5, 0x4a297967514337fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xa3496852cfb32d11 # load x3 with value 0xa3496852cfb32d11
sd x3, 0(x2) # store 0xa3496852cfb32d11 in memory
fld f14, 0(x2) # load 0xa3496852cfb32d11 from memory into f14
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fnmadd.d f5, f23, f14, f4, dyn # perform operation
fnmadd.d f5, f23, f14, f4, rdn # perform operation
fnmadd.d f5, f23, f14, f4, rmm # perform operation
fnmadd.d f5, f23, f14, f4, rne # perform operation
fnmadd.d f5, f23, f14, f4, rtz # perform operation
fnmadd.d f5, f23, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f23, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f23, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f23, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f23, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f23, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x5a392534a57711ad)
li x6, 0x0513cd148bc53673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xc3373b7c352668b9 # load x3 with value 0xc3373b7c352668b9
sd x3, 0(x2) # store 0xc3373b7c352668b9 in memory
fld f15, 0(x2) # load 0xc3373b7c352668b9 from memory into f15
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fnmadd.d f6, f16, f15, f28, dyn # perform operation
fnmadd.d f6, f16, f15, f28, rdn # perform operation
fnmadd.d f6, f16, f15, f28, rmm # perform operation
fnmadd.d f6, f16, f15, f28, rne # perform operation
fnmadd.d f6, f16, f15, f28, rtz # perform operation
fnmadd.d f6, f16, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xa6e895993737426c)
li x6, 0x2332243e3796e710 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x4fb8ceba2d026eea # load x3 with value 0x4fb8ceba2d026eea
sd x3, 0(x2) # store 0x4fb8ceba2d026eea in memory
fld f11, 0(x2) # load 0x4fb8ceba2d026eea from memory into f11
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fnmadd.d f6, f10, f11, f20, dyn # perform operation
fnmadd.d f6, f10, f11, f20, rdn # perform operation
fnmadd.d f6, f10, f11, f20, rmm # perform operation
fnmadd.d f6, f10, f11, f20, rne # perform operation
fnmadd.d f6, f10, f11, f20, rtz # perform operation
fnmadd.d f6, f10, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f10, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f10, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x0)
li x3, 0xf9f9cfd7bae73396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x215befe977f62f1c # load x3 with value 0x215befe977f62f1c
sd x3, 0(x2) # store 0x215befe977f62f1c in memory
fld f6, 0(x2) # load 0x215befe977f62f1c from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fnmadd.d f3, f4, f6, f29, dyn # perform operation
fnmadd.d f3, f4, f6, f29, rdn # perform operation
fnmadd.d f3, f4, f6, f29, rmm # perform operation
fnmadd.d f3, f4, f6, f29, rne # perform operation
fnmadd.d f3, f4, f6, f29, rtz # perform operation
fnmadd.d f3, f4, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f4, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f4, f6, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000000)
li x20, 0xc5ae26f0adf1399b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0xec3be0340629ecf5 # load x3 with value 0xec3be0340629ecf5
sd x3, 0(x2) # store 0xec3be0340629ecf5 in memory
fld f24, 0(x2) # load 0xec3be0340629ecf5 from memory into f24
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fnmadd.d f20, f14, f24, f25, dyn # perform operation
fnmadd.d f20, f14, f24, f25, rdn # perform operation
fnmadd.d f20, f14, f24, f25, rmm # perform operation
fnmadd.d f20, f14, f24, f25, rne # perform operation
fnmadd.d f20, f14, f24, f25, rtz # perform operation
fnmadd.d f20, f14, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f14, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f14, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff0000000000000)
li x11, 0xea543bc59a6cebf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x25c0372cc9f6c76e # load x3 with value 0x25c0372cc9f6c76e
sd x3, 0(x2) # store 0x25c0372cc9f6c76e in memory
fld f26, 0(x2) # load 0x25c0372cc9f6c76e from memory into f26
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmadd.d f11, f15, f26, f7, dyn # perform operation
fnmadd.d f11, f15, f26, f7, rdn # perform operation
fnmadd.d f11, f15, f26, f7, rmm # perform operation
fnmadd.d f11, f15, f26, f7, rne # perform operation
fnmadd.d f11, f15, f26, f7, rtz # perform operation
fnmadd.d f11, f15, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f15, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f15, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff0000000000000)
li x25, 0xa6b424bbc558190a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0xeca0fefdc6c9bf3b # load x3 with value 0xeca0fefdc6c9bf3b
sd x3, 0(x2) # store 0xeca0fefdc6c9bf3b in memory
fld f16, 0(x2) # load 0xeca0fefdc6c9bf3b from memory into f16
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fnmadd.d f25, f3, f16, f18, dyn # perform operation
fnmadd.d f25, f3, f16, f18, rdn # perform operation
fnmadd.d f25, f3, f16, f18, rmm # perform operation
fnmadd.d f25, f3, f16, f18, rne # perform operation
fnmadd.d f25, f3, f16, f18, rtz # perform operation
fnmadd.d f25, f3, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f3, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f3, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f3, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f3, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f3, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff8000000000000)
li x29, 0xfb3de56adae8ca3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xfdf134ba59a74bea # load x3 with value 0xfdf134ba59a74bea
sd x3, 0(x2) # store 0xfdf134ba59a74bea in memory
fld f16, 0(x2) # load 0xfdf134ba59a74bea from memory into f16
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fnmadd.d f29, f20, f16, f18, dyn # perform operation
fnmadd.d f29, f20, f16, f18, rdn # perform operation
fnmadd.d f29, f20, f16, f18, rmm # perform operation
fnmadd.d f29, f20, f16, f18, rne # perform operation
fnmadd.d f29, f20, f16, f18, rtz # perform operation
fnmadd.d f29, f20, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f20, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f20, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff8000000000000)
li x19, 0xa203220e65976912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x0cf41db9a49d6f6d # load x3 with value 0x0cf41db9a49d6f6d
sd x3, 0(x2) # store 0x0cf41db9a49d6f6d in memory
fld f29, 0(x2) # load 0x0cf41db9a49d6f6d from memory into f29
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmadd.d f19, f4, f29, f12, dyn # perform operation
fnmadd.d f19, f4, f29, f12, rdn # perform operation
fnmadd.d f19, f4, f29, f12, rmm # perform operation
fnmadd.d f19, f4, f29, f12, rne # perform operation
fnmadd.d f19, f4, f29, f12, rtz # perform operation
fnmadd.d f19, f4, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f4, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f4, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x4000000000000000)
li x13, 0xd54afddb3ee9d335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x53a25226ad45f4ed # load x3 with value 0x53a25226ad45f4ed
sd x3, 0(x2) # store 0x53a25226ad45f4ed in memory
fld f19, 0(x2) # load 0x53a25226ad45f4ed from memory into f19
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fnmadd.d f13, f18, f19, f1, dyn # perform operation
fnmadd.d f13, f18, f19, f1, rdn # perform operation
fnmadd.d f13, f18, f19, f1, rmm # perform operation
fnmadd.d f13, f18, f19, f1, rne # perform operation
fnmadd.d f13, f18, f19, f1, rtz # perform operation
fnmadd.d f13, f18, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f18, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xc000000000000000)
li x9, 0x1f0865a0a109e65a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x9e25e788b076e1d1 # load x3 with value 0x9e25e788b076e1d1
sd x3, 0(x2) # store 0x9e25e788b076e1d1 in memory
fld f2, 0(x2) # load 0x9e25e788b076e1d1 from memory into f2
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fnmadd.d f9, f25, f2, f10, dyn # perform operation
fnmadd.d f9, f25, f2, f10, rdn # perform operation
fnmadd.d f9, f25, f2, f10, rmm # perform operation
fnmadd.d f9, f25, f2, f10, rne # perform operation
fnmadd.d f9, f25, f2, f10, rtz # perform operation
fnmadd.d f9, f25, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f25, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f25, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x10000000000000)
li x3, 0xc166dafe9074b643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x1eb2f605ea282306 # load x3 with value 0x1eb2f605ea282306
sd x3, 0(x2) # store 0x1eb2f605ea282306 in memory
fld f28, 0(x2) # load 0x1eb2f605ea282306 from memory into f28
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fnmadd.d f3, f16, f28, f30, dyn # perform operation
fnmadd.d f3, f16, f28, f30, rdn # perform operation
fnmadd.d f3, f16, f28, f30, rmm # perform operation
fnmadd.d f3, f16, f28, f30, rne # perform operation
fnmadd.d f3, f16, f28, f30, rtz # perform operation
fnmadd.d f3, f16, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8010000000000000)
li x6, 0x2fc08a559aec44db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x04d5cd95ba75494f # load x3 with value 0x04d5cd95ba75494f
sd x3, 0(x2) # store 0x04d5cd95ba75494f in memory
fld f23, 0(x2) # load 0x04d5cd95ba75494f from memory into f23
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fnmadd.d f6, f16, f23, f3, dyn # perform operation
fnmadd.d f6, f16, f23, f3, rdn # perform operation
fnmadd.d f6, f16, f23, f3, rmm # perform operation
fnmadd.d f6, f16, f23, f3, rne # perform operation
fnmadd.d f6, f16, f23, f3, rtz # perform operation
fnmadd.d f6, f16, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fefffffffffffff)
li x25, 0xa9fc1d01b9bfbd8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x6a20e533de65484c # load x3 with value 0x6a20e533de65484c
sd x3, 0(x2) # store 0x6a20e533de65484c in memory
fld f10, 0(x2) # load 0x6a20e533de65484c from memory into f10
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fnmadd.d f25, f23, f10, f29, dyn # perform operation
fnmadd.d f25, f23, f10, f29, rdn # perform operation
fnmadd.d f25, f23, f10, f29, rmm # perform operation
fnmadd.d f25, f23, f10, f29, rne # perform operation
fnmadd.d f25, f23, f10, f29, rtz # perform operation
fnmadd.d f25, f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f23, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xffefffffffffffff)
li x24, 0xf3f539ea28ced54c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x586a2c9427063289 # load x3 with value 0x586a2c9427063289
sd x3, 0(x2) # store 0x586a2c9427063289 in memory
fld f2, 0(x2) # load 0x586a2c9427063289 from memory into f2
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fnmadd.d f24, f14, f2, f25, dyn # perform operation
fnmadd.d f24, f14, f2, f25, rdn # perform operation
fnmadd.d f24, f14, f2, f25, rmm # perform operation
fnmadd.d f24, f14, f2, f25, rne # perform operation
fnmadd.d f24, f14, f2, f25, rtz # perform operation
fnmadd.d f24, f14, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f14, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfffffffffffff)
li x16, 0x8019e6a7cfefefc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xf4cae645fe61da03 # load x3 with value 0xf4cae645fe61da03
sd x3, 0(x2) # store 0xf4cae645fe61da03 in memory
fld f7, 0(x2) # load 0xf4cae645fe61da03 from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fnmadd.d f16, f18, f7, f8, dyn # perform operation
fnmadd.d f16, f18, f7, f8, rdn # perform operation
fnmadd.d f16, f18, f7, f8, rmm # perform operation
fnmadd.d f16, f18, f7, f8, rne # perform operation
fnmadd.d f16, f18, f7, f8, rtz # perform operation
fnmadd.d f16, f18, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f18, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f18, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x800fffffffffffff)
li x17, 0x939e51058cc3cc0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x09ccc2a27a67e5f0 # load x3 with value 0x09ccc2a27a67e5f0
sd x3, 0(x2) # store 0x09ccc2a27a67e5f0 in memory
fld f2, 0(x2) # load 0x09ccc2a27a67e5f0 from memory into f2
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
fnmadd.d f17, f5, f2, f15, dyn # perform operation
fnmadd.d f17, f5, f2, f15, rdn # perform operation
fnmadd.d f17, f5, f2, f15, rmm # perform operation
fnmadd.d f17, f5, f2, f15, rne # perform operation
fnmadd.d f17, f5, f2, f15, rtz # perform operation
fnmadd.d f17, f5, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f5, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000)
li x25, 0x18a8feb15e078860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xc526122947281f95 # load x3 with value 0xc526122947281f95
sd x3, 0(x2) # store 0xc526122947281f95 in memory
fld f29, 0(x2) # load 0xc526122947281f95 from memory into f29
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fnmadd.d f25, f28, f29, f9, dyn # perform operation
fnmadd.d f25, f28, f29, f9, rdn # perform operation
fnmadd.d f25, f28, f29, f9, rmm # perform operation
fnmadd.d f25, f28, f29, f9, rne # perform operation
fnmadd.d f25, f28, f29, f9, rtz # perform operation
fnmadd.d f25, f28, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f28, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8008000000000000)
li x9, 0x049b1848be939a8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xbd67834f187f541b # load x3 with value 0xbd67834f187f541b
sd x3, 0(x2) # store 0xbd67834f187f541b in memory
fld f13, 0(x2) # load 0xbd67834f187f541b from memory into f13
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fnmadd.d f9, f5, f13, f19, dyn # perform operation
fnmadd.d f9, f5, f13, f19, rdn # perform operation
fnmadd.d f9, f5, f13, f19, rmm # perform operation
fnmadd.d f9, f5, f13, f19, rne # perform operation
fnmadd.d f9, f5, f13, f19, rtz # perform operation
fnmadd.d f9, f5, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f5, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x1)
li x12, 0x66ef512c8c58e408 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0x3fe4d45dd673b8e7 # load x3 with value 0x3fe4d45dd673b8e7
sd x3, 0(x2) # store 0x3fe4d45dd673b8e7 in memory
fld f27, 0(x2) # load 0x3fe4d45dd673b8e7 from memory into f27
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fnmadd.d f12, f20, f27, f22, dyn # perform operation
fnmadd.d f12, f20, f27, f22, rdn # perform operation
fnmadd.d f12, f20, f27, f22, rmm # perform operation
fnmadd.d f12, f20, f27, f22, rne # perform operation
fnmadd.d f12, f20, f27, f22, rtz # perform operation
fnmadd.d f12, f20, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f20, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f20, f27, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000001)
li x29, 0xf960c071ee9c656f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x56d0b375e0764040 # load x3 with value 0x56d0b375e0764040
sd x3, 0(x2) # store 0x56d0b375e0764040 in memory
fld f17, 0(x2) # load 0x56d0b375e0764040 from memory into f17
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fnmadd.d f29, f11, f17, f3, dyn # perform operation
fnmadd.d f29, f11, f17, f3, rdn # perform operation
fnmadd.d f29, f11, f17, f3, rmm # perform operation
fnmadd.d f29, f11, f17, f3, rne # perform operation
fnmadd.d f29, f11, f17, f3, rtz # perform operation
fnmadd.d f29, f11, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f11, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f11, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000000)
li x6, 0xa919910b55a51100 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xdf3f1b3367c83bdb # load x3 with value 0xdf3f1b3367c83bdb
sd x3, 0(x2) # store 0xdf3f1b3367c83bdb in memory
fld f29, 0(x2) # load 0xdf3f1b3367c83bdb from memory into f29
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fnmadd.d f6, f12, f29, f13, dyn # perform operation
fnmadd.d f6, f12, f29, f13, rdn # perform operation
fnmadd.d f6, f12, f29, f13, rmm # perform operation
fnmadd.d f6, f12, f29, f13, rne # perform operation
fnmadd.d f6, f12, f29, f13, rtz # perform operation
fnmadd.d f6, f12, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f12, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f12, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfff0000000000000)
li x15, 0x45b8f40998aecfea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0xaa776a729ceff9d6 # load x3 with value 0xaa776a729ceff9d6
sd x3, 0(x2) # store 0xaa776a729ceff9d6 in memory
fld f27, 0(x2) # load 0xaa776a729ceff9d6 from memory into f27
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fnmadd.d f15, f25, f27, f29, dyn # perform operation
fnmadd.d f15, f25, f27, f29, rdn # perform operation
fnmadd.d f15, f25, f27, f29, rmm # perform operation
fnmadd.d f15, f25, f27, f29, rne # perform operation
fnmadd.d f15, f25, f27, f29, rtz # perform operation
fnmadd.d f15, f25, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f25, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff8000000000000)
li x17, 0x4f724902cee9de92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0xca84602ef88f3700 # load x3 with value 0xca84602ef88f3700
sd x3, 0(x2) # store 0xca84602ef88f3700 in memory
fld f19, 0(x2) # load 0xca84602ef88f3700 from memory into f19
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f17, f18, f19, f16, dyn # perform operation
fnmadd.d f17, f18, f19, f16, rdn # perform operation
fnmadd.d f17, f18, f19, f16, rmm # perform operation
fnmadd.d f17, f18, f19, f16, rne # perform operation
fnmadd.d f17, f18, f19, f16, rtz # perform operation
fnmadd.d f17, f18, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f18, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f18, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fffffffffffffff)
li x28, 0x61d13285b4ab3d87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xe9423c7b2ae272d9 # load x3 with value 0xe9423c7b2ae272d9
sd x3, 0(x2) # store 0xe9423c7b2ae272d9 in memory
fld f13, 0(x2) # load 0xe9423c7b2ae272d9 from memory into f13
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fnmadd.d f28, f10, f13, f17, dyn # perform operation
fnmadd.d f28, f10, f13, f17, rdn # perform operation
fnmadd.d f28, f10, f13, f17, rmm # perform operation
fnmadd.d f28, f10, f13, f17, rne # perform operation
fnmadd.d f28, f10, f13, f17, rtz # perform operation
fnmadd.d f28, f10, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000001)
li x2, 0xab0e2cc4eef1c08e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x1d8f2f33b4249d69 # load x3 with value 0x1d8f2f33b4249d69
sd x3, 0(x2) # store 0x1d8f2f33b4249d69 in memory
fld f31, 0(x2) # load 0x1d8f2f33b4249d69 from memory into f31
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fnmadd.d f2, f27, f31, f16, dyn # perform operation
fnmadd.d f2, f27, f31, f16, rdn # perform operation
fnmadd.d f2, f27, f31, f16, rmm # perform operation
fnmadd.d f2, f27, f31, f16, rne # perform operation
fnmadd.d f2, f27, f31, f16, rtz # perform operation
fnmadd.d f2, f27, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f27, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f27, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f27, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f27, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f27, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x15, 0x9f31604fc5d5a8a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0x0c7455c9909898b6 # load x3 with value 0x0c7455c9909898b6
sd x3, 0(x2) # store 0x0c7455c9909898b6 in memory
fld f28, 0(x2) # load 0x0c7455c9909898b6 from memory into f28
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fnmadd.d f15, f19, f28, f16, dyn # perform operation
fnmadd.d f15, f19, f28, f16, rdn # perform operation
fnmadd.d f15, f19, f28, f16, rmm # perform operation
fnmadd.d f15, f19, f28, f16, rne # perform operation
fnmadd.d f15, f19, f28, f16, rtz # perform operation
fnmadd.d f15, f19, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f19, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0x7480464389e79df2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x1df9ef868086ec54 # load x3 with value 0x1df9ef868086ec54
sd x3, 0(x2) # store 0x1df9ef868086ec54 in memory
fld f6, 0(x2) # load 0x1df9ef868086ec54 from memory into f6
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fnmadd.d f2, f13, f6, f1, dyn # perform operation
fnmadd.d f2, f13, f6, f1, rdn # perform operation
fnmadd.d f2, f13, f6, f1, rmm # perform operation
fnmadd.d f2, f13, f6, f1, rne # perform operation
fnmadd.d f2, f13, f6, f1, rtz # perform operation
fnmadd.d f2, f13, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xa6e895993737426c)
li x19, 0x45d13033a05cf3ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0xe802c0d8c58d784a # load x3 with value 0xe802c0d8c58d784a
sd x3, 0(x2) # store 0xe802c0d8c58d784a in memory
fld f8, 0(x2) # load 0xe802c0d8c58d784a from memory into f8
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmadd.d f19, f3, f8, f17, dyn # perform operation
fnmadd.d f19, f3, f8, f17, rdn # perform operation
fnmadd.d f19, f3, f8, f17, rmm # perform operation
fnmadd.d f19, f3, f8, f17, rne # perform operation
fnmadd.d f19, f3, f8, f17, rtz # perform operation
fnmadd.d f19, f3, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f3, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f3, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x0)
li x29, 0x9a66d88e3d1c6b41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
li x3, 0x1adef38162f8726b # load x3 with value 0x1adef38162f8726b
sd x3, 0(x2) # store 0x1adef38162f8726b in memory
fld f20, 0(x2) # load 0x1adef38162f8726b from memory into f20
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fnmadd.d f29, f14, f20, f1, dyn # perform operation
fnmadd.d f29, f14, f20, f1, rdn # perform operation
fnmadd.d f29, f14, f20, f1, rmm # perform operation
fnmadd.d f29, f14, f20, f1, rne # perform operation
fnmadd.d f29, f14, f20, f1, rtz # perform operation
fnmadd.d f29, f14, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f14, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000000)
li x18, 0xb5d94852d94193fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x183a3cb772600df9 # load x3 with value 0x183a3cb772600df9
sd x3, 0(x2) # store 0x183a3cb772600df9 in memory
fld f16, 0(x2) # load 0x183a3cb772600df9 from memory into f16
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fnmadd.d f18, f20, f16, f22, dyn # perform operation
fnmadd.d f18, f20, f16, f22, rdn # perform operation
fnmadd.d f18, f20, f16, f22, rmm # perform operation
fnmadd.d f18, f20, f16, f22, rne # perform operation
fnmadd.d f18, f20, f16, f22, rtz # perform operation
fnmadd.d f18, f20, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f20, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff0000000000000)
li x10, 0xf29fcdc110530c5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0xcc6e91ca0d3da8ae # load x3 with value 0xcc6e91ca0d3da8ae
sd x3, 0(x2) # store 0xcc6e91ca0d3da8ae in memory
fld f4, 0(x2) # load 0xcc6e91ca0d3da8ae from memory into f4
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fnmadd.d f10, f8, f4, f31, dyn # perform operation
fnmadd.d f10, f8, f4, f31, rdn # perform operation
fnmadd.d f10, f8, f4, f31, rmm # perform operation
fnmadd.d f10, f8, f4, f31, rne # perform operation
fnmadd.d f10, f8, f4, f31, rtz # perform operation
fnmadd.d f10, f8, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff0000000000000)
li x30, 0x79f5bea84c7cdf04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x8a4dc3ee37979da6 # load x3 with value 0x8a4dc3ee37979da6
sd x3, 0(x2) # store 0x8a4dc3ee37979da6 in memory
fld f23, 0(x2) # load 0x8a4dc3ee37979da6 from memory into f23
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fnmadd.d f30, f13, f23, f6, dyn # perform operation
fnmadd.d f30, f13, f23, f6, rdn # perform operation
fnmadd.d f30, f13, f23, f6, rmm # perform operation
fnmadd.d f30, f13, f23, f6, rne # perform operation
fnmadd.d f30, f13, f23, f6, rtz # perform operation
fnmadd.d f30, f13, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f13, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f13, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f13, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f13, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f13, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff8000000000000)
li x25, 0x92c1173dee620fd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x26b8368d8c7ae120 # load x3 with value 0x26b8368d8c7ae120
sd x3, 0(x2) # store 0x26b8368d8c7ae120 in memory
fld f16, 0(x2) # load 0x26b8368d8c7ae120 from memory into f16
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmadd.d f25, f11, f16, f20, dyn # perform operation
fnmadd.d f25, f11, f16, f20, rdn # perform operation
fnmadd.d f25, f11, f16, f20, rmm # perform operation
fnmadd.d f25, f11, f16, f20, rne # perform operation
fnmadd.d f25, f11, f16, f20, rtz # perform operation
fnmadd.d f25, f11, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f11, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f11, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f11, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f11, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f11, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff8000000000000)
li x28, 0x12eb5e7280aa57e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x57724f11d27992f9 # load x3 with value 0x57724f11d27992f9
sd x3, 0(x2) # store 0x57724f11d27992f9 in memory
fld f30, 0(x2) # load 0x57724f11d27992f9 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fnmadd.d f28, f4, f30, f21, dyn # perform operation
fnmadd.d f28, f4, f30, f21, rdn # perform operation
fnmadd.d f28, f4, f30, f21, rmm # perform operation
fnmadd.d f28, f4, f30, f21, rne # perform operation
fnmadd.d f28, f4, f30, f21, rtz # perform operation
fnmadd.d f28, f4, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f4, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f4, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f4, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f4, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f4, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x4000000000000000)
li x27, 0x3524398f3230d6cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0xbceb682e8e63f7d0 # load x3 with value 0xbceb682e8e63f7d0
sd x3, 0(x2) # store 0xbceb682e8e63f7d0 in memory
fld f28, 0(x2) # load 0xbceb682e8e63f7d0 from memory into f28
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fnmadd.d f27, f29, f28, f22, dyn # perform operation
fnmadd.d f27, f29, f28, f22, rdn # perform operation
fnmadd.d f27, f29, f28, f22, rmm # perform operation
fnmadd.d f27, f29, f28, f22, rne # perform operation
fnmadd.d f27, f29, f28, f22, rtz # perform operation
fnmadd.d f27, f29, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f29, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f29, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f29, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f29, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f29, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xc000000000000000)
li x9, 0x5c66854435517353 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x7ffe1c34bcc96bc7 # load x3 with value 0x7ffe1c34bcc96bc7
sd x3, 0(x2) # store 0x7ffe1c34bcc96bc7 in memory
fld f19, 0(x2) # load 0x7ffe1c34bcc96bc7 from memory into f19
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fnmadd.d f9, f22, f19, f1, dyn # perform operation
fnmadd.d f9, f22, f19, f1, rdn # perform operation
fnmadd.d f9, f22, f19, f1, rmm # perform operation
fnmadd.d f9, f22, f19, f1, rne # perform operation
fnmadd.d f9, f22, f19, f1, rtz # perform operation
fnmadd.d f9, f22, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f22, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f22, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x10000000000000)
li x27, 0x25bb63b5eb788ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xf08c39a11a3b2c7a # load x3 with value 0xf08c39a11a3b2c7a
sd x3, 0(x2) # store 0xf08c39a11a3b2c7a in memory
fld f13, 0(x2) # load 0xf08c39a11a3b2c7a from memory into f13
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fnmadd.d f27, f18, f13, f4, dyn # perform operation
fnmadd.d f27, f18, f13, f4, rdn # perform operation
fnmadd.d f27, f18, f13, f4, rmm # perform operation
fnmadd.d f27, f18, f13, f4, rne # perform operation
fnmadd.d f27, f18, f13, f4, rtz # perform operation
fnmadd.d f27, f18, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f18, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8010000000000000)
li x16, 0x5fff36781df2ec40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x96d6bc4e4705e7cc # load x3 with value 0x96d6bc4e4705e7cc
sd x3, 0(x2) # store 0x96d6bc4e4705e7cc in memory
fld f22, 0(x2) # load 0x96d6bc4e4705e7cc from memory into f22
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fnmadd.d f16, f27, f22, f19, dyn # perform operation
fnmadd.d f16, f27, f22, f19, rdn # perform operation
fnmadd.d f16, f27, f22, f19, rmm # perform operation
fnmadd.d f16, f27, f22, f19, rne # perform operation
fnmadd.d f16, f27, f22, f19, rtz # perform operation
fnmadd.d f16, f27, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f27, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f27, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f27, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f27, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f27, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fefffffffffffff)
li x20, 0x608a7bbeea6d75a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x6c20b515957ca164 # load x3 with value 0x6c20b515957ca164
sd x3, 0(x2) # store 0x6c20b515957ca164 in memory
fld f18, 0(x2) # load 0x6c20b515957ca164 from memory into f18
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fnmadd.d f20, f19, f18, f16, dyn # perform operation
fnmadd.d f20, f19, f18, f16, rdn # perform operation
fnmadd.d f20, f19, f18, f16, rmm # perform operation
fnmadd.d f20, f19, f18, f16, rne # perform operation
fnmadd.d f20, f19, f18, f16, rtz # perform operation
fnmadd.d f20, f19, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f19, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f19, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xffefffffffffffff)
li x6, 0xfb0aaaaf24e90beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x4c01f9c199c7e69f # load x3 with value 0x4c01f9c199c7e69f
sd x3, 0(x2) # store 0x4c01f9c199c7e69f in memory
fld f15, 0(x2) # load 0x4c01f9c199c7e69f from memory into f15
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fnmadd.d f6, f18, f15, f25, dyn # perform operation
fnmadd.d f6, f18, f15, f25, rdn # perform operation
fnmadd.d f6, f18, f15, f25, rmm # perform operation
fnmadd.d f6, f18, f15, f25, rne # perform operation
fnmadd.d f6, f18, f15, f25, rtz # perform operation
fnmadd.d f6, f18, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f18, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f18, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfffffffffffff)
li x6, 0x0b6f416e748d6d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x402ceacb6d4d1452 # load x3 with value 0x402ceacb6d4d1452
sd x3, 0(x2) # store 0x402ceacb6d4d1452 in memory
fld f12, 0(x2) # load 0x402ceacb6d4d1452 from memory into f12
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fnmadd.d f6, f8, f12, f7, dyn # perform operation
fnmadd.d f6, f8, f12, f7, rdn # perform operation
fnmadd.d f6, f8, f12, f7, rmm # perform operation
fnmadd.d f6, f8, f12, f7, rne # perform operation
fnmadd.d f6, f8, f12, f7, rtz # perform operation
fnmadd.d f6, f8, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x800fffffffffffff)
li x3, 0xbb76cdbeb9f759b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x8d658ea5c0d687d0 # load x3 with value 0x8d658ea5c0d687d0
sd x3, 0(x2) # store 0x8d658ea5c0d687d0 in memory
fld f2, 0(x2) # load 0x8d658ea5c0d687d0 from memory into f2
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f3, f5, f2, f14, dyn # perform operation
fnmadd.d f3, f5, f2, f14, rdn # perform operation
fnmadd.d f3, f5, f2, f14, rmm # perform operation
fnmadd.d f3, f5, f2, f14, rne # perform operation
fnmadd.d f3, f5, f2, f14, rtz # perform operation
fnmadd.d f3, f5, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f5, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f5, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f5, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f5, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f5, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000)
li x16, 0xd12a85ca9596bdc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xc33842054ea8afd5 # load x3 with value 0xc33842054ea8afd5
sd x3, 0(x2) # store 0xc33842054ea8afd5 in memory
fld f22, 0(x2) # load 0xc33842054ea8afd5 from memory into f22
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fnmadd.d f16, f1, f22, f14, dyn # perform operation
fnmadd.d f16, f1, f22, f14, rdn # perform operation
fnmadd.d f16, f1, f22, f14, rmm # perform operation
fnmadd.d f16, f1, f22, f14, rne # perform operation
fnmadd.d f16, f1, f22, f14, rtz # perform operation
fnmadd.d f16, f1, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f1, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f1, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8008000000000000)
li x20, 0xbaaff343f50858a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0xaee4f7fb51529746 # load x3 with value 0xaee4f7fb51529746
sd x3, 0(x2) # store 0xaee4f7fb51529746 in memory
fld f24, 0(x2) # load 0xaee4f7fb51529746 from memory into f24
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f20, f4, f24, f1, dyn # perform operation
fnmadd.d f20, f4, f24, f1, rdn # perform operation
fnmadd.d f20, f4, f24, f1, rmm # perform operation
fnmadd.d f20, f4, f24, f1, rne # perform operation
fnmadd.d f20, f4, f24, f1, rtz # perform operation
fnmadd.d f20, f4, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f4, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f4, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f4, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f4, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f4, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x1)
li x12, 0xd1a9ef4022f92c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x6f8f9f4ef5a7ab52 # load x3 with value 0x6f8f9f4ef5a7ab52
sd x3, 0(x2) # store 0x6f8f9f4ef5a7ab52 in memory
fld f3, 0(x2) # load 0x6f8f9f4ef5a7ab52 from memory into f3
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fnmadd.d f12, f23, f3, f16, dyn # perform operation
fnmadd.d f12, f23, f3, f16, rdn # perform operation
fnmadd.d f12, f23, f3, f16, rmm # perform operation
fnmadd.d f12, f23, f3, f16, rne # perform operation
fnmadd.d f12, f23, f3, f16, rtz # perform operation
fnmadd.d f12, f23, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f23, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f23, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f23, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f23, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f23, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000001)
li x6, 0xe409c6fb8266fb79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0xc00bcc0678110afb # load x3 with value 0xc00bcc0678110afb
sd x3, 0(x2) # store 0xc00bcc0678110afb in memory
fld f31, 0(x2) # load 0xc00bcc0678110afb from memory into f31
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fnmadd.d f6, f9, f31, f16, dyn # perform operation
fnmadd.d f6, f9, f31, f16, rdn # perform operation
fnmadd.d f6, f9, f31, f16, rmm # perform operation
fnmadd.d f6, f9, f31, f16, rne # perform operation
fnmadd.d f6, f9, f31, f16, rtz # perform operation
fnmadd.d f6, f9, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f9, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000000)
li x21, 0x26a047e4e44d5d18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xa9c3f7920c819186 # load x3 with value 0xa9c3f7920c819186
sd x3, 0(x2) # store 0xa9c3f7920c819186 in memory
fld f17, 0(x2) # load 0xa9c3f7920c819186 from memory into f17
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fnmadd.d f21, f18, f17, f22, dyn # perform operation
fnmadd.d f21, f18, f17, f22, rdn # perform operation
fnmadd.d f21, f18, f17, f22, rmm # perform operation
fnmadd.d f21, f18, f17, f22, rne # perform operation
fnmadd.d f21, f18, f17, f22, rtz # perform operation
fnmadd.d f21, f18, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f18, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f18, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f18, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f18, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f18, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfff0000000000000)
li x13, 0x789955a56675cac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0xde2727c145fbd83d # load x3 with value 0xde2727c145fbd83d
sd x3, 0(x2) # store 0xde2727c145fbd83d in memory
fld f5, 0(x2) # load 0xde2727c145fbd83d from memory into f5
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fnmadd.d f13, f9, f5, f6, dyn # perform operation
fnmadd.d f13, f9, f5, f6, rdn # perform operation
fnmadd.d f13, f9, f5, f6, rmm # perform operation
fnmadd.d f13, f9, f5, f6, rne # perform operation
fnmadd.d f13, f9, f5, f6, rtz # perform operation
fnmadd.d f13, f9, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f9, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f9, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f9, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f9, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f9, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff8000000000000)
li x15, 0x65820a18de502133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0xc7cb19c3faeac5b9 # load x3 with value 0xc7cb19c3faeac5b9
sd x3, 0(x2) # store 0xc7cb19c3faeac5b9 in memory
fld f31, 0(x2) # load 0xc7cb19c3faeac5b9 from memory into f31
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
fnmadd.d f15, f30, f31, f9, dyn # perform operation
fnmadd.d f15, f30, f31, f9, rdn # perform operation
fnmadd.d f15, f30, f31, f9, rmm # perform operation
fnmadd.d f15, f30, f31, f9, rne # perform operation
fnmadd.d f15, f30, f31, f9, rtz # perform operation
fnmadd.d f15, f30, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fffffffffffffff)
li x18, 0xba5bf1aee7b194b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0xa7f63e66a5d9eb7b # load x3 with value 0xa7f63e66a5d9eb7b
sd x3, 0(x2) # store 0xa7f63e66a5d9eb7b in memory
fld f25, 0(x2) # load 0xa7f63e66a5d9eb7b from memory into f25
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmadd.d f18, f16, f25, f26, dyn # perform operation
fnmadd.d f18, f16, f25, f26, rdn # perform operation
fnmadd.d f18, f16, f25, f26, rmm # perform operation
fnmadd.d f18, f16, f25, f26, rne # perform operation
fnmadd.d f18, f16, f25, f26, rtz # perform operation
fnmadd.d f18, f16, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f16, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000001)
li x10, 0xfc202d2638651e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x02a8b0a046232863 # load x3 with value 0x02a8b0a046232863
sd x3, 0(x2) # store 0x02a8b0a046232863 in memory
fld f12, 0(x2) # load 0x02a8b0a046232863 from memory into f12
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fnmadd.d f10, f28, f12, f27, dyn # perform operation
fnmadd.d f10, f28, f12, f27, rdn # perform operation
fnmadd.d f10, f28, f12, f27, rmm # perform operation
fnmadd.d f10, f28, f12, f27, rne # perform operation
fnmadd.d f10, f28, f12, f27, rtz # perform operation
fnmadd.d f10, f28, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f28, f12, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x26, 0xc006564b35d8e98d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x079ec051aaee790e # load x3 with value 0x079ec051aaee790e
sd x3, 0(x2) # store 0x079ec051aaee790e in memory
fld f23, 0(x2) # load 0x079ec051aaee790e from memory into f23
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fnmadd.d f26, f31, f23, f7, dyn # perform operation
fnmadd.d f26, f31, f23, f7, rdn # perform operation
fnmadd.d f26, f31, f23, f7, rmm # perform operation
fnmadd.d f26, f31, f23, f7, rne # perform operation
fnmadd.d f26, f31, f23, f7, rtz # perform operation
fnmadd.d f26, f31, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f31, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f31, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f31, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f31, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f31, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x5a392534a57711ad)
li x9, 0x8588632e12cbe223 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xccfc807e73cc4809 # load x3 with value 0xccfc807e73cc4809
sd x3, 0(x2) # store 0xccfc807e73cc4809 in memory
fld f20, 0(x2) # load 0xccfc807e73cc4809 from memory into f20
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fnmadd.d f9, f13, f20, f22, dyn # perform operation
fnmadd.d f9, f13, f20, f22, rdn # perform operation
fnmadd.d f9, f13, f20, f22, rmm # perform operation
fnmadd.d f9, f13, f20, f22, rne # perform operation
fnmadd.d f9, f13, f20, f22, rtz # perform operation
fnmadd.d f9, f13, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f13, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f13, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xa6e895993737426c)
li x21, 0x0f9fb9166b36102c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xc9f4c6ef2565d572 # load x3 with value 0xc9f4c6ef2565d572
sd x3, 0(x2) # store 0xc9f4c6ef2565d572 in memory
fld f31, 0(x2) # load 0xc9f4c6ef2565d572 from memory into f31
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmadd.d f21, f11, f31, f17, dyn # perform operation
fnmadd.d f21, f11, f31, f17, rdn # perform operation
fnmadd.d f21, f11, f31, f17, rmm # perform operation
fnmadd.d f21, f11, f31, f17, rne # perform operation
fnmadd.d f21, f11, f31, f17, rtz # perform operation
fnmadd.d f21, f11, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f11, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x0)
li x1, 0x7cc3e2fc178e5b57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x4a70fc9afeb33e9b # load x3 with value 0x4a70fc9afeb33e9b
sd x3, 0(x2) # store 0x4a70fc9afeb33e9b in memory
fld f19, 0(x2) # load 0x4a70fc9afeb33e9b from memory into f19
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fnmadd.d f1, f18, f19, f11, dyn # perform operation
fnmadd.d f1, f18, f19, f11, rdn # perform operation
fnmadd.d f1, f18, f19, f11, rmm # perform operation
fnmadd.d f1, f18, f19, f11, rne # perform operation
fnmadd.d f1, f18, f19, f11, rtz # perform operation
fnmadd.d f1, f18, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f18, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f18, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f18, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f18, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f18, f19, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000000)
li x3, 0x27bcade57bc24239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
li x3, 0xa68cd978ee2665e8 # load x3 with value 0xa68cd978ee2665e8
sd x3, 0(x2) # store 0xa68cd978ee2665e8 in memory
fld f29, 0(x2) # load 0xa68cd978ee2665e8 from memory into f29
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fnmadd.d f3, f1, f29, f22, dyn # perform operation
fnmadd.d f3, f1, f29, f22, rdn # perform operation
fnmadd.d f3, f1, f29, f22, rmm # perform operation
fnmadd.d f3, f1, f29, f22, rne # perform operation
fnmadd.d f3, f1, f29, f22, rtz # perform operation
fnmadd.d f3, f1, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f1, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f1, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f1, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f1, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f1, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff0000000000000)
li x27, 0x8d773b785b87fec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x0402bc93d1e29f57 # load x3 with value 0x0402bc93d1e29f57
sd x3, 0(x2) # store 0x0402bc93d1e29f57 in memory
fld f29, 0(x2) # load 0x0402bc93d1e29f57 from memory into f29
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fnmadd.d f27, f30, f29, f26, dyn # perform operation
fnmadd.d f27, f30, f29, f26, rdn # perform operation
fnmadd.d f27, f30, f29, f26, rmm # perform operation
fnmadd.d f27, f30, f29, f26, rne # perform operation
fnmadd.d f27, f30, f29, f26, rtz # perform operation
fnmadd.d f27, f30, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f30, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff0000000000000)
li x6, 0xba504be5faf95bca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x810f75db6fb537f0 # load x3 with value 0x810f75db6fb537f0
sd x3, 0(x2) # store 0x810f75db6fb537f0 in memory
fld f29, 0(x2) # load 0x810f75db6fb537f0 from memory into f29
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fnmadd.d f6, f28, f29, f8, dyn # perform operation
fnmadd.d f6, f28, f29, f8, rdn # perform operation
fnmadd.d f6, f28, f29, f8, rmm # perform operation
fnmadd.d f6, f28, f29, f8, rne # perform operation
fnmadd.d f6, f28, f29, f8, rtz # perform operation
fnmadd.d f6, f28, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f28, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f28, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff8000000000000)
li x18, 0xa05ab3e320173be5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0xf548c2f994fd3e75 # load x3 with value 0xf548c2f994fd3e75
sd x3, 0(x2) # store 0xf548c2f994fd3e75 in memory
fld f28, 0(x2) # load 0xf548c2f994fd3e75 from memory into f28
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fnmadd.d f18, f19, f28, f27, dyn # perform operation
fnmadd.d f18, f19, f28, f27, rdn # perform operation
fnmadd.d f18, f19, f28, f27, rmm # perform operation
fnmadd.d f18, f19, f28, f27, rne # perform operation
fnmadd.d f18, f19, f28, f27, rtz # perform operation
fnmadd.d f18, f19, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f19, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff8000000000000)
li x8, 0xfb65dcada61884fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x159a702f0eb2d5f5 # load x3 with value 0x159a702f0eb2d5f5
sd x3, 0(x2) # store 0x159a702f0eb2d5f5 in memory
fld f30, 0(x2) # load 0x159a702f0eb2d5f5 from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fnmadd.d f8, f17, f30, f10, dyn # perform operation
fnmadd.d f8, f17, f30, f10, rdn # perform operation
fnmadd.d f8, f17, f30, f10, rmm # perform operation
fnmadd.d f8, f17, f30, f10, rne # perform operation
fnmadd.d f8, f17, f30, f10, rtz # perform operation
fnmadd.d f8, f17, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f17, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f17, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x4000000000000000)
li x26, 0x33c3728fd9d79b92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x7173bc9feb997948 # load x3 with value 0x7173bc9feb997948
sd x3, 0(x2) # store 0x7173bc9feb997948 in memory
fld f6, 0(x2) # load 0x7173bc9feb997948 from memory into f6
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fnmadd.d f26, f16, f6, f12, dyn # perform operation
fnmadd.d f26, f16, f6, f12, rdn # perform operation
fnmadd.d f26, f16, f6, f12, rmm # perform operation
fnmadd.d f26, f16, f6, f12, rne # perform operation
fnmadd.d f26, f16, f6, f12, rtz # perform operation
fnmadd.d f26, f16, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f16, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f16, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xc000000000000000)
li x5, 0x333d4aabb537a1e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x9e4362f6163e9b20 # load x3 with value 0x9e4362f6163e9b20
sd x3, 0(x2) # store 0x9e4362f6163e9b20 in memory
fld f25, 0(x2) # load 0x9e4362f6163e9b20 from memory into f25
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fnmadd.d f5, f11, f25, f16, dyn # perform operation
fnmadd.d f5, f11, f25, f16, rdn # perform operation
fnmadd.d f5, f11, f25, f16, rmm # perform operation
fnmadd.d f5, f11, f25, f16, rne # perform operation
fnmadd.d f5, f11, f25, f16, rtz # perform operation
fnmadd.d f5, f11, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x10000000000000)
li x9, 0x3b6f808b7f01190d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0xc2a35cae2776d6ec # load x3 with value 0xc2a35cae2776d6ec
sd x3, 0(x2) # store 0xc2a35cae2776d6ec in memory
fld f16, 0(x2) # load 0xc2a35cae2776d6ec from memory into f16
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fnmadd.d f9, f20, f16, f12, dyn # perform operation
fnmadd.d f9, f20, f16, f12, rdn # perform operation
fnmadd.d f9, f20, f16, f12, rmm # perform operation
fnmadd.d f9, f20, f16, f12, rne # perform operation
fnmadd.d f9, f20, f16, f12, rtz # perform operation
fnmadd.d f9, f20, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f20, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f20, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f20, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f20, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f20, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8010000000000000)
li x31, 0x6e7786cb8ac2b4b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
li x3, 0xb5bd3043be6351ab # load x3 with value 0xb5bd3043be6351ab
sd x3, 0(x2) # store 0xb5bd3043be6351ab in memory
fld f28, 0(x2) # load 0xb5bd3043be6351ab from memory into f28
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fnmadd.d f31, f1, f28, f15, dyn # perform operation
fnmadd.d f31, f1, f28, f15, rdn # perform operation
fnmadd.d f31, f1, f28, f15, rmm # perform operation
fnmadd.d f31, f1, f28, f15, rne # perform operation
fnmadd.d f31, f1, f28, f15, rtz # perform operation
fnmadd.d f31, f1, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f1, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fefffffffffffff)
li x19, 0x33436b86108514c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0xba2a61b1249c935c # load x3 with value 0xba2a61b1249c935c
sd x3, 0(x2) # store 0xba2a61b1249c935c in memory
fld f11, 0(x2) # load 0xba2a61b1249c935c from memory into f11
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmadd.d f19, f12, f11, f6, dyn # perform operation
fnmadd.d f19, f12, f11, f6, rdn # perform operation
fnmadd.d f19, f12, f11, f6, rmm # perform operation
fnmadd.d f19, f12, f11, f6, rne # perform operation
fnmadd.d f19, f12, f11, f6, rtz # perform operation
fnmadd.d f19, f12, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xffefffffffffffff)
li x31, 0x6b83745bf62d00f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x444df31616453e0b # load x3 with value 0x444df31616453e0b
sd x3, 0(x2) # store 0x444df31616453e0b in memory
fld f9, 0(x2) # load 0x444df31616453e0b from memory into f9
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fnmadd.d f31, f18, f9, f22, dyn # perform operation
fnmadd.d f31, f18, f9, f22, rdn # perform operation
fnmadd.d f31, f18, f9, f22, rmm # perform operation
fnmadd.d f31, f18, f9, f22, rne # perform operation
fnmadd.d f31, f18, f9, f22, rtz # perform operation
fnmadd.d f31, f18, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f18, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f18, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f18, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f18, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f18, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfffffffffffff)
li x22, 0xa81fc9bb54c31474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x694baacf1c1196cb # load x3 with value 0x694baacf1c1196cb
sd x3, 0(x2) # store 0x694baacf1c1196cb in memory
fld f15, 0(x2) # load 0x694baacf1c1196cb from memory into f15
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fnmadd.d f22, f24, f15, f3, dyn # perform operation
fnmadd.d f22, f24, f15, f3, rdn # perform operation
fnmadd.d f22, f24, f15, f3, rmm # perform operation
fnmadd.d f22, f24, f15, f3, rne # perform operation
fnmadd.d f22, f24, f15, f3, rtz # perform operation
fnmadd.d f22, f24, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f24, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f24, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x800fffffffffffff)
li x6, 0x05e01630f5598ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0x9b23b98fb1fc0a63 # load x3 with value 0x9b23b98fb1fc0a63
sd x3, 0(x2) # store 0x9b23b98fb1fc0a63 in memory
fld f17, 0(x2) # load 0x9b23b98fb1fc0a63 from memory into f17
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fnmadd.d f6, f16, f17, f22, dyn # perform operation
fnmadd.d f6, f16, f17, f22, rdn # perform operation
fnmadd.d f6, f16, f17, f22, rmm # perform operation
fnmadd.d f6, f16, f17, f22, rne # perform operation
fnmadd.d f6, f16, f17, f22, rtz # perform operation
fnmadd.d f6, f16, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000)
li x4, 0xcfef5c93514325cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x234f5fb4a7247e7b # load x3 with value 0x234f5fb4a7247e7b
sd x3, 0(x2) # store 0x234f5fb4a7247e7b in memory
fld f19, 0(x2) # load 0x234f5fb4a7247e7b from memory into f19
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fnmadd.d f4, f7, f19, f8, dyn # perform operation
fnmadd.d f4, f7, f19, f8, rdn # perform operation
fnmadd.d f4, f7, f19, f8, rmm # perform operation
fnmadd.d f4, f7, f19, f8, rne # perform operation
fnmadd.d f4, f7, f19, f8, rtz # perform operation
fnmadd.d f4, f7, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f7, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8008000000000000)
li x5, 0x6609517527791009 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x64bd64b3ba2d84a2 # load x3 with value 0x64bd64b3ba2d84a2
sd x3, 0(x2) # store 0x64bd64b3ba2d84a2 in memory
fld f11, 0(x2) # load 0x64bd64b3ba2d84a2 from memory into f11
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fnmadd.d f5, f15, f11, f3, dyn # perform operation
fnmadd.d f5, f15, f11, f3, rdn # perform operation
fnmadd.d f5, f15, f11, f3, rmm # perform operation
fnmadd.d f5, f15, f11, f3, rne # perform operation
fnmadd.d f5, f15, f11, f3, rtz # perform operation
fnmadd.d f5, f15, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f15, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f15, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f15, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f15, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f15, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x1)
li x6, 0xb991775512140f4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0xf5a8378190bb1414 # load x3 with value 0xf5a8378190bb1414
sd x3, 0(x2) # store 0xf5a8378190bb1414 in memory
fld f24, 0(x2) # load 0xf5a8378190bb1414 from memory into f24
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f6, f30, f24, f12, dyn # perform operation
fnmadd.d f6, f30, f24, f12, rdn # perform operation
fnmadd.d f6, f30, f24, f12, rmm # perform operation
fnmadd.d f6, f30, f24, f12, rne # perform operation
fnmadd.d f6, f30, f24, f12, rtz # perform operation
fnmadd.d f6, f30, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f30, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f30, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f30, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f30, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f30, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000001)
li x26, 0x7352f11c0f87cd24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x8a91ee06ca6bcaf6 # load x3 with value 0x8a91ee06ca6bcaf6
sd x3, 0(x2) # store 0x8a91ee06ca6bcaf6 in memory
fld f24, 0(x2) # load 0x8a91ee06ca6bcaf6 from memory into f24
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fnmadd.d f26, f28, f24, f18, dyn # perform operation
fnmadd.d f26, f28, f24, f18, rdn # perform operation
fnmadd.d f26, f28, f24, f18, rmm # perform operation
fnmadd.d f26, f28, f24, f18, rne # perform operation
fnmadd.d f26, f28, f24, f18, rtz # perform operation
fnmadd.d f26, f28, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f28, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000000)
li x9, 0x4a40bf5bf5c4958b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0xf29110cb2541aa8d # load x3 with value 0xf29110cb2541aa8d
sd x3, 0(x2) # store 0xf29110cb2541aa8d in memory
fld f18, 0(x2) # load 0xf29110cb2541aa8d from memory into f18
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f9, f16, f18, f30, dyn # perform operation
fnmadd.d f9, f16, f18, f30, rdn # perform operation
fnmadd.d f9, f16, f18, f30, rmm # perform operation
fnmadd.d f9, f16, f18, f30, rne # perform operation
fnmadd.d f9, f16, f18, f30, rtz # perform operation
fnmadd.d f9, f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f16, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfff0000000000000)
li x26, 0x54f0726c01280841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x57ae33b6033424fb # load x3 with value 0x57ae33b6033424fb
sd x3, 0(x2) # store 0x57ae33b6033424fb in memory
fld f7, 0(x2) # load 0x57ae33b6033424fb from memory into f7
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fnmadd.d f26, f9, f7, f16, dyn # perform operation
fnmadd.d f26, f9, f7, f16, rdn # perform operation
fnmadd.d f26, f9, f7, f16, rmm # perform operation
fnmadd.d f26, f9, f7, f16, rne # perform operation
fnmadd.d f26, f9, f7, f16, rtz # perform operation
fnmadd.d f26, f9, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff8000000000000)
li x14, 0x3d17f4335518c431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x09c6415eaab1bfd3 # load x3 with value 0x09c6415eaab1bfd3
sd x3, 0(x2) # store 0x09c6415eaab1bfd3 in memory
fld f10, 0(x2) # load 0x09c6415eaab1bfd3 from memory into f10
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fnmadd.d f14, f11, f10, f18, dyn # perform operation
fnmadd.d f14, f11, f10, f18, rdn # perform operation
fnmadd.d f14, f11, f10, f18, rmm # perform operation
fnmadd.d f14, f11, f10, f18, rne # perform operation
fnmadd.d f14, f11, f10, f18, rtz # perform operation
fnmadd.d f14, f11, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f11, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f11, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f11, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f11, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f11, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fffffffffffffff)
li x1, 0xd33d6728318c9aef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xf33d38320918ff28 # load x3 with value 0xf33d38320918ff28
sd x3, 0(x2) # store 0xf33d38320918ff28 in memory
fld f12, 0(x2) # load 0xf33d38320918ff28 from memory into f12
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fnmadd.d f1, f8, f12, f7, dyn # perform operation
fnmadd.d f1, f8, f12, f7, rdn # perform operation
fnmadd.d f1, f8, f12, f7, rmm # perform operation
fnmadd.d f1, f8, f12, f7, rne # perform operation
fnmadd.d f1, f8, f12, f7, rtz # perform operation
fnmadd.d f1, f8, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f8, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f8, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000001)
li x6, 0x41fb890443d151a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
li x3, 0xd1053c5a409a3277 # load x3 with value 0xd1053c5a409a3277
sd x3, 0(x2) # store 0xd1053c5a409a3277 in memory
fld f23, 0(x2) # load 0xd1053c5a409a3277 from memory into f23
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fnmadd.d f6, f16, f23, f15, dyn # perform operation
fnmadd.d f6, f16, f23, f15, rdn # perform operation
fnmadd.d f6, f16, f23, f15, rmm # perform operation
fnmadd.d f6, f16, f23, f15, rne # perform operation
fnmadd.d f6, f16, f23, f15, rtz # perform operation
fnmadd.d f6, f16, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f23, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x24, 0xd70cb1eb7cf617fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x0dbe8c639086b641 # load x3 with value 0x0dbe8c639086b641
sd x3, 0(x2) # store 0x0dbe8c639086b641 in memory
fld f26, 0(x2) # load 0x0dbe8c639086b641 from memory into f26
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fnmadd.d f24, f21, f26, f6, dyn # perform operation
fnmadd.d f24, f21, f26, f6, rdn # perform operation
fnmadd.d f24, f21, f26, f6, rmm # perform operation
fnmadd.d f24, f21, f26, f6, rne # perform operation
fnmadd.d f24, f21, f26, f6, rtz # perform operation
fnmadd.d f24, f21, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f21, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x5a392534a57711ad)
li x17, 0xfa579838b1b52815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0xf5e35f8dc0e63597 # load x3 with value 0xf5e35f8dc0e63597
sd x3, 0(x2) # store 0xf5e35f8dc0e63597 in memory
fld f24, 0(x2) # load 0xf5e35f8dc0e63597 from memory into f24
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fnmadd.d f17, f20, f24, f18, dyn # perform operation
fnmadd.d f17, f20, f24, f18, rdn # perform operation
fnmadd.d f17, f20, f24, f18, rmm # perform operation
fnmadd.d f17, f20, f24, f18, rne # perform operation
fnmadd.d f17, f20, f24, f18, rtz # perform operation
fnmadd.d f17, f20, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f20, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xa6e895993737426c)
li x31, 0x20114d9b90360f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x4ed50c4d7d71a71c # load x3 with value 0x4ed50c4d7d71a71c
sd x3, 0(x2) # store 0x4ed50c4d7d71a71c in memory
fld f22, 0(x2) # load 0x4ed50c4d7d71a71c from memory into f22
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fnmadd.d f31, f14, f22, f9, dyn # perform operation
fnmadd.d f31, f14, f22, f9, rdn # perform operation
fnmadd.d f31, f14, f22, f9, rmm # perform operation
fnmadd.d f31, f14, f22, f9, rne # perform operation
fnmadd.d f31, f14, f22, f9, rtz # perform operation
fnmadd.d f31, f14, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f14, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f14, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f14, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f14, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f14, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x0)
li x19, 0xe74dc483778eec0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x6821fe864abfdb63 # load x3 with value 0x6821fe864abfdb63
sd x3, 0(x2) # store 0x6821fe864abfdb63 in memory
fld f22, 0(x2) # load 0x6821fe864abfdb63 from memory into f22
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fnmadd.d f19, f8, f22, f18, dyn # perform operation
fnmadd.d f19, f8, f22, f18, rdn # perform operation
fnmadd.d f19, f8, f22, f18, rmm # perform operation
fnmadd.d f19, f8, f22, f18, rne # perform operation
fnmadd.d f19, f8, f22, f18, rtz # perform operation
fnmadd.d f19, f8, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000000)
li x23, 0xdc6af45cfc98f27f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0xcd49ca4f193f886d # load x3 with value 0xcd49ca4f193f886d
sd x3, 0(x2) # store 0xcd49ca4f193f886d in memory
fld f1, 0(x2) # load 0xcd49ca4f193f886d from memory into f1
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fnmadd.d f23, f2, f1, f14, dyn # perform operation
fnmadd.d f23, f2, f1, f14, rdn # perform operation
fnmadd.d f23, f2, f1, f14, rmm # perform operation
fnmadd.d f23, f2, f1, f14, rne # perform operation
fnmadd.d f23, f2, f1, f14, rtz # perform operation
fnmadd.d f23, f2, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f2, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f2, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f2, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f2, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f2, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff0000000000000)
li x29, 0xe258d26783b67fb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0xba92c1370bce1481 # load x3 with value 0xba92c1370bce1481
sd x3, 0(x2) # store 0xba92c1370bce1481 in memory
fld f27, 0(x2) # load 0xba92c1370bce1481 from memory into f27
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmadd.d f29, f23, f27, f7, dyn # perform operation
fnmadd.d f29, f23, f27, f7, rdn # perform operation
fnmadd.d f29, f23, f27, f7, rmm # perform operation
fnmadd.d f29, f23, f27, f7, rne # perform operation
fnmadd.d f29, f23, f27, f7, rtz # perform operation
fnmadd.d f29, f23, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f23, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff0000000000000)
li x8, 0x51d4d3ba0b974473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x186538dfa7b17e56 # load x3 with value 0x186538dfa7b17e56
sd x3, 0(x2) # store 0x186538dfa7b17e56 in memory
fld f4, 0(x2) # load 0x186538dfa7b17e56 from memory into f4
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fnmadd.d f8, f6, f4, f29, dyn # perform operation
fnmadd.d f8, f6, f4, f29, rdn # perform operation
fnmadd.d f8, f6, f4, f29, rmm # perform operation
fnmadd.d f8, f6, f4, f29, rne # perform operation
fnmadd.d f8, f6, f4, f29, rtz # perform operation
fnmadd.d f8, f6, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f6, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f6, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f6, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f6, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f6, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff8000000000000)
li x1, 0xf2810e62bf376a52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x6c8a03dcd15e7c88 # load x3 with value 0x6c8a03dcd15e7c88
sd x3, 0(x2) # store 0x6c8a03dcd15e7c88 in memory
fld f25, 0(x2) # load 0x6c8a03dcd15e7c88 from memory into f25
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fnmadd.d f1, f19, f25, f18, dyn # perform operation
fnmadd.d f1, f19, f25, f18, rdn # perform operation
fnmadd.d f1, f19, f25, f18, rmm # perform operation
fnmadd.d f1, f19, f25, f18, rne # perform operation
fnmadd.d f1, f19, f25, f18, rtz # perform operation
fnmadd.d f1, f19, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff8000000000000)
li x7, 0xc6f8b897ea00a223 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x44872fa08f3d8967 # load x3 with value 0x44872fa08f3d8967
sd x3, 0(x2) # store 0x44872fa08f3d8967 in memory
fld f1, 0(x2) # load 0x44872fa08f3d8967 from memory into f1
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fnmadd.d f7, f18, f1, f3, dyn # perform operation
fnmadd.d f7, f18, f1, f3, rdn # perform operation
fnmadd.d f7, f18, f1, f3, rmm # perform operation
fnmadd.d f7, f18, f1, f3, rne # perform operation
fnmadd.d f7, f18, f1, f3, rtz # perform operation
fnmadd.d f7, f18, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f18, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f18, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f18, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f18, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f18, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x4000000000000000)
li x19, 0xb4147e2227834e73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x9e86b9d9da6aa1dc # load x3 with value 0x9e86b9d9da6aa1dc
sd x3, 0(x2) # store 0x9e86b9d9da6aa1dc in memory
fld f22, 0(x2) # load 0x9e86b9d9da6aa1dc from memory into f22
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fnmadd.d f19, f13, f22, f7, dyn # perform operation
fnmadd.d f19, f13, f22, f7, rdn # perform operation
fnmadd.d f19, f13, f22, f7, rmm # perform operation
fnmadd.d f19, f13, f22, f7, rne # perform operation
fnmadd.d f19, f13, f22, f7, rtz # perform operation
fnmadd.d f19, f13, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f13, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f13, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f13, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f13, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f13, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xc000000000000000)
li x11, 0xe1f604c5b1cfc21c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xec4ee42c3e960083 # load x3 with value 0xec4ee42c3e960083
sd x3, 0(x2) # store 0xec4ee42c3e960083 in memory
fld f9, 0(x2) # load 0xec4ee42c3e960083 from memory into f9
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmadd.d f11, f28, f9, f24, dyn # perform operation
fnmadd.d f11, f28, f9, f24, rdn # perform operation
fnmadd.d f11, f28, f9, f24, rmm # perform operation
fnmadd.d f11, f28, f9, f24, rne # perform operation
fnmadd.d f11, f28, f9, f24, rtz # perform operation
fnmadd.d f11, f28, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f28, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x10000000000000)
li x23, 0xe91b73b8e743c965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x3b982c396a35ed17 # load x3 with value 0x3b982c396a35ed17
sd x3, 0(x2) # store 0x3b982c396a35ed17 in memory
fld f28, 0(x2) # load 0x3b982c396a35ed17 from memory into f28
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fnmadd.d f23, f19, f28, f6, dyn # perform operation
fnmadd.d f23, f19, f28, f6, rdn # perform operation
fnmadd.d f23, f19, f28, f6, rmm # perform operation
fnmadd.d f23, f19, f28, f6, rne # perform operation
fnmadd.d f23, f19, f28, f6, rtz # perform operation
fnmadd.d f23, f19, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8010000000000000)
li x13, 0x803c76ddb952f00a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xaa0af8ca9d7d6bf1 # load x3 with value 0xaa0af8ca9d7d6bf1
sd x3, 0(x2) # store 0xaa0af8ca9d7d6bf1 in memory
fld f4, 0(x2) # load 0xaa0af8ca9d7d6bf1 from memory into f4
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fnmadd.d f13, f28, f4, f16, dyn # perform operation
fnmadd.d f13, f28, f4, f16, rdn # perform operation
fnmadd.d f13, f28, f4, f16, rmm # perform operation
fnmadd.d f13, f28, f4, f16, rne # perform operation
fnmadd.d f13, f28, f4, f16, rtz # perform operation
fnmadd.d f13, f28, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f28, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fefffffffffffff)
li x29, 0xfc3707cac1f4817d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x33b41ee10e042d4f # load x3 with value 0x33b41ee10e042d4f
sd x3, 0(x2) # store 0x33b41ee10e042d4f in memory
fld f2, 0(x2) # load 0x33b41ee10e042d4f from memory into f2
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fnmadd.d f29, f16, f2, f27, dyn # perform operation
fnmadd.d f29, f16, f2, f27, rdn # perform operation
fnmadd.d f29, f16, f2, f27, rmm # perform operation
fnmadd.d f29, f16, f2, f27, rne # perform operation
fnmadd.d f29, f16, f2, f27, rtz # perform operation
fnmadd.d f29, f16, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f16, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f16, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f16, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f16, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f16, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xffefffffffffffff)
li x21, 0x6aa4163ae2cdf084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x22fd234aadb5947c # load x3 with value 0x22fd234aadb5947c
sd x3, 0(x2) # store 0x22fd234aadb5947c in memory
fld f14, 0(x2) # load 0x22fd234aadb5947c from memory into f14
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fnmadd.d f21, f4, f14, f18, dyn # perform operation
fnmadd.d f21, f4, f14, f18, rdn # perform operation
fnmadd.d f21, f4, f14, f18, rmm # perform operation
fnmadd.d f21, f4, f14, f18, rne # perform operation
fnmadd.d f21, f4, f14, f18, rtz # perform operation
fnmadd.d f21, f4, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f4, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f4, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f4, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f4, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f4, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfffffffffffff)
li x17, 0x0d902b31eb8e6bab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0xe6410d0206cacb59 # load x3 with value 0xe6410d0206cacb59
sd x3, 0(x2) # store 0xe6410d0206cacb59 in memory
fld f22, 0(x2) # load 0xe6410d0206cacb59 from memory into f22
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fnmadd.d f17, f1, f22, f25, dyn # perform operation
fnmadd.d f17, f1, f22, f25, rdn # perform operation
fnmadd.d f17, f1, f22, f25, rmm # perform operation
fnmadd.d f17, f1, f22, f25, rne # perform operation
fnmadd.d f17, f1, f22, f25, rtz # perform operation
fnmadd.d f17, f1, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f1, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f1, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f1, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f1, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f1, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x800fffffffffffff)
li x22, 0x1b08ac1ccb332b5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x28cb8ab36724d47a # load x3 with value 0x28cb8ab36724d47a
sd x3, 0(x2) # store 0x28cb8ab36724d47a in memory
fld f30, 0(x2) # load 0x28cb8ab36724d47a from memory into f30
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fnmadd.d f22, f5, f30, f24, dyn # perform operation
fnmadd.d f22, f5, f30, f24, rdn # perform operation
fnmadd.d f22, f5, f30, f24, rmm # perform operation
fnmadd.d f22, f5, f30, f24, rne # perform operation
fnmadd.d f22, f5, f30, f24, rtz # perform operation
fnmadd.d f22, f5, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f5, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f5, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000)
li x5, 0x4999d38c34f93faf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x31205a7936e3ff4c # load x3 with value 0x31205a7936e3ff4c
sd x3, 0(x2) # store 0x31205a7936e3ff4c in memory
fld f4, 0(x2) # load 0x31205a7936e3ff4c from memory into f4
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fnmadd.d f5, f14, f4, f24, dyn # perform operation
fnmadd.d f5, f14, f4, f24, rdn # perform operation
fnmadd.d f5, f14, f4, f24, rmm # perform operation
fnmadd.d f5, f14, f4, f24, rne # perform operation
fnmadd.d f5, f14, f4, f24, rtz # perform operation
fnmadd.d f5, f14, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8008000000000000)
li x22, 0x81abeaecf312e273 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x561b6731a1ff88a7 # load x3 with value 0x561b6731a1ff88a7
sd x3, 0(x2) # store 0x561b6731a1ff88a7 in memory
fld f13, 0(x2) # load 0x561b6731a1ff88a7 from memory into f13
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fnmadd.d f22, f7, f13, f6, dyn # perform operation
fnmadd.d f22, f7, f13, f6, rdn # perform operation
fnmadd.d f22, f7, f13, f6, rmm # perform operation
fnmadd.d f22, f7, f13, f6, rne # perform operation
fnmadd.d f22, f7, f13, f6, rtz # perform operation
fnmadd.d f22, f7, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x1)
li x28, 0x55ab9cf701c8c4a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x2ab83f076bf4b15c # load x3 with value 0x2ab83f076bf4b15c
sd x3, 0(x2) # store 0x2ab83f076bf4b15c in memory
fld f12, 0(x2) # load 0x2ab83f076bf4b15c from memory into f12
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fnmadd.d f28, f2, f12, f22, dyn # perform operation
fnmadd.d f28, f2, f12, f22, rdn # perform operation
fnmadd.d f28, f2, f12, f22, rmm # perform operation
fnmadd.d f28, f2, f12, f22, rne # perform operation
fnmadd.d f28, f2, f12, f22, rtz # perform operation
fnmadd.d f28, f2, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f2, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f2, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000001)
li x12, 0x1d74e0338df177a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x8aadeb53066aae4b # load x3 with value 0x8aadeb53066aae4b
sd x3, 0(x2) # store 0x8aadeb53066aae4b in memory
fld f31, 0(x2) # load 0x8aadeb53066aae4b from memory into f31
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fnmadd.d f12, f7, f31, f1, dyn # perform operation
fnmadd.d f12, f7, f31, f1, rdn # perform operation
fnmadd.d f12, f7, f31, f1, rmm # perform operation
fnmadd.d f12, f7, f31, f1, rne # perform operation
fnmadd.d f12, f7, f31, f1, rtz # perform operation
fnmadd.d f12, f7, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000000)
li x13, 0x3eb6387b23e54781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x1e50097c667b6110 # load x3 with value 0x1e50097c667b6110
sd x3, 0(x2) # store 0x1e50097c667b6110 in memory
fld f5, 0(x2) # load 0x1e50097c667b6110 from memory into f5
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fnmadd.d f13, f6, f5, f26, dyn # perform operation
fnmadd.d f13, f6, f5, f26, rdn # perform operation
fnmadd.d f13, f6, f5, f26, rmm # perform operation
fnmadd.d f13, f6, f5, f26, rne # perform operation
fnmadd.d f13, f6, f5, f26, rtz # perform operation
fnmadd.d f13, f6, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f6, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f6, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f6, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f6, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f6, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfff0000000000000)
li x31, 0xc6a88a0f11125ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x7d16bb48ca561c4e # load x3 with value 0x7d16bb48ca561c4e
sd x3, 0(x2) # store 0x7d16bb48ca561c4e in memory
fld f24, 0(x2) # load 0x7d16bb48ca561c4e from memory into f24
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fnmadd.d f31, f25, f24, f11, dyn # perform operation
fnmadd.d f31, f25, f24, f11, rdn # perform operation
fnmadd.d f31, f25, f24, f11, rmm # perform operation
fnmadd.d f31, f25, f24, f11, rne # perform operation
fnmadd.d f31, f25, f24, f11, rtz # perform operation
fnmadd.d f31, f25, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f25, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f25, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f25, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f25, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f25, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff8000000000000)
li x29, 0x162036108ca3bd96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x7076ba14ef49e6b5 # load x3 with value 0x7076ba14ef49e6b5
sd x3, 0(x2) # store 0x7076ba14ef49e6b5 in memory
fld f14, 0(x2) # load 0x7076ba14ef49e6b5 from memory into f14
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fnmadd.d f29, f4, f14, f8, dyn # perform operation
fnmadd.d f29, f4, f14, f8, rdn # perform operation
fnmadd.d f29, f4, f14, f8, rmm # perform operation
fnmadd.d f29, f4, f14, f8, rne # perform operation
fnmadd.d f29, f4, f14, f8, rtz # perform operation
fnmadd.d f29, f4, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f4, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f4, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fffffffffffffff)
li x8, 0xa9c4516f678c24e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x1dc50a89d3572525 # load x3 with value 0x1dc50a89d3572525
sd x3, 0(x2) # store 0x1dc50a89d3572525 in memory
fld f29, 0(x2) # load 0x1dc50a89d3572525 from memory into f29
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fnmadd.d f8, f17, f29, f23, dyn # perform operation
fnmadd.d f8, f17, f29, f23, rdn # perform operation
fnmadd.d f8, f17, f29, f23, rmm # perform operation
fnmadd.d f8, f17, f29, f23, rne # perform operation
fnmadd.d f8, f17, f29, f23, rtz # perform operation
fnmadd.d f8, f17, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f17, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000001)
li x13, 0xffe7c90f26b67f8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0x9e00baa85571c63a # load x3 with value 0x9e00baa85571c63a
sd x3, 0(x2) # store 0x9e00baa85571c63a in memory
fld f31, 0(x2) # load 0x9e00baa85571c63a from memory into f31
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fnmadd.d f13, f11, f31, f17, dyn # perform operation
fnmadd.d f13, f11, f31, f17, rdn # perform operation
fnmadd.d f13, f11, f31, f17, rmm # perform operation
fnmadd.d f13, f11, f31, f17, rne # perform operation
fnmadd.d f13, f11, f31, f17, rtz # perform operation
fnmadd.d f13, f11, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f11, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f11, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x18, 0x854450f0e8a20064 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x7860c96b0147370e # load x3 with value 0x7860c96b0147370e
sd x3, 0(x2) # store 0x7860c96b0147370e in memory
fld f9, 0(x2) # load 0x7860c96b0147370e from memory into f9
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fnmadd.d f18, f21, f9, f28, dyn # perform operation
fnmadd.d f18, f21, f9, f28, rdn # perform operation
fnmadd.d f18, f21, f9, f28, rmm # perform operation
fnmadd.d f18, f21, f9, f28, rne # perform operation
fnmadd.d f18, f21, f9, f28, rtz # perform operation
fnmadd.d f18, f21, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f21, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x5a392534a57711ad)
li x17, 0x59df8eb7675399e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0xfff8a435e2322103 # load x3 with value 0xfff8a435e2322103
sd x3, 0(x2) # store 0xfff8a435e2322103 in memory
fld f25, 0(x2) # load 0xfff8a435e2322103 from memory into f25
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fnmadd.d f17, f13, f25, f16, dyn # perform operation
fnmadd.d f17, f13, f25, f16, rdn # perform operation
fnmadd.d f17, f13, f25, f16, rmm # perform operation
fnmadd.d f17, f13, f25, f16, rne # perform operation
fnmadd.d f17, f13, f25, f16, rtz # perform operation
fnmadd.d f17, f13, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f13, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xa6e895993737426c)
li x30, 0xfb2d317f853c50f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x6a4ef8648b2a2eb1 # load x3 with value 0x6a4ef8648b2a2eb1
sd x3, 0(x2) # store 0x6a4ef8648b2a2eb1 in memory
fld f29, 0(x2) # load 0x6a4ef8648b2a2eb1 from memory into f29
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fnmadd.d f30, f20, f29, f10, dyn # perform operation
fnmadd.d f30, f20, f29, f10, rdn # perform operation
fnmadd.d f30, f20, f29, f10, rmm # perform operation
fnmadd.d f30, f20, f29, f10, rne # perform operation
fnmadd.d f30, f20, f29, f10, rtz # perform operation
fnmadd.d f30, f20, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f20, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x0)
li x9, 0x8b22ca8ef562c348 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xc5c91505084948f3 # load x3 with value 0xc5c91505084948f3
sd x3, 0(x2) # store 0xc5c91505084948f3 in memory
fld f12, 0(x2) # load 0xc5c91505084948f3 from memory into f12
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fnmadd.d f9, f2, f12, f11, dyn # perform operation
fnmadd.d f9, f2, f12, f11, rdn # perform operation
fnmadd.d f9, f2, f12, f11, rmm # perform operation
fnmadd.d f9, f2, f12, f11, rne # perform operation
fnmadd.d f9, f2, f12, f11, rtz # perform operation
fnmadd.d f9, f2, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f2, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f2, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000000)
li x28, 0x8f853c6971301b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x72698af6d4da97a5 # load x3 with value 0x72698af6d4da97a5
sd x3, 0(x2) # store 0x72698af6d4da97a5 in memory
fld f5, 0(x2) # load 0x72698af6d4da97a5 from memory into f5
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fnmadd.d f28, f7, f5, f14, dyn # perform operation
fnmadd.d f28, f7, f5, f14, rdn # perform operation
fnmadd.d f28, f7, f5, f14, rmm # perform operation
fnmadd.d f28, f7, f5, f14, rne # perform operation
fnmadd.d f28, f7, f5, f14, rtz # perform operation
fnmadd.d f28, f7, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff0000000000000)
li x16, 0x01348ca59ed1f456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
li x3, 0x0a75d2bc8d152885 # load x3 with value 0x0a75d2bc8d152885
sd x3, 0(x2) # store 0x0a75d2bc8d152885 in memory
fld f19, 0(x2) # load 0x0a75d2bc8d152885 from memory into f19
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fnmadd.d f16, f3, f19, f29, dyn # perform operation
fnmadd.d f16, f3, f19, f29, rdn # perform operation
fnmadd.d f16, f3, f19, f29, rmm # perform operation
fnmadd.d f16, f3, f19, f29, rne # perform operation
fnmadd.d f16, f3, f19, f29, rtz # perform operation
fnmadd.d f16, f3, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f3, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f3, f19, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff0000000000000)
li x6, 0x582bac4b995ea9b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0xf0108d567c6632d2 # load x3 with value 0xf0108d567c6632d2
sd x3, 0(x2) # store 0xf0108d567c6632d2 in memory
fld f20, 0(x2) # load 0xf0108d567c6632d2 from memory into f20
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fnmadd.d f6, f17, f20, f21, dyn # perform operation
fnmadd.d f6, f17, f20, f21, rdn # perform operation
fnmadd.d f6, f17, f20, f21, rmm # perform operation
fnmadd.d f6, f17, f20, f21, rne # perform operation
fnmadd.d f6, f17, f20, f21, rtz # perform operation
fnmadd.d f6, f17, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f17, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f17, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff8000000000000)
li x13, 0xc105de9f9d9cd6b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xe6e77079d4f0b188 # load x3 with value 0xe6e77079d4f0b188
sd x3, 0(x2) # store 0xe6e77079d4f0b188 in memory
fld f11, 0(x2) # load 0xe6e77079d4f0b188 from memory into f11
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fnmadd.d f13, f29, f11, f23, dyn # perform operation
fnmadd.d f13, f29, f11, f23, rdn # perform operation
fnmadd.d f13, f29, f11, f23, rmm # perform operation
fnmadd.d f13, f29, f11, f23, rne # perform operation
fnmadd.d f13, f29, f11, f23, rtz # perform operation
fnmadd.d f13, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f29, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff8000000000000)
li x7, 0xb4132763c43aac86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x4f88e1eff141fcd4 # load x3 with value 0x4f88e1eff141fcd4
sd x3, 0(x2) # store 0x4f88e1eff141fcd4 in memory
fld f16, 0(x2) # load 0x4f88e1eff141fcd4 from memory into f16
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fnmadd.d f7, f26, f16, f4, dyn # perform operation
fnmadd.d f7, f26, f16, f4, rdn # perform operation
fnmadd.d f7, f26, f16, f4, rmm # perform operation
fnmadd.d f7, f26, f16, f4, rne # perform operation
fnmadd.d f7, f26, f16, f4, rtz # perform operation
fnmadd.d f7, f26, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f26, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f26, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f26, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f26, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f26, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x4000000000000000)
li x28, 0xd08741a517a3954a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x7e6efa73cfdc265f # load x3 with value 0x7e6efa73cfdc265f
sd x3, 0(x2) # store 0x7e6efa73cfdc265f in memory
fld f30, 0(x2) # load 0x7e6efa73cfdc265f from memory into f30
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fnmadd.d f28, f25, f30, f29, dyn # perform operation
fnmadd.d f28, f25, f30, f29, rdn # perform operation
fnmadd.d f28, f25, f30, f29, rmm # perform operation
fnmadd.d f28, f25, f30, f29, rne # perform operation
fnmadd.d f28, f25, f30, f29, rtz # perform operation
fnmadd.d f28, f25, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xc000000000000000)
li x4, 0x57224682bb378a29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0xd49fc4d385a089fb # load x3 with value 0xd49fc4d385a089fb
sd x3, 0(x2) # store 0xd49fc4d385a089fb in memory
fld f6, 0(x2) # load 0xd49fc4d385a089fb from memory into f6
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fnmadd.d f4, f22, f6, f27, dyn # perform operation
fnmadd.d f4, f22, f6, f27, rdn # perform operation
fnmadd.d f4, f22, f6, f27, rmm # perform operation
fnmadd.d f4, f22, f6, f27, rne # perform operation
fnmadd.d f4, f22, f6, f27, rtz # perform operation
fnmadd.d f4, f22, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f22, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f22, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x10000000000000)
li x20, 0x1f6711a2c431d38d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x50c6699ba5aa3f7d # load x3 with value 0x50c6699ba5aa3f7d
sd x3, 0(x2) # store 0x50c6699ba5aa3f7d in memory
fld f12, 0(x2) # load 0x50c6699ba5aa3f7d from memory into f12
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
fnmadd.d f20, f24, f12, f13, dyn # perform operation
fnmadd.d f20, f24, f12, f13, rdn # perform operation
fnmadd.d f20, f24, f12, f13, rmm # perform operation
fnmadd.d f20, f24, f12, f13, rne # perform operation
fnmadd.d f20, f24, f12, f13, rtz # perform operation
fnmadd.d f20, f24, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f24, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f24, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f24, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f24, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f24, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8010000000000000)
li x7, 0xa20c58f692ad5dd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0x1565a5dda36d41e3 # load x3 with value 0x1565a5dda36d41e3
sd x3, 0(x2) # store 0x1565a5dda36d41e3 in memory
fld f21, 0(x2) # load 0x1565a5dda36d41e3 from memory into f21
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fnmadd.d f7, f27, f21, f12, dyn # perform operation
fnmadd.d f7, f27, f21, f12, rdn # perform operation
fnmadd.d f7, f27, f21, f12, rmm # perform operation
fnmadd.d f7, f27, f21, f12, rne # perform operation
fnmadd.d f7, f27, f21, f12, rtz # perform operation
fnmadd.d f7, f27, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f27, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f27, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fefffffffffffff)
li x12, 0x5f31ae4957afdd69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x6b512017a25707d9 # load x3 with value 0x6b512017a25707d9
sd x3, 0(x2) # store 0x6b512017a25707d9 in memory
fld f1, 0(x2) # load 0x6b512017a25707d9 from memory into f1
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fnmadd.d f12, f10, f1, f15, dyn # perform operation
fnmadd.d f12, f10, f1, f15, rdn # perform operation
fnmadd.d f12, f10, f1, f15, rmm # perform operation
fnmadd.d f12, f10, f1, f15, rne # perform operation
fnmadd.d f12, f10, f1, f15, rtz # perform operation
fnmadd.d f12, f10, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f10, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f10, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xffefffffffffffff)
li x20, 0x4aa0997484357248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xe4147810faf11826 # load x3 with value 0xe4147810faf11826
sd x3, 0(x2) # store 0xe4147810faf11826 in memory
fld f17, 0(x2) # load 0xe4147810faf11826 from memory into f17
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fnmadd.d f20, f7, f17, f22, dyn # perform operation
fnmadd.d f20, f7, f17, f22, rdn # perform operation
fnmadd.d f20, f7, f17, f22, rmm # perform operation
fnmadd.d f20, f7, f17, f22, rne # perform operation
fnmadd.d f20, f7, f17, f22, rtz # perform operation
fnmadd.d f20, f7, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f7, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfffffffffffff)
li x15, 0xcb26d0d6460fffcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xb9cfa97deb052e9d # load x3 with value 0xb9cfa97deb052e9d
sd x3, 0(x2) # store 0xb9cfa97deb052e9d in memory
fld f2, 0(x2) # load 0xb9cfa97deb052e9d from memory into f2
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmadd.d f15, f1, f2, f21, dyn # perform operation
fnmadd.d f15, f1, f2, f21, rdn # perform operation
fnmadd.d f15, f1, f2, f21, rmm # perform operation
fnmadd.d f15, f1, f2, f21, rne # perform operation
fnmadd.d f15, f1, f2, f21, rtz # perform operation
fnmadd.d f15, f1, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f1, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f1, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f1, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f1, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f1, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x800fffffffffffff)
li x11, 0x39d428d6d4844f9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x8b583877afc93c3e # load x3 with value 0x8b583877afc93c3e
sd x3, 0(x2) # store 0x8b583877afc93c3e in memory
fld f21, 0(x2) # load 0x8b583877afc93c3e from memory into f21
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fnmadd.d f11, f7, f21, f23, dyn # perform operation
fnmadd.d f11, f7, f21, f23, rdn # perform operation
fnmadd.d f11, f7, f21, f23, rmm # perform operation
fnmadd.d f11, f7, f21, f23, rne # perform operation
fnmadd.d f11, f7, f21, f23, rtz # perform operation
fnmadd.d f11, f7, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f7, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f7, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000)
li x14, 0xf374befee0fdb29a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x60816111d302a448 # load x3 with value 0x60816111d302a448
sd x3, 0(x2) # store 0x60816111d302a448 in memory
fld f16, 0(x2) # load 0x60816111d302a448 from memory into f16
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fnmadd.d f14, f9, f16, f30, dyn # perform operation
fnmadd.d f14, f9, f16, f30, rdn # perform operation
fnmadd.d f14, f9, f16, f30, rmm # perform operation
fnmadd.d f14, f9, f16, f30, rne # perform operation
fnmadd.d f14, f9, f16, f30, rtz # perform operation
fnmadd.d f14, f9, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f9, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8008000000000000)
li x27, 0xed5cd9798f396f43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xb7b85a1eae661c95 # load x3 with value 0xb7b85a1eae661c95
sd x3, 0(x2) # store 0xb7b85a1eae661c95 in memory
fld f19, 0(x2) # load 0xb7b85a1eae661c95 from memory into f19
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fnmadd.d f27, f6, f19, f4, dyn # perform operation
fnmadd.d f27, f6, f19, f4, rdn # perform operation
fnmadd.d f27, f6, f19, f4, rmm # perform operation
fnmadd.d f27, f6, f19, f4, rne # perform operation
fnmadd.d f27, f6, f19, f4, rtz # perform operation
fnmadd.d f27, f6, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x1)
li x1, 0xfe367e1906a28d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x03b3e2ff298c8dc8 # load x3 with value 0x03b3e2ff298c8dc8
sd x3, 0(x2) # store 0x03b3e2ff298c8dc8 in memory
fld f24, 0(x2) # load 0x03b3e2ff298c8dc8 from memory into f24
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fnmadd.d f1, f28, f24, f17, dyn # perform operation
fnmadd.d f1, f28, f24, f17, rdn # perform operation
fnmadd.d f1, f28, f24, f17, rmm # perform operation
fnmadd.d f1, f28, f24, f17, rne # perform operation
fnmadd.d f1, f28, f24, f17, rtz # perform operation
fnmadd.d f1, f28, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f28, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f28, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f28, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f28, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f28, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000001)
li x8, 0x506ad36a3f6a539d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0x13245bcb01589df8 # load x3 with value 0x13245bcb01589df8
sd x3, 0(x2) # store 0x13245bcb01589df8 in memory
fld f24, 0(x2) # load 0x13245bcb01589df8 from memory into f24
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fnmadd.d f8, f27, f24, f9, dyn # perform operation
fnmadd.d f8, f27, f24, f9, rdn # perform operation
fnmadd.d f8, f27, f24, f9, rmm # perform operation
fnmadd.d f8, f27, f24, f9, rne # perform operation
fnmadd.d f8, f27, f24, f9, rtz # perform operation
fnmadd.d f8, f27, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000000)
li x29, 0x9bb380e7e5c02e86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xe6af77f392f7216d # load x3 with value 0xe6af77f392f7216d
sd x3, 0(x2) # store 0xe6af77f392f7216d in memory
fld f16, 0(x2) # load 0xe6af77f392f7216d from memory into f16
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fnmadd.d f29, f7, f16, f1, dyn # perform operation
fnmadd.d f29, f7, f16, f1, rdn # perform operation
fnmadd.d f29, f7, f16, f1, rmm # perform operation
fnmadd.d f29, f7, f16, f1, rne # perform operation
fnmadd.d f29, f7, f16, f1, rtz # perform operation
fnmadd.d f29, f7, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfff0000000000000)
li x23, 0x934948fbb82c2e23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x33f0d28d688f4fa8 # load x3 with value 0x33f0d28d688f4fa8
sd x3, 0(x2) # store 0x33f0d28d688f4fa8 in memory
fld f1, 0(x2) # load 0x33f0d28d688f4fa8 from memory into f1
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fnmadd.d f23, f25, f1, f22, dyn # perform operation
fnmadd.d f23, f25, f1, f22, rdn # perform operation
fnmadd.d f23, f25, f1, f22, rmm # perform operation
fnmadd.d f23, f25, f1, f22, rne # perform operation
fnmadd.d f23, f25, f1, f22, rtz # perform operation
fnmadd.d f23, f25, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff8000000000000)
li x11, 0x9ba9fe37a7d44290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x19849b0e2f89f531 # load x3 with value 0x19849b0e2f89f531
sd x3, 0(x2) # store 0x19849b0e2f89f531 in memory
fld f24, 0(x2) # load 0x19849b0e2f89f531 from memory into f24
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f11, f17, f24, f16, dyn # perform operation
fnmadd.d f11, f17, f24, f16, rdn # perform operation
fnmadd.d f11, f17, f24, f16, rmm # perform operation
fnmadd.d f11, f17, f24, f16, rne # perform operation
fnmadd.d f11, f17, f24, f16, rtz # perform operation
fnmadd.d f11, f17, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fffffffffffffff)
li x10, 0x40ee2afa6bd68a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x741617925d6a20bd # load x3 with value 0x741617925d6a20bd
sd x3, 0(x2) # store 0x741617925d6a20bd in memory
fld f22, 0(x2) # load 0x741617925d6a20bd from memory into f22
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fnmadd.d f10, f24, f22, f18, dyn # perform operation
fnmadd.d f10, f24, f22, f18, rdn # perform operation
fnmadd.d f10, f24, f22, f18, rmm # perform operation
fnmadd.d f10, f24, f22, f18, rne # perform operation
fnmadd.d f10, f24, f22, f18, rtz # perform operation
fnmadd.d f10, f24, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f24, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f24, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f24, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f24, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f24, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000001)
li x4, 0xfe8f932f3d30f6a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x2fcfe99c5f194254 # load x3 with value 0x2fcfe99c5f194254
sd x3, 0(x2) # store 0x2fcfe99c5f194254 in memory
fld f23, 0(x2) # load 0x2fcfe99c5f194254 from memory into f23
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fnmadd.d f4, f9, f23, f20, dyn # perform operation
fnmadd.d f4, f9, f23, f20, rdn # perform operation
fnmadd.d f4, f9, f23, f20, rmm # perform operation
fnmadd.d f4, f9, f23, f20, rne # perform operation
fnmadd.d f4, f9, f23, f20, rtz # perform operation
fnmadd.d f4, f9, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f9, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f9, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff7ffffffffffff)
li x20, 0x0f08a48778d4487f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xa2fd9d02412bd3c1 # load x3 with value 0xa2fd9d02412bd3c1
sd x3, 0(x2) # store 0xa2fd9d02412bd3c1 in memory
fld f27, 0(x2) # load 0xa2fd9d02412bd3c1 from memory into f27
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fnmadd.d f20, f6, f27, f14, dyn # perform operation
fnmadd.d f20, f6, f27, f14, rdn # perform operation
fnmadd.d f20, f6, f27, f14, rmm # perform operation
fnmadd.d f20, f6, f27, f14, rne # perform operation
fnmadd.d f20, f6, f27, f14, rtz # perform operation
fnmadd.d f20, f6, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f6, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f6, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x5a392534a57711ad)
li x9, 0xfd040bbc7475c32d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0x2ded646f7fd2fbf2 # load x3 with value 0x2ded646f7fd2fbf2
sd x3, 0(x2) # store 0x2ded646f7fd2fbf2 in memory
fld f10, 0(x2) # load 0x2ded646f7fd2fbf2 from memory into f10
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fnmadd.d f9, f21, f10, f18, dyn # perform operation
fnmadd.d f9, f21, f10, f18, rdn # perform operation
fnmadd.d f9, f21, f10, f18, rmm # perform operation
fnmadd.d f9, f21, f10, f18, rne # perform operation
fnmadd.d f9, f21, f10, f18, rtz # perform operation
fnmadd.d f9, f21, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f21, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f21, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xa6e895993737426c)
li x28, 0x2240915afc59c72c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x3bc800c6481f8634 # load x3 with value 0x3bc800c6481f8634
sd x3, 0(x2) # store 0x3bc800c6481f8634 in memory
fld f5, 0(x2) # load 0x3bc800c6481f8634 from memory into f5
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fnmadd.d f28, f7, f5, f8, dyn # perform operation
fnmadd.d f28, f7, f5, f8, rdn # perform operation
fnmadd.d f28, f7, f5, f8, rmm # perform operation
fnmadd.d f28, f7, f5, f8, rne # perform operation
fnmadd.d f28, f7, f5, f8, rtz # perform operation
fnmadd.d f28, f7, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x0)
li x30, 0x74d8424bfce24945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xa76e932c46c7eaa8 # load x3 with value 0xa76e932c46c7eaa8
sd x3, 0(x2) # store 0xa76e932c46c7eaa8 in memory
fld f3, 0(x2) # load 0xa76e932c46c7eaa8 from memory into f3
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fnmadd.d f30, f25, f3, f24, dyn # perform operation
fnmadd.d f30, f25, f3, f24, rdn # perform operation
fnmadd.d f30, f25, f3, f24, rmm # perform operation
fnmadd.d f30, f25, f3, f24, rne # perform operation
fnmadd.d f30, f25, f3, f24, rtz # perform operation
fnmadd.d f30, f25, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f25, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f25, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000000)
li x21, 0xa0cf50f713074ba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x619815346ac0fe94 # load x3 with value 0x619815346ac0fe94
sd x3, 0(x2) # store 0x619815346ac0fe94 in memory
fld f4, 0(x2) # load 0x619815346ac0fe94 from memory into f4
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fnmadd.d f21, f15, f4, f24, dyn # perform operation
fnmadd.d f21, f15, f4, f24, rdn # perform operation
fnmadd.d f21, f15, f4, f24, rmm # perform operation
fnmadd.d f21, f15, f4, f24, rne # perform operation
fnmadd.d f21, f15, f4, f24, rtz # perform operation
fnmadd.d f21, f15, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f15, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f15, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f15, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f15, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f15, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff0000000000000)
li x26, 0x91592b034e4f637f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x68b4cd812edf0721 # load x3 with value 0x68b4cd812edf0721
sd x3, 0(x2) # store 0x68b4cd812edf0721 in memory
fld f21, 0(x2) # load 0x68b4cd812edf0721 from memory into f21
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
fnmadd.d f26, f25, f21, f22, dyn # perform operation
fnmadd.d f26, f25, f21, f22, rdn # perform operation
fnmadd.d f26, f25, f21, f22, rmm # perform operation
fnmadd.d f26, f25, f21, f22, rne # perform operation
fnmadd.d f26, f25, f21, f22, rtz # perform operation
fnmadd.d f26, f25, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f25, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff0000000000000)
li x31, 0x4330b62f02750a62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x28ec80d4dbccfbda # load x3 with value 0x28ec80d4dbccfbda
sd x3, 0(x2) # store 0x28ec80d4dbccfbda in memory
fld f9, 0(x2) # load 0x28ec80d4dbccfbda from memory into f9
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fnmadd.d f31, f12, f9, f20, dyn # perform operation
fnmadd.d f31, f12, f9, f20, rdn # perform operation
fnmadd.d f31, f12, f9, f20, rmm # perform operation
fnmadd.d f31, f12, f9, f20, rne # perform operation
fnmadd.d f31, f12, f9, f20, rtz # perform operation
fnmadd.d f31, f12, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f9, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff8000000000000)
li x7, 0xa6cdacd6a093adfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0x487e3fcd04009bba # load x3 with value 0x487e3fcd04009bba
sd x3, 0(x2) # store 0x487e3fcd04009bba in memory
fld f15, 0(x2) # load 0x487e3fcd04009bba from memory into f15
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmadd.d f7, f14, f15, f20, dyn # perform operation
fnmadd.d f7, f14, f15, f20, rdn # perform operation
fnmadd.d f7, f14, f15, f20, rmm # perform operation
fnmadd.d f7, f14, f15, f20, rne # perform operation
fnmadd.d f7, f14, f15, f20, rtz # perform operation
fnmadd.d f7, f14, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f14, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f14, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f14, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f14, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f14, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff8000000000000)
li x10, 0x45e5cfa4dca01e23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x4662813b3d875c05 # load x3 with value 0x4662813b3d875c05
sd x3, 0(x2) # store 0x4662813b3d875c05 in memory
fld f19, 0(x2) # load 0x4662813b3d875c05 from memory into f19
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fnmadd.d f10, f27, f19, f22, dyn # perform operation
fnmadd.d f10, f27, f19, f22, rdn # perform operation
fnmadd.d f10, f27, f19, f22, rmm # perform operation
fnmadd.d f10, f27, f19, f22, rne # perform operation
fnmadd.d f10, f27, f19, f22, rtz # perform operation
fnmadd.d f10, f27, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f27, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x4000000000000000)
li x15, 0x697ecf9732f7bc87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x36a25c7fc235be35 # load x3 with value 0x36a25c7fc235be35
sd x3, 0(x2) # store 0x36a25c7fc235be35 in memory
fld f9, 0(x2) # load 0x36a25c7fc235be35 from memory into f9
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fnmadd.d f15, f30, f9, f28, dyn # perform operation
fnmadd.d f15, f30, f9, f28, rdn # perform operation
fnmadd.d f15, f30, f9, f28, rmm # perform operation
fnmadd.d f15, f30, f9, f28, rne # perform operation
fnmadd.d f15, f30, f9, f28, rtz # perform operation
fnmadd.d f15, f30, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xc000000000000000)
li x30, 0x39b53519859cc94f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xb026455a343a3b98 # load x3 with value 0xb026455a343a3b98
sd x3, 0(x2) # store 0xb026455a343a3b98 in memory
fld f31, 0(x2) # load 0xb026455a343a3b98 from memory into f31
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fnmadd.d f30, f26, f31, f14, dyn # perform operation
fnmadd.d f30, f26, f31, f14, rdn # perform operation
fnmadd.d f30, f26, f31, f14, rmm # perform operation
fnmadd.d f30, f26, f31, f14, rne # perform operation
fnmadd.d f30, f26, f31, f14, rtz # perform operation
fnmadd.d f30, f26, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f26, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x10000000000000)
li x8, 0x60e2801295f884b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0xfc8ac5f5e15a31d5 # load x3 with value 0xfc8ac5f5e15a31d5
sd x3, 0(x2) # store 0xfc8ac5f5e15a31d5 in memory
fld f20, 0(x2) # load 0xfc8ac5f5e15a31d5 from memory into f20
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fnmadd.d f8, f24, f20, f3, dyn # perform operation
fnmadd.d f8, f24, f20, f3, rdn # perform operation
fnmadd.d f8, f24, f20, f3, rmm # perform operation
fnmadd.d f8, f24, f20, f3, rne # perform operation
fnmadd.d f8, f24, f20, f3, rtz # perform operation
fnmadd.d f8, f24, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f24, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8010000000000000)
li x20, 0xd5acd8c643158116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x377f1b0bf5fd853f # load x3 with value 0x377f1b0bf5fd853f
sd x3, 0(x2) # store 0x377f1b0bf5fd853f in memory
fld f5, 0(x2) # load 0x377f1b0bf5fd853f from memory into f5
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fnmadd.d f20, f2, f5, f28, dyn # perform operation
fnmadd.d f20, f2, f5, f28, rdn # perform operation
fnmadd.d f20, f2, f5, f28, rmm # perform operation
fnmadd.d f20, f2, f5, f28, rne # perform operation
fnmadd.d f20, f2, f5, f28, rtz # perform operation
fnmadd.d f20, f2, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f2, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f2, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f2, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f2, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f2, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fefffffffffffff)
li x17, 0xc70f5fdc05ebca6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xb6da7fa39bccc463 # load x3 with value 0xb6da7fa39bccc463
sd x3, 0(x2) # store 0xb6da7fa39bccc463 in memory
fld f8, 0(x2) # load 0xb6da7fa39bccc463 from memory into f8
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fnmadd.d f17, f26, f8, f22, dyn # perform operation
fnmadd.d f17, f26, f8, f22, rdn # perform operation
fnmadd.d f17, f26, f8, f22, rmm # perform operation
fnmadd.d f17, f26, f8, f22, rne # perform operation
fnmadd.d f17, f26, f8, f22, rtz # perform operation
fnmadd.d f17, f26, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f26, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xffefffffffffffff)
li x31, 0x86a8afc3eef913a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0xf19dc9f005f54822 # load x3 with value 0xf19dc9f005f54822
sd x3, 0(x2) # store 0xf19dc9f005f54822 in memory
fld f3, 0(x2) # load 0xf19dc9f005f54822 from memory into f3
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fnmadd.d f31, f16, f3, f27, dyn # perform operation
fnmadd.d f31, f16, f3, f27, rdn # perform operation
fnmadd.d f31, f16, f3, f27, rmm # perform operation
fnmadd.d f31, f16, f3, f27, rne # perform operation
fnmadd.d f31, f16, f3, f27, rtz # perform operation
fnmadd.d f31, f16, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f16, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f16, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f16, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f16, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f16, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfffffffffffff)
li x19, 0x9920c83c3f2e5548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x671f3ee85b45b37f # load x3 with value 0x671f3ee85b45b37f
sd x3, 0(x2) # store 0x671f3ee85b45b37f in memory
fld f21, 0(x2) # load 0x671f3ee85b45b37f from memory into f21
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fnmadd.d f19, f30, f21, f28, dyn # perform operation
fnmadd.d f19, f30, f21, f28, rdn # perform operation
fnmadd.d f19, f30, f21, f28, rmm # perform operation
fnmadd.d f19, f30, f21, f28, rne # perform operation
fnmadd.d f19, f30, f21, f28, rtz # perform operation
fnmadd.d f19, f30, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f30, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x800fffffffffffff)
li x2, 0x4fc5358d47f1aef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0x7f87e7a991d0197f # load x3 with value 0x7f87e7a991d0197f
sd x3, 0(x2) # store 0x7f87e7a991d0197f in memory
fld f25, 0(x2) # load 0x7f87e7a991d0197f from memory into f25
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fnmadd.d f2, f9, f25, f31, dyn # perform operation
fnmadd.d f2, f9, f25, f31, rdn # perform operation
fnmadd.d f2, f9, f25, f31, rmm # perform operation
fnmadd.d f2, f9, f25, f31, rne # perform operation
fnmadd.d f2, f9, f25, f31, rtz # perform operation
fnmadd.d f2, f9, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000)
li x1, 0x51cf367d2f2bc5c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xc5d39e8777e7dcc8 # load x3 with value 0xc5d39e8777e7dcc8
sd x3, 0(x2) # store 0xc5d39e8777e7dcc8 in memory
fld f23, 0(x2) # load 0xc5d39e8777e7dcc8 from memory into f23
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fnmadd.d f1, f9, f23, f6, dyn # perform operation
fnmadd.d f1, f9, f23, f6, rdn # perform operation
fnmadd.d f1, f9, f23, f6, rmm # perform operation
fnmadd.d f1, f9, f23, f6, rne # perform operation
fnmadd.d f1, f9, f23, f6, rtz # perform operation
fnmadd.d f1, f9, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f9, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8008000000000000)
li x13, 0x97beb5868a07ccf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x4bcf73337dae8fe6 # load x3 with value 0x4bcf73337dae8fe6
sd x3, 0(x2) # store 0x4bcf73337dae8fe6 in memory
fld f9, 0(x2) # load 0x4bcf73337dae8fe6 from memory into f9
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fnmadd.d f13, f21, f9, f2, dyn # perform operation
fnmadd.d f13, f21, f9, f2, rdn # perform operation
fnmadd.d f13, f21, f9, f2, rmm # perform operation
fnmadd.d f13, f21, f9, f2, rne # perform operation
fnmadd.d f13, f21, f9, f2, rtz # perform operation
fnmadd.d f13, f21, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f21, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f21, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x1)
li x13, 0x70d78524b233219d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0xc5975b66942cf0a7 # load x3 with value 0xc5975b66942cf0a7
sd x3, 0(x2) # store 0xc5975b66942cf0a7 in memory
fld f23, 0(x2) # load 0xc5975b66942cf0a7 from memory into f23
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fnmadd.d f13, f2, f23, f1, dyn # perform operation
fnmadd.d f13, f2, f23, f1, rdn # perform operation
fnmadd.d f13, f2, f23, f1, rmm # perform operation
fnmadd.d f13, f2, f23, f1, rne # perform operation
fnmadd.d f13, f2, f23, f1, rtz # perform operation
fnmadd.d f13, f2, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f2, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f2, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f2, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f2, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f2, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000001)
li x21, 0xa1ef9bcd7f0de836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0xcad06a5b1f9e0f6a # load x3 with value 0xcad06a5b1f9e0f6a
sd x3, 0(x2) # store 0xcad06a5b1f9e0f6a in memory
fld f18, 0(x2) # load 0xcad06a5b1f9e0f6a from memory into f18
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmadd.d f21, f10, f18, f6, dyn # perform operation
fnmadd.d f21, f10, f18, f6, rdn # perform operation
fnmadd.d f21, f10, f18, f6, rmm # perform operation
fnmadd.d f21, f10, f18, f6, rne # perform operation
fnmadd.d f21, f10, f18, f6, rtz # perform operation
fnmadd.d f21, f10, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f10, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000000)
li x6, 0x472bbddb94de187d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x6228137f9041ceb9 # load x3 with value 0x6228137f9041ceb9
sd x3, 0(x2) # store 0x6228137f9041ceb9 in memory
fld f8, 0(x2) # load 0x6228137f9041ceb9 from memory into f8
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fnmadd.d f6, f10, f8, f27, dyn # perform operation
fnmadd.d f6, f10, f8, f27, rdn # perform operation
fnmadd.d f6, f10, f8, f27, rmm # perform operation
fnmadd.d f6, f10, f8, f27, rne # perform operation
fnmadd.d f6, f10, f8, f27, rtz # perform operation
fnmadd.d f6, f10, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f10, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfff0000000000000)
li x8, 0xac190858064a3836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x384856970083256d # load x3 with value 0x384856970083256d
sd x3, 0(x2) # store 0x384856970083256d in memory
fld f10, 0(x2) # load 0x384856970083256d from memory into f10
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fnmadd.d f8, f21, f10, f14, dyn # perform operation
fnmadd.d f8, f21, f10, f14, rdn # perform operation
fnmadd.d f8, f21, f10, f14, rmm # perform operation
fnmadd.d f8, f21, f10, f14, rne # perform operation
fnmadd.d f8, f21, f10, f14, rtz # perform operation
fnmadd.d f8, f21, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f21, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff8000000000000)
li x24, 0x61aafaf4b60bc9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x81031122b53f89a1 # load x3 with value 0x81031122b53f89a1
sd x3, 0(x2) # store 0x81031122b53f89a1 in memory
fld f3, 0(x2) # load 0x81031122b53f89a1 from memory into f3
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fnmadd.d f24, f13, f3, f12, dyn # perform operation
fnmadd.d f24, f13, f3, f12, rdn # perform operation
fnmadd.d f24, f13, f3, f12, rmm # perform operation
fnmadd.d f24, f13, f3, f12, rne # perform operation
fnmadd.d f24, f13, f3, f12, rtz # perform operation
fnmadd.d f24, f13, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f13, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f13, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f13, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f13, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f13, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fffffffffffffff)
li x29, 0xf51f61338cdd2041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xfb529b33fb86da1c # load x3 with value 0xfb529b33fb86da1c
sd x3, 0(x2) # store 0xfb529b33fb86da1c in memory
fld f6, 0(x2) # load 0xfb529b33fb86da1c from memory into f6
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fnmadd.d f29, f9, f6, f17, dyn # perform operation
fnmadd.d f29, f9, f6, f17, rdn # perform operation
fnmadd.d f29, f9, f6, f17, rmm # perform operation
fnmadd.d f29, f9, f6, f17, rne # perform operation
fnmadd.d f29, f9, f6, f17, rtz # perform operation
fnmadd.d f29, f9, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f9, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f9, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000001)
li x23, 0x4f83f4e168b94272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x53232ebb40796910 # load x3 with value 0x53232ebb40796910
sd x3, 0(x2) # store 0x53232ebb40796910 in memory
fld f24, 0(x2) # load 0x53232ebb40796910 from memory into f24
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
fnmadd.d f23, f16, f24, f26, dyn # perform operation
fnmadd.d f23, f16, f24, f26, rdn # perform operation
fnmadd.d f23, f16, f24, f26, rmm # perform operation
fnmadd.d f23, f16, f24, f26, rne # perform operation
fnmadd.d f23, f16, f24, f26, rtz # perform operation
fnmadd.d f23, f16, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f16, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f16, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f16, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f16, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f16, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff7ffffffffffff)
li x18, 0x695b59a5e6fddb9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x861dcbf3dab135f4 # load x3 with value 0x861dcbf3dab135f4
sd x3, 0(x2) # store 0x861dcbf3dab135f4 in memory
fld f2, 0(x2) # load 0x861dcbf3dab135f4 from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fnmadd.d f18, f20, f2, f29, dyn # perform operation
fnmadd.d f18, f20, f2, f29, rdn # perform operation
fnmadd.d f18, f20, f2, f29, rmm # perform operation
fnmadd.d f18, f20, f2, f29, rne # perform operation
fnmadd.d f18, f20, f2, f29, rtz # perform operation
fnmadd.d f18, f20, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f20, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f20, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f20, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f20, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f20, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x5a392534a57711ad)
li x26, 0x7b81dbe57f2c4c7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xbd62bff3822e5883 # load x3 with value 0xbd62bff3822e5883
sd x3, 0(x2) # store 0xbd62bff3822e5883 in memory
fld f8, 0(x2) # load 0xbd62bff3822e5883 from memory into f8
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fnmadd.d f26, f15, f8, f30, dyn # perform operation
fnmadd.d f26, f15, f8, f30, rdn # perform operation
fnmadd.d f26, f15, f8, f30, rmm # perform operation
fnmadd.d f26, f15, f8, f30, rne # perform operation
fnmadd.d f26, f15, f8, f30, rtz # perform operation
fnmadd.d f26, f15, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f15, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f15, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xa6e895993737426c)
li x23, 0x4c91f74dc565300d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x0464d8239128c0ec # load x3 with value 0x0464d8239128c0ec
sd x3, 0(x2) # store 0x0464d8239128c0ec in memory
fld f1, 0(x2) # load 0x0464d8239128c0ec from memory into f1
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmadd.d f23, f25, f1, f16, dyn # perform operation
fnmadd.d f23, f25, f1, f16, rdn # perform operation
fnmadd.d f23, f25, f1, f16, rmm # perform operation
fnmadd.d f23, f25, f1, f16, rne # perform operation
fnmadd.d f23, f25, f1, f16, rtz # perform operation
fnmadd.d f23, f25, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x0)
li x12, 0x3c8bc0db7cf80292 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x9b8c661e6cfdf460 # load x3 with value 0x9b8c661e6cfdf460
sd x3, 0(x2) # store 0x9b8c661e6cfdf460 in memory
fld f6, 0(x2) # load 0x9b8c661e6cfdf460 from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fnmadd.d f12, f10, f6, f3, dyn # perform operation
fnmadd.d f12, f10, f6, f3, rdn # perform operation
fnmadd.d f12, f10, f6, f3, rmm # perform operation
fnmadd.d f12, f10, f6, f3, rne # perform operation
fnmadd.d f12, f10, f6, f3, rtz # perform operation
fnmadd.d f12, f10, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f10, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000000)
li x15, 0x1f62b5d46bcf2d85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x5adc82e699ad25a4 # load x3 with value 0x5adc82e699ad25a4
sd x3, 0(x2) # store 0x5adc82e699ad25a4 in memory
fld f7, 0(x2) # load 0x5adc82e699ad25a4 from memory into f7
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fnmadd.d f15, f30, f7, f24, dyn # perform operation
fnmadd.d f15, f30, f7, f24, rdn # perform operation
fnmadd.d f15, f30, f7, f24, rmm # perform operation
fnmadd.d f15, f30, f7, f24, rne # perform operation
fnmadd.d f15, f30, f7, f24, rtz # perform operation
fnmadd.d f15, f30, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff0000000000000)
li x16, 0xa72198077b475e11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x34e6f15d98fedd22 # load x3 with value 0x34e6f15d98fedd22
sd x3, 0(x2) # store 0x34e6f15d98fedd22 in memory
fld f11, 0(x2) # load 0x34e6f15d98fedd22 from memory into f11
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fnmadd.d f16, f22, f11, f5, dyn # perform operation
fnmadd.d f16, f22, f11, f5, rdn # perform operation
fnmadd.d f16, f22, f11, f5, rmm # perform operation
fnmadd.d f16, f22, f11, f5, rne # perform operation
fnmadd.d f16, f22, f11, f5, rtz # perform operation
fnmadd.d f16, f22, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff0000000000000)
li x27, 0x62eaa1d9067d7c6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x4bacd42d928651bd # load x3 with value 0x4bacd42d928651bd
sd x3, 0(x2) # store 0x4bacd42d928651bd in memory
fld f9, 0(x2) # load 0x4bacd42d928651bd from memory into f9
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fnmadd.d f27, f12, f9, f10, dyn # perform operation
fnmadd.d f27, f12, f9, f10, rdn # perform operation
fnmadd.d f27, f12, f9, f10, rmm # perform operation
fnmadd.d f27, f12, f9, f10, rne # perform operation
fnmadd.d f27, f12, f9, f10, rtz # perform operation
fnmadd.d f27, f12, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f12, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f12, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff8000000000000)
li x22, 0xbdc21c2f081481ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0xe58f27726169810b # load x3 with value 0xe58f27726169810b
sd x3, 0(x2) # store 0xe58f27726169810b in memory
fld f17, 0(x2) # load 0xe58f27726169810b from memory into f17
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fnmadd.d f22, f11, f17, f31, dyn # perform operation
fnmadd.d f22, f11, f17, f31, rdn # perform operation
fnmadd.d f22, f11, f17, f31, rmm # perform operation
fnmadd.d f22, f11, f17, f31, rne # perform operation
fnmadd.d f22, f11, f17, f31, rtz # perform operation
fnmadd.d f22, f11, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f11, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff8000000000000)
li x5, 0xd6925a780ebf14f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x3ddebb0911f77174 # load x3 with value 0x3ddebb0911f77174
sd x3, 0(x2) # store 0x3ddebb0911f77174 in memory
fld f16, 0(x2) # load 0x3ddebb0911f77174 from memory into f16
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmadd.d f5, f11, f16, f26, dyn # perform operation
fnmadd.d f5, f11, f16, f26, rdn # perform operation
fnmadd.d f5, f11, f16, f26, rmm # perform operation
fnmadd.d f5, f11, f16, f26, rne # perform operation
fnmadd.d f5, f11, f16, f26, rtz # perform operation
fnmadd.d f5, f11, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x4000000000000000)
li x24, 0x8cce7318c09798c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x291dcd17daeee47e # load x3 with value 0x291dcd17daeee47e
sd x3, 0(x2) # store 0x291dcd17daeee47e in memory
fld f19, 0(x2) # load 0x291dcd17daeee47e from memory into f19
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fnmadd.d f24, f13, f19, f18, dyn # perform operation
fnmadd.d f24, f13, f19, f18, rdn # perform operation
fnmadd.d f24, f13, f19, f18, rmm # perform operation
fnmadd.d f24, f13, f19, f18, rne # perform operation
fnmadd.d f24, f13, f19, f18, rtz # perform operation
fnmadd.d f24, f13, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f13, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xc000000000000000)
li x14, 0x7171f9c65a15a583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xf8e3c6f1eeac19af # load x3 with value 0xf8e3c6f1eeac19af
sd x3, 0(x2) # store 0xf8e3c6f1eeac19af in memory
fld f4, 0(x2) # load 0xf8e3c6f1eeac19af from memory into f4
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fnmadd.d f14, f29, f4, f1, dyn # perform operation
fnmadd.d f14, f29, f4, f1, rdn # perform operation
fnmadd.d f14, f29, f4, f1, rmm # perform operation
fnmadd.d f14, f29, f4, f1, rne # perform operation
fnmadd.d f14, f29, f4, f1, rtz # perform operation
fnmadd.d f14, f29, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f29, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f29, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f29, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f29, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f29, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x10000000000000)
li x17, 0x424ca02133d2e1f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0xfe1d0089f48f27bc # load x3 with value 0xfe1d0089f48f27bc
sd x3, 0(x2) # store 0xfe1d0089f48f27bc in memory
fld f27, 0(x2) # load 0xfe1d0089f48f27bc from memory into f27
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fnmadd.d f17, f6, f27, f19, dyn # perform operation
fnmadd.d f17, f6, f27, f19, rdn # perform operation
fnmadd.d f17, f6, f27, f19, rmm # perform operation
fnmadd.d f17, f6, f27, f19, rne # perform operation
fnmadd.d f17, f6, f27, f19, rtz # perform operation
fnmadd.d f17, f6, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8010000000000000)
li x1, 0xade90f218612d2a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0x44ae781c308493fb # load x3 with value 0x44ae781c308493fb
sd x3, 0(x2) # store 0x44ae781c308493fb in memory
fld f11, 0(x2) # load 0x44ae781c308493fb from memory into f11
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fnmadd.d f1, f28, f11, f24, dyn # perform operation
fnmadd.d f1, f28, f11, f24, rdn # perform operation
fnmadd.d f1, f28, f11, f24, rmm # perform operation
fnmadd.d f1, f28, f11, f24, rne # perform operation
fnmadd.d f1, f28, f11, f24, rtz # perform operation
fnmadd.d f1, f28, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f28, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f28, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f28, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f28, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f28, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fefffffffffffff)
li x11, 0x818931a9faa7298e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x820d3aff40eccfc3 # load x3 with value 0x820d3aff40eccfc3
sd x3, 0(x2) # store 0x820d3aff40eccfc3 in memory
fld f5, 0(x2) # load 0x820d3aff40eccfc3 from memory into f5
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fnmadd.d f11, f17, f5, f22, dyn # perform operation
fnmadd.d f11, f17, f5, f22, rdn # perform operation
fnmadd.d f11, f17, f5, f22, rmm # perform operation
fnmadd.d f11, f17, f5, f22, rne # perform operation
fnmadd.d f11, f17, f5, f22, rtz # perform operation
fnmadd.d f11, f17, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f5, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xffefffffffffffff)
li x5, 0x99d13bbab92780af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x951482b08155b789 # load x3 with value 0x951482b08155b789
sd x3, 0(x2) # store 0x951482b08155b789 in memory
fld f17, 0(x2) # load 0x951482b08155b789 from memory into f17
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fnmadd.d f5, f25, f17, f16, dyn # perform operation
fnmadd.d f5, f25, f17, f16, rdn # perform operation
fnmadd.d f5, f25, f17, f16, rmm # perform operation
fnmadd.d f5, f25, f17, f16, rne # perform operation
fnmadd.d f5, f25, f17, f16, rtz # perform operation
fnmadd.d f5, f25, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f25, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f25, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f25, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f25, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f25, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfffffffffffff)
li x28, 0x0f18653782ad5d0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x1f85c67e257b8a0f # load x3 with value 0x1f85c67e257b8a0f
sd x3, 0(x2) # store 0x1f85c67e257b8a0f in memory
fld f1, 0(x2) # load 0x1f85c67e257b8a0f from memory into f1
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
fnmadd.d f28, f17, f1, f24, dyn # perform operation
fnmadd.d f28, f17, f1, f24, rdn # perform operation
fnmadd.d f28, f17, f1, f24, rmm # perform operation
fnmadd.d f28, f17, f1, f24, rne # perform operation
fnmadd.d f28, f17, f1, f24, rtz # perform operation
fnmadd.d f28, f17, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f17, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f17, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f17, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f17, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f17, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x800fffffffffffff)
li x27, 0xb46d07dfd6663ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x10f2d984f6bf71b4 # load x3 with value 0x10f2d984f6bf71b4
sd x3, 0(x2) # store 0x10f2d984f6bf71b4 in memory
fld f19, 0(x2) # load 0x10f2d984f6bf71b4 from memory into f19
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fnmadd.d f27, f6, f19, f23, dyn # perform operation
fnmadd.d f27, f6, f19, f23, rdn # perform operation
fnmadd.d f27, f6, f19, f23, rmm # perform operation
fnmadd.d f27, f6, f19, f23, rne # perform operation
fnmadd.d f27, f6, f19, f23, rtz # perform operation
fnmadd.d f27, f6, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000)
li x6, 0x5c93bfd4794dcc44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x44ae06c55e473a94 # load x3 with value 0x44ae06c55e473a94
sd x3, 0(x2) # store 0x44ae06c55e473a94 in memory
fld f17, 0(x2) # load 0x44ae06c55e473a94 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmadd.d f6, f27, f17, f25, dyn # perform operation
fnmadd.d f6, f27, f17, f25, rdn # perform operation
fnmadd.d f6, f27, f17, f25, rmm # perform operation
fnmadd.d f6, f27, f17, f25, rne # perform operation
fnmadd.d f6, f27, f17, f25, rtz # perform operation
fnmadd.d f6, f27, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f27, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f27, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8008000000000000)
li x18, 0xc0d4d87f327fa238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x70d57d362ffedfe4 # load x3 with value 0x70d57d362ffedfe4
sd x3, 0(x2) # store 0x70d57d362ffedfe4 in memory
fld f16, 0(x2) # load 0x70d57d362ffedfe4 from memory into f16
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fnmadd.d f18, f2, f16, f29, dyn # perform operation
fnmadd.d f18, f2, f16, f29, rdn # perform operation
fnmadd.d f18, f2, f16, f29, rmm # perform operation
fnmadd.d f18, f2, f16, f29, rne # perform operation
fnmadd.d f18, f2, f16, f29, rtz # perform operation
fnmadd.d f18, f2, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f2, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f2, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f2, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f2, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f2, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x1)
li x8, 0x57c5324f0a882892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x27bb1991c6e5699e # load x3 with value 0x27bb1991c6e5699e
sd x3, 0(x2) # store 0x27bb1991c6e5699e in memory
fld f3, 0(x2) # load 0x27bb1991c6e5699e from memory into f3
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
fnmadd.d f8, f20, f3, f25, dyn # perform operation
fnmadd.d f8, f20, f3, f25, rdn # perform operation
fnmadd.d f8, f20, f3, f25, rmm # perform operation
fnmadd.d f8, f20, f3, f25, rne # perform operation
fnmadd.d f8, f20, f3, f25, rtz # perform operation
fnmadd.d f8, f20, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f20, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000001)
li x3, 0x07fd125b2afa7eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x7f0ddae0212f37f5 # load x3 with value 0x7f0ddae0212f37f5
sd x3, 0(x2) # store 0x7f0ddae0212f37f5 in memory
fld f25, 0(x2) # load 0x7f0ddae0212f37f5 from memory into f25
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fnmadd.d f3, f14, f25, f30, dyn # perform operation
fnmadd.d f3, f14, f25, f30, rdn # perform operation
fnmadd.d f3, f14, f25, f30, rmm # perform operation
fnmadd.d f3, f14, f25, f30, rne # perform operation
fnmadd.d f3, f14, f25, f30, rtz # perform operation
fnmadd.d f3, f14, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000000)
li x3, 0x2c6cfbb13614781d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0xc6b357c4b0c4ef45 # load x3 with value 0xc6b357c4b0c4ef45
sd x3, 0(x2) # store 0xc6b357c4b0c4ef45 in memory
fld f9, 0(x2) # load 0xc6b357c4b0c4ef45 from memory into f9
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fnmadd.d f3, f11, f9, f1, dyn # perform operation
fnmadd.d f3, f11, f9, f1, rdn # perform operation
fnmadd.d f3, f11, f9, f1, rmm # perform operation
fnmadd.d f3, f11, f9, f1, rne # perform operation
fnmadd.d f3, f11, f9, f1, rtz # perform operation
fnmadd.d f3, f11, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f11, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f11, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f11, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f11, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f11, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfff0000000000000)
li x19, 0x4c460acc3614d6e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xbfcf79c8e096e7ce # load x3 with value 0xbfcf79c8e096e7ce
sd x3, 0(x2) # store 0xbfcf79c8e096e7ce in memory
fld f11, 0(x2) # load 0xbfcf79c8e096e7ce from memory into f11
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fnmadd.d f19, f29, f11, f18, dyn # perform operation
fnmadd.d f19, f29, f11, f18, rdn # perform operation
fnmadd.d f19, f29, f11, f18, rmm # perform operation
fnmadd.d f19, f29, f11, f18, rne # perform operation
fnmadd.d f19, f29, f11, f18, rtz # perform operation
fnmadd.d f19, f29, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f29, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f29, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff8000000000000)
li x23, 0x6eb39ab782b0153f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x02c7e4f99d11a21a # load x3 with value 0x02c7e4f99d11a21a
sd x3, 0(x2) # store 0x02c7e4f99d11a21a in memory
fld f27, 0(x2) # load 0x02c7e4f99d11a21a from memory into f27
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fnmadd.d f23, f12, f27, f7, dyn # perform operation
fnmadd.d f23, f12, f27, f7, rdn # perform operation
fnmadd.d f23, f12, f27, f7, rmm # perform operation
fnmadd.d f23, f12, f27, f7, rne # perform operation
fnmadd.d f23, f12, f27, f7, rtz # perform operation
fnmadd.d f23, f12, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fffffffffffffff)
li x21, 0x990c2c57350b0853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xa9b6b7eacc4ea484 # load x3 with value 0xa9b6b7eacc4ea484
sd x3, 0(x2) # store 0xa9b6b7eacc4ea484 in memory
fld f9, 0(x2) # load 0xa9b6b7eacc4ea484 from memory into f9
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fnmadd.d f21, f15, f9, f12, dyn # perform operation
fnmadd.d f21, f15, f9, f12, rdn # perform operation
fnmadd.d f21, f15, f9, f12, rmm # perform operation
fnmadd.d f21, f15, f9, f12, rne # perform operation
fnmadd.d f21, f15, f9, f12, rtz # perform operation
fnmadd.d f21, f15, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f15, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000001)
li x26, 0xd836815aae60ee9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x458dab0b32403664 # load x3 with value 0x458dab0b32403664
sd x3, 0(x2) # store 0x458dab0b32403664 in memory
fld f12, 0(x2) # load 0x458dab0b32403664 from memory into f12
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fnmadd.d f26, f21, f12, f20, dyn # perform operation
fnmadd.d f26, f21, f12, f20, rdn # perform operation
fnmadd.d f26, f21, f12, f20, rmm # perform operation
fnmadd.d f26, f21, f12, f20, rne # perform operation
fnmadd.d f26, f21, f12, f20, rtz # perform operation
fnmadd.d f26, f21, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff7ffffffffffff)
li x1, 0xe9710e07028fbc0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xfad21263b829efb8 # load x3 with value 0xfad21263b829efb8
sd x3, 0(x2) # store 0xfad21263b829efb8 in memory
fld f25, 0(x2) # load 0xfad21263b829efb8 from memory into f25
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fnmadd.d f1, f3, f25, f2, dyn # perform operation
fnmadd.d f1, f3, f25, f2, rdn # perform operation
fnmadd.d f1, f3, f25, f2, rmm # perform operation
fnmadd.d f1, f3, f25, f2, rne # perform operation
fnmadd.d f1, f3, f25, f2, rtz # perform operation
fnmadd.d f1, f3, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f3, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x5a392534a57711ad)
li x23, 0xbecc9be173d6c4e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x9a2a849108964913 # load x3 with value 0x9a2a849108964913
sd x3, 0(x2) # store 0x9a2a849108964913 in memory
fld f7, 0(x2) # load 0x9a2a849108964913 from memory into f7
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmadd.d f23, f6, f7, f14, dyn # perform operation
fnmadd.d f23, f6, f7, f14, rdn # perform operation
fnmadd.d f23, f6, f7, f14, rmm # perform operation
fnmadd.d f23, f6, f7, f14, rne # perform operation
fnmadd.d f23, f6, f7, f14, rtz # perform operation
fnmadd.d f23, f6, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f6, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xa6e895993737426c)
li x24, 0x7a93d4b10ea25520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x56b848b8cb02a51e # load x3 with value 0x56b848b8cb02a51e
sd x3, 0(x2) # store 0x56b848b8cb02a51e in memory
fld f10, 0(x2) # load 0x56b848b8cb02a51e from memory into f10
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
fnmadd.d f24, f27, f10, f23, dyn # perform operation
fnmadd.d f24, f27, f10, f23, rdn # perform operation
fnmadd.d f24, f27, f10, f23, rmm # perform operation
fnmadd.d f24, f27, f10, f23, rne # perform operation
fnmadd.d f24, f27, f10, f23, rtz # perform operation
fnmadd.d f24, f27, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f27, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x0)
li x18, 0xb5aca32099c16531 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0xa464d07d25675644 # load x3 with value 0xa464d07d25675644
sd x3, 0(x2) # store 0xa464d07d25675644 in memory
fld f30, 0(x2) # load 0xa464d07d25675644 from memory into f30
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fnmadd.d f18, f29, f30, f19, dyn # perform operation
fnmadd.d f18, f29, f30, f19, rdn # perform operation
fnmadd.d f18, f29, f30, f19, rmm # perform operation
fnmadd.d f18, f29, f30, f19, rne # perform operation
fnmadd.d f18, f29, f30, f19, rtz # perform operation
fnmadd.d f18, f29, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000000)
li x1, 0xfaa03914ee7317c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x925425c8ea93f24f # load x3 with value 0x925425c8ea93f24f
sd x3, 0(x2) # store 0x925425c8ea93f24f in memory
fld f17, 0(x2) # load 0x925425c8ea93f24f from memory into f17
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fnmadd.d f1, f14, f17, f27, dyn # perform operation
fnmadd.d f1, f14, f17, f27, rdn # perform operation
fnmadd.d f1, f14, f17, f27, rmm # perform operation
fnmadd.d f1, f14, f17, f27, rne # perform operation
fnmadd.d f1, f14, f17, f27, rtz # perform operation
fnmadd.d f1, f14, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f14, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f14, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff0000000000000)
li x9, 0xecc520a0999bd8c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x7db04aba4a7ce7a5 # load x3 with value 0x7db04aba4a7ce7a5
sd x3, 0(x2) # store 0x7db04aba4a7ce7a5 in memory
fld f22, 0(x2) # load 0x7db04aba4a7ce7a5 from memory into f22
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fnmadd.d f9, f29, f22, f17, dyn # perform operation
fnmadd.d f9, f29, f22, f17, rdn # perform operation
fnmadd.d f9, f29, f22, f17, rmm # perform operation
fnmadd.d f9, f29, f22, f17, rne # perform operation
fnmadd.d f9, f29, f22, f17, rtz # perform operation
fnmadd.d f9, f29, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f29, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff0000000000000)
li x28, 0xdd4d5a6f26bc6c3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x9ac8a9c696696b3b # load x3 with value 0x9ac8a9c696696b3b
sd x3, 0(x2) # store 0x9ac8a9c696696b3b in memory
fld f8, 0(x2) # load 0x9ac8a9c696696b3b from memory into f8
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fnmadd.d f28, f31, f8, f27, dyn # perform operation
fnmadd.d f28, f31, f8, f27, rdn # perform operation
fnmadd.d f28, f31, f8, f27, rmm # perform operation
fnmadd.d f28, f31, f8, f27, rne # perform operation
fnmadd.d f28, f31, f8, f27, rtz # perform operation
fnmadd.d f28, f31, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f31, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f31, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff8000000000000)
li x30, 0x5f18ca18c9542e41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x4859563a661caf7a # load x3 with value 0x4859563a661caf7a
sd x3, 0(x2) # store 0x4859563a661caf7a in memory
fld f22, 0(x2) # load 0x4859563a661caf7a from memory into f22
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fnmadd.d f30, f9, f22, f23, dyn # perform operation
fnmadd.d f30, f9, f22, f23, rdn # perform operation
fnmadd.d f30, f9, f22, f23, rmm # perform operation
fnmadd.d f30, f9, f22, f23, rne # perform operation
fnmadd.d f30, f9, f22, f23, rtz # perform operation
fnmadd.d f30, f9, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f9, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f9, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff8000000000000)
li x28, 0xa44c12ae1b188e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0xf33818b6b6e419b1 # load x3 with value 0xf33818b6b6e419b1
sd x3, 0(x2) # store 0xf33818b6b6e419b1 in memory
fld f5, 0(x2) # load 0xf33818b6b6e419b1 from memory into f5
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fnmadd.d f28, f30, f5, f1, dyn # perform operation
fnmadd.d f28, f30, f5, f1, rdn # perform operation
fnmadd.d f28, f30, f5, f1, rmm # perform operation
fnmadd.d f28, f30, f5, f1, rne # perform operation
fnmadd.d f28, f30, f5, f1, rtz # perform operation
fnmadd.d f28, f30, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f30, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f30, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f30, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f30, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f30, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x4000000000000000)
li x13, 0xbaa6cb7ecb9681a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0xc7a2788ec60a869d # load x3 with value 0xc7a2788ec60a869d
sd x3, 0(x2) # store 0xc7a2788ec60a869d in memory
fld f15, 0(x2) # load 0xc7a2788ec60a869d from memory into f15
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fnmadd.d f13, f11, f15, f6, dyn # perform operation
fnmadd.d f13, f11, f15, f6, rdn # perform operation
fnmadd.d f13, f11, f15, f6, rmm # perform operation
fnmadd.d f13, f11, f15, f6, rne # perform operation
fnmadd.d f13, f11, f15, f6, rtz # perform operation
fnmadd.d f13, f11, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f11, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xc000000000000000)
li x22, 0xd9ab2b2e48b2e357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xe77cdfcaf4d043c9 # load x3 with value 0xe77cdfcaf4d043c9
sd x3, 0(x2) # store 0xe77cdfcaf4d043c9 in memory
fld f31, 0(x2) # load 0xe77cdfcaf4d043c9 from memory into f31
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fnmadd.d f22, f24, f31, f18, dyn # perform operation
fnmadd.d f22, f24, f31, f18, rdn # perform operation
fnmadd.d f22, f24, f31, f18, rmm # perform operation
fnmadd.d f22, f24, f31, f18, rne # perform operation
fnmadd.d f22, f24, f31, f18, rtz # perform operation
fnmadd.d f22, f24, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f24, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f24, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f24, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f24, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f24, f31, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x10000000000000)
li x2, 0x286a3bd8b447dae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0xb84f93a726e786c6 # load x3 with value 0xb84f93a726e786c6
sd x3, 0(x2) # store 0xb84f93a726e786c6 in memory
fld f27, 0(x2) # load 0xb84f93a726e786c6 from memory into f27
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fnmadd.d f2, f7, f27, f4, dyn # perform operation
fnmadd.d f2, f7, f27, f4, rdn # perform operation
fnmadd.d f2, f7, f27, f4, rmm # perform operation
fnmadd.d f2, f7, f27, f4, rne # perform operation
fnmadd.d f2, f7, f27, f4, rtz # perform operation
fnmadd.d f2, f7, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f7, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f7, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8010000000000000)
li x22, 0x1aaf41ef9d5cfe0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x4e3fbc056b37421e # load x3 with value 0x4e3fbc056b37421e
sd x3, 0(x2) # store 0x4e3fbc056b37421e in memory
fld f30, 0(x2) # load 0x4e3fbc056b37421e from memory into f30
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fnmadd.d f22, f10, f30, f9, dyn # perform operation
fnmadd.d f22, f10, f30, f9, rdn # perform operation
fnmadd.d f22, f10, f30, f9, rmm # perform operation
fnmadd.d f22, f10, f30, f9, rne # perform operation
fnmadd.d f22, f10, f30, f9, rtz # perform operation
fnmadd.d f22, f10, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f10, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f10, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f10, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f10, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f10, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fefffffffffffff)
li x15, 0xe9fca3fa4f5bcd07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x9f17b5af8d3baa26 # load x3 with value 0x9f17b5af8d3baa26
sd x3, 0(x2) # store 0x9f17b5af8d3baa26 in memory
fld f6, 0(x2) # load 0x9f17b5af8d3baa26 from memory into f6
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fnmadd.d f15, f11, f6, f13, dyn # perform operation
fnmadd.d f15, f11, f6, f13, rdn # perform operation
fnmadd.d f15, f11, f6, f13, rmm # perform operation
fnmadd.d f15, f11, f6, f13, rne # perform operation
fnmadd.d f15, f11, f6, f13, rtz # perform operation
fnmadd.d f15, f11, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f11, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xffefffffffffffff)
li x23, 0x59be2945339dd8ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x077488fcf7071686 # load x3 with value 0x077488fcf7071686
sd x3, 0(x2) # store 0x077488fcf7071686 in memory
fld f28, 0(x2) # load 0x077488fcf7071686 from memory into f28
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fnmadd.d f23, f25, f28, f21, dyn # perform operation
fnmadd.d f23, f25, f28, f21, rdn # perform operation
fnmadd.d f23, f25, f28, f21, rmm # perform operation
fnmadd.d f23, f25, f28, f21, rne # perform operation
fnmadd.d f23, f25, f28, f21, rtz # perform operation
fnmadd.d f23, f25, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfffffffffffff)
li x18, 0x1b6cfc557867d8a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x384a300117265c25 # load x3 with value 0x384a300117265c25
sd x3, 0(x2) # store 0x384a300117265c25 in memory
fld f9, 0(x2) # load 0x384a300117265c25 from memory into f9
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fnmadd.d f18, f29, f9, f31, dyn # perform operation
fnmadd.d f18, f29, f9, f31, rdn # perform operation
fnmadd.d f18, f29, f9, f31, rmm # perform operation
fnmadd.d f18, f29, f9, f31, rne # perform operation
fnmadd.d f18, f29, f9, f31, rtz # perform operation
fnmadd.d f18, f29, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x800fffffffffffff)
li x14, 0x2654158c3363f4a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x1cd8689f6ad345c2 # load x3 with value 0x1cd8689f6ad345c2
sd x3, 0(x2) # store 0x1cd8689f6ad345c2 in memory
fld f25, 0(x2) # load 0x1cd8689f6ad345c2 from memory into f25
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fnmadd.d f14, f20, f25, f28, dyn # perform operation
fnmadd.d f14, f20, f25, f28, rdn # perform operation
fnmadd.d f14, f20, f25, f28, rmm # perform operation
fnmadd.d f14, f20, f25, f28, rne # perform operation
fnmadd.d f14, f20, f25, f28, rtz # perform operation
fnmadd.d f14, f20, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f20, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000)
li x17, 0xe505ac27cd0ae1d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x94f779cca43e349c # load x3 with value 0x94f779cca43e349c
sd x3, 0(x2) # store 0x94f779cca43e349c in memory
fld f16, 0(x2) # load 0x94f779cca43e349c from memory into f16
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fnmadd.d f17, f31, f16, f6, dyn # perform operation
fnmadd.d f17, f31, f16, f6, rdn # perform operation
fnmadd.d f17, f31, f16, f6, rmm # perform operation
fnmadd.d f17, f31, f16, f6, rne # perform operation
fnmadd.d f17, f31, f16, f6, rtz # perform operation
fnmadd.d f17, f31, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f31, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f31, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8008000000000000)
li x28, 0xd6cf8409f5bb7c7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x99efa4db5647af72 # load x3 with value 0x99efa4db5647af72
sd x3, 0(x2) # store 0x99efa4db5647af72 in memory
fld f16, 0(x2) # load 0x99efa4db5647af72 from memory into f16
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fnmadd.d f28, f13, f16, f30, dyn # perform operation
fnmadd.d f28, f13, f16, f30, rdn # perform operation
fnmadd.d f28, f13, f16, f30, rmm # perform operation
fnmadd.d f28, f13, f16, f30, rne # perform operation
fnmadd.d f28, f13, f16, f30, rtz # perform operation
fnmadd.d f28, f13, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f13, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f13, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x1)
li x29, 0x6146dc8742abfd3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x9977d818890393db # load x3 with value 0x9977d818890393db
sd x3, 0(x2) # store 0x9977d818890393db in memory
fld f22, 0(x2) # load 0x9977d818890393db from memory into f22
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fnmadd.d f29, f9, f22, f17, dyn # perform operation
fnmadd.d f29, f9, f22, f17, rdn # perform operation
fnmadd.d f29, f9, f22, f17, rmm # perform operation
fnmadd.d f29, f9, f22, f17, rne # perform operation
fnmadd.d f29, f9, f22, f17, rtz # perform operation
fnmadd.d f29, f9, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f9, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000001)
li x19, 0xece0c08f99b33d96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x27be15c0a5a6dcf1 # load x3 with value 0x27be15c0a5a6dcf1
sd x3, 0(x2) # store 0x27be15c0a5a6dcf1 in memory
fld f20, 0(x2) # load 0x27be15c0a5a6dcf1 from memory into f20
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fnmadd.d f19, f21, f20, f17, dyn # perform operation
fnmadd.d f19, f21, f20, f17, rdn # perform operation
fnmadd.d f19, f21, f20, f17, rmm # perform operation
fnmadd.d f19, f21, f20, f17, rne # perform operation
fnmadd.d f19, f21, f20, f17, rtz # perform operation
fnmadd.d f19, f21, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f21, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000000)
li x1, 0x1b3884f915196cef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x658073b8a348d2aa # load x3 with value 0x658073b8a348d2aa
sd x3, 0(x2) # store 0x658073b8a348d2aa in memory
fld f3, 0(x2) # load 0x658073b8a348d2aa from memory into f3
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
fnmadd.d f1, f7, f3, f28, dyn # perform operation
fnmadd.d f1, f7, f3, f28, rdn # perform operation
fnmadd.d f1, f7, f3, f28, rmm # perform operation
fnmadd.d f1, f7, f3, f28, rne # perform operation
fnmadd.d f1, f7, f3, f28, rtz # perform operation
fnmadd.d f1, f7, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f7, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfff0000000000000)
li x6, 0xf4bbb5260ad48d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x048681fdaa8b0ee4 # load x3 with value 0x048681fdaa8b0ee4
sd x3, 0(x2) # store 0x048681fdaa8b0ee4 in memory
fld f8, 0(x2) # load 0x048681fdaa8b0ee4 from memory into f8
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fnmadd.d f6, f20, f8, f5, dyn # perform operation
fnmadd.d f6, f20, f8, f5, rdn # perform operation
fnmadd.d f6, f20, f8, f5, rmm # perform operation
fnmadd.d f6, f20, f8, f5, rne # perform operation
fnmadd.d f6, f20, f8, f5, rtz # perform operation
fnmadd.d f6, f20, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f20, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff8000000000000)
li x1, 0x29e21703d3a3118a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x608da771a67c245b # load x3 with value 0x608da771a67c245b
sd x3, 0(x2) # store 0x608da771a67c245b in memory
fld f10, 0(x2) # load 0x608da771a67c245b from memory into f10
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f1, f2, f10, f16, dyn # perform operation
fnmadd.d f1, f2, f10, f16, rdn # perform operation
fnmadd.d f1, f2, f10, f16, rmm # perform operation
fnmadd.d f1, f2, f10, f16, rne # perform operation
fnmadd.d f1, f2, f10, f16, rtz # perform operation
fnmadd.d f1, f2, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f2, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fffffffffffffff)
li x18, 0xfd2621a5eeb4b35e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x13588e3e3dacda25 # load x3 with value 0x13588e3e3dacda25
sd x3, 0(x2) # store 0x13588e3e3dacda25 in memory
fld f15, 0(x2) # load 0x13588e3e3dacda25 from memory into f15
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fnmadd.d f18, f25, f15, f5, dyn # perform operation
fnmadd.d f18, f25, f15, f5, rdn # perform operation
fnmadd.d f18, f25, f15, f5, rmm # perform operation
fnmadd.d f18, f25, f15, f5, rne # perform operation
fnmadd.d f18, f25, f15, f5, rtz # perform operation
fnmadd.d f18, f25, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f25, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000001)
li x24, 0xdc2409c8dcbc2f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x43c4e800a32e5d00 # load x3 with value 0x43c4e800a32e5d00
sd x3, 0(x2) # store 0x43c4e800a32e5d00 in memory
fld f5, 0(x2) # load 0x43c4e800a32e5d00 from memory into f5
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fnmadd.d f24, f2, f5, f11, dyn # perform operation
fnmadd.d f24, f2, f5, f11, rdn # perform operation
fnmadd.d f24, f2, f5, f11, rmm # perform operation
fnmadd.d f24, f2, f5, f11, rne # perform operation
fnmadd.d f24, f2, f5, f11, rtz # perform operation
fnmadd.d f24, f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f2, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff7ffffffffffff)
li x24, 0x91745804919738c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0xe47cb2af427733a2 # load x3 with value 0xe47cb2af427733a2
sd x3, 0(x2) # store 0xe47cb2af427733a2 in memory
fld f12, 0(x2) # load 0xe47cb2af427733a2 from memory into f12
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fnmadd.d f24, f2, f12, f6, dyn # perform operation
fnmadd.d f24, f2, f12, f6, rdn # perform operation
fnmadd.d f24, f2, f12, f6, rmm # perform operation
fnmadd.d f24, f2, f12, f6, rne # perform operation
fnmadd.d f24, f2, f12, f6, rtz # perform operation
fnmadd.d f24, f2, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f2, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x5a392534a57711ad)
li x29, 0x2f68757ac60df604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xe1af63bd7f8f1f39 # load x3 with value 0xe1af63bd7f8f1f39
sd x3, 0(x2) # store 0xe1af63bd7f8f1f39 in memory
fld f27, 0(x2) # load 0xe1af63bd7f8f1f39 from memory into f27
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fnmadd.d f29, f14, f27, f17, dyn # perform operation
fnmadd.d f29, f14, f27, f17, rdn # perform operation
fnmadd.d f29, f14, f27, f17, rmm # perform operation
fnmadd.d f29, f14, f27, f17, rne # perform operation
fnmadd.d f29, f14, f27, f17, rtz # perform operation
fnmadd.d f29, f14, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f14, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f14, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f14, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f14, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f14, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xa6e895993737426c)
li x28, 0xba99b0f673b972aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0xc080f91f6218b5cc # load x3 with value 0xc080f91f6218b5cc
sd x3, 0(x2) # store 0xc080f91f6218b5cc in memory
fld f10, 0(x2) # load 0xc080f91f6218b5cc from memory into f10
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fnmadd.d f28, f2, f10, f5, dyn # perform operation
fnmadd.d f28, f2, f10, f5, rdn # perform operation
fnmadd.d f28, f2, f10, f5, rmm # perform operation
fnmadd.d f28, f2, f10, f5, rne # perform operation
fnmadd.d f28, f2, f10, f5, rtz # perform operation
fnmadd.d f28, f2, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f2, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f2, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f2, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f2, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f2, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x0)
li x10, 0x7fe76279596bf9fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x1022a875c8682f26 # load x3 with value 0x1022a875c8682f26
sd x3, 0(x2) # store 0x1022a875c8682f26 in memory
fld f3, 0(x2) # load 0x1022a875c8682f26 from memory into f3
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fnmadd.d f10, f24, f3, f30, dyn # perform operation
fnmadd.d f10, f24, f3, f30, rdn # perform operation
fnmadd.d f10, f24, f3, f30, rmm # perform operation
fnmadd.d f10, f24, f3, f30, rne # perform operation
fnmadd.d f10, f24, f3, f30, rtz # perform operation
fnmadd.d f10, f24, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f24, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f24, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f24, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f24, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f24, f3, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000000)
li x8, 0x09700af5725b433c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x12952aad366e7bc6 # load x3 with value 0x12952aad366e7bc6
sd x3, 0(x2) # store 0x12952aad366e7bc6 in memory
fld f20, 0(x2) # load 0x12952aad366e7bc6 from memory into f20
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmadd.d f8, f23, f20, f4, dyn # perform operation
fnmadd.d f8, f23, f20, f4, rdn # perform operation
fnmadd.d f8, f23, f20, f4, rmm # perform operation
fnmadd.d f8, f23, f20, f4, rne # perform operation
fnmadd.d f8, f23, f20, f4, rtz # perform operation
fnmadd.d f8, f23, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f23, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f23, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f23, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f23, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f23, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff0000000000000)
li x6, 0x57a4f023b141bbd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x5175d7aea656c0ed # load x3 with value 0x5175d7aea656c0ed
sd x3, 0(x2) # store 0x5175d7aea656c0ed in memory
fld f18, 0(x2) # load 0x5175d7aea656c0ed from memory into f18
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fnmadd.d f6, f12, f18, f26, dyn # perform operation
fnmadd.d f6, f12, f18, f26, rdn # perform operation
fnmadd.d f6, f12, f18, f26, rmm # perform operation
fnmadd.d f6, f12, f18, f26, rne # perform operation
fnmadd.d f6, f12, f18, f26, rtz # perform operation
fnmadd.d f6, f12, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f12, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff0000000000000)
li x31, 0x635fba1293f8d22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xd0f646ca8cb8cd2e # load x3 with value 0xd0f646ca8cb8cd2e
sd x3, 0(x2) # store 0xd0f646ca8cb8cd2e in memory
fld f18, 0(x2) # load 0xd0f646ca8cb8cd2e from memory into f18
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fnmadd.d f31, f5, f18, f23, dyn # perform operation
fnmadd.d f31, f5, f18, f23, rdn # perform operation
fnmadd.d f31, f5, f18, f23, rmm # perform operation
fnmadd.d f31, f5, f18, f23, rne # perform operation
fnmadd.d f31, f5, f18, f23, rtz # perform operation
fnmadd.d f31, f5, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f5, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f5, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff8000000000000)
li x30, 0x77f781db1c5295ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x89b9a4ea7cb46ff3 # load x3 with value 0x89b9a4ea7cb46ff3
sd x3, 0(x2) # store 0x89b9a4ea7cb46ff3 in memory
fld f21, 0(x2) # load 0x89b9a4ea7cb46ff3 from memory into f21
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmadd.d f30, f29, f21, f20, dyn # perform operation
fnmadd.d f30, f29, f21, f20, rdn # perform operation
fnmadd.d f30, f29, f21, f20, rmm # perform operation
fnmadd.d f30, f29, f21, f20, rne # perform operation
fnmadd.d f30, f29, f21, f20, rtz # perform operation
fnmadd.d f30, f29, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f29, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff8000000000000)
li x10, 0xa218e0624a305723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xc725d4008379691d # load x3 with value 0xc725d4008379691d
sd x3, 0(x2) # store 0xc725d4008379691d in memory
fld f29, 0(x2) # load 0xc725d4008379691d from memory into f29
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fnmadd.d f10, f9, f29, f8, dyn # perform operation
fnmadd.d f10, f9, f29, f8, rdn # perform operation
fnmadd.d f10, f9, f29, f8, rmm # perform operation
fnmadd.d f10, f9, f29, f8, rne # perform operation
fnmadd.d f10, f9, f29, f8, rtz # perform operation
fnmadd.d f10, f9, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f9, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x4000000000000000)
li x16, 0xf02688b89ffac62a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0xd377788336a05dbb # load x3 with value 0xd377788336a05dbb
sd x3, 0(x2) # store 0xd377788336a05dbb in memory
fld f8, 0(x2) # load 0xd377788336a05dbb from memory into f8
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fnmadd.d f16, f15, f8, f4, dyn # perform operation
fnmadd.d f16, f15, f8, f4, rdn # perform operation
fnmadd.d f16, f15, f8, f4, rmm # perform operation
fnmadd.d f16, f15, f8, f4, rne # perform operation
fnmadd.d f16, f15, f8, f4, rtz # perform operation
fnmadd.d f16, f15, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f15, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f15, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f15, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f15, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f15, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xc000000000000000)
li x29, 0x29958572311977d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x403f35ff11d9a3f1 # load x3 with value 0x403f35ff11d9a3f1
sd x3, 0(x2) # store 0x403f35ff11d9a3f1 in memory
fld f2, 0(x2) # load 0x403f35ff11d9a3f1 from memory into f2
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
fnmadd.d f29, f16, f2, f26, dyn # perform operation
fnmadd.d f29, f16, f2, f26, rdn # perform operation
fnmadd.d f29, f16, f2, f26, rmm # perform operation
fnmadd.d f29, f16, f2, f26, rne # perform operation
fnmadd.d f29, f16, f2, f26, rtz # perform operation
fnmadd.d f29, f16, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f16, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f16, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f16, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f16, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f16, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x10000000000000)
li x29, 0x9b084ba0c18ffd8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x8cfbbbd90e100567 # load x3 with value 0x8cfbbbd90e100567
sd x3, 0(x2) # store 0x8cfbbbd90e100567 in memory
fld f28, 0(x2) # load 0x8cfbbbd90e100567 from memory into f28
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fnmadd.d f29, f6, f28, f20, dyn # perform operation
fnmadd.d f29, f6, f28, f20, rdn # perform operation
fnmadd.d f29, f6, f28, f20, rmm # perform operation
fnmadd.d f29, f6, f28, f20, rne # perform operation
fnmadd.d f29, f6, f28, f20, rtz # perform operation
fnmadd.d f29, f6, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f6, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8010000000000000)
li x20, 0x6c77d41cab909461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0xa8806e1e51874658 # load x3 with value 0xa8806e1e51874658
sd x3, 0(x2) # store 0xa8806e1e51874658 in memory
fld f14, 0(x2) # load 0xa8806e1e51874658 from memory into f14
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fnmadd.d f20, f18, f14, f16, dyn # perform operation
fnmadd.d f20, f18, f14, f16, rdn # perform operation
fnmadd.d f20, f18, f14, f16, rmm # perform operation
fnmadd.d f20, f18, f14, f16, rne # perform operation
fnmadd.d f20, f18, f14, f16, rtz # perform operation
fnmadd.d f20, f18, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f18, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fefffffffffffff)
li x15, 0xc9fd0081aa7bc654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x606f4fb79ba8378b # load x3 with value 0x606f4fb79ba8378b
sd x3, 0(x2) # store 0x606f4fb79ba8378b in memory
fld f19, 0(x2) # load 0x606f4fb79ba8378b from memory into f19
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fnmadd.d f15, f6, f19, f22, dyn # perform operation
fnmadd.d f15, f6, f19, f22, rdn # perform operation
fnmadd.d f15, f6, f19, f22, rmm # perform operation
fnmadd.d f15, f6, f19, f22, rne # perform operation
fnmadd.d f15, f6, f19, f22, rtz # perform operation
fnmadd.d f15, f6, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f6, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f6, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xffefffffffffffff)
li x3, 0x7b47f10804487e77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x3bcfb0eb154a3105 # load x3 with value 0x3bcfb0eb154a3105
sd x3, 0(x2) # store 0x3bcfb0eb154a3105 in memory
fld f1, 0(x2) # load 0x3bcfb0eb154a3105 from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fnmadd.d f3, f16, f1, f31, dyn # perform operation
fnmadd.d f3, f16, f1, f31, rdn # perform operation
fnmadd.d f3, f16, f1, f31, rmm # perform operation
fnmadd.d f3, f16, f1, f31, rne # perform operation
fnmadd.d f3, f16, f1, f31, rtz # perform operation
fnmadd.d f3, f16, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfffffffffffff)
li x8, 0x2793ce2a1d1bde1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xbdbc99e08cb15523 # load x3 with value 0xbdbc99e08cb15523
sd x3, 0(x2) # store 0xbdbc99e08cb15523 in memory
fld f5, 0(x2) # load 0xbdbc99e08cb15523 from memory into f5
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fnmadd.d f8, f31, f5, f17, dyn # perform operation
fnmadd.d f8, f31, f5, f17, rdn # perform operation
fnmadd.d f8, f31, f5, f17, rmm # perform operation
fnmadd.d f8, f31, f5, f17, rne # perform operation
fnmadd.d f8, f31, f5, f17, rtz # perform operation
fnmadd.d f8, f31, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x800fffffffffffff)
li x7, 0x9a46e2c015512fda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xebf2e9014a1dec98 # load x3 with value 0xebf2e9014a1dec98
sd x3, 0(x2) # store 0xebf2e9014a1dec98 in memory
fld f20, 0(x2) # load 0xebf2e9014a1dec98 from memory into f20
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f7, f11, f20, f14, dyn # perform operation
fnmadd.d f7, f11, f20, f14, rdn # perform operation
fnmadd.d f7, f11, f20, f14, rmm # perform operation
fnmadd.d f7, f11, f20, f14, rne # perform operation
fnmadd.d f7, f11, f20, f14, rtz # perform operation
fnmadd.d f7, f11, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f11, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f11, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f11, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f11, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f11, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000)
li x31, 0x4f9cdbe145300c9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xf0aa36c4842168a8 # load x3 with value 0xf0aa36c4842168a8
sd x3, 0(x2) # store 0xf0aa36c4842168a8 in memory
fld f8, 0(x2) # load 0xf0aa36c4842168a8 from memory into f8
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fnmadd.d f31, f20, f8, f29, dyn # perform operation
fnmadd.d f31, f20, f8, f29, rdn # perform operation
fnmadd.d f31, f20, f8, f29, rmm # perform operation
fnmadd.d f31, f20, f8, f29, rne # perform operation
fnmadd.d f31, f20, f8, f29, rtz # perform operation
fnmadd.d f31, f20, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f20, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8008000000000000)
li x8, 0x878e61070bea432c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x27a85db3213a6c71 # load x3 with value 0x27a85db3213a6c71
sd x3, 0(x2) # store 0x27a85db3213a6c71 in memory
fld f4, 0(x2) # load 0x27a85db3213a6c71 from memory into f4
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fnmadd.d f8, f25, f4, f3, dyn # perform operation
fnmadd.d f8, f25, f4, f3, rdn # perform operation
fnmadd.d f8, f25, f4, f3, rmm # perform operation
fnmadd.d f8, f25, f4, f3, rne # perform operation
fnmadd.d f8, f25, f4, f3, rtz # perform operation
fnmadd.d f8, f25, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f25, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f25, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f25, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f25, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f25, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x1)
li x23, 0xf06e5f9c562c93dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x65ffb29053e28543 # load x3 with value 0x65ffb29053e28543
sd x3, 0(x2) # store 0x65ffb29053e28543 in memory
fld f10, 0(x2) # load 0x65ffb29053e28543 from memory into f10
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fnmadd.d f23, f29, f10, f6, dyn # perform operation
fnmadd.d f23, f29, f10, f6, rdn # perform operation
fnmadd.d f23, f29, f10, f6, rmm # perform operation
fnmadd.d f23, f29, f10, f6, rne # perform operation
fnmadd.d f23, f29, f10, f6, rtz # perform operation
fnmadd.d f23, f29, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f29, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f29, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f29, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f29, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f29, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000001)
li x1, 0xc297afa57b93868f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x9380bb5618105255 # load x3 with value 0x9380bb5618105255
sd x3, 0(x2) # store 0x9380bb5618105255 in memory
fld f16, 0(x2) # load 0x9380bb5618105255 from memory into f16
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fnmadd.d f1, f6, f16, f24, dyn # perform operation
fnmadd.d f1, f6, f16, f24, rdn # perform operation
fnmadd.d f1, f6, f16, f24, rmm # perform operation
fnmadd.d f1, f6, f16, f24, rne # perform operation
fnmadd.d f1, f6, f16, f24, rtz # perform operation
fnmadd.d f1, f6, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f6, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f6, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000000)
li x10, 0x2e24a764c7f6aa49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x539b18543b95f7c4 # load x3 with value 0x539b18543b95f7c4
sd x3, 0(x2) # store 0x539b18543b95f7c4 in memory
fld f7, 0(x2) # load 0x539b18543b95f7c4 from memory into f7
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fnmadd.d f10, f4, f7, f8, dyn # perform operation
fnmadd.d f10, f4, f7, f8, rdn # perform operation
fnmadd.d f10, f4, f7, f8, rmm # perform operation
fnmadd.d f10, f4, f7, f8, rne # perform operation
fnmadd.d f10, f4, f7, f8, rtz # perform operation
fnmadd.d f10, f4, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f4, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f4, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f4, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f4, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f4, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfff0000000000000)
li x27, 0xf295c228cb6fdde2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x6cf4c8abe1d5b755 # load x3 with value 0x6cf4c8abe1d5b755
sd x3, 0(x2) # store 0x6cf4c8abe1d5b755 in memory
fld f3, 0(x2) # load 0x6cf4c8abe1d5b755 from memory into f3
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fnmadd.d f27, f17, f3, f6, dyn # perform operation
fnmadd.d f27, f17, f3, f6, rdn # perform operation
fnmadd.d f27, f17, f3, f6, rmm # perform operation
fnmadd.d f27, f17, f3, f6, rne # perform operation
fnmadd.d f27, f17, f3, f6, rtz # perform operation
fnmadd.d f27, f17, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f17, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f17, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff8000000000000)
li x17, 0x4d44bd5c9ebe0caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x5141eeac33d640e8 # load x3 with value 0x5141eeac33d640e8
sd x3, 0(x2) # store 0x5141eeac33d640e8 in memory
fld f22, 0(x2) # load 0x5141eeac33d640e8 from memory into f22
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fnmadd.d f17, f24, f22, f20, dyn # perform operation
fnmadd.d f17, f24, f22, f20, rdn # perform operation
fnmadd.d f17, f24, f22, f20, rmm # perform operation
fnmadd.d f17, f24, f22, f20, rne # perform operation
fnmadd.d f17, f24, f22, f20, rtz # perform operation
fnmadd.d f17, f24, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fffffffffffffff)
li x19, 0x63cb1da72e116885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xd311d7518705e192 # load x3 with value 0xd311d7518705e192
sd x3, 0(x2) # store 0xd311d7518705e192 in memory
fld f29, 0(x2) # load 0xd311d7518705e192 from memory into f29
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fnmadd.d f19, f5, f29, f6, dyn # perform operation
fnmadd.d f19, f5, f29, f6, rdn # perform operation
fnmadd.d f19, f5, f29, f6, rmm # perform operation
fnmadd.d f19, f5, f29, f6, rne # perform operation
fnmadd.d f19, f5, f29, f6, rtz # perform operation
fnmadd.d f19, f5, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f5, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f5, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f5, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f5, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f5, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000001)
li x16, 0x226cf339e5ac6a6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x36f21f6312064d4d # load x3 with value 0x36f21f6312064d4d
sd x3, 0(x2) # store 0x36f21f6312064d4d in memory
fld f5, 0(x2) # load 0x36f21f6312064d4d from memory into f5
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fnmadd.d f16, f7, f5, f12, dyn # perform operation
fnmadd.d f16, f7, f5, f12, rdn # perform operation
fnmadd.d f16, f7, f5, f12, rmm # perform operation
fnmadd.d f16, f7, f5, f12, rne # perform operation
fnmadd.d f16, f7, f5, f12, rtz # perform operation
fnmadd.d f16, f7, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f7, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f7, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x1, 0x034828cba746ae75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0xadf5ff5519e2cbf3 # load x3 with value 0xadf5ff5519e2cbf3
sd x3, 0(x2) # store 0xadf5ff5519e2cbf3 in memory
fld f27, 0(x2) # load 0xadf5ff5519e2cbf3 from memory into f27
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fnmadd.d f1, f25, f27, f29, dyn # perform operation
fnmadd.d f1, f25, f27, f29, rdn # perform operation
fnmadd.d f1, f25, f27, f29, rmm # perform operation
fnmadd.d f1, f25, f27, f29, rne # perform operation
fnmadd.d f1, f25, f27, f29, rtz # perform operation
fnmadd.d f1, f25, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f25, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f25, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x5a392534a57711ad)
li x21, 0x2de62791225c2f58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x70880294991f2816 # load x3 with value 0x70880294991f2816
sd x3, 0(x2) # store 0x70880294991f2816 in memory
fld f9, 0(x2) # load 0x70880294991f2816 from memory into f9
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fnmadd.d f21, f4, f9, f19, dyn # perform operation
fnmadd.d f21, f4, f9, f19, rdn # perform operation
fnmadd.d f21, f4, f9, f19, rmm # perform operation
fnmadd.d f21, f4, f9, f19, rne # perform operation
fnmadd.d f21, f4, f9, f19, rtz # perform operation
fnmadd.d f21, f4, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f4, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f4, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f4, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f4, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f4, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xa6e895993737426c)
li x20, 0xc62b7a21f29955ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0xdc3fd3ae0f3b28dd # load x3 with value 0xdc3fd3ae0f3b28dd
sd x3, 0(x2) # store 0xdc3fd3ae0f3b28dd in memory
fld f23, 0(x2) # load 0xdc3fd3ae0f3b28dd from memory into f23
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmadd.d f20, f2, f23, f16, dyn # perform operation
fnmadd.d f20, f2, f23, f16, rdn # perform operation
fnmadd.d f20, f2, f23, f16, rmm # perform operation
fnmadd.d f20, f2, f23, f16, rne # perform operation
fnmadd.d f20, f2, f23, f16, rtz # perform operation
fnmadd.d f20, f2, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f2, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f2, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x0)
li x5, 0x79288b99abbf1050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xea958224bff8f1b0 # load x3 with value 0xea958224bff8f1b0
sd x3, 0(x2) # store 0xea958224bff8f1b0 in memory
fld f9, 0(x2) # load 0xea958224bff8f1b0 from memory into f9
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fnmadd.d f5, f20, f9, f7, dyn # perform operation
fnmadd.d f5, f20, f9, f7, rdn # perform operation
fnmadd.d f5, f20, f9, f7, rmm # perform operation
fnmadd.d f5, f20, f9, f7, rne # perform operation
fnmadd.d f5, f20, f9, f7, rtz # perform operation
fnmadd.d f5, f20, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f20, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f20, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f20, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f20, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f20, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000000)
li x26, 0x66327e87174abf5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0xf0ddb2c2cf157116 # load x3 with value 0xf0ddb2c2cf157116
sd x3, 0(x2) # store 0xf0ddb2c2cf157116 in memory
fld f3, 0(x2) # load 0xf0ddb2c2cf157116 from memory into f3
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fnmadd.d f26, f14, f3, f12, dyn # perform operation
fnmadd.d f26, f14, f3, f12, rdn # perform operation
fnmadd.d f26, f14, f3, f12, rmm # perform operation
fnmadd.d f26, f14, f3, f12, rne # perform operation
fnmadd.d f26, f14, f3, f12, rtz # perform operation
fnmadd.d f26, f14, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f14, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f14, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff0000000000000)
li x6, 0x21eef4b4a9d98647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x8c020c56466211e2 # load x3 with value 0x8c020c56466211e2
sd x3, 0(x2) # store 0x8c020c56466211e2 in memory
fld f14, 0(x2) # load 0x8c020c56466211e2 from memory into f14
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmadd.d f6, f19, f14, f13, dyn # perform operation
fnmadd.d f6, f19, f14, f13, rdn # perform operation
fnmadd.d f6, f19, f14, f13, rmm # perform operation
fnmadd.d f6, f19, f14, f13, rne # perform operation
fnmadd.d f6, f19, f14, f13, rtz # perform operation
fnmadd.d f6, f19, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f19, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff0000000000000)
li x1, 0x9bce3418deba8044 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x32e8b8a4cff33ff0 # load x3 with value 0x32e8b8a4cff33ff0
sd x3, 0(x2) # store 0x32e8b8a4cff33ff0 in memory
fld f21, 0(x2) # load 0x32e8b8a4cff33ff0 from memory into f21
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fnmadd.d f1, f3, f21, f10, dyn # perform operation
fnmadd.d f1, f3, f21, f10, rdn # perform operation
fnmadd.d f1, f3, f21, f10, rmm # perform operation
fnmadd.d f1, f3, f21, f10, rne # perform operation
fnmadd.d f1, f3, f21, f10, rtz # perform operation
fnmadd.d f1, f3, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f3, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f3, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff8000000000000)
li x26, 0x395c38f3b80cbf17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0xfc9cdf7fc8ea789e # load x3 with value 0xfc9cdf7fc8ea789e
sd x3, 0(x2) # store 0xfc9cdf7fc8ea789e in memory
fld f29, 0(x2) # load 0xfc9cdf7fc8ea789e from memory into f29
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fnmadd.d f26, f27, f29, f6, dyn # perform operation
fnmadd.d f26, f27, f29, f6, rdn # perform operation
fnmadd.d f26, f27, f29, f6, rmm # perform operation
fnmadd.d f26, f27, f29, f6, rne # perform operation
fnmadd.d f26, f27, f29, f6, rtz # perform operation
fnmadd.d f26, f27, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f27, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f27, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff8000000000000)
li x20, 0x70fc93c747024516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x3ad9cf9acab3a57e # load x3 with value 0x3ad9cf9acab3a57e
sd x3, 0(x2) # store 0x3ad9cf9acab3a57e in memory
fld f16, 0(x2) # load 0x3ad9cf9acab3a57e from memory into f16
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fnmadd.d f20, f30, f16, f17, dyn # perform operation
fnmadd.d f20, f30, f16, f17, rdn # perform operation
fnmadd.d f20, f30, f16, f17, rmm # perform operation
fnmadd.d f20, f30, f16, f17, rne # perform operation
fnmadd.d f20, f30, f16, f17, rtz # perform operation
fnmadd.d f20, f30, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f30, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f30, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f30, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f30, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f30, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x4000000000000000)
li x20, 0x6d8e8d95bc14ec9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x23251b487f357a49 # load x3 with value 0x23251b487f357a49
sd x3, 0(x2) # store 0x23251b487f357a49 in memory
fld f4, 0(x2) # load 0x23251b487f357a49 from memory into f4
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fnmadd.d f20, f22, f4, f27, dyn # perform operation
fnmadd.d f20, f22, f4, f27, rdn # perform operation
fnmadd.d f20, f22, f4, f27, rmm # perform operation
fnmadd.d f20, f22, f4, f27, rne # perform operation
fnmadd.d f20, f22, f4, f27, rtz # perform operation
fnmadd.d f20, f22, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f22, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f22, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xc000000000000000)
li x14, 0x3d43d9d680086aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x03e3a0a33a0010e1 # load x3 with value 0x03e3a0a33a0010e1
sd x3, 0(x2) # store 0x03e3a0a33a0010e1 in memory
fld f6, 0(x2) # load 0x03e3a0a33a0010e1 from memory into f6
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fnmadd.d f14, f27, f6, f17, dyn # perform operation
fnmadd.d f14, f27, f6, f17, rdn # perform operation
fnmadd.d f14, f27, f6, f17, rmm # perform operation
fnmadd.d f14, f27, f6, f17, rne # perform operation
fnmadd.d f14, f27, f6, f17, rtz # perform operation
fnmadd.d f14, f27, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f27, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f27, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f27, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f27, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f27, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x10000000000000)
li x20, 0x5892e2b98e66dfa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x31fafb9f245948bd # load x3 with value 0x31fafb9f245948bd
sd x3, 0(x2) # store 0x31fafb9f245948bd in memory
fld f15, 0(x2) # load 0x31fafb9f245948bd from memory into f15
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
fnmadd.d f20, f22, f15, f25, dyn # perform operation
fnmadd.d f20, f22, f15, f25, rdn # perform operation
fnmadd.d f20, f22, f15, f25, rmm # perform operation
fnmadd.d f20, f22, f15, f25, rne # perform operation
fnmadd.d f20, f22, f15, f25, rtz # perform operation
fnmadd.d f20, f22, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f22, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f22, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f22, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f22, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f22, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8010000000000000)
li x27, 0xf1356ebb28d0f36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x91f9c76ddb3ddc52 # load x3 with value 0x91f9c76ddb3ddc52
sd x3, 0(x2) # store 0x91f9c76ddb3ddc52 in memory
fld f2, 0(x2) # load 0x91f9c76ddb3ddc52 from memory into f2
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmadd.d f27, f16, f2, f7, dyn # perform operation
fnmadd.d f27, f16, f2, f7, rdn # perform operation
fnmadd.d f27, f16, f2, f7, rmm # perform operation
fnmadd.d f27, f16, f2, f7, rne # perform operation
fnmadd.d f27, f16, f2, f7, rtz # perform operation
fnmadd.d f27, f16, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f16, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f16, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f16, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f16, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f16, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fefffffffffffff)
li x4, 0x8824aa900c703b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x52c631018aaa42d8 # load x3 with value 0x52c631018aaa42d8
sd x3, 0(x2) # store 0x52c631018aaa42d8 in memory
fld f28, 0(x2) # load 0x52c631018aaa42d8 from memory into f28
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmadd.d f4, f11, f28, f6, dyn # perform operation
fnmadd.d f4, f11, f28, f6, rdn # perform operation
fnmadd.d f4, f11, f28, f6, rmm # perform operation
fnmadd.d f4, f11, f28, f6, rne # perform operation
fnmadd.d f4, f11, f28, f6, rtz # perform operation
fnmadd.d f4, f11, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f11, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f11, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xffefffffffffffff)
li x22, 0xdc580744dc50b60d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x431faa0bf30c42fe # load x3 with value 0x431faa0bf30c42fe
sd x3, 0(x2) # store 0x431faa0bf30c42fe in memory
fld f15, 0(x2) # load 0x431faa0bf30c42fe from memory into f15
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fnmadd.d f22, f8, f15, f26, dyn # perform operation
fnmadd.d f22, f8, f15, f26, rdn # perform operation
fnmadd.d f22, f8, f15, f26, rmm # perform operation
fnmadd.d f22, f8, f15, f26, rne # perform operation
fnmadd.d f22, f8, f15, f26, rtz # perform operation
fnmadd.d f22, f8, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f8, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfffffffffffff)
li x29, 0x3de24f4dc152849f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0xefdb935eff564feb # load x3 with value 0xefdb935eff564feb
sd x3, 0(x2) # store 0xefdb935eff564feb in memory
fld f3, 0(x2) # load 0xefdb935eff564feb from memory into f3
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fnmadd.d f29, f13, f3, f11, dyn # perform operation
fnmadd.d f29, f13, f3, f11, rdn # perform operation
fnmadd.d f29, f13, f3, f11, rmm # perform operation
fnmadd.d f29, f13, f3, f11, rne # perform operation
fnmadd.d f29, f13, f3, f11, rtz # perform operation
fnmadd.d f29, f13, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f13, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x800fffffffffffff)
li x15, 0x70f6a6537a5ec66b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x0b643518ddaefbfa # load x3 with value 0x0b643518ddaefbfa
sd x3, 0(x2) # store 0x0b643518ddaefbfa in memory
fld f19, 0(x2) # load 0x0b643518ddaefbfa from memory into f19
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f15, f5, f19, f14, dyn # perform operation
fnmadd.d f15, f5, f19, f14, rdn # perform operation
fnmadd.d f15, f5, f19, f14, rmm # perform operation
fnmadd.d f15, f5, f19, f14, rne # perform operation
fnmadd.d f15, f5, f19, f14, rtz # perform operation
fnmadd.d f15, f5, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f5, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000)
li x3, 0x889c52d181fa21a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x89b35e5364f42769 # load x3 with value 0x89b35e5364f42769
sd x3, 0(x2) # store 0x89b35e5364f42769 in memory
fld f14, 0(x2) # load 0x89b35e5364f42769 from memory into f14
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fnmadd.d f3, f29, f14, f26, dyn # perform operation
fnmadd.d f3, f29, f14, f26, rdn # perform operation
fnmadd.d f3, f29, f14, f26, rmm # perform operation
fnmadd.d f3, f29, f14, f26, rne # perform operation
fnmadd.d f3, f29, f14, f26, rtz # perform operation
fnmadd.d f3, f29, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f29, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8008000000000000)
li x31, 0xc0a0ecfb5247990a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x4c3c93d2a31b90ae # load x3 with value 0x4c3c93d2a31b90ae
sd x3, 0(x2) # store 0x4c3c93d2a31b90ae in memory
fld f8, 0(x2) # load 0x4c3c93d2a31b90ae from memory into f8
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fnmadd.d f31, f24, f8, f28, dyn # perform operation
fnmadd.d f31, f24, f8, f28, rdn # perform operation
fnmadd.d f31, f24, f8, f28, rmm # perform operation
fnmadd.d f31, f24, f8, f28, rne # perform operation
fnmadd.d f31, f24, f8, f28, rtz # perform operation
fnmadd.d f31, f24, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f8, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x1)
li x23, 0x40b637af90b3249e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0xf465417ee3260f7f # load x3 with value 0xf465417ee3260f7f
sd x3, 0(x2) # store 0xf465417ee3260f7f in memory
fld f31, 0(x2) # load 0xf465417ee3260f7f from memory into f31
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fnmadd.d f23, f20, f31, f26, dyn # perform operation
fnmadd.d f23, f20, f31, f26, rdn # perform operation
fnmadd.d f23, f20, f31, f26, rmm # perform operation
fnmadd.d f23, f20, f31, f26, rne # perform operation
fnmadd.d f23, f20, f31, f26, rtz # perform operation
fnmadd.d f23, f20, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f20, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f20, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000001)
li x12, 0x2684ff778686fcb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x1feb8103f75afe36 # load x3 with value 0x1feb8103f75afe36
sd x3, 0(x2) # store 0x1feb8103f75afe36 in memory
fld f6, 0(x2) # load 0x1feb8103f75afe36 from memory into f6
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fnmadd.d f12, f19, f6, f24, dyn # perform operation
fnmadd.d f12, f19, f6, f24, rdn # perform operation
fnmadd.d f12, f19, f6, f24, rmm # perform operation
fnmadd.d f12, f19, f6, f24, rne # perform operation
fnmadd.d f12, f19, f6, f24, rtz # perform operation
fnmadd.d f12, f19, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f19, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f19, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000000)
li x22, 0xa392aa8c1d690cfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x7ca8430b5ed38313 # load x3 with value 0x7ca8430b5ed38313
sd x3, 0(x2) # store 0x7ca8430b5ed38313 in memory
fld f7, 0(x2) # load 0x7ca8430b5ed38313 from memory into f7
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fnmadd.d f22, f13, f7, f21, dyn # perform operation
fnmadd.d f22, f13, f7, f21, rdn # perform operation
fnmadd.d f22, f13, f7, f21, rmm # perform operation
fnmadd.d f22, f13, f7, f21, rne # perform operation
fnmadd.d f22, f13, f7, f21, rtz # perform operation
fnmadd.d f22, f13, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f13, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfff0000000000000)
li x26, 0x88b48cba842b4c8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0xac26bf3e3cf6c4eb # load x3 with value 0xac26bf3e3cf6c4eb
sd x3, 0(x2) # store 0xac26bf3e3cf6c4eb in memory
fld f30, 0(x2) # load 0xac26bf3e3cf6c4eb from memory into f30
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fnmadd.d f26, f21, f30, f1, dyn # perform operation
fnmadd.d f26, f21, f30, f1, rdn # perform operation
fnmadd.d f26, f21, f30, f1, rmm # perform operation
fnmadd.d f26, f21, f30, f1, rne # perform operation
fnmadd.d f26, f21, f30, f1, rtz # perform operation
fnmadd.d f26, f21, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff8000000000000)
li x10, 0xe11f27a34559ed37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x2f1afff0f07d93d3 # load x3 with value 0x2f1afff0f07d93d3
sd x3, 0(x2) # store 0x2f1afff0f07d93d3 in memory
fld f14, 0(x2) # load 0x2f1afff0f07d93d3 from memory into f14
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fnmadd.d f10, f8, f14, f7, dyn # perform operation
fnmadd.d f10, f8, f14, f7, rdn # perform operation
fnmadd.d f10, f8, f14, f7, rmm # perform operation
fnmadd.d f10, f8, f14, f7, rne # perform operation
fnmadd.d f10, f8, f14, f7, rtz # perform operation
fnmadd.d f10, f8, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fffffffffffffff)
li x20, 0x29af9cce29dd4684 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x5bc22fd509413b72 # load x3 with value 0x5bc22fd509413b72
sd x3, 0(x2) # store 0x5bc22fd509413b72 in memory
fld f19, 0(x2) # load 0x5bc22fd509413b72 from memory into f19
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fnmadd.d f20, f30, f19, f22, dyn # perform operation
fnmadd.d f20, f30, f19, f22, rdn # perform operation
fnmadd.d f20, f30, f19, f22, rmm # perform operation
fnmadd.d f20, f30, f19, f22, rne # perform operation
fnmadd.d f20, f30, f19, f22, rtz # perform operation
fnmadd.d f20, f30, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f30, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000001)
li x5, 0x640da9213ae6aaaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x0f6720016a434c74 # load x3 with value 0x0f6720016a434c74
sd x3, 0(x2) # store 0x0f6720016a434c74 in memory
fld f17, 0(x2) # load 0x0f6720016a434c74 from memory into f17
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fnmadd.d f5, f26, f17, f7, dyn # perform operation
fnmadd.d f5, f26, f17, f7, rdn # perform operation
fnmadd.d f5, f26, f17, f7, rmm # perform operation
fnmadd.d f5, f26, f17, f7, rne # perform operation
fnmadd.d f5, f26, f17, f7, rtz # perform operation
fnmadd.d f5, f26, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f26, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f26, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f26, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f26, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f26, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x3, 0xc6f3b6cf5bd09263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0xc2df41fcd620ba4f # load x3 with value 0xc2df41fcd620ba4f
sd x3, 0(x2) # store 0xc2df41fcd620ba4f in memory
fld f2, 0(x2) # load 0xc2df41fcd620ba4f from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fnmadd.d f3, f23, f2, f10, dyn # perform operation
fnmadd.d f3, f23, f2, f10, rdn # perform operation
fnmadd.d f3, f23, f2, f10, rmm # perform operation
fnmadd.d f3, f23, f2, f10, rne # perform operation
fnmadd.d f3, f23, f2, f10, rtz # perform operation
fnmadd.d f3, f23, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f23, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f23, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x5a392534a57711ad)
li x5, 0xafe0f43e0dcdb997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x7a1d2e801996af8e # load x3 with value 0x7a1d2e801996af8e
sd x3, 0(x2) # store 0x7a1d2e801996af8e in memory
fld f24, 0(x2) # load 0x7a1d2e801996af8e from memory into f24
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fnmadd.d f5, f20, f24, f30, dyn # perform operation
fnmadd.d f5, f20, f24, f30, rdn # perform operation
fnmadd.d f5, f20, f24, f30, rmm # perform operation
fnmadd.d f5, f20, f24, f30, rne # perform operation
fnmadd.d f5, f20, f24, f30, rtz # perform operation
fnmadd.d f5, f20, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f20, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xa6e895993737426c)
li x27, 0x6470ee1ed10fe460 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x59d302be897e50c7 # load x3 with value 0x59d302be897e50c7
sd x3, 0(x2) # store 0x59d302be897e50c7 in memory
fld f21, 0(x2) # load 0x59d302be897e50c7 from memory into f21
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fnmadd.d f27, f6, f21, f15, dyn # perform operation
fnmadd.d f27, f6, f21, f15, rdn # perform operation
fnmadd.d f27, f6, f21, f15, rmm # perform operation
fnmadd.d f27, f6, f21, f15, rne # perform operation
fnmadd.d f27, f6, f21, f15, rtz # perform operation
fnmadd.d f27, f6, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x0)
li x20, 0xccf4af521ca166e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x772215c14b9e9bfd # load x3 with value 0x772215c14b9e9bfd
sd x3, 0(x2) # store 0x772215c14b9e9bfd in memory
fld f2, 0(x2) # load 0x772215c14b9e9bfd from memory into f2
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fnmadd.d f20, f28, f2, f7, dyn # perform operation
fnmadd.d f20, f28, f2, f7, rdn # perform operation
fnmadd.d f20, f28, f2, f7, rmm # perform operation
fnmadd.d f20, f28, f2, f7, rne # perform operation
fnmadd.d f20, f28, f2, f7, rtz # perform operation
fnmadd.d f20, f28, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f28, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000000)
li x22, 0x575fda2f58c0151d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x5cdd1a53f76dcb32 # load x3 with value 0x5cdd1a53f76dcb32
sd x3, 0(x2) # store 0x5cdd1a53f76dcb32 in memory
fld f10, 0(x2) # load 0x5cdd1a53f76dcb32 from memory into f10
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fnmadd.d f22, f24, f10, f20, dyn # perform operation
fnmadd.d f22, f24, f10, f20, rdn # perform operation
fnmadd.d f22, f24, f10, f20, rmm # perform operation
fnmadd.d f22, f24, f10, f20, rne # perform operation
fnmadd.d f22, f24, f10, f20, rtz # perform operation
fnmadd.d f22, f24, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f24, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f24, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff0000000000000)
li x30, 0xf671a0c0b19352ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0xaeb8ab83588a4e8b # load x3 with value 0xaeb8ab83588a4e8b
sd x3, 0(x2) # store 0xaeb8ab83588a4e8b in memory
fld f18, 0(x2) # load 0xaeb8ab83588a4e8b from memory into f18
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fnmadd.d f30, f13, f18, f21, dyn # perform operation
fnmadd.d f30, f13, f18, f21, rdn # perform operation
fnmadd.d f30, f13, f18, f21, rmm # perform operation
fnmadd.d f30, f13, f18, f21, rne # perform operation
fnmadd.d f30, f13, f18, f21, rtz # perform operation
fnmadd.d f30, f13, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f13, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff0000000000000)
li x6, 0x6526bcb24543eeda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xfe49c720f09c51f7 # load x3 with value 0xfe49c720f09c51f7
sd x3, 0(x2) # store 0xfe49c720f09c51f7 in memory
fld f30, 0(x2) # load 0xfe49c720f09c51f7 from memory into f30
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fnmadd.d f6, f8, f30, f12, dyn # perform operation
fnmadd.d f6, f8, f30, f12, rdn # perform operation
fnmadd.d f6, f8, f30, f12, rmm # perform operation
fnmadd.d f6, f8, f30, f12, rne # perform operation
fnmadd.d f6, f8, f30, f12, rtz # perform operation
fnmadd.d f6, f8, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff8000000000000)
li x28, 0xb6cfddd1cd9c0df8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0xff9751cb186ac26e # load x3 with value 0xff9751cb186ac26e
sd x3, 0(x2) # store 0xff9751cb186ac26e in memory
fld f15, 0(x2) # load 0xff9751cb186ac26e from memory into f15
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmadd.d f28, f10, f15, f1, dyn # perform operation
fnmadd.d f28, f10, f15, f1, rdn # perform operation
fnmadd.d f28, f10, f15, f1, rmm # perform operation
fnmadd.d f28, f10, f15, f1, rne # perform operation
fnmadd.d f28, f10, f15, f1, rtz # perform operation
fnmadd.d f28, f10, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff8000000000000)
li x17, 0x707b4af024d2b7bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x031065fd888434c3 # load x3 with value 0x031065fd888434c3
sd x3, 0(x2) # store 0x031065fd888434c3 in memory
fld f8, 0(x2) # load 0x031065fd888434c3 from memory into f8
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fnmadd.d f17, f6, f8, f14, dyn # perform operation
fnmadd.d f17, f6, f8, f14, rdn # perform operation
fnmadd.d f17, f6, f8, f14, rmm # perform operation
fnmadd.d f17, f6, f8, f14, rne # perform operation
fnmadd.d f17, f6, f8, f14, rtz # perform operation
fnmadd.d f17, f6, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x4000000000000000)
li x18, 0x143b5c95e7f0f2da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0xde58f49d31ebf24a # load x3 with value 0xde58f49d31ebf24a
sd x3, 0(x2) # store 0xde58f49d31ebf24a in memory
fld f25, 0(x2) # load 0xde58f49d31ebf24a from memory into f25
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fnmadd.d f18, f24, f25, f15, dyn # perform operation
fnmadd.d f18, f24, f25, f15, rdn # perform operation
fnmadd.d f18, f24, f25, f15, rmm # perform operation
fnmadd.d f18, f24, f25, f15, rne # perform operation
fnmadd.d f18, f24, f25, f15, rtz # perform operation
fnmadd.d f18, f24, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f24, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xc000000000000000)
li x3, 0x446d48a5e2ac5101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0x8fbf76abb928603d # load x3 with value 0x8fbf76abb928603d
sd x3, 0(x2) # store 0x8fbf76abb928603d in memory
fld f26, 0(x2) # load 0x8fbf76abb928603d from memory into f26
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fnmadd.d f3, f1, f26, f28, dyn # perform operation
fnmadd.d f3, f1, f26, f28, rdn # perform operation
fnmadd.d f3, f1, f26, f28, rmm # perform operation
fnmadd.d f3, f1, f26, f28, rne # perform operation
fnmadd.d f3, f1, f26, f28, rtz # perform operation
fnmadd.d f3, f1, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f1, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f1, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x10000000000000)
li x14, 0xa3695804e68f57fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x236fa3fe04915208 # load x3 with value 0x236fa3fe04915208
sd x3, 0(x2) # store 0x236fa3fe04915208 in memory
fld f16, 0(x2) # load 0x236fa3fe04915208 from memory into f16
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fnmadd.d f14, f19, f16, f27, dyn # perform operation
fnmadd.d f14, f19, f16, f27, rdn # perform operation
fnmadd.d f14, f19, f16, f27, rmm # perform operation
fnmadd.d f14, f19, f16, f27, rne # perform operation
fnmadd.d f14, f19, f16, f27, rtz # perform operation
fnmadd.d f14, f19, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f19, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f19, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f19, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f19, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f19, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8010000000000000)
li x28, 0x1177f27956ae825c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0xe01aaadfa3b0c746 # load x3 with value 0xe01aaadfa3b0c746
sd x3, 0(x2) # store 0xe01aaadfa3b0c746 in memory
fld f17, 0(x2) # load 0xe01aaadfa3b0c746 from memory into f17
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fnmadd.d f28, f24, f17, f12, dyn # perform operation
fnmadd.d f28, f24, f17, f12, rdn # perform operation
fnmadd.d f28, f24, f17, f12, rmm # perform operation
fnmadd.d f28, f24, f17, f12, rne # perform operation
fnmadd.d f28, f24, f17, f12, rtz # perform operation
fnmadd.d f28, f24, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f24, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fefffffffffffff)
li x20, 0x2d5293934cd30b4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x6288d7d9a9bd8c53 # load x3 with value 0x6288d7d9a9bd8c53
sd x3, 0(x2) # store 0x6288d7d9a9bd8c53 in memory
fld f1, 0(x2) # load 0x6288d7d9a9bd8c53 from memory into f1
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fnmadd.d f20, f2, f1, f31, dyn # perform operation
fnmadd.d f20, f2, f1, f31, rdn # perform operation
fnmadd.d f20, f2, f1, f31, rmm # perform operation
fnmadd.d f20, f2, f1, f31, rne # perform operation
fnmadd.d f20, f2, f1, f31, rtz # perform operation
fnmadd.d f20, f2, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f2, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xffefffffffffffff)
li x16, 0x7485b4d76d6247a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x1c6049cd5bed7394 # load x3 with value 0x1c6049cd5bed7394
sd x3, 0(x2) # store 0x1c6049cd5bed7394 in memory
fld f31, 0(x2) # load 0x1c6049cd5bed7394 from memory into f31
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fnmadd.d f16, f2, f31, f25, dyn # perform operation
fnmadd.d f16, f2, f31, f25, rdn # perform operation
fnmadd.d f16, f2, f31, f25, rmm # perform operation
fnmadd.d f16, f2, f31, f25, rne # perform operation
fnmadd.d f16, f2, f31, f25, rtz # perform operation
fnmadd.d f16, f2, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f2, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f2, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f2, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f2, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f2, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfffffffffffff)
li x3, 0x8939cbe07281133a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x5cc59ce7e74a87c2 # load x3 with value 0x5cc59ce7e74a87c2
sd x3, 0(x2) # store 0x5cc59ce7e74a87c2 in memory
fld f4, 0(x2) # load 0x5cc59ce7e74a87c2 from memory into f4
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmadd.d f3, f31, f4, f21, dyn # perform operation
fnmadd.d f3, f31, f4, f21, rdn # perform operation
fnmadd.d f3, f31, f4, f21, rmm # perform operation
fnmadd.d f3, f31, f4, f21, rne # perform operation
fnmadd.d f3, f31, f4, f21, rtz # perform operation
fnmadd.d f3, f31, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f31, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f31, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x800fffffffffffff)
li x15, 0x745bb344e0be883f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0xb39541c08db8a535 # load x3 with value 0xb39541c08db8a535
sd x3, 0(x2) # store 0xb39541c08db8a535 in memory
fld f18, 0(x2) # load 0xb39541c08db8a535 from memory into f18
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fnmadd.d f15, f4, f18, f9, dyn # perform operation
fnmadd.d f15, f4, f18, f9, rdn # perform operation
fnmadd.d f15, f4, f18, f9, rmm # perform operation
fnmadd.d f15, f4, f18, f9, rne # perform operation
fnmadd.d f15, f4, f18, f9, rtz # perform operation
fnmadd.d f15, f4, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f4, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f4, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f4, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f4, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f4, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000)
li x1, 0xb24de7d31ea84fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x1d424e67c1cab4f5 # load x3 with value 0x1d424e67c1cab4f5
sd x3, 0(x2) # store 0x1d424e67c1cab4f5 in memory
fld f24, 0(x2) # load 0x1d424e67c1cab4f5 from memory into f24
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fnmadd.d f1, f2, f24, f30, dyn # perform operation
fnmadd.d f1, f2, f24, f30, rdn # perform operation
fnmadd.d f1, f2, f24, f30, rmm # perform operation
fnmadd.d f1, f2, f24, f30, rne # perform operation
fnmadd.d f1, f2, f24, f30, rtz # perform operation
fnmadd.d f1, f2, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f2, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f2, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8008000000000000)
li x8, 0x3ee0bdbb4244a42e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0xb8535acf9dd6334b # load x3 with value 0xb8535acf9dd6334b
sd x3, 0(x2) # store 0xb8535acf9dd6334b in memory
fld f23, 0(x2) # load 0xb8535acf9dd6334b from memory into f23
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fnmadd.d f8, f5, f23, f11, dyn # perform operation
fnmadd.d f8, f5, f23, f11, rdn # perform operation
fnmadd.d f8, f5, f23, f11, rmm # perform operation
fnmadd.d f8, f5, f23, f11, rne # perform operation
fnmadd.d f8, f5, f23, f11, rtz # perform operation
fnmadd.d f8, f5, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x1)
li x2, 0xfcb7150a87e15c3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0xcd2aa769ecb31a76 # load x3 with value 0xcd2aa769ecb31a76
sd x3, 0(x2) # store 0xcd2aa769ecb31a76 in memory
fld f7, 0(x2) # load 0xcd2aa769ecb31a76 from memory into f7
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
fnmadd.d f2, f4, f7, f25, dyn # perform operation
fnmadd.d f2, f4, f7, f25, rdn # perform operation
fnmadd.d f2, f4, f7, f25, rmm # perform operation
fnmadd.d f2, f4, f7, f25, rne # perform operation
fnmadd.d f2, f4, f7, f25, rtz # perform operation
fnmadd.d f2, f4, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f4, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f4, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000001)
li x23, 0xf51d80c9b73971b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x280b78f9b44bfeea # load x3 with value 0x280b78f9b44bfeea
sd x3, 0(x2) # store 0x280b78f9b44bfeea in memory
fld f18, 0(x2) # load 0x280b78f9b44bfeea from memory into f18
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fnmadd.d f23, f9, f18, f24, dyn # perform operation
fnmadd.d f23, f9, f18, f24, rdn # perform operation
fnmadd.d f23, f9, f18, f24, rmm # perform operation
fnmadd.d f23, f9, f18, f24, rne # perform operation
fnmadd.d f23, f9, f18, f24, rtz # perform operation
fnmadd.d f23, f9, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f9, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f9, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f9, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f9, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f9, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000000)
li x24, 0x62b5e3f5f10fbb5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x9f3c7c1c1daf9ca4 # load x3 with value 0x9f3c7c1c1daf9ca4
sd x3, 0(x2) # store 0x9f3c7c1c1daf9ca4 in memory
fld f21, 0(x2) # load 0x9f3c7c1c1daf9ca4 from memory into f21
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fnmadd.d f24, f5, f21, f17, dyn # perform operation
fnmadd.d f24, f5, f21, f17, rdn # perform operation
fnmadd.d f24, f5, f21, f17, rmm # perform operation
fnmadd.d f24, f5, f21, f17, rne # perform operation
fnmadd.d f24, f5, f21, f17, rtz # perform operation
fnmadd.d f24, f5, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfff0000000000000)
li x9, 0x8e964fc4be425f58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x4bfb6a7430130259 # load x3 with value 0x4bfb6a7430130259
sd x3, 0(x2) # store 0x4bfb6a7430130259 in memory
fld f24, 0(x2) # load 0x4bfb6a7430130259 from memory into f24
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fnmadd.d f9, f10, f24, f7, dyn # perform operation
fnmadd.d f9, f10, f24, f7, rdn # perform operation
fnmadd.d f9, f10, f24, f7, rmm # perform operation
fnmadd.d f9, f10, f24, f7, rne # perform operation
fnmadd.d f9, f10, f24, f7, rtz # perform operation
fnmadd.d f9, f10, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f10, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff8000000000000)
li x21, 0x3dea13d05f1656fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x98ccd1a788f30428 # load x3 with value 0x98ccd1a788f30428
sd x3, 0(x2) # store 0x98ccd1a788f30428 in memory
fld f6, 0(x2) # load 0x98ccd1a788f30428 from memory into f6
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fnmadd.d f21, f20, f6, f14, dyn # perform operation
fnmadd.d f21, f20, f6, f14, rdn # perform operation
fnmadd.d f21, f20, f6, f14, rmm # perform operation
fnmadd.d f21, f20, f6, f14, rne # perform operation
fnmadd.d f21, f20, f6, f14, rtz # perform operation
fnmadd.d f21, f20, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f20, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f20, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f20, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f20, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f20, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fffffffffffffff)
li x27, 0xd4466c41298c9cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x6acfd128e3b30fd6 # load x3 with value 0x6acfd128e3b30fd6
sd x3, 0(x2) # store 0x6acfd128e3b30fd6 in memory
fld f11, 0(x2) # load 0x6acfd128e3b30fd6 from memory into f11
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmadd.d f27, f4, f11, f26, dyn # perform operation
fnmadd.d f27, f4, f11, f26, rdn # perform operation
fnmadd.d f27, f4, f11, f26, rmm # perform operation
fnmadd.d f27, f4, f11, f26, rne # perform operation
fnmadd.d f27, f4, f11, f26, rtz # perform operation
fnmadd.d f27, f4, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f4, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f4, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f4, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f4, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f4, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000001)
li x30, 0x6eada8fdf7e4f11d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
li x3, 0x6d90d0b0c0ff4c3a # load x3 with value 0x6d90d0b0c0ff4c3a
sd x3, 0(x2) # store 0x6d90d0b0c0ff4c3a in memory
fld f31, 0(x2) # load 0x6d90d0b0c0ff4c3a from memory into f31
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fnmadd.d f30, f9, f31, f19, dyn # perform operation
fnmadd.d f30, f9, f31, f19, rdn # perform operation
fnmadd.d f30, f9, f31, f19, rmm # perform operation
fnmadd.d f30, f9, f31, f19, rne # perform operation
fnmadd.d f30, f9, f31, f19, rtz # perform operation
fnmadd.d f30, f9, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f9, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f9, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff7ffffffffffff)
li x8, 0x065237b3da1ac2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x47351cb9babc0796 # load x3 with value 0x47351cb9babc0796
sd x3, 0(x2) # store 0x47351cb9babc0796 in memory
fld f1, 0(x2) # load 0x47351cb9babc0796 from memory into f1
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fnmadd.d f8, f27, f1, f31, dyn # perform operation
fnmadd.d f8, f27, f1, f31, rdn # perform operation
fnmadd.d f8, f27, f1, f31, rmm # perform operation
fnmadd.d f8, f27, f1, f31, rne # perform operation
fnmadd.d f8, f27, f1, f31, rtz # perform operation
fnmadd.d f8, f27, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x5a392534a57711ad)
li x13, 0x0b25fd2ec2278c12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0xee3bef8dc7bf8376 # load x3 with value 0xee3bef8dc7bf8376
sd x3, 0(x2) # store 0xee3bef8dc7bf8376 in memory
fld f18, 0(x2) # load 0xee3bef8dc7bf8376 from memory into f18
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fnmadd.d f13, f14, f18, f15, dyn # perform operation
fnmadd.d f13, f14, f18, f15, rdn # perform operation
fnmadd.d f13, f14, f18, f15, rmm # perform operation
fnmadd.d f13, f14, f18, f15, rne # perform operation
fnmadd.d f13, f14, f18, f15, rtz # perform operation
fnmadd.d f13, f14, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f14, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f14, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xa6e895993737426c)
li x23, 0x889392f294acd9c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xba0d2f26a3215c24 # load x3 with value 0xba0d2f26a3215c24
sd x3, 0(x2) # store 0xba0d2f26a3215c24 in memory
fld f17, 0(x2) # load 0xba0d2f26a3215c24 from memory into f17
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fnmadd.d f23, f8, f17, f15, dyn # perform operation
fnmadd.d f23, f8, f17, f15, rdn # perform operation
fnmadd.d f23, f8, f17, f15, rmm # perform operation
fnmadd.d f23, f8, f17, f15, rne # perform operation
fnmadd.d f23, f8, f17, f15, rtz # perform operation
fnmadd.d f23, f8, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f8, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f8, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x0)
li x30, 0x1cd2d340cdcc862e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xede5cc8c87bfe0b4 # load x3 with value 0xede5cc8c87bfe0b4
sd x3, 0(x2) # store 0xede5cc8c87bfe0b4 in memory
fld f21, 0(x2) # load 0xede5cc8c87bfe0b4 from memory into f21
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fnmadd.d f30, f19, f21, f18, dyn # perform operation
fnmadd.d f30, f19, f21, f18, rdn # perform operation
fnmadd.d f30, f19, f21, f18, rmm # perform operation
fnmadd.d f30, f19, f21, f18, rne # perform operation
fnmadd.d f30, f19, f21, f18, rtz # perform operation
fnmadd.d f30, f19, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f19, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f19, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f19, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f19, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f19, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000000)
li x24, 0x3d8bba00c06abf49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x2ed2d596dfffd5bb # load x3 with value 0x2ed2d596dfffd5bb
sd x3, 0(x2) # store 0x2ed2d596dfffd5bb in memory
fld f25, 0(x2) # load 0x2ed2d596dfffd5bb from memory into f25
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fnmadd.d f24, f8, f25, f10, dyn # perform operation
fnmadd.d f24, f8, f25, f10, rdn # perform operation
fnmadd.d f24, f8, f25, f10, rmm # perform operation
fnmadd.d f24, f8, f25, f10, rne # perform operation
fnmadd.d f24, f8, f25, f10, rtz # perform operation
fnmadd.d f24, f8, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f8, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff0000000000000)
li x29, 0x071f01d73c8ab106 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x3f17d6a6c5ae032c # load x3 with value 0x3f17d6a6c5ae032c
sd x3, 0(x2) # store 0x3f17d6a6c5ae032c in memory
fld f11, 0(x2) # load 0x3f17d6a6c5ae032c from memory into f11
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fnmadd.d f29, f10, f11, f26, dyn # perform operation
fnmadd.d f29, f10, f11, f26, rdn # perform operation
fnmadd.d f29, f10, f11, f26, rmm # perform operation
fnmadd.d f29, f10, f11, f26, rne # perform operation
fnmadd.d f29, f10, f11, f26, rtz # perform operation
fnmadd.d f29, f10, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f10, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f10, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff0000000000000)
li x15, 0x1d5e04dd3a721d72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xc9820d16e3f86c5e # load x3 with value 0xc9820d16e3f86c5e
sd x3, 0(x2) # store 0xc9820d16e3f86c5e in memory
fld f5, 0(x2) # load 0xc9820d16e3f86c5e from memory into f5
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fnmadd.d f15, f26, f5, f17, dyn # perform operation
fnmadd.d f15, f26, f5, f17, rdn # perform operation
fnmadd.d f15, f26, f5, f17, rmm # perform operation
fnmadd.d f15, f26, f5, f17, rne # perform operation
fnmadd.d f15, f26, f5, f17, rtz # perform operation
fnmadd.d f15, f26, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f26, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff8000000000000)
li x10, 0x9310cb2e3b0ad121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x91246ac3680b090e # load x3 with value 0x91246ac3680b090e
sd x3, 0(x2) # store 0x91246ac3680b090e in memory
fld f18, 0(x2) # load 0x91246ac3680b090e from memory into f18
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fnmadd.d f10, f29, f18, f5, dyn # perform operation
fnmadd.d f10, f29, f18, f5, rdn # perform operation
fnmadd.d f10, f29, f18, f5, rmm # perform operation
fnmadd.d f10, f29, f18, f5, rne # perform operation
fnmadd.d f10, f29, f18, f5, rtz # perform operation
fnmadd.d f10, f29, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff8000000000000)
li x25, 0xad8351c37586c1b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xec2e04091ff078b8 # load x3 with value 0xec2e04091ff078b8
sd x3, 0(x2) # store 0xec2e04091ff078b8 in memory
fld f10, 0(x2) # load 0xec2e04091ff078b8 from memory into f10
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fnmadd.d f25, f7, f10, f28, dyn # perform operation
fnmadd.d f25, f7, f10, f28, rdn # perform operation
fnmadd.d f25, f7, f10, f28, rmm # perform operation
fnmadd.d f25, f7, f10, f28, rne # perform operation
fnmadd.d f25, f7, f10, f28, rtz # perform operation
fnmadd.d f25, f7, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f7, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f7, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f7, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f7, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f7, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x4000000000000000)
li x17, 0x023fd67698a9ed4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x6d5481c96a5eb54a # load x3 with value 0x6d5481c96a5eb54a
sd x3, 0(x2) # store 0x6d5481c96a5eb54a in memory
fld f12, 0(x2) # load 0x6d5481c96a5eb54a from memory into f12
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fnmadd.d f17, f22, f12, f25, dyn # perform operation
fnmadd.d f17, f22, f12, f25, rdn # perform operation
fnmadd.d f17, f22, f12, f25, rmm # perform operation
fnmadd.d f17, f22, f12, f25, rne # perform operation
fnmadd.d f17, f22, f12, f25, rtz # perform operation
fnmadd.d f17, f22, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f22, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xc000000000000000)
li x25, 0xc0fd95aa13f180ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xdb7b8da15a4000e2 # load x3 with value 0xdb7b8da15a4000e2
sd x3, 0(x2) # store 0xdb7b8da15a4000e2 in memory
fld f4, 0(x2) # load 0xdb7b8da15a4000e2 from memory into f4
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fnmadd.d f25, f15, f4, f6, dyn # perform operation
fnmadd.d f25, f15, f4, f6, rdn # perform operation
fnmadd.d f25, f15, f4, f6, rmm # perform operation
fnmadd.d f25, f15, f4, f6, rne # perform operation
fnmadd.d f25, f15, f4, f6, rtz # perform operation
fnmadd.d f25, f15, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f15, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f15, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f15, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f15, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f15, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x10000000000000)
li x3, 0x0e38cab6e2ae2ba7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x84e3bedcf4847abc # load x3 with value 0x84e3bedcf4847abc
sd x3, 0(x2) # store 0x84e3bedcf4847abc in memory
fld f15, 0(x2) # load 0x84e3bedcf4847abc from memory into f15
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fnmadd.d f3, f19, f15, f12, dyn # perform operation
fnmadd.d f3, f19, f15, f12, rdn # perform operation
fnmadd.d f3, f19, f15, f12, rmm # perform operation
fnmadd.d f3, f19, f15, f12, rne # perform operation
fnmadd.d f3, f19, f15, f12, rtz # perform operation
fnmadd.d f3, f19, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f19, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f19, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f19, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f19, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f19, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8010000000000000)
li x26, 0xad1b8b90246fd4e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x091ba7c8c6d7a87a # load x3 with value 0x091ba7c8c6d7a87a
sd x3, 0(x2) # store 0x091ba7c8c6d7a87a in memory
fld f11, 0(x2) # load 0x091ba7c8c6d7a87a from memory into f11
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fnmadd.d f26, f9, f11, f24, dyn # perform operation
fnmadd.d f26, f9, f11, f24, rdn # perform operation
fnmadd.d f26, f9, f11, f24, rmm # perform operation
fnmadd.d f26, f9, f11, f24, rne # perform operation
fnmadd.d f26, f9, f11, f24, rtz # perform operation
fnmadd.d f26, f9, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fefffffffffffff)
li x15, 0xd9d3c72d9d600805 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0xbbdf2c6006a99761 # load x3 with value 0xbbdf2c6006a99761
sd x3, 0(x2) # store 0xbbdf2c6006a99761 in memory
fld f31, 0(x2) # load 0xbbdf2c6006a99761 from memory into f31
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fnmadd.d f15, f12, f31, f28, dyn # perform operation
fnmadd.d f15, f12, f31, f28, rdn # perform operation
fnmadd.d f15, f12, f31, f28, rmm # perform operation
fnmadd.d f15, f12, f31, f28, rne # perform operation
fnmadd.d f15, f12, f31, f28, rtz # perform operation
fnmadd.d f15, f12, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f12, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f12, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f12, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f12, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f12, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xffefffffffffffff)
li x19, 0x1a7b2687b529c6b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0xb12abd0f7ad5ac39 # load x3 with value 0xb12abd0f7ad5ac39
sd x3, 0(x2) # store 0xb12abd0f7ad5ac39 in memory
fld f18, 0(x2) # load 0xb12abd0f7ad5ac39 from memory into f18
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fnmadd.d f19, f30, f18, f7, dyn # perform operation
fnmadd.d f19, f30, f18, f7, rdn # perform operation
fnmadd.d f19, f30, f18, f7, rmm # perform operation
fnmadd.d f19, f30, f18, f7, rne # perform operation
fnmadd.d f19, f30, f18, f7, rtz # perform operation
fnmadd.d f19, f30, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f30, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f30, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f30, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f30, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f30, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfffffffffffff)
li x30, 0xe3245e4ae2212c6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x96d2b9ce43bce0c2 # load x3 with value 0x96d2b9ce43bce0c2
sd x3, 0(x2) # store 0x96d2b9ce43bce0c2 in memory
fld f28, 0(x2) # load 0x96d2b9ce43bce0c2 from memory into f28
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fnmadd.d f30, f31, f28, f7, dyn # perform operation
fnmadd.d f30, f31, f28, f7, rdn # perform operation
fnmadd.d f30, f31, f28, f7, rmm # perform operation
fnmadd.d f30, f31, f28, f7, rne # perform operation
fnmadd.d f30, f31, f28, f7, rtz # perform operation
fnmadd.d f30, f31, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f31, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f31, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f31, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f31, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f31, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x800fffffffffffff)
li x23, 0xb1cf1ac0891d395e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xbf2350b937efe6e2 # load x3 with value 0xbf2350b937efe6e2
sd x3, 0(x2) # store 0xbf2350b937efe6e2 in memory
fld f21, 0(x2) # load 0xbf2350b937efe6e2 from memory into f21
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fnmadd.d f23, f19, f21, f29, dyn # perform operation
fnmadd.d f23, f19, f21, f29, rdn # perform operation
fnmadd.d f23, f19, f21, f29, rmm # perform operation
fnmadd.d f23, f19, f21, f29, rne # perform operation
fnmadd.d f23, f19, f21, f29, rtz # perform operation
fnmadd.d f23, f19, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000)
li x31, 0xd38ee8b04dee183e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x053e000bb19b062e # load x3 with value 0x053e000bb19b062e
sd x3, 0(x2) # store 0x053e000bb19b062e in memory
fld f5, 0(x2) # load 0x053e000bb19b062e from memory into f5
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fnmadd.d f31, f8, f5, f2, dyn # perform operation
fnmadd.d f31, f8, f5, f2, rdn # perform operation
fnmadd.d f31, f8, f5, f2, rmm # perform operation
fnmadd.d f31, f8, f5, f2, rne # perform operation
fnmadd.d f31, f8, f5, f2, rtz # perform operation
fnmadd.d f31, f8, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f8, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8008000000000000)
li x4, 0x7634c3d2db7c8d0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0xa85cfbad75cd0b67 # load x3 with value 0xa85cfbad75cd0b67
sd x3, 0(x2) # store 0xa85cfbad75cd0b67 in memory
fld f9, 0(x2) # load 0xa85cfbad75cd0b67 from memory into f9
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fnmadd.d f4, f14, f9, f8, dyn # perform operation
fnmadd.d f4, f14, f9, f8, rdn # perform operation
fnmadd.d f4, f14, f9, f8, rmm # perform operation
fnmadd.d f4, f14, f9, f8, rne # perform operation
fnmadd.d f4, f14, f9, f8, rtz # perform operation
fnmadd.d f4, f14, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f14, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f14, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x1)
li x3, 0x1b67ff9cc81f040b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0x6753c02f90b496a2 # load x3 with value 0x6753c02f90b496a2
sd x3, 0(x2) # store 0x6753c02f90b496a2 in memory
fld f13, 0(x2) # load 0x6753c02f90b496a2 from memory into f13
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fnmadd.d f3, f25, f13, f26, dyn # perform operation
fnmadd.d f3, f25, f13, f26, rdn # perform operation
fnmadd.d f3, f25, f13, f26, rmm # perform operation
fnmadd.d f3, f25, f13, f26, rne # perform operation
fnmadd.d f3, f25, f13, f26, rtz # perform operation
fnmadd.d f3, f25, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f25, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f25, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f25, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f25, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f25, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000001)
li x31, 0x4dd9f3da94cc2141 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x6a7a67b4989a8e4f # load x3 with value 0x6a7a67b4989a8e4f
sd x3, 0(x2) # store 0x6a7a67b4989a8e4f in memory
fld f14, 0(x2) # load 0x6a7a67b4989a8e4f from memory into f14
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fnmadd.d f31, f6, f14, f13, dyn # perform operation
fnmadd.d f31, f6, f14, f13, rdn # perform operation
fnmadd.d f31, f6, f14, f13, rmm # perform operation
fnmadd.d f31, f6, f14, f13, rne # perform operation
fnmadd.d f31, f6, f14, f13, rtz # perform operation
fnmadd.d f31, f6, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000000)
li x25, 0x14041b6a0f9e5148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0xffc8c1442c0dfa4b # load x3 with value 0xffc8c1442c0dfa4b
sd x3, 0(x2) # store 0xffc8c1442c0dfa4b in memory
fld f19, 0(x2) # load 0xffc8c1442c0dfa4b from memory into f19
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fnmadd.d f25, f6, f19, f5, dyn # perform operation
fnmadd.d f25, f6, f19, f5, rdn # perform operation
fnmadd.d f25, f6, f19, f5, rmm # perform operation
fnmadd.d f25, f6, f19, f5, rne # perform operation
fnmadd.d f25, f6, f19, f5, rtz # perform operation
fnmadd.d f25, f6, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfff0000000000000)
li x2, 0x6100b5353cc9728e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0xe60066ec6e633617 # load x3 with value 0xe60066ec6e633617
sd x3, 0(x2) # store 0xe60066ec6e633617 in memory
fld f19, 0(x2) # load 0xe60066ec6e633617 from memory into f19
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fnmadd.d f2, f3, f19, f25, dyn # perform operation
fnmadd.d f2, f3, f19, f25, rdn # perform operation
fnmadd.d f2, f3, f19, f25, rmm # perform operation
fnmadd.d f2, f3, f19, f25, rne # perform operation
fnmadd.d f2, f3, f19, f25, rtz # perform operation
fnmadd.d f2, f3, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f3, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff8000000000000)
li x27, 0xf2a09497bb5432fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x7fab04f15fd84fc9 # load x3 with value 0x7fab04f15fd84fc9
sd x3, 0(x2) # store 0x7fab04f15fd84fc9 in memory
fld f7, 0(x2) # load 0x7fab04f15fd84fc9 from memory into f7
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fnmadd.d f27, f8, f7, f31, dyn # perform operation
fnmadd.d f27, f8, f7, f31, rdn # perform operation
fnmadd.d f27, f8, f7, f31, rmm # perform operation
fnmadd.d f27, f8, f7, f31, rne # perform operation
fnmadd.d f27, f8, f7, f31, rtz # perform operation
fnmadd.d f27, f8, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f8, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fffffffffffffff)
li x2, 0x6ad874ca619b2a83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0xd06bf2eceda99627 # load x3 with value 0xd06bf2eceda99627
sd x3, 0(x2) # store 0xd06bf2eceda99627 in memory
fld f26, 0(x2) # load 0xd06bf2eceda99627 from memory into f26
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fnmadd.d f2, f30, f26, f10, dyn # perform operation
fnmadd.d f2, f30, f26, f10, rdn # perform operation
fnmadd.d f2, f30, f26, f10, rmm # perform operation
fnmadd.d f2, f30, f26, f10, rne # perform operation
fnmadd.d f2, f30, f26, f10, rtz # perform operation
fnmadd.d f2, f30, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f30, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f30, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f30, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f30, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f30, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000001)
li x31, 0xe989421f93869f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x281f978340cf1deb # load x3 with value 0x281f978340cf1deb
sd x3, 0(x2) # store 0x281f978340cf1deb in memory
fld f23, 0(x2) # load 0x281f978340cf1deb from memory into f23
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fnmadd.d f31, f29, f23, f19, dyn # perform operation
fnmadd.d f31, f29, f23, f19, rdn # perform operation
fnmadd.d f31, f29, f23, f19, rmm # perform operation
fnmadd.d f31, f29, f23, f19, rne # perform operation
fnmadd.d f31, f29, f23, f19, rtz # perform operation
fnmadd.d f31, f29, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f29, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f29, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f29, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f29, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f29, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff7ffffffffffff)
li x10, 0xcce96740c11519ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x5e9c3beb7053075b # load x3 with value 0x5e9c3beb7053075b
sd x3, 0(x2) # store 0x5e9c3beb7053075b in memory
fld f20, 0(x2) # load 0x5e9c3beb7053075b from memory into f20
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fnmadd.d f10, f17, f20, f16, dyn # perform operation
fnmadd.d f10, f17, f20, f16, rdn # perform operation
fnmadd.d f10, f17, f20, f16, rmm # perform operation
fnmadd.d f10, f17, f20, f16, rne # perform operation
fnmadd.d f10, f17, f20, f16, rtz # perform operation
fnmadd.d f10, f17, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f17, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x5a392534a57711ad)
li x7, 0x928373ba80cb2c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x93ceda5f62e7c36c # load x3 with value 0x93ceda5f62e7c36c
sd x3, 0(x2) # store 0x93ceda5f62e7c36c in memory
fld f8, 0(x2) # load 0x93ceda5f62e7c36c from memory into f8
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fnmadd.d f7, f1, f8, f19, dyn # perform operation
fnmadd.d f7, f1, f8, f19, rdn # perform operation
fnmadd.d f7, f1, f8, f19, rmm # perform operation
fnmadd.d f7, f1, f8, f19, rne # perform operation
fnmadd.d f7, f1, f8, f19, rtz # perform operation
fnmadd.d f7, f1, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f1, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xa6e895993737426c)
li x2, 0xafbc48c683bbbf1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x6e77640ec17a68ea # load x3 with value 0x6e77640ec17a68ea
sd x3, 0(x2) # store 0x6e77640ec17a68ea in memory
fld f7, 0(x2) # load 0x6e77640ec17a68ea from memory into f7
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fnmadd.d f2, f23, f7, f28, dyn # perform operation
fnmadd.d f2, f23, f7, f28, rdn # perform operation
fnmadd.d f2, f23, f7, f28, rmm # perform operation
fnmadd.d f2, f23, f7, f28, rne # perform operation
fnmadd.d f2, f23, f7, f28, rtz # perform operation
fnmadd.d f2, f23, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f23, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x0)
li x14, 0x4918af222ddcfc0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x8ab236fd8180972b # load x3 with value 0x8ab236fd8180972b
sd x3, 0(x2) # store 0x8ab236fd8180972b in memory
fld f10, 0(x2) # load 0x8ab236fd8180972b from memory into f10
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fnmadd.d f14, f3, f10, f18, dyn # perform operation
fnmadd.d f14, f3, f10, f18, rdn # perform operation
fnmadd.d f14, f3, f10, f18, rmm # perform operation
fnmadd.d f14, f3, f10, f18, rne # perform operation
fnmadd.d f14, f3, f10, f18, rtz # perform operation
fnmadd.d f14, f3, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f3, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f3, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000000)
li x20, 0x428c66191406a0b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0xe44b389acbe41e28 # load x3 with value 0xe44b389acbe41e28
sd x3, 0(x2) # store 0xe44b389acbe41e28 in memory
fld f10, 0(x2) # load 0xe44b389acbe41e28 from memory into f10
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fnmadd.d f20, f15, f10, f30, dyn # perform operation
fnmadd.d f20, f15, f10, f30, rdn # perform operation
fnmadd.d f20, f15, f10, f30, rmm # perform operation
fnmadd.d f20, f15, f10, f30, rne # perform operation
fnmadd.d f20, f15, f10, f30, rtz # perform operation
fnmadd.d f20, f15, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff0000000000000)
li x10, 0x1bfbc232a9c8dfcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0xc9b9e9383663a19a # load x3 with value 0xc9b9e9383663a19a
sd x3, 0(x2) # store 0xc9b9e9383663a19a in memory
fld f18, 0(x2) # load 0xc9b9e9383663a19a from memory into f18
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fnmadd.d f10, f12, f18, f1, dyn # perform operation
fnmadd.d f10, f12, f18, f1, rdn # perform operation
fnmadd.d f10, f12, f18, f1, rmm # perform operation
fnmadd.d f10, f12, f18, f1, rne # perform operation
fnmadd.d f10, f12, f18, f1, rtz # perform operation
fnmadd.d f10, f12, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f12, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f12, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f12, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f12, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f12, f18, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff0000000000000)
li x19, 0xc63da5a0d329ba1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0xd555d6aebaaf453d # load x3 with value 0xd555d6aebaaf453d
sd x3, 0(x2) # store 0xd555d6aebaaf453d in memory
fld f15, 0(x2) # load 0xd555d6aebaaf453d from memory into f15
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f19, f20, f15, f22, dyn # perform operation
fnmadd.d f19, f20, f15, f22, rdn # perform operation
fnmadd.d f19, f20, f15, f22, rmm # perform operation
fnmadd.d f19, f20, f15, f22, rne # perform operation
fnmadd.d f19, f20, f15, f22, rtz # perform operation
fnmadd.d f19, f20, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f20, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f20, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f20, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f20, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f20, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff8000000000000)
li x21, 0xa37c961ba4844da8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x3106ed45ba5b052a # load x3 with value 0x3106ed45ba5b052a
sd x3, 0(x2) # store 0x3106ed45ba5b052a in memory
fld f8, 0(x2) # load 0x3106ed45ba5b052a from memory into f8
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fnmadd.d f21, f20, f8, f18, dyn # perform operation
fnmadd.d f21, f20, f8, f18, rdn # perform operation
fnmadd.d f21, f20, f8, f18, rmm # perform operation
fnmadd.d f21, f20, f8, f18, rne # perform operation
fnmadd.d f21, f20, f8, f18, rtz # perform operation
fnmadd.d f21, f20, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f20, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f20, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f20, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f20, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f20, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff8000000000000)
li x31, 0xfd62860451ea97ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x7e6d9f162d18341f # load x3 with value 0x7e6d9f162d18341f
sd x3, 0(x2) # store 0x7e6d9f162d18341f in memory
fld f17, 0(x2) # load 0x7e6d9f162d18341f from memory into f17
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmadd.d f31, f22, f17, f26, dyn # perform operation
fnmadd.d f31, f22, f17, f26, rdn # perform operation
fnmadd.d f31, f22, f17, f26, rmm # perform operation
fnmadd.d f31, f22, f17, f26, rne # perform operation
fnmadd.d f31, f22, f17, f26, rtz # perform operation
fnmadd.d f31, f22, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f22, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x4000000000000000)
li x17, 0xaf5c3ef3fd5bb4e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0xb61a8dab3a96a3bb # load x3 with value 0xb61a8dab3a96a3bb
sd x3, 0(x2) # store 0xb61a8dab3a96a3bb in memory
fld f5, 0(x2) # load 0xb61a8dab3a96a3bb from memory into f5
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmadd.d f17, f8, f5, f2, dyn # perform operation
fnmadd.d f17, f8, f5, f2, rdn # perform operation
fnmadd.d f17, f8, f5, f2, rmm # perform operation
fnmadd.d f17, f8, f5, f2, rne # perform operation
fnmadd.d f17, f8, f5, f2, rtz # perform operation
fnmadd.d f17, f8, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xc000000000000000)
li x23, 0x0825c7cbd70f0f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x222ffc96a13d5975 # load x3 with value 0x222ffc96a13d5975
sd x3, 0(x2) # store 0x222ffc96a13d5975 in memory
fld f12, 0(x2) # load 0x222ffc96a13d5975 from memory into f12
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
fnmadd.d f23, f25, f12, f26, dyn # perform operation
fnmadd.d f23, f25, f12, f26, rdn # perform operation
fnmadd.d f23, f25, f12, f26, rmm # perform operation
fnmadd.d f23, f25, f12, f26, rne # perform operation
fnmadd.d f23, f25, f12, f26, rtz # perform operation
fnmadd.d f23, f25, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x10000000000000)
li x11, 0x2144b7bb85f57b27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x9db9fb272b071ed5 # load x3 with value 0x9db9fb272b071ed5
sd x3, 0(x2) # store 0x9db9fb272b071ed5 in memory
fld f3, 0(x2) # load 0x9db9fb272b071ed5 from memory into f3
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fnmadd.d f11, f29, f3, f22, dyn # perform operation
fnmadd.d f11, f29, f3, f22, rdn # perform operation
fnmadd.d f11, f29, f3, f22, rmm # perform operation
fnmadd.d f11, f29, f3, f22, rne # perform operation
fnmadd.d f11, f29, f3, f22, rtz # perform operation
fnmadd.d f11, f29, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f29, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f29, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8010000000000000)
li x4, 0xeac1823c7841675d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x5601310e59e499d4 # load x3 with value 0x5601310e59e499d4
sd x3, 0(x2) # store 0x5601310e59e499d4 in memory
fld f27, 0(x2) # load 0x5601310e59e499d4 from memory into f27
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fnmadd.d f4, f12, f27, f28, dyn # perform operation
fnmadd.d f4, f12, f27, f28, rdn # perform operation
fnmadd.d f4, f12, f27, f28, rmm # perform operation
fnmadd.d f4, f12, f27, f28, rne # perform operation
fnmadd.d f4, f12, f27, f28, rtz # perform operation
fnmadd.d f4, f12, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f12, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fefffffffffffff)
li x28, 0x24649793afbda2b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x9b58b6ee81452258 # load x3 with value 0x9b58b6ee81452258
sd x3, 0(x2) # store 0x9b58b6ee81452258 in memory
fld f4, 0(x2) # load 0x9b58b6ee81452258 from memory into f4
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
fnmadd.d f28, f9, f4, f3, dyn # perform operation
fnmadd.d f28, f9, f4, f3, rdn # perform operation
fnmadd.d f28, f9, f4, f3, rmm # perform operation
fnmadd.d f28, f9, f4, f3, rne # perform operation
fnmadd.d f28, f9, f4, f3, rtz # perform operation
fnmadd.d f28, f9, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f9, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xffefffffffffffff)
li x10, 0x9f45d9473c4bed65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x2675a2cd1a14c336 # load x3 with value 0x2675a2cd1a14c336
sd x3, 0(x2) # store 0x2675a2cd1a14c336 in memory
fld f13, 0(x2) # load 0x2675a2cd1a14c336 from memory into f13
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fnmadd.d f10, f25, f13, f8, dyn # perform operation
fnmadd.d f10, f25, f13, f8, rdn # perform operation
fnmadd.d f10, f25, f13, f8, rmm # perform operation
fnmadd.d f10, f25, f13, f8, rne # perform operation
fnmadd.d f10, f25, f13, f8, rtz # perform operation
fnmadd.d f10, f25, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f25, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfffffffffffff)
li x12, 0x4633c3be2855ad82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0xe3d527f1c8cd2303 # load x3 with value 0xe3d527f1c8cd2303
sd x3, 0(x2) # store 0xe3d527f1c8cd2303 in memory
fld f29, 0(x2) # load 0xe3d527f1c8cd2303 from memory into f29
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fnmadd.d f12, f22, f29, f20, dyn # perform operation
fnmadd.d f12, f22, f29, f20, rdn # perform operation
fnmadd.d f12, f22, f29, f20, rmm # perform operation
fnmadd.d f12, f22, f29, f20, rne # perform operation
fnmadd.d f12, f22, f29, f20, rtz # perform operation
fnmadd.d f12, f22, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f22, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f22, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f22, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f22, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f22, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x800fffffffffffff)
li x11, 0x81f225de9bfcaddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x5ee952e55623022e # load x3 with value 0x5ee952e55623022e
sd x3, 0(x2) # store 0x5ee952e55623022e in memory
fld f18, 0(x2) # load 0x5ee952e55623022e from memory into f18
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fnmadd.d f11, f17, f18, f31, dyn # perform operation
fnmadd.d f11, f17, f18, f31, rdn # perform operation
fnmadd.d f11, f17, f18, f31, rmm # perform operation
fnmadd.d f11, f17, f18, f31, rne # perform operation
fnmadd.d f11, f17, f18, f31, rtz # perform operation
fnmadd.d f11, f17, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000)
li x29, 0x5867714533e28e4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x47d95b7f73163874 # load x3 with value 0x47d95b7f73163874
sd x3, 0(x2) # store 0x47d95b7f73163874 in memory
fld f25, 0(x2) # load 0x47d95b7f73163874 from memory into f25
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fnmadd.d f29, f16, f25, f15, dyn # perform operation
fnmadd.d f29, f16, f25, f15, rdn # perform operation
fnmadd.d f29, f16, f25, f15, rmm # perform operation
fnmadd.d f29, f16, f25, f15, rne # perform operation
fnmadd.d f29, f16, f25, f15, rtz # perform operation
fnmadd.d f29, f16, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f16, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8008000000000000)
li x6, 0x208acbdb500833d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x6f024ca89f3a178b # load x3 with value 0x6f024ca89f3a178b
sd x3, 0(x2) # store 0x6f024ca89f3a178b in memory
fld f5, 0(x2) # load 0x6f024ca89f3a178b from memory into f5
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f6, f28, f5, f1, dyn # perform operation
fnmadd.d f6, f28, f5, f1, rdn # perform operation
fnmadd.d f6, f28, f5, f1, rmm # perform operation
fnmadd.d f6, f28, f5, f1, rne # perform operation
fnmadd.d f6, f28, f5, f1, rtz # perform operation
fnmadd.d f6, f28, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f28, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f28, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f28, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f28, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f28, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x1)
li x17, 0xec552e997c4e7618 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x353c6404858237ba # load x3 with value 0x353c6404858237ba
sd x3, 0(x2) # store 0x353c6404858237ba in memory
fld f6, 0(x2) # load 0x353c6404858237ba from memory into f6
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fnmadd.d f17, f28, f6, f5, dyn # perform operation
fnmadd.d f17, f28, f6, f5, rdn # perform operation
fnmadd.d f17, f28, f6, f5, rmm # perform operation
fnmadd.d f17, f28, f6, f5, rne # perform operation
fnmadd.d f17, f28, f6, f5, rtz # perform operation
fnmadd.d f17, f28, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f28, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000001)
li x11, 0xc58bc14c621c4905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x4627450f20ca25f5 # load x3 with value 0x4627450f20ca25f5
sd x3, 0(x2) # store 0x4627450f20ca25f5 in memory
fld f4, 0(x2) # load 0x4627450f20ca25f5 from memory into f4
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fnmadd.d f11, f14, f4, f8, dyn # perform operation
fnmadd.d f11, f14, f4, f8, rdn # perform operation
fnmadd.d f11, f14, f4, f8, rmm # perform operation
fnmadd.d f11, f14, f4, f8, rne # perform operation
fnmadd.d f11, f14, f4, f8, rtz # perform operation
fnmadd.d f11, f14, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f14, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000000)
li x12, 0x5d13d36e902eb92a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x8ff893338bd2f3d0 # load x3 with value 0x8ff893338bd2f3d0
sd x3, 0(x2) # store 0x8ff893338bd2f3d0 in memory
fld f20, 0(x2) # load 0x8ff893338bd2f3d0 from memory into f20
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fnmadd.d f12, f13, f20, f24, dyn # perform operation
fnmadd.d f12, f13, f20, f24, rdn # perform operation
fnmadd.d f12, f13, f20, f24, rmm # perform operation
fnmadd.d f12, f13, f20, f24, rne # perform operation
fnmadd.d f12, f13, f20, f24, rtz # perform operation
fnmadd.d f12, f13, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfff0000000000000)
li x16, 0xab113c6ca86e5e59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0xa22efa9a7c6fdb4d # load x3 with value 0xa22efa9a7c6fdb4d
sd x3, 0(x2) # store 0xa22efa9a7c6fdb4d in memory
fld f21, 0(x2) # load 0xa22efa9a7c6fdb4d from memory into f21
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fnmadd.d f16, f10, f21, f9, dyn # perform operation
fnmadd.d f16, f10, f21, f9, rdn # perform operation
fnmadd.d f16, f10, f21, f9, rmm # perform operation
fnmadd.d f16, f10, f21, f9, rne # perform operation
fnmadd.d f16, f10, f21, f9, rtz # perform operation
fnmadd.d f16, f10, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f10, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f10, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f10, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f10, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f10, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff8000000000000)
li x11, 0x0771b27a3b73065f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x0a58955597acd78b # load x3 with value 0x0a58955597acd78b
sd x3, 0(x2) # store 0x0a58955597acd78b in memory
fld f19, 0(x2) # load 0x0a58955597acd78b from memory into f19
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f11, f10, f19, f16, dyn # perform operation
fnmadd.d f11, f10, f19, f16, rdn # perform operation
fnmadd.d f11, f10, f19, f16, rmm # perform operation
fnmadd.d f11, f10, f19, f16, rne # perform operation
fnmadd.d f11, f10, f19, f16, rtz # perform operation
fnmadd.d f11, f10, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fffffffffffffff)
li x19, 0x282fdb798a667cdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0xa958253b07b188ea # load x3 with value 0xa958253b07b188ea
sd x3, 0(x2) # store 0xa958253b07b188ea in memory
fld f26, 0(x2) # load 0xa958253b07b188ea from memory into f26
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fnmadd.d f19, f13, f26, f1, dyn # perform operation
fnmadd.d f19, f13, f26, f1, rdn # perform operation
fnmadd.d f19, f13, f26, f1, rmm # perform operation
fnmadd.d f19, f13, f26, f1, rne # perform operation
fnmadd.d f19, f13, f26, f1, rtz # perform operation
fnmadd.d f19, f13, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f13, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f13, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f13, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f13, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f13, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000001)
li x20, 0x250efd3fa2a78582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x0d863fcf5b785a4f # load x3 with value 0x0d863fcf5b785a4f
sd x3, 0(x2) # store 0x0d863fcf5b785a4f in memory
fld f27, 0(x2) # load 0x0d863fcf5b785a4f from memory into f27
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fnmadd.d f20, f15, f27, f8, dyn # perform operation
fnmadd.d f20, f15, f27, f8, rdn # perform operation
fnmadd.d f20, f15, f27, f8, rmm # perform operation
fnmadd.d f20, f15, f27, f8, rne # perform operation
fnmadd.d f20, f15, f27, f8, rtz # perform operation
fnmadd.d f20, f15, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff7ffffffffffff)
li x27, 0xe5a57a6454382927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0xe6d9b9bb44bec27a # load x3 with value 0xe6d9b9bb44bec27a
sd x3, 0(x2) # store 0xe6d9b9bb44bec27a in memory
fld f16, 0(x2) # load 0xe6d9b9bb44bec27a from memory into f16
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fnmadd.d f27, f29, f16, f5, dyn # perform operation
fnmadd.d f27, f29, f16, f5, rdn # perform operation
fnmadd.d f27, f29, f16, f5, rmm # perform operation
fnmadd.d f27, f29, f16, f5, rne # perform operation
fnmadd.d f27, f29, f16, f5, rtz # perform operation
fnmadd.d f27, f29, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f29, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x5a392534a57711ad)
li x15, 0xff3e94108b049a1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0x2fc1bacd8754a25d # load x3 with value 0x2fc1bacd8754a25d
sd x3, 0(x2) # store 0x2fc1bacd8754a25d in memory
fld f17, 0(x2) # load 0x2fc1bacd8754a25d from memory into f17
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fnmadd.d f15, f4, f17, f30, dyn # perform operation
fnmadd.d f15, f4, f17, f30, rdn # perform operation
fnmadd.d f15, f4, f17, f30, rmm # perform operation
fnmadd.d f15, f4, f17, f30, rne # perform operation
fnmadd.d f15, f4, f17, f30, rtz # perform operation
fnmadd.d f15, f4, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f4, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f4, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f4, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f4, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f4, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xa6e895993737426c)
li x14, 0x12ebeb873987fe2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x1cc066aca73c123d # load x3 with value 0x1cc066aca73c123d
sd x3, 0(x2) # store 0x1cc066aca73c123d in memory
fld f19, 0(x2) # load 0x1cc066aca73c123d from memory into f19
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fnmadd.d f14, f30, f19, f21, dyn # perform operation
fnmadd.d f14, f30, f19, f21, rdn # perform operation
fnmadd.d f14, f30, f19, f21, rmm # perform operation
fnmadd.d f14, f30, f19, f21, rne # perform operation
fnmadd.d f14, f30, f19, f21, rtz # perform operation
fnmadd.d f14, f30, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f30, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x0)
li x15, 0x2cd1de58e4b94258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x51118ec3c423c6aa # load x3 with value 0x51118ec3c423c6aa
sd x3, 0(x2) # store 0x51118ec3c423c6aa in memory
fld f4, 0(x2) # load 0x51118ec3c423c6aa from memory into f4
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmadd.d f15, f7, f4, f2, dyn # perform operation
fnmadd.d f15, f7, f4, f2, rdn # perform operation
fnmadd.d f15, f7, f4, f2, rmm # perform operation
fnmadd.d f15, f7, f4, f2, rne # perform operation
fnmadd.d f15, f7, f4, f2, rtz # perform operation
fnmadd.d f15, f7, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000000)
li x9, 0xf3b3d1273d7ab4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x3078c69183c228eb # load x3 with value 0x3078c69183c228eb
sd x3, 0(x2) # store 0x3078c69183c228eb in memory
fld f5, 0(x2) # load 0x3078c69183c228eb from memory into f5
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fnmadd.d f9, f8, f5, f1, dyn # perform operation
fnmadd.d f9, f8, f5, f1, rdn # perform operation
fnmadd.d f9, f8, f5, f1, rmm # perform operation
fnmadd.d f9, f8, f5, f1, rne # perform operation
fnmadd.d f9, f8, f5, f1, rtz # perform operation
fnmadd.d f9, f8, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff0000000000000)
li x2, 0x48817e8edbc530b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x838d26fdd76a852e # load x3 with value 0x838d26fdd76a852e
sd x3, 0(x2) # store 0x838d26fdd76a852e in memory
fld f27, 0(x2) # load 0x838d26fdd76a852e from memory into f27
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmadd.d f2, f23, f27, f13, dyn # perform operation
fnmadd.d f2, f23, f27, f13, rdn # perform operation
fnmadd.d f2, f23, f27, f13, rmm # perform operation
fnmadd.d f2, f23, f27, f13, rne # perform operation
fnmadd.d f2, f23, f27, f13, rtz # perform operation
fnmadd.d f2, f23, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f23, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff0000000000000)
li x19, 0x4572c700efb2b951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0xc3e2144fc4ed93cf # load x3 with value 0xc3e2144fc4ed93cf
sd x3, 0(x2) # store 0xc3e2144fc4ed93cf in memory
fld f31, 0(x2) # load 0xc3e2144fc4ed93cf from memory into f31
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fnmadd.d f19, f28, f31, f20, dyn # perform operation
fnmadd.d f19, f28, f31, f20, rdn # perform operation
fnmadd.d f19, f28, f31, f20, rmm # perform operation
fnmadd.d f19, f28, f31, f20, rne # perform operation
fnmadd.d f19, f28, f31, f20, rtz # perform operation
fnmadd.d f19, f28, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f28, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f28, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff8000000000000)
li x29, 0x9888a1faf1c07eb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0xe2197f581c022fec # load x3 with value 0xe2197f581c022fec
sd x3, 0(x2) # store 0xe2197f581c022fec in memory
fld f21, 0(x2) # load 0xe2197f581c022fec from memory into f21
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmadd.d f29, f14, f21, f3, dyn # perform operation
fnmadd.d f29, f14, f21, f3, rdn # perform operation
fnmadd.d f29, f14, f21, f3, rmm # perform operation
fnmadd.d f29, f14, f21, f3, rne # perform operation
fnmadd.d f29, f14, f21, f3, rtz # perform operation
fnmadd.d f29, f14, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f14, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f14, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff8000000000000)
li x30, 0xa255483ab3738294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0xd259fdb32b249a34 # load x3 with value 0xd259fdb32b249a34
sd x3, 0(x2) # store 0xd259fdb32b249a34 in memory
fld f11, 0(x2) # load 0xd259fdb32b249a34 from memory into f11
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fnmadd.d f30, f20, f11, f5, dyn # perform operation
fnmadd.d f30, f20, f11, f5, rdn # perform operation
fnmadd.d f30, f20, f11, f5, rmm # perform operation
fnmadd.d f30, f20, f11, f5, rne # perform operation
fnmadd.d f30, f20, f11, f5, rtz # perform operation
fnmadd.d f30, f20, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f20, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x4000000000000000)
li x4, 0xa9c990942203b030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x97dadc481b9cc68b # load x3 with value 0x97dadc481b9cc68b
sd x3, 0(x2) # store 0x97dadc481b9cc68b in memory
fld f26, 0(x2) # load 0x97dadc481b9cc68b from memory into f26
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fnmadd.d f4, f27, f26, f3, dyn # perform operation
fnmadd.d f4, f27, f26, f3, rdn # perform operation
fnmadd.d f4, f27, f26, f3, rmm # perform operation
fnmadd.d f4, f27, f26, f3, rne # perform operation
fnmadd.d f4, f27, f26, f3, rtz # perform operation
fnmadd.d f4, f27, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f27, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f27, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f27, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f27, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f27, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xc000000000000000)
li x8, 0x19b910363f059636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x203d58c4a1edd3c2 # load x3 with value 0x203d58c4a1edd3c2
sd x3, 0(x2) # store 0x203d58c4a1edd3c2 in memory
fld f10, 0(x2) # load 0x203d58c4a1edd3c2 from memory into f10
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fnmadd.d f8, f2, f10, f7, dyn # perform operation
fnmadd.d f8, f2, f10, f7, rdn # perform operation
fnmadd.d f8, f2, f10, f7, rmm # perform operation
fnmadd.d f8, f2, f10, f7, rne # perform operation
fnmadd.d f8, f2, f10, f7, rtz # perform operation
fnmadd.d f8, f2, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f2, f10, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x10000000000000)
li x2, 0x8f30a219430e7910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0xdb022138130f8826 # load x3 with value 0xdb022138130f8826
sd x3, 0(x2) # store 0xdb022138130f8826 in memory
fld f30, 0(x2) # load 0xdb022138130f8826 from memory into f30
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fnmadd.d f2, f20, f30, f29, dyn # perform operation
fnmadd.d f2, f20, f30, f29, rdn # perform operation
fnmadd.d f2, f20, f30, f29, rmm # perform operation
fnmadd.d f2, f20, f30, f29, rne # perform operation
fnmadd.d f2, f20, f30, f29, rtz # perform operation
fnmadd.d f2, f20, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f20, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8010000000000000)
li x17, 0x0aca7635a207fd55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x28043893d4ca6a04 # load x3 with value 0x28043893d4ca6a04
sd x3, 0(x2) # store 0x28043893d4ca6a04 in memory
fld f30, 0(x2) # load 0x28043893d4ca6a04 from memory into f30
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fnmadd.d f17, f22, f30, f31, dyn # perform operation
fnmadd.d f17, f22, f30, f31, rdn # perform operation
fnmadd.d f17, f22, f30, f31, rmm # perform operation
fnmadd.d f17, f22, f30, f31, rne # perform operation
fnmadd.d f17, f22, f30, f31, rtz # perform operation
fnmadd.d f17, f22, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f22, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f22, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f22, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f22, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f22, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fefffffffffffff)
li x27, 0x08f952dedb25154e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x8ff9c57a37b6e8d1 # load x3 with value 0x8ff9c57a37b6e8d1
sd x3, 0(x2) # store 0x8ff9c57a37b6e8d1 in memory
fld f3, 0(x2) # load 0x8ff9c57a37b6e8d1 from memory into f3
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmadd.d f27, f18, f3, f6, dyn # perform operation
fnmadd.d f27, f18, f3, f6, rdn # perform operation
fnmadd.d f27, f18, f3, f6, rmm # perform operation
fnmadd.d f27, f18, f3, f6, rne # perform operation
fnmadd.d f27, f18, f3, f6, rtz # perform operation
fnmadd.d f27, f18, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f18, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xffefffffffffffff)
li x21, 0x2498141f4bb8c622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x87866a8771d44c87 # load x3 with value 0x87866a8771d44c87
sd x3, 0(x2) # store 0x87866a8771d44c87 in memory
fld f12, 0(x2) # load 0x87866a8771d44c87 from memory into f12
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fnmadd.d f21, f16, f12, f18, dyn # perform operation
fnmadd.d f21, f16, f12, f18, rdn # perform operation
fnmadd.d f21, f16, f12, f18, rmm # perform operation
fnmadd.d f21, f16, f12, f18, rne # perform operation
fnmadd.d f21, f16, f12, f18, rtz # perform operation
fnmadd.d f21, f16, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f16, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfffffffffffff)
li x14, 0x62599942a577e3a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0xef02185db16f4939 # load x3 with value 0xef02185db16f4939
sd x3, 0(x2) # store 0xef02185db16f4939 in memory
fld f20, 0(x2) # load 0xef02185db16f4939 from memory into f20
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fnmadd.d f14, f24, f20, f19, dyn # perform operation
fnmadd.d f14, f24, f20, f19, rdn # perform operation
fnmadd.d f14, f24, f20, f19, rmm # perform operation
fnmadd.d f14, f24, f20, f19, rne # perform operation
fnmadd.d f14, f24, f20, f19, rtz # perform operation
fnmadd.d f14, f24, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f24, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x800fffffffffffff)
li x6, 0x69fc625adef54ea4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0xf4d0c9b2f0cfb7ad # load x3 with value 0xf4d0c9b2f0cfb7ad
sd x3, 0(x2) # store 0xf4d0c9b2f0cfb7ad in memory
fld f8, 0(x2) # load 0xf4d0c9b2f0cfb7ad from memory into f8
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmadd.d f6, f5, f8, f17, dyn # perform operation
fnmadd.d f6, f5, f8, f17, rdn # perform operation
fnmadd.d f6, f5, f8, f17, rmm # perform operation
fnmadd.d f6, f5, f8, f17, rne # perform operation
fnmadd.d f6, f5, f8, f17, rtz # perform operation
fnmadd.d f6, f5, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f5, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f5, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f5, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f5, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f5, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000)
li x2, 0xc14f6a22a1ff2041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0xd4a95fff17a593d8 # load x3 with value 0xd4a95fff17a593d8
sd x3, 0(x2) # store 0xd4a95fff17a593d8 in memory
fld f17, 0(x2) # load 0xd4a95fff17a593d8 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fnmadd.d f2, f5, f17, f24, dyn # perform operation
fnmadd.d f2, f5, f17, f24, rdn # perform operation
fnmadd.d f2, f5, f17, f24, rmm # perform operation
fnmadd.d f2, f5, f17, f24, rne # perform operation
fnmadd.d f2, f5, f17, f24, rtz # perform operation
fnmadd.d f2, f5, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f5, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8008000000000000)
li x3, 0x250cbd1d14af3c1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x3da1ceca0ccc30c0 # load x3 with value 0x3da1ceca0ccc30c0
sd x3, 0(x2) # store 0x3da1ceca0ccc30c0 in memory
fld f27, 0(x2) # load 0x3da1ceca0ccc30c0 from memory into f27
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fnmadd.d f3, f6, f27, f9, dyn # perform operation
fnmadd.d f3, f6, f27, f9, rdn # perform operation
fnmadd.d f3, f6, f27, f9, rmm # perform operation
fnmadd.d f3, f6, f27, f9, rne # perform operation
fnmadd.d f3, f6, f27, f9, rtz # perform operation
fnmadd.d f3, f6, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f6, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x1)
li x3, 0x654d34ea69426e1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x6743c31dd46900e1 # load x3 with value 0x6743c31dd46900e1
sd x3, 0(x2) # store 0x6743c31dd46900e1 in memory
fld f19, 0(x2) # load 0x6743c31dd46900e1 from memory into f19
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fnmadd.d f3, f28, f19, f11, dyn # perform operation
fnmadd.d f3, f28, f19, f11, rdn # perform operation
fnmadd.d f3, f28, f19, f11, rmm # perform operation
fnmadd.d f3, f28, f19, f11, rne # perform operation
fnmadd.d f3, f28, f19, f11, rtz # perform operation
fnmadd.d f3, f28, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f19, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000001)
li x19, 0x4f3e7a4067c4fd45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x5aa5f446752d7a17 # load x3 with value 0x5aa5f446752d7a17
sd x3, 0(x2) # store 0x5aa5f446752d7a17 in memory
fld f25, 0(x2) # load 0x5aa5f446752d7a17 from memory into f25
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fnmadd.d f19, f21, f25, f12, dyn # perform operation
fnmadd.d f19, f21, f25, f12, rdn # perform operation
fnmadd.d f19, f21, f25, f12, rmm # perform operation
fnmadd.d f19, f21, f25, f12, rne # perform operation
fnmadd.d f19, f21, f25, f12, rtz # perform operation
fnmadd.d f19, f21, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f21, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000000)
li x9, 0x3d73fc113ea04cd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xa5344a339ba523ed # load x3 with value 0xa5344a339ba523ed
sd x3, 0(x2) # store 0xa5344a339ba523ed in memory
fld f16, 0(x2) # load 0xa5344a339ba523ed from memory into f16
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fnmadd.d f9, f21, f16, f22, dyn # perform operation
fnmadd.d f9, f21, f16, f22, rdn # perform operation
fnmadd.d f9, f21, f16, f22, rmm # perform operation
fnmadd.d f9, f21, f16, f22, rne # perform operation
fnmadd.d f9, f21, f16, f22, rtz # perform operation
fnmadd.d f9, f21, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f21, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f21, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f21, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f21, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f21, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfff0000000000000)
li x25, 0x2d6eff745a9c1511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x438d1cbdd1d0e5d6 # load x3 with value 0x438d1cbdd1d0e5d6
sd x3, 0(x2) # store 0x438d1cbdd1d0e5d6 in memory
fld f26, 0(x2) # load 0x438d1cbdd1d0e5d6 from memory into f26
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fnmadd.d f25, f9, f26, f19, dyn # perform operation
fnmadd.d f25, f9, f26, f19, rdn # perform operation
fnmadd.d f25, f9, f26, f19, rmm # perform operation
fnmadd.d f25, f9, f26, f19, rne # perform operation
fnmadd.d f25, f9, f26, f19, rtz # perform operation
fnmadd.d f25, f9, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f9, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff8000000000000)
li x30, 0xe8091b6e719b8645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x15fd9011983fa6a3 # load x3 with value 0x15fd9011983fa6a3
sd x3, 0(x2) # store 0x15fd9011983fa6a3 in memory
fld f22, 0(x2) # load 0x15fd9011983fa6a3 from memory into f22
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmadd.d f30, f23, f22, f24, dyn # perform operation
fnmadd.d f30, f23, f22, f24, rdn # perform operation
fnmadd.d f30, f23, f22, f24, rmm # perform operation
fnmadd.d f30, f23, f22, f24, rne # perform operation
fnmadd.d f30, f23, f22, f24, rtz # perform operation
fnmadd.d f30, f23, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f23, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f23, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f23, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f23, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f23, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fffffffffffffff)
li x17, 0x861b61d57df9b741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xbe1fa7b8212cbfc6 # load x3 with value 0xbe1fa7b8212cbfc6
sd x3, 0(x2) # store 0xbe1fa7b8212cbfc6 in memory
fld f14, 0(x2) # load 0xbe1fa7b8212cbfc6 from memory into f14
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fnmadd.d f17, f11, f14, f13, dyn # perform operation
fnmadd.d f17, f11, f14, f13, rdn # perform operation
fnmadd.d f17, f11, f14, f13, rmm # perform operation
fnmadd.d f17, f11, f14, f13, rne # perform operation
fnmadd.d f17, f11, f14, f13, rtz # perform operation
fnmadd.d f17, f11, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000001)
li x10, 0x3c8eaedf8efdabc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x39f81bb6a07a3aac # load x3 with value 0x39f81bb6a07a3aac
sd x3, 0(x2) # store 0x39f81bb6a07a3aac in memory
fld f28, 0(x2) # load 0x39f81bb6a07a3aac from memory into f28
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fnmadd.d f10, f19, f28, f9, dyn # perform operation
fnmadd.d f10, f19, f28, f9, rdn # perform operation
fnmadd.d f10, f19, f28, f9, rmm # perform operation
fnmadd.d f10, f19, f28, f9, rne # perform operation
fnmadd.d f10, f19, f28, f9, rtz # perform operation
fnmadd.d f10, f19, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f19, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff7ffffffffffff)
li x1, 0xcba865ceb9ed7e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x250b34de67979275 # load x3 with value 0x250b34de67979275
sd x3, 0(x2) # store 0x250b34de67979275 in memory
fld f23, 0(x2) # load 0x250b34de67979275 from memory into f23
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fnmadd.d f1, f26, f23, f21, dyn # perform operation
fnmadd.d f1, f26, f23, f21, rdn # perform operation
fnmadd.d f1, f26, f23, f21, rmm # perform operation
fnmadd.d f1, f26, f23, f21, rne # perform operation
fnmadd.d f1, f26, f23, f21, rtz # perform operation
fnmadd.d f1, f26, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f26, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f26, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x5a392534a57711ad)
li x10, 0x145fcaa905bc5bca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x4082db4408c461a6 # load x3 with value 0x4082db4408c461a6
sd x3, 0(x2) # store 0x4082db4408c461a6 in memory
fld f8, 0(x2) # load 0x4082db4408c461a6 from memory into f8
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fnmadd.d f10, f17, f8, f4, dyn # perform operation
fnmadd.d f10, f17, f8, f4, rdn # perform operation
fnmadd.d f10, f17, f8, f4, rmm # perform operation
fnmadd.d f10, f17, f8, f4, rne # perform operation
fnmadd.d f10, f17, f8, f4, rtz # perform operation
fnmadd.d f10, f17, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f17, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f17, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f17, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f17, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f17, f8, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xa6e895993737426c)
li x28, 0x6d9fa3af42e8af6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0xb227c1110090c08b # load x3 with value 0xb227c1110090c08b
sd x3, 0(x2) # store 0xb227c1110090c08b in memory
fld f30, 0(x2) # load 0xb227c1110090c08b from memory into f30
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fnmadd.d f28, f12, f30, f8, dyn # perform operation
fnmadd.d f28, f12, f30, f8, rdn # perform operation
fnmadd.d f28, f12, f30, f8, rmm # perform operation
fnmadd.d f28, f12, f30, f8, rne # perform operation
fnmadd.d f28, f12, f30, f8, rtz # perform operation
fnmadd.d f28, f12, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f12, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f12, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x8, 0x4d843176815cad0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x9323b65d338787ad # load x3 with value 0x9323b65d338787ad
sd x3, 0(x2) # store 0x9323b65d338787ad in memory
fld f24, 0(x2) # load 0x9323b65d338787ad from memory into f24
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fnmadd.d f8, f29, f24, f3, dyn # perform operation
fnmadd.d f8, f29, f24, f3, rdn # perform operation
fnmadd.d f8, f29, f24, f3, rmm # perform operation
fnmadd.d f8, f29, f24, f3, rne # perform operation
fnmadd.d f8, f29, f24, f3, rtz # perform operation
fnmadd.d f8, f29, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f29, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f29, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000000)
li x23, 0x3966f9837fb6b69f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x38000cdd80035253 # load x3 with value 0x38000cdd80035253
sd x3, 0(x2) # store 0x38000cdd80035253 in memory
fld f9, 0(x2) # load 0x38000cdd80035253 from memory into f9
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fnmadd.d f23, f14, f9, f29, dyn # perform operation
fnmadd.d f23, f14, f9, f29, rdn # perform operation
fnmadd.d f23, f14, f9, f29, rmm # perform operation
fnmadd.d f23, f14, f9, f29, rne # perform operation
fnmadd.d f23, f14, f9, f29, rtz # perform operation
fnmadd.d f23, f14, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff0000000000000)
li x30, 0x682052bbd003810e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x88251100bf28b339 # load x3 with value 0x88251100bf28b339
sd x3, 0(x2) # store 0x88251100bf28b339 in memory
fld f10, 0(x2) # load 0x88251100bf28b339 from memory into f10
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fnmadd.d f30, f3, f10, f24, dyn # perform operation
fnmadd.d f30, f3, f10, f24, rdn # perform operation
fnmadd.d f30, f3, f10, f24, rmm # perform operation
fnmadd.d f30, f3, f10, f24, rne # perform operation
fnmadd.d f30, f3, f10, f24, rtz # perform operation
fnmadd.d f30, f3, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f3, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff0000000000000)
li x1, 0x1512ca8850cadf7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0xbec405e5049ad615 # load x3 with value 0xbec405e5049ad615
sd x3, 0(x2) # store 0xbec405e5049ad615 in memory
fld f22, 0(x2) # load 0xbec405e5049ad615 from memory into f22
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fnmadd.d f1, f27, f22, f30, dyn # perform operation
fnmadd.d f1, f27, f22, f30, rdn # perform operation
fnmadd.d f1, f27, f22, f30, rmm # perform operation
fnmadd.d f1, f27, f22, f30, rne # perform operation
fnmadd.d f1, f27, f22, f30, rtz # perform operation
fnmadd.d f1, f27, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f27, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f27, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff8000000000000)
li x4, 0x807a8b9a1fdf5394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xa9d173d74c547ee2 # load x3 with value 0xa9d173d74c547ee2
sd x3, 0(x2) # store 0xa9d173d74c547ee2 in memory
fld f13, 0(x2) # load 0xa9d173d74c547ee2 from memory into f13
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmadd.d f4, f2, f13, f1, dyn # perform operation
fnmadd.d f4, f2, f13, f1, rdn # perform operation
fnmadd.d f4, f2, f13, f1, rmm # perform operation
fnmadd.d f4, f2, f13, f1, rne # perform operation
fnmadd.d f4, f2, f13, f1, rtz # perform operation
fnmadd.d f4, f2, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f2, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff8000000000000)
li x29, 0xc7fd363278a29c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0xbd193e8355756731 # load x3 with value 0xbd193e8355756731
sd x3, 0(x2) # store 0xbd193e8355756731 in memory
fld f7, 0(x2) # load 0xbd193e8355756731 from memory into f7
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fnmadd.d f29, f23, f7, f11, dyn # perform operation
fnmadd.d f29, f23, f7, f11, rdn # perform operation
fnmadd.d f29, f23, f7, f11, rmm # perform operation
fnmadd.d f29, f23, f7, f11, rne # perform operation
fnmadd.d f29, f23, f7, f11, rtz # perform operation
fnmadd.d f29, f23, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f23, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f23, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f23, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f23, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f23, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000000000000000)
li x18, 0x514347087ecb9a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x99dc2d70d646f8b5 # load x3 with value 0x99dc2d70d646f8b5
sd x3, 0(x2) # store 0x99dc2d70d646f8b5 in memory
fld f23, 0(x2) # load 0x99dc2d70d646f8b5 from memory into f23
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fnmadd.d f18, f27, f23, f8, dyn # perform operation
fnmadd.d f18, f27, f23, f8, rdn # perform operation
fnmadd.d f18, f27, f23, f8, rmm # perform operation
fnmadd.d f18, f27, f23, f8, rne # perform operation
fnmadd.d f18, f27, f23, f8, rtz # perform operation
fnmadd.d f18, f27, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f27, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000000000000000)
li x2, 0x17ea48c6e947dd2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xb5713014b383807c # load x3 with value 0xb5713014b383807c
sd x3, 0(x2) # store 0xb5713014b383807c in memory
fld f4, 0(x2) # load 0xb5713014b383807c from memory into f4
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fnmadd.d f2, f19, f4, f28, dyn # perform operation
fnmadd.d f2, f19, f4, f28, rdn # perform operation
fnmadd.d f2, f19, f4, f28, rmm # perform operation
fnmadd.d f2, f19, f4, f28, rne # perform operation
fnmadd.d f2, f19, f4, f28, rtz # perform operation
fnmadd.d f2, f19, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x10000000000000)
li x5, 0x5fe3da998e792d2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x36b5cf9797bddd2c # load x3 with value 0x36b5cf9797bddd2c
sd x3, 0(x2) # store 0x36b5cf9797bddd2c in memory
fld f1, 0(x2) # load 0x36b5cf9797bddd2c from memory into f1
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fnmadd.d f5, f12, f1, f20, dyn # perform operation
fnmadd.d f5, f12, f1, f20, rdn # perform operation
fnmadd.d f5, f12, f1, f20, rmm # perform operation
fnmadd.d f5, f12, f1, f20, rne # perform operation
fnmadd.d f5, f12, f1, f20, rtz # perform operation
fnmadd.d f5, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f12, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8010000000000000)
li x4, 0x9833e307162c0e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x1ec955d70305c1b9 # load x3 with value 0x1ec955d70305c1b9
sd x3, 0(x2) # store 0x1ec955d70305c1b9 in memory
fld f1, 0(x2) # load 0x1ec955d70305c1b9 from memory into f1
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmadd.d f4, f6, f1, f7, dyn # perform operation
fnmadd.d f4, f6, f1, f7, rdn # perform operation
fnmadd.d f4, f6, f1, f7, rmm # perform operation
fnmadd.d f4, f6, f1, f7, rne # perform operation
fnmadd.d f4, f6, f1, f7, rtz # perform operation
fnmadd.d f4, f6, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f6, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fefffffffffffff)
li x13, 0x644e8a5512000291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0xa576933042911718 # load x3 with value 0xa576933042911718
sd x3, 0(x2) # store 0xa576933042911718 in memory
fld f22, 0(x2) # load 0xa576933042911718 from memory into f22
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fnmadd.d f13, f25, f22, f17, dyn # perform operation
fnmadd.d f13, f25, f22, f17, rdn # perform operation
fnmadd.d f13, f25, f22, f17, rmm # perform operation
fnmadd.d f13, f25, f22, f17, rne # perform operation
fnmadd.d f13, f25, f22, f17, rtz # perform operation
fnmadd.d f13, f25, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f25, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f25, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffefffffffffffff)
li x28, 0xf218795420a7d19e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x1275f66d98307a4f # load x3 with value 0x1275f66d98307a4f
sd x3, 0(x2) # store 0x1275f66d98307a4f in memory
fld f8, 0(x2) # load 0x1275f66d98307a4f from memory into f8
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fnmadd.d f28, f25, f8, f11, dyn # perform operation
fnmadd.d f28, f25, f8, f11, rdn # perform operation
fnmadd.d f28, f25, f8, f11, rmm # perform operation
fnmadd.d f28, f25, f8, f11, rne # perform operation
fnmadd.d f28, f25, f8, f11, rtz # perform operation
fnmadd.d f28, f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfffffffffffff)
li x8, 0x6c8c46deea318ce1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x5371b0f19fcd058c # load x3 with value 0x5371b0f19fcd058c
sd x3, 0(x2) # store 0x5371b0f19fcd058c in memory
fld f17, 0(x2) # load 0x5371b0f19fcd058c from memory into f17
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fnmadd.d f8, f26, f17, f6, dyn # perform operation
fnmadd.d f8, f26, f17, f6, rdn # perform operation
fnmadd.d f8, f26, f17, f6, rmm # perform operation
fnmadd.d f8, f26, f17, f6, rne # perform operation
fnmadd.d f8, f26, f17, f6, rtz # perform operation
fnmadd.d f8, f26, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f26, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800fffffffffffff)
li x20, 0xa60857cd0695b84d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xe3797b8042728e89 # load x3 with value 0xe3797b8042728e89
sd x3, 0(x2) # store 0xe3797b8042728e89 in memory
fld f27, 0(x2) # load 0xe3797b8042728e89 from memory into f27
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fnmadd.d f20, f12, f27, f7, dyn # perform operation
fnmadd.d f20, f12, f27, f7, rdn # perform operation
fnmadd.d f20, f12, f27, f7, rmm # perform operation
fnmadd.d f20, f12, f27, f7, rne # perform operation
fnmadd.d f20, f12, f27, f7, rtz # perform operation
fnmadd.d f20, f12, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f12, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000)
li x8, 0x2539c8bfd63725e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x061eecd8f54d95be # load x3 with value 0x061eecd8f54d95be
sd x3, 0(x2) # store 0x061eecd8f54d95be in memory
fld f7, 0(x2) # load 0x061eecd8f54d95be from memory into f7
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fnmadd.d f8, f10, f7, f24, dyn # perform operation
fnmadd.d f8, f10, f7, f24, rdn # perform operation
fnmadd.d f8, f10, f7, f24, rmm # perform operation
fnmadd.d f8, f10, f7, f24, rne # perform operation
fnmadd.d f8, f10, f7, f24, rtz # perform operation
fnmadd.d f8, f10, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f10, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f10, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f10, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f10, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f10, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8008000000000000)
li x26, 0x6b7f1a70d1fa659f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x93088748bdb92937 # load x3 with value 0x93088748bdb92937
sd x3, 0(x2) # store 0x93088748bdb92937 in memory
fld f2, 0(x2) # load 0x93088748bdb92937 from memory into f2
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fnmadd.d f26, f19, f2, f10, dyn # perform operation
fnmadd.d f26, f19, f2, f10, rdn # perform operation
fnmadd.d f26, f19, f2, f10, rmm # perform operation
fnmadd.d f26, f19, f2, f10, rne # perform operation
fnmadd.d f26, f19, f2, f10, rtz # perform operation
fnmadd.d f26, f19, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f19, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x25, 0x0d62fe83fe06e9ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x93d2f34fd5f943fe # load x3 with value 0x93d2f34fd5f943fe
sd x3, 0(x2) # store 0x93d2f34fd5f943fe in memory
fld f20, 0(x2) # load 0x93d2f34fd5f943fe from memory into f20
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fnmadd.d f25, f13, f20, f9, dyn # perform operation
fnmadd.d f25, f13, f20, f9, rdn # perform operation
fnmadd.d f25, f13, f20, f9, rmm # perform operation
fnmadd.d f25, f13, f20, f9, rne # perform operation
fnmadd.d f25, f13, f20, f9, rtz # perform operation
fnmadd.d f25, f13, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f13, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f13, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f13, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f13, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f13, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000001)
li x29, 0x40b9d0f90e7665f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x5b2fa1ba919ac80a # load x3 with value 0x5b2fa1ba919ac80a
sd x3, 0(x2) # store 0x5b2fa1ba919ac80a in memory
fld f14, 0(x2) # load 0x5b2fa1ba919ac80a from memory into f14
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmadd.d f29, f7, f14, f6, dyn # perform operation
fnmadd.d f29, f7, f14, f6, rdn # perform operation
fnmadd.d f29, f7, f14, f6, rmm # perform operation
fnmadd.d f29, f7, f14, f6, rne # perform operation
fnmadd.d f29, f7, f14, f6, rtz # perform operation
fnmadd.d f29, f7, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000000)
li x11, 0xe125e2e3c113c8ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x1106ef0d60cf82bf # load x3 with value 0x1106ef0d60cf82bf
sd x3, 0(x2) # store 0x1106ef0d60cf82bf in memory
fld f19, 0(x2) # load 0x1106ef0d60cf82bf from memory into f19
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
fnmadd.d f11, f31, f19, f12, dyn # perform operation
fnmadd.d f11, f31, f19, f12, rdn # perform operation
fnmadd.d f11, f31, f19, f12, rmm # perform operation
fnmadd.d f11, f31, f19, f12, rne # perform operation
fnmadd.d f11, f31, f19, f12, rtz # perform operation
fnmadd.d f11, f31, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f31, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f31, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f31, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f31, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f31, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfff0000000000000)
li x22, 0x0fb63c5615b1b75e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0xa19b5198e5d8a9f2 # load x3 with value 0xa19b5198e5d8a9f2
sd x3, 0(x2) # store 0xa19b5198e5d8a9f2 in memory
fld f21, 0(x2) # load 0xa19b5198e5d8a9f2 from memory into f21
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fnmadd.d f22, f9, f21, f7, dyn # perform operation
fnmadd.d f22, f9, f21, f7, rdn # perform operation
fnmadd.d f22, f9, f21, f7, rmm # perform operation
fnmadd.d f22, f9, f21, f7, rne # perform operation
fnmadd.d f22, f9, f21, f7, rtz # perform operation
fnmadd.d f22, f9, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f9, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff8000000000000)
li x6, 0x596c895715355375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0xcafd44a19200b1e5 # load x3 with value 0xcafd44a19200b1e5
sd x3, 0(x2) # store 0xcafd44a19200b1e5 in memory
fld f30, 0(x2) # load 0xcafd44a19200b1e5 from memory into f30
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fnmadd.d f6, f3, f30, f23, dyn # perform operation
fnmadd.d f6, f3, f30, f23, rdn # perform operation
fnmadd.d f6, f3, f30, f23, rmm # perform operation
fnmadd.d f6, f3, f30, f23, rne # perform operation
fnmadd.d f6, f3, f30, f23, rtz # perform operation
fnmadd.d f6, f3, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f3, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffffffffffff)
li x29, 0x426f8f513b1dc133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xe2a203269950c0b9 # load x3 with value 0xe2a203269950c0b9
sd x3, 0(x2) # store 0xe2a203269950c0b9 in memory
fld f21, 0(x2) # load 0xe2a203269950c0b9 from memory into f21
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmadd.d f29, f31, f21, f26, dyn # perform operation
fnmadd.d f29, f31, f21, f26, rdn # perform operation
fnmadd.d f29, f31, f21, f26, rmm # perform operation
fnmadd.d f29, f31, f21, f26, rne # perform operation
fnmadd.d f29, f31, f21, f26, rtz # perform operation
fnmadd.d f29, f31, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f31, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f31, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000001)
li x28, 0x53e4298c01f6d2a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0xd94563c948f546ca # load x3 with value 0xd94563c948f546ca
sd x3, 0(x2) # store 0xd94563c948f546ca in memory
fld f11, 0(x2) # load 0xd94563c948f546ca from memory into f11
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fnmadd.d f28, f30, f11, f18, dyn # perform operation
fnmadd.d f28, f30, f11, f18, rdn # perform operation
fnmadd.d f28, f30, f11, f18, rmm # perform operation
fnmadd.d f28, f30, f11, f18, rne # perform operation
fnmadd.d f28, f30, f11, f18, rtz # perform operation
fnmadd.d f28, f30, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f30, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff7ffffffffffff)
li x11, 0xd70f67b98094cf5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0xf6e67454d8cf3cce # load x3 with value 0xf6e67454d8cf3cce
sd x3, 0(x2) # store 0xf6e67454d8cf3cce in memory
fld f8, 0(x2) # load 0xf6e67454d8cf3cce from memory into f8
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fnmadd.d f11, f20, f8, f17, dyn # perform operation
fnmadd.d f11, f20, f8, f17, rdn # perform operation
fnmadd.d f11, f20, f8, f17, rmm # perform operation
fnmadd.d f11, f20, f8, f17, rne # perform operation
fnmadd.d f11, f20, f8, f17, rtz # perform operation
fnmadd.d f11, f20, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f20, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f20, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f20, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f20, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f20, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x5a392534a57711ad)
li x27, 0x8e3d33a9fa103db6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x8be246daa1f6635c # load x3 with value 0x8be246daa1f6635c
sd x3, 0(x2) # store 0x8be246daa1f6635c in memory
fld f1, 0(x2) # load 0x8be246daa1f6635c from memory into f1
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fnmadd.d f27, f17, f1, f16, dyn # perform operation
fnmadd.d f27, f17, f1, f16, rdn # perform operation
fnmadd.d f27, f17, f1, f16, rmm # perform operation
fnmadd.d f27, f17, f1, f16, rne # perform operation
fnmadd.d f27, f17, f1, f16, rtz # perform operation
fnmadd.d f27, f17, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f17, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f17, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xa6e895993737426c)
li x16, 0x880a084b84a4e8ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x17cdc44ea49bbe40 # load x3 with value 0x17cdc44ea49bbe40
sd x3, 0(x2) # store 0x17cdc44ea49bbe40 in memory
fld f1, 0(x2) # load 0x17cdc44ea49bbe40 from memory into f1
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fnmadd.d f16, f9, f1, f28, dyn # perform operation
fnmadd.d f16, f9, f1, f28, rdn # perform operation
fnmadd.d f16, f9, f1, f28, rmm # perform operation
fnmadd.d f16, f9, f1, f28, rne # perform operation
fnmadd.d f16, f9, f1, f28, rtz # perform operation
fnmadd.d f16, f9, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f9, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x0)
li x12, 0x9243865026dab945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xdb8eab6a413396f2 # load x3 with value 0xdb8eab6a413396f2
sd x3, 0(x2) # store 0xdb8eab6a413396f2 in memory
fld f2, 0(x2) # load 0xdb8eab6a413396f2 from memory into f2
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fnmadd.d f12, f18, f2, f8, dyn # perform operation
fnmadd.d f12, f18, f2, f8, rdn # perform operation
fnmadd.d f12, f18, f2, f8, rmm # perform operation
fnmadd.d f12, f18, f2, f8, rne # perform operation
fnmadd.d f12, f18, f2, f8, rtz # perform operation
fnmadd.d f12, f18, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000000)
li x7, 0x7348608df96cc1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x0723f285fe494748 # load x3 with value 0x0723f285fe494748
sd x3, 0(x2) # store 0x0723f285fe494748 in memory
fld f20, 0(x2) # load 0x0723f285fe494748 from memory into f20
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fnmadd.d f7, f30, f20, f12, dyn # perform operation
fnmadd.d f7, f30, f20, f12, rdn # perform operation
fnmadd.d f7, f30, f20, f12, rmm # perform operation
fnmadd.d f7, f30, f20, f12, rne # perform operation
fnmadd.d f7, f30, f20, f12, rtz # perform operation
fnmadd.d f7, f30, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f30, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f30, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f30, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f30, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f30, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff0000000000000)
li x30, 0x6fb9b524a9a0a242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x3b3f56ce0a185014 # load x3 with value 0x3b3f56ce0a185014
sd x3, 0(x2) # store 0x3b3f56ce0a185014 in memory
fld f13, 0(x2) # load 0x3b3f56ce0a185014 from memory into f13
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fnmadd.d f30, f18, f13, f16, dyn # perform operation
fnmadd.d f30, f18, f13, f16, rdn # perform operation
fnmadd.d f30, f18, f13, f16, rmm # perform operation
fnmadd.d f30, f18, f13, f16, rne # perform operation
fnmadd.d f30, f18, f13, f16, rtz # perform operation
fnmadd.d f30, f18, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f18, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff0000000000000)
li x1, 0xe759a7f7268a1ed4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x200f402207337861 # load x3 with value 0x200f402207337861
sd x3, 0(x2) # store 0x200f402207337861 in memory
fld f27, 0(x2) # load 0x200f402207337861 from memory into f27
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fnmadd.d f1, f3, f27, f19, dyn # perform operation
fnmadd.d f1, f3, f27, f19, rdn # perform operation
fnmadd.d f1, f3, f27, f19, rmm # perform operation
fnmadd.d f1, f3, f27, f19, rne # perform operation
fnmadd.d f1, f3, f27, f19, rtz # perform operation
fnmadd.d f1, f3, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f3, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f3, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f3, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f3, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f3, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff8000000000000)
li x4, 0xc489a25ae31814d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x8cc8a218bbcb2466 # load x3 with value 0x8cc8a218bbcb2466
sd x3, 0(x2) # store 0x8cc8a218bbcb2466 in memory
fld f11, 0(x2) # load 0x8cc8a218bbcb2466 from memory into f11
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmadd.d f4, f2, f11, f1, dyn # perform operation
fnmadd.d f4, f2, f11, f1, rdn # perform operation
fnmadd.d f4, f2, f11, f1, rmm # perform operation
fnmadd.d f4, f2, f11, f1, rne # perform operation
fnmadd.d f4, f2, f11, f1, rtz # perform operation
fnmadd.d f4, f2, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f2, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f2, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f2, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f2, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f2, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff8000000000000)
li x19, 0x340ad3311146d193 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x2fde30993b0ca8aa # load x3 with value 0x2fde30993b0ca8aa
sd x3, 0(x2) # store 0x2fde30993b0ca8aa in memory
fld f30, 0(x2) # load 0x2fde30993b0ca8aa from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fnmadd.d f19, f20, f30, f10, dyn # perform operation
fnmadd.d f19, f20, f30, f10, rdn # perform operation
fnmadd.d f19, f20, f30, f10, rmm # perform operation
fnmadd.d f19, f20, f30, f10, rne # perform operation
fnmadd.d f19, f20, f30, f10, rtz # perform operation
fnmadd.d f19, f20, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f20, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x4000000000000000)
li x19, 0x56d203aea5c677eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0xf82c4b509968019f # load x3 with value 0xf82c4b509968019f
sd x3, 0(x2) # store 0xf82c4b509968019f in memory
fld f14, 0(x2) # load 0xf82c4b509968019f from memory into f14
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fnmadd.d f19, f1, f14, f24, dyn # perform operation
fnmadd.d f19, f1, f14, f24, rdn # perform operation
fnmadd.d f19, f1, f14, f24, rmm # perform operation
fnmadd.d f19, f1, f14, f24, rne # perform operation
fnmadd.d f19, f1, f14, f24, rtz # perform operation
fnmadd.d f19, f1, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f1, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xc000000000000000)
li x18, 0xa4f103311bccfabf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0xe21513b79277f328 # load x3 with value 0xe21513b79277f328
sd x3, 0(x2) # store 0xe21513b79277f328 in memory
fld f20, 0(x2) # load 0xe21513b79277f328 from memory into f20
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fnmadd.d f18, f11, f20, f23, dyn # perform operation
fnmadd.d f18, f11, f20, f23, rdn # perform operation
fnmadd.d f18, f11, f20, f23, rmm # perform operation
fnmadd.d f18, f11, f20, f23, rne # perform operation
fnmadd.d f18, f11, f20, f23, rtz # perform operation
fnmadd.d f18, f11, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f11, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f11, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x10000000000000)
li x31, 0x9a52e3b7047befd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0x7097e5036ae4c1ee # load x3 with value 0x7097e5036ae4c1ee
sd x3, 0(x2) # store 0x7097e5036ae4c1ee in memory
fld f18, 0(x2) # load 0x7097e5036ae4c1ee from memory into f18
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fnmadd.d f31, f3, f18, f21, dyn # perform operation
fnmadd.d f31, f3, f18, f21, rdn # perform operation
fnmadd.d f31, f3, f18, f21, rmm # perform operation
fnmadd.d f31, f3, f18, f21, rne # perform operation
fnmadd.d f31, f3, f18, f21, rtz # perform operation
fnmadd.d f31, f3, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f3, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f3, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8010000000000000)
li x14, 0x8f92b19fecf59622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x8a4e9524f9c4939b # load x3 with value 0x8a4e9524f9c4939b
sd x3, 0(x2) # store 0x8a4e9524f9c4939b in memory
fld f19, 0(x2) # load 0x8a4e9524f9c4939b from memory into f19
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
fnmadd.d f14, f25, f19, f1, dyn # perform operation
fnmadd.d f14, f25, f19, f1, rdn # perform operation
fnmadd.d f14, f25, f19, f1, rmm # perform operation
fnmadd.d f14, f25, f19, f1, rne # perform operation
fnmadd.d f14, f25, f19, f1, rtz # perform operation
fnmadd.d f14, f25, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f25, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f25, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fefffffffffffff)
li x9, 0x59badbcba29f33bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0xb93cf721c384057c # load x3 with value 0xb93cf721c384057c
sd x3, 0(x2) # store 0xb93cf721c384057c in memory
fld f16, 0(x2) # load 0xb93cf721c384057c from memory into f16
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmadd.d f9, f24, f16, f14, dyn # perform operation
fnmadd.d f9, f24, f16, f14, rdn # perform operation
fnmadd.d f9, f24, f16, f14, rmm # perform operation
fnmadd.d f9, f24, f16, f14, rne # perform operation
fnmadd.d f9, f24, f16, f14, rtz # perform operation
fnmadd.d f9, f24, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f24, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xffefffffffffffff)
li x4, 0x7314d84c2aba5cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0xc15795601c53a67f # load x3 with value 0xc15795601c53a67f
sd x3, 0(x2) # store 0xc15795601c53a67f in memory
fld f1, 0(x2) # load 0xc15795601c53a67f from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fnmadd.d f4, f3, f1, f14, dyn # perform operation
fnmadd.d f4, f3, f1, f14, rdn # perform operation
fnmadd.d f4, f3, f1, f14, rmm # perform operation
fnmadd.d f4, f3, f1, f14, rne # perform operation
fnmadd.d f4, f3, f1, f14, rtz # perform operation
fnmadd.d f4, f3, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f3, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f3, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f3, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f3, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f3, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfffffffffffff)
li x28, 0x31ce5956964d81e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xda36438f74de0e5e # load x3 with value 0xda36438f74de0e5e
sd x3, 0(x2) # store 0xda36438f74de0e5e in memory
fld f16, 0(x2) # load 0xda36438f74de0e5e from memory into f16
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmadd.d f28, f30, f16, f1, dyn # perform operation
fnmadd.d f28, f30, f16, f1, rdn # perform operation
fnmadd.d f28, f30, f16, f1, rmm # perform operation
fnmadd.d f28, f30, f16, f1, rne # perform operation
fnmadd.d f28, f30, f16, f1, rtz # perform operation
fnmadd.d f28, f30, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f30, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x800fffffffffffff)
li x29, 0xe5cf56d6455d0715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0xda927cb65012b040 # load x3 with value 0xda927cb65012b040
sd x3, 0(x2) # store 0xda927cb65012b040 in memory
fld f22, 0(x2) # load 0xda927cb65012b040 from memory into f22
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fnmadd.d f29, f26, f22, f4, dyn # perform operation
fnmadd.d f29, f26, f22, f4, rdn # perform operation
fnmadd.d f29, f26, f22, f4, rmm # perform operation
fnmadd.d f29, f26, f22, f4, rne # perform operation
fnmadd.d f29, f26, f22, f4, rtz # perform operation
fnmadd.d f29, f26, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000)
li x28, 0x3a64975d0cf7de2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0xc9ab5a2e748a7e80 # load x3 with value 0xc9ab5a2e748a7e80
sd x3, 0(x2) # store 0xc9ab5a2e748a7e80 in memory
fld f5, 0(x2) # load 0xc9ab5a2e748a7e80 from memory into f5
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fnmadd.d f28, f30, f5, f27, dyn # perform operation
fnmadd.d f28, f30, f5, f27, rdn # perform operation
fnmadd.d f28, f30, f5, f27, rmm # perform operation
fnmadd.d f28, f30, f5, f27, rne # perform operation
fnmadd.d f28, f30, f5, f27, rtz # perform operation
fnmadd.d f28, f30, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f30, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f30, f5, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8008000000000000)
li x30, 0x4325c84aa91eca05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x37a656c5062b818a # load x3 with value 0x37a656c5062b818a
sd x3, 0(x2) # store 0x37a656c5062b818a in memory
fld f28, 0(x2) # load 0x37a656c5062b818a from memory into f28
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fnmadd.d f30, f22, f28, f20, dyn # perform operation
fnmadd.d f30, f22, f28, f20, rdn # perform operation
fnmadd.d f30, f22, f28, f20, rmm # perform operation
fnmadd.d f30, f22, f28, f20, rne # perform operation
fnmadd.d f30, f22, f28, f20, rtz # perform operation
fnmadd.d f30, f22, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f22, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x1)
li x23, 0x11568e454e037b5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x51aab9bc0557444d # load x3 with value 0x51aab9bc0557444d
sd x3, 0(x2) # store 0x51aab9bc0557444d in memory
fld f29, 0(x2) # load 0x51aab9bc0557444d from memory into f29
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fnmadd.d f23, f4, f29, f20, dyn # perform operation
fnmadd.d f23, f4, f29, f20, rdn # perform operation
fnmadd.d f23, f4, f29, f20, rmm # perform operation
fnmadd.d f23, f4, f29, f20, rne # perform operation
fnmadd.d f23, f4, f29, f20, rtz # perform operation
fnmadd.d f23, f4, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f4, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f4, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f4, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f4, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f4, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000001)
li x16, 0x6229a06606b29c86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xdf486280f2a84515 # load x3 with value 0xdf486280f2a84515
sd x3, 0(x2) # store 0xdf486280f2a84515 in memory
fld f22, 0(x2) # load 0xdf486280f2a84515 from memory into f22
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmadd.d f16, f25, f22, f4, dyn # perform operation
fnmadd.d f16, f25, f22, f4, rdn # perform operation
fnmadd.d f16, f25, f22, f4, rmm # perform operation
fnmadd.d f16, f25, f22, f4, rne # perform operation
fnmadd.d f16, f25, f22, f4, rtz # perform operation
fnmadd.d f16, f25, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f25, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f25, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f25, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f25, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f25, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000000)
li x15, 0xefc210b190092052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0xa1ef81dfe31ca330 # load x3 with value 0xa1ef81dfe31ca330
sd x3, 0(x2) # store 0xa1ef81dfe31ca330 in memory
fld f13, 0(x2) # load 0xa1ef81dfe31ca330 from memory into f13
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
fnmadd.d f15, f8, f13, f12, dyn # perform operation
fnmadd.d f15, f8, f13, f12, rdn # perform operation
fnmadd.d f15, f8, f13, f12, rmm # perform operation
fnmadd.d f15, f8, f13, f12, rne # perform operation
fnmadd.d f15, f8, f13, f12, rtz # perform operation
fnmadd.d f15, f8, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f8, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f8, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfff0000000000000)
li x19, 0xf24d474c5bd0b8b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x0d1d833fcf97f2d3 # load x3 with value 0x0d1d833fcf97f2d3
sd x3, 0(x2) # store 0x0d1d833fcf97f2d3 in memory
fld f11, 0(x2) # load 0x0d1d833fcf97f2d3 from memory into f11
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fnmadd.d f19, f21, f11, f23, dyn # perform operation
fnmadd.d f19, f21, f11, f23, rdn # perform operation
fnmadd.d f19, f21, f11, f23, rmm # perform operation
fnmadd.d f19, f21, f11, f23, rne # perform operation
fnmadd.d f19, f21, f11, f23, rtz # perform operation
fnmadd.d f19, f21, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f21, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f21, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f21, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f21, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f21, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff8000000000000)
li x11, 0x484ec2bb0c953603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0xf2f55f9e7abb28db # load x3 with value 0xf2f55f9e7abb28db
sd x3, 0(x2) # store 0xf2f55f9e7abb28db in memory
fld f14, 0(x2) # load 0xf2f55f9e7abb28db from memory into f14
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fnmadd.d f11, f1, f14, f13, dyn # perform operation
fnmadd.d f11, f1, f14, f13, rdn # perform operation
fnmadd.d f11, f1, f14, f13, rmm # perform operation
fnmadd.d f11, f1, f14, f13, rne # perform operation
fnmadd.d f11, f1, f14, f13, rtz # perform operation
fnmadd.d f11, f1, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f1, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f1, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f1, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f1, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f1, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fffffffffffffff)
li x20, 0x5b2c0dccec36fe49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0x077c39551d42871f # load x3 with value 0x077c39551d42871f
sd x3, 0(x2) # store 0x077c39551d42871f in memory
fld f28, 0(x2) # load 0x077c39551d42871f from memory into f28
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fnmadd.d f20, f6, f28, f10, dyn # perform operation
fnmadd.d f20, f6, f28, f10, rdn # perform operation
fnmadd.d f20, f6, f28, f10, rmm # perform operation
fnmadd.d f20, f6, f28, f10, rne # perform operation
fnmadd.d f20, f6, f28, f10, rtz # perform operation
fnmadd.d f20, f6, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f6, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000001)
li x10, 0xd1fb444e5622ef15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0xd977ca185506cf74 # load x3 with value 0xd977ca185506cf74
sd x3, 0(x2) # store 0xd977ca185506cf74 in memory
fld f7, 0(x2) # load 0xd977ca185506cf74 from memory into f7
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fnmadd.d f10, f27, f7, f13, dyn # perform operation
fnmadd.d f10, f27, f7, f13, rdn # perform operation
fnmadd.d f10, f27, f7, f13, rmm # perform operation
fnmadd.d f10, f27, f7, f13, rne # perform operation
fnmadd.d f10, f27, f7, f13, rtz # perform operation
fnmadd.d f10, f27, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f27, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff7ffffffffffff)
li x6, 0x0958a1e4f661e6ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xa70834771546ea98 # load x3 with value 0xa70834771546ea98
sd x3, 0(x2) # store 0xa70834771546ea98 in memory
fld f14, 0(x2) # load 0xa70834771546ea98 from memory into f14
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fnmadd.d f6, f9, f14, f23, dyn # perform operation
fnmadd.d f6, f9, f14, f23, rdn # perform operation
fnmadd.d f6, f9, f14, f23, rmm # perform operation
fnmadd.d f6, f9, f14, f23, rne # perform operation
fnmadd.d f6, f9, f14, f23, rtz # perform operation
fnmadd.d f6, f9, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f9, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x5a392534a57711ad)
li x21, 0xc62edcc7f1e2ab8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x9d0a0f0d81ac4d78 # load x3 with value 0x9d0a0f0d81ac4d78
sd x3, 0(x2) # store 0x9d0a0f0d81ac4d78 in memory
fld f28, 0(x2) # load 0x9d0a0f0d81ac4d78 from memory into f28
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fnmadd.d f21, f8, f28, f20, dyn # perform operation
fnmadd.d f21, f8, f28, f20, rdn # perform operation
fnmadd.d f21, f8, f28, f20, rmm # perform operation
fnmadd.d f21, f8, f28, f20, rne # perform operation
fnmadd.d f21, f8, f28, f20, rtz # perform operation
fnmadd.d f21, f8, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xa6e895993737426c)
li x11, 0xe5d0d2e357b3f112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x2364309a11717701 # load x3 with value 0x2364309a11717701
sd x3, 0(x2) # store 0x2364309a11717701 in memory
fld f16, 0(x2) # load 0x2364309a11717701 from memory into f16
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fnmadd.d f11, f4, f16, f30, dyn # perform operation
fnmadd.d f11, f4, f16, f30, rdn # perform operation
fnmadd.d f11, f4, f16, f30, rmm # perform operation
fnmadd.d f11, f4, f16, f30, rne # perform operation
fnmadd.d f11, f4, f16, f30, rtz # perform operation
fnmadd.d f11, f4, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f4, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f4, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f4, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f4, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f4, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x0)
li x28, 0xbc7f57a802d5763f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0xe71521709521b4d0 # load x3 with value 0xe71521709521b4d0
sd x3, 0(x2) # store 0xe71521709521b4d0 in memory
fld f21, 0(x2) # load 0xe71521709521b4d0 from memory into f21
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fnmadd.d f28, f12, f21, f15, dyn # perform operation
fnmadd.d f28, f12, f21, f15, rdn # perform operation
fnmadd.d f28, f12, f21, f15, rmm # perform operation
fnmadd.d f28, f12, f21, f15, rne # perform operation
fnmadd.d f28, f12, f21, f15, rtz # perform operation
fnmadd.d f28, f12, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f12, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000000)
li x19, 0x15d84ae7a87ca72e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
li x3, 0xacdff83e56c982d7 # load x3 with value 0xacdff83e56c982d7
sd x3, 0(x2) # store 0xacdff83e56c982d7 in memory
fld f5, 0(x2) # load 0xacdff83e56c982d7 from memory into f5
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fnmadd.d f19, f22, f5, f13, dyn # perform operation
fnmadd.d f19, f22, f5, f13, rdn # perform operation
fnmadd.d f19, f22, f5, f13, rmm # perform operation
fnmadd.d f19, f22, f5, f13, rne # perform operation
fnmadd.d f19, f22, f5, f13, rtz # perform operation
fnmadd.d f19, f22, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f22, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f22, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff0000000000000)
li x12, 0x5cbba3eb0e05c293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xb94f281402f00b9f # load x3 with value 0xb94f281402f00b9f
sd x3, 0(x2) # store 0xb94f281402f00b9f in memory
fld f25, 0(x2) # load 0xb94f281402f00b9f from memory into f25
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fnmadd.d f12, f15, f25, f11, dyn # perform operation
fnmadd.d f12, f15, f25, f11, rdn # perform operation
fnmadd.d f12, f15, f25, f11, rmm # perform operation
fnmadd.d f12, f15, f25, f11, rne # perform operation
fnmadd.d f12, f15, f25, f11, rtz # perform operation
fnmadd.d f12, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f15, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff0000000000000)
li x29, 0x17fa751cbb8bca44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x0d3b73f7b1d859c9 # load x3 with value 0x0d3b73f7b1d859c9
sd x3, 0(x2) # store 0x0d3b73f7b1d859c9 in memory
fld f7, 0(x2) # load 0x0d3b73f7b1d859c9 from memory into f7
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fnmadd.d f29, f24, f7, f8, dyn # perform operation
fnmadd.d f29, f24, f7, f8, rdn # perform operation
fnmadd.d f29, f24, f7, f8, rmm # perform operation
fnmadd.d f29, f24, f7, f8, rne # perform operation
fnmadd.d f29, f24, f7, f8, rtz # perform operation
fnmadd.d f29, f24, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f24, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff8000000000000)
li x15, 0x4f12b0d6fa9a42f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xf51c80f262468133 # load x3 with value 0xf51c80f262468133
sd x3, 0(x2) # store 0xf51c80f262468133 in memory
fld f8, 0(x2) # load 0xf51c80f262468133 from memory into f8
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmadd.d f15, f30, f8, f20, dyn # perform operation
fnmadd.d f15, f30, f8, f20, rdn # perform operation
fnmadd.d f15, f30, f8, f20, rmm # perform operation
fnmadd.d f15, f30, f8, f20, rne # perform operation
fnmadd.d f15, f30, f8, f20, rtz # perform operation
fnmadd.d f15, f30, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff8000000000000)
li x16, 0x4a56de021644e178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x3dda723dc594562e # load x3 with value 0x3dda723dc594562e
sd x3, 0(x2) # store 0x3dda723dc594562e in memory
fld f24, 0(x2) # load 0x3dda723dc594562e from memory into f24
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fnmadd.d f16, f5, f24, f21, dyn # perform operation
fnmadd.d f16, f5, f24, f21, rdn # perform operation
fnmadd.d f16, f5, f24, f21, rmm # perform operation
fnmadd.d f16, f5, f24, f21, rne # perform operation
fnmadd.d f16, f5, f24, f21, rtz # perform operation
fnmadd.d f16, f5, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f5, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f5, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f5, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f5, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f5, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x4000000000000000)
li x19, 0x2430f28e715a32bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xae613e8a6df6cafc # load x3 with value 0xae613e8a6df6cafc
sd x3, 0(x2) # store 0xae613e8a6df6cafc in memory
fld f27, 0(x2) # load 0xae613e8a6df6cafc from memory into f27
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fnmadd.d f19, f21, f27, f9, dyn # perform operation
fnmadd.d f19, f21, f27, f9, rdn # perform operation
fnmadd.d f19, f21, f27, f9, rmm # perform operation
fnmadd.d f19, f21, f27, f9, rne # perform operation
fnmadd.d f19, f21, f27, f9, rtz # perform operation
fnmadd.d f19, f21, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f21, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f21, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f21, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f21, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f21, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xc000000000000000)
li x4, 0x4e5f5ec33b4a4bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x6f61b10ebfbaa1b8 # load x3 with value 0x6f61b10ebfbaa1b8
sd x3, 0(x2) # store 0x6f61b10ebfbaa1b8 in memory
fld f25, 0(x2) # load 0x6f61b10ebfbaa1b8 from memory into f25
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmadd.d f4, f20, f25, f24, dyn # perform operation
fnmadd.d f4, f20, f25, f24, rdn # perform operation
fnmadd.d f4, f20, f25, f24, rmm # perform operation
fnmadd.d f4, f20, f25, f24, rne # perform operation
fnmadd.d f4, f20, f25, f24, rtz # perform operation
fnmadd.d f4, f20, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x10000000000000)
li x21, 0xec8dd609f7bbb777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x938fb5282bb679e0 # load x3 with value 0x938fb5282bb679e0
sd x3, 0(x2) # store 0x938fb5282bb679e0 in memory
fld f15, 0(x2) # load 0x938fb5282bb679e0 from memory into f15
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fnmadd.d f21, f28, f15, f6, dyn # perform operation
fnmadd.d f21, f28, f15, f6, rdn # perform operation
fnmadd.d f21, f28, f15, f6, rmm # perform operation
fnmadd.d f21, f28, f15, f6, rne # perform operation
fnmadd.d f21, f28, f15, f6, rtz # perform operation
fnmadd.d f21, f28, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f28, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f28, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8010000000000000)
li x30, 0x3c6096e9a21ac0c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xa9928b4f1694f2fc # load x3 with value 0xa9928b4f1694f2fc
sd x3, 0(x2) # store 0xa9928b4f1694f2fc in memory
fld f6, 0(x2) # load 0xa9928b4f1694f2fc from memory into f6
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fnmadd.d f30, f3, f6, f18, dyn # perform operation
fnmadd.d f30, f3, f6, f18, rdn # perform operation
fnmadd.d f30, f3, f6, f18, rmm # perform operation
fnmadd.d f30, f3, f6, f18, rne # perform operation
fnmadd.d f30, f3, f6, f18, rtz # perform operation
fnmadd.d f30, f3, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f3, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fefffffffffffff)
li x20, 0x08ae20fe5bc5393f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0xdb75affd894007c2 # load x3 with value 0xdb75affd894007c2
sd x3, 0(x2) # store 0xdb75affd894007c2 in memory
fld f21, 0(x2) # load 0xdb75affd894007c2 from memory into f21
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmadd.d f20, f1, f21, f14, dyn # perform operation
fnmadd.d f20, f1, f21, f14, rdn # perform operation
fnmadd.d f20, f1, f21, f14, rmm # perform operation
fnmadd.d f20, f1, f21, f14, rne # perform operation
fnmadd.d f20, f1, f21, f14, rtz # perform operation
fnmadd.d f20, f1, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f1, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f1, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xffefffffffffffff)
li x10, 0xa684563a9d7ec374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x15ba2a9e1e0bac4a # load x3 with value 0x15ba2a9e1e0bac4a
sd x3, 0(x2) # store 0x15ba2a9e1e0bac4a in memory
fld f5, 0(x2) # load 0x15ba2a9e1e0bac4a from memory into f5
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fnmadd.d f10, f12, f5, f11, dyn # perform operation
fnmadd.d f10, f12, f5, f11, rdn # perform operation
fnmadd.d f10, f12, f5, f11, rmm # perform operation
fnmadd.d f10, f12, f5, f11, rne # perform operation
fnmadd.d f10, f12, f5, f11, rtz # perform operation
fnmadd.d f10, f12, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f12, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfffffffffffff)
li x22, 0xb27f0ff8a7e15d2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x900baf2e5d9801b0 # load x3 with value 0x900baf2e5d9801b0
sd x3, 0(x2) # store 0x900baf2e5d9801b0 in memory
fld f7, 0(x2) # load 0x900baf2e5d9801b0 from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fnmadd.d f22, f31, f7, f28, dyn # perform operation
fnmadd.d f22, f31, f7, f28, rdn # perform operation
fnmadd.d f22, f31, f7, f28, rmm # perform operation
fnmadd.d f22, f31, f7, f28, rne # perform operation
fnmadd.d f22, f31, f7, f28, rtz # perform operation
fnmadd.d f22, f31, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f31, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x800fffffffffffff)
li x3, 0x9c5fdf15c90e0d93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x66e13e3f6aced0ab # load x3 with value 0x66e13e3f6aced0ab
sd x3, 0(x2) # store 0x66e13e3f6aced0ab in memory
fld f24, 0(x2) # load 0x66e13e3f6aced0ab from memory into f24
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fnmadd.d f3, f28, f24, f6, dyn # perform operation
fnmadd.d f3, f28, f24, f6, rdn # perform operation
fnmadd.d f3, f28, f24, f6, rmm # perform operation
fnmadd.d f3, f28, f24, f6, rne # perform operation
fnmadd.d f3, f28, f24, f6, rtz # perform operation
fnmadd.d f3, f28, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000)
li x24, 0x59c0a8a35a6a9838 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xef8c27bde3a9c2f3 # load x3 with value 0xef8c27bde3a9c2f3
sd x3, 0(x2) # store 0xef8c27bde3a9c2f3 in memory
fld f11, 0(x2) # load 0xef8c27bde3a9c2f3 from memory into f11
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fnmadd.d f24, f9, f11, f28, dyn # perform operation
fnmadd.d f24, f9, f11, f28, rdn # perform operation
fnmadd.d f24, f9, f11, f28, rmm # perform operation
fnmadd.d f24, f9, f11, f28, rne # perform operation
fnmadd.d f24, f9, f11, f28, rtz # perform operation
fnmadd.d f24, f9, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f9, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8008000000000000)
li x27, 0x934fcbf6c68e6247 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0xa7ebf8e8a9778de8 # load x3 with value 0xa7ebf8e8a9778de8
sd x3, 0(x2) # store 0xa7ebf8e8a9778de8 in memory
fld f12, 0(x2) # load 0xa7ebf8e8a9778de8 from memory into f12
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fnmadd.d f27, f18, f12, f28, dyn # perform operation
fnmadd.d f27, f18, f12, f28, rdn # perform operation
fnmadd.d f27, f18, f12, f28, rmm # perform operation
fnmadd.d f27, f18, f12, f28, rne # perform operation
fnmadd.d f27, f18, f12, f28, rtz # perform operation
fnmadd.d f27, f18, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f18, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f18, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x1)
li x11, 0xb97fd1f0d03a3bba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x79b168693e9a23f6 # load x3 with value 0x79b168693e9a23f6
sd x3, 0(x2) # store 0x79b168693e9a23f6 in memory
fld f2, 0(x2) # load 0x79b168693e9a23f6 from memory into f2
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fnmadd.d f11, f15, f2, f19, dyn # perform operation
fnmadd.d f11, f15, f2, f19, rdn # perform operation
fnmadd.d f11, f15, f2, f19, rmm # perform operation
fnmadd.d f11, f15, f2, f19, rne # perform operation
fnmadd.d f11, f15, f2, f19, rtz # perform operation
fnmadd.d f11, f15, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f15, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000001)
li x11, 0xbe7e95215db5e357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x271e57b2aeb8150e # load x3 with value 0x271e57b2aeb8150e
sd x3, 0(x2) # store 0x271e57b2aeb8150e in memory
fld f2, 0(x2) # load 0x271e57b2aeb8150e from memory into f2
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmadd.d f11, f10, f2, f22, dyn # perform operation
fnmadd.d f11, f10, f2, f22, rdn # perform operation
fnmadd.d f11, f10, f2, f22, rmm # perform operation
fnmadd.d f11, f10, f2, f22, rne # perform operation
fnmadd.d f11, f10, f2, f22, rtz # perform operation
fnmadd.d f11, f10, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000000)
li x14, 0xf41c9cb99b354999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x786e6a9d8e474c4a # load x3 with value 0x786e6a9d8e474c4a
sd x3, 0(x2) # store 0x786e6a9d8e474c4a in memory
fld f16, 0(x2) # load 0x786e6a9d8e474c4a from memory into f16
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fnmadd.d f14, f24, f16, f26, dyn # perform operation
fnmadd.d f14, f24, f16, f26, rdn # perform operation
fnmadd.d f14, f24, f16, f26, rmm # perform operation
fnmadd.d f14, f24, f16, f26, rne # perform operation
fnmadd.d f14, f24, f16, f26, rtz # perform operation
fnmadd.d f14, f24, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f24, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f24, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f24, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f24, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f24, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfff0000000000000)
li x12, 0x8b78c25faf964fe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xc965ebe32a7415f4 # load x3 with value 0xc965ebe32a7415f4
sd x3, 0(x2) # store 0xc965ebe32a7415f4 in memory
fld f2, 0(x2) # load 0xc965ebe32a7415f4 from memory into f2
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fnmadd.d f12, f23, f2, f20, dyn # perform operation
fnmadd.d f12, f23, f2, f20, rdn # perform operation
fnmadd.d f12, f23, f2, f20, rmm # perform operation
fnmadd.d f12, f23, f2, f20, rne # perform operation
fnmadd.d f12, f23, f2, f20, rtz # perform operation
fnmadd.d f12, f23, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f23, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff8000000000000)
li x30, 0x4fd89cd31e772e19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x76aca2dbe87ebf3f # load x3 with value 0x76aca2dbe87ebf3f
sd x3, 0(x2) # store 0x76aca2dbe87ebf3f in memory
fld f15, 0(x2) # load 0x76aca2dbe87ebf3f from memory into f15
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f30, f10, f15, f16, dyn # perform operation
fnmadd.d f30, f10, f15, f16, rdn # perform operation
fnmadd.d f30, f10, f15, f16, rmm # perform operation
fnmadd.d f30, f10, f15, f16, rne # perform operation
fnmadd.d f30, f10, f15, f16, rtz # perform operation
fnmadd.d f30, f10, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f10, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fffffffffffffff)
li x2, 0xf11a1977de49ea25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x1f6ec9082293a616 # load x3 with value 0x1f6ec9082293a616
sd x3, 0(x2) # store 0x1f6ec9082293a616 in memory
fld f9, 0(x2) # load 0x1f6ec9082293a616 from memory into f9
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fnmadd.d f2, f23, f9, f20, dyn # perform operation
fnmadd.d f2, f23, f9, f20, rdn # perform operation
fnmadd.d f2, f23, f9, f20, rmm # perform operation
fnmadd.d f2, f23, f9, f20, rne # perform operation
fnmadd.d f2, f23, f9, f20, rtz # perform operation
fnmadd.d f2, f23, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f23, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f23, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f23, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f23, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f23, f9, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000001)
li x10, 0x87db0830cab2307e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x4a4290745252da4e # load x3 with value 0x4a4290745252da4e
sd x3, 0(x2) # store 0x4a4290745252da4e in memory
fld f19, 0(x2) # load 0x4a4290745252da4e from memory into f19
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fnmadd.d f10, f12, f19, f21, dyn # perform operation
fnmadd.d f10, f12, f19, f21, rdn # perform operation
fnmadd.d f10, f12, f19, f21, rmm # perform operation
fnmadd.d f10, f12, f19, f21, rne # perform operation
fnmadd.d f10, f12, f19, f21, rtz # perform operation
fnmadd.d f10, f12, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f12, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x5, 0xc99c99f246a0290d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x910c70d55ecdf98d # load x3 with value 0x910c70d55ecdf98d
sd x3, 0(x2) # store 0x910c70d55ecdf98d in memory
fld f3, 0(x2) # load 0x910c70d55ecdf98d from memory into f3
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fnmadd.d f5, f31, f3, f7, dyn # perform operation
fnmadd.d f5, f31, f3, f7, rdn # perform operation
fnmadd.d f5, f31, f3, f7, rmm # perform operation
fnmadd.d f5, f31, f3, f7, rne # perform operation
fnmadd.d f5, f31, f3, f7, rtz # perform operation
fnmadd.d f5, f31, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x5a392534a57711ad)
li x16, 0x4f1545b521b1acb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x8c6f65e305f00cc2 # load x3 with value 0x8c6f65e305f00cc2
sd x3, 0(x2) # store 0x8c6f65e305f00cc2 in memory
fld f9, 0(x2) # load 0x8c6f65e305f00cc2 from memory into f9
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fnmadd.d f16, f13, f9, f11, dyn # perform operation
fnmadd.d f16, f13, f9, f11, rdn # perform operation
fnmadd.d f16, f13, f9, f11, rmm # perform operation
fnmadd.d f16, f13, f9, f11, rne # perform operation
fnmadd.d f16, f13, f9, f11, rtz # perform operation
fnmadd.d f16, f13, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f13, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f13, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xa6e895993737426c)
li x4, 0xf70a985ca2a80f3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0xd63a5f358193f742 # load x3 with value 0xd63a5f358193f742
sd x3, 0(x2) # store 0xd63a5f358193f742 in memory
fld f13, 0(x2) # load 0xd63a5f358193f742 from memory into f13
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fnmadd.d f4, f14, f13, f3, dyn # perform operation
fnmadd.d f4, f14, f13, f3, rdn # perform operation
fnmadd.d f4, f14, f13, f3, rmm # perform operation
fnmadd.d f4, f14, f13, f3, rne # perform operation
fnmadd.d f4, f14, f13, f3, rtz # perform operation
fnmadd.d f4, f14, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f14, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f14, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f14, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f14, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f14, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x0)
li x1, 0x1ecb0d0219191558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x5dda6ec26739b585 # load x3 with value 0x5dda6ec26739b585
sd x3, 0(x2) # store 0x5dda6ec26739b585 in memory
fld f6, 0(x2) # load 0x5dda6ec26739b585 from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fnmadd.d f1, f18, f6, f17, dyn # perform operation
fnmadd.d f1, f18, f6, f17, rdn # perform operation
fnmadd.d f1, f18, f6, f17, rmm # perform operation
fnmadd.d f1, f18, f6, f17, rne # perform operation
fnmadd.d f1, f18, f6, f17, rtz # perform operation
fnmadd.d f1, f18, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f18, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000000)
li x11, 0x2a1aa878f7a1b962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0xec1a1103e81c5472 # load x3 with value 0xec1a1103e81c5472
sd x3, 0(x2) # store 0xec1a1103e81c5472 in memory
fld f21, 0(x2) # load 0xec1a1103e81c5472 from memory into f21
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fnmadd.d f11, f1, f21, f27, dyn # perform operation
fnmadd.d f11, f1, f21, f27, rdn # perform operation
fnmadd.d f11, f1, f21, f27, rmm # perform operation
fnmadd.d f11, f1, f21, f27, rne # perform operation
fnmadd.d f11, f1, f21, f27, rtz # perform operation
fnmadd.d f11, f1, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f1, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff0000000000000)
li x2, 0xc600b26cecb15ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0x7ce012e60cff7004 # load x3 with value 0x7ce012e60cff7004
sd x3, 0(x2) # store 0x7ce012e60cff7004 in memory
fld f17, 0(x2) # load 0x7ce012e60cff7004 from memory into f17
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fnmadd.d f2, f4, f17, f8, dyn # perform operation
fnmadd.d f2, f4, f17, f8, rdn # perform operation
fnmadd.d f2, f4, f17, f8, rmm # perform operation
fnmadd.d f2, f4, f17, f8, rne # perform operation
fnmadd.d f2, f4, f17, f8, rtz # perform operation
fnmadd.d f2, f4, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f4, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f4, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f4, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f4, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f4, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff0000000000000)
li x29, 0x4a9e4f3465eeb194 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x8ce6da05ab60b836 # load x3 with value 0x8ce6da05ab60b836
sd x3, 0(x2) # store 0x8ce6da05ab60b836 in memory
fld f14, 0(x2) # load 0x8ce6da05ab60b836 from memory into f14
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f29, f12, f14, f22, dyn # perform operation
fnmadd.d f29, f12, f14, f22, rdn # perform operation
fnmadd.d f29, f12, f14, f22, rmm # perform operation
fnmadd.d f29, f12, f14, f22, rne # perform operation
fnmadd.d f29, f12, f14, f22, rtz # perform operation
fnmadd.d f29, f12, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f12, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff8000000000000)
li x28, 0x3fc9874b196bf1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x45d2ed5d23b3cffb # load x3 with value 0x45d2ed5d23b3cffb
sd x3, 0(x2) # store 0x45d2ed5d23b3cffb in memory
fld f17, 0(x2) # load 0x45d2ed5d23b3cffb from memory into f17
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fnmadd.d f28, f25, f17, f21, dyn # perform operation
fnmadd.d f28, f25, f17, f21, rdn # perform operation
fnmadd.d f28, f25, f17, f21, rmm # perform operation
fnmadd.d f28, f25, f17, f21, rne # perform operation
fnmadd.d f28, f25, f17, f21, rtz # perform operation
fnmadd.d f28, f25, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff8000000000000)
li x12, 0xd1423255db4b25be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x61f5695d44a85b36 # load x3 with value 0x61f5695d44a85b36
sd x3, 0(x2) # store 0x61f5695d44a85b36 in memory
fld f1, 0(x2) # load 0x61f5695d44a85b36 from memory into f1
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fnmadd.d f12, f19, f1, f4, dyn # perform operation
fnmadd.d f12, f19, f1, f4, rdn # perform operation
fnmadd.d f12, f19, f1, f4, rmm # perform operation
fnmadd.d f12, f19, f1, f4, rne # perform operation
fnmadd.d f12, f19, f1, f4, rtz # perform operation
fnmadd.d f12, f19, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f19, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f19, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f19, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f19, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f19, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x4000000000000000)
li x13, 0xf362c76388206bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x0e13c44da43adfcc # load x3 with value 0x0e13c44da43adfcc
sd x3, 0(x2) # store 0x0e13c44da43adfcc in memory
fld f12, 0(x2) # load 0x0e13c44da43adfcc from memory into f12
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fnmadd.d f13, f23, f12, f3, dyn # perform operation
fnmadd.d f13, f23, f12, f3, rdn # perform operation
fnmadd.d f13, f23, f12, f3, rmm # perform operation
fnmadd.d f13, f23, f12, f3, rne # perform operation
fnmadd.d f13, f23, f12, f3, rtz # perform operation
fnmadd.d f13, f23, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f23, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xc000000000000000)
li x9, 0xb63c4c2ce48c7e42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0x6039d542bb98d149 # load x3 with value 0x6039d542bb98d149
sd x3, 0(x2) # store 0x6039d542bb98d149 in memory
fld f18, 0(x2) # load 0x6039d542bb98d149 from memory into f18
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fnmadd.d f9, f16, f18, f29, dyn # perform operation
fnmadd.d f9, f16, f18, f29, rdn # perform operation
fnmadd.d f9, f16, f18, f29, rmm # perform operation
fnmadd.d f9, f16, f18, f29, rne # perform operation
fnmadd.d f9, f16, f18, f29, rtz # perform operation
fnmadd.d f9, f16, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f16, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x10000000000000)
li x8, 0x0d857258e8920762 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xa99f6ac36e3798ef # load x3 with value 0xa99f6ac36e3798ef
sd x3, 0(x2) # store 0xa99f6ac36e3798ef in memory
fld f24, 0(x2) # load 0xa99f6ac36e3798ef from memory into f24
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fnmadd.d f8, f5, f24, f23, dyn # perform operation
fnmadd.d f8, f5, f24, f23, rdn # perform operation
fnmadd.d f8, f5, f24, f23, rmm # perform operation
fnmadd.d f8, f5, f24, f23, rne # perform operation
fnmadd.d f8, f5, f24, f23, rtz # perform operation
fnmadd.d f8, f5, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8010000000000000)
li x2, 0xcf16eb535e16476d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x8a3197e1ab703ccf # load x3 with value 0x8a3197e1ab703ccf
sd x3, 0(x2) # store 0x8a3197e1ab703ccf in memory
fld f21, 0(x2) # load 0x8a3197e1ab703ccf from memory into f21
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fnmadd.d f2, f9, f21, f18, dyn # perform operation
fnmadd.d f2, f9, f21, f18, rdn # perform operation
fnmadd.d f2, f9, f21, f18, rmm # perform operation
fnmadd.d f2, f9, f21, f18, rne # perform operation
fnmadd.d f2, f9, f21, f18, rtz # perform operation
fnmadd.d f2, f9, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fefffffffffffff)
li x8, 0x75ceeee7452c0639 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x418727fffb8f9be5 # load x3 with value 0x418727fffb8f9be5
sd x3, 0(x2) # store 0x418727fffb8f9be5 in memory
fld f5, 0(x2) # load 0x418727fffb8f9be5 from memory into f5
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fnmadd.d f8, f19, f5, f29, dyn # perform operation
fnmadd.d f8, f19, f5, f29, rdn # perform operation
fnmadd.d f8, f19, f5, f29, rmm # perform operation
fnmadd.d f8, f19, f5, f29, rne # perform operation
fnmadd.d f8, f19, f5, f29, rtz # perform operation
fnmadd.d f8, f19, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f19, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f19, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xffefffffffffffff)
li x7, 0x2efcb1a7db26d2ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0xa6b6c1814f08a3a9 # load x3 with value 0xa6b6c1814f08a3a9
sd x3, 0(x2) # store 0xa6b6c1814f08a3a9 in memory
fld f14, 0(x2) # load 0xa6b6c1814f08a3a9 from memory into f14
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fnmadd.d f7, f21, f14, f27, dyn # perform operation
fnmadd.d f7, f21, f14, f27, rdn # perform operation
fnmadd.d f7, f21, f14, f27, rmm # perform operation
fnmadd.d f7, f21, f14, f27, rne # perform operation
fnmadd.d f7, f21, f14, f27, rtz # perform operation
fnmadd.d f7, f21, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f21, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f21, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfffffffffffff)
li x23, 0xf8eeb1da57322446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x2c2e7cd09412d047 # load x3 with value 0x2c2e7cd09412d047
sd x3, 0(x2) # store 0x2c2e7cd09412d047 in memory
fld f4, 0(x2) # load 0x2c2e7cd09412d047 from memory into f4
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmadd.d f23, f31, f4, f1, dyn # perform operation
fnmadd.d f23, f31, f4, f1, rdn # perform operation
fnmadd.d f23, f31, f4, f1, rmm # perform operation
fnmadd.d f23, f31, f4, f1, rne # perform operation
fnmadd.d f23, f31, f4, f1, rtz # perform operation
fnmadd.d f23, f31, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f31, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x800fffffffffffff)
li x18, 0xbe5e47b84d884045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xec0d89574aa45117 # load x3 with value 0xec0d89574aa45117
sd x3, 0(x2) # store 0xec0d89574aa45117 in memory
fld f5, 0(x2) # load 0xec0d89574aa45117 from memory into f5
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fnmadd.d f18, f3, f5, f9, dyn # perform operation
fnmadd.d f18, f3, f5, f9, rdn # perform operation
fnmadd.d f18, f3, f5, f9, rmm # perform operation
fnmadd.d f18, f3, f5, f9, rne # perform operation
fnmadd.d f18, f3, f5, f9, rtz # perform operation
fnmadd.d f18, f3, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f3, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000)
li x11, 0x8923838d79136414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0xa63e55bda310ba59 # load x3 with value 0xa63e55bda310ba59
sd x3, 0(x2) # store 0xa63e55bda310ba59 in memory
fld f17, 0(x2) # load 0xa63e55bda310ba59 from memory into f17
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fnmadd.d f11, f29, f17, f18, dyn # perform operation
fnmadd.d f11, f29, f17, f18, rdn # perform operation
fnmadd.d f11, f29, f17, f18, rmm # perform operation
fnmadd.d f11, f29, f17, f18, rne # perform operation
fnmadd.d f11, f29, f17, f18, rtz # perform operation
fnmadd.d f11, f29, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f29, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8008000000000000)
li x31, 0xd70c5a35c00328b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xc89c08d260a9a951 # load x3 with value 0xc89c08d260a9a951
sd x3, 0(x2) # store 0xc89c08d260a9a951 in memory
fld f23, 0(x2) # load 0xc89c08d260a9a951 from memory into f23
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fnmadd.d f31, f5, f23, f2, dyn # perform operation
fnmadd.d f31, f5, f23, f2, rdn # perform operation
fnmadd.d f31, f5, f23, f2, rmm # perform operation
fnmadd.d f31, f5, f23, f2, rne # perform operation
fnmadd.d f31, f5, f23, f2, rtz # perform operation
fnmadd.d f31, f5, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f5, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x1)
li x14, 0x4f0b013b20910c8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x578d7600274e2940 # load x3 with value 0x578d7600274e2940
sd x3, 0(x2) # store 0x578d7600274e2940 in memory
fld f27, 0(x2) # load 0x578d7600274e2940 from memory into f27
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f14, f22, f27, f12, dyn # perform operation
fnmadd.d f14, f22, f27, f12, rdn # perform operation
fnmadd.d f14, f22, f27, f12, rmm # perform operation
fnmadd.d f14, f22, f27, f12, rne # perform operation
fnmadd.d f14, f22, f27, f12, rtz # perform operation
fnmadd.d f14, f22, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f22, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000001)
li x17, 0x1257119a36a1b489 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0x4b901f21ef90b6d4 # load x3 with value 0x4b901f21ef90b6d4
sd x3, 0(x2) # store 0x4b901f21ef90b6d4 in memory
fld f8, 0(x2) # load 0x4b901f21ef90b6d4 from memory into f8
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fnmadd.d f17, f29, f8, f7, dyn # perform operation
fnmadd.d f17, f29, f8, f7, rdn # perform operation
fnmadd.d f17, f29, f8, f7, rmm # perform operation
fnmadd.d f17, f29, f8, f7, rne # perform operation
fnmadd.d f17, f29, f8, f7, rtz # perform operation
fnmadd.d f17, f29, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f29, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000000)
li x8, 0xce6f9c6312c311e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x961999bac967dad6 # load x3 with value 0x961999bac967dad6
sd x3, 0(x2) # store 0x961999bac967dad6 in memory
fld f13, 0(x2) # load 0x961999bac967dad6 from memory into f13
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fnmadd.d f8, f10, f13, f19, dyn # perform operation
fnmadd.d f8, f10, f13, f19, rdn # perform operation
fnmadd.d f8, f10, f13, f19, rmm # perform operation
fnmadd.d f8, f10, f13, f19, rne # perform operation
fnmadd.d f8, f10, f13, f19, rtz # perform operation
fnmadd.d f8, f10, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f10, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f10, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f10, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f10, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f10, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfff0000000000000)
li x25, 0x53ff29c75186148e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0xf6ef59d7f923ee46 # load x3 with value 0xf6ef59d7f923ee46
sd x3, 0(x2) # store 0xf6ef59d7f923ee46 in memory
fld f23, 0(x2) # load 0xf6ef59d7f923ee46 from memory into f23
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fnmadd.d f25, f15, f23, f24, dyn # perform operation
fnmadd.d f25, f15, f23, f24, rdn # perform operation
fnmadd.d f25, f15, f23, f24, rmm # perform operation
fnmadd.d f25, f15, f23, f24, rne # perform operation
fnmadd.d f25, f15, f23, f24, rtz # perform operation
fnmadd.d f25, f15, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f15, f23, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff8000000000000)
li x28, 0xff58c41fa0229e63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x6281b664294dbbb5 # load x3 with value 0x6281b664294dbbb5
sd x3, 0(x2) # store 0x6281b664294dbbb5 in memory
fld f14, 0(x2) # load 0x6281b664294dbbb5 from memory into f14
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fnmadd.d f28, f20, f14, f13, dyn # perform operation
fnmadd.d f28, f20, f14, f13, rdn # perform operation
fnmadd.d f28, f20, f14, f13, rmm # perform operation
fnmadd.d f28, f20, f14, f13, rne # perform operation
fnmadd.d f28, f20, f14, f13, rtz # perform operation
fnmadd.d f28, f20, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f20, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f20, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fffffffffffffff)
li x26, 0xa6067132fb89c9bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xdf1d0478fa3e05f0 # load x3 with value 0xdf1d0478fa3e05f0
sd x3, 0(x2) # store 0xdf1d0478fa3e05f0 in memory
fld f27, 0(x2) # load 0xdf1d0478fa3e05f0 from memory into f27
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fnmadd.d f26, f24, f27, f6, dyn # perform operation
fnmadd.d f26, f24, f27, f6, rdn # perform operation
fnmadd.d f26, f24, f27, f6, rmm # perform operation
fnmadd.d f26, f24, f27, f6, rne # perform operation
fnmadd.d f26, f24, f27, f6, rtz # perform operation
fnmadd.d f26, f24, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f24, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000001)
li x25, 0x8d6540db59de5705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0xf81fe09c7cea9274 # load x3 with value 0xf81fe09c7cea9274
sd x3, 0(x2) # store 0xf81fe09c7cea9274 in memory
fld f23, 0(x2) # load 0xf81fe09c7cea9274 from memory into f23
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fnmadd.d f25, f13, f23, f3, dyn # perform operation
fnmadd.d f25, f13, f23, f3, rdn # perform operation
fnmadd.d f25, f13, f23, f3, rmm # perform operation
fnmadd.d f25, f13, f23, f3, rne # perform operation
fnmadd.d f25, f13, f23, f3, rtz # perform operation
fnmadd.d f25, f13, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f13, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f13, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f13, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f13, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f13, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x4, 0xe48627801d913868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xe72d8e9d1fffcee1 # load x3 with value 0xe72d8e9d1fffcee1
sd x3, 0(x2) # store 0xe72d8e9d1fffcee1 in memory
fld f20, 0(x2) # load 0xe72d8e9d1fffcee1 from memory into f20
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fnmadd.d f4, f10, f20, f7, dyn # perform operation
fnmadd.d f4, f10, f20, f7, rdn # perform operation
fnmadd.d f4, f10, f20, f7, rmm # perform operation
fnmadd.d f4, f10, f20, f7, rne # perform operation
fnmadd.d f4, f10, f20, f7, rtz # perform operation
fnmadd.d f4, f10, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f10, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x5a392534a57711ad)
li x25, 0x54f702634933dd7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x2ae9de326515b8b2 # load x3 with value 0x2ae9de326515b8b2
sd x3, 0(x2) # store 0x2ae9de326515b8b2 in memory
fld f20, 0(x2) # load 0x2ae9de326515b8b2 from memory into f20
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fnmadd.d f25, f14, f20, f12, dyn # perform operation
fnmadd.d f25, f14, f20, f12, rdn # perform operation
fnmadd.d f25, f14, f20, f12, rmm # perform operation
fnmadd.d f25, f14, f20, f12, rne # perform operation
fnmadd.d f25, f14, f20, f12, rtz # perform operation
fnmadd.d f25, f14, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xa6e895993737426c)
li x26, 0x5b7961121d57daf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x37e5bddb80bf9e20 # load x3 with value 0x37e5bddb80bf9e20
sd x3, 0(x2) # store 0x37e5bddb80bf9e20 in memory
fld f21, 0(x2) # load 0x37e5bddb80bf9e20 from memory into f21
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fnmadd.d f26, f24, f21, f5, dyn # perform operation
fnmadd.d f26, f24, f21, f5, rdn # perform operation
fnmadd.d f26, f24, f21, f5, rmm # perform operation
fnmadd.d f26, f24, f21, f5, rne # perform operation
fnmadd.d f26, f24, f21, f5, rtz # perform operation
fnmadd.d f26, f24, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f24, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x0)
li x3, 0xcf236e57b49ab3c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xf76eeadd48bf7c89 # load x3 with value 0xf76eeadd48bf7c89
sd x3, 0(x2) # store 0xf76eeadd48bf7c89 in memory
fld f11, 0(x2) # load 0xf76eeadd48bf7c89 from memory into f11
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fnmadd.d f3, f8, f11, f7, dyn # perform operation
fnmadd.d f3, f8, f11, f7, rdn # perform operation
fnmadd.d f3, f8, f11, f7, rmm # perform operation
fnmadd.d f3, f8, f11, f7, rne # perform operation
fnmadd.d f3, f8, f11, f7, rtz # perform operation
fnmadd.d f3, f8, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f8, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f8, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000000)
li x25, 0x5508885f1a09bb19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x791cf3e4188dc50a # load x3 with value 0x791cf3e4188dc50a
sd x3, 0(x2) # store 0x791cf3e4188dc50a in memory
fld f24, 0(x2) # load 0x791cf3e4188dc50a from memory into f24
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fnmadd.d f25, f28, f24, f18, dyn # perform operation
fnmadd.d f25, f28, f24, f18, rdn # perform operation
fnmadd.d f25, f28, f24, f18, rmm # perform operation
fnmadd.d f25, f28, f24, f18, rne # perform operation
fnmadd.d f25, f28, f24, f18, rtz # perform operation
fnmadd.d f25, f28, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f28, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff0000000000000)
li x23, 0x52b0e923badaabd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x5e2e815174dfece9 # load x3 with value 0x5e2e815174dfece9
sd x3, 0(x2) # store 0x5e2e815174dfece9 in memory
fld f17, 0(x2) # load 0x5e2e815174dfece9 from memory into f17
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fnmadd.d f23, f28, f17, f30, dyn # perform operation
fnmadd.d f23, f28, f17, f30, rdn # perform operation
fnmadd.d f23, f28, f17, f30, rmm # perform operation
fnmadd.d f23, f28, f17, f30, rne # perform operation
fnmadd.d f23, f28, f17, f30, rtz # perform operation
fnmadd.d f23, f28, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f28, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff0000000000000)
li x9, 0xe02e42638c632362 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0xa7844988209402cf # load x3 with value 0xa7844988209402cf
sd x3, 0(x2) # store 0xa7844988209402cf in memory
fld f31, 0(x2) # load 0xa7844988209402cf from memory into f31
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fnmadd.d f9, f10, f31, f5, dyn # perform operation
fnmadd.d f9, f10, f31, f5, rdn # perform operation
fnmadd.d f9, f10, f31, f5, rmm # perform operation
fnmadd.d f9, f10, f31, f5, rne # perform operation
fnmadd.d f9, f10, f31, f5, rtz # perform operation
fnmadd.d f9, f10, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f10, f31, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff8000000000000)
li x19, 0x6bced21a76ec1654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x947d9fd69efc24e0 # load x3 with value 0x947d9fd69efc24e0
sd x3, 0(x2) # store 0x947d9fd69efc24e0 in memory
fld f23, 0(x2) # load 0x947d9fd69efc24e0 from memory into f23
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fnmadd.d f19, f3, f23, f11, dyn # perform operation
fnmadd.d f19, f3, f23, f11, rdn # perform operation
fnmadd.d f19, f3, f23, f11, rmm # perform operation
fnmadd.d f19, f3, f23, f11, rne # perform operation
fnmadd.d f19, f3, f23, f11, rtz # perform operation
fnmadd.d f19, f3, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f3, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff8000000000000)
li x31, 0xb6e9d28d64741fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xf066bbbccaefff9e # load x3 with value 0xf066bbbccaefff9e
sd x3, 0(x2) # store 0xf066bbbccaefff9e in memory
fld f30, 0(x2) # load 0xf066bbbccaefff9e from memory into f30
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fnmadd.d f31, f8, f30, f24, dyn # perform operation
fnmadd.d f31, f8, f30, f24, rdn # perform operation
fnmadd.d f31, f8, f30, f24, rmm # perform operation
fnmadd.d f31, f8, f30, f24, rne # perform operation
fnmadd.d f31, f8, f30, f24, rtz # perform operation
fnmadd.d f31, f8, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f8, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x4000000000000000)
li x17, 0x87ab85192cc5de85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0x474c35f9ff599b90 # load x3 with value 0x474c35f9ff599b90
sd x3, 0(x2) # store 0x474c35f9ff599b90 in memory
fld f30, 0(x2) # load 0x474c35f9ff599b90 from memory into f30
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fnmadd.d f17, f25, f30, f11, dyn # perform operation
fnmadd.d f17, f25, f30, f11, rdn # perform operation
fnmadd.d f17, f25, f30, f11, rmm # perform operation
fnmadd.d f17, f25, f30, f11, rne # perform operation
fnmadd.d f17, f25, f30, f11, rtz # perform operation
fnmadd.d f17, f25, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f25, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xc000000000000000)
li x2, 0x628fc30654c071f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x52310c8d1d5d2368 # load x3 with value 0x52310c8d1d5d2368
sd x3, 0(x2) # store 0x52310c8d1d5d2368 in memory
fld f14, 0(x2) # load 0x52310c8d1d5d2368 from memory into f14
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fnmadd.d f2, f3, f14, f18, dyn # perform operation
fnmadd.d f2, f3, f14, f18, rdn # perform operation
fnmadd.d f2, f3, f14, f18, rmm # perform operation
fnmadd.d f2, f3, f14, f18, rne # perform operation
fnmadd.d f2, f3, f14, f18, rtz # perform operation
fnmadd.d f2, f3, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f3, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x10000000000000)
li x17, 0x51d7fff7709c4b9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x68b164b64ea32a64 # load x3 with value 0x68b164b64ea32a64
sd x3, 0(x2) # store 0x68b164b64ea32a64 in memory
fld f23, 0(x2) # load 0x68b164b64ea32a64 from memory into f23
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fnmadd.d f17, f9, f23, f18, dyn # perform operation
fnmadd.d f17, f9, f23, f18, rdn # perform operation
fnmadd.d f17, f9, f23, f18, rmm # perform operation
fnmadd.d f17, f9, f23, f18, rne # perform operation
fnmadd.d f17, f9, f23, f18, rtz # perform operation
fnmadd.d f17, f9, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8010000000000000)
li x26, 0xc9bdf313e21e9569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xdfbc6ddd9025b5e4 # load x3 with value 0xdfbc6ddd9025b5e4
sd x3, 0(x2) # store 0xdfbc6ddd9025b5e4 in memory
fld f15, 0(x2) # load 0xdfbc6ddd9025b5e4 from memory into f15
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fnmadd.d f26, f16, f15, f10, dyn # perform operation
fnmadd.d f26, f16, f15, f10, rdn # perform operation
fnmadd.d f26, f16, f15, f10, rmm # perform operation
fnmadd.d f26, f16, f15, f10, rne # perform operation
fnmadd.d f26, f16, f15, f10, rtz # perform operation
fnmadd.d f26, f16, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f16, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f16, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fefffffffffffff)
li x26, 0x4cb9540e0c2ed167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x3ec49c4326d79932 # load x3 with value 0x3ec49c4326d79932
sd x3, 0(x2) # store 0x3ec49c4326d79932 in memory
fld f16, 0(x2) # load 0x3ec49c4326d79932 from memory into f16
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fnmadd.d f26, f9, f16, f1, dyn # perform operation
fnmadd.d f26, f9, f16, f1, rdn # perform operation
fnmadd.d f26, f9, f16, f1, rmm # perform operation
fnmadd.d f26, f9, f16, f1, rne # perform operation
fnmadd.d f26, f9, f16, f1, rtz # perform operation
fnmadd.d f26, f9, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xffefffffffffffff)
li x29, 0x1cb2fc733a663e6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x1592e7f6bf183e62 # load x3 with value 0x1592e7f6bf183e62
sd x3, 0(x2) # store 0x1592e7f6bf183e62 in memory
fld f28, 0(x2) # load 0x1592e7f6bf183e62 from memory into f28
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fnmadd.d f29, f5, f28, f3, dyn # perform operation
fnmadd.d f29, f5, f28, f3, rdn # perform operation
fnmadd.d f29, f5, f28, f3, rmm # perform operation
fnmadd.d f29, f5, f28, f3, rne # perform operation
fnmadd.d f29, f5, f28, f3, rtz # perform operation
fnmadd.d f29, f5, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f5, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfffffffffffff)
li x6, 0x05cbc12466f266b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x635c475a7520f42f # load x3 with value 0x635c475a7520f42f
sd x3, 0(x2) # store 0x635c475a7520f42f in memory
fld f21, 0(x2) # load 0x635c475a7520f42f from memory into f21
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fnmadd.d f6, f20, f21, f18, dyn # perform operation
fnmadd.d f6, f20, f21, f18, rdn # perform operation
fnmadd.d f6, f20, f21, f18, rmm # perform operation
fnmadd.d f6, f20, f21, f18, rne # perform operation
fnmadd.d f6, f20, f21, f18, rtz # perform operation
fnmadd.d f6, f20, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f20, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x800fffffffffffff)
li x11, 0xdf8c73b66627993b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0xe8473e1c8dadfec6 # load x3 with value 0xe8473e1c8dadfec6
sd x3, 0(x2) # store 0xe8473e1c8dadfec6 in memory
fld f17, 0(x2) # load 0xe8473e1c8dadfec6 from memory into f17
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fnmadd.d f11, f13, f17, f23, dyn # perform operation
fnmadd.d f11, f13, f17, f23, rdn # perform operation
fnmadd.d f11, f13, f17, f23, rmm # perform operation
fnmadd.d f11, f13, f17, f23, rne # perform operation
fnmadd.d f11, f13, f17, f23, rtz # perform operation
fnmadd.d f11, f13, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f13, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f13, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f13, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f13, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f13, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000)
li x2, 0xc3452d2745e017bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xbddc8a8ba821280a # load x3 with value 0xbddc8a8ba821280a
sd x3, 0(x2) # store 0xbddc8a8ba821280a in memory
fld f5, 0(x2) # load 0xbddc8a8ba821280a from memory into f5
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fnmadd.d f2, f6, f5, f3, dyn # perform operation
fnmadd.d f2, f6, f5, f3, rdn # perform operation
fnmadd.d f2, f6, f5, f3, rmm # perform operation
fnmadd.d f2, f6, f5, f3, rne # perform operation
fnmadd.d f2, f6, f5, f3, rtz # perform operation
fnmadd.d f2, f6, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f6, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f6, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8008000000000000)
li x6, 0x48d8d3d64a56c6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x06445e3c0c77ee70 # load x3 with value 0x06445e3c0c77ee70
sd x3, 0(x2) # store 0x06445e3c0c77ee70 in memory
fld f21, 0(x2) # load 0x06445e3c0c77ee70 from memory into f21
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fnmadd.d f6, f2, f21, f30, dyn # perform operation
fnmadd.d f6, f2, f21, f30, rdn # perform operation
fnmadd.d f6, f2, f21, f30, rmm # perform operation
fnmadd.d f6, f2, f21, f30, rne # perform operation
fnmadd.d f6, f2, f21, f30, rtz # perform operation
fnmadd.d f6, f2, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f2, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x1)
li x7, 0xc4edafea240e7df3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x746124b885040541 # load x3 with value 0x746124b885040541
sd x3, 0(x2) # store 0x746124b885040541 in memory
fld f11, 0(x2) # load 0x746124b885040541 from memory into f11
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fnmadd.d f7, f22, f11, f28, dyn # perform operation
fnmadd.d f7, f22, f11, f28, rdn # perform operation
fnmadd.d f7, f22, f11, f28, rmm # perform operation
fnmadd.d f7, f22, f11, f28, rne # perform operation
fnmadd.d f7, f22, f11, f28, rtz # perform operation
fnmadd.d f7, f22, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f22, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000001)
li x26, 0xb398ad399dd7440b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x4597aebefe102998 # load x3 with value 0x4597aebefe102998
sd x3, 0(x2) # store 0x4597aebefe102998 in memory
fld f12, 0(x2) # load 0x4597aebefe102998 from memory into f12
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fnmadd.d f26, f24, f12, f18, dyn # perform operation
fnmadd.d f26, f24, f12, f18, rdn # perform operation
fnmadd.d f26, f24, f12, f18, rmm # perform operation
fnmadd.d f26, f24, f12, f18, rne # perform operation
fnmadd.d f26, f24, f12, f18, rtz # perform operation
fnmadd.d f26, f24, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f24, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000000)
li x4, 0x687b6e2bde03f542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
li x3, 0xb9337a40b342d3c2 # load x3 with value 0xb9337a40b342d3c2
sd x3, 0(x2) # store 0xb9337a40b342d3c2 in memory
fld f15, 0(x2) # load 0xb9337a40b342d3c2 from memory into f15
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fnmadd.d f4, f25, f15, f23, dyn # perform operation
fnmadd.d f4, f25, f15, f23, rdn # perform operation
fnmadd.d f4, f25, f15, f23, rmm # perform operation
fnmadd.d f4, f25, f15, f23, rne # perform operation
fnmadd.d f4, f25, f15, f23, rtz # perform operation
fnmadd.d f4, f25, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f25, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f25, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f25, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f25, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f25, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfff0000000000000)
li x31, 0xa9632d50b6ffdfbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xd2fcb50acdb0cb56 # load x3 with value 0xd2fcb50acdb0cb56
sd x3, 0(x2) # store 0xd2fcb50acdb0cb56 in memory
fld f2, 0(x2) # load 0xd2fcb50acdb0cb56 from memory into f2
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fnmadd.d f31, f24, f2, f22, dyn # perform operation
fnmadd.d f31, f24, f2, f22, rdn # perform operation
fnmadd.d f31, f24, f2, f22, rmm # perform operation
fnmadd.d f31, f24, f2, f22, rne # perform operation
fnmadd.d f31, f24, f2, f22, rtz # perform operation
fnmadd.d f31, f24, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff8000000000000)
li x11, 0x3fd3a590d885ac58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x8e7c5b8966dd798a # load x3 with value 0x8e7c5b8966dd798a
sd x3, 0(x2) # store 0x8e7c5b8966dd798a in memory
fld f18, 0(x2) # load 0x8e7c5b8966dd798a from memory into f18
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fnmadd.d f11, f22, f18, f6, dyn # perform operation
fnmadd.d f11, f22, f18, f6, rdn # perform operation
fnmadd.d f11, f22, f18, f6, rmm # perform operation
fnmadd.d f11, f22, f18, f6, rne # perform operation
fnmadd.d f11, f22, f18, f6, rtz # perform operation
fnmadd.d f11, f22, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f22, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f22, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fffffffffffffff)
li x10, 0xa8e7a0894209c1f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xa64e779cd3502a67 # load x3 with value 0xa64e779cd3502a67
sd x3, 0(x2) # store 0xa64e779cd3502a67 in memory
fld f31, 0(x2) # load 0xa64e779cd3502a67 from memory into f31
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fnmadd.d f10, f8, f31, f25, dyn # perform operation
fnmadd.d f10, f8, f31, f25, rdn # perform operation
fnmadd.d f10, f8, f31, f25, rmm # perform operation
fnmadd.d f10, f8, f31, f25, rne # perform operation
fnmadd.d f10, f8, f31, f25, rtz # perform operation
fnmadd.d f10, f8, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000001)
li x30, 0x49d0892616022633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x7563134c392ecf34 # load x3 with value 0x7563134c392ecf34
sd x3, 0(x2) # store 0x7563134c392ecf34 in memory
fld f18, 0(x2) # load 0x7563134c392ecf34 from memory into f18
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fnmadd.d f30, f23, f18, f3, dyn # perform operation
fnmadd.d f30, f23, f18, f3, rdn # perform operation
fnmadd.d f30, f23, f18, f3, rmm # perform operation
fnmadd.d f30, f23, f18, f3, rne # perform operation
fnmadd.d f30, f23, f18, f3, rtz # perform operation
fnmadd.d f30, f23, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f23, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x22, 0xb11bb16c82ebabaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x0591f577e4f0b584 # load x3 with value 0x0591f577e4f0b584
sd x3, 0(x2) # store 0x0591f577e4f0b584 in memory
fld f2, 0(x2) # load 0x0591f577e4f0b584 from memory into f2
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fnmadd.d f22, f23, f2, f18, dyn # perform operation
fnmadd.d f22, f23, f2, f18, rdn # perform operation
fnmadd.d f22, f23, f2, f18, rmm # perform operation
fnmadd.d f22, f23, f2, f18, rne # perform operation
fnmadd.d f22, f23, f2, f18, rtz # perform operation
fnmadd.d f22, f23, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f23, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x5a392534a57711ad)
li x29, 0x0fe93bb5e74d9f16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x4774c6a3a05fe1c2 # load x3 with value 0x4774c6a3a05fe1c2
sd x3, 0(x2) # store 0x4774c6a3a05fe1c2 in memory
fld f17, 0(x2) # load 0x4774c6a3a05fe1c2 from memory into f17
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fnmadd.d f29, f7, f17, f4, dyn # perform operation
fnmadd.d f29, f7, f17, f4, rdn # perform operation
fnmadd.d f29, f7, f17, f4, rmm # perform operation
fnmadd.d f29, f7, f17, f4, rne # perform operation
fnmadd.d f29, f7, f17, f4, rtz # perform operation
fnmadd.d f29, f7, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xa6e895993737426c)
li x10, 0x15fa1915c98be2f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x3d5f8606c9b7fd4e # load x3 with value 0x3d5f8606c9b7fd4e
sd x3, 0(x2) # store 0x3d5f8606c9b7fd4e in memory
fld f22, 0(x2) # load 0x3d5f8606c9b7fd4e from memory into f22
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
fnmadd.d f10, f6, f22, f7, dyn # perform operation
fnmadd.d f10, f6, f22, f7, rdn # perform operation
fnmadd.d f10, f6, f22, f7, rmm # perform operation
fnmadd.d f10, f6, f22, f7, rne # perform operation
fnmadd.d f10, f6, f22, f7, rtz # perform operation
fnmadd.d f10, f6, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f6, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x0)
li x22, 0xb644e17d0a2b8101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0xf406c43ea991b1e2 # load x3 with value 0xf406c43ea991b1e2
sd x3, 0(x2) # store 0xf406c43ea991b1e2 in memory
fld f18, 0(x2) # load 0xf406c43ea991b1e2 from memory into f18
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fnmadd.d f22, f9, f18, f7, dyn # perform operation
fnmadd.d f22, f9, f18, f7, rdn # perform operation
fnmadd.d f22, f9, f18, f7, rmm # perform operation
fnmadd.d f22, f9, f18, f7, rne # perform operation
fnmadd.d f22, f9, f18, f7, rtz # perform operation
fnmadd.d f22, f9, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f9, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000000)
li x15, 0x3d3cfb865218212c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x062ae5f1286461e8 # load x3 with value 0x062ae5f1286461e8
sd x3, 0(x2) # store 0x062ae5f1286461e8 in memory
fld f31, 0(x2) # load 0x062ae5f1286461e8 from memory into f31
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
fnmadd.d f15, f22, f31, f19, dyn # perform operation
fnmadd.d f15, f22, f31, f19, rdn # perform operation
fnmadd.d f15, f22, f31, f19, rmm # perform operation
fnmadd.d f15, f22, f31, f19, rne # perform operation
fnmadd.d f15, f22, f31, f19, rtz # perform operation
fnmadd.d f15, f22, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f22, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f22, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff0000000000000)
li x22, 0xd62d544c3335a355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x4a17629a0fd94273 # load x3 with value 0x4a17629a0fd94273
sd x3, 0(x2) # store 0x4a17629a0fd94273 in memory
fld f13, 0(x2) # load 0x4a17629a0fd94273 from memory into f13
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fnmadd.d f22, f18, f13, f16, dyn # perform operation
fnmadd.d f22, f18, f13, f16, rdn # perform operation
fnmadd.d f22, f18, f13, f16, rmm # perform operation
fnmadd.d f22, f18, f13, f16, rne # perform operation
fnmadd.d f22, f18, f13, f16, rtz # perform operation
fnmadd.d f22, f18, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f18, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f18, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff0000000000000)
li x30, 0xbd5d7e4c6bcfb4b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xb5aa86615b7f2f3e # load x3 with value 0xb5aa86615b7f2f3e
sd x3, 0(x2) # store 0xb5aa86615b7f2f3e in memory
fld f26, 0(x2) # load 0xb5aa86615b7f2f3e from memory into f26
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f30, f19, f26, f22, dyn # perform operation
fnmadd.d f30, f19, f26, f22, rdn # perform operation
fnmadd.d f30, f19, f26, f22, rmm # perform operation
fnmadd.d f30, f19, f26, f22, rne # perform operation
fnmadd.d f30, f19, f26, f22, rtz # perform operation
fnmadd.d f30, f19, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f19, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff8000000000000)
li x20, 0x2e5be5820b25c1e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x2246f30066e4549f # load x3 with value 0x2246f30066e4549f
sd x3, 0(x2) # store 0x2246f30066e4549f in memory
fld f4, 0(x2) # load 0x2246f30066e4549f from memory into f4
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fnmadd.d f20, f21, f4, f8, dyn # perform operation
fnmadd.d f20, f21, f4, f8, rdn # perform operation
fnmadd.d f20, f21, f4, f8, rmm # perform operation
fnmadd.d f20, f21, f4, f8, rne # perform operation
fnmadd.d f20, f21, f4, f8, rtz # perform operation
fnmadd.d f20, f21, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f21, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f21, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f21, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f21, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f21, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff8000000000000)
li x1, 0x76244eb2b5e769dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x1e23119009fcd9e8 # load x3 with value 0x1e23119009fcd9e8
sd x3, 0(x2) # store 0x1e23119009fcd9e8 in memory
fld f19, 0(x2) # load 0x1e23119009fcd9e8 from memory into f19
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fnmadd.d f1, f21, f19, f13, dyn # perform operation
fnmadd.d f1, f21, f19, f13, rdn # perform operation
fnmadd.d f1, f21, f19, f13, rmm # perform operation
fnmadd.d f1, f21, f19, f13, rne # perform operation
fnmadd.d f1, f21, f19, f13, rtz # perform operation
fnmadd.d f1, f21, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f21, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f21, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x4000000000000000)
li x6, 0x1c119ed4b526d0d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x76f0ddf2d11b8571 # load x3 with value 0x76f0ddf2d11b8571
sd x3, 0(x2) # store 0x76f0ddf2d11b8571 in memory
fld f10, 0(x2) # load 0x76f0ddf2d11b8571 from memory into f10
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fnmadd.d f6, f11, f10, f16, dyn # perform operation
fnmadd.d f6, f11, f10, f16, rdn # perform operation
fnmadd.d f6, f11, f10, f16, rmm # perform operation
fnmadd.d f6, f11, f10, f16, rne # perform operation
fnmadd.d f6, f11, f10, f16, rtz # perform operation
fnmadd.d f6, f11, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xc000000000000000)
li x24, 0x6ffd81196decfd72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x51c7a29a9ca66d60 # load x3 with value 0x51c7a29a9ca66d60
sd x3, 0(x2) # store 0x51c7a29a9ca66d60 in memory
fld f28, 0(x2) # load 0x51c7a29a9ca66d60 from memory into f28
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fnmadd.d f24, f16, f28, f30, dyn # perform operation
fnmadd.d f24, f16, f28, f30, rdn # perform operation
fnmadd.d f24, f16, f28, f30, rmm # perform operation
fnmadd.d f24, f16, f28, f30, rne # perform operation
fnmadd.d f24, f16, f28, f30, rtz # perform operation
fnmadd.d f24, f16, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f16, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f16, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x10000000000000)
li x4, 0x342bca65bf3598b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x1658a435322999b4 # load x3 with value 0x1658a435322999b4
sd x3, 0(x2) # store 0x1658a435322999b4 in memory
fld f21, 0(x2) # load 0x1658a435322999b4 from memory into f21
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fnmadd.d f4, f26, f21, f7, dyn # perform operation
fnmadd.d f4, f26, f21, f7, rdn # perform operation
fnmadd.d f4, f26, f21, f7, rmm # perform operation
fnmadd.d f4, f26, f21, f7, rne # perform operation
fnmadd.d f4, f26, f21, f7, rtz # perform operation
fnmadd.d f4, f26, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f26, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f26, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8010000000000000)
li x14, 0xbbacbdf54bc0765c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0xedab56dea9cc1e94 # load x3 with value 0xedab56dea9cc1e94
sd x3, 0(x2) # store 0xedab56dea9cc1e94 in memory
fld f5, 0(x2) # load 0xedab56dea9cc1e94 from memory into f5
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmadd.d f14, f10, f5, f7, dyn # perform operation
fnmadd.d f14, f10, f5, f7, rdn # perform operation
fnmadd.d f14, f10, f5, f7, rmm # perform operation
fnmadd.d f14, f10, f5, f7, rne # perform operation
fnmadd.d f14, f10, f5, f7, rtz # perform operation
fnmadd.d f14, f10, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f10, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fefffffffffffff)
li x24, 0x38b64201cff9c326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x5383992b0b01cb53 # load x3 with value 0x5383992b0b01cb53
sd x3, 0(x2) # store 0x5383992b0b01cb53 in memory
fld f19, 0(x2) # load 0x5383992b0b01cb53 from memory into f19
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmadd.d f24, f14, f19, f26, dyn # perform operation
fnmadd.d f24, f14, f19, f26, rdn # perform operation
fnmadd.d f24, f14, f19, f26, rmm # perform operation
fnmadd.d f24, f14, f19, f26, rne # perform operation
fnmadd.d f24, f14, f19, f26, rtz # perform operation
fnmadd.d f24, f14, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f14, f19, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xffefffffffffffff)
li x18, 0x4fa3cc8f6aa732f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0xfc11ff037a92cf34 # load x3 with value 0xfc11ff037a92cf34
sd x3, 0(x2) # store 0xfc11ff037a92cf34 in memory
fld f23, 0(x2) # load 0xfc11ff037a92cf34 from memory into f23
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fnmadd.d f18, f7, f23, f24, dyn # perform operation
fnmadd.d f18, f7, f23, f24, rdn # perform operation
fnmadd.d f18, f7, f23, f24, rmm # perform operation
fnmadd.d f18, f7, f23, f24, rne # perform operation
fnmadd.d f18, f7, f23, f24, rtz # perform operation
fnmadd.d f18, f7, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f7, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f7, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f7, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f7, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f7, f23, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfffffffffffff)
li x12, 0x2127ad0aee8f5de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x608c18be7717dc78 # load x3 with value 0x608c18be7717dc78
sd x3, 0(x2) # store 0x608c18be7717dc78 in memory
fld f7, 0(x2) # load 0x608c18be7717dc78 from memory into f7
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fnmadd.d f12, f21, f7, f23, dyn # perform operation
fnmadd.d f12, f21, f7, f23, rdn # perform operation
fnmadd.d f12, f21, f7, f23, rmm # perform operation
fnmadd.d f12, f21, f7, f23, rne # perform operation
fnmadd.d f12, f21, f7, f23, rtz # perform operation
fnmadd.d f12, f21, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f21, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x800fffffffffffff)
li x8, 0x402b4444aafc856d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0xd2ad26f325e218a2 # load x3 with value 0xd2ad26f325e218a2
sd x3, 0(x2) # store 0xd2ad26f325e218a2 in memory
fld f13, 0(x2) # load 0xd2ad26f325e218a2 from memory into f13
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fnmadd.d f8, f31, f13, f27, dyn # perform operation
fnmadd.d f8, f31, f13, f27, rdn # perform operation
fnmadd.d f8, f31, f13, f27, rmm # perform operation
fnmadd.d f8, f31, f13, f27, rne # perform operation
fnmadd.d f8, f31, f13, f27, rtz # perform operation
fnmadd.d f8, f31, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000)
li x18, 0x049603ee9b1b96f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x68050aff009375ce # load x3 with value 0x68050aff009375ce
sd x3, 0(x2) # store 0x68050aff009375ce in memory
fld f31, 0(x2) # load 0x68050aff009375ce from memory into f31
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fnmadd.d f18, f12, f31, f29, dyn # perform operation
fnmadd.d f18, f12, f31, f29, rdn # perform operation
fnmadd.d f18, f12, f31, f29, rmm # perform operation
fnmadd.d f18, f12, f31, f29, rne # perform operation
fnmadd.d f18, f12, f31, f29, rtz # perform operation
fnmadd.d f18, f12, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f12, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f12, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f12, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f12, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f12, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8008000000000000)
li x26, 0x67b15f9572e224b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x63b7cb72a831635a # load x3 with value 0x63b7cb72a831635a
sd x3, 0(x2) # store 0x63b7cb72a831635a in memory
fld f7, 0(x2) # load 0x63b7cb72a831635a from memory into f7
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fnmadd.d f26, f29, f7, f18, dyn # perform operation
fnmadd.d f26, f29, f7, f18, rdn # perform operation
fnmadd.d f26, f29, f7, f18, rmm # perform operation
fnmadd.d f26, f29, f7, f18, rne # perform operation
fnmadd.d f26, f29, f7, f18, rtz # perform operation
fnmadd.d f26, f29, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f29, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f29, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f29, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f29, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f29, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x1)
li x11, 0x611ef732f4e4c161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x27f46e468779962e # load x3 with value 0x27f46e468779962e
sd x3, 0(x2) # store 0x27f46e468779962e in memory
fld f18, 0(x2) # load 0x27f46e468779962e from memory into f18
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
fnmadd.d f11, f2, f18, f4, dyn # perform operation
fnmadd.d f11, f2, f18, f4, rdn # perform operation
fnmadd.d f11, f2, f18, f4, rmm # perform operation
fnmadd.d f11, f2, f18, f4, rne # perform operation
fnmadd.d f11, f2, f18, f4, rtz # perform operation
fnmadd.d f11, f2, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f2, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f2, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f2, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f2, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f2, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000001)
li x3, 0x0d7c8454a448e514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0xc6a53087223de722 # load x3 with value 0xc6a53087223de722
sd x3, 0(x2) # store 0xc6a53087223de722 in memory
fld f4, 0(x2) # load 0xc6a53087223de722 from memory into f4
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fnmadd.d f3, f1, f4, f25, dyn # perform operation
fnmadd.d f3, f1, f4, f25, rdn # perform operation
fnmadd.d f3, f1, f4, f25, rmm # perform operation
fnmadd.d f3, f1, f4, f25, rne # perform operation
fnmadd.d f3, f1, f4, f25, rtz # perform operation
fnmadd.d f3, f1, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f1, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f1, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f1, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f1, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f1, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000000)
li x6, 0xa85df5d1d5386fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
li x3, 0x16cf0e13d20904e6 # load x3 with value 0x16cf0e13d20904e6
sd x3, 0(x2) # store 0x16cf0e13d20904e6 in memory
fld f7, 0(x2) # load 0x16cf0e13d20904e6 from memory into f7
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fnmadd.d f6, f18, f7, f25, dyn # perform operation
fnmadd.d f6, f18, f7, f25, rdn # perform operation
fnmadd.d f6, f18, f7, f25, rmm # perform operation
fnmadd.d f6, f18, f7, f25, rne # perform operation
fnmadd.d f6, f18, f7, f25, rtz # perform operation
fnmadd.d f6, f18, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f18, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfff0000000000000)
li x9, 0x5496755bce25c891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0xea627bc313ed4ef8 # load x3 with value 0xea627bc313ed4ef8
sd x3, 0(x2) # store 0xea627bc313ed4ef8 in memory
fld f4, 0(x2) # load 0xea627bc313ed4ef8 from memory into f4
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fnmadd.d f9, f8, f4, f5, dyn # perform operation
fnmadd.d f9, f8, f4, f5, rdn # perform operation
fnmadd.d f9, f8, f4, f5, rmm # perform operation
fnmadd.d f9, f8, f4, f5, rne # perform operation
fnmadd.d f9, f8, f4, f5, rtz # perform operation
fnmadd.d f9, f8, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff8000000000000)
li x27, 0xfdb54dcd3edd89e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x0e41f8f63e669e00 # load x3 with value 0x0e41f8f63e669e00
sd x3, 0(x2) # store 0x0e41f8f63e669e00 in memory
fld f14, 0(x2) # load 0x0e41f8f63e669e00 from memory into f14
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmadd.d f27, f7, f14, f24, dyn # perform operation
fnmadd.d f27, f7, f14, f24, rdn # perform operation
fnmadd.d f27, f7, f14, f24, rmm # perform operation
fnmadd.d f27, f7, f14, f24, rne # perform operation
fnmadd.d f27, f7, f14, f24, rtz # perform operation
fnmadd.d f27, f7, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f7, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f7, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f7, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f7, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f7, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fffffffffffffff)
li x19, 0x864defc092811c4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0x6f2667fd0044ff2a # load x3 with value 0x6f2667fd0044ff2a
sd x3, 0(x2) # store 0x6f2667fd0044ff2a in memory
fld f2, 0(x2) # load 0x6f2667fd0044ff2a from memory into f2
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fnmadd.d f19, f27, f2, f9, dyn # perform operation
fnmadd.d f19, f27, f2, f9, rdn # perform operation
fnmadd.d f19, f27, f2, f9, rmm # perform operation
fnmadd.d f19, f27, f2, f9, rne # perform operation
fnmadd.d f19, f27, f2, f9, rtz # perform operation
fnmadd.d f19, f27, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f27, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f27, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f27, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f27, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f27, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000001)
li x10, 0x2d6a55cb9959f120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x929e28d720e2543e # load x3 with value 0x929e28d720e2543e
sd x3, 0(x2) # store 0x929e28d720e2543e in memory
fld f4, 0(x2) # load 0x929e28d720e2543e from memory into f4
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fnmadd.d f10, f23, f4, f24, dyn # perform operation
fnmadd.d f10, f23, f4, f24, rdn # perform operation
fnmadd.d f10, f23, f4, f24, rmm # perform operation
fnmadd.d f10, f23, f4, f24, rne # perform operation
fnmadd.d f10, f23, f4, f24, rtz # perform operation
fnmadd.d f10, f23, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f23, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f23, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f23, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f23, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f23, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff7ffffffffffff)
li x29, 0xf55b2cd096825855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0xc791cec11729b731 # load x3 with value 0xc791cec11729b731
sd x3, 0(x2) # store 0xc791cec11729b731 in memory
fld f31, 0(x2) # load 0xc791cec11729b731 from memory into f31
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fnmadd.d f29, f21, f31, f22, dyn # perform operation
fnmadd.d f29, f21, f31, f22, rdn # perform operation
fnmadd.d f29, f21, f31, f22, rmm # perform operation
fnmadd.d f29, f21, f31, f22, rne # perform operation
fnmadd.d f29, f21, f31, f22, rtz # perform operation
fnmadd.d f29, f21, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f21, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f21, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f21, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f21, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f21, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x5a392534a57711ad)
li x25, 0xd227a37aa8d666af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x6650a1fbe1b4a84a # load x3 with value 0x6650a1fbe1b4a84a
sd x3, 0(x2) # store 0x6650a1fbe1b4a84a in memory
fld f13, 0(x2) # load 0x6650a1fbe1b4a84a from memory into f13
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fnmadd.d f25, f9, f13, f5, dyn # perform operation
fnmadd.d f25, f9, f13, f5, rdn # perform operation
fnmadd.d f25, f9, f13, f5, rmm # perform operation
fnmadd.d f25, f9, f13, f5, rne # perform operation
fnmadd.d f25, f9, f13, f5, rtz # perform operation
fnmadd.d f25, f9, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f9, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f9, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xa6e895993737426c)
li x8, 0xa59c73f634580345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x783febe434b3cb9e # load x3 with value 0x783febe434b3cb9e
sd x3, 0(x2) # store 0x783febe434b3cb9e in memory
fld f24, 0(x2) # load 0x783febe434b3cb9e from memory into f24
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmadd.d f8, f12, f24, f17, dyn # perform operation
fnmadd.d f8, f12, f24, f17, rdn # perform operation
fnmadd.d f8, f12, f24, f17, rmm # perform operation
fnmadd.d f8, f12, f24, f17, rne # perform operation
fnmadd.d f8, f12, f24, f17, rtz # perform operation
fnmadd.d f8, f12, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x0)
li x1, 0x0783504b069cd91f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0xb1219b203a6774a6 # load x3 with value 0xb1219b203a6774a6
sd x3, 0(x2) # store 0xb1219b203a6774a6 in memory
fld f29, 0(x2) # load 0xb1219b203a6774a6 from memory into f29
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fnmadd.d f1, f10, f29, f12, dyn # perform operation
fnmadd.d f1, f10, f29, f12, rdn # perform operation
fnmadd.d f1, f10, f29, f12, rmm # perform operation
fnmadd.d f1, f10, f29, f12, rne # perform operation
fnmadd.d f1, f10, f29, f12, rtz # perform operation
fnmadd.d f1, f10, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f10, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000000)
li x6, 0xa5750152f2c6c1e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x8ad122c047f95781 # load x3 with value 0x8ad122c047f95781
sd x3, 0(x2) # store 0x8ad122c047f95781 in memory
fld f17, 0(x2) # load 0x8ad122c047f95781 from memory into f17
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
fnmadd.d f6, f31, f17, f3, dyn # perform operation
fnmadd.d f6, f31, f17, f3, rdn # perform operation
fnmadd.d f6, f31, f17, f3, rmm # perform operation
fnmadd.d f6, f31, f17, f3, rne # perform operation
fnmadd.d f6, f31, f17, f3, rtz # perform operation
fnmadd.d f6, f31, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f31, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f31, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff0000000000000)
li x16, 0x964230ea779130e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x6ca5897958c2a541 # load x3 with value 0x6ca5897958c2a541
sd x3, 0(x2) # store 0x6ca5897958c2a541 in memory
fld f11, 0(x2) # load 0x6ca5897958c2a541 from memory into f11
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fnmadd.d f16, f24, f11, f4, dyn # perform operation
fnmadd.d f16, f24, f11, f4, rdn # perform operation
fnmadd.d f16, f24, f11, f4, rmm # perform operation
fnmadd.d f16, f24, f11, f4, rne # perform operation
fnmadd.d f16, f24, f11, f4, rtz # perform operation
fnmadd.d f16, f24, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f24, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f24, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f24, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f24, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f24, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff0000000000000)
li x5, 0x951b8e0869f4f275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xeb7dac423378ddfe # load x3 with value 0xeb7dac423378ddfe
sd x3, 0(x2) # store 0xeb7dac423378ddfe in memory
fld f13, 0(x2) # load 0xeb7dac423378ddfe from memory into f13
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f5, f7, f13, f22, dyn # perform operation
fnmadd.d f5, f7, f13, f22, rdn # perform operation
fnmadd.d f5, f7, f13, f22, rmm # perform operation
fnmadd.d f5, f7, f13, f22, rne # perform operation
fnmadd.d f5, f7, f13, f22, rtz # perform operation
fnmadd.d f5, f7, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f7, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff8000000000000)
li x3, 0x4dffbee3049a1782 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xca290febd846ed6b # load x3 with value 0xca290febd846ed6b
sd x3, 0(x2) # store 0xca290febd846ed6b in memory
fld f15, 0(x2) # load 0xca290febd846ed6b from memory into f15
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fnmadd.d f3, f2, f15, f21, dyn # perform operation
fnmadd.d f3, f2, f15, f21, rdn # perform operation
fnmadd.d f3, f2, f15, f21, rmm # perform operation
fnmadd.d f3, f2, f15, f21, rne # perform operation
fnmadd.d f3, f2, f15, f21, rtz # perform operation
fnmadd.d f3, f2, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff8000000000000)
li x6, 0x5df16c7a458fb024 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x80e55b0a4b3ff238 # load x3 with value 0x80e55b0a4b3ff238
sd x3, 0(x2) # store 0x80e55b0a4b3ff238 in memory
fld f8, 0(x2) # load 0x80e55b0a4b3ff238 from memory into f8
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fnmadd.d f6, f29, f8, f2, dyn # perform operation
fnmadd.d f6, f29, f8, f2, rdn # perform operation
fnmadd.d f6, f29, f8, f2, rmm # perform operation
fnmadd.d f6, f29, f8, f2, rne # perform operation
fnmadd.d f6, f29, f8, f2, rtz # perform operation
fnmadd.d f6, f29, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f29, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x4000000000000000)
li x9, 0x1048e78dfe943225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x9f0f73204d737c14 # load x3 with value 0x9f0f73204d737c14
sd x3, 0(x2) # store 0x9f0f73204d737c14 in memory
fld f29, 0(x2) # load 0x9f0f73204d737c14 from memory into f29
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fnmadd.d f9, f12, f29, f7, dyn # perform operation
fnmadd.d f9, f12, f29, f7, rdn # perform operation
fnmadd.d f9, f12, f29, f7, rmm # perform operation
fnmadd.d f9, f12, f29, f7, rne # perform operation
fnmadd.d f9, f12, f29, f7, rtz # perform operation
fnmadd.d f9, f12, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f12, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f12, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f12, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f12, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f12, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xc000000000000000)
li x20, 0xb98c465e83db76a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0xa526522191c1808a # load x3 with value 0xa526522191c1808a
sd x3, 0(x2) # store 0xa526522191c1808a in memory
fld f7, 0(x2) # load 0xa526522191c1808a from memory into f7
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fnmadd.d f20, f8, f7, f17, dyn # perform operation
fnmadd.d f20, f8, f7, f17, rdn # perform operation
fnmadd.d f20, f8, f7, f17, rmm # perform operation
fnmadd.d f20, f8, f7, f17, rne # perform operation
fnmadd.d f20, f8, f7, f17, rtz # perform operation
fnmadd.d f20, f8, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f8, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f8, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x10000000000000)
li x7, 0xa3be752b661891e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x8a8708999da1c94e # load x3 with value 0x8a8708999da1c94e
sd x3, 0(x2) # store 0x8a8708999da1c94e in memory
fld f21, 0(x2) # load 0x8a8708999da1c94e from memory into f21
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fnmadd.d f7, f18, f21, f10, dyn # perform operation
fnmadd.d f7, f18, f21, f10, rdn # perform operation
fnmadd.d f7, f18, f21, f10, rmm # perform operation
fnmadd.d f7, f18, f21, f10, rne # perform operation
fnmadd.d f7, f18, f21, f10, rtz # perform operation
fnmadd.d f7, f18, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f18, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8010000000000000)
li x14, 0x5f14a19d7c3f53a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x453a6da322640a64 # load x3 with value 0x453a6da322640a64
sd x3, 0(x2) # store 0x453a6da322640a64 in memory
fld f13, 0(x2) # load 0x453a6da322640a64 from memory into f13
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fnmadd.d f14, f6, f13, f23, dyn # perform operation
fnmadd.d f14, f6, f13, f23, rdn # perform operation
fnmadd.d f14, f6, f13, f23, rmm # perform operation
fnmadd.d f14, f6, f13, f23, rne # perform operation
fnmadd.d f14, f6, f13, f23, rtz # perform operation
fnmadd.d f14, f6, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f6, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f6, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fefffffffffffff)
li x21, 0xcbeb3d293ae157c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x8512f1b4cc2f18fd # load x3 with value 0x8512f1b4cc2f18fd
sd x3, 0(x2) # store 0x8512f1b4cc2f18fd in memory
fld f3, 0(x2) # load 0x8512f1b4cc2f18fd from memory into f3
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fnmadd.d f21, f6, f3, f10, dyn # perform operation
fnmadd.d f21, f6, f3, f10, rdn # perform operation
fnmadd.d f21, f6, f3, f10, rmm # perform operation
fnmadd.d f21, f6, f3, f10, rne # perform operation
fnmadd.d f21, f6, f3, f10, rtz # perform operation
fnmadd.d f21, f6, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f6, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xffefffffffffffff)
li x11, 0xd9b4faead0a55f8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0xf8dd693c12195529 # load x3 with value 0xf8dd693c12195529
sd x3, 0(x2) # store 0xf8dd693c12195529 in memory
fld f1, 0(x2) # load 0xf8dd693c12195529 from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fnmadd.d f11, f17, f1, f3, dyn # perform operation
fnmadd.d f11, f17, f1, f3, rdn # perform operation
fnmadd.d f11, f17, f1, f3, rmm # perform operation
fnmadd.d f11, f17, f1, f3, rne # perform operation
fnmadd.d f11, f17, f1, f3, rtz # perform operation
fnmadd.d f11, f17, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfffffffffffff)
li x9, 0xf65dd327fffc02d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x68d87a8e19289340 # load x3 with value 0x68d87a8e19289340
sd x3, 0(x2) # store 0x68d87a8e19289340 in memory
fld f29, 0(x2) # load 0x68d87a8e19289340 from memory into f29
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fnmadd.d f9, f31, f29, f17, dyn # perform operation
fnmadd.d f9, f31, f29, f17, rdn # perform operation
fnmadd.d f9, f31, f29, f17, rmm # perform operation
fnmadd.d f9, f31, f29, f17, rne # perform operation
fnmadd.d f9, f31, f29, f17, rtz # perform operation
fnmadd.d f9, f31, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f31, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f31, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f31, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f31, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f31, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x800fffffffffffff)
li x17, 0x882e8d15b7978e08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x4568db9f5f0a6130 # load x3 with value 0x4568db9f5f0a6130
sd x3, 0(x2) # store 0x4568db9f5f0a6130 in memory
fld f7, 0(x2) # load 0x4568db9f5f0a6130 from memory into f7
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fnmadd.d f17, f2, f7, f16, dyn # perform operation
fnmadd.d f17, f2, f7, f16, rdn # perform operation
fnmadd.d f17, f2, f7, f16, rmm # perform operation
fnmadd.d f17, f2, f7, f16, rne # perform operation
fnmadd.d f17, f2, f7, f16, rtz # perform operation
fnmadd.d f17, f2, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f2, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000)
li x11, 0x83dfb4a1f5e88dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x88d0eaab6df4c08f # load x3 with value 0x88d0eaab6df4c08f
sd x3, 0(x2) # store 0x88d0eaab6df4c08f in memory
fld f15, 0(x2) # load 0x88d0eaab6df4c08f from memory into f15
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fnmadd.d f11, f28, f15, f24, dyn # perform operation
fnmadd.d f11, f28, f15, f24, rdn # perform operation
fnmadd.d f11, f28, f15, f24, rmm # perform operation
fnmadd.d f11, f28, f15, f24, rne # perform operation
fnmadd.d f11, f28, f15, f24, rtz # perform operation
fnmadd.d f11, f28, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f28, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f28, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f28, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f28, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f28, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8008000000000000)
li x12, 0x6a3a655c7ce58456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0xd8a2f306124ea982 # load x3 with value 0xd8a2f306124ea982
sd x3, 0(x2) # store 0xd8a2f306124ea982 in memory
fld f1, 0(x2) # load 0xd8a2f306124ea982 from memory into f1
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fnmadd.d f12, f23, f1, f26, dyn # perform operation
fnmadd.d f12, f23, f1, f26, rdn # perform operation
fnmadd.d f12, f23, f1, f26, rmm # perform operation
fnmadd.d f12, f23, f1, f26, rne # perform operation
fnmadd.d f12, f23, f1, f26, rtz # perform operation
fnmadd.d f12, f23, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f23, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f23, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f23, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f23, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f23, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x1)
li x16, 0x8f52d0aeb5a53074 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x06dc6da4871115cd # load x3 with value 0x06dc6da4871115cd
sd x3, 0(x2) # store 0x06dc6da4871115cd in memory
fld f30, 0(x2) # load 0x06dc6da4871115cd from memory into f30
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fnmadd.d f16, f11, f30, f31, dyn # perform operation
fnmadd.d f16, f11, f30, f31, rdn # perform operation
fnmadd.d f16, f11, f30, f31, rmm # perform operation
fnmadd.d f16, f11, f30, f31, rne # perform operation
fnmadd.d f16, f11, f30, f31, rtz # perform operation
fnmadd.d f16, f11, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f11, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000001)
li x23, 0xb8f154edf98d3788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x63da0cf6833d025f # load x3 with value 0x63da0cf6833d025f
sd x3, 0(x2) # store 0x63da0cf6833d025f in memory
fld f29, 0(x2) # load 0x63da0cf6833d025f from memory into f29
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fnmadd.d f23, f27, f29, f13, dyn # perform operation
fnmadd.d f23, f27, f29, f13, rdn # perform operation
fnmadd.d f23, f27, f29, f13, rmm # perform operation
fnmadd.d f23, f27, f29, f13, rne # perform operation
fnmadd.d f23, f27, f29, f13, rtz # perform operation
fnmadd.d f23, f27, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f27, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f27, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f27, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f27, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f27, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000000)
li x6, 0x8e7984e77c24412d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x04a2226e785a2091 # load x3 with value 0x04a2226e785a2091
sd x3, 0(x2) # store 0x04a2226e785a2091 in memory
fld f3, 0(x2) # load 0x04a2226e785a2091 from memory into f3
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fnmadd.d f6, f18, f3, f2, dyn # perform operation
fnmadd.d f6, f18, f3, f2, rdn # perform operation
fnmadd.d f6, f18, f3, f2, rmm # perform operation
fnmadd.d f6, f18, f3, f2, rne # perform operation
fnmadd.d f6, f18, f3, f2, rtz # perform operation
fnmadd.d f6, f18, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f18, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f18, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f18, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f18, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f18, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfff0000000000000)
li x30, 0x89f259296f042592 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x95198458707e2e1b # load x3 with value 0x95198458707e2e1b
sd x3, 0(x2) # store 0x95198458707e2e1b in memory
fld f1, 0(x2) # load 0x95198458707e2e1b from memory into f1
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fnmadd.d f30, f11, f1, f3, dyn # perform operation
fnmadd.d f30, f11, f1, f3, rdn # perform operation
fnmadd.d f30, f11, f1, f3, rmm # perform operation
fnmadd.d f30, f11, f1, f3, rne # perform operation
fnmadd.d f30, f11, f1, f3, rtz # perform operation
fnmadd.d f30, f11, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f11, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff8000000000000)
li x23, 0xa0bdc2825f4669eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x94cb3eb2df4add8e # load x3 with value 0x94cb3eb2df4add8e
sd x3, 0(x2) # store 0x94cb3eb2df4add8e in memory
fld f11, 0(x2) # load 0x94cb3eb2df4add8e from memory into f11
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fnmadd.d f23, f6, f11, f7, dyn # perform operation
fnmadd.d f23, f6, f11, f7, rdn # perform operation
fnmadd.d f23, f6, f11, f7, rmm # perform operation
fnmadd.d f23, f6, f11, f7, rne # perform operation
fnmadd.d f23, f6, f11, f7, rtz # perform operation
fnmadd.d f23, f6, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f6, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fffffffffffffff)
li x6, 0x726bf2d3bbb8f10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0xd2961bb7e661c126 # load x3 with value 0xd2961bb7e661c126
sd x3, 0(x2) # store 0xd2961bb7e661c126 in memory
fld f23, 0(x2) # load 0xd2961bb7e661c126 from memory into f23
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fnmadd.d f6, f5, f23, f26, dyn # perform operation
fnmadd.d f6, f5, f23, f26, rdn # perform operation
fnmadd.d f6, f5, f23, f26, rmm # perform operation
fnmadd.d f6, f5, f23, f26, rne # perform operation
fnmadd.d f6, f5, f23, f26, rtz # perform operation
fnmadd.d f6, f5, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f5, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f5, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f5, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f5, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f5, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000001)
li x2, 0x2d10cddf2b83a44b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0xbaaab348ba48d06f # load x3 with value 0xbaaab348ba48d06f
sd x3, 0(x2) # store 0xbaaab348ba48d06f in memory
fld f15, 0(x2) # load 0xbaaab348ba48d06f from memory into f15
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fnmadd.d f2, f8, f15, f4, dyn # perform operation
fnmadd.d f2, f8, f15, f4, rdn # perform operation
fnmadd.d f2, f8, f15, f4, rmm # perform operation
fnmadd.d f2, f8, f15, f4, rne # perform operation
fnmadd.d f2, f8, f15, f4, rtz # perform operation
fnmadd.d f2, f8, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f8, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f8, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f8, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f8, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f8, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff7ffffffffffff)
li x29, 0x7ecce8775fd2323d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x6106889cb1c8f90f # load x3 with value 0x6106889cb1c8f90f
sd x3, 0(x2) # store 0x6106889cb1c8f90f in memory
fld f5, 0(x2) # load 0x6106889cb1c8f90f from memory into f5
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fnmadd.d f29, f2, f5, f1, dyn # perform operation
fnmadd.d f29, f2, f5, f1, rdn # perform operation
fnmadd.d f29, f2, f5, f1, rmm # perform operation
fnmadd.d f29, f2, f5, f1, rne # perform operation
fnmadd.d f29, f2, f5, f1, rtz # perform operation
fnmadd.d f29, f2, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f2, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f2, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x5a392534a57711ad)
li x16, 0x60ae1fbce4b2fede # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x38aeaa78fd5e3401 # load x3 with value 0x38aeaa78fd5e3401
sd x3, 0(x2) # store 0x38aeaa78fd5e3401 in memory
fld f27, 0(x2) # load 0x38aeaa78fd5e3401 from memory into f27
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmadd.d f16, f8, f27, f14, dyn # perform operation
fnmadd.d f16, f8, f27, f14, rdn # perform operation
fnmadd.d f16, f8, f27, f14, rmm # perform operation
fnmadd.d f16, f8, f27, f14, rne # perform operation
fnmadd.d f16, f8, f27, f14, rtz # perform operation
fnmadd.d f16, f8, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f8, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f8, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f8, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f8, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f8, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xa6e895993737426c)
li x30, 0x1339b4b87b1276a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xd3e461573a7ff608 # load x3 with value 0xd3e461573a7ff608
sd x3, 0(x2) # store 0xd3e461573a7ff608 in memory
fld f27, 0(x2) # load 0xd3e461573a7ff608 from memory into f27
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fnmadd.d f30, f14, f27, f2, dyn # perform operation
fnmadd.d f30, f14, f27, f2, rdn # perform operation
fnmadd.d f30, f14, f27, f2, rmm # perform operation
fnmadd.d f30, f14, f27, f2, rne # perform operation
fnmadd.d f30, f14, f27, f2, rtz # perform operation
fnmadd.d f30, f14, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f14, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f14, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f14, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f14, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f14, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x0)
li x16, 0x19c99c8b19c95005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x8cb4efd53def6153 # load x3 with value 0x8cb4efd53def6153
sd x3, 0(x2) # store 0x8cb4efd53def6153 in memory
fld f6, 0(x2) # load 0x8cb4efd53def6153 from memory into f6
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fnmadd.d f16, f8, f6, f21, dyn # perform operation
fnmadd.d f16, f8, f6, f21, rdn # perform operation
fnmadd.d f16, f8, f6, f21, rmm # perform operation
fnmadd.d f16, f8, f6, f21, rne # perform operation
fnmadd.d f16, f8, f6, f21, rtz # perform operation
fnmadd.d f16, f8, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f8, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f8, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000000)
li x11, 0x620de254ff96cec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x959e58ace681d68f # load x3 with value 0x959e58ace681d68f
sd x3, 0(x2) # store 0x959e58ace681d68f in memory
fld f24, 0(x2) # load 0x959e58ace681d68f from memory into f24
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fnmadd.d f11, f16, f24, f30, dyn # perform operation
fnmadd.d f11, f16, f24, f30, rdn # perform operation
fnmadd.d f11, f16, f24, f30, rmm # perform operation
fnmadd.d f11, f16, f24, f30, rne # perform operation
fnmadd.d f11, f16, f24, f30, rtz # perform operation
fnmadd.d f11, f16, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff0000000000000)
li x23, 0x7c75dc8654d73683 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x4cd48bd132da2d46 # load x3 with value 0x4cd48bd132da2d46
sd x3, 0(x2) # store 0x4cd48bd132da2d46 in memory
fld f10, 0(x2) # load 0x4cd48bd132da2d46 from memory into f10
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
fnmadd.d f23, f3, f10, f28, dyn # perform operation
fnmadd.d f23, f3, f10, f28, rdn # perform operation
fnmadd.d f23, f3, f10, f28, rmm # perform operation
fnmadd.d f23, f3, f10, f28, rne # perform operation
fnmadd.d f23, f3, f10, f28, rtz # perform operation
fnmadd.d f23, f3, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f3, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff0000000000000)
li x7, 0xcb4599bb3b158640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x74474a3f9e7be95a # load x3 with value 0x74474a3f9e7be95a
sd x3, 0(x2) # store 0x74474a3f9e7be95a in memory
fld f8, 0(x2) # load 0x74474a3f9e7be95a from memory into f8
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fnmadd.d f7, f2, f8, f24, dyn # perform operation
fnmadd.d f7, f2, f8, f24, rdn # perform operation
fnmadd.d f7, f2, f8, f24, rmm # perform operation
fnmadd.d f7, f2, f8, f24, rne # perform operation
fnmadd.d f7, f2, f8, f24, rtz # perform operation
fnmadd.d f7, f2, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f2, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff8000000000000)
li x30, 0xcfd2f86a02f0d966 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xcb962fb5488d1111 # load x3 with value 0xcb962fb5488d1111
sd x3, 0(x2) # store 0xcb962fb5488d1111 in memory
fld f4, 0(x2) # load 0xcb962fb5488d1111 from memory into f4
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fnmadd.d f30, f9, f4, f6, dyn # perform operation
fnmadd.d f30, f9, f4, f6, rdn # perform operation
fnmadd.d f30, f9, f4, f6, rmm # perform operation
fnmadd.d f30, f9, f4, f6, rne # perform operation
fnmadd.d f30, f9, f4, f6, rtz # perform operation
fnmadd.d f30, f9, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f9, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f9, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff8000000000000)
li x26, 0xa805582f38f4adef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x519899de17eb5dab # load x3 with value 0x519899de17eb5dab
sd x3, 0(x2) # store 0x519899de17eb5dab in memory
fld f21, 0(x2) # load 0x519899de17eb5dab from memory into f21
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fnmadd.d f26, f24, f21, f23, dyn # perform operation
fnmadd.d f26, f24, f21, f23, rdn # perform operation
fnmadd.d f26, f24, f21, f23, rmm # perform operation
fnmadd.d f26, f24, f21, f23, rne # perform operation
fnmadd.d f26, f24, f21, f23, rtz # perform operation
fnmadd.d f26, f24, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f24, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x4000000000000000)
li x27, 0xabba1c797909b7cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x7213b61b1c1eb3c8 # load x3 with value 0x7213b61b1c1eb3c8
sd x3, 0(x2) # store 0x7213b61b1c1eb3c8 in memory
fld f21, 0(x2) # load 0x7213b61b1c1eb3c8 from memory into f21
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fnmadd.d f27, f7, f21, f26, dyn # perform operation
fnmadd.d f27, f7, f21, f26, rdn # perform operation
fnmadd.d f27, f7, f21, f26, rmm # perform operation
fnmadd.d f27, f7, f21, f26, rne # perform operation
fnmadd.d f27, f7, f21, f26, rtz # perform operation
fnmadd.d f27, f7, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f7, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xc000000000000000)
li x1, 0x33f513752070832b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0x2e3024be49c5cd21 # load x3 with value 0x2e3024be49c5cd21
sd x3, 0(x2) # store 0x2e3024be49c5cd21 in memory
fld f15, 0(x2) # load 0x2e3024be49c5cd21 from memory into f15
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fnmadd.d f1, f18, f15, f8, dyn # perform operation
fnmadd.d f1, f18, f15, f8, rdn # perform operation
fnmadd.d f1, f18, f15, f8, rmm # perform operation
fnmadd.d f1, f18, f15, f8, rne # perform operation
fnmadd.d f1, f18, f15, f8, rtz # perform operation
fnmadd.d f1, f18, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f18, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f18, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x10000000000000)
li x1, 0x273476adf65c3f10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xa2b4e8eb84df95b0 # load x3 with value 0xa2b4e8eb84df95b0
sd x3, 0(x2) # store 0xa2b4e8eb84df95b0 in memory
fld f22, 0(x2) # load 0xa2b4e8eb84df95b0 from memory into f22
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fnmadd.d f1, f16, f22, f10, dyn # perform operation
fnmadd.d f1, f16, f22, f10, rdn # perform operation
fnmadd.d f1, f16, f22, f10, rmm # perform operation
fnmadd.d f1, f16, f22, f10, rne # perform operation
fnmadd.d f1, f16, f22, f10, rtz # perform operation
fnmadd.d f1, f16, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f16, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f16, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8010000000000000)
li x27, 0x77ed845f4c752fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0xa02a5e31217eb985 # load x3 with value 0xa02a5e31217eb985
sd x3, 0(x2) # store 0xa02a5e31217eb985 in memory
fld f8, 0(x2) # load 0xa02a5e31217eb985 from memory into f8
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fnmadd.d f27, f1, f8, f13, dyn # perform operation
fnmadd.d f27, f1, f8, f13, rdn # perform operation
fnmadd.d f27, f1, f8, f13, rmm # perform operation
fnmadd.d f27, f1, f8, f13, rne # perform operation
fnmadd.d f27, f1, f8, f13, rtz # perform operation
fnmadd.d f27, f1, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f1, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f1, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f1, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f1, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f1, f8, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fefffffffffffff)
li x9, 0x5b1099704ca8d376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0xaafd0b15912d9e24 # load x3 with value 0xaafd0b15912d9e24
sd x3, 0(x2) # store 0xaafd0b15912d9e24 in memory
fld f3, 0(x2) # load 0xaafd0b15912d9e24 from memory into f3
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fnmadd.d f9, f21, f3, f20, dyn # perform operation
fnmadd.d f9, f21, f3, f20, rdn # perform operation
fnmadd.d f9, f21, f3, f20, rmm # perform operation
fnmadd.d f9, f21, f3, f20, rne # perform operation
fnmadd.d f9, f21, f3, f20, rtz # perform operation
fnmadd.d f9, f21, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f21, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f21, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xffefffffffffffff)
li x19, 0xf15947d11992233c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0xc3c84c378dd761d7 # load x3 with value 0xc3c84c378dd761d7
sd x3, 0(x2) # store 0xc3c84c378dd761d7 in memory
fld f10, 0(x2) # load 0xc3c84c378dd761d7 from memory into f10
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fnmadd.d f19, f8, f10, f4, dyn # perform operation
fnmadd.d f19, f8, f10, f4, rdn # perform operation
fnmadd.d f19, f8, f10, f4, rmm # perform operation
fnmadd.d f19, f8, f10, f4, rne # perform operation
fnmadd.d f19, f8, f10, f4, rtz # perform operation
fnmadd.d f19, f8, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfffffffffffff)
li x4, 0x9c9c901beda3501d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x6987616f0af85f7e # load x3 with value 0x6987616f0af85f7e
sd x3, 0(x2) # store 0x6987616f0af85f7e in memory
fld f6, 0(x2) # load 0x6987616f0af85f7e from memory into f6
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
fnmadd.d f4, f14, f6, f5, dyn # perform operation
fnmadd.d f4, f14, f6, f5, rdn # perform operation
fnmadd.d f4, f14, f6, f5, rmm # perform operation
fnmadd.d f4, f14, f6, f5, rne # perform operation
fnmadd.d f4, f14, f6, f5, rtz # perform operation
fnmadd.d f4, f14, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f14, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x800fffffffffffff)
li x30, 0x399638e8050baec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xea8f1ba6d29b5e50 # load x3 with value 0xea8f1ba6d29b5e50
sd x3, 0(x2) # store 0xea8f1ba6d29b5e50 in memory
fld f16, 0(x2) # load 0xea8f1ba6d29b5e50 from memory into f16
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fnmadd.d f30, f14, f16, f10, dyn # perform operation
fnmadd.d f30, f14, f16, f10, rdn # perform operation
fnmadd.d f30, f14, f16, f10, rmm # perform operation
fnmadd.d f30, f14, f16, f10, rne # perform operation
fnmadd.d f30, f14, f16, f10, rtz # perform operation
fnmadd.d f30, f14, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f14, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f14, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f14, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f14, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f14, f16, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000)
li x2, 0x9c7c1b81c68f71c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x36681005627ba9c4 # load x3 with value 0x36681005627ba9c4
sd x3, 0(x2) # store 0x36681005627ba9c4 in memory
fld f22, 0(x2) # load 0x36681005627ba9c4 from memory into f22
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fnmadd.d f2, f29, f22, f3, dyn # perform operation
fnmadd.d f2, f29, f22, f3, rdn # perform operation
fnmadd.d f2, f29, f22, f3, rmm # perform operation
fnmadd.d f2, f29, f22, f3, rne # perform operation
fnmadd.d f2, f29, f22, f3, rtz # perform operation
fnmadd.d f2, f29, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f29, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8008000000000000)
li x12, 0x6963f1acaf783f8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x29b389f1086a4ab2 # load x3 with value 0x29b389f1086a4ab2
sd x3, 0(x2) # store 0x29b389f1086a4ab2 in memory
fld f14, 0(x2) # load 0x29b389f1086a4ab2 from memory into f14
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fnmadd.d f12, f13, f14, f24, dyn # perform operation
fnmadd.d f12, f13, f14, f24, rdn # perform operation
fnmadd.d f12, f13, f14, f24, rmm # perform operation
fnmadd.d f12, f13, f14, f24, rne # perform operation
fnmadd.d f12, f13, f14, f24, rtz # perform operation
fnmadd.d f12, f13, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x1)
li x28, 0xee5caa18e688d21f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0x8e1461f89181624d # load x3 with value 0x8e1461f89181624d
sd x3, 0(x2) # store 0x8e1461f89181624d in memory
fld f17, 0(x2) # load 0x8e1461f89181624d from memory into f17
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f28, f23, f17, f12, dyn # perform operation
fnmadd.d f28, f23, f17, f12, rdn # perform operation
fnmadd.d f28, f23, f17, f12, rmm # perform operation
fnmadd.d f28, f23, f17, f12, rne # perform operation
fnmadd.d f28, f23, f17, f12, rtz # perform operation
fnmadd.d f28, f23, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f23, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f23, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f23, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f23, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f23, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000001)
li x5, 0x055af575d2023f8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0xe43ba0fc53de5c46 # load x3 with value 0xe43ba0fc53de5c46
sd x3, 0(x2) # store 0xe43ba0fc53de5c46 in memory
fld f17, 0(x2) # load 0xe43ba0fc53de5c46 from memory into f17
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fnmadd.d f5, f6, f17, f1, dyn # perform operation
fnmadd.d f5, f6, f17, f1, rdn # perform operation
fnmadd.d f5, f6, f17, f1, rmm # perform operation
fnmadd.d f5, f6, f17, f1, rne # perform operation
fnmadd.d f5, f6, f17, f1, rtz # perform operation
fnmadd.d f5, f6, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f6, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f6, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000000)
li x4, 0x72af6b5ed7d86d98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x6c6efa4ceb9c5dad # load x3 with value 0x6c6efa4ceb9c5dad
sd x3, 0(x2) # store 0x6c6efa4ceb9c5dad in memory
fld f14, 0(x2) # load 0x6c6efa4ceb9c5dad from memory into f14
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fnmadd.d f4, f15, f14, f10, dyn # perform operation
fnmadd.d f4, f15, f14, f10, rdn # perform operation
fnmadd.d f4, f15, f14, f10, rmm # perform operation
fnmadd.d f4, f15, f14, f10, rne # perform operation
fnmadd.d f4, f15, f14, f10, rtz # perform operation
fnmadd.d f4, f15, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f15, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfff0000000000000)
li x13, 0x0bcf2d542b82631f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x9ea621a8efa585e9 # load x3 with value 0x9ea621a8efa585e9
sd x3, 0(x2) # store 0x9ea621a8efa585e9 in memory
fld f6, 0(x2) # load 0x9ea621a8efa585e9 from memory into f6
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fnmadd.d f13, f16, f6, f14, dyn # perform operation
fnmadd.d f13, f16, f6, f14, rdn # perform operation
fnmadd.d f13, f16, f6, f14, rmm # perform operation
fnmadd.d f13, f16, f6, f14, rne # perform operation
fnmadd.d f13, f16, f6, f14, rtz # perform operation
fnmadd.d f13, f16, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f16, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff8000000000000)
li x12, 0xbfae0f965b866324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x3274e73b2858ec93 # load x3 with value 0x3274e73b2858ec93
sd x3, 0(x2) # store 0x3274e73b2858ec93 in memory
fld f27, 0(x2) # load 0x3274e73b2858ec93 from memory into f27
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fnmadd.d f12, f2, f27, f20, dyn # perform operation
fnmadd.d f12, f2, f27, f20, rdn # perform operation
fnmadd.d f12, f2, f27, f20, rmm # perform operation
fnmadd.d f12, f2, f27, f20, rne # perform operation
fnmadd.d f12, f2, f27, f20, rtz # perform operation
fnmadd.d f12, f2, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f2, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fffffffffffffff)
li x27, 0xb84565cdb2282a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xec0fffa65e07cfcd # load x3 with value 0xec0fffa65e07cfcd
sd x3, 0(x2) # store 0xec0fffa65e07cfcd in memory
fld f21, 0(x2) # load 0xec0fffa65e07cfcd from memory into f21
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fnmadd.d f27, f28, f21, f10, dyn # perform operation
fnmadd.d f27, f28, f21, f10, rdn # perform operation
fnmadd.d f27, f28, f21, f10, rmm # perform operation
fnmadd.d f27, f28, f21, f10, rne # perform operation
fnmadd.d f27, f28, f21, f10, rtz # perform operation
fnmadd.d f27, f28, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f28, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f28, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f28, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f28, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f28, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000001)
li x6, 0xbc89e6985919579f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xa47592ccc981679b # load x3 with value 0xa47592ccc981679b
sd x3, 0(x2) # store 0xa47592ccc981679b in memory
fld f14, 0(x2) # load 0xa47592ccc981679b from memory into f14
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fnmadd.d f6, f10, f14, f11, dyn # perform operation
fnmadd.d f6, f10, f14, f11, rdn # perform operation
fnmadd.d f6, f10, f14, f11, rmm # perform operation
fnmadd.d f6, f10, f14, f11, rne # perform operation
fnmadd.d f6, f10, f14, f11, rtz # perform operation
fnmadd.d f6, f10, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f10, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff7ffffffffffff)
li x2, 0xa96564346be715d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0xcb19633f0d3c3497 # load x3 with value 0xcb19633f0d3c3497
sd x3, 0(x2) # store 0xcb19633f0d3c3497 in memory
fld f29, 0(x2) # load 0xcb19633f0d3c3497 from memory into f29
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fnmadd.d f2, f18, f29, f30, dyn # perform operation
fnmadd.d f2, f18, f29, f30, rdn # perform operation
fnmadd.d f2, f18, f29, f30, rmm # perform operation
fnmadd.d f2, f18, f29, f30, rne # perform operation
fnmadd.d f2, f18, f29, f30, rtz # perform operation
fnmadd.d f2, f18, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f18, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f18, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f18, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f18, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f18, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x5a392534a57711ad)
li x12, 0xe54115f1c5815ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0xd7a21450c8f15a1a # load x3 with value 0xd7a21450c8f15a1a
sd x3, 0(x2) # store 0xd7a21450c8f15a1a in memory
fld f14, 0(x2) # load 0xd7a21450c8f15a1a from memory into f14
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fnmadd.d f12, f5, f14, f18, dyn # perform operation
fnmadd.d f12, f5, f14, f18, rdn # perform operation
fnmadd.d f12, f5, f14, f18, rmm # perform operation
fnmadd.d f12, f5, f14, f18, rne # perform operation
fnmadd.d f12, f5, f14, f18, rtz # perform operation
fnmadd.d f12, f5, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f5, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xa6e895993737426c)
li x21, 0x25db1b7268466af3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xdc31b03274576360 # load x3 with value 0xdc31b03274576360
sd x3, 0(x2) # store 0xdc31b03274576360 in memory
fld f9, 0(x2) # load 0xdc31b03274576360 from memory into f9
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmadd.d f21, f10, f9, f16, dyn # perform operation
fnmadd.d f21, f10, f9, f16, rdn # perform operation
fnmadd.d f21, f10, f9, f16, rmm # perform operation
fnmadd.d f21, f10, f9, f16, rne # perform operation
fnmadd.d f21, f10, f9, f16, rtz # perform operation
fnmadd.d f21, f10, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f10, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f10, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x0)
li x19, 0xa0f9dc5e50aa627f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x2cfb423975d9aebb # load x3 with value 0x2cfb423975d9aebb
sd x3, 0(x2) # store 0x2cfb423975d9aebb in memory
fld f5, 0(x2) # load 0x2cfb423975d9aebb from memory into f5
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fnmadd.d f19, f10, f5, f4, dyn # perform operation
fnmadd.d f19, f10, f5, f4, rdn # perform operation
fnmadd.d f19, f10, f5, f4, rmm # perform operation
fnmadd.d f19, f10, f5, f4, rne # perform operation
fnmadd.d f19, f10, f5, f4, rtz # perform operation
fnmadd.d f19, f10, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f10, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000000)
li x6, 0x68de9e3038c9b890 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x6275926b428870f4 # load x3 with value 0x6275926b428870f4
sd x3, 0(x2) # store 0x6275926b428870f4 in memory
fld f13, 0(x2) # load 0x6275926b428870f4 from memory into f13
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmadd.d f6, f21, f13, f4, dyn # perform operation
fnmadd.d f6, f21, f13, f4, rdn # perform operation
fnmadd.d f6, f21, f13, f4, rmm # perform operation
fnmadd.d f6, f21, f13, f4, rne # perform operation
fnmadd.d f6, f21, f13, f4, rtz # perform operation
fnmadd.d f6, f21, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f21, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f21, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f21, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f21, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f21, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff0000000000000)
li x30, 0xd6f49093b712f01f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x989b153b50893ca2 # load x3 with value 0x989b153b50893ca2
sd x3, 0(x2) # store 0x989b153b50893ca2 in memory
fld f12, 0(x2) # load 0x989b153b50893ca2 from memory into f12
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmadd.d f30, f10, f12, f7, dyn # perform operation
fnmadd.d f30, f10, f12, f7, rdn # perform operation
fnmadd.d f30, f10, f12, f7, rmm # perform operation
fnmadd.d f30, f10, f12, f7, rne # perform operation
fnmadd.d f30, f10, f12, f7, rtz # perform operation
fnmadd.d f30, f10, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f10, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f10, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f10, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f10, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f10, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff0000000000000)
li x16, 0xb4862c1249fd70a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0xf8ada0c0e300b54a # load x3 with value 0xf8ada0c0e300b54a
sd x3, 0(x2) # store 0xf8ada0c0e300b54a in memory
fld f30, 0(x2) # load 0xf8ada0c0e300b54a from memory into f30
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fnmadd.d f16, f10, f30, f21, dyn # perform operation
fnmadd.d f16, f10, f30, f21, rdn # perform operation
fnmadd.d f16, f10, f30, f21, rmm # perform operation
fnmadd.d f16, f10, f30, f21, rne # perform operation
fnmadd.d f16, f10, f30, f21, rtz # perform operation
fnmadd.d f16, f10, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f10, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff8000000000000)
li x20, 0x6a089544e477dc6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0xff8f3da897d1427f # load x3 with value 0xff8f3da897d1427f
sd x3, 0(x2) # store 0xff8f3da897d1427f in memory
fld f29, 0(x2) # load 0xff8f3da897d1427f from memory into f29
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmadd.d f20, f8, f29, f3, dyn # perform operation
fnmadd.d f20, f8, f29, f3, rdn # perform operation
fnmadd.d f20, f8, f29, f3, rmm # perform operation
fnmadd.d f20, f8, f29, f3, rne # perform operation
fnmadd.d f20, f8, f29, f3, rtz # perform operation
fnmadd.d f20, f8, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f8, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff8000000000000)
li x3, 0x4dad047da1c06755 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x99b99bd58b00480e # load x3 with value 0x99b99bd58b00480e
sd x3, 0(x2) # store 0x99b99bd58b00480e in memory
fld f19, 0(x2) # load 0x99b99bd58b00480e from memory into f19
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fnmadd.d f3, f9, f19, f14, dyn # perform operation
fnmadd.d f3, f9, f19, f14, rdn # perform operation
fnmadd.d f3, f9, f19, f14, rmm # perform operation
fnmadd.d f3, f9, f19, f14, rne # perform operation
fnmadd.d f3, f9, f19, f14, rtz # perform operation
fnmadd.d f3, f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f9, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x4000000000000000)
li x28, 0x1e8fa041a89dab05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x2aeeebf82cec8ca0 # load x3 with value 0x2aeeebf82cec8ca0
sd x3, 0(x2) # store 0x2aeeebf82cec8ca0 in memory
fld f6, 0(x2) # load 0x2aeeebf82cec8ca0 from memory into f6
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fnmadd.d f28, f15, f6, f31, dyn # perform operation
fnmadd.d f28, f15, f6, f31, rdn # perform operation
fnmadd.d f28, f15, f6, f31, rmm # perform operation
fnmadd.d f28, f15, f6, f31, rne # perform operation
fnmadd.d f28, f15, f6, f31, rtz # perform operation
fnmadd.d f28, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f15, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xc000000000000000)
li x9, 0x71b3769b11af4439 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x4dbde0ab9f41aa35 # load x3 with value 0x4dbde0ab9f41aa35
sd x3, 0(x2) # store 0x4dbde0ab9f41aa35 in memory
fld f18, 0(x2) # load 0x4dbde0ab9f41aa35 from memory into f18
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
fnmadd.d f9, f24, f18, f26, dyn # perform operation
fnmadd.d f9, f24, f18, f26, rdn # perform operation
fnmadd.d f9, f24, f18, f26, rmm # perform operation
fnmadd.d f9, f24, f18, f26, rne # perform operation
fnmadd.d f9, f24, f18, f26, rtz # perform operation
fnmadd.d f9, f24, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f24, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f24, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f24, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f24, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f24, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x10000000000000)
li x15, 0x5dc07d82c058a855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x1f7901fba304be16 # load x3 with value 0x1f7901fba304be16
sd x3, 0(x2) # store 0x1f7901fba304be16 in memory
fld f6, 0(x2) # load 0x1f7901fba304be16 from memory into f6
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fnmadd.d f15, f16, f6, f22, dyn # perform operation
fnmadd.d f15, f16, f6, f22, rdn # perform operation
fnmadd.d f15, f16, f6, f22, rmm # perform operation
fnmadd.d f15, f16, f6, f22, rne # perform operation
fnmadd.d f15, f16, f6, f22, rtz # perform operation
fnmadd.d f15, f16, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f16, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8010000000000000)
li x2, 0xebbb5d08ea3161c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x20fb28a9c00b35fc # load x3 with value 0x20fb28a9c00b35fc
sd x3, 0(x2) # store 0x20fb28a9c00b35fc in memory
fld f18, 0(x2) # load 0x20fb28a9c00b35fc from memory into f18
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fnmadd.d f2, f31, f18, f6, dyn # perform operation
fnmadd.d f2, f31, f18, f6, rdn # perform operation
fnmadd.d f2, f31, f18, f6, rmm # perform operation
fnmadd.d f2, f31, f18, f6, rne # perform operation
fnmadd.d f2, f31, f18, f6, rtz # perform operation
fnmadd.d f2, f31, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f31, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fefffffffffffff)
li x29, 0x94373ff1d4df7417 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0x25d6aa015cf3d55a # load x3 with value 0x25d6aa015cf3d55a
sd x3, 0(x2) # store 0x25d6aa015cf3d55a in memory
fld f4, 0(x2) # load 0x25d6aa015cf3d55a from memory into f4
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fnmadd.d f29, f26, f4, f25, dyn # perform operation
fnmadd.d f29, f26, f4, f25, rdn # perform operation
fnmadd.d f29, f26, f4, f25, rmm # perform operation
fnmadd.d f29, f26, f4, f25, rne # perform operation
fnmadd.d f29, f26, f4, f25, rtz # perform operation
fnmadd.d f29, f26, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xffefffffffffffff)
li x9, 0xa05baa748d9b5990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x2f3880c25fe4ec0a # load x3 with value 0x2f3880c25fe4ec0a
sd x3, 0(x2) # store 0x2f3880c25fe4ec0a in memory
fld f1, 0(x2) # load 0x2f3880c25fe4ec0a from memory into f1
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fnmadd.d f9, f17, f1, f23, dyn # perform operation
fnmadd.d f9, f17, f1, f23, rdn # perform operation
fnmadd.d f9, f17, f1, f23, rmm # perform operation
fnmadd.d f9, f17, f1, f23, rne # perform operation
fnmadd.d f9, f17, f1, f23, rtz # perform operation
fnmadd.d f9, f17, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f17, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f17, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfffffffffffff)
li x11, 0x138b20dc3d1e288c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0xe6cc13649b31693e # load x3 with value 0xe6cc13649b31693e
sd x3, 0(x2) # store 0xe6cc13649b31693e in memory
fld f24, 0(x2) # load 0xe6cc13649b31693e from memory into f24
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fnmadd.d f11, f29, f24, f27, dyn # perform operation
fnmadd.d f11, f29, f24, f27, rdn # perform operation
fnmadd.d f11, f29, f24, f27, rmm # perform operation
fnmadd.d f11, f29, f24, f27, rne # perform operation
fnmadd.d f11, f29, f24, f27, rtz # perform operation
fnmadd.d f11, f29, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f29, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x800fffffffffffff)
li x14, 0x3d4d993a9fc65c97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0xa960a5ee79fce636 # load x3 with value 0xa960a5ee79fce636
sd x3, 0(x2) # store 0xa960a5ee79fce636 in memory
fld f16, 0(x2) # load 0xa960a5ee79fce636 from memory into f16
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fnmadd.d f14, f17, f16, f13, dyn # perform operation
fnmadd.d f14, f17, f16, f13, rdn # perform operation
fnmadd.d f14, f17, f16, f13, rmm # perform operation
fnmadd.d f14, f17, f16, f13, rne # perform operation
fnmadd.d f14, f17, f16, f13, rtz # perform operation
fnmadd.d f14, f17, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f17, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000)
li x6, 0x53d06aa36680c282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xb04836bb75c99c04 # load x3 with value 0xb04836bb75c99c04
sd x3, 0(x2) # store 0xb04836bb75c99c04 in memory
fld f12, 0(x2) # load 0xb04836bb75c99c04 from memory into f12
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fnmadd.d f6, f21, f12, f8, dyn # perform operation
fnmadd.d f6, f21, f12, f8, rdn # perform operation
fnmadd.d f6, f21, f12, f8, rmm # perform operation
fnmadd.d f6, f21, f12, f8, rne # perform operation
fnmadd.d f6, f21, f12, f8, rtz # perform operation
fnmadd.d f6, f21, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f21, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8008000000000000)
li x17, 0x62517dd7605f839b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x92e2fec3ee0d8926 # load x3 with value 0x92e2fec3ee0d8926
sd x3, 0(x2) # store 0x92e2fec3ee0d8926 in memory
fld f25, 0(x2) # load 0x92e2fec3ee0d8926 from memory into f25
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
fnmadd.d f17, f27, f25, f5, dyn # perform operation
fnmadd.d f17, f27, f25, f5, rdn # perform operation
fnmadd.d f17, f27, f25, f5, rmm # perform operation
fnmadd.d f17, f27, f25, f5, rne # perform operation
fnmadd.d f17, f27, f25, f5, rtz # perform operation
fnmadd.d f17, f27, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f27, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f27, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x1)
li x5, 0x84e67f709ed0d34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0xf4ca97ba949d1574 # load x3 with value 0xf4ca97ba949d1574
sd x3, 0(x2) # store 0xf4ca97ba949d1574 in memory
fld f15, 0(x2) # load 0xf4ca97ba949d1574 from memory into f15
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fnmadd.d f5, f7, f15, f16, dyn # perform operation
fnmadd.d f5, f7, f15, f16, rdn # perform operation
fnmadd.d f5, f7, f15, f16, rmm # perform operation
fnmadd.d f5, f7, f15, f16, rne # perform operation
fnmadd.d f5, f7, f15, f16, rtz # perform operation
fnmadd.d f5, f7, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f7, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000001)
li x4, 0x6e08334392cd232e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0xa848bb7708ce408d # load x3 with value 0xa848bb7708ce408d
sd x3, 0(x2) # store 0xa848bb7708ce408d in memory
fld f27, 0(x2) # load 0xa848bb7708ce408d from memory into f27
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fnmadd.d f4, f8, f27, f25, dyn # perform operation
fnmadd.d f4, f8, f27, f25, rdn # perform operation
fnmadd.d f4, f8, f27, f25, rmm # perform operation
fnmadd.d f4, f8, f27, f25, rne # perform operation
fnmadd.d f4, f8, f27, f25, rtz # perform operation
fnmadd.d f4, f8, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f8, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000000)
li x17, 0x27f0941933134ae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xe901ee0671d30c58 # load x3 with value 0xe901ee0671d30c58
sd x3, 0(x2) # store 0xe901ee0671d30c58 in memory
fld f3, 0(x2) # load 0xe901ee0671d30c58 from memory into f3
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fnmadd.d f17, f19, f3, f9, dyn # perform operation
fnmadd.d f17, f19, f3, f9, rdn # perform operation
fnmadd.d f17, f19, f3, f9, rmm # perform operation
fnmadd.d f17, f19, f3, f9, rne # perform operation
fnmadd.d f17, f19, f3, f9, rtz # perform operation
fnmadd.d f17, f19, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f19, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f19, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f19, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f19, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f19, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfff0000000000000)
li x21, 0xea5ee336bff3d895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x777e23a6b23f1b4e # load x3 with value 0x777e23a6b23f1b4e
sd x3, 0(x2) # store 0x777e23a6b23f1b4e in memory
fld f7, 0(x2) # load 0x777e23a6b23f1b4e from memory into f7
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fnmadd.d f21, f4, f7, f1, dyn # perform operation
fnmadd.d f21, f4, f7, f1, rdn # perform operation
fnmadd.d f21, f4, f7, f1, rmm # perform operation
fnmadd.d f21, f4, f7, f1, rne # perform operation
fnmadd.d f21, f4, f7, f1, rtz # perform operation
fnmadd.d f21, f4, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f4, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff8000000000000)
li x16, 0x9e6c3aae69b04f98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x77acabcfb1b17a5e # load x3 with value 0x77acabcfb1b17a5e
sd x3, 0(x2) # store 0x77acabcfb1b17a5e in memory
fld f7, 0(x2) # load 0x77acabcfb1b17a5e from memory into f7
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fnmadd.d f16, f4, f7, f18, dyn # perform operation
fnmadd.d f16, f4, f7, f18, rdn # perform operation
fnmadd.d f16, f4, f7, f18, rmm # perform operation
fnmadd.d f16, f4, f7, f18, rne # perform operation
fnmadd.d f16, f4, f7, f18, rtz # perform operation
fnmadd.d f16, f4, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f4, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f4, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fffffffffffffff)
li x16, 0xb7c62f02bd2d9a50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x83899875701bddc1 # load x3 with value 0x83899875701bddc1
sd x3, 0(x2) # store 0x83899875701bddc1 in memory
fld f29, 0(x2) # load 0x83899875701bddc1 from memory into f29
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fnmadd.d f16, f22, f29, f9, dyn # perform operation
fnmadd.d f16, f22, f29, f9, rdn # perform operation
fnmadd.d f16, f22, f29, f9, rmm # perform operation
fnmadd.d f16, f22, f29, f9, rne # perform operation
fnmadd.d f16, f22, f29, f9, rtz # perform operation
fnmadd.d f16, f22, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000001)
li x24, 0xd4431fee33049e62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x0639224949ae72f2 # load x3 with value 0x0639224949ae72f2
sd x3, 0(x2) # store 0x0639224949ae72f2 in memory
fld f11, 0(x2) # load 0x0639224949ae72f2 from memory into f11
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fnmadd.d f24, f22, f11, f16, dyn # perform operation
fnmadd.d f24, f22, f11, f16, rdn # perform operation
fnmadd.d f24, f22, f11, f16, rmm # perform operation
fnmadd.d f24, f22, f11, f16, rne # perform operation
fnmadd.d f24, f22, f11, f16, rtz # perform operation
fnmadd.d f24, f22, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f22, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f22, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff7ffffffffffff)
li x25, 0x779331a2333722ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xf30c5d2f23752d1c # load x3 with value 0xf30c5d2f23752d1c
sd x3, 0(x2) # store 0xf30c5d2f23752d1c in memory
fld f29, 0(x2) # load 0xf30c5d2f23752d1c from memory into f29
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fnmadd.d f25, f19, f29, f12, dyn # perform operation
fnmadd.d f25, f19, f29, f12, rdn # perform operation
fnmadd.d f25, f19, f29, f12, rmm # perform operation
fnmadd.d f25, f19, f29, f12, rne # perform operation
fnmadd.d f25, f19, f29, f12, rtz # perform operation
fnmadd.d f25, f19, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f19, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x5a392534a57711ad)
li x24, 0x815fa107db7311d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xac020ffdeef787db # load x3 with value 0xac020ffdeef787db
sd x3, 0(x2) # store 0xac020ffdeef787db in memory
fld f10, 0(x2) # load 0xac020ffdeef787db from memory into f10
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fnmadd.d f24, f31, f10, f4, dyn # perform operation
fnmadd.d f24, f31, f10, f4, rdn # perform operation
fnmadd.d f24, f31, f10, f4, rmm # perform operation
fnmadd.d f24, f31, f10, f4, rne # perform operation
fnmadd.d f24, f31, f10, f4, rtz # perform operation
fnmadd.d f24, f31, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f31, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f31, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f31, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f31, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f31, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xa6e895993737426c)
li x29, 0xaa33053a23323952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x8f6bdc0c9f72eaea # load x3 with value 0x8f6bdc0c9f72eaea
sd x3, 0(x2) # store 0x8f6bdc0c9f72eaea in memory
fld f3, 0(x2) # load 0x8f6bdc0c9f72eaea from memory into f3
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fnmadd.d f29, f11, f3, f31, dyn # perform operation
fnmadd.d f29, f11, f3, f31, rdn # perform operation
fnmadd.d f29, f11, f3, f31, rmm # perform operation
fnmadd.d f29, f11, f3, f31, rne # perform operation
fnmadd.d f29, f11, f3, f31, rtz # perform operation
fnmadd.d f29, f11, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f11, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f11, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f11, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f11, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f11, f3, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x0)
li x19, 0x8b74d88184eb3e6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x283b70fbe09fe102 # load x3 with value 0x283b70fbe09fe102
sd x3, 0(x2) # store 0x283b70fbe09fe102 in memory
fld f27, 0(x2) # load 0x283b70fbe09fe102 from memory into f27
li x3, 0x0000000000000000 # load x3 with value 0x0000000000000000
sd x3, 0(x2) # store 0x0000000000000000 in memory
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fnmadd.d f19, f12, f27, f13, dyn # perform operation
fnmadd.d f19, f12, f27, f13, rdn # perform operation
fnmadd.d f19, f12, f27, f13, rmm # perform operation
fnmadd.d f19, f12, f27, f13, rne # perform operation
fnmadd.d f19, f12, f27, f13, rtz # perform operation
fnmadd.d f19, f12, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000000)
li x30, 0xedd47226fb291c6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xc593a524f6031f09 # load x3 with value 0xc593a524f6031f09
sd x3, 0(x2) # store 0xc593a524f6031f09 in memory
fld f26, 0(x2) # load 0xc593a524f6031f09 from memory into f26
li x3, 0x8000000000000000 # load x3 with value 0x8000000000000000
sd x3, 0(x2) # store 0x8000000000000000 in memory
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fnmadd.d f30, f3, f26, f2, dyn # perform operation
fnmadd.d f30, f3, f26, f2, rdn # perform operation
fnmadd.d f30, f3, f26, f2, rmm # perform operation
fnmadd.d f30, f3, f26, f2, rne # perform operation
fnmadd.d f30, f3, f26, f2, rtz # perform operation
fnmadd.d f30, f3, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f3, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff0000000000000)
li x21, 0x94e6da0ae32f78a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0xc8d686989e4cb488 # load x3 with value 0xc8d686989e4cb488
sd x3, 0(x2) # store 0xc8d686989e4cb488 in memory
fld f5, 0(x2) # load 0xc8d686989e4cb488 from memory into f5
li x3, 0x3ff0000000000000 # load x3 with value 0x3ff0000000000000
sd x3, 0(x2) # store 0x3ff0000000000000 in memory
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fnmadd.d f21, f1, f5, f12, dyn # perform operation
fnmadd.d f21, f1, f5, f12, rdn # perform operation
fnmadd.d f21, f1, f5, f12, rmm # perform operation
fnmadd.d f21, f1, f5, f12, rne # perform operation
fnmadd.d f21, f1, f5, f12, rtz # perform operation
fnmadd.d f21, f1, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f1, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f1, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff0000000000000)
li x19, 0x4edec375931a2dc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x58d9b29db7105e19 # load x3 with value 0x58d9b29db7105e19
sd x3, 0(x2) # store 0x58d9b29db7105e19 in memory
fld f16, 0(x2) # load 0x58d9b29db7105e19 from memory into f16
li x3, 0xbff0000000000000 # load x3 with value 0xbff0000000000000
sd x3, 0(x2) # store 0xbff0000000000000 in memory
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fnmadd.d f19, f2, f16, f18, dyn # perform operation
fnmadd.d f19, f2, f16, f18, rdn # perform operation
fnmadd.d f19, f2, f16, f18, rmm # perform operation
fnmadd.d f19, f2, f16, f18, rne # perform operation
fnmadd.d f19, f2, f16, f18, rtz # perform operation
fnmadd.d f19, f2, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f2, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff8000000000000)
li x23, 0x7cb16a324869ae9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x1e8d14e9cf8220a9 # load x3 with value 0x1e8d14e9cf8220a9
sd x3, 0(x2) # store 0x1e8d14e9cf8220a9 in memory
fld f16, 0(x2) # load 0x1e8d14e9cf8220a9 from memory into f16
li x3, 0x3ff8000000000000 # load x3 with value 0x3ff8000000000000
sd x3, 0(x2) # store 0x3ff8000000000000 in memory
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fnmadd.d f23, f28, f16, f20, dyn # perform operation
fnmadd.d f23, f28, f16, f20, rdn # perform operation
fnmadd.d f23, f28, f16, f20, rmm # perform operation
fnmadd.d f23, f28, f16, f20, rne # perform operation
fnmadd.d f23, f28, f16, f20, rtz # perform operation
fnmadd.d f23, f28, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f28, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff8000000000000)
li x30, 0x071fad581ac4eefb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x3dd2470872c4926b # load x3 with value 0x3dd2470872c4926b
sd x3, 0(x2) # store 0x3dd2470872c4926b in memory
fld f15, 0(x2) # load 0x3dd2470872c4926b from memory into f15
li x3, 0xbff8000000000000 # load x3 with value 0xbff8000000000000
sd x3, 0(x2) # store 0xbff8000000000000 in memory
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fnmadd.d f30, f17, f15, f16, dyn # perform operation
fnmadd.d f30, f17, f15, f16, rdn # perform operation
fnmadd.d f30, f17, f15, f16, rmm # perform operation
fnmadd.d f30, f17, f15, f16, rne # perform operation
fnmadd.d f30, f17, f15, f16, rtz # perform operation
fnmadd.d f30, f17, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f17, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f17, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x4000000000000000)
li x8, 0x5525989ff1a0491f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0xa9c3cdc3617d676f # load x3 with value 0xa9c3cdc3617d676f
sd x3, 0(x2) # store 0xa9c3cdc3617d676f in memory
fld f5, 0(x2) # load 0xa9c3cdc3617d676f from memory into f5
li x3, 0x4000000000000000 # load x3 with value 0x4000000000000000
sd x3, 0(x2) # store 0x4000000000000000 in memory
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fnmadd.d f8, f27, f5, f4, dyn # perform operation
fnmadd.d f8, f27, f5, f4, rdn # perform operation
fnmadd.d f8, f27, f5, f4, rmm # perform operation
fnmadd.d f8, f27, f5, f4, rne # perform operation
fnmadd.d f8, f27, f5, f4, rtz # perform operation
fnmadd.d f8, f27, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xc000000000000000)
li x5, 0x70c2ce9e0da1bea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x2d58eb97163f3d92 # load x3 with value 0x2d58eb97163f3d92
sd x3, 0(x2) # store 0x2d58eb97163f3d92 in memory
fld f26, 0(x2) # load 0x2d58eb97163f3d92 from memory into f26
li x3, 0xc000000000000000 # load x3 with value 0xc000000000000000
sd x3, 0(x2) # store 0xc000000000000000 in memory
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fnmadd.d f5, f2, f26, f19, dyn # perform operation
fnmadd.d f5, f2, f26, f19, rdn # perform operation
fnmadd.d f5, f2, f26, f19, rmm # perform operation
fnmadd.d f5, f2, f26, f19, rne # perform operation
fnmadd.d f5, f2, f26, f19, rtz # perform operation
fnmadd.d f5, f2, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f2, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f2, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f2, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f2, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f2, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x10000000000000)
li x24, 0xe2339c3cc2ac2c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x9d24a8fcbf40ba31 # load x3 with value 0x9d24a8fcbf40ba31
sd x3, 0(x2) # store 0x9d24a8fcbf40ba31 in memory
fld f20, 0(x2) # load 0x9d24a8fcbf40ba31 from memory into f20
li x3, 0x0010000000000000 # load x3 with value 0x0010000000000000
sd x3, 0(x2) # store 0x0010000000000000 in memory
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fnmadd.d f24, f15, f20, f18, dyn # perform operation
fnmadd.d f24, f15, f20, f18, rdn # perform operation
fnmadd.d f24, f15, f20, f18, rmm # perform operation
fnmadd.d f24, f15, f20, f18, rne # perform operation
fnmadd.d f24, f15, f20, f18, rtz # perform operation
fnmadd.d f24, f15, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f15, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8010000000000000)
li x12, 0xa5e4d92d81d468be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0xa3bfbb36b4a7fc61 # load x3 with value 0xa3bfbb36b4a7fc61
sd x3, 0(x2) # store 0xa3bfbb36b4a7fc61 in memory
fld f17, 0(x2) # load 0xa3bfbb36b4a7fc61 from memory into f17
li x3, 0x8010000000000000 # load x3 with value 0x8010000000000000
sd x3, 0(x2) # store 0x8010000000000000 in memory
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fnmadd.d f12, f1, f17, f10, dyn # perform operation
fnmadd.d f12, f1, f17, f10, rdn # perform operation
fnmadd.d f12, f1, f17, f10, rmm # perform operation
fnmadd.d f12, f1, f17, f10, rne # perform operation
fnmadd.d f12, f1, f17, f10, rtz # perform operation
fnmadd.d f12, f1, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f1, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f1, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fefffffffffffff)
li x31, 0xb7b350be97b56962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x7015b28f5793e618 # load x3 with value 0x7015b28f5793e618
sd x3, 0(x2) # store 0x7015b28f5793e618 in memory
fld f10, 0(x2) # load 0x7015b28f5793e618 from memory into f10
li x3, 0x7fefffffffffffff # load x3 with value 0x7fefffffffffffff
sd x3, 0(x2) # store 0x7fefffffffffffff in memory
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fnmadd.d f31, f6, f10, f16, dyn # perform operation
fnmadd.d f31, f6, f10, f16, rdn # perform operation
fnmadd.d f31, f6, f10, f16, rmm # perform operation
fnmadd.d f31, f6, f10, f16, rne # perform operation
fnmadd.d f31, f6, f10, f16, rtz # perform operation
fnmadd.d f31, f6, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xffefffffffffffff)
li x2, 0xa0c0c4e93393f39a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x3f708ee8f0a98dd0 # load x3 with value 0x3f708ee8f0a98dd0
sd x3, 0(x2) # store 0x3f708ee8f0a98dd0 in memory
fld f7, 0(x2) # load 0x3f708ee8f0a98dd0 from memory into f7
li x3, 0xffefffffffffffff # load x3 with value 0xffefffffffffffff
sd x3, 0(x2) # store 0xffefffffffffffff in memory
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmadd.d f2, f25, f7, f15, dyn # perform operation
fnmadd.d f2, f25, f7, f15, rdn # perform operation
fnmadd.d f2, f25, f7, f15, rmm # perform operation
fnmadd.d f2, f25, f7, f15, rne # perform operation
fnmadd.d f2, f25, f7, f15, rtz # perform operation
fnmadd.d f2, f25, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f25, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f25, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfffffffffffff)
li x13, 0xc1d40a999507d729 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x553cea6c0cecbb8f # load x3 with value 0x553cea6c0cecbb8f
sd x3, 0(x2) # store 0x553cea6c0cecbb8f in memory
fld f2, 0(x2) # load 0x553cea6c0cecbb8f from memory into f2
li x3, 0x000fffffffffffff # load x3 with value 0x000fffffffffffff
sd x3, 0(x2) # store 0x000fffffffffffff in memory
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fnmadd.d f13, f14, f2, f28, dyn # perform operation
fnmadd.d f13, f14, f2, f28, rdn # perform operation
fnmadd.d f13, f14, f2, f28, rmm # perform operation
fnmadd.d f13, f14, f2, f28, rne # perform operation
fnmadd.d f13, f14, f2, f28, rtz # perform operation
fnmadd.d f13, f14, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f14, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x800fffffffffffff)
li x7, 0x0721db52d27d0929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x9b94aacb4d441549 # load x3 with value 0x9b94aacb4d441549
sd x3, 0(x2) # store 0x9b94aacb4d441549 in memory
fld f4, 0(x2) # load 0x9b94aacb4d441549 from memory into f4
li x3, 0x800fffffffffffff # load x3 with value 0x800fffffffffffff
sd x3, 0(x2) # store 0x800fffffffffffff in memory
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fnmadd.d f7, f8, f4, f13, dyn # perform operation
fnmadd.d f7, f8, f4, f13, rdn # perform operation
fnmadd.d f7, f8, f4, f13, rmm # perform operation
fnmadd.d f7, f8, f4, f13, rne # perform operation
fnmadd.d f7, f8, f4, f13, rtz # perform operation
fnmadd.d f7, f8, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f8, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f8, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000)
li x23, 0xbfd6d89200d168f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x383807234034e608 # load x3 with value 0x383807234034e608
sd x3, 0(x2) # store 0x383807234034e608 in memory
fld f31, 0(x2) # load 0x383807234034e608 from memory into f31
li x3, 0x0008000000000000 # load x3 with value 0x0008000000000000
sd x3, 0(x2) # store 0x0008000000000000 in memory
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fnmadd.d f23, f14, f31, f25, dyn # perform operation
fnmadd.d f23, f14, f31, f25, rdn # perform operation
fnmadd.d f23, f14, f31, f25, rmm # perform operation
fnmadd.d f23, f14, f31, f25, rne # perform operation
fnmadd.d f23, f14, f31, f25, rtz # perform operation
fnmadd.d f23, f14, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8008000000000000)
li x9, 0x53a9e678a244e3ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xae0d390e7e29f3f3 # load x3 with value 0xae0d390e7e29f3f3
sd x3, 0(x2) # store 0xae0d390e7e29f3f3 in memory
fld f30, 0(x2) # load 0xae0d390e7e29f3f3 from memory into f30
li x3, 0x8008000000000000 # load x3 with value 0x8008000000000000
sd x3, 0(x2) # store 0x8008000000000000 in memory
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f9, f21, f30, f1, dyn # perform operation
fnmadd.d f9, f21, f30, f1, rdn # perform operation
fnmadd.d f9, f21, f30, f1, rmm # perform operation
fnmadd.d f9, f21, f30, f1, rne # perform operation
fnmadd.d f9, f21, f30, f1, rtz # perform operation
fnmadd.d f9, f21, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f21, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f21, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x1)
li x15, 0x1b78864a5248742f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xabaec25cf576c037 # load x3 with value 0xabaec25cf576c037
sd x3, 0(x2) # store 0xabaec25cf576c037 in memory
fld f29, 0(x2) # load 0xabaec25cf576c037 from memory into f29
li x3, 0x0000000000000001 # load x3 with value 0x0000000000000001
sd x3, 0(x2) # store 0x0000000000000001 in memory
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fnmadd.d f15, f31, f29, f18, dyn # perform operation
fnmadd.d f15, f31, f29, f18, rdn # perform operation
fnmadd.d f15, f31, f29, f18, rmm # perform operation
fnmadd.d f15, f31, f29, f18, rne # perform operation
fnmadd.d f15, f31, f29, f18, rtz # perform operation
fnmadd.d f15, f31, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f31, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000001)
li x8, 0x7d2d3f6e422d660d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x913718877c6e43ee # load x3 with value 0x913718877c6e43ee
sd x3, 0(x2) # store 0x913718877c6e43ee in memory
fld f3, 0(x2) # load 0x913718877c6e43ee from memory into f3
li x3, 0x8000000000000001 # load x3 with value 0x8000000000000001
sd x3, 0(x2) # store 0x8000000000000001 in memory
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
fnmadd.d f8, f15, f3, f2, dyn # perform operation
fnmadd.d f8, f15, f3, f2, rdn # perform operation
fnmadd.d f8, f15, f3, f2, rmm # perform operation
fnmadd.d f8, f15, f3, f2, rne # perform operation
fnmadd.d f8, f15, f3, f2, rtz # perform operation
fnmadd.d f8, f15, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f15, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000000)
li x9, 0x697b62829994e979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x2813455e70a99446 # load x3 with value 0x2813455e70a99446
sd x3, 0(x2) # store 0x2813455e70a99446 in memory
fld f16, 0(x2) # load 0x2813455e70a99446 from memory into f16
li x3, 0x7ff0000000000000 # load x3 with value 0x7ff0000000000000
sd x3, 0(x2) # store 0x7ff0000000000000 in memory
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f9, f1, f16, f30, dyn # perform operation
fnmadd.d f9, f1, f16, f30, rdn # perform operation
fnmadd.d f9, f1, f16, f30, rmm # perform operation
fnmadd.d f9, f1, f16, f30, rne # perform operation
fnmadd.d f9, f1, f16, f30, rtz # perform operation
fnmadd.d f9, f1, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f1, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfff0000000000000)
li x6, 0x9a1d494f7ac42c7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x562803a5982327de # load x3 with value 0x562803a5982327de
sd x3, 0(x2) # store 0x562803a5982327de in memory
fld f25, 0(x2) # load 0x562803a5982327de from memory into f25
li x3, 0xfff0000000000000 # load x3 with value 0xfff0000000000000
sd x3, 0(x2) # store 0xfff0000000000000 in memory
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fnmadd.d f6, f15, f25, f14, dyn # perform operation
fnmadd.d f6, f15, f25, f14, rdn # perform operation
fnmadd.d f6, f15, f25, f14, rmm # perform operation
fnmadd.d f6, f15, f25, f14, rne # perform operation
fnmadd.d f6, f15, f25, f14, rtz # perform operation
fnmadd.d f6, f15, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f15, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f15, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff8000000000000)
li x10, 0x0a33e5c011ada6fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0xc0c9bf0d0049de3b # load x3 with value 0xc0c9bf0d0049de3b
sd x3, 0(x2) # store 0xc0c9bf0d0049de3b in memory
fld f12, 0(x2) # load 0xc0c9bf0d0049de3b from memory into f12
li x3, 0x7ff8000000000000 # load x3 with value 0x7ff8000000000000
sd x3, 0(x2) # store 0x7ff8000000000000 in memory
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fnmadd.d f10, f29, f12, f3, dyn # perform operation
fnmadd.d f10, f29, f12, f3, rdn # perform operation
fnmadd.d f10, f29, f12, f3, rmm # perform operation
fnmadd.d f10, f29, f12, f3, rne # perform operation
fnmadd.d f10, f29, f12, f3, rtz # perform operation
fnmadd.d f10, f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fffffffffffffff)
li x27, 0x4d43e05701a2a654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0xaf961377ff3571e7 # load x3 with value 0xaf961377ff3571e7
sd x3, 0(x2) # store 0xaf961377ff3571e7 in memory
fld f9, 0(x2) # load 0xaf961377ff3571e7 from memory into f9
li x3, 0x7fffffffffffffff # load x3 with value 0x7fffffffffffffff
sd x3, 0(x2) # store 0x7fffffffffffffff in memory
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fnmadd.d f27, f19, f9, f5, dyn # perform operation
fnmadd.d f27, f19, f9, f5, rdn # perform operation
fnmadd.d f27, f19, f9, f5, rmm # perform operation
fnmadd.d f27, f19, f9, f5, rne # perform operation
fnmadd.d f27, f19, f9, f5, rtz # perform operation
fnmadd.d f27, f19, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f19, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000001)
li x17, 0x70de15b35a749a93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x3f5dcd52eafaa729 # load x3 with value 0x3f5dcd52eafaa729
sd x3, 0(x2) # store 0x3f5dcd52eafaa729 in memory
fld f1, 0(x2) # load 0x3f5dcd52eafaa729 from memory into f1
li x3, 0x7ff0000000000001 # load x3 with value 0x7ff0000000000001
sd x3, 0(x2) # store 0x7ff0000000000001 in memory
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fnmadd.d f17, f27, f1, f11, dyn # perform operation
fnmadd.d f17, f27, f1, f11, rdn # perform operation
fnmadd.d f17, f27, f1, f11, rmm # perform operation
fnmadd.d f17, f27, f1, f11, rne # perform operation
fnmadd.d f17, f27, f1, f11, rtz # perform operation
fnmadd.d f17, f27, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f27, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f27, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f27, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f27, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f27, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff7ffffffffffff)
li x3, 0x70e47ffd19240961 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x6ee6366853b34bbb # load x3 with value 0x6ee6366853b34bbb
sd x3, 0(x2) # store 0x6ee6366853b34bbb in memory
fld f19, 0(x2) # load 0x6ee6366853b34bbb from memory into f19
li x3, 0x7ff7ffffffffffff # load x3 with value 0x7ff7ffffffffffff
sd x3, 0(x2) # store 0x7ff7ffffffffffff in memory
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fnmadd.d f3, f14, f19, f13, dyn # perform operation
fnmadd.d f3, f14, f19, f13, rdn # perform operation
fnmadd.d f3, f14, f19, f13, rmm # perform operation
fnmadd.d f3, f14, f19, f13, rne # perform operation
fnmadd.d f3, f14, f19, f13, rtz # perform operation
fnmadd.d f3, f14, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x5a392534a57711ad)
li x14, 0xf8957d86c04ae0d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xbb91ea62cdceae47 # load x3 with value 0xbb91ea62cdceae47
sd x3, 0(x2) # store 0xbb91ea62cdceae47 in memory
fld f23, 0(x2) # load 0xbb91ea62cdceae47 from memory into f23
li x3, 0x5a392534a57711ad # load x3 with value 0x5a392534a57711ad
sd x3, 0(x2) # store 0x5a392534a57711ad in memory
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fnmadd.d f14, f21, f23, f9, dyn # perform operation
fnmadd.d f14, f21, f23, f9, rdn # perform operation
fnmadd.d f14, f21, f23, f9, rmm # perform operation
fnmadd.d f14, f21, f23, f9, rne # perform operation
fnmadd.d f14, f21, f23, f9, rtz # perform operation
fnmadd.d f14, f21, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f21, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f21, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xa6e895993737426c)
li x31, 0x5051f1a89aff91ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x7b19a632820cb572 # load x3 with value 0x7b19a632820cb572
sd x3, 0(x2) # store 0x7b19a632820cb572 in memory
fld f8, 0(x2) # load 0x7b19a632820cb572 from memory into f8
li x3, 0xa6e895993737426c # load x3 with value 0xa6e895993737426c
sd x3, 0(x2) # store 0xa6e895993737426c in memory
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fnmadd.d f31, f5, f8, f10, dyn # perform operation
fnmadd.d f31, f5, f8, f10, rdn # perform operation
fnmadd.d f31, f5, f8, f10, rmm # perform operation
fnmadd.d f31, f5, f8, f10, rne # perform operation
fnmadd.d f31, f5, f8, f10, rtz # perform operation
fnmadd.d f31, f5, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f5, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f5, f8, f10 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x78e5b08fa8344384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95dbb32bd5c60a67 # load x3 with value 0x95dbb32bd5c60a67
sd x3, 0(x2) # store 0x95dbb32bd5c60a67 in memory
fld f17, 0(x2) # load 0x95dbb32bd5c60a67 from memory into f17
li x3, 0x90ddaa821162bbd1 # load x3 with value 0x90ddaa821162bbd1
sd x3, 0(x2) # store 0x90ddaa821162bbd1 in memory
fld f26, 0(x2) # load 0x90ddaa821162bbd1 from memory into f26
li x3, 0x22019999f846d9fe # load x3 with value 0x22019999f846d9fe
sd x3, 0(x2) # store 0x22019999f846d9fe in memory
fld f24, 0(x2) # load 0x22019999f846d9fe from memory into f24
fnmadd.d f0, f17, f26, f24 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xa1c032bee4c33f01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc927bc6304a22753 # load x3 with value 0xc927bc6304a22753
sd x3, 0(x2) # store 0xc927bc6304a22753 in memory
fld f16, 0(x2) # load 0xc927bc6304a22753 from memory into f16
li x3, 0xdce190663b8dd091 # load x3 with value 0xdce190663b8dd091
sd x3, 0(x2) # store 0xdce190663b8dd091 in memory
fld f10, 0(x2) # load 0xdce190663b8dd091 from memory into f10
li x3, 0xd76e2ecb88905204 # load x3 with value 0xd76e2ecb88905204
sd x3, 0(x2) # store 0xd76e2ecb88905204 in memory
fld f6, 0(x2) # load 0xd76e2ecb88905204 from memory into f6
fnmadd.d f1, f16, f10, f6 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xf76cf74ff87ebb48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x492bf2a3193d6d98 # load x3 with value 0x492bf2a3193d6d98
sd x3, 0(x2) # store 0x492bf2a3193d6d98 in memory
fld f25, 0(x2) # load 0x492bf2a3193d6d98 from memory into f25
li x3, 0x871150e0e585bda1 # load x3 with value 0x871150e0e585bda1
sd x3, 0(x2) # store 0x871150e0e585bda1 in memory
fld f30, 0(x2) # load 0x871150e0e585bda1 from memory into f30
li x3, 0x833166f292e4d23e # load x3 with value 0x833166f292e4d23e
sd x3, 0(x2) # store 0x833166f292e4d23e in memory
fld f13, 0(x2) # load 0x833166f292e4d23e from memory into f13
fnmadd.d f2, f25, f30, f13 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x983cb0abc3643c5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3076d9df96811ea # load x3 with value 0xd3076d9df96811ea
sd x3, 0(x2) # store 0xd3076d9df96811ea in memory
fld f4, 0(x2) # load 0xd3076d9df96811ea from memory into f4
li x3, 0x200f981fc7f6c85d # load x3 with value 0x200f981fc7f6c85d
sd x3, 0(x2) # store 0x200f981fc7f6c85d in memory
fld f6, 0(x2) # load 0x200f981fc7f6c85d from memory into f6
li x3, 0x5f9a28e986048829 # load x3 with value 0x5f9a28e986048829
sd x3, 0(x2) # store 0x5f9a28e986048829 in memory
fld f9, 0(x2) # load 0x5f9a28e986048829 from memory into f9
fnmadd.d f3, f4, f6, f9 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x2c0d3caa02520b49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd4c9c9e903f8689 # load x3 with value 0xfd4c9c9e903f8689
sd x3, 0(x2) # store 0xfd4c9c9e903f8689 in memory
fld f18, 0(x2) # load 0xfd4c9c9e903f8689 from memory into f18
li x3, 0xbbcf679ff284c168 # load x3 with value 0xbbcf679ff284c168
sd x3, 0(x2) # store 0xbbcf679ff284c168 in memory
fld f29, 0(x2) # load 0xbbcf679ff284c168 from memory into f29
li x3, 0xd73c677358368d01 # load x3 with value 0xd73c677358368d01
sd x3, 0(x2) # store 0xd73c677358368d01 in memory
fld f7, 0(x2) # load 0xd73c677358368d01 from memory into f7
fnmadd.d f4, f18, f29, f7 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x31adad14e0ceaac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8e194fff42d5a72 # load x3 with value 0xe8e194fff42d5a72
sd x3, 0(x2) # store 0xe8e194fff42d5a72 in memory
fld f1, 0(x2) # load 0xe8e194fff42d5a72 from memory into f1
li x3, 0xc660b28004d0af08 # load x3 with value 0xc660b28004d0af08
sd x3, 0(x2) # store 0xc660b28004d0af08 in memory
fld f29, 0(x2) # load 0xc660b28004d0af08 from memory into f29
li x3, 0x9a173daeff13723a # load x3 with value 0x9a173daeff13723a
sd x3, 0(x2) # store 0x9a173daeff13723a in memory
fld f7, 0(x2) # load 0x9a173daeff13723a from memory into f7
fnmadd.d f5, f1, f29, f7 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x470675cb69a16f0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc8516b3b2d46ec1 # load x3 with value 0xbc8516b3b2d46ec1
sd x3, 0(x2) # store 0xbc8516b3b2d46ec1 in memory
fld f29, 0(x2) # load 0xbc8516b3b2d46ec1 from memory into f29
li x3, 0xad29e1ed2555c5a0 # load x3 with value 0xad29e1ed2555c5a0
sd x3, 0(x2) # store 0xad29e1ed2555c5a0 in memory
fld f27, 0(x2) # load 0xad29e1ed2555c5a0 from memory into f27
li x3, 0xdb5b2546630169ec # load x3 with value 0xdb5b2546630169ec
sd x3, 0(x2) # store 0xdb5b2546630169ec in memory
fld f7, 0(x2) # load 0xdb5b2546630169ec from memory into f7
fnmadd.d f6, f29, f27, f7 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xc9f1cfe8935183b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17ebdb6e8d97821e # load x3 with value 0x17ebdb6e8d97821e
sd x3, 0(x2) # store 0x17ebdb6e8d97821e in memory
fld f1, 0(x2) # load 0x17ebdb6e8d97821e from memory into f1
li x3, 0xb728a3c82d7c9df8 # load x3 with value 0xb728a3c82d7c9df8
sd x3, 0(x2) # store 0xb728a3c82d7c9df8 in memory
fld f9, 0(x2) # load 0xb728a3c82d7c9df8 from memory into f9
li x3, 0xd70a653f668ffccc # load x3 with value 0xd70a653f668ffccc
sd x3, 0(x2) # store 0xd70a653f668ffccc in memory
fld f21, 0(x2) # load 0xd70a653f668ffccc from memory into f21
fnmadd.d f7, f1, f9, f21 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x531cd0c7a35620c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95c561e4e945a171 # load x3 with value 0x95c561e4e945a171
sd x3, 0(x2) # store 0x95c561e4e945a171 in memory
fld f7, 0(x2) # load 0x95c561e4e945a171 from memory into f7
li x3, 0x95a8564a960a594b # load x3 with value 0x95a8564a960a594b
sd x3, 0(x2) # store 0x95a8564a960a594b in memory
fld f6, 0(x2) # load 0x95a8564a960a594b from memory into f6
li x3, 0xde1b15a53bab6899 # load x3 with value 0xde1b15a53bab6899
sd x3, 0(x2) # store 0xde1b15a53bab6899 in memory
fld f16, 0(x2) # load 0xde1b15a53bab6899 from memory into f16
fnmadd.d f8, f7, f6, f16 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x7261662bfa59487a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5045e705f25920b # load x3 with value 0xc5045e705f25920b
sd x3, 0(x2) # store 0xc5045e705f25920b in memory
fld f13, 0(x2) # load 0xc5045e705f25920b from memory into f13
li x3, 0xf373b53947b178a8 # load x3 with value 0xf373b53947b178a8
sd x3, 0(x2) # store 0xf373b53947b178a8 in memory
fld f14, 0(x2) # load 0xf373b53947b178a8 from memory into f14
li x3, 0xb63249307b883701 # load x3 with value 0xb63249307b883701
sd x3, 0(x2) # store 0xb63249307b883701 in memory
fld f26, 0(x2) # load 0xb63249307b883701 from memory into f26
fnmadd.d f9, f13, f14, f26 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xc0b3f70767d8da82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd448c14cfbdc25f8 # load x3 with value 0xd448c14cfbdc25f8
sd x3, 0(x2) # store 0xd448c14cfbdc25f8 in memory
fld f20, 0(x2) # load 0xd448c14cfbdc25f8 from memory into f20
li x3, 0x110093327b7def1b # load x3 with value 0x110093327b7def1b
sd x3, 0(x2) # store 0x110093327b7def1b in memory
fld f31, 0(x2) # load 0x110093327b7def1b from memory into f31
li x3, 0x2910d6a90c5d0d89 # load x3 with value 0x2910d6a90c5d0d89
sd x3, 0(x2) # store 0x2910d6a90c5d0d89 in memory
fld f15, 0(x2) # load 0x2910d6a90c5d0d89 from memory into f15
fnmadd.d f10, f20, f31, f15 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x0a6b11b1a559c9c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa32fc0d0f1a43f7f # load x3 with value 0xa32fc0d0f1a43f7f
sd x3, 0(x2) # store 0xa32fc0d0f1a43f7f in memory
fld f28, 0(x2) # load 0xa32fc0d0f1a43f7f from memory into f28
li x3, 0x647c28eaca7d2eb6 # load x3 with value 0x647c28eaca7d2eb6
sd x3, 0(x2) # store 0x647c28eaca7d2eb6 in memory
fld f25, 0(x2) # load 0x647c28eaca7d2eb6 from memory into f25
li x3, 0x8d1972400dca8266 # load x3 with value 0x8d1972400dca8266
sd x3, 0(x2) # store 0x8d1972400dca8266 in memory
fld f23, 0(x2) # load 0x8d1972400dca8266 from memory into f23
fnmadd.d f11, f28, f25, f23 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x3778a8e31a7859c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7834b8bfe4dcd6f7 # load x3 with value 0x7834b8bfe4dcd6f7
sd x3, 0(x2) # store 0x7834b8bfe4dcd6f7 in memory
fld f10, 0(x2) # load 0x7834b8bfe4dcd6f7 from memory into f10
li x3, 0xac976a7c57205403 # load x3 with value 0xac976a7c57205403
sd x3, 0(x2) # store 0xac976a7c57205403 in memory
fld f16, 0(x2) # load 0xac976a7c57205403 from memory into f16
li x3, 0x2d35be2e5fdd843a # load x3 with value 0x2d35be2e5fdd843a
sd x3, 0(x2) # store 0x2d35be2e5fdd843a in memory
fld f4, 0(x2) # load 0x2d35be2e5fdd843a from memory into f4
fnmadd.d f12, f10, f16, f4 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0xdec23bb7a2c87d6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfe4e1437c6b5073d # load x3 with value 0xfe4e1437c6b5073d
sd x3, 0(x2) # store 0xfe4e1437c6b5073d in memory
fld f26, 0(x2) # load 0xfe4e1437c6b5073d from memory into f26
li x3, 0xad5c265ae6b88ba3 # load x3 with value 0xad5c265ae6b88ba3
sd x3, 0(x2) # store 0xad5c265ae6b88ba3 in memory
fld f31, 0(x2) # load 0xad5c265ae6b88ba3 from memory into f31
li x3, 0x7e204e910aaf3031 # load x3 with value 0x7e204e910aaf3031
sd x3, 0(x2) # store 0x7e204e910aaf3031 in memory
fld f30, 0(x2) # load 0x7e204e910aaf3031 from memory into f30
fnmadd.d f13, f26, f31, f30 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x262656b004e1c09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc99745bbe13de750 # load x3 with value 0xc99745bbe13de750
sd x3, 0(x2) # store 0xc99745bbe13de750 in memory
fld f27, 0(x2) # load 0xc99745bbe13de750 from memory into f27
li x3, 0xa2977f71ce05cbc9 # load x3 with value 0xa2977f71ce05cbc9
sd x3, 0(x2) # store 0xa2977f71ce05cbc9 in memory
fld f30, 0(x2) # load 0xa2977f71ce05cbc9 from memory into f30
li x3, 0x4dc2d28ce5e7accf # load x3 with value 0x4dc2d28ce5e7accf
sd x3, 0(x2) # store 0x4dc2d28ce5e7accf in memory
fld f3, 0(x2) # load 0x4dc2d28ce5e7accf from memory into f3
fnmadd.d f14, f27, f30, f3 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x3f718c250511947a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x916ec9e8df66ea7f # load x3 with value 0x916ec9e8df66ea7f
sd x3, 0(x2) # store 0x916ec9e8df66ea7f in memory
fld f9, 0(x2) # load 0x916ec9e8df66ea7f from memory into f9
li x3, 0xf49068583ab8fab7 # load x3 with value 0xf49068583ab8fab7
sd x3, 0(x2) # store 0xf49068583ab8fab7 in memory
fld f14, 0(x2) # load 0xf49068583ab8fab7 from memory into f14
li x3, 0x5896294c00087db3 # load x3 with value 0x5896294c00087db3
sd x3, 0(x2) # store 0x5896294c00087db3 in memory
fld f24, 0(x2) # load 0x5896294c00087db3 from memory into f24
fnmadd.d f15, f9, f14, f24 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x58ef08f1531cff6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0b1fd405dad6028 # load x3 with value 0xb0b1fd405dad6028
sd x3, 0(x2) # store 0xb0b1fd405dad6028 in memory
fld f4, 0(x2) # load 0xb0b1fd405dad6028 from memory into f4
li x3, 0x373e5812d994f396 # load x3 with value 0x373e5812d994f396
sd x3, 0(x2) # store 0x373e5812d994f396 in memory
fld f7, 0(x2) # load 0x373e5812d994f396 from memory into f7
li x3, 0x20d1db09a0476107 # load x3 with value 0x20d1db09a0476107
sd x3, 0(x2) # store 0x20d1db09a0476107 in memory
fld f29, 0(x2) # load 0x20d1db09a0476107 from memory into f29
fnmadd.d f16, f4, f7, f29 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xbed870f55f1cbd82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8bc4a534b9b85a2 # load x3 with value 0xf8bc4a534b9b85a2
sd x3, 0(x2) # store 0xf8bc4a534b9b85a2 in memory
fld f27, 0(x2) # load 0xf8bc4a534b9b85a2 from memory into f27
li x3, 0x5d883f96a4dd3c51 # load x3 with value 0x5d883f96a4dd3c51
sd x3, 0(x2) # store 0x5d883f96a4dd3c51 in memory
fld f3, 0(x2) # load 0x5d883f96a4dd3c51 from memory into f3
li x3, 0x9d7687c305391c43 # load x3 with value 0x9d7687c305391c43
sd x3, 0(x2) # store 0x9d7687c305391c43 in memory
fld f2, 0(x2) # load 0x9d7687c305391c43 from memory into f2
fnmadd.d f17, f27, f3, f2 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x6c5a86d45d4056db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf584ab37bc436c00 # load x3 with value 0xf584ab37bc436c00
sd x3, 0(x2) # store 0xf584ab37bc436c00 in memory
fld f16, 0(x2) # load 0xf584ab37bc436c00 from memory into f16
li x3, 0x98c5c859afc8f2af # load x3 with value 0x98c5c859afc8f2af
sd x3, 0(x2) # store 0x98c5c859afc8f2af in memory
fld f11, 0(x2) # load 0x98c5c859afc8f2af from memory into f11
li x3, 0x621adaecb7a646ac # load x3 with value 0x621adaecb7a646ac
sd x3, 0(x2) # store 0x621adaecb7a646ac in memory
fld f1, 0(x2) # load 0x621adaecb7a646ac from memory into f1
fnmadd.d f18, f16, f11, f1 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xdbcdb11758b9f4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf96b4d3811a7013c # load x3 with value 0xf96b4d3811a7013c
sd x3, 0(x2) # store 0xf96b4d3811a7013c in memory
fld f23, 0(x2) # load 0xf96b4d3811a7013c from memory into f23
li x3, 0x6efbbe234eff1a62 # load x3 with value 0x6efbbe234eff1a62
sd x3, 0(x2) # store 0x6efbbe234eff1a62 in memory
fld f5, 0(x2) # load 0x6efbbe234eff1a62 from memory into f5
li x3, 0xfa2bed918091e8b0 # load x3 with value 0xfa2bed918091e8b0
sd x3, 0(x2) # store 0xfa2bed918091e8b0 in memory
fld f15, 0(x2) # load 0xfa2bed918091e8b0 from memory into f15
fnmadd.d f19, f23, f5, f15 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x3b098d1e9f6d6c27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ba183a31a60c4d1 # load x3 with value 0x7ba183a31a60c4d1
sd x3, 0(x2) # store 0x7ba183a31a60c4d1 in memory
fld f20, 0(x2) # load 0x7ba183a31a60c4d1 from memory into f20
li x3, 0x3ef8904dea271d48 # load x3 with value 0x3ef8904dea271d48
sd x3, 0(x2) # store 0x3ef8904dea271d48 in memory
fld f30, 0(x2) # load 0x3ef8904dea271d48 from memory into f30
li x3, 0xc4937b32f0ff1634 # load x3 with value 0xc4937b32f0ff1634
sd x3, 0(x2) # store 0xc4937b32f0ff1634 in memory
fld f16, 0(x2) # load 0xc4937b32f0ff1634 from memory into f16
fnmadd.d f20, f20, f30, f16 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x1dce656744e4b9f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5ba75210486c134 # load x3 with value 0xa5ba75210486c134
sd x3, 0(x2) # store 0xa5ba75210486c134 in memory
fld f20, 0(x2) # load 0xa5ba75210486c134 from memory into f20
li x3, 0xf48f9c02b75e158b # load x3 with value 0xf48f9c02b75e158b
sd x3, 0(x2) # store 0xf48f9c02b75e158b in memory
fld f23, 0(x2) # load 0xf48f9c02b75e158b from memory into f23
li x3, 0xa9ad3cc4ef909599 # load x3 with value 0xa9ad3cc4ef909599
sd x3, 0(x2) # store 0xa9ad3cc4ef909599 in memory
fld f30, 0(x2) # load 0xa9ad3cc4ef909599 from memory into f30
fnmadd.d f21, f20, f23, f30 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xc839428a89669d4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a9e97844d39e862 # load x3 with value 0x7a9e97844d39e862
sd x3, 0(x2) # store 0x7a9e97844d39e862 in memory
fld f3, 0(x2) # load 0x7a9e97844d39e862 from memory into f3
li x3, 0xd5f9f1584ea8922c # load x3 with value 0xd5f9f1584ea8922c
sd x3, 0(x2) # store 0xd5f9f1584ea8922c in memory
fld f12, 0(x2) # load 0xd5f9f1584ea8922c from memory into f12
li x3, 0x7a3a708ddd947d8c # load x3 with value 0x7a3a708ddd947d8c
sd x3, 0(x2) # store 0x7a3a708ddd947d8c in memory
fld f19, 0(x2) # load 0x7a3a708ddd947d8c from memory into f19
fnmadd.d f22, f3, f12, f19 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xece0abce7f9d3af2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d6649f2cd8c0974 # load x3 with value 0x7d6649f2cd8c0974
sd x3, 0(x2) # store 0x7d6649f2cd8c0974 in memory
fld f20, 0(x2) # load 0x7d6649f2cd8c0974 from memory into f20
li x3, 0xaa60c4c46256435f # load x3 with value 0xaa60c4c46256435f
sd x3, 0(x2) # store 0xaa60c4c46256435f in memory
fld f27, 0(x2) # load 0xaa60c4c46256435f from memory into f27
li x3, 0xd39d8f67058ba998 # load x3 with value 0xd39d8f67058ba998
sd x3, 0(x2) # store 0xd39d8f67058ba998 in memory
fld f18, 0(x2) # load 0xd39d8f67058ba998 from memory into f18
fnmadd.d f23, f20, f27, f18 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x8a57474ff09f1929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4137124a914da7e # load x3 with value 0xf4137124a914da7e
sd x3, 0(x2) # store 0xf4137124a914da7e in memory
fld f26, 0(x2) # load 0xf4137124a914da7e from memory into f26
li x3, 0xaffaed67abab5a38 # load x3 with value 0xaffaed67abab5a38
sd x3, 0(x2) # store 0xaffaed67abab5a38 in memory
fld f11, 0(x2) # load 0xaffaed67abab5a38 from memory into f11
li x3, 0x9155712cf1958de4 # load x3 with value 0x9155712cf1958de4
sd x3, 0(x2) # store 0x9155712cf1958de4 in memory
fld f4, 0(x2) # load 0x9155712cf1958de4 from memory into f4
fnmadd.d f24, f26, f11, f4 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x34498e20daa79dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x572254f632d02873 # load x3 with value 0x572254f632d02873
sd x3, 0(x2) # store 0x572254f632d02873 in memory
fld f2, 0(x2) # load 0x572254f632d02873 from memory into f2
li x3, 0xaae885aa66216107 # load x3 with value 0xaae885aa66216107
sd x3, 0(x2) # store 0xaae885aa66216107 in memory
fld f1, 0(x2) # load 0xaae885aa66216107 from memory into f1
li x3, 0x9fc3c8b072dbed69 # load x3 with value 0x9fc3c8b072dbed69
sd x3, 0(x2) # store 0x9fc3c8b072dbed69 in memory
fld f5, 0(x2) # load 0x9fc3c8b072dbed69 from memory into f5
fnmadd.d f25, f2, f1, f5 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xd9861fb4c55a975d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x760dfb083ea9dd1b # load x3 with value 0x760dfb083ea9dd1b
sd x3, 0(x2) # store 0x760dfb083ea9dd1b in memory
fld f9, 0(x2) # load 0x760dfb083ea9dd1b from memory into f9
li x3, 0x70abe8a91d158cc7 # load x3 with value 0x70abe8a91d158cc7
sd x3, 0(x2) # store 0x70abe8a91d158cc7 in memory
fld f27, 0(x2) # load 0x70abe8a91d158cc7 from memory into f27
li x3, 0x639684c84264d390 # load x3 with value 0x639684c84264d390
sd x3, 0(x2) # store 0x639684c84264d390 in memory
fld f29, 0(x2) # load 0x639684c84264d390 from memory into f29
fnmadd.d f26, f9, f27, f29 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x2533c394bdc02dab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc81ebf8450b0483b # load x3 with value 0xc81ebf8450b0483b
sd x3, 0(x2) # store 0xc81ebf8450b0483b in memory
fld f31, 0(x2) # load 0xc81ebf8450b0483b from memory into f31
li x3, 0xcdcce9dfb03ba05a # load x3 with value 0xcdcce9dfb03ba05a
sd x3, 0(x2) # store 0xcdcce9dfb03ba05a in memory
fld f10, 0(x2) # load 0xcdcce9dfb03ba05a from memory into f10
li x3, 0xf8412a527a5870f8 # load x3 with value 0xf8412a527a5870f8
sd x3, 0(x2) # store 0xf8412a527a5870f8 in memory
fld f11, 0(x2) # load 0xf8412a527a5870f8 from memory into f11
fnmadd.d f27, f31, f10, f11 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x88820ec1b71275e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a470168c89c3271 # load x3 with value 0x9a470168c89c3271
sd x3, 0(x2) # store 0x9a470168c89c3271 in memory
fld f14, 0(x2) # load 0x9a470168c89c3271 from memory into f14
li x3, 0x39db4c08ad3505e5 # load x3 with value 0x39db4c08ad3505e5
sd x3, 0(x2) # store 0x39db4c08ad3505e5 in memory
fld f12, 0(x2) # load 0x39db4c08ad3505e5 from memory into f12
li x3, 0x439561248d0c087a # load x3 with value 0x439561248d0c087a
sd x3, 0(x2) # store 0x439561248d0c087a in memory
fld f29, 0(x2) # load 0x439561248d0c087a from memory into f29
fnmadd.d f28, f14, f12, f29 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x55a1a1518ac5fb84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2fb0642ba3285203 # load x3 with value 0x2fb0642ba3285203
sd x3, 0(x2) # store 0x2fb0642ba3285203 in memory
fld f31, 0(x2) # load 0x2fb0642ba3285203 from memory into f31
li x3, 0x15baa6eb34a1706f # load x3 with value 0x15baa6eb34a1706f
sd x3, 0(x2) # store 0x15baa6eb34a1706f in memory
fld f15, 0(x2) # load 0x15baa6eb34a1706f from memory into f15
li x3, 0x333f6e70feeca865 # load x3 with value 0x333f6e70feeca865
sd x3, 0(x2) # store 0x333f6e70feeca865 in memory
fld f9, 0(x2) # load 0x333f6e70feeca865 from memory into f9
fnmadd.d f29, f31, f15, f9 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x81c59a54c76be905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x258640fa5a398471 # load x3 with value 0x258640fa5a398471
sd x3, 0(x2) # store 0x258640fa5a398471 in memory
fld f14, 0(x2) # load 0x258640fa5a398471 from memory into f14
li x3, 0x7ce3f3adb083af81 # load x3 with value 0x7ce3f3adb083af81
sd x3, 0(x2) # store 0x7ce3f3adb083af81 in memory
fld f8, 0(x2) # load 0x7ce3f3adb083af81 from memory into f8
li x3, 0x2c110d046cba625d # load x3 with value 0x2c110d046cba625d
sd x3, 0(x2) # store 0x2c110d046cba625d in memory
fld f28, 0(x2) # load 0x2c110d046cba625d from memory into f28
fnmadd.d f30, f14, f8, f28 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x88b637ab87e44683 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xebc1643e8dc34951 # load x3 with value 0xebc1643e8dc34951
sd x3, 0(x2) # store 0xebc1643e8dc34951 in memory
fld f2, 0(x2) # load 0xebc1643e8dc34951 from memory into f2
li x3, 0xc81d478f7028f86a # load x3 with value 0xc81d478f7028f86a
sd x3, 0(x2) # store 0xc81d478f7028f86a in memory
fld f17, 0(x2) # load 0xc81d478f7028f86a from memory into f17
li x3, 0x3feb1e9f79843349 # load x3 with value 0x3feb1e9f79843349
sd x3, 0(x2) # store 0x3feb1e9f79843349 in memory
fld f20, 0(x2) # load 0x3feb1e9f79843349 from memory into f20
fnmadd.d f31, f2, f17, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x12, 0x26085c1e256ddd20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1dcfad0048263084 # load x3 with value 0x1dcfad0048263084
sd x3, 0(x2) # store 0x1dcfad0048263084 in memory
fld f0, 0(x2) # load 0x1dcfad0048263084 from memory into f0
li x3, 0x021e6e815ff555f7 # load x3 with value 0x021e6e815ff555f7
sd x3, 0(x2) # store 0x021e6e815ff555f7 in memory
fld f31, 0(x2) # load 0x021e6e815ff555f7 from memory into f31
li x3, 0xe10fb750f13090ba # load x3 with value 0xe10fb750f13090ba
sd x3, 0(x2) # store 0xe10fb750f13090ba in memory
fld f13, 0(x2) # load 0xe10fb750f13090ba from memory into f13
fnmadd.d f12, f0, f31, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x21, 0x7077abc70aab5c02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11c960aa1e72616a # load x3 with value 0x11c960aa1e72616a
sd x3, 0(x2) # store 0x11c960aa1e72616a in memory
fld f1, 0(x2) # load 0x11c960aa1e72616a from memory into f1
li x3, 0xfacd68ce3eb4dc9a # load x3 with value 0xfacd68ce3eb4dc9a
sd x3, 0(x2) # store 0xfacd68ce3eb4dc9a in memory
fld f7, 0(x2) # load 0xfacd68ce3eb4dc9a from memory into f7
li x3, 0xf938d61f0bc205b0 # load x3 with value 0xf938d61f0bc205b0
sd x3, 0(x2) # store 0xf938d61f0bc205b0 in memory
fld f30, 0(x2) # load 0xf938d61f0bc205b0 from memory into f30
fnmadd.d f21, f1, f7, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x9, 0x89e760570aaab159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a9302739866920a # load x3 with value 0x3a9302739866920a
sd x3, 0(x2) # store 0x3a9302739866920a in memory
fld f2, 0(x2) # load 0x3a9302739866920a from memory into f2
li x3, 0xe159c801fb15b4b3 # load x3 with value 0xe159c801fb15b4b3
sd x3, 0(x2) # store 0xe159c801fb15b4b3 in memory
fld f24, 0(x2) # load 0xe159c801fb15b4b3 from memory into f24
li x3, 0x55522ae124358c99 # load x3 with value 0x55522ae124358c99
sd x3, 0(x2) # store 0x55522ae124358c99 in memory
fld f20, 0(x2) # load 0x55522ae124358c99 from memory into f20
fnmadd.d f9, f2, f24, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x28, 0x46a74a44b817daa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14f3e49a63b96a63 # load x3 with value 0x14f3e49a63b96a63
sd x3, 0(x2) # store 0x14f3e49a63b96a63 in memory
fld f3, 0(x2) # load 0x14f3e49a63b96a63 from memory into f3
li x3, 0x130f5b0993a6c562 # load x3 with value 0x130f5b0993a6c562
sd x3, 0(x2) # store 0x130f5b0993a6c562 in memory
fld f12, 0(x2) # load 0x130f5b0993a6c562 from memory into f12
li x3, 0xa0cbc336e612815f # load x3 with value 0xa0cbc336e612815f
sd x3, 0(x2) # store 0xa0cbc336e612815f in memory
fld f20, 0(x2) # load 0xa0cbc336e612815f from memory into f20
fnmadd.d f28, f3, f12, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x22, 0xa89ae4a2d5c205d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c27b8aa07f4d948 # load x3 with value 0x3c27b8aa07f4d948
sd x3, 0(x2) # store 0x3c27b8aa07f4d948 in memory
fld f4, 0(x2) # load 0x3c27b8aa07f4d948 from memory into f4
li x3, 0x55295ef6950936c4 # load x3 with value 0x55295ef6950936c4
sd x3, 0(x2) # store 0x55295ef6950936c4 in memory
fld f6, 0(x2) # load 0x55295ef6950936c4 from memory into f6
li x3, 0x299a124d97f61969 # load x3 with value 0x299a124d97f61969
sd x3, 0(x2) # store 0x299a124d97f61969 in memory
fld f9, 0(x2) # load 0x299a124d97f61969 from memory into f9
fnmadd.d f22, f4, f6, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x26, 0x46a203646b87bf5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8b01458c6a20f62 # load x3 with value 0xf8b01458c6a20f62
sd x3, 0(x2) # store 0xf8b01458c6a20f62 in memory
fld f5, 0(x2) # load 0xf8b01458c6a20f62 from memory into f5
li x3, 0x4cd778bf3ec8b51d # load x3 with value 0x4cd778bf3ec8b51d
sd x3, 0(x2) # store 0x4cd778bf3ec8b51d in memory
fld f1, 0(x2) # load 0x4cd778bf3ec8b51d from memory into f1
li x3, 0x06a73f25c78f707c # load x3 with value 0x06a73f25c78f707c
sd x3, 0(x2) # store 0x06a73f25c78f707c in memory
fld f21, 0(x2) # load 0x06a73f25c78f707c from memory into f21
fnmadd.d f26, f5, f1, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x6, 0x1c494dc63966a91d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0efc87c7b3b6e4a1 # load x3 with value 0x0efc87c7b3b6e4a1
sd x3, 0(x2) # store 0x0efc87c7b3b6e4a1 in memory
fld f6, 0(x2) # load 0x0efc87c7b3b6e4a1 from memory into f6
li x3, 0x71752ac31926e491 # load x3 with value 0x71752ac31926e491
sd x3, 0(x2) # store 0x71752ac31926e491 in memory
fld f18, 0(x2) # load 0x71752ac31926e491 from memory into f18
li x3, 0xee7f68a0df243279 # load x3 with value 0xee7f68a0df243279
sd x3, 0(x2) # store 0xee7f68a0df243279 in memory
fld f4, 0(x2) # load 0xee7f68a0df243279 from memory into f4
fnmadd.d f6, f6, f18, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x5, 0x3d2d31509f2c09c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5a6771295daa3c0 # load x3 with value 0xc5a6771295daa3c0
sd x3, 0(x2) # store 0xc5a6771295daa3c0 in memory
fld f7, 0(x2) # load 0xc5a6771295daa3c0 from memory into f7
li x3, 0xa574222ba0008e99 # load x3 with value 0xa574222ba0008e99
sd x3, 0(x2) # store 0xa574222ba0008e99 in memory
fld f25, 0(x2) # load 0xa574222ba0008e99 from memory into f25
li x3, 0x0ae729a63dc43f1a # load x3 with value 0x0ae729a63dc43f1a
sd x3, 0(x2) # store 0x0ae729a63dc43f1a in memory
fld f11, 0(x2) # load 0x0ae729a63dc43f1a from memory into f11
fnmadd.d f5, f7, f25, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x23, 0x72d5b942fe4d3b9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3a8948513d99c95 # load x3 with value 0xf3a8948513d99c95
sd x3, 0(x2) # store 0xf3a8948513d99c95 in memory
fld f8, 0(x2) # load 0xf3a8948513d99c95 from memory into f8
li x3, 0xd2006a31c3be0696 # load x3 with value 0xd2006a31c3be0696
sd x3, 0(x2) # store 0xd2006a31c3be0696 in memory
fld f28, 0(x2) # load 0xd2006a31c3be0696 from memory into f28
li x3, 0xfe9f29de21de2e24 # load x3 with value 0xfe9f29de21de2e24
sd x3, 0(x2) # store 0xfe9f29de21de2e24 in memory
fld f8, 0(x2) # load 0xfe9f29de21de2e24 from memory into f8
fnmadd.d f23, f8, f28, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x9, 0x2e32480c2d80633f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6aad375359e11754 # load x3 with value 0x6aad375359e11754
sd x3, 0(x2) # store 0x6aad375359e11754 in memory
fld f9, 0(x2) # load 0x6aad375359e11754 from memory into f9
li x3, 0xb36f96fd93003d1b # load x3 with value 0xb36f96fd93003d1b
sd x3, 0(x2) # store 0xb36f96fd93003d1b in memory
fld f16, 0(x2) # load 0xb36f96fd93003d1b from memory into f16
li x3, 0x25e5778c11471c47 # load x3 with value 0x25e5778c11471c47
sd x3, 0(x2) # store 0x25e5778c11471c47 in memory
fld f7, 0(x2) # load 0x25e5778c11471c47 from memory into f7
fnmadd.d f9, f9, f16, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x4, 0xf57d52491be45f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c77deccc0e1ef44 # load x3 with value 0x7c77deccc0e1ef44
sd x3, 0(x2) # store 0x7c77deccc0e1ef44 in memory
fld f10, 0(x2) # load 0x7c77deccc0e1ef44 from memory into f10
li x3, 0x2250f875302f12cb # load x3 with value 0x2250f875302f12cb
sd x3, 0(x2) # store 0x2250f875302f12cb in memory
fld f2, 0(x2) # load 0x2250f875302f12cb from memory into f2
li x3, 0xca63722ace95e7ab # load x3 with value 0xca63722ace95e7ab
sd x3, 0(x2) # store 0xca63722ace95e7ab in memory
fld f8, 0(x2) # load 0xca63722ace95e7ab from memory into f8
fnmadd.d f4, f10, f2, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x25, 0x08f25dcfa88b0224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9389f3575470aec3 # load x3 with value 0x9389f3575470aec3
sd x3, 0(x2) # store 0x9389f3575470aec3 in memory
fld f11, 0(x2) # load 0x9389f3575470aec3 from memory into f11
li x3, 0xc327efd4ecfa3d28 # load x3 with value 0xc327efd4ecfa3d28
sd x3, 0(x2) # store 0xc327efd4ecfa3d28 in memory
fld f1, 0(x2) # load 0xc327efd4ecfa3d28 from memory into f1
li x3, 0x514314f5270271d1 # load x3 with value 0x514314f5270271d1
sd x3, 0(x2) # store 0x514314f5270271d1 in memory
fld f6, 0(x2) # load 0x514314f5270271d1 from memory into f6
fnmadd.d f25, f11, f1, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x27, 0x8d3c51f7a988d038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dfef2f23838b79d # load x3 with value 0x4dfef2f23838b79d
sd x3, 0(x2) # store 0x4dfef2f23838b79d in memory
fld f12, 0(x2) # load 0x4dfef2f23838b79d from memory into f12
li x3, 0x40925c380fd22b28 # load x3 with value 0x40925c380fd22b28
sd x3, 0(x2) # store 0x40925c380fd22b28 in memory
fld f24, 0(x2) # load 0x40925c380fd22b28 from memory into f24
li x3, 0x3ca89ff0fa6217a9 # load x3 with value 0x3ca89ff0fa6217a9
sd x3, 0(x2) # store 0x3ca89ff0fa6217a9 in memory
fld f30, 0(x2) # load 0x3ca89ff0fa6217a9 from memory into f30
fnmadd.d f27, f12, f24, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x26, 0xecdbfd7c327b41eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x890c9e7e4c956351 # load x3 with value 0x890c9e7e4c956351
sd x3, 0(x2) # store 0x890c9e7e4c956351 in memory
fld f13, 0(x2) # load 0x890c9e7e4c956351 from memory into f13
li x3, 0x3c7d465b1afcefa6 # load x3 with value 0x3c7d465b1afcefa6
sd x3, 0(x2) # store 0x3c7d465b1afcefa6 in memory
fld f3, 0(x2) # load 0x3c7d465b1afcefa6 from memory into f3
li x3, 0xc9c062676a6e4650 # load x3 with value 0xc9c062676a6e4650
sd x3, 0(x2) # store 0xc9c062676a6e4650 in memory
fld f13, 0(x2) # load 0xc9c062676a6e4650 from memory into f13
fnmadd.d f26, f13, f3, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x12, 0x715fa1609523558b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f823d1d8219a12e # load x3 with value 0x6f823d1d8219a12e
sd x3, 0(x2) # store 0x6f823d1d8219a12e in memory
fld f14, 0(x2) # load 0x6f823d1d8219a12e from memory into f14
li x3, 0xc3e8dbc46288dfb7 # load x3 with value 0xc3e8dbc46288dfb7
sd x3, 0(x2) # store 0xc3e8dbc46288dfb7 in memory
fld f24, 0(x2) # load 0xc3e8dbc46288dfb7 from memory into f24
li x3, 0x5175242db06d8f8b # load x3 with value 0x5175242db06d8f8b
sd x3, 0(x2) # store 0x5175242db06d8f8b in memory
fld f15, 0(x2) # load 0x5175242db06d8f8b from memory into f15
fnmadd.d f12, f14, f24, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x31, 0xdfe866205d246f31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b23eceb74802495 # load x3 with value 0x4b23eceb74802495
sd x3, 0(x2) # store 0x4b23eceb74802495 in memory
fld f15, 0(x2) # load 0x4b23eceb74802495 from memory into f15
li x3, 0x796cd9d1064f07b5 # load x3 with value 0x796cd9d1064f07b5
sd x3, 0(x2) # store 0x796cd9d1064f07b5 in memory
fld f19, 0(x2) # load 0x796cd9d1064f07b5 from memory into f19
li x3, 0x449affb3be6c6346 # load x3 with value 0x449affb3be6c6346
sd x3, 0(x2) # store 0x449affb3be6c6346 in memory
fld f9, 0(x2) # load 0x449affb3be6c6346 from memory into f9
fnmadd.d f31, f15, f19, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x29, 0x83c8aabef710b4ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00d88ac7e47dcbbe # load x3 with value 0x00d88ac7e47dcbbe
sd x3, 0(x2) # store 0x00d88ac7e47dcbbe in memory
fld f16, 0(x2) # load 0x00d88ac7e47dcbbe from memory into f16
li x3, 0x29d852b69cbc3656 # load x3 with value 0x29d852b69cbc3656
sd x3, 0(x2) # store 0x29d852b69cbc3656 in memory
fld f4, 0(x2) # load 0x29d852b69cbc3656 from memory into f4
li x3, 0xbf482db34b64d71b # load x3 with value 0xbf482db34b64d71b
sd x3, 0(x2) # store 0xbf482db34b64d71b in memory
fld f31, 0(x2) # load 0xbf482db34b64d71b from memory into f31
fnmadd.d f29, f16, f4, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x14, 0x9d7f2f45e9fab606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaae7e18685871069 # load x3 with value 0xaae7e18685871069
sd x3, 0(x2) # store 0xaae7e18685871069 in memory
fld f17, 0(x2) # load 0xaae7e18685871069 from memory into f17
li x3, 0xfe8f7326dd75ca3b # load x3 with value 0xfe8f7326dd75ca3b
sd x3, 0(x2) # store 0xfe8f7326dd75ca3b in memory
fld f27, 0(x2) # load 0xfe8f7326dd75ca3b from memory into f27
li x3, 0xf9fa32e7f8117153 # load x3 with value 0xf9fa32e7f8117153
sd x3, 0(x2) # store 0xf9fa32e7f8117153 in memory
fld f23, 0(x2) # load 0xf9fa32e7f8117153 from memory into f23
fnmadd.d f14, f17, f27, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x28, 0x629bbb59e8e5b522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd9abc00215cc6f11 # load x3 with value 0xd9abc00215cc6f11
sd x3, 0(x2) # store 0xd9abc00215cc6f11 in memory
fld f18, 0(x2) # load 0xd9abc00215cc6f11 from memory into f18
li x3, 0x33d94b183ca7ce68 # load x3 with value 0x33d94b183ca7ce68
sd x3, 0(x2) # store 0x33d94b183ca7ce68 in memory
fld f23, 0(x2) # load 0x33d94b183ca7ce68 from memory into f23
li x3, 0x48c1f2040c7d25e7 # load x3 with value 0x48c1f2040c7d25e7
sd x3, 0(x2) # store 0x48c1f2040c7d25e7 in memory
fld f18, 0(x2) # load 0x48c1f2040c7d25e7 from memory into f18
fnmadd.d f28, f18, f23, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x17, 0xb49bfd72c7345012 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8afa186aa6620147 # load x3 with value 0x8afa186aa6620147
sd x3, 0(x2) # store 0x8afa186aa6620147 in memory
fld f19, 0(x2) # load 0x8afa186aa6620147 from memory into f19
li x3, 0x1c3c307fa5c6e445 # load x3 with value 0x1c3c307fa5c6e445
sd x3, 0(x2) # store 0x1c3c307fa5c6e445 in memory
fld f23, 0(x2) # load 0x1c3c307fa5c6e445 from memory into f23
li x3, 0x5d1f2e6d598e5d2f # load x3 with value 0x5d1f2e6d598e5d2f
sd x3, 0(x2) # store 0x5d1f2e6d598e5d2f in memory
fld f4, 0(x2) # load 0x5d1f2e6d598e5d2f from memory into f4
fnmadd.d f17, f19, f23, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x31, 0x0c880f5f8c20a9ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x922ff24d8c2c433c # load x3 with value 0x922ff24d8c2c433c
sd x3, 0(x2) # store 0x922ff24d8c2c433c in memory
fld f20, 0(x2) # load 0x922ff24d8c2c433c from memory into f20
li x3, 0x14b6eed1b1b4f34d # load x3 with value 0x14b6eed1b1b4f34d
sd x3, 0(x2) # store 0x14b6eed1b1b4f34d in memory
fld f6, 0(x2) # load 0x14b6eed1b1b4f34d from memory into f6
li x3, 0x4bd18f6971565b4f # load x3 with value 0x4bd18f6971565b4f
sd x3, 0(x2) # store 0x4bd18f6971565b4f in memory
fld f11, 0(x2) # load 0x4bd18f6971565b4f from memory into f11
fnmadd.d f31, f20, f6, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x28, 0x32dee094d57d2959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89a325e87f8fe4ec # load x3 with value 0x89a325e87f8fe4ec
sd x3, 0(x2) # store 0x89a325e87f8fe4ec in memory
fld f21, 0(x2) # load 0x89a325e87f8fe4ec from memory into f21
li x3, 0x022ab1a84db2165d # load x3 with value 0x022ab1a84db2165d
sd x3, 0(x2) # store 0x022ab1a84db2165d in memory
fld f26, 0(x2) # load 0x022ab1a84db2165d from memory into f26
li x3, 0xd30de491a56bab6c # load x3 with value 0xd30de491a56bab6c
sd x3, 0(x2) # store 0xd30de491a56bab6c in memory
fld f14, 0(x2) # load 0xd30de491a56bab6c from memory into f14
fnmadd.d f28, f21, f26, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x17, 0x1a78b9c343c2128f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1433cc17016b205 # load x3 with value 0xe1433cc17016b205
sd x3, 0(x2) # store 0xe1433cc17016b205 in memory
fld f22, 0(x2) # load 0xe1433cc17016b205 from memory into f22
li x3, 0x42a35ef24d1c19f9 # load x3 with value 0x42a35ef24d1c19f9
sd x3, 0(x2) # store 0x42a35ef24d1c19f9 in memory
fld f10, 0(x2) # load 0x42a35ef24d1c19f9 from memory into f10
li x3, 0x5669ed0c4c7ac2a2 # load x3 with value 0x5669ed0c4c7ac2a2
sd x3, 0(x2) # store 0x5669ed0c4c7ac2a2 in memory
fld f16, 0(x2) # load 0x5669ed0c4c7ac2a2 from memory into f16
fnmadd.d f17, f22, f10, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x10, 0xc2971666ea1401ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x786ebd8ee645f60b # load x3 with value 0x786ebd8ee645f60b
sd x3, 0(x2) # store 0x786ebd8ee645f60b in memory
fld f23, 0(x2) # load 0x786ebd8ee645f60b from memory into f23
li x3, 0x003a4201a58a1c72 # load x3 with value 0x003a4201a58a1c72
sd x3, 0(x2) # store 0x003a4201a58a1c72 in memory
fld f2, 0(x2) # load 0x003a4201a58a1c72 from memory into f2
li x3, 0x8d58e11d11f20878 # load x3 with value 0x8d58e11d11f20878
sd x3, 0(x2) # store 0x8d58e11d11f20878 in memory
fld f26, 0(x2) # load 0x8d58e11d11f20878 from memory into f26
fnmadd.d f10, f23, f2, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x23, 0x815a4ab070b83a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6c43879624aa2ef # load x3 with value 0xe6c43879624aa2ef
sd x3, 0(x2) # store 0xe6c43879624aa2ef in memory
fld f24, 0(x2) # load 0xe6c43879624aa2ef from memory into f24
li x3, 0x0050970ee9ba79c7 # load x3 with value 0x0050970ee9ba79c7
sd x3, 0(x2) # store 0x0050970ee9ba79c7 in memory
fld f2, 0(x2) # load 0x0050970ee9ba79c7 from memory into f2
li x3, 0xf29c7107bbacca1e # load x3 with value 0xf29c7107bbacca1e
sd x3, 0(x2) # store 0xf29c7107bbacca1e in memory
fld f10, 0(x2) # load 0xf29c7107bbacca1e from memory into f10
fnmadd.d f23, f24, f2, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x24, 0x72ab6d0a21ad8e0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70a01af6a70d0ea9 # load x3 with value 0x70a01af6a70d0ea9
sd x3, 0(x2) # store 0x70a01af6a70d0ea9 in memory
fld f25, 0(x2) # load 0x70a01af6a70d0ea9 from memory into f25
li x3, 0xbf23271043fdf2e4 # load x3 with value 0xbf23271043fdf2e4
sd x3, 0(x2) # store 0xbf23271043fdf2e4 in memory
fld f23, 0(x2) # load 0xbf23271043fdf2e4 from memory into f23
li x3, 0x0f7539de01668eaa # load x3 with value 0x0f7539de01668eaa
sd x3, 0(x2) # store 0x0f7539de01668eaa in memory
fld f13, 0(x2) # load 0x0f7539de01668eaa from memory into f13
fnmadd.d f24, f25, f23, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x19, 0x2e9bd298cd19d991 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b989d3e911132d2 # load x3 with value 0x3b989d3e911132d2
sd x3, 0(x2) # store 0x3b989d3e911132d2 in memory
fld f26, 0(x2) # load 0x3b989d3e911132d2 from memory into f26
li x3, 0xaa06c7d7deb4707d # load x3 with value 0xaa06c7d7deb4707d
sd x3, 0(x2) # store 0xaa06c7d7deb4707d in memory
fld f7, 0(x2) # load 0xaa06c7d7deb4707d from memory into f7
li x3, 0x5d2e6b85a77a2a16 # load x3 with value 0x5d2e6b85a77a2a16
sd x3, 0(x2) # store 0x5d2e6b85a77a2a16 in memory
fld f25, 0(x2) # load 0x5d2e6b85a77a2a16 from memory into f25
fnmadd.d f19, f26, f7, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x29, 0x2ce56729408d832a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83a8762b44ef2416 # load x3 with value 0x83a8762b44ef2416
sd x3, 0(x2) # store 0x83a8762b44ef2416 in memory
fld f27, 0(x2) # load 0x83a8762b44ef2416 from memory into f27
li x3, 0x0f6c683a8ef6b450 # load x3 with value 0x0f6c683a8ef6b450
sd x3, 0(x2) # store 0x0f6c683a8ef6b450 in memory
fld f2, 0(x2) # load 0x0f6c683a8ef6b450 from memory into f2
li x3, 0xa41a60879871fcf7 # load x3 with value 0xa41a60879871fcf7
sd x3, 0(x2) # store 0xa41a60879871fcf7 in memory
fld f9, 0(x2) # load 0xa41a60879871fcf7 from memory into f9
fnmadd.d f29, f27, f2, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x20, 0x8ca7c0658cfe21b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0cb59ff6aebd588e # load x3 with value 0x0cb59ff6aebd588e
sd x3, 0(x2) # store 0x0cb59ff6aebd588e in memory
fld f28, 0(x2) # load 0x0cb59ff6aebd588e from memory into f28
li x3, 0x4dfcaedef71e2d2c # load x3 with value 0x4dfcaedef71e2d2c
sd x3, 0(x2) # store 0x4dfcaedef71e2d2c in memory
fld f21, 0(x2) # load 0x4dfcaedef71e2d2c from memory into f21
li x3, 0x364cedfb08650185 # load x3 with value 0x364cedfb08650185
sd x3, 0(x2) # store 0x364cedfb08650185 in memory
fld f31, 0(x2) # load 0x364cedfb08650185 from memory into f31
fnmadd.d f20, f28, f21, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x2, 0x35d4171285008b5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdaf0fd0391a417dd # load x3 with value 0xdaf0fd0391a417dd
sd x3, 0(x2) # store 0xdaf0fd0391a417dd in memory
fld f29, 0(x2) # load 0xdaf0fd0391a417dd from memory into f29
li x3, 0x9b2100c486725252 # load x3 with value 0x9b2100c486725252
sd x3, 0(x2) # store 0x9b2100c486725252 in memory
fld f13, 0(x2) # load 0x9b2100c486725252 from memory into f13
li x3, 0xd362a90130f16a49 # load x3 with value 0xd362a90130f16a49
sd x3, 0(x2) # store 0xd362a90130f16a49 in memory
fld f19, 0(x2) # load 0xd362a90130f16a49 from memory into f19
fnmadd.d f2, f29, f13, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x8, 0x436ed4c657c0da62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe258c89220e3ffbe # load x3 with value 0xe258c89220e3ffbe
sd x3, 0(x2) # store 0xe258c89220e3ffbe in memory
fld f30, 0(x2) # load 0xe258c89220e3ffbe from memory into f30
li x3, 0x0780fc2e083cd460 # load x3 with value 0x0780fc2e083cd460
sd x3, 0(x2) # store 0x0780fc2e083cd460 in memory
fld f9, 0(x2) # load 0x0780fc2e083cd460 from memory into f9
li x3, 0xdb051ae86c683bf7 # load x3 with value 0xdb051ae86c683bf7
sd x3, 0(x2) # store 0xdb051ae86c683bf7 in memory
fld f22, 0(x2) # load 0xdb051ae86c683bf7 from memory into f22
fnmadd.d f8, f30, f9, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x17, 0x7f426d20e9f9442b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9ac9442c315ddeb # load x3 with value 0xc9ac9442c315ddeb
sd x3, 0(x2) # store 0xc9ac9442c315ddeb in memory
fld f31, 0(x2) # load 0xc9ac9442c315ddeb from memory into f31
li x3, 0xa3a1eee048880fe9 # load x3 with value 0xa3a1eee048880fe9
sd x3, 0(x2) # store 0xa3a1eee048880fe9 in memory
fld f5, 0(x2) # load 0xa3a1eee048880fe9 from memory into f5
li x3, 0x0d3f897911937b82 # load x3 with value 0x0d3f897911937b82
sd x3, 0(x2) # store 0x0d3f897911937b82 in memory
fld f29, 0(x2) # load 0x0d3f897911937b82 from memory into f29
fnmadd.d f17, f31, f5, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x27, 0x4e738f48ccd861a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ebf274303d979cc # load x3 with value 0x7ebf274303d979cc
sd x3, 0(x2) # store 0x7ebf274303d979cc in memory
fld f3, 0(x2) # load 0x7ebf274303d979cc from memory into f3
li x3, 0x73bea6fd6d2bbfc8 # load x3 with value 0x73bea6fd6d2bbfc8
sd x3, 0(x2) # store 0x73bea6fd6d2bbfc8 in memory
fld f0, 0(x2) # load 0x73bea6fd6d2bbfc8 from memory into f0
li x3, 0xdb94467879f0e597 # load x3 with value 0xdb94467879f0e597
sd x3, 0(x2) # store 0xdb94467879f0e597 in memory
fld f1, 0(x2) # load 0xdb94467879f0e597 from memory into f1
fnmadd.d f27, f3, f0, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x3, 0x0ab9db925999a30f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb10d9966fc9fd307 # load x3 with value 0xb10d9966fc9fd307
sd x3, 0(x2) # store 0xb10d9966fc9fd307 in memory
fld f5, 0(x2) # load 0xb10d9966fc9fd307 from memory into f5
li x3, 0x808b5304828c1c73 # load x3 with value 0x808b5304828c1c73
sd x3, 0(x2) # store 0x808b5304828c1c73 in memory
fld f1, 0(x2) # load 0x808b5304828c1c73 from memory into f1
li x3, 0x1ffdfdc5df0e5d9d # load x3 with value 0x1ffdfdc5df0e5d9d
sd x3, 0(x2) # store 0x1ffdfdc5df0e5d9d in memory
fld f14, 0(x2) # load 0x1ffdfdc5df0e5d9d from memory into f14
fnmadd.d f3, f5, f1, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x21, 0xf337659575f0f20d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x029f2e77b47e3975 # load x3 with value 0x029f2e77b47e3975
sd x3, 0(x2) # store 0x029f2e77b47e3975 in memory
fld f8, 0(x2) # load 0x029f2e77b47e3975 from memory into f8
li x3, 0xad3b5b453fa9c25f # load x3 with value 0xad3b5b453fa9c25f
sd x3, 0(x2) # store 0xad3b5b453fa9c25f in memory
fld f2, 0(x2) # load 0xad3b5b453fa9c25f from memory into f2
li x3, 0x4f3626a17225635f # load x3 with value 0x4f3626a17225635f
sd x3, 0(x2) # store 0x4f3626a17225635f in memory
fld f16, 0(x2) # load 0x4f3626a17225635f from memory into f16
fnmadd.d f21, f8, f2, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x7, 0x322711ee747755f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fdecfa5cc714981 # load x3 with value 0x9fdecfa5cc714981
sd x3, 0(x2) # store 0x9fdecfa5cc714981 in memory
fld f2, 0(x2) # load 0x9fdecfa5cc714981 from memory into f2
li x3, 0xfcc38696ddab0d80 # load x3 with value 0xfcc38696ddab0d80
sd x3, 0(x2) # store 0xfcc38696ddab0d80 in memory
fld f3, 0(x2) # load 0xfcc38696ddab0d80 from memory into f3
li x3, 0xe061c8c8eaad8700 # load x3 with value 0xe061c8c8eaad8700
sd x3, 0(x2) # store 0xe061c8c8eaad8700 in memory
fld f1, 0(x2) # load 0xe061c8c8eaad8700 from memory into f1
fnmadd.d f7, f2, f3, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x25, 0x3c03093608ac540f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x708571f42212b362 # load x3 with value 0x708571f42212b362
sd x3, 0(x2) # store 0x708571f42212b362 in memory
fld f3, 0(x2) # load 0x708571f42212b362 from memory into f3
li x3, 0xb3db4c06b8d78ed4 # load x3 with value 0xb3db4c06b8d78ed4
sd x3, 0(x2) # store 0xb3db4c06b8d78ed4 in memory
fld f4, 0(x2) # load 0xb3db4c06b8d78ed4 from memory into f4
li x3, 0x48b6e69527c2f06e # load x3 with value 0x48b6e69527c2f06e
sd x3, 0(x2) # store 0x48b6e69527c2f06e in memory
fld f8, 0(x2) # load 0x48b6e69527c2f06e from memory into f8
fnmadd.d f25, f3, f4, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x25, 0x1fcc4128329a7edd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc134479ca531abf2 # load x3 with value 0xc134479ca531abf2
sd x3, 0(x2) # store 0xc134479ca531abf2 in memory
fld f30, 0(x2) # load 0xc134479ca531abf2 from memory into f30
li x3, 0xad8549a057e6ff43 # load x3 with value 0xad8549a057e6ff43
sd x3, 0(x2) # store 0xad8549a057e6ff43 in memory
fld f5, 0(x2) # load 0xad8549a057e6ff43 from memory into f5
li x3, 0x889af724cd4bd0cd # load x3 with value 0x889af724cd4bd0cd
sd x3, 0(x2) # store 0x889af724cd4bd0cd in memory
fld f10, 0(x2) # load 0x889af724cd4bd0cd from memory into f10
fnmadd.d f25, f30, f5, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x16, 0xf01336cc26c9ff9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3116e126dede4185 # load x3 with value 0x3116e126dede4185
sd x3, 0(x2) # store 0x3116e126dede4185 in memory
fld f20, 0(x2) # load 0x3116e126dede4185 from memory into f20
li x3, 0x385d32a2469523bc # load x3 with value 0x385d32a2469523bc
sd x3, 0(x2) # store 0x385d32a2469523bc in memory
fld f6, 0(x2) # load 0x385d32a2469523bc from memory into f6
li x3, 0xcd9e4cde314886f2 # load x3 with value 0xcd9e4cde314886f2
sd x3, 0(x2) # store 0xcd9e4cde314886f2 in memory
fld f18, 0(x2) # load 0xcd9e4cde314886f2 from memory into f18
fnmadd.d f16, f20, f6, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x5, 0x7cdaf7745a16d9ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d955356b9c14902 # load x3 with value 0x2d955356b9c14902
sd x3, 0(x2) # store 0x2d955356b9c14902 in memory
fld f10, 0(x2) # load 0x2d955356b9c14902 from memory into f10
li x3, 0x5c225590ee400955 # load x3 with value 0x5c225590ee400955
sd x3, 0(x2) # store 0x5c225590ee400955 in memory
fld f7, 0(x2) # load 0x5c225590ee400955 from memory into f7
li x3, 0x5544363dfae884a5 # load x3 with value 0x5544363dfae884a5
sd x3, 0(x2) # store 0x5544363dfae884a5 in memory
fld f26, 0(x2) # load 0x5544363dfae884a5 from memory into f26
fnmadd.d f5, f10, f7, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x16, 0xff3f402581c14c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x47e082c5e6108169 # load x3 with value 0x47e082c5e6108169
sd x3, 0(x2) # store 0x47e082c5e6108169 in memory
fld f6, 0(x2) # load 0x47e082c5e6108169 from memory into f6
li x3, 0xa266a811691f9feb # load x3 with value 0xa266a811691f9feb
sd x3, 0(x2) # store 0xa266a811691f9feb in memory
fld f8, 0(x2) # load 0xa266a811691f9feb from memory into f8
li x3, 0xa4a0a050aee4d812 # load x3 with value 0xa4a0a050aee4d812
sd x3, 0(x2) # store 0xa4a0a050aee4d812 in memory
fld f27, 0(x2) # load 0xa4a0a050aee4d812 from memory into f27
fnmadd.d f16, f6, f8, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x8, 0x9b6bca0cf09d67d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57ed4a07fa16100d # load x3 with value 0x57ed4a07fa16100d
sd x3, 0(x2) # store 0x57ed4a07fa16100d in memory
fld f18, 0(x2) # load 0x57ed4a07fa16100d from memory into f18
li x3, 0xd66c789f10042eab # load x3 with value 0xd66c789f10042eab
sd x3, 0(x2) # store 0xd66c789f10042eab in memory
fld f9, 0(x2) # load 0xd66c789f10042eab from memory into f9
li x3, 0xe41dbcc9448c8995 # load x3 with value 0xe41dbcc9448c8995
sd x3, 0(x2) # store 0xe41dbcc9448c8995 in memory
fld f27, 0(x2) # load 0xe41dbcc9448c8995 from memory into f27
fnmadd.d f8, f18, f9, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x7, 0xafce09f7f3e52c8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71aca05e2e641912 # load x3 with value 0x71aca05e2e641912
sd x3, 0(x2) # store 0x71aca05e2e641912 in memory
fld f4, 0(x2) # load 0x71aca05e2e641912 from memory into f4
li x3, 0xf852e81ce0961935 # load x3 with value 0xf852e81ce0961935
sd x3, 0(x2) # store 0xf852e81ce0961935 in memory
fld f10, 0(x2) # load 0xf852e81ce0961935 from memory into f10
li x3, 0xff7aa634db838851 # load x3 with value 0xff7aa634db838851
sd x3, 0(x2) # store 0xff7aa634db838851 in memory
fld f9, 0(x2) # load 0xff7aa634db838851 from memory into f9
fnmadd.d f7, f4, f10, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x6, 0x80f70cff4efa6e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66a50dec2a2af1b7 # load x3 with value 0x66a50dec2a2af1b7
sd x3, 0(x2) # store 0x66a50dec2a2af1b7 in memory
fld f3, 0(x2) # load 0x66a50dec2a2af1b7 from memory into f3
li x3, 0xff717f4f0336cf0e # load x3 with value 0xff717f4f0336cf0e
sd x3, 0(x2) # store 0xff717f4f0336cf0e in memory
fld f11, 0(x2) # load 0xff717f4f0336cf0e from memory into f11
li x3, 0xc00afb4e5fe8dfb0 # load x3 with value 0xc00afb4e5fe8dfb0
sd x3, 0(x2) # store 0xc00afb4e5fe8dfb0 in memory
fld f19, 0(x2) # load 0xc00afb4e5fe8dfb0 from memory into f19
fnmadd.d f6, f3, f11, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x5, 0x0f7290912334d5dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x071bc0951d36c1a3 # load x3 with value 0x071bc0951d36c1a3
sd x3, 0(x2) # store 0x071bc0951d36c1a3 in memory
fld f23, 0(x2) # load 0x071bc0951d36c1a3 from memory into f23
li x3, 0xa1c76458b37cf331 # load x3 with value 0xa1c76458b37cf331
sd x3, 0(x2) # store 0xa1c76458b37cf331 in memory
fld f12, 0(x2) # load 0xa1c76458b37cf331 from memory into f12
li x3, 0x94fbbb3ba5527cc4 # load x3 with value 0x94fbbb3ba5527cc4
sd x3, 0(x2) # store 0x94fbbb3ba5527cc4 in memory
fld f16, 0(x2) # load 0x94fbbb3ba5527cc4 from memory into f16
fnmadd.d f5, f23, f12, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x8, 0xd5567203e7f904b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0a3018d794641fb # load x3 with value 0xe0a3018d794641fb
sd x3, 0(x2) # store 0xe0a3018d794641fb in memory
fld f11, 0(x2) # load 0xe0a3018d794641fb from memory into f11
li x3, 0x04e2a177952ef148 # load x3 with value 0x04e2a177952ef148
sd x3, 0(x2) # store 0x04e2a177952ef148 in memory
fld f13, 0(x2) # load 0x04e2a177952ef148 from memory into f13
li x3, 0x65e8b2bd1fa0e541 # load x3 with value 0x65e8b2bd1fa0e541
sd x3, 0(x2) # store 0x65e8b2bd1fa0e541 in memory
fld f16, 0(x2) # load 0x65e8b2bd1fa0e541 from memory into f16
fnmadd.d f8, f11, f13, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x5, 0x36c45998a2ebd1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23dfe10d7d045db4 # load x3 with value 0x23dfe10d7d045db4
sd x3, 0(x2) # store 0x23dfe10d7d045db4 in memory
fld f18, 0(x2) # load 0x23dfe10d7d045db4 from memory into f18
li x3, 0x073aa5f319f13b25 # load x3 with value 0x073aa5f319f13b25
sd x3, 0(x2) # store 0x073aa5f319f13b25 in memory
fld f14, 0(x2) # load 0x073aa5f319f13b25 from memory into f14
li x3, 0xea220e8db918bc4b # load x3 with value 0xea220e8db918bc4b
sd x3, 0(x2) # store 0xea220e8db918bc4b in memory
fld f8, 0(x2) # load 0xea220e8db918bc4b from memory into f8
fnmadd.d f5, f18, f14, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x11, 0x7c8c63870f04b3d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3b9e60bfa5c7dc5 # load x3 with value 0xa3b9e60bfa5c7dc5
sd x3, 0(x2) # store 0xa3b9e60bfa5c7dc5 in memory
fld f8, 0(x2) # load 0xa3b9e60bfa5c7dc5 from memory into f8
li x3, 0xb7633558d0f19ad0 # load x3 with value 0xb7633558d0f19ad0
sd x3, 0(x2) # store 0xb7633558d0f19ad0 in memory
fld f15, 0(x2) # load 0xb7633558d0f19ad0 from memory into f15
li x3, 0xe1de5cc18b4c2901 # load x3 with value 0xe1de5cc18b4c2901
sd x3, 0(x2) # store 0xe1de5cc18b4c2901 in memory
fld f1, 0(x2) # load 0xe1de5cc18b4c2901 from memory into f1
fnmadd.d f11, f8, f15, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x6, 0xc5410365d3b0e9cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa599a77c38a81e86 # load x3 with value 0xa599a77c38a81e86
sd x3, 0(x2) # store 0xa599a77c38a81e86 in memory
fld f31, 0(x2) # load 0xa599a77c38a81e86 from memory into f31
li x3, 0xf76d7b962acda3aa # load x3 with value 0xf76d7b962acda3aa
sd x3, 0(x2) # store 0xf76d7b962acda3aa in memory
fld f16, 0(x2) # load 0xf76d7b962acda3aa from memory into f16
li x3, 0xd71ec8c4e072d439 # load x3 with value 0xd71ec8c4e072d439
sd x3, 0(x2) # store 0xd71ec8c4e072d439 in memory
fld f12, 0(x2) # load 0xd71ec8c4e072d439 from memory into f12
fnmadd.d f6, f31, f16, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x15, 0x792fa589adc78032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd91eccecdc9330d9 # load x3 with value 0xd91eccecdc9330d9
sd x3, 0(x2) # store 0xd91eccecdc9330d9 in memory
fld f30, 0(x2) # load 0xd91eccecdc9330d9 from memory into f30
li x3, 0x79d633d9c7f81d45 # load x3 with value 0x79d633d9c7f81d45
sd x3, 0(x2) # store 0x79d633d9c7f81d45 in memory
fld f17, 0(x2) # load 0x79d633d9c7f81d45 from memory into f17
li x3, 0xa0643711efb40802 # load x3 with value 0xa0643711efb40802
sd x3, 0(x2) # store 0xa0643711efb40802 in memory
fld f6, 0(x2) # load 0xa0643711efb40802 from memory into f6
fnmadd.d f15, f30, f17, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x23, 0x346bb8ce036d0fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ade4d8b6a2c01c2 # load x3 with value 0x9ade4d8b6a2c01c2
sd x3, 0(x2) # store 0x9ade4d8b6a2c01c2 in memory
fld f15, 0(x2) # load 0x9ade4d8b6a2c01c2 from memory into f15
li x3, 0x7df2ba4609b8cdc0 # load x3 with value 0x7df2ba4609b8cdc0
sd x3, 0(x2) # store 0x7df2ba4609b8cdc0 in memory
fld f18, 0(x2) # load 0x7df2ba4609b8cdc0 from memory into f18
li x3, 0x943271018a661910 # load x3 with value 0x943271018a661910
sd x3, 0(x2) # store 0x943271018a661910 in memory
fld f5, 0(x2) # load 0x943271018a661910 from memory into f5
fnmadd.d f23, f15, f18, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x26, 0x28872f4344a9826a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe9c1d8b30bedc4e # load x3 with value 0xbe9c1d8b30bedc4e
sd x3, 0(x2) # store 0xbe9c1d8b30bedc4e in memory
fld f13, 0(x2) # load 0xbe9c1d8b30bedc4e from memory into f13
li x3, 0x4b45a6d022413b95 # load x3 with value 0x4b45a6d022413b95
sd x3, 0(x2) # store 0x4b45a6d022413b95 in memory
fld f19, 0(x2) # load 0x4b45a6d022413b95 from memory into f19
li x3, 0x374e214360fcc048 # load x3 with value 0x374e214360fcc048
sd x3, 0(x2) # store 0x374e214360fcc048 in memory
fld f2, 0(x2) # load 0x374e214360fcc048 from memory into f2
fnmadd.d f26, f13, f19, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x1, 0x52c38ded735fe2b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b4fba1b4f046070 # load x3 with value 0x9b4fba1b4f046070
sd x3, 0(x2) # store 0x9b4fba1b4f046070 in memory
fld f13, 0(x2) # load 0x9b4fba1b4f046070 from memory into f13
li x3, 0x3373493160734963 # load x3 with value 0x3373493160734963
sd x3, 0(x2) # store 0x3373493160734963 in memory
fld f20, 0(x2) # load 0x3373493160734963 from memory into f20
li x3, 0x8e70ba56b17c7263 # load x3 with value 0x8e70ba56b17c7263
sd x3, 0(x2) # store 0x8e70ba56b17c7263 in memory
fld f4, 0(x2) # load 0x8e70ba56b17c7263 from memory into f4
fnmadd.d f1, f13, f20, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x20, 0x26cc3828d2f7e272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x534a5cc056d28891 # load x3 with value 0x534a5cc056d28891
sd x3, 0(x2) # store 0x534a5cc056d28891 in memory
fld f12, 0(x2) # load 0x534a5cc056d28891 from memory into f12
li x3, 0xf674795c9f9972bd # load x3 with value 0xf674795c9f9972bd
sd x3, 0(x2) # store 0xf674795c9f9972bd in memory
fld f21, 0(x2) # load 0xf674795c9f9972bd from memory into f21
li x3, 0x658b8e4b9e4956e7 # load x3 with value 0x658b8e4b9e4956e7
sd x3, 0(x2) # store 0x658b8e4b9e4956e7 in memory
fld f11, 0(x2) # load 0x658b8e4b9e4956e7 from memory into f11
fnmadd.d f20, f12, f21, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x24, 0x6919c6ec18c146cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x606439f89b6b249c # load x3 with value 0x606439f89b6b249c
sd x3, 0(x2) # store 0x606439f89b6b249c in memory
fld f4, 0(x2) # load 0x606439f89b6b249c from memory into f4
li x3, 0x3a0f50f3d486af7b # load x3 with value 0x3a0f50f3d486af7b
sd x3, 0(x2) # store 0x3a0f50f3d486af7b in memory
fld f22, 0(x2) # load 0x3a0f50f3d486af7b from memory into f22
li x3, 0x124a91ec4ef47481 # load x3 with value 0x124a91ec4ef47481
sd x3, 0(x2) # store 0x124a91ec4ef47481 in memory
fld f5, 0(x2) # load 0x124a91ec4ef47481 from memory into f5
fnmadd.d f24, f4, f22, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x21, 0xadefc87ee571365c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0350741d57ea6c6 # load x3 with value 0xa0350741d57ea6c6
sd x3, 0(x2) # store 0xa0350741d57ea6c6 in memory
fld f9, 0(x2) # load 0xa0350741d57ea6c6 from memory into f9
li x3, 0xa6c303b2de6e1e73 # load x3 with value 0xa6c303b2de6e1e73
sd x3, 0(x2) # store 0xa6c303b2de6e1e73 in memory
fld f23, 0(x2) # load 0xa6c303b2de6e1e73 from memory into f23
li x3, 0x97cd0e5a8ccf42aa # load x3 with value 0x97cd0e5a8ccf42aa
sd x3, 0(x2) # store 0x97cd0e5a8ccf42aa in memory
fld f2, 0(x2) # load 0x97cd0e5a8ccf42aa from memory into f2
fnmadd.d f21, f9, f23, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x21, 0x5d023ee91239c2ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1686e8b28d51e97 # load x3 with value 0xe1686e8b28d51e97
sd x3, 0(x2) # store 0xe1686e8b28d51e97 in memory
fld f23, 0(x2) # load 0xe1686e8b28d51e97 from memory into f23
li x3, 0x440de5cade8eebb4 # load x3 with value 0x440de5cade8eebb4
sd x3, 0(x2) # store 0x440de5cade8eebb4 in memory
fld f24, 0(x2) # load 0x440de5cade8eebb4 from memory into f24
li x3, 0x58b5c1701adf6f05 # load x3 with value 0x58b5c1701adf6f05
sd x3, 0(x2) # store 0x58b5c1701adf6f05 in memory
fld f28, 0(x2) # load 0x58b5c1701adf6f05 from memory into f28
fnmadd.d f21, f23, f24, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x16, 0x777033c08f1a9128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe793d028d71e80ee # load x3 with value 0xe793d028d71e80ee
sd x3, 0(x2) # store 0xe793d028d71e80ee in memory
fld f11, 0(x2) # load 0xe793d028d71e80ee from memory into f11
li x3, 0xd3055c92a5aa1ed5 # load x3 with value 0xd3055c92a5aa1ed5
sd x3, 0(x2) # store 0xd3055c92a5aa1ed5 in memory
fld f25, 0(x2) # load 0xd3055c92a5aa1ed5 from memory into f25
li x3, 0xac3906e94980b9e2 # load x3 with value 0xac3906e94980b9e2
sd x3, 0(x2) # store 0xac3906e94980b9e2 in memory
fld f9, 0(x2) # load 0xac3906e94980b9e2 from memory into f9
fnmadd.d f16, f11, f25, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x8, 0xfd0a3d69b405b66c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb30c96498c34b30b # load x3 with value 0xb30c96498c34b30b
sd x3, 0(x2) # store 0xb30c96498c34b30b in memory
fld f25, 0(x2) # load 0xb30c96498c34b30b from memory into f25
li x3, 0xb1227f0f5ad3a9b5 # load x3 with value 0xb1227f0f5ad3a9b5
sd x3, 0(x2) # store 0xb1227f0f5ad3a9b5 in memory
fld f26, 0(x2) # load 0xb1227f0f5ad3a9b5 from memory into f26
li x3, 0x212cb23b7a6dcf4e # load x3 with value 0x212cb23b7a6dcf4e
sd x3, 0(x2) # store 0x212cb23b7a6dcf4e in memory
fld f13, 0(x2) # load 0x212cb23b7a6dcf4e from memory into f13
fnmadd.d f8, f25, f26, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x6, 0x30899c55891accf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xabd83906358900f9 # load x3 with value 0xabd83906358900f9
sd x3, 0(x2) # store 0xabd83906358900f9 in memory
fld f17, 0(x2) # load 0xabd83906358900f9 from memory into f17
li x3, 0xd178b0cdd5d10405 # load x3 with value 0xd178b0cdd5d10405
sd x3, 0(x2) # store 0xd178b0cdd5d10405 in memory
fld f27, 0(x2) # load 0xd178b0cdd5d10405 from memory into f27
li x3, 0x4c4dd459a76c4fb3 # load x3 with value 0x4c4dd459a76c4fb3
sd x3, 0(x2) # store 0x4c4dd459a76c4fb3 in memory
fld f7, 0(x2) # load 0x4c4dd459a76c4fb3 from memory into f7
fnmadd.d f6, f17, f27, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x15, 0xd3d317a053a01c69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09c3ca0be3fcd18c # load x3 with value 0x09c3ca0be3fcd18c
sd x3, 0(x2) # store 0x09c3ca0be3fcd18c in memory
fld f3, 0(x2) # load 0x09c3ca0be3fcd18c from memory into f3
li x3, 0x889fe2b4c3e59993 # load x3 with value 0x889fe2b4c3e59993
sd x3, 0(x2) # store 0x889fe2b4c3e59993 in memory
fld f28, 0(x2) # load 0x889fe2b4c3e59993 from memory into f28
li x3, 0x3d60b2f0bf53a495 # load x3 with value 0x3d60b2f0bf53a495
sd x3, 0(x2) # store 0x3d60b2f0bf53a495 in memory
fld f13, 0(x2) # load 0x3d60b2f0bf53a495 from memory into f13
fnmadd.d f15, f3, f28, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x11, 0x724efd18eadd4617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa01ad30d613b0a82 # load x3 with value 0xa01ad30d613b0a82
sd x3, 0(x2) # store 0xa01ad30d613b0a82 in memory
fld f10, 0(x2) # load 0xa01ad30d613b0a82 from memory into f10
li x3, 0xae6d8e7706c0e710 # load x3 with value 0xae6d8e7706c0e710
sd x3, 0(x2) # store 0xae6d8e7706c0e710 in memory
fld f29, 0(x2) # load 0xae6d8e7706c0e710 from memory into f29
li x3, 0xf8bebb3ff7256f3b # load x3 with value 0xf8bebb3ff7256f3b
sd x3, 0(x2) # store 0xf8bebb3ff7256f3b in memory
fld f29, 0(x2) # load 0xf8bebb3ff7256f3b from memory into f29
fnmadd.d f11, f10, f29, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x16, 0x8554f899dc99c50c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f7bcfda7b7e65b9 # load x3 with value 0x1f7bcfda7b7e65b9
sd x3, 0(x2) # store 0x1f7bcfda7b7e65b9 in memory
fld f23, 0(x2) # load 0x1f7bcfda7b7e65b9 from memory into f23
li x3, 0x4590ad6ad57238e5 # load x3 with value 0x4590ad6ad57238e5
sd x3, 0(x2) # store 0x4590ad6ad57238e5 in memory
fld f30, 0(x2) # load 0x4590ad6ad57238e5 from memory into f30
li x3, 0x309289f348a350dc # load x3 with value 0x309289f348a350dc
sd x3, 0(x2) # store 0x309289f348a350dc in memory
fld f9, 0(x2) # load 0x309289f348a350dc from memory into f9
fnmadd.d f16, f23, f30, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x2, 0xda0f920ef38a761a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf19073b9ea55835e # load x3 with value 0xf19073b9ea55835e
sd x3, 0(x2) # store 0xf19073b9ea55835e in memory
fld f16, 0(x2) # load 0xf19073b9ea55835e from memory into f16
li x3, 0x68a3132e1a3a7eb8 # load x3 with value 0x68a3132e1a3a7eb8
sd x3, 0(x2) # store 0x68a3132e1a3a7eb8 in memory
fld f31, 0(x2) # load 0x68a3132e1a3a7eb8 from memory into f31
li x3, 0xfbfcb688e47cbce8 # load x3 with value 0xfbfcb688e47cbce8
sd x3, 0(x2) # store 0xfbfcb688e47cbce8 in memory
fld f27, 0(x2) # load 0xfbfcb688e47cbce8 from memory into f27
fnmadd.d f2, f16, f31, f27 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
