///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fnmadd.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.968342
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x1b6cdf1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd62e92d0 # load x3 with 32 MSBs 0x00000000d62e92d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d62e92d0
sw x3, 0(x2) # store x3 (0xd62e92d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000d62e92d0 from memory into f0
li x3, 0x0dfcccd5 # load x3 with 32 MSBs 0x000000000dfcccd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000dfcccd5
sw x3, 0(x2) # store x3 (0x0dfcccd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000dfcccd5 from memory into f17
li x3, 0xed25d3d5 # load x3 with 32 MSBs 0x00000000ed25d3d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed25d3d5
sw x3, 0(x2) # store x3 (0xed25d3d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ed25d3d5 from memory into f23
fnmadd.d f0, f0, f17, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x0dfa7713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x302e06c4 # load x3 with 32 MSBs 0x00000000302e06c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000302e06c4
sw x3, 0(x2) # store x3 (0x302e06c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000302e06c4 from memory into f1
li x3, 0x207e0837 # load x3 with 32 MSBs 0x00000000207e0837
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000207e0837
sw x3, 0(x2) # store x3 (0x207e0837) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000207e0837 from memory into f20
li x3, 0x074af2c4 # load x3 with 32 MSBs 0x00000000074af2c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000074af2c4
sw x3, 0(x2) # store x3 (0x074af2c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000074af2c4 from memory into f10
fnmadd.d f1, f1, f20, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x5002ce57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70686e31 # load x3 with 32 MSBs 0x0000000070686e31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070686e31
sw x3, 0(x2) # store x3 (0x70686e31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000070686e31 from memory into f2
li x3, 0x137f35e9 # load x3 with 32 MSBs 0x00000000137f35e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000137f35e9
sw x3, 0(x2) # store x3 (0x137f35e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000137f35e9 from memory into f17
li x3, 0x3d30ad4b # load x3 with 32 MSBs 0x000000003d30ad4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d30ad4b
sw x3, 0(x2) # store x3 (0x3d30ad4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003d30ad4b from memory into f5
fnmadd.d f2, f2, f17, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xd25686a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17e9c70f # load x3 with 32 MSBs 0x0000000017e9c70f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017e9c70f
sw x3, 0(x2) # store x3 (0x17e9c70f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000017e9c70f from memory into f3
li x3, 0xbaf80599 # load x3 with 32 MSBs 0x00000000baf80599
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000baf80599
sw x3, 0(x2) # store x3 (0xbaf80599) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000baf80599 from memory into f23
li x3, 0xe89fc8bb # load x3 with 32 MSBs 0x00000000e89fc8bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e89fc8bb
sw x3, 0(x2) # store x3 (0xe89fc8bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e89fc8bb from memory into f7
fnmadd.d f3, f3, f23, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xd9530a23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x91b7b597 # load x3 with 32 MSBs 0x0000000091b7b597
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091b7b597
sw x3, 0(x2) # store x3 (0x91b7b597) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000091b7b597 from memory into f4
li x3, 0x8de3ec67 # load x3 with 32 MSBs 0x000000008de3ec67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008de3ec67
sw x3, 0(x2) # store x3 (0x8de3ec67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008de3ec67 from memory into f16
li x3, 0x232412c9 # load x3 with 32 MSBs 0x00000000232412c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000232412c9
sw x3, 0(x2) # store x3 (0x232412c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000232412c9 from memory into f14
fnmadd.d f4, f4, f16, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xf41c4a9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xae2dc900 # load x3 with 32 MSBs 0x00000000ae2dc900
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae2dc900
sw x3, 0(x2) # store x3 (0xae2dc900) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ae2dc900 from memory into f5
li x3, 0x794ad6bc # load x3 with 32 MSBs 0x00000000794ad6bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000794ad6bc
sw x3, 0(x2) # store x3 (0x794ad6bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000794ad6bc from memory into f1
li x3, 0x333d29ce # load x3 with 32 MSBs 0x00000000333d29ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000333d29ce
sw x3, 0(x2) # store x3 (0x333d29ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000333d29ce from memory into f11
fnmadd.d f5, f5, f1, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x11be2b26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xacacd282 # load x3 with 32 MSBs 0x00000000acacd282
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acacd282
sw x3, 0(x2) # store x3 (0xacacd282) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000acacd282 from memory into f6
li x3, 0xfbda8fa3 # load x3 with 32 MSBs 0x00000000fbda8fa3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbda8fa3
sw x3, 0(x2) # store x3 (0xfbda8fa3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fbda8fa3 from memory into f18
li x3, 0xc4c14080 # load x3 with 32 MSBs 0x00000000c4c14080
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4c14080
sw x3, 0(x2) # store x3 (0xc4c14080) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c4c14080 from memory into f29
fnmadd.d f6, f6, f18, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xb9c4bf23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93be092d # load x3 with 32 MSBs 0x0000000093be092d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093be092d
sw x3, 0(x2) # store x3 (0x93be092d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000093be092d from memory into f7
li x3, 0x777271c3 # load x3 with 32 MSBs 0x00000000777271c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000777271c3
sw x3, 0(x2) # store x3 (0x777271c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000777271c3 from memory into f19
li x3, 0x6b210e0d # load x3 with 32 MSBs 0x000000006b210e0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b210e0d
sw x3, 0(x2) # store x3 (0x6b210e0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000006b210e0d from memory into f17
fnmadd.d f7, f7, f19, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0xc5f16e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd1d4b42f # load x3 with 32 MSBs 0x00000000d1d4b42f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1d4b42f
sw x3, 0(x2) # store x3 (0xd1d4b42f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d1d4b42f from memory into f8
li x3, 0xed2d9655 # load x3 with 32 MSBs 0x00000000ed2d9655
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed2d9655
sw x3, 0(x2) # store x3 (0xed2d9655) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ed2d9655 from memory into f1
li x3, 0xfea41a80 # load x3 with 32 MSBs 0x00000000fea41a80
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fea41a80
sw x3, 0(x2) # store x3 (0xfea41a80) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fea41a80 from memory into f9
fnmadd.d f8, f8, f1, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x7075d9df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74c5196b # load x3 with 32 MSBs 0x0000000074c5196b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074c5196b
sw x3, 0(x2) # store x3 (0x74c5196b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000074c5196b from memory into f9
li x3, 0xb8c98436 # load x3 with 32 MSBs 0x00000000b8c98436
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8c98436
sw x3, 0(x2) # store x3 (0xb8c98436) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b8c98436 from memory into f2
li x3, 0x725cdc9c # load x3 with 32 MSBs 0x00000000725cdc9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000725cdc9c
sw x3, 0(x2) # store x3 (0x725cdc9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000725cdc9c from memory into f1
fnmadd.d f9, f9, f2, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xaf3a7304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b831753 # load x3 with 32 MSBs 0x000000004b831753
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b831753
sw x3, 0(x2) # store x3 (0x4b831753) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004b831753 from memory into f10
li x3, 0x30922f92 # load x3 with 32 MSBs 0x0000000030922f92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030922f92
sw x3, 0(x2) # store x3 (0x30922f92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000030922f92 from memory into f22
li x3, 0xb82863ec # load x3 with 32 MSBs 0x00000000b82863ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b82863ec
sw x3, 0(x2) # store x3 (0xb82863ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b82863ec from memory into f8
fnmadd.d f10, f10, f22, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0xb9e6023a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x43d648e9 # load x3 with 32 MSBs 0x0000000043d648e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043d648e9
sw x3, 0(x2) # store x3 (0x43d648e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000043d648e9 from memory into f11
li x3, 0x8212ead5 # load x3 with 32 MSBs 0x000000008212ead5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008212ead5
sw x3, 0(x2) # store x3 (0x8212ead5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008212ead5 from memory into f7
li x3, 0x3ad43226 # load x3 with 32 MSBs 0x000000003ad43226
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ad43226
sw x3, 0(x2) # store x3 (0x3ad43226) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003ad43226 from memory into f22
fnmadd.d f11, f11, f7, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xf358df22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f173123 # load x3 with 32 MSBs 0x000000000f173123
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f173123
sw x3, 0(x2) # store x3 (0x0f173123) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000f173123 from memory into f12
li x3, 0x519b23f5 # load x3 with 32 MSBs 0x00000000519b23f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000519b23f5
sw x3, 0(x2) # store x3 (0x519b23f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000519b23f5 from memory into f27
li x3, 0xd2b240c8 # load x3 with 32 MSBs 0x00000000d2b240c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2b240c8
sw x3, 0(x2) # store x3 (0xd2b240c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d2b240c8 from memory into f2
fnmadd.d f12, f12, f27, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x209a698b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c3d7804 # load x3 with 32 MSBs 0x000000005c3d7804
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c3d7804
sw x3, 0(x2) # store x3 (0x5c3d7804) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005c3d7804 from memory into f13
li x3, 0x0e37ed09 # load x3 with 32 MSBs 0x000000000e37ed09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e37ed09
sw x3, 0(x2) # store x3 (0x0e37ed09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000000e37ed09 from memory into f13
li x3, 0x33694362 # load x3 with 32 MSBs 0x0000000033694362
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033694362
sw x3, 0(x2) # store x3 (0x33694362) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000033694362 from memory into f14
fnmadd.d f13, f13, f13, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x8fcd2e02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x130b5c95 # load x3 with 32 MSBs 0x00000000130b5c95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000130b5c95
sw x3, 0(x2) # store x3 (0x130b5c95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000130b5c95 from memory into f14
li x3, 0xe4c2d06a # load x3 with 32 MSBs 0x00000000e4c2d06a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4c2d06a
sw x3, 0(x2) # store x3 (0xe4c2d06a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e4c2d06a from memory into f9
li x3, 0xcf9666bf # load x3 with 32 MSBs 0x00000000cf9666bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf9666bf
sw x3, 0(x2) # store x3 (0xcf9666bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cf9666bf from memory into f25
fnmadd.d f14, f14, f9, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x4fcccb28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cbc6ee9 # load x3 with 32 MSBs 0x000000009cbc6ee9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cbc6ee9
sw x3, 0(x2) # store x3 (0x9cbc6ee9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009cbc6ee9 from memory into f15
li x3, 0x25c897e3 # load x3 with 32 MSBs 0x0000000025c897e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025c897e3
sw x3, 0(x2) # store x3 (0x25c897e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000025c897e3 from memory into f10
li x3, 0x9920d15c # load x3 with 32 MSBs 0x000000009920d15c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009920d15c
sw x3, 0(x2) # store x3 (0x9920d15c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009920d15c from memory into f28
fnmadd.d f15, f15, f10, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x33600461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x799edf0c # load x3 with 32 MSBs 0x00000000799edf0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000799edf0c
sw x3, 0(x2) # store x3 (0x799edf0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000799edf0c from memory into f16
li x3, 0x8100b7fa # load x3 with 32 MSBs 0x000000008100b7fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008100b7fa
sw x3, 0(x2) # store x3 (0x8100b7fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008100b7fa from memory into f16
li x3, 0xf435d521 # load x3 with 32 MSBs 0x00000000f435d521
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f435d521
sw x3, 0(x2) # store x3 (0xf435d521) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f435d521 from memory into f25
fnmadd.d f16, f16, f16, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x23ffb22d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf30b2e0c # load x3 with 32 MSBs 0x00000000f30b2e0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f30b2e0c
sw x3, 0(x2) # store x3 (0xf30b2e0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f30b2e0c from memory into f17
li x3, 0x2dafc9f1 # load x3 with 32 MSBs 0x000000002dafc9f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002dafc9f1
sw x3, 0(x2) # store x3 (0x2dafc9f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002dafc9f1 from memory into f18
li x3, 0xdccaa240 # load x3 with 32 MSBs 0x00000000dccaa240
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dccaa240
sw x3, 0(x2) # store x3 (0xdccaa240) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000dccaa240 from memory into f28
fnmadd.d f17, f17, f18, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0xd4eec627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfa1403e # load x3 with 32 MSBs 0x00000000bfa1403e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfa1403e
sw x3, 0(x2) # store x3 (0xbfa1403e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bfa1403e from memory into f18
li x3, 0x800baffd # load x3 with 32 MSBs 0x00000000800baffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000800baffd
sw x3, 0(x2) # store x3 (0x800baffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000800baffd from memory into f3
li x3, 0x86a544f7 # load x3 with 32 MSBs 0x0000000086a544f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086a544f7
sw x3, 0(x2) # store x3 (0x86a544f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000086a544f7 from memory into f28
fnmadd.d f18, f18, f3, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0xe3d2f5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x397b7466 # load x3 with 32 MSBs 0x00000000397b7466
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000397b7466
sw x3, 0(x2) # store x3 (0x397b7466) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000397b7466 from memory into f19
li x3, 0x1648755b # load x3 with 32 MSBs 0x000000001648755b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001648755b
sw x3, 0(x2) # store x3 (0x1648755b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001648755b from memory into f25
li x3, 0xd470e21e # load x3 with 32 MSBs 0x00000000d470e21e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d470e21e
sw x3, 0(x2) # store x3 (0xd470e21e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d470e21e from memory into f24
fnmadd.d f19, f19, f25, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xcc323ab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27babf07 # load x3 with 32 MSBs 0x0000000027babf07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027babf07
sw x3, 0(x2) # store x3 (0x27babf07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000027babf07 from memory into f20
li x3, 0x54252f07 # load x3 with 32 MSBs 0x0000000054252f07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054252f07
sw x3, 0(x2) # store x3 (0x54252f07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000054252f07 from memory into f28
li x3, 0xe738fb81 # load x3 with 32 MSBs 0x00000000e738fb81
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e738fb81
sw x3, 0(x2) # store x3 (0xe738fb81) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e738fb81 from memory into f10
fnmadd.d f20, f20, f28, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xcd514458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e0f2c5d # load x3 with 32 MSBs 0x000000000e0f2c5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e0f2c5d
sw x3, 0(x2) # store x3 (0x0e0f2c5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000e0f2c5d from memory into f21
li x3, 0xf0640277 # load x3 with 32 MSBs 0x00000000f0640277
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0640277
sw x3, 0(x2) # store x3 (0xf0640277) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f0640277 from memory into f2
li x3, 0xb2a2669c # load x3 with 32 MSBs 0x00000000b2a2669c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2a2669c
sw x3, 0(x2) # store x3 (0xb2a2669c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b2a2669c from memory into f4
fnmadd.d f21, f21, f2, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xb4b84e67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9ea05ac # load x3 with 32 MSBs 0x00000000c9ea05ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9ea05ac
sw x3, 0(x2) # store x3 (0xc9ea05ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c9ea05ac from memory into f22
li x3, 0xc23d9075 # load x3 with 32 MSBs 0x00000000c23d9075
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c23d9075
sw x3, 0(x2) # store x3 (0xc23d9075) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c23d9075 from memory into f9
li x3, 0xc4798a4e # load x3 with 32 MSBs 0x00000000c4798a4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4798a4e
sw x3, 0(x2) # store x3 (0xc4798a4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c4798a4e from memory into f23
fnmadd.d f22, f22, f9, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x46a07736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ca360ea # load x3 with 32 MSBs 0x000000009ca360ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ca360ea
sw x3, 0(x2) # store x3 (0x9ca360ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009ca360ea from memory into f23
li x3, 0x86a89f10 # load x3 with 32 MSBs 0x0000000086a89f10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086a89f10
sw x3, 0(x2) # store x3 (0x86a89f10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000086a89f10 from memory into f7
li x3, 0xac888689 # load x3 with 32 MSBs 0x00000000ac888689
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac888689
sw x3, 0(x2) # store x3 (0xac888689) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ac888689 from memory into f8
fnmadd.d f23, f23, f7, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x46427a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d0ca1d3 # load x3 with 32 MSBs 0x000000005d0ca1d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d0ca1d3
sw x3, 0(x2) # store x3 (0x5d0ca1d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005d0ca1d3 from memory into f24
li x3, 0x82051c05 # load x3 with 32 MSBs 0x0000000082051c05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082051c05
sw x3, 0(x2) # store x3 (0x82051c05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000082051c05 from memory into f25
li x3, 0xe6173af7 # load x3 with 32 MSBs 0x00000000e6173af7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6173af7
sw x3, 0(x2) # store x3 (0xe6173af7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e6173af7 from memory into f19
fnmadd.d f24, f24, f25, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xf79f9e49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9548117f # load x3 with 32 MSBs 0x000000009548117f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009548117f
sw x3, 0(x2) # store x3 (0x9548117f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000009548117f from memory into f25
li x3, 0x752f265a # load x3 with 32 MSBs 0x00000000752f265a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000752f265a
sw x3, 0(x2) # store x3 (0x752f265a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000752f265a from memory into f13
li x3, 0x8aec8070 # load x3 with 32 MSBs 0x000000008aec8070
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008aec8070
sw x3, 0(x2) # store x3 (0x8aec8070) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000008aec8070 from memory into f9
fnmadd.d f25, f25, f13, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x12a7c7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf789ff23 # load x3 with 32 MSBs 0x00000000f789ff23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f789ff23
sw x3, 0(x2) # store x3 (0xf789ff23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f789ff23 from memory into f26
li x3, 0x56bab62d # load x3 with 32 MSBs 0x0000000056bab62d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056bab62d
sw x3, 0(x2) # store x3 (0x56bab62d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000056bab62d from memory into f25
li x3, 0x3e01439c # load x3 with 32 MSBs 0x000000003e01439c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e01439c
sw x3, 0(x2) # store x3 (0x3e01439c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003e01439c from memory into f12
fnmadd.d f26, f26, f25, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x950970a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6cd352f6 # load x3 with 32 MSBs 0x000000006cd352f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cd352f6
sw x3, 0(x2) # store x3 (0x6cd352f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006cd352f6 from memory into f27
li x3, 0xbe708c5a # load x3 with 32 MSBs 0x00000000be708c5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be708c5a
sw x3, 0(x2) # store x3 (0xbe708c5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000be708c5a from memory into f12
li x3, 0xac50a758 # load x3 with 32 MSBs 0x00000000ac50a758
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac50a758
sw x3, 0(x2) # store x3 (0xac50a758) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ac50a758 from memory into f19
fnmadd.d f27, f27, f12, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xb4f74d92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd066bc7 # load x3 with 32 MSBs 0x00000000bd066bc7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd066bc7
sw x3, 0(x2) # store x3 (0xbd066bc7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bd066bc7 from memory into f28
li x3, 0xca00ff91 # load x3 with 32 MSBs 0x00000000ca00ff91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca00ff91
sw x3, 0(x2) # store x3 (0xca00ff91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ca00ff91 from memory into f14
li x3, 0xb529f83f # load x3 with 32 MSBs 0x00000000b529f83f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b529f83f
sw x3, 0(x2) # store x3 (0xb529f83f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b529f83f from memory into f16
fnmadd.d f28, f28, f14, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x605d37b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c2f912a # load x3 with 32 MSBs 0x000000003c2f912a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c2f912a
sw x3, 0(x2) # store x3 (0x3c2f912a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000003c2f912a from memory into f29
li x3, 0xb4dc6a65 # load x3 with 32 MSBs 0x00000000b4dc6a65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4dc6a65
sw x3, 0(x2) # store x3 (0xb4dc6a65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b4dc6a65 from memory into f23
li x3, 0x1e046131 # load x3 with 32 MSBs 0x000000001e046131
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e046131
sw x3, 0(x2) # store x3 (0x1e046131) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001e046131 from memory into f8
fnmadd.d f29, f29, f23, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x3ff4a388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44b9bce8 # load x3 with 32 MSBs 0x0000000044b9bce8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044b9bce8
sw x3, 0(x2) # store x3 (0x44b9bce8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000044b9bce8 from memory into f30
li x3, 0xa12a53aa # load x3 with 32 MSBs 0x00000000a12a53aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a12a53aa
sw x3, 0(x2) # store x3 (0xa12a53aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a12a53aa from memory into f14
li x3, 0xd7f580a4 # load x3 with 32 MSBs 0x00000000d7f580a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7f580a4
sw x3, 0(x2) # store x3 (0xd7f580a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d7f580a4 from memory into f4
fnmadd.d f30, f30, f14, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x562cf89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c0150bf # load x3 with 32 MSBs 0x000000001c0150bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c0150bf
sw x3, 0(x2) # store x3 (0x1c0150bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001c0150bf from memory into f31
li x3, 0xf44b2424 # load x3 with 32 MSBs 0x00000000f44b2424
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f44b2424
sw x3, 0(x2) # store x3 (0xf44b2424) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f44b2424 from memory into f4
li x3, 0x9f0a1ee2 # load x3 with 32 MSBs 0x000000009f0a1ee2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f0a1ee2
sw x3, 0(x2) # store x3 (0x9f0a1ee2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009f0a1ee2 from memory into f12
fnmadd.d f31, f31, f4, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x242e1f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a7e5e94 # load x3 with 32 MSBs 0x000000002a7e5e94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a7e5e94
sw x3, 0(x2) # store x3 (0x2a7e5e94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002a7e5e94 from memory into f21
li x3, 0x7906faf8 # load x3 with 32 MSBs 0x000000007906faf8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007906faf8
sw x3, 0(x2) # store x3 (0x7906faf8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000007906faf8 from memory into f0
li x3, 0xb99e86bd # load x3 with 32 MSBs 0x00000000b99e86bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b99e86bd
sw x3, 0(x2) # store x3 (0xb99e86bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b99e86bd from memory into f31
fnmadd.d f0, f21, f0, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xc4b31a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1aa67139 # load x3 with 32 MSBs 0x000000001aa67139
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001aa67139
sw x3, 0(x2) # store x3 (0x1aa67139) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000001aa67139 from memory into f11
li x3, 0x08ab1c76 # load x3 with 32 MSBs 0x0000000008ab1c76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008ab1c76
sw x3, 0(x2) # store x3 (0x08ab1c76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000008ab1c76 from memory into f1
li x3, 0x1f87ea2f # load x3 with 32 MSBs 0x000000001f87ea2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f87ea2f
sw x3, 0(x2) # store x3 (0x1f87ea2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001f87ea2f from memory into f18
fnmadd.d f1, f11, f1, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x3775da2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc843fa2b # load x3 with 32 MSBs 0x00000000c843fa2b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c843fa2b
sw x3, 0(x2) # store x3 (0xc843fa2b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c843fa2b from memory into f20
li x3, 0xf67b93e2 # load x3 with 32 MSBs 0x00000000f67b93e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f67b93e2
sw x3, 0(x2) # store x3 (0xf67b93e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f67b93e2 from memory into f2
li x3, 0x66f58cda # load x3 with 32 MSBs 0x0000000066f58cda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066f58cda
sw x3, 0(x2) # store x3 (0x66f58cda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000066f58cda from memory into f1
fnmadd.d f2, f20, f2, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x3b01edbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea7f28b8 # load x3 with 32 MSBs 0x00000000ea7f28b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea7f28b8
sw x3, 0(x2) # store x3 (0xea7f28b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ea7f28b8 from memory into f13
li x3, 0x49cabe9d # load x3 with 32 MSBs 0x0000000049cabe9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049cabe9d
sw x3, 0(x2) # store x3 (0x49cabe9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000049cabe9d from memory into f3
li x3, 0x87034156 # load x3 with 32 MSBs 0x0000000087034156
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087034156
sw x3, 0(x2) # store x3 (0x87034156) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000087034156 from memory into f28
fnmadd.d f3, f13, f3, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xf1b4c5dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x720f2586 # load x3 with 32 MSBs 0x00000000720f2586
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000720f2586
sw x3, 0(x2) # store x3 (0x720f2586) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000720f2586 from memory into f1
li x3, 0x222e69b3 # load x3 with 32 MSBs 0x00000000222e69b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000222e69b3
sw x3, 0(x2) # store x3 (0x222e69b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000222e69b3 from memory into f4
li x3, 0xaee29789 # load x3 with 32 MSBs 0x00000000aee29789
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aee29789
sw x3, 0(x2) # store x3 (0xaee29789) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000aee29789 from memory into f12
fnmadd.d f4, f1, f4, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xa27574b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x496b5156 # load x3 with 32 MSBs 0x00000000496b5156
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000496b5156
sw x3, 0(x2) # store x3 (0x496b5156) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000496b5156 from memory into f2
li x3, 0xf2a6afb3 # load x3 with 32 MSBs 0x00000000f2a6afb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2a6afb3
sw x3, 0(x2) # store x3 (0xf2a6afb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f2a6afb3 from memory into f5
li x3, 0x367f7acf # load x3 with 32 MSBs 0x00000000367f7acf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000367f7acf
sw x3, 0(x2) # store x3 (0x367f7acf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000367f7acf from memory into f11
fnmadd.d f5, f2, f5, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xd595331f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1ef3104 # load x3 with 32 MSBs 0x00000000c1ef3104
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1ef3104
sw x3, 0(x2) # store x3 (0xc1ef3104) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000c1ef3104 from memory into f27
li x3, 0x80c5efff # load x3 with 32 MSBs 0x0000000080c5efff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080c5efff
sw x3, 0(x2) # store x3 (0x80c5efff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000080c5efff from memory into f6
li x3, 0x4fbd41ad # load x3 with 32 MSBs 0x000000004fbd41ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fbd41ad
sw x3, 0(x2) # store x3 (0x4fbd41ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004fbd41ad from memory into f21
fnmadd.d f6, f27, f6, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xdf5ede83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9054d636 # load x3 with 32 MSBs 0x000000009054d636
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009054d636
sw x3, 0(x2) # store x3 (0x9054d636) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009054d636 from memory into f30
li x3, 0x3f3109b8 # load x3 with 32 MSBs 0x000000003f3109b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f3109b8
sw x3, 0(x2) # store x3 (0x3f3109b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003f3109b8 from memory into f7
li x3, 0xf7f56617 # load x3 with 32 MSBs 0x00000000f7f56617
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7f56617
sw x3, 0(x2) # store x3 (0xf7f56617) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f7f56617 from memory into f12
fnmadd.d f7, f30, f7, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xcd365e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd077b049 # load x3 with 32 MSBs 0x00000000d077b049
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d077b049
sw x3, 0(x2) # store x3 (0xd077b049) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d077b049 from memory into f17
li x3, 0x568cb370 # load x3 with 32 MSBs 0x00000000568cb370
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000568cb370
sw x3, 0(x2) # store x3 (0x568cb370) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000568cb370 from memory into f8
li x3, 0x045cd603 # load x3 with 32 MSBs 0x00000000045cd603
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000045cd603
sw x3, 0(x2) # store x3 (0x045cd603) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000045cd603 from memory into f3
fnmadd.d f8, f17, f8, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xb7fa8f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf641b8eb # load x3 with 32 MSBs 0x00000000f641b8eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f641b8eb
sw x3, 0(x2) # store x3 (0xf641b8eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f641b8eb from memory into f1
li x3, 0x5fe5c039 # load x3 with 32 MSBs 0x000000005fe5c039
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fe5c039
sw x3, 0(x2) # store x3 (0x5fe5c039) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005fe5c039 from memory into f9
li x3, 0xbf8b9212 # load x3 with 32 MSBs 0x00000000bf8b9212
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf8b9212
sw x3, 0(x2) # store x3 (0xbf8b9212) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000bf8b9212 from memory into f12
fnmadd.d f9, f1, f9, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xe4fece36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x53cfbe61 # load x3 with 32 MSBs 0x0000000053cfbe61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053cfbe61
sw x3, 0(x2) # store x3 (0x53cfbe61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000053cfbe61 from memory into f1
li x3, 0xd7b5b024 # load x3 with 32 MSBs 0x00000000d7b5b024
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7b5b024
sw x3, 0(x2) # store x3 (0xd7b5b024) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d7b5b024 from memory into f10
li x3, 0x3a774457 # load x3 with 32 MSBs 0x000000003a774457
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a774457
sw x3, 0(x2) # store x3 (0x3a774457) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003a774457 from memory into f9
fnmadd.d f10, f1, f10, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x6d3e74b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16b27c7e # load x3 with 32 MSBs 0x0000000016b27c7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016b27c7e
sw x3, 0(x2) # store x3 (0x16b27c7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000016b27c7e from memory into f8
li x3, 0xe4d788f3 # load x3 with 32 MSBs 0x00000000e4d788f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4d788f3
sw x3, 0(x2) # store x3 (0xe4d788f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e4d788f3 from memory into f11
li x3, 0xaf736e7a # load x3 with 32 MSBs 0x00000000af736e7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af736e7a
sw x3, 0(x2) # store x3 (0xaf736e7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000af736e7a from memory into f30
fnmadd.d f11, f8, f11, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x4eb8725f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x07c19d8c # load x3 with 32 MSBs 0x0000000007c19d8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007c19d8c
sw x3, 0(x2) # store x3 (0x07c19d8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000007c19d8c from memory into f25
li x3, 0x691480a3 # load x3 with 32 MSBs 0x00000000691480a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000691480a3
sw x3, 0(x2) # store x3 (0x691480a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000691480a3 from memory into f12
li x3, 0xcda90ab9 # load x3 with 32 MSBs 0x00000000cda90ab9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cda90ab9
sw x3, 0(x2) # store x3 (0xcda90ab9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cda90ab9 from memory into f4
fnmadd.d f12, f25, f12, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xd453022e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15ff0905 # load x3 with 32 MSBs 0x0000000015ff0905
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015ff0905
sw x3, 0(x2) # store x3 (0x15ff0905) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000015ff0905 from memory into f31
li x3, 0x2cb37595 # load x3 with 32 MSBs 0x000000002cb37595
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cb37595
sw x3, 0(x2) # store x3 (0x2cb37595) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002cb37595 from memory into f13
li x3, 0x3961a96a # load x3 with 32 MSBs 0x000000003961a96a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003961a96a
sw x3, 0(x2) # store x3 (0x3961a96a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003961a96a from memory into f21
fnmadd.d f13, f31, f13, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x75d02de6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd931d590 # load x3 with 32 MSBs 0x00000000d931d590
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d931d590
sw x3, 0(x2) # store x3 (0xd931d590) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d931d590 from memory into f8
li x3, 0x8e1866ce # load x3 with 32 MSBs 0x000000008e1866ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e1866ce
sw x3, 0(x2) # store x3 (0x8e1866ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000008e1866ce from memory into f14
li x3, 0x3e5d2042 # load x3 with 32 MSBs 0x000000003e5d2042
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e5d2042
sw x3, 0(x2) # store x3 (0x3e5d2042) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003e5d2042 from memory into f19
fnmadd.d f14, f8, f14, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x40d68661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6db1f00f # load x3 with 32 MSBs 0x000000006db1f00f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006db1f00f
sw x3, 0(x2) # store x3 (0x6db1f00f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006db1f00f from memory into f25
li x3, 0xaeb12610 # load x3 with 32 MSBs 0x00000000aeb12610
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeb12610
sw x3, 0(x2) # store x3 (0xaeb12610) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000aeb12610 from memory into f15
li x3, 0x8e0c47e8 # load x3 with 32 MSBs 0x000000008e0c47e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e0c47e8
sw x3, 0(x2) # store x3 (0x8e0c47e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008e0c47e8 from memory into f31
fnmadd.d f15, f25, f15, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0xfd600280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a8c7bfe # load x3 with 32 MSBs 0x000000009a8c7bfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a8c7bfe
sw x3, 0(x2) # store x3 (0x9a8c7bfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009a8c7bfe from memory into f17
li x3, 0x23d46f90 # load x3 with 32 MSBs 0x0000000023d46f90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023d46f90
sw x3, 0(x2) # store x3 (0x23d46f90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000023d46f90 from memory into f16
li x3, 0xb9255945 # load x3 with 32 MSBs 0x00000000b9255945
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9255945
sw x3, 0(x2) # store x3 (0xb9255945) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b9255945 from memory into f25
fnmadd.d f16, f17, f16, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xa4aa9ea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75e17fba # load x3 with 32 MSBs 0x0000000075e17fba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075e17fba
sw x3, 0(x2) # store x3 (0x75e17fba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000075e17fba from memory into f20
li x3, 0xac47ab5b # load x3 with 32 MSBs 0x00000000ac47ab5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac47ab5b
sw x3, 0(x2) # store x3 (0xac47ab5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ac47ab5b from memory into f17
li x3, 0x81dfec40 # load x3 with 32 MSBs 0x0000000081dfec40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081dfec40
sw x3, 0(x2) # store x3 (0x81dfec40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000081dfec40 from memory into f28
fnmadd.d f17, f20, f17, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0xfe1199c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c1d4e0d # load x3 with 32 MSBs 0x000000001c1d4e0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c1d4e0d
sw x3, 0(x2) # store x3 (0x1c1d4e0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001c1d4e0d from memory into f26
li x3, 0x5bb1cb31 # load x3 with 32 MSBs 0x000000005bb1cb31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005bb1cb31
sw x3, 0(x2) # store x3 (0x5bb1cb31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005bb1cb31 from memory into f18
li x3, 0x8af5c85a # load x3 with 32 MSBs 0x000000008af5c85a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008af5c85a
sw x3, 0(x2) # store x3 (0x8af5c85a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000008af5c85a from memory into f24
fnmadd.d f18, f26, f18, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x6b06b167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef2818d0 # load x3 with 32 MSBs 0x00000000ef2818d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef2818d0
sw x3, 0(x2) # store x3 (0xef2818d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ef2818d0 from memory into f6
li x3, 0x14349b3b # load x3 with 32 MSBs 0x0000000014349b3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014349b3b
sw x3, 0(x2) # store x3 (0x14349b3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000014349b3b from memory into f19
li x3, 0x1b893f2d # load x3 with 32 MSBs 0x000000001b893f2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b893f2d
sw x3, 0(x2) # store x3 (0x1b893f2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001b893f2d from memory into f8
fnmadd.d f19, f6, f19, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x9b380c74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8fda7e8 # load x3 with 32 MSBs 0x00000000e8fda7e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8fda7e8
sw x3, 0(x2) # store x3 (0xe8fda7e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e8fda7e8 from memory into f4
li x3, 0xa477d40e # load x3 with 32 MSBs 0x00000000a477d40e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a477d40e
sw x3, 0(x2) # store x3 (0xa477d40e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a477d40e from memory into f20
li x3, 0x74497cd8 # load x3 with 32 MSBs 0x0000000074497cd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074497cd8
sw x3, 0(x2) # store x3 (0x74497cd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000074497cd8 from memory into f21
fnmadd.d f20, f4, f20, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x1eb75d98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9443335d # load x3 with 32 MSBs 0x000000009443335d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009443335d
sw x3, 0(x2) # store x3 (0x9443335d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009443335d from memory into f4
li x3, 0xebe25a5c # load x3 with 32 MSBs 0x00000000ebe25a5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebe25a5c
sw x3, 0(x2) # store x3 (0xebe25a5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ebe25a5c from memory into f21
li x3, 0x8525b037 # load x3 with 32 MSBs 0x000000008525b037
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008525b037
sw x3, 0(x2) # store x3 (0x8525b037) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008525b037 from memory into f17
fnmadd.d f21, f4, f21, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x5eaabbe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15022021 # load x3 with 32 MSBs 0x0000000015022021
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015022021
sw x3, 0(x2) # store x3 (0x15022021) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000015022021 from memory into f14
li x3, 0xe85dc992 # load x3 with 32 MSBs 0x00000000e85dc992
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e85dc992
sw x3, 0(x2) # store x3 (0xe85dc992) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e85dc992 from memory into f22
li x3, 0xb2e4fcdc # load x3 with 32 MSBs 0x00000000b2e4fcdc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2e4fcdc
sw x3, 0(x2) # store x3 (0xb2e4fcdc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b2e4fcdc from memory into f20
fnmadd.d f22, f14, f22, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0xf500317a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe44cfdcb # load x3 with 32 MSBs 0x00000000e44cfdcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e44cfdcb
sw x3, 0(x2) # store x3 (0xe44cfdcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e44cfdcb from memory into f6
li x3, 0x5cbdb66a # load x3 with 32 MSBs 0x000000005cbdb66a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cbdb66a
sw x3, 0(x2) # store x3 (0x5cbdb66a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000005cbdb66a from memory into f23
li x3, 0x37ff966b # load x3 with 32 MSBs 0x0000000037ff966b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037ff966b
sw x3, 0(x2) # store x3 (0x37ff966b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000037ff966b from memory into f18
fnmadd.d f23, f6, f23, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xb140ff9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c68a5e3 # load x3 with 32 MSBs 0x000000004c68a5e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c68a5e3
sw x3, 0(x2) # store x3 (0x4c68a5e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004c68a5e3 from memory into f11
li x3, 0x15537451 # load x3 with 32 MSBs 0x0000000015537451
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015537451
sw x3, 0(x2) # store x3 (0x15537451) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000015537451 from memory into f24
li x3, 0x6c44b527 # load x3 with 32 MSBs 0x000000006c44b527
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c44b527
sw x3, 0(x2) # store x3 (0x6c44b527) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006c44b527 from memory into f28
fnmadd.d f24, f11, f24, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x044760d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf039430f # load x3 with 32 MSBs 0x00000000f039430f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f039430f
sw x3, 0(x2) # store x3 (0xf039430f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f039430f from memory into f28
li x3, 0x4ee327bb # load x3 with 32 MSBs 0x000000004ee327bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ee327bb
sw x3, 0(x2) # store x3 (0x4ee327bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004ee327bb from memory into f25
li x3, 0x1a894070 # load x3 with 32 MSBs 0x000000001a894070
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a894070
sw x3, 0(x2) # store x3 (0x1a894070) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001a894070 from memory into f26
fnmadd.d f25, f28, f25, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x42c3e878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f82ec40 # load x3 with 32 MSBs 0x000000002f82ec40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f82ec40
sw x3, 0(x2) # store x3 (0x2f82ec40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002f82ec40 from memory into f15
li x3, 0xfafbd767 # load x3 with 32 MSBs 0x00000000fafbd767
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fafbd767
sw x3, 0(x2) # store x3 (0xfafbd767) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000fafbd767 from memory into f26
li x3, 0xa81fd397 # load x3 with 32 MSBs 0x00000000a81fd397
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a81fd397
sw x3, 0(x2) # store x3 (0xa81fd397) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a81fd397 from memory into f2
fnmadd.d f26, f15, f26, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xa8549a07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3cebb79 # load x3 with 32 MSBs 0x00000000d3cebb79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3cebb79
sw x3, 0(x2) # store x3 (0xd3cebb79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d3cebb79 from memory into f14
li x3, 0xde871b59 # load x3 with 32 MSBs 0x00000000de871b59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de871b59
sw x3, 0(x2) # store x3 (0xde871b59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000de871b59 from memory into f27
li x3, 0xaa767f1c # load x3 with 32 MSBs 0x00000000aa767f1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa767f1c
sw x3, 0(x2) # store x3 (0xaa767f1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000aa767f1c from memory into f2
fnmadd.d f27, f14, f27, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x82715f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81a31457 # load x3 with 32 MSBs 0x0000000081a31457
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081a31457
sw x3, 0(x2) # store x3 (0x81a31457) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000081a31457 from memory into f16
li x3, 0xfeaffba4 # load x3 with 32 MSBs 0x00000000feaffba4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000feaffba4
sw x3, 0(x2) # store x3 (0xfeaffba4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000feaffba4 from memory into f28
li x3, 0x303e120b # load x3 with 32 MSBs 0x00000000303e120b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000303e120b
sw x3, 0(x2) # store x3 (0x303e120b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000303e120b from memory into f28
fnmadd.d f28, f16, f28, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x8bd12ef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6c0b16e # load x3 with 32 MSBs 0x00000000d6c0b16e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6c0b16e
sw x3, 0(x2) # store x3 (0xd6c0b16e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d6c0b16e from memory into f16
li x3, 0xf412cb9a # load x3 with 32 MSBs 0x00000000f412cb9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f412cb9a
sw x3, 0(x2) # store x3 (0xf412cb9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f412cb9a from memory into f29
li x3, 0xcd97f5af # load x3 with 32 MSBs 0x00000000cd97f5af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd97f5af
sw x3, 0(x2) # store x3 (0xcd97f5af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000cd97f5af from memory into f20
fnmadd.d f29, f16, f29, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xdd5b8a49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4167f170 # load x3 with 32 MSBs 0x000000004167f170
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004167f170
sw x3, 0(x2) # store x3 (0x4167f170) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004167f170 from memory into f1
li x3, 0x7051b04c # load x3 with 32 MSBs 0x000000007051b04c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007051b04c
sw x3, 0(x2) # store x3 (0x7051b04c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007051b04c from memory into f30
li x3, 0x406a68bd # load x3 with 32 MSBs 0x00000000406a68bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000406a68bd
sw x3, 0(x2) # store x3 (0x406a68bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000406a68bd from memory into f31
fnmadd.d f30, f1, f30, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x71b310de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c92430a # load x3 with 32 MSBs 0x000000001c92430a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c92430a
sw x3, 0(x2) # store x3 (0x1c92430a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001c92430a from memory into f27
li x3, 0x8afdd757 # load x3 with 32 MSBs 0x000000008afdd757
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008afdd757
sw x3, 0(x2) # store x3 (0x8afdd757) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008afdd757 from memory into f31
li x3, 0x16502752 # load x3 with 32 MSBs 0x0000000016502752
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016502752
sw x3, 0(x2) # store x3 (0x16502752) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000016502752 from memory into f2
fnmadd.d f31, f27, f31, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x8, 0x1a1bd675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x98db16f5 # load x3 with 32 MSBs 0x0000000098db16f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098db16f5
sw x3, 0(x2) # store x3 (0x98db16f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000098db16f5 from memory into f5
li x3, 0x66cbd9b3 # load x3 with 32 MSBs 0x0000000066cbd9b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066cbd9b3
sw x3, 0(x2) # store x3 (0x66cbd9b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000066cbd9b3 from memory into f20
fnmadd.d f8, f12, f5, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x21, 0x953b48e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x7a2891aa # load x3 with 32 MSBs 0x000000007a2891aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a2891aa
sw x3, 0(x2) # store x3 (0x7a2891aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007a2891aa from memory into f24
li x3, 0x125d2b8a # load x3 with 32 MSBs 0x00000000125d2b8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000125d2b8a
sw x3, 0(x2) # store x3 (0x125d2b8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000125d2b8a from memory into f3
fnmadd.d f21, f20, f24, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x16, 0x76d9fbd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x5abd02ef # load x3 with 32 MSBs 0x000000005abd02ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005abd02ef
sw x3, 0(x2) # store x3 (0x5abd02ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000005abd02ef from memory into f3
li x3, 0xf50d071e # load x3 with 32 MSBs 0x00000000f50d071e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f50d071e
sw x3, 0(x2) # store x3 (0xf50d071e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f50d071e from memory into f21
fnmadd.d f16, f15, f3, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x11, 0x1b6dcb78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x0cca8d54 # load x3 with 32 MSBs 0x000000000cca8d54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cca8d54
sw x3, 0(x2) # store x3 (0x0cca8d54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000cca8d54 from memory into f4
li x3, 0x3aab8d8c # load x3 with 32 MSBs 0x000000003aab8d8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003aab8d8c
sw x3, 0(x2) # store x3 (0x3aab8d8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003aab8d8c from memory into f30
fnmadd.d f11, f5, f4, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x20, 0xca7f2ad8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0xc1be8e8f # load x3 with 32 MSBs 0x00000000c1be8e8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1be8e8f
sw x3, 0(x2) # store x3 (0xc1be8e8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c1be8e8f from memory into f10
li x3, 0xb05b2848 # load x3 with 32 MSBs 0x00000000b05b2848
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b05b2848
sw x3, 0(x2) # store x3 (0xb05b2848) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b05b2848 from memory into f4
fnmadd.d f20, f3, f10, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x31, 0x0bb11bea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x2fade410 # load x3 with 32 MSBs 0x000000002fade410
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fade410
sw x3, 0(x2) # store x3 (0x2fade410) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000002fade410 from memory into f15
li x3, 0x1802f0c7 # load x3 with 32 MSBs 0x000000001802f0c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001802f0c7
sw x3, 0(x2) # store x3 (0x1802f0c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001802f0c7 from memory into f1
fnmadd.d f31, f4, f15, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x29, 0xeb279977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x513fbcdb # load x3 with 32 MSBs 0x00000000513fbcdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000513fbcdb
sw x3, 0(x2) # store x3 (0x513fbcdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000513fbcdb from memory into f16
li x3, 0xd0a8337f # load x3 with 32 MSBs 0x00000000d0a8337f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0a8337f
sw x3, 0(x2) # store x3 (0xd0a8337f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d0a8337f from memory into f25
fnmadd.d f29, f4, f16, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x14, 0xac5f961a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x3cbca129 # load x3 with 32 MSBs 0x000000003cbca129
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cbca129
sw x3, 0(x2) # store x3 (0x3cbca129) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003cbca129 from memory into f28
li x3, 0x89f8d676 # load x3 with 32 MSBs 0x0000000089f8d676
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089f8d676
sw x3, 0(x2) # store x3 (0x89f8d676) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000089f8d676 from memory into f15
fnmadd.d f14, f2, f28, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x13, 0xfd7b464c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xff21583a # load x3 with 32 MSBs 0x00000000ff21583a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff21583a
sw x3, 0(x2) # store x3 (0xff21583a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ff21583a from memory into f28
li x3, 0x7c5b7fcf # load x3 with 32 MSBs 0x000000007c5b7fcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c5b7fcf
sw x3, 0(x2) # store x3 (0x7c5b7fcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007c5b7fcf from memory into f14
fnmadd.d f13, f17, f28, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x30, 0x57fd2030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x84ec0b1f # load x3 with 32 MSBs 0x0000000084ec0b1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084ec0b1f
sw x3, 0(x2) # store x3 (0x84ec0b1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000084ec0b1f from memory into f3
li x3, 0x3d1e6d66 # load x3 with 32 MSBs 0x000000003d1e6d66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d1e6d66
sw x3, 0(x2) # store x3 (0x3d1e6d66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003d1e6d66 from memory into f9
fnmadd.d f30, f6, f3, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x29, 0xecf9c3ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xee36cf6a # load x3 with 32 MSBs 0x00000000ee36cf6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee36cf6a
sw x3, 0(x2) # store x3 (0xee36cf6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ee36cf6a from memory into f10
li x3, 0xd8cd7511 # load x3 with 32 MSBs 0x00000000d8cd7511
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8cd7511
sw x3, 0(x2) # store x3 (0xd8cd7511) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d8cd7511 from memory into f18
fnmadd.d f29, f16, f10, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x11, 0xe65e71e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x28af2c02 # load x3 with 32 MSBs 0x0000000028af2c02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028af2c02
sw x3, 0(x2) # store x3 (0x28af2c02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000028af2c02 from memory into f28
li x3, 0x1ea84fa1 # load x3 with 32 MSBs 0x000000001ea84fa1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ea84fa1
sw x3, 0(x2) # store x3 (0x1ea84fa1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001ea84fa1 from memory into f12
fnmadd.d f11, f7, f28, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x11, 0xb7bad557 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x4fa933a7 # load x3 with 32 MSBs 0x000000004fa933a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fa933a7
sw x3, 0(x2) # store x3 (0x4fa933a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004fa933a7 from memory into f30
li x3, 0x3d92a9fd # load x3 with 32 MSBs 0x000000003d92a9fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d92a9fd
sw x3, 0(x2) # store x3 (0x3d92a9fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003d92a9fd from memory into f20
fnmadd.d f11, f31, f30, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x3, 0x2fa636de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0xc4fce49e # load x3 with 32 MSBs 0x00000000c4fce49e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4fce49e
sw x3, 0(x2) # store x3 (0xc4fce49e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c4fce49e from memory into f28
li x3, 0x209c7bc1 # load x3 with 32 MSBs 0x00000000209c7bc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000209c7bc1
sw x3, 0(x2) # store x3 (0x209c7bc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000209c7bc1 from memory into f20
fnmadd.d f3, f4, f28, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x17, 0x66e40243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x628095d8 # load x3 with 32 MSBs 0x00000000628095d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000628095d8
sw x3, 0(x2) # store x3 (0x628095d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000628095d8 from memory into f18
li x3, 0xd1620714 # load x3 with 32 MSBs 0x00000000d1620714
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1620714
sw x3, 0(x2) # store x3 (0xd1620714) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d1620714 from memory into f1
fnmadd.d f17, f13, f18, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x22, 0xf03927a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0xb0fb6f72 # load x3 with 32 MSBs 0x00000000b0fb6f72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0fb6f72
sw x3, 0(x2) # store x3 (0xb0fb6f72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b0fb6f72 from memory into f23
li x3, 0x4dfdad83 # load x3 with 32 MSBs 0x000000004dfdad83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dfdad83
sw x3, 0(x2) # store x3 (0x4dfdad83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004dfdad83 from memory into f7
fnmadd.d f22, f6, f23, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x1, 0xa37b12c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x9eaf6012 # load x3 with 32 MSBs 0x000000009eaf6012
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009eaf6012
sw x3, 0(x2) # store x3 (0x9eaf6012) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000009eaf6012 from memory into f27
li x3, 0xcbce8078 # load x3 with 32 MSBs 0x00000000cbce8078
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbce8078
sw x3, 0(x2) # store x3 (0xcbce8078) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000cbce8078 from memory into f4
fnmadd.d f1, f10, f27, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x22, 0x3aceca3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0xa2ebf905 # load x3 with 32 MSBs 0x00000000a2ebf905
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2ebf905
sw x3, 0(x2) # store x3 (0xa2ebf905) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a2ebf905 from memory into f8
li x3, 0xa59a2aac # load x3 with 32 MSBs 0x00000000a59a2aac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a59a2aac
sw x3, 0(x2) # store x3 (0xa59a2aac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a59a2aac from memory into f27
fnmadd.d f22, f29, f8, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x3, 0x546056cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xf3363612 # load x3 with 32 MSBs 0x00000000f3363612
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3363612
sw x3, 0(x2) # store x3 (0xf3363612) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f3363612 from memory into f29
li x3, 0x782cc020 # load x3 with 32 MSBs 0x00000000782cc020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000782cc020
sw x3, 0(x2) # store x3 (0x782cc020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000782cc020 from memory into f31
fnmadd.d f3, f23, f29, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x5, 0xc0b3a4b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x761f2d53 # load x3 with 32 MSBs 0x00000000761f2d53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000761f2d53
sw x3, 0(x2) # store x3 (0x761f2d53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000761f2d53 from memory into f10
li x3, 0x0a976cd5 # load x3 with 32 MSBs 0x000000000a976cd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a976cd5
sw x3, 0(x2) # store x3 (0x0a976cd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000a976cd5 from memory into f29
fnmadd.d f5, f25, f10, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x27, 0x1e02b0d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x8d41b274 # load x3 with 32 MSBs 0x000000008d41b274
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d41b274
sw x3, 0(x2) # store x3 (0x8d41b274) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008d41b274 from memory into f22
li x3, 0xe3e32cb8 # load x3 with 32 MSBs 0x00000000e3e32cb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3e32cb8
sw x3, 0(x2) # store x3 (0xe3e32cb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e3e32cb8 from memory into f11
fnmadd.d f27, f13, f22, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x12, 0xa1b1a3ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0xdc3c3fc8 # load x3 with 32 MSBs 0x00000000dc3c3fc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc3c3fc8
sw x3, 0(x2) # store x3 (0xdc3c3fc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000dc3c3fc8 from memory into f18
li x3, 0xeabb8ab9 # load x3 with 32 MSBs 0x00000000eabb8ab9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eabb8ab9
sw x3, 0(x2) # store x3 (0xeabb8ab9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000eabb8ab9 from memory into f19
fnmadd.d f12, f22, f18, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x1, 0x87181953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x4ad78727 # load x3 with 32 MSBs 0x000000004ad78727
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ad78727
sw x3, 0(x2) # store x3 (0x4ad78727) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004ad78727 from memory into f18
li x3, 0xaa6647d5 # load x3 with 32 MSBs 0x00000000aa6647d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa6647d5
sw x3, 0(x2) # store x3 (0xaa6647d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000aa6647d5 from memory into f3
fnmadd.d f1, f2, f18, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x21, 0xdd168636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x72438f8a # load x3 with 32 MSBs 0x0000000072438f8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072438f8a
sw x3, 0(x2) # store x3 (0x72438f8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000072438f8a from memory into f8
li x3, 0xd7bec2de # load x3 with 32 MSBs 0x00000000d7bec2de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7bec2de
sw x3, 0(x2) # store x3 (0xd7bec2de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d7bec2de from memory into f2
fnmadd.d f21, f11, f8, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x19, 0x1c7f7200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x86d6b9f2 # load x3 with 32 MSBs 0x0000000086d6b9f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086d6b9f2
sw x3, 0(x2) # store x3 (0x86d6b9f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000086d6b9f2 from memory into f23
li x3, 0x509c17da # load x3 with 32 MSBs 0x00000000509c17da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000509c17da
sw x3, 0(x2) # store x3 (0x509c17da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000509c17da from memory into f13
fnmadd.d f19, f9, f23, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x31, 0x7a956d75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x7a70eb1f # load x3 with 32 MSBs 0x000000007a70eb1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a70eb1f
sw x3, 0(x2) # store x3 (0x7a70eb1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007a70eb1f from memory into f21
li x3, 0xd1fcaf3b # load x3 with 32 MSBs 0x00000000d1fcaf3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1fcaf3b
sw x3, 0(x2) # store x3 (0xd1fcaf3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d1fcaf3b from memory into f7
fnmadd.d f31, f6, f21, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x25, 0x9a20e87d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35737ff4 # load x3 with 32 MSBs 0x0000000035737ff4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035737ff4
sw x3, 0(x2) # store x3 (0x35737ff4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000035737ff4 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x8787c5b9 # load x3 with 32 MSBs 0x000000008787c5b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008787c5b9
sw x3, 0(x2) # store x3 (0x8787c5b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008787c5b9 from memory into f30
fnmadd.d f25, f16, f13, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x21, 0xc302f3ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1366571e # load x3 with 32 MSBs 0x000000001366571e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001366571e
sw x3, 0(x2) # store x3 (0x1366571e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001366571e from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0xb2b41988 # load x3 with 32 MSBs 0x00000000b2b41988
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2b41988
sw x3, 0(x2) # store x3 (0xb2b41988) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b2b41988 from memory into f24
fnmadd.d f21, f14, f18, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x12, 0xe7159876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4fa76437 # load x3 with 32 MSBs 0x000000004fa76437
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fa76437
sw x3, 0(x2) # store x3 (0x4fa76437) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004fa76437 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0x4fee64fd # load x3 with 32 MSBs 0x000000004fee64fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fee64fd
sw x3, 0(x2) # store x3 (0x4fee64fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000004fee64fd from memory into f26
fnmadd.d f12, f14, f30, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x4, 0x16ae8966 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5d7ba1c # load x3 with 32 MSBs 0x00000000f5d7ba1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5d7ba1c
sw x3, 0(x2) # store x3 (0xf5d7ba1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f5d7ba1c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x744c24b4 # load x3 with 32 MSBs 0x00000000744c24b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000744c24b4
sw x3, 0(x2) # store x3 (0x744c24b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000744c24b4 from memory into f30
fnmadd.d f4, f8, f3, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x16, 0x72b9c821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21b5b77c # load x3 with 32 MSBs 0x0000000021b5b77c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021b5b77c
sw x3, 0(x2) # store x3 (0x21b5b77c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000021b5b77c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x6685c6d2 # load x3 with 32 MSBs 0x000000006685c6d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006685c6d2
sw x3, 0(x2) # store x3 (0x6685c6d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006685c6d2 from memory into f13
fnmadd.d f16, f8, f4, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x30, 0x4c725a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2fe633ce # load x3 with 32 MSBs 0x000000002fe633ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fe633ce
sw x3, 0(x2) # store x3 (0x2fe633ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000002fe633ce from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x2659e46d # load x3 with 32 MSBs 0x000000002659e46d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002659e46d
sw x3, 0(x2) # store x3 (0x2659e46d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002659e46d from memory into f28
fnmadd.d f30, f23, f24, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x10, 0x88ebf8f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbb0e9b5 # load x3 with 32 MSBs 0x00000000dbb0e9b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbb0e9b5
sw x3, 0(x2) # store x3 (0xdbb0e9b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000dbb0e9b5 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x0940b7f4 # load x3 with 32 MSBs 0x000000000940b7f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000940b7f4
sw x3, 0(x2) # store x3 (0x0940b7f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000940b7f4 from memory into f17
fnmadd.d f10, f8, f29, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x31, 0x75be8d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x264075fc # load x3 with 32 MSBs 0x00000000264075fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000264075fc
sw x3, 0(x2) # store x3 (0x264075fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000264075fc from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x023ef610 # load x3 with 32 MSBs 0x00000000023ef610
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000023ef610
sw x3, 0(x2) # store x3 (0x023ef610) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000023ef610 from memory into f7
fnmadd.d f31, f5, f28, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x21, 0x05290558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x311421ec # load x3 with 32 MSBs 0x00000000311421ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000311421ec
sw x3, 0(x2) # store x3 (0x311421ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000311421ec from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x5cb57a32 # load x3 with 32 MSBs 0x000000005cb57a32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cb57a32
sw x3, 0(x2) # store x3 (0x5cb57a32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000005cb57a32 from memory into f15
fnmadd.d f21, f7, f14, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x20, 0x8b456563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x200f6ce7 # load x3 with 32 MSBs 0x00000000200f6ce7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000200f6ce7
sw x3, 0(x2) # store x3 (0x200f6ce7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000200f6ce7 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x9b17fb07 # load x3 with 32 MSBs 0x000000009b17fb07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b17fb07
sw x3, 0(x2) # store x3 (0x9b17fb07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009b17fb07 from memory into f28
fnmadd.d f20, f2, f23, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x22, 0x427adabf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2b53fb7 # load x3 with 32 MSBs 0x00000000b2b53fb7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2b53fb7
sw x3, 0(x2) # store x3 (0xb2b53fb7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b2b53fb7 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x7b135b05 # load x3 with 32 MSBs 0x000000007b135b05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b135b05
sw x3, 0(x2) # store x3 (0x7b135b05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007b135b05 from memory into f21
fnmadd.d f22, f20, f11, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x7, 0x6ca4757d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d550dcf # load x3 with 32 MSBs 0x000000001d550dcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d550dcf
sw x3, 0(x2) # store x3 (0x1d550dcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001d550dcf from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x22807f98 # load x3 with 32 MSBs 0x0000000022807f98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022807f98
sw x3, 0(x2) # store x3 (0x22807f98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000022807f98 from memory into f8
fnmadd.d f7, f26, f30, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x18, 0xbdae5a96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bec3925 # load x3 with 32 MSBs 0x000000001bec3925
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bec3925
sw x3, 0(x2) # store x3 (0x1bec3925) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000001bec3925 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x095ea8ac # load x3 with 32 MSBs 0x00000000095ea8ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000095ea8ac
sw x3, 0(x2) # store x3 (0x095ea8ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000095ea8ac from memory into f10
fnmadd.d f18, f7, f27, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x23, 0xb8723f7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8214371e # load x3 with 32 MSBs 0x000000008214371e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008214371e
sw x3, 0(x2) # store x3 (0x8214371e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008214371e from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0xb3b98eed # load x3 with 32 MSBs 0x00000000b3b98eed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3b98eed
sw x3, 0(x2) # store x3 (0xb3b98eed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b3b98eed from memory into f10
fnmadd.d f23, f8, f4, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x23, 0xf44e714a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ccfdda9 # load x3 with 32 MSBs 0x000000002ccfdda9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ccfdda9
sw x3, 0(x2) # store x3 (0x2ccfdda9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002ccfdda9 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x7d22d4d9 # load x3 with 32 MSBs 0x000000007d22d4d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d22d4d9
sw x3, 0(x2) # store x3 (0x7d22d4d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007d22d4d9 from memory into f10
fnmadd.d f23, f18, f20, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x22, 0x4c3a4bf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe2e9ec00 # load x3 with 32 MSBs 0x00000000e2e9ec00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2e9ec00
sw x3, 0(x2) # store x3 (0xe2e9ec00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e2e9ec00 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x32ab3758 # load x3 with 32 MSBs 0x0000000032ab3758
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032ab3758
sw x3, 0(x2) # store x3 (0x32ab3758) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000032ab3758 from memory into f20
fnmadd.d f22, f13, f24, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x13, 0x27817671 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc036b894 # load x3 with 32 MSBs 0x00000000c036b894
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c036b894
sw x3, 0(x2) # store x3 (0xc036b894) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c036b894 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0xcedcac63 # load x3 with 32 MSBs 0x00000000cedcac63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cedcac63
sw x3, 0(x2) # store x3 (0xcedcac63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000cedcac63 from memory into f16
fnmadd.d f13, f15, f30, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x4, 0x1e0ead08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef8e0aea # load x3 with 32 MSBs 0x00000000ef8e0aea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef8e0aea
sw x3, 0(x2) # store x3 (0xef8e0aea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ef8e0aea from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
li x3, 0x8bdd42d9 # load x3 with 32 MSBs 0x000000008bdd42d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bdd42d9
sw x3, 0(x2) # store x3 (0x8bdd42d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008bdd42d9 from memory into f29
fnmadd.d f4, f10, f22, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x26, 0x84e219a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa7c20cc # load x3 with 32 MSBs 0x00000000fa7c20cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa7c20cc
sw x3, 0(x2) # store x3 (0xfa7c20cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fa7c20cc from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x0a5436a8 # load x3 with 32 MSBs 0x000000000a5436a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a5436a8
sw x3, 0(x2) # store x3 (0x0a5436a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000000a5436a8 from memory into f2
fnmadd.d f26, f9, f4, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x7, 0x45741af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f7ddb94 # load x3 with 32 MSBs 0x000000005f7ddb94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f7ddb94
sw x3, 0(x2) # store x3 (0x5f7ddb94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005f7ddb94 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x0110640f # load x3 with 32 MSBs 0x000000000110640f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000110640f
sw x3, 0(x2) # store x3 (0x0110640f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000110640f from memory into f25
fnmadd.d f7, f26, f27, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x6, 0x00379296 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29fe0f59 # load x3 with 32 MSBs 0x0000000029fe0f59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029fe0f59
sw x3, 0(x2) # store x3 (0x29fe0f59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000029fe0f59 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x0406e835 # load x3 with 32 MSBs 0x000000000406e835
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000406e835
sw x3, 0(x2) # store x3 (0x0406e835) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000406e835 from memory into f29
fnmadd.d f6, f9, f16, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x9, 0x9cf69d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3c69b64 # load x3 with 32 MSBs 0x00000000e3c69b64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3c69b64
sw x3, 0(x2) # store x3 (0xe3c69b64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e3c69b64 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0xb17a760b # load x3 with 32 MSBs 0x00000000b17a760b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b17a760b
sw x3, 0(x2) # store x3 (0xb17a760b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b17a760b from memory into f23
fnmadd.d f9, f10, f7, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x14, 0xa1c113b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7fa644f # load x3 with 32 MSBs 0x00000000d7fa644f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7fa644f
sw x3, 0(x2) # store x3 (0xd7fa644f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d7fa644f from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x254f24ba # load x3 with 32 MSBs 0x00000000254f24ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000254f24ba
sw x3, 0(x2) # store x3 (0x254f24ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000254f24ba from memory into f31
fnmadd.d f14, f17, f29, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x14, 0xf752a043 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x85dd1c88 # load x3 with 32 MSBs 0x0000000085dd1c88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085dd1c88
sw x3, 0(x2) # store x3 (0x85dd1c88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000085dd1c88 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x9c08fe11 # load x3 with 32 MSBs 0x000000009c08fe11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c08fe11
sw x3, 0(x2) # store x3 (0x9c08fe11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009c08fe11 from memory into f6
fnmadd.d f14, f16, f3, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x10, 0xc6a48558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5b14447c # load x3 with 32 MSBs 0x000000005b14447c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b14447c
sw x3, 0(x2) # store x3 (0x5b14447c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005b14447c from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x07a6bf51 # load x3 with 32 MSBs 0x0000000007a6bf51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007a6bf51
sw x3, 0(x2) # store x3 (0x07a6bf51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000007a6bf51 from memory into f11
fnmadd.d f10, f8, f27, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x16, 0x5a6a19a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2ebc59de # load x3 with 32 MSBs 0x000000002ebc59de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ebc59de
sw x3, 0(x2) # store x3 (0x2ebc59de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002ebc59de from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x5465fe98 # load x3 with 32 MSBs 0x000000005465fe98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005465fe98
sw x3, 0(x2) # store x3 (0x5465fe98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005465fe98 from memory into f22
fnmadd.d f16, f1, f14, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x8, 0x31f7b4ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4ebe76c # load x3 with 32 MSBs 0x00000000c4ebe76c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4ebe76c
sw x3, 0(x2) # store x3 (0xc4ebe76c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c4ebe76c from memory into f28
li x3, 0x76b6ae56 # load x3 with 32 MSBs 0x0000000076b6ae56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076b6ae56
sw x3, 0(x2) # store x3 (0x76b6ae56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000076b6ae56 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fnmadd.d f8, f28, f17, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000000)
li x11, 0x9fdcaa3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe085ccbc # load x3 with 32 MSBs 0x00000000e085ccbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e085ccbc
sw x3, 0(x2) # store x3 (0xe085ccbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e085ccbc from memory into f17
li x3, 0xb1de9d87 # load x3 with 32 MSBs 0x00000000b1de9d87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1de9d87
sw x3, 0(x2) # store x3 (0xb1de9d87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b1de9d87 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fnmadd.d f11, f17, f7, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff0000000000000)
li x26, 0x0fe1bc60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3979574 # load x3 with 32 MSBs 0x00000000b3979574
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3979574
sw x3, 0(x2) # store x3 (0xb3979574) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b3979574 from memory into f22
li x3, 0x42868d75 # load x3 with 32 MSBs 0x0000000042868d75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042868d75
sw x3, 0(x2) # store x3 (0x42868d75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000042868d75 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fnmadd.d f26, f22, f17, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff0000000000000)
li x25, 0x4537f5d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0585cb8 # load x3 with 32 MSBs 0x00000000d0585cb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0585cb8
sw x3, 0(x2) # store x3 (0xd0585cb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d0585cb8 from memory into f31
li x3, 0xd392172b # load x3 with 32 MSBs 0x00000000d392172b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d392172b
sw x3, 0(x2) # store x3 (0xd392172b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d392172b from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fnmadd.d f25, f31, f10, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff8000000000000)
li x30, 0xa1a3314f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96fed714 # load x3 with 32 MSBs 0x0000000096fed714
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096fed714
sw x3, 0(x2) # store x3 (0x96fed714) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000096fed714 from memory into f15
li x3, 0xbba45627 # load x3 with 32 MSBs 0x00000000bba45627
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bba45627
sw x3, 0(x2) # store x3 (0xbba45627) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bba45627 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
fnmadd.d f30, f15, f18, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbff8000000000000)
li x6, 0xb8ddda25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb78d3f40 # load x3 with 32 MSBs 0x00000000b78d3f40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b78d3f40
sw x3, 0(x2) # store x3 (0xb78d3f40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b78d3f40 from memory into f27
li x3, 0x78225eb9 # load x3 with 32 MSBs 0x0000000078225eb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078225eb9
sw x3, 0(x2) # store x3 (0x78225eb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000078225eb9 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
fnmadd.d f6, f27, f9, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000000000000000)
li x29, 0xee276ca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c06a0e1 # load x3 with 32 MSBs 0x000000008c06a0e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c06a0e1
sw x3, 0(x2) # store x3 (0x8c06a0e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008c06a0e1 from memory into f12
li x3, 0x67ce4833 # load x3 with 32 MSBs 0x0000000067ce4833
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067ce4833
sw x3, 0(x2) # store x3 (0x67ce4833) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000067ce4833 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fnmadd.d f29, f12, f6, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000000000000000)
li x30, 0xd8110b18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0b9d6ef # load x3 with 32 MSBs 0x00000000f0b9d6ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0b9d6ef
sw x3, 0(x2) # store x3 (0xf0b9d6ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f0b9d6ef from memory into f4
li x3, 0xfbd64e68 # load x3 with 32 MSBs 0x00000000fbd64e68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbd64e68
sw x3, 0(x2) # store x3 (0xfbd64e68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000fbd64e68 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fnmadd.d f30, f4, f29, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x10000000000000)
li x15, 0x33699547 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea632f8a # load x3 with 32 MSBs 0x00000000ea632f8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea632f8a
sw x3, 0(x2) # store x3 (0xea632f8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ea632f8a from memory into f4
li x3, 0x15a231db # load x3 with 32 MSBs 0x0000000015a231db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015a231db
sw x3, 0(x2) # store x3 (0x15a231db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000015a231db from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fnmadd.d f15, f4, f10, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8010000000000000)
li x10, 0x9bac1506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f5a40ef # load x3 with 32 MSBs 0x000000000f5a40ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f5a40ef
sw x3, 0(x2) # store x3 (0x0f5a40ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000000f5a40ef from memory into f15
li x3, 0x996b1413 # load x3 with 32 MSBs 0x00000000996b1413
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000996b1413
sw x3, 0(x2) # store x3 (0x996b1413) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000996b1413 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fnmadd.d f10, f15, f25, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fefffffffffffff)
li x17, 0x6905c905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c956d19 # load x3 with 32 MSBs 0x000000008c956d19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c956d19
sw x3, 0(x2) # store x3 (0x8c956d19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008c956d19 from memory into f4
li x3, 0x4806476a # load x3 with 32 MSBs 0x000000004806476a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004806476a
sw x3, 0(x2) # store x3 (0x4806476a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004806476a from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fnmadd.d f17, f4, f1, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffefffffffffffff)
li x4, 0x713fc949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc93458e # load x3 with 32 MSBs 0x00000000dc93458e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc93458e
sw x3, 0(x2) # store x3 (0xdc93458e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000dc93458e from memory into f27
li x3, 0x1609e356 # load x3 with 32 MSBs 0x000000001609e356
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001609e356
sw x3, 0(x2) # store x3 (0x1609e356) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001609e356 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fnmadd.d f4, f27, f6, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfffffffffffff)
li x1, 0xb812c8af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f9d7649 # load x3 with 32 MSBs 0x000000002f9d7649
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f9d7649
sw x3, 0(x2) # store x3 (0x2f9d7649) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002f9d7649 from memory into f2
li x3, 0x87052592 # load x3 with 32 MSBs 0x0000000087052592
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087052592
sw x3, 0(x2) # store x3 (0x87052592) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000087052592 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fnmadd.d f1, f2, f31, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800fffffffffffff)
li x8, 0x764ed1a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8dd6b7cd # load x3 with 32 MSBs 0x000000008dd6b7cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dd6b7cd
sw x3, 0(x2) # store x3 (0x8dd6b7cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008dd6b7cd from memory into f29
li x3, 0x7eda0f4b # load x3 with 32 MSBs 0x000000007eda0f4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007eda0f4b
sw x3, 0(x2) # store x3 (0x7eda0f4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000007eda0f4b from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fnmadd.d f8, f29, f26, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000)
li x26, 0x1fd7dcc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0f61159 # load x3 with 32 MSBs 0x00000000a0f61159
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0f61159
sw x3, 0(x2) # store x3 (0xa0f61159) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a0f61159 from memory into f23
li x3, 0x8a749ef9 # load x3 with 32 MSBs 0x000000008a749ef9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a749ef9
sw x3, 0(x2) # store x3 (0x8a749ef9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008a749ef9 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
fnmadd.d f26, f23, f27, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8008000000000000)
li x29, 0x4ac49d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef5dfc1d # load x3 with 32 MSBs 0x00000000ef5dfc1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef5dfc1d
sw x3, 0(x2) # store x3 (0xef5dfc1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ef5dfc1d from memory into f22
li x3, 0xb58a59fe # load x3 with 32 MSBs 0x00000000b58a59fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b58a59fe
sw x3, 0(x2) # store x3 (0xb58a59fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b58a59fe from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f29, f22, f13, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x12, 0x1609df67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcecdd4f6 # load x3 with 32 MSBs 0x00000000cecdd4f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cecdd4f6
sw x3, 0(x2) # store x3 (0xcecdd4f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cecdd4f6 from memory into f25
li x3, 0x71db987e # load x3 with 32 MSBs 0x0000000071db987e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071db987e
sw x3, 0(x2) # store x3 (0x71db987e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000071db987e from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fnmadd.d f12, f25, f24, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000000000000001)
li x3, 0x89de3553 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ab3ab55 # load x3 with 32 MSBs 0x000000009ab3ab55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ab3ab55
sw x3, 0(x2) # store x3 (0x9ab3ab55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009ab3ab55 from memory into f5
li x3, 0xc9373377 # load x3 with 32 MSBs 0x00000000c9373377
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9373377
sw x3, 0(x2) # store x3 (0xc9373377) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c9373377 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmadd.d f3, f5, f9, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000000)
li x2, 0x1962c964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc118395b # load x3 with 32 MSBs 0x00000000c118395b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c118395b
sw x3, 0(x2) # store x3 (0xc118395b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c118395b from memory into f21
li x3, 0xe83f09af # load x3 with 32 MSBs 0x00000000e83f09af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e83f09af
sw x3, 0(x2) # store x3 (0xe83f09af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e83f09af from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmadd.d f2, f21, f24, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfff0000000000000)
li x22, 0x55e150c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0d86404 # load x3 with 32 MSBs 0x00000000e0d86404
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0d86404
sw x3, 0(x2) # store x3 (0xe0d86404) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e0d86404 from memory into f3
li x3, 0x65956e31 # load x3 with 32 MSBs 0x0000000065956e31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065956e31
sw x3, 0(x2) # store x3 (0x65956e31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000065956e31 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fnmadd.d f22, f3, f12, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff8000000000000)
li x27, 0xe429adec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78b261ad # load x3 with 32 MSBs 0x0000000078b261ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078b261ad
sw x3, 0(x2) # store x3 (0x78b261ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000078b261ad from memory into f13
li x3, 0xd6dabd6b # load x3 with 32 MSBs 0x00000000d6dabd6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6dabd6b
sw x3, 0(x2) # store x3 (0xd6dabd6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d6dabd6b from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fnmadd.d f27, f13, f26, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffffffffffff)
li x12, 0x5c8a3496 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e2af9a9 # load x3 with 32 MSBs 0x000000001e2af9a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e2af9a9
sw x3, 0(x2) # store x3 (0x1e2af9a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001e2af9a9 from memory into f22
li x3, 0xdb86d91f # load x3 with 32 MSBs 0x00000000db86d91f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db86d91f
sw x3, 0(x2) # store x3 (0xdb86d91f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000db86d91f from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fnmadd.d f12, f22, f14, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff0000000000001)
li x20, 0x3b841fd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc36ed23 # load x3 with 32 MSBs 0x00000000bc36ed23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc36ed23
sw x3, 0(x2) # store x3 (0xbc36ed23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000bc36ed23 from memory into f1
li x3, 0x237f42d6 # load x3 with 32 MSBs 0x00000000237f42d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000237f42d6
sw x3, 0(x2) # store x3 (0x237f42d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000237f42d6 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f20, f1, f23, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ff7ffffffffffff)
li x22, 0x9150048b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcab0787 # load x3 with 32 MSBs 0x00000000fcab0787
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcab0787
sw x3, 0(x2) # store x3 (0xfcab0787) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000fcab0787 from memory into f6
li x3, 0x208ef1a9 # load x3 with 32 MSBs 0x00000000208ef1a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000208ef1a9
sw x3, 0(x2) # store x3 (0x208ef1a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000208ef1a9 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fnmadd.d f22, f6, f31, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x5a392534a57711ad)
li x13, 0x3775151f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3bdd5c3 # load x3 with 32 MSBs 0x00000000b3bdd5c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3bdd5c3
sw x3, 0(x2) # store x3 (0xb3bdd5c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b3bdd5c3 from memory into f23
li x3, 0xf432b29f # load x3 with 32 MSBs 0x00000000f432b29f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f432b29f
sw x3, 0(x2) # store x3 (0xf432b29f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f432b29f from memory into f12
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fnmadd.d f13, f23, f12, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xa6e895993737426c)
li x23, 0xbcb75ff2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c6b1686 # load x3 with 32 MSBs 0x000000008c6b1686
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c6b1686
sw x3, 0(x2) # store x3 (0x8c6b1686) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008c6b1686 from memory into f19
li x3, 0xd497313f # load x3 with 32 MSBs 0x00000000d497313f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d497313f
sw x3, 0(x2) # store x3 (0xd497313f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d497313f from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fnmadd.d f23, f19, f29, f31 # perform operation

# Testcase cp_frm
li x6, 0xec24cd22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f7716cd # load x3 with 32 MSBs 0x000000009f7716cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f7716cd
sw x3, 0(x2) # store x3 (0x9f7716cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009f7716cd from memory into f16
li x3, 0xa9371d82 # load x3 with 32 MSBs 0x00000000a9371d82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9371d82
sw x3, 0(x2) # store x3 (0xa9371d82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a9371d82 from memory into f8
li x3, 0x0000000c # load x3 with 32 MSBs 0x000000000000000c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000000000c
sw x3, 0(x2) # store x3 (0x0000000c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000000000c from memory into f12
fnmadd.d f6, f16, f8, f12, dyn # perform operation
fnmadd.d f6, f16, f8, f12, rdn # perform operation
fnmadd.d f6, f16, f8, f12, rmm # perform operation
fnmadd.d f6, f16, f8, f12, rne # perform operation
fnmadd.d f6, f16, f8, f12, rtz # perform operation
fnmadd.d f6, f16, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x21, 0x537324f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xd7bcdfc3 # load x3 with 32 MSBs 0x00000000d7bcdfc3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7bcdfc3
sw x3, 0(x2) # store x3 (0xd7bcdfc3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d7bcdfc3 from memory into f18
fnmadd.d f21, f4, f2, f18, dyn # perform operation
fnmadd.d f21, f4, f2, f18, rdn # perform operation
fnmadd.d f21, f4, f2, f18, rmm # perform operation
fnmadd.d f21, f4, f2, f18, rne # perform operation
fnmadd.d f21, f4, f2, f18, rtz # perform operation
fnmadd.d f21, f4, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f4, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f4, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f4, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f4, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f4, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x18, 0x055d649a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x079275e8 # load x3 with 32 MSBs 0x00000000079275e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000079275e8
sw x3, 0(x2) # store x3 (0x079275e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000079275e8 from memory into f17
fnmadd.d f18, f30, f31, f17, dyn # perform operation
fnmadd.d f18, f30, f31, f17, rdn # perform operation
fnmadd.d f18, f30, f31, f17, rmm # perform operation
fnmadd.d f18, f30, f31, f17, rne # perform operation
fnmadd.d f18, f30, f31, f17, rtz # perform operation
fnmadd.d f18, f30, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f30, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f30, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f30, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f30, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f30, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x29, 0x11d7f4e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x2f90df78 # load x3 with 32 MSBs 0x000000002f90df78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f90df78
sw x3, 0(x2) # store x3 (0x2f90df78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002f90df78 from memory into f8
fnmadd.d f29, f21, f18, f8, dyn # perform operation
fnmadd.d f29, f21, f18, f8, rdn # perform operation
fnmadd.d f29, f21, f18, f8, rmm # perform operation
fnmadd.d f29, f21, f18, f8, rne # perform operation
fnmadd.d f29, f21, f18, f8, rtz # perform operation
fnmadd.d f29, f21, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f21, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f21, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x20, 0x9dcf019f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0xe5ae12ef # load x3 with 32 MSBs 0x00000000e5ae12ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5ae12ef
sw x3, 0(x2) # store x3 (0xe5ae12ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e5ae12ef from memory into f5
fnmadd.d f20, f31, f7, f5, dyn # perform operation
fnmadd.d f20, f31, f7, f5, rdn # perform operation
fnmadd.d f20, f31, f7, f5, rmm # perform operation
fnmadd.d f20, f31, f7, f5, rne # perform operation
fnmadd.d f20, f31, f7, f5, rtz # perform operation
fnmadd.d f20, f31, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f31, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f31, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f31, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f31, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f31, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x4, 0xe5d90518 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x8b7b54d2 # load x3 with 32 MSBs 0x000000008b7b54d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b7b54d2
sw x3, 0(x2) # store x3 (0x8b7b54d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008b7b54d2 from memory into f11
fnmadd.d f4, f27, f18, f11, dyn # perform operation
fnmadd.d f4, f27, f18, f11, rdn # perform operation
fnmadd.d f4, f27, f18, f11, rmm # perform operation
fnmadd.d f4, f27, f18, f11, rne # perform operation
fnmadd.d f4, f27, f18, f11, rtz # perform operation
fnmadd.d f4, f27, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f27, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x29, 0x2db12fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x155b254f # load x3 with 32 MSBs 0x00000000155b254f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000155b254f
sw x3, 0(x2) # store x3 (0x155b254f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000155b254f from memory into f28
fnmadd.d f29, f22, f8, f28, dyn # perform operation
fnmadd.d f29, f22, f8, f28, rdn # perform operation
fnmadd.d f29, f22, f8, f28, rmm # perform operation
fnmadd.d f29, f22, f8, f28, rne # perform operation
fnmadd.d f29, f22, f8, f28, rtz # perform operation
fnmadd.d f29, f22, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f22, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x4, 0x2d22b357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0xff8f47bb # load x3 with 32 MSBs 0x00000000ff8f47bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff8f47bb
sw x3, 0(x2) # store x3 (0xff8f47bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ff8f47bb from memory into f25
fnmadd.d f4, f19, f20, f25, dyn # perform operation
fnmadd.d f4, f19, f20, f25, rdn # perform operation
fnmadd.d f4, f19, f20, f25, rmm # perform operation
fnmadd.d f4, f19, f20, f25, rne # perform operation
fnmadd.d f4, f19, f20, f25, rtz # perform operation
fnmadd.d f4, f19, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f19, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x3, 0x2c2785f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0x76c85ece # load x3 with 32 MSBs 0x0000000076c85ece
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076c85ece
sw x3, 0(x2) # store x3 (0x76c85ece) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000076c85ece from memory into f13
fnmadd.d f3, f16, f15, f13, dyn # perform operation
fnmadd.d f3, f16, f15, f13, rdn # perform operation
fnmadd.d f3, f16, f15, f13, rmm # perform operation
fnmadd.d f3, f16, f15, f13, rne # perform operation
fnmadd.d f3, f16, f15, f13, rtz # perform operation
fnmadd.d f3, f16, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x8, 0x8ad8ed45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x74ba088b # load x3 with 32 MSBs 0x0000000074ba088b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074ba088b
sw x3, 0(x2) # store x3 (0x74ba088b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000074ba088b from memory into f29
fnmadd.d f8, f15, f5, f29, dyn # perform operation
fnmadd.d f8, f15, f5, f29, rdn # perform operation
fnmadd.d f8, f15, f5, f29, rmm # perform operation
fnmadd.d f8, f15, f5, f29, rne # perform operation
fnmadd.d f8, f15, f5, f29, rtz # perform operation
fnmadd.d f8, f15, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f15, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f15, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x2, 0xdf82a8e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0x0b6979b3 # load x3 with 32 MSBs 0x000000000b6979b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b6979b3
sw x3, 0(x2) # store x3 (0x0b6979b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000b6979b3 from memory into f10
fnmadd.d f2, f9, f30, f10, dyn # perform operation
fnmadd.d f2, f9, f30, f10, rdn # perform operation
fnmadd.d f2, f9, f30, f10, rmm # perform operation
fnmadd.d f2, f9, f30, f10, rne # perform operation
fnmadd.d f2, f9, f30, f10, rtz # perform operation
fnmadd.d f2, f9, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x7, 0x3ac19fc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x39d9d89e # load x3 with 32 MSBs 0x0000000039d9d89e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039d9d89e
sw x3, 0(x2) # store x3 (0x39d9d89e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000039d9d89e from memory into f31
fnmadd.d f7, f2, f8, f31, dyn # perform operation
fnmadd.d f7, f2, f8, f31, rdn # perform operation
fnmadd.d f7, f2, f8, f31, rmm # perform operation
fnmadd.d f7, f2, f8, f31, rne # perform operation
fnmadd.d f7, f2, f8, f31, rtz # perform operation
fnmadd.d f7, f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f2, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x10, 0x7c94aa77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0x0b7ed9e7 # load x3 with 32 MSBs 0x000000000b7ed9e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b7ed9e7
sw x3, 0(x2) # store x3 (0x0b7ed9e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000b7ed9e7 from memory into f9
fnmadd.d f10, f6, f14, f9, dyn # perform operation
fnmadd.d f10, f6, f14, f9, rdn # perform operation
fnmadd.d f10, f6, f14, f9, rmm # perform operation
fnmadd.d f10, f6, f14, f9, rne # perform operation
fnmadd.d f10, f6, f14, f9, rtz # perform operation
fnmadd.d f10, f6, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f6, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x6, 0x77d895a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x40d95925 # load x3 with 32 MSBs 0x0000000040d95925
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040d95925
sw x3, 0(x2) # store x3 (0x40d95925) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000040d95925 from memory into f24
fnmadd.d f6, f2, f3, f24, dyn # perform operation
fnmadd.d f6, f2, f3, f24, rdn # perform operation
fnmadd.d f6, f2, f3, f24, rmm # perform operation
fnmadd.d f6, f2, f3, f24, rne # perform operation
fnmadd.d f6, f2, f3, f24, rtz # perform operation
fnmadd.d f6, f2, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f2, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f2, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f2, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f2, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f2, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x5, 0xd28c984c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0xea8fcd1a # load x3 with 32 MSBs 0x00000000ea8fcd1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea8fcd1a
sw x3, 0(x2) # store x3 (0xea8fcd1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ea8fcd1a from memory into f28
fnmadd.d f5, f25, f22, f28, dyn # perform operation
fnmadd.d f5, f25, f22, f28, rdn # perform operation
fnmadd.d f5, f25, f22, f28, rmm # perform operation
fnmadd.d f5, f25, f22, f28, rne # perform operation
fnmadd.d f5, f25, f22, f28, rtz # perform operation
fnmadd.d f5, f25, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f25, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x23, 0x5f06b344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x4e3c9b7c # load x3 with 32 MSBs 0x000000004e3c9b7c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e3c9b7c
sw x3, 0(x2) # store x3 (0x4e3c9b7c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004e3c9b7c from memory into f11
fnmadd.d f23, f8, f13, f11, dyn # perform operation
fnmadd.d f23, f8, f13, f11, rdn # perform operation
fnmadd.d f23, f8, f13, f11, rmm # perform operation
fnmadd.d f23, f8, f13, f11, rne # perform operation
fnmadd.d f23, f8, f13, f11, rtz # perform operation
fnmadd.d f23, f8, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f8, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f8, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f8, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f8, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f8, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x17, 0x62d08c11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xbc47af13 # load x3 with 32 MSBs 0x00000000bc47af13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc47af13
sw x3, 0(x2) # store x3 (0xbc47af13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bc47af13 from memory into f11
fnmadd.d f17, f28, f10, f11, dyn # perform operation
fnmadd.d f17, f28, f10, f11, rdn # perform operation
fnmadd.d f17, f28, f10, f11, rmm # perform operation
fnmadd.d f17, f28, f10, f11, rne # perform operation
fnmadd.d f17, f28, f10, f11, rtz # perform operation
fnmadd.d f17, f28, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f28, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f28, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x13, 0x823cbc18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
li x3, 0xd274b397 # load x3 with 32 MSBs 0x00000000d274b397
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d274b397
sw x3, 0(x2) # store x3 (0xd274b397) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d274b397 from memory into f4
fnmadd.d f13, f5, f11, f4, dyn # perform operation
fnmadd.d f13, f5, f11, f4, rdn # perform operation
fnmadd.d f13, f5, f11, f4, rmm # perform operation
fnmadd.d f13, f5, f11, f4, rne # perform operation
fnmadd.d f13, f5, f11, f4, rtz # perform operation
fnmadd.d f13, f5, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f5, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x18, 0x5118a8d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x100bfa84 # load x3 with 32 MSBs 0x00000000100bfa84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000100bfa84
sw x3, 0(x2) # store x3 (0x100bfa84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000100bfa84 from memory into f13
fnmadd.d f18, f29, f27, f13, dyn # perform operation
fnmadd.d f18, f29, f27, f13, rdn # perform operation
fnmadd.d f18, f29, f27, f13, rmm # perform operation
fnmadd.d f18, f29, f27, f13, rne # perform operation
fnmadd.d f18, f29, f27, f13, rtz # perform operation
fnmadd.d f18, f29, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x9, 0x7848919c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x7b482b6e # load x3 with 32 MSBs 0x000000007b482b6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b482b6e
sw x3, 0(x2) # store x3 (0x7b482b6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007b482b6e from memory into f31
fnmadd.d f9, f30, f21, f31, dyn # perform operation
fnmadd.d f9, f30, f21, f31, rdn # perform operation
fnmadd.d f9, f30, f21, f31, rmm # perform operation
fnmadd.d f9, f30, f21, f31, rne # perform operation
fnmadd.d f9, f30, f21, f31, rtz # perform operation
fnmadd.d f9, f30, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f30, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x14, 0xf9dabced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xd77efe53 # load x3 with 32 MSBs 0x00000000d77efe53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d77efe53
sw x3, 0(x2) # store x3 (0xd77efe53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d77efe53 from memory into f24
fnmadd.d f14, f22, f5, f24, dyn # perform operation
fnmadd.d f14, f22, f5, f24, rdn # perform operation
fnmadd.d f14, f22, f5, f24, rmm # perform operation
fnmadd.d f14, f22, f5, f24, rne # perform operation
fnmadd.d f14, f22, f5, f24, rtz # perform operation
fnmadd.d f14, f22, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f22, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f22, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f22, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f22, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f22, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x27, 0x6efd7957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0xda2d553b # load x3 with 32 MSBs 0x00000000da2d553b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da2d553b
sw x3, 0(x2) # store x3 (0xda2d553b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000da2d553b from memory into f7
fnmadd.d f27, f9, f14, f7, dyn # perform operation
fnmadd.d f27, f9, f14, f7, rdn # perform operation
fnmadd.d f27, f9, f14, f7, rmm # perform operation
fnmadd.d f27, f9, f14, f7, rne # perform operation
fnmadd.d f27, f9, f14, f7, rtz # perform operation
fnmadd.d f27, f9, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f9, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x11, 0x137eb2ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0xb5c33e59 # load x3 with 32 MSBs 0x00000000b5c33e59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5c33e59
sw x3, 0(x2) # store x3 (0xb5c33e59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b5c33e59 from memory into f5
fnmadd.d f11, f30, f2, f5, dyn # perform operation
fnmadd.d f11, f30, f2, f5, rdn # perform operation
fnmadd.d f11, f30, f2, f5, rmm # perform operation
fnmadd.d f11, f30, f2, f5, rne # perform operation
fnmadd.d f11, f30, f2, f5, rtz # perform operation
fnmadd.d f11, f30, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f30, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x13, 0x13ef2c56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xf2905d74 # load x3 with 32 MSBs 0x00000000f2905d74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2905d74
sw x3, 0(x2) # store x3 (0xf2905d74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f2905d74 from memory into f14
fnmadd.d f13, f23, f9, f14, dyn # perform operation
fnmadd.d f13, f23, f9, f14, rdn # perform operation
fnmadd.d f13, f23, f9, f14, rmm # perform operation
fnmadd.d f13, f23, f9, f14, rne # perform operation
fnmadd.d f13, f23, f9, f14, rtz # perform operation
fnmadd.d f13, f23, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f23, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f23, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f23, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f23, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f23, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x24, 0xb6432fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x8399769e # load x3 with 32 MSBs 0x000000008399769e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008399769e
sw x3, 0(x2) # store x3 (0x8399769e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008399769e from memory into f7
fnmadd.d f24, f8, f9, f7, dyn # perform operation
fnmadd.d f24, f8, f9, f7, rdn # perform operation
fnmadd.d f24, f8, f9, f7, rmm # perform operation
fnmadd.d f24, f8, f9, f7, rne # perform operation
fnmadd.d f24, f8, f9, f7, rtz # perform operation
fnmadd.d f24, f8, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f8, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f8, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x11, 0x46e009fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x126fff16 # load x3 with 32 MSBs 0x00000000126fff16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000126fff16
sw x3, 0(x2) # store x3 (0x126fff16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000126fff16 from memory into f23
fnmadd.d f11, f16, f22, f23, dyn # perform operation
fnmadd.d f11, f16, f22, f23, rdn # perform operation
fnmadd.d f11, f16, f22, f23, rmm # perform operation
fnmadd.d f11, f16, f22, f23, rne # perform operation
fnmadd.d f11, f16, f22, f23, rtz # perform operation
fnmadd.d f11, f16, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x9, 0x9887854d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x940c8912 # load x3 with 32 MSBs 0x00000000940c8912
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000940c8912
sw x3, 0(x2) # store x3 (0x940c8912) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000940c8912 from memory into f19
fnmadd.d f9, f25, f27, f19, dyn # perform operation
fnmadd.d f9, f25, f27, f19, rdn # perform operation
fnmadd.d f9, f25, f27, f19, rmm # perform operation
fnmadd.d f9, f25, f27, f19, rne # perform operation
fnmadd.d f9, f25, f27, f19, rtz # perform operation
fnmadd.d f9, f25, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f25, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x22, 0x09881a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0xff062dac # load x3 with 32 MSBs 0x00000000ff062dac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff062dac
sw x3, 0(x2) # store x3 (0xff062dac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000ff062dac from memory into f20
fnmadd.d f22, f6, f4, f20, dyn # perform operation
fnmadd.d f22, f6, f4, f20, rdn # perform operation
fnmadd.d f22, f6, f4, f20, rmm # perform operation
fnmadd.d f22, f6, f4, f20, rne # perform operation
fnmadd.d f22, f6, f4, f20, rtz # perform operation
fnmadd.d f22, f6, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f6, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f6, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f6, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f6, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f6, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x20, 0xd5f0bea3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
li x3, 0x94b6892e # load x3 with 32 MSBs 0x0000000094b6892e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094b6892e
sw x3, 0(x2) # store x3 (0x94b6892e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000094b6892e from memory into f28
fnmadd.d f20, f9, f11, f28, dyn # perform operation
fnmadd.d f20, f9, f11, f28, rdn # perform operation
fnmadd.d f20, f9, f11, f28, rmm # perform operation
fnmadd.d f20, f9, f11, f28, rne # perform operation
fnmadd.d f20, f9, f11, f28, rtz # perform operation
fnmadd.d f20, f9, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f9, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f9, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x10, 0xe33223d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0x32b5c149 # load x3 with 32 MSBs 0x0000000032b5c149
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032b5c149
sw x3, 0(x2) # store x3 (0x32b5c149) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000032b5c149 from memory into f11
fnmadd.d f10, f17, f19, f11, dyn # perform operation
fnmadd.d f10, f17, f19, f11, rdn # perform operation
fnmadd.d f10, f17, f19, f11, rmm # perform operation
fnmadd.d f10, f17, f19, f11, rne # perform operation
fnmadd.d f10, f17, f19, f11, rtz # perform operation
fnmadd.d f10, f17, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f17, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x2, 0x38f96304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x19a6138c # load x3 with 32 MSBs 0x0000000019a6138c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019a6138c
sw x3, 0(x2) # store x3 (0x19a6138c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000019a6138c from memory into f6
fnmadd.d f2, f21, f20, f6, dyn # perform operation
fnmadd.d f2, f21, f20, f6, rdn # perform operation
fnmadd.d f2, f21, f20, f6, rmm # perform operation
fnmadd.d f2, f21, f20, f6, rne # perform operation
fnmadd.d f2, f21, f20, f6, rtz # perform operation
fnmadd.d f2, f21, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x14, 0x37035261 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x8dc42548 # load x3 with 32 MSBs 0x000000008dc42548
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008dc42548
sw x3, 0(x2) # store x3 (0x8dc42548) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008dc42548 from memory into f28
fnmadd.d f14, f10, f7, f28, dyn # perform operation
fnmadd.d f14, f10, f7, f28, rdn # perform operation
fnmadd.d f14, f10, f7, f28, rmm # perform operation
fnmadd.d f14, f10, f7, f28, rne # perform operation
fnmadd.d f14, f10, f7, f28, rtz # perform operation
fnmadd.d f14, f10, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f10, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f10, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f10, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f10, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f10, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x15, 0xd17b64a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x6e6fedd8 # load x3 with 32 MSBs 0x000000006e6fedd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e6fedd8
sw x3, 0(x2) # store x3 (0x6e6fedd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006e6fedd8 from memory into f28
fnmadd.d f15, f14, f4, f28, dyn # perform operation
fnmadd.d f15, f14, f4, f28, rdn # perform operation
fnmadd.d f15, f14, f4, f28, rmm # perform operation
fnmadd.d f15, f14, f4, f28, rne # perform operation
fnmadd.d f15, f14, f4, f28, rtz # perform operation
fnmadd.d f15, f14, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f14, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f14, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x17, 0x25f8beba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x55f64176 # load x3 with 32 MSBs 0x0000000055f64176
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055f64176
sw x3, 0(x2) # store x3 (0x55f64176) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000055f64176 from memory into f27
fnmadd.d f17, f1, f5, f27, dyn # perform operation
fnmadd.d f17, f1, f5, f27, rdn # perform operation
fnmadd.d f17, f1, f5, f27, rmm # perform operation
fnmadd.d f17, f1, f5, f27, rne # perform operation
fnmadd.d f17, f1, f5, f27, rtz # perform operation
fnmadd.d f17, f1, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f1, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x17, 0x73273dbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xa39fdcb4 # load x3 with 32 MSBs 0x00000000a39fdcb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a39fdcb4
sw x3, 0(x2) # store x3 (0xa39fdcb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a39fdcb4 from memory into f29
fnmadd.d f17, f14, f1, f29, dyn # perform operation
fnmadd.d f17, f14, f1, f29, rdn # perform operation
fnmadd.d f17, f14, f1, f29, rmm # perform operation
fnmadd.d f17, f14, f1, f29, rne # perform operation
fnmadd.d f17, f14, f1, f29, rtz # perform operation
fnmadd.d f17, f14, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f14, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f14, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f14, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f14, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f14, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x3, 0xb4d83fba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x74f76d57 # load x3 with 32 MSBs 0x0000000074f76d57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074f76d57
sw x3, 0(x2) # store x3 (0x74f76d57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000074f76d57 from memory into f17
fnmadd.d f3, f7, f16, f17, dyn # perform operation
fnmadd.d f3, f7, f16, f17, rdn # perform operation
fnmadd.d f3, f7, f16, f17, rmm # perform operation
fnmadd.d f3, f7, f16, f17, rne # perform operation
fnmadd.d f3, f7, f16, f17, rtz # perform operation
fnmadd.d f3, f7, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f7, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f7, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f7, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f7, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f7, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x25, 0x8c4bce11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x888fb435 # load x3 with 32 MSBs 0x00000000888fb435
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000888fb435
sw x3, 0(x2) # store x3 (0x888fb435) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000888fb435 from memory into f19
fnmadd.d f25, f22, f12, f19, dyn # perform operation
fnmadd.d f25, f22, f12, f19, rdn # perform operation
fnmadd.d f25, f22, f12, f19, rmm # perform operation
fnmadd.d f25, f22, f12, f19, rne # perform operation
fnmadd.d f25, f22, f12, f19, rtz # perform operation
fnmadd.d f25, f22, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f22, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x22, 0xec8256f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0xe7142f25 # load x3 with 32 MSBs 0x00000000e7142f25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7142f25
sw x3, 0(x2) # store x3 (0xe7142f25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e7142f25 from memory into f29
fnmadd.d f22, f26, f31, f29, dyn # perform operation
fnmadd.d f22, f26, f31, f29, rdn # perform operation
fnmadd.d f22, f26, f31, f29, rmm # perform operation
fnmadd.d f22, f26, f31, f29, rne # perform operation
fnmadd.d f22, f26, f31, f29, rtz # perform operation
fnmadd.d f22, f26, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f26, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x2, 0x3e93d66d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x0182de54 # load x3 with 32 MSBs 0x000000000182de54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000182de54
sw x3, 0(x2) # store x3 (0x0182de54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000182de54 from memory into f11
fnmadd.d f2, f1, f29, f11, dyn # perform operation
fnmadd.d f2, f1, f29, f11, rdn # perform operation
fnmadd.d f2, f1, f29, f11, rmm # perform operation
fnmadd.d f2, f1, f29, f11, rne # perform operation
fnmadd.d f2, f1, f29, f11, rtz # perform operation
fnmadd.d f2, f1, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f1, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f1, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f1, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f1, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f1, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x19, 0x6c8d7229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0xe1e6ba08 # load x3 with 32 MSBs 0x00000000e1e6ba08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1e6ba08
sw x3, 0(x2) # store x3 (0xe1e6ba08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e1e6ba08 from memory into f1
fnmadd.d f19, f16, f10, f1, dyn # perform operation
fnmadd.d f19, f16, f10, f1, rdn # perform operation
fnmadd.d f19, f16, f10, f1, rmm # perform operation
fnmadd.d f19, f16, f10, f1, rne # perform operation
fnmadd.d f19, f16, f10, f1, rtz # perform operation
fnmadd.d f19, f16, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f16, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f16, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f16, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f16, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f16, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x3, 0x5b25e678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x33bfb77e # load x3 with 32 MSBs 0x0000000033bfb77e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033bfb77e
sw x3, 0(x2) # store x3 (0x33bfb77e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000033bfb77e from memory into f7
fnmadd.d f3, f25, f29, f7, dyn # perform operation
fnmadd.d f3, f25, f29, f7, rdn # perform operation
fnmadd.d f3, f25, f29, f7, rmm # perform operation
fnmadd.d f3, f25, f29, f7, rne # perform operation
fnmadd.d f3, f25, f29, f7, rtz # perform operation
fnmadd.d f3, f25, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f25, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f25, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x25, 0x2b8c03a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x13f10051 # load x3 with 32 MSBs 0x0000000013f10051
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013f10051
sw x3, 0(x2) # store x3 (0x13f10051) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000013f10051 from memory into f29
fnmadd.d f25, f5, f3, f29, dyn # perform operation
fnmadd.d f25, f5, f3, f29, rdn # perform operation
fnmadd.d f25, f5, f3, f29, rmm # perform operation
fnmadd.d f25, f5, f3, f29, rne # perform operation
fnmadd.d f25, f5, f3, f29, rtz # perform operation
fnmadd.d f25, f5, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f5, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f5, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x6, 0x12f6e757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x9ec87416 # load x3 with 32 MSBs 0x000000009ec87416
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ec87416
sw x3, 0(x2) # store x3 (0x9ec87416) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009ec87416 from memory into f3
fnmadd.d f6, f31, f26, f3, dyn # perform operation
fnmadd.d f6, f31, f26, f3, rdn # perform operation
fnmadd.d f6, f31, f26, f3, rmm # perform operation
fnmadd.d f6, f31, f26, f3, rne # perform operation
fnmadd.d f6, f31, f26, f3, rtz # perform operation
fnmadd.d f6, f31, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f31, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x19, 0x49e7da0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x167c1709 # load x3 with 32 MSBs 0x00000000167c1709
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000167c1709
sw x3, 0(x2) # store x3 (0x167c1709) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000167c1709 from memory into f11
fnmadd.d f19, f1, f6, f11, dyn # perform operation
fnmadd.d f19, f1, f6, f11, rdn # perform operation
fnmadd.d f19, f1, f6, f11, rmm # perform operation
fnmadd.d f19, f1, f6, f11, rne # perform operation
fnmadd.d f19, f1, f6, f11, rtz # perform operation
fnmadd.d f19, f1, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f1, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f1, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x18, 0xcd066cff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x898911d1 # load x3 with 32 MSBs 0x00000000898911d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000898911d1
sw x3, 0(x2) # store x3 (0x898911d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000898911d1 from memory into f5
fnmadd.d f18, f10, f15, f5, dyn # perform operation
fnmadd.d f18, f10, f15, f5, rdn # perform operation
fnmadd.d f18, f10, f15, f5, rmm # perform operation
fnmadd.d f18, f10, f15, f5, rne # perform operation
fnmadd.d f18, f10, f15, f5, rtz # perform operation
fnmadd.d f18, f10, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f10, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x17, 0x766590db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x42045e01 # load x3 with 32 MSBs 0x0000000042045e01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042045e01
sw x3, 0(x2) # store x3 (0x42045e01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000042045e01 from memory into f29
fnmadd.d f17, f23, f31, f29, dyn # perform operation
fnmadd.d f17, f23, f31, f29, rdn # perform operation
fnmadd.d f17, f23, f31, f29, rmm # perform operation
fnmadd.d f17, f23, f31, f29, rne # perform operation
fnmadd.d f17, f23, f31, f29, rtz # perform operation
fnmadd.d f17, f23, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f23, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x5, 0x54f7d58b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x6823a6d2 # load x3 with 32 MSBs 0x000000006823a6d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006823a6d2
sw x3, 0(x2) # store x3 (0x6823a6d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006823a6d2 from memory into f7
fnmadd.d f5, f14, f1, f7, dyn # perform operation
fnmadd.d f5, f14, f1, f7, rdn # perform operation
fnmadd.d f5, f14, f1, f7, rmm # perform operation
fnmadd.d f5, f14, f1, f7, rne # perform operation
fnmadd.d f5, f14, f1, f7, rtz # perform operation
fnmadd.d f5, f14, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x13, 0xacd52d11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x97e02692 # load x3 with 32 MSBs 0x0000000097e02692
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097e02692
sw x3, 0(x2) # store x3 (0x97e02692) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000097e02692 from memory into f14
fnmadd.d f13, f19, f8, f14, dyn # perform operation
fnmadd.d f13, f19, f8, f14, rdn # perform operation
fnmadd.d f13, f19, f8, f14, rmm # perform operation
fnmadd.d f13, f19, f8, f14, rne # perform operation
fnmadd.d f13, f19, f8, f14, rtz # perform operation
fnmadd.d f13, f19, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x2, 0xc2520e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x83e5b287 # load x3 with 32 MSBs 0x0000000083e5b287
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083e5b287
sw x3, 0(x2) # store x3 (0x83e5b287) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000083e5b287 from memory into f13
fnmadd.d f2, f26, f15, f13, dyn # perform operation
fnmadd.d f2, f26, f15, f13, rdn # perform operation
fnmadd.d f2, f26, f15, f13, rmm # perform operation
fnmadd.d f2, f26, f15, f13, rne # perform operation
fnmadd.d f2, f26, f15, f13, rtz # perform operation
fnmadd.d f2, f26, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f26, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f26, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x25, 0x38aae804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x90f64f22 # load x3 with 32 MSBs 0x0000000090f64f22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090f64f22
sw x3, 0(x2) # store x3 (0x90f64f22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000090f64f22 from memory into f19
fnmadd.d f25, f6, f24, f19, dyn # perform operation
fnmadd.d f25, f6, f24, f19, rdn # perform operation
fnmadd.d f25, f6, f24, f19, rmm # perform operation
fnmadd.d f25, f6, f24, f19, rne # perform operation
fnmadd.d f25, f6, f24, f19, rtz # perform operation
fnmadd.d f25, f6, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x10, 0xfb932830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x20053050 # load x3 with 32 MSBs 0x0000000020053050
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020053050
sw x3, 0(x2) # store x3 (0x20053050) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000020053050 from memory into f1
fnmadd.d f10, f29, f20, f1, dyn # perform operation
fnmadd.d f10, f29, f20, f1, rdn # perform operation
fnmadd.d f10, f29, f20, f1, rmm # perform operation
fnmadd.d f10, f29, f20, f1, rne # perform operation
fnmadd.d f10, f29, f20, f1, rtz # perform operation
fnmadd.d f10, f29, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x8, 0x3a3e0422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0xfd3b22ff # load x3 with 32 MSBs 0x00000000fd3b22ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd3b22ff
sw x3, 0(x2) # store x3 (0xfd3b22ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000fd3b22ff from memory into f23
fnmadd.d f8, f31, f12, f23, dyn # perform operation
fnmadd.d f8, f31, f12, f23, rdn # perform operation
fnmadd.d f8, f31, f12, f23, rmm # perform operation
fnmadd.d f8, f31, f12, f23, rne # perform operation
fnmadd.d f8, f31, f12, f23, rtz # perform operation
fnmadd.d f8, f31, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x8, 0xf5514dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xada3295c # load x3 with 32 MSBs 0x00000000ada3295c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ada3295c
sw x3, 0(x2) # store x3 (0xada3295c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ada3295c from memory into f15
fnmadd.d f8, f10, f31, f15, dyn # perform operation
fnmadd.d f8, f10, f31, f15, rdn # perform operation
fnmadd.d f8, f10, f31, f15, rmm # perform operation
fnmadd.d f8, f10, f31, f15, rne # perform operation
fnmadd.d f8, f10, f31, f15, rtz # perform operation
fnmadd.d f8, f10, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f10, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f10, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f10, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f10, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f10, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x2, 0x576ea94b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0x26f22da3 # load x3 with 32 MSBs 0x0000000026f22da3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026f22da3
sw x3, 0(x2) # store x3 (0x26f22da3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000026f22da3 from memory into f9
fnmadd.d f2, f29, f4, f9, dyn # perform operation
fnmadd.d f2, f29, f4, f9, rdn # perform operation
fnmadd.d f2, f29, f4, f9, rmm # perform operation
fnmadd.d f2, f29, f4, f9, rne # perform operation
fnmadd.d f2, f29, f4, f9, rtz # perform operation
fnmadd.d f2, f29, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f29, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f29, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f29, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f29, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f29, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x13, 0xecc47649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x9a5598e7 # load x3 with 32 MSBs 0x000000009a5598e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a5598e7
sw x3, 0(x2) # store x3 (0x9a5598e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009a5598e7 from memory into f29
fnmadd.d f13, f15, f24, f29, dyn # perform operation
fnmadd.d f13, f15, f24, f29, rdn # perform operation
fnmadd.d f13, f15, f24, f29, rmm # perform operation
fnmadd.d f13, f15, f24, f29, rne # perform operation
fnmadd.d f13, f15, f24, f29, rtz # perform operation
fnmadd.d f13, f15, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f15, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x3, 0x2a3036ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0xf287ba05 # load x3 with 32 MSBs 0x00000000f287ba05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f287ba05
sw x3, 0(x2) # store x3 (0xf287ba05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f287ba05 from memory into f8
fnmadd.d f3, f26, f21, f8, dyn # perform operation
fnmadd.d f3, f26, f21, f8, rdn # perform operation
fnmadd.d f3, f26, f21, f8, rmm # perform operation
fnmadd.d f3, f26, f21, f8, rne # perform operation
fnmadd.d f3, f26, f21, f8, rtz # perform operation
fnmadd.d f3, f26, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f26, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x16, 0x602c75dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0xaf724f6f # load x3 with 32 MSBs 0x00000000af724f6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af724f6f
sw x3, 0(x2) # store x3 (0xaf724f6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000af724f6f from memory into f6
fnmadd.d f16, f14, f5, f6, dyn # perform operation
fnmadd.d f16, f14, f5, f6, rdn # perform operation
fnmadd.d f16, f14, f5, f6, rmm # perform operation
fnmadd.d f16, f14, f5, f6, rne # perform operation
fnmadd.d f16, f14, f5, f6, rtz # perform operation
fnmadd.d f16, f14, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f14, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f14, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f14, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f14, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f14, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x9, 0x4478a857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x7e2af58a # load x3 with 32 MSBs 0x000000007e2af58a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e2af58a
sw x3, 0(x2) # store x3 (0x7e2af58a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007e2af58a from memory into f31
fnmadd.d f9, f14, f12, f31, dyn # perform operation
fnmadd.d f9, f14, f12, f31, rdn # perform operation
fnmadd.d f9, f14, f12, f31, rmm # perform operation
fnmadd.d f9, f14, f12, f31, rne # perform operation
fnmadd.d f9, f14, f12, f31, rtz # perform operation
fnmadd.d f9, f14, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f14, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f14, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x31, 0x414ec65b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x73d570d7 # load x3 with 32 MSBs 0x0000000073d570d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073d570d7
sw x3, 0(x2) # store x3 (0x73d570d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000073d570d7 from memory into f29
fnmadd.d f31, f14, f15, f29, dyn # perform operation
fnmadd.d f31, f14, f15, f29, rdn # perform operation
fnmadd.d f31, f14, f15, f29, rmm # perform operation
fnmadd.d f31, f14, f15, f29, rne # perform operation
fnmadd.d f31, f14, f15, f29, rtz # perform operation
fnmadd.d f31, f14, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f14, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f14, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x17, 0xb0e43a00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0xb955ec06 # load x3 with 32 MSBs 0x00000000b955ec06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b955ec06
sw x3, 0(x2) # store x3 (0xb955ec06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b955ec06 from memory into f2
fnmadd.d f17, f10, f31, f2, dyn # perform operation
fnmadd.d f17, f10, f31, f2, rdn # perform operation
fnmadd.d f17, f10, f31, f2, rmm # perform operation
fnmadd.d f17, f10, f31, f2, rne # perform operation
fnmadd.d f17, f10, f31, f2, rtz # perform operation
fnmadd.d f17, f10, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x14, 0xaf5c4ee2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xa9a44e0b # load x3 with 32 MSBs 0x00000000a9a44e0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9a44e0b
sw x3, 0(x2) # store x3 (0xa9a44e0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a9a44e0b from memory into f24
fnmadd.d f14, f30, f15, f24, dyn # perform operation
fnmadd.d f14, f30, f15, f24, rdn # perform operation
fnmadd.d f14, f30, f15, f24, rmm # perform operation
fnmadd.d f14, f30, f15, f24, rne # perform operation
fnmadd.d f14, f30, f15, f24, rtz # perform operation
fnmadd.d f14, f30, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f30, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x16, 0x8c8b1cf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x6d6c6eaa # load x3 with 32 MSBs 0x000000006d6c6eaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d6c6eaa
sw x3, 0(x2) # store x3 (0x6d6c6eaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000006d6c6eaa from memory into f11
fnmadd.d f16, f2, f3, f11, dyn # perform operation
fnmadd.d f16, f2, f3, f11, rdn # perform operation
fnmadd.d f16, f2, f3, f11, rmm # perform operation
fnmadd.d f16, f2, f3, f11, rne # perform operation
fnmadd.d f16, f2, f3, f11, rtz # perform operation
fnmadd.d f16, f2, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f2, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x4, 0xf60ef4fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0xddff65a7 # load x3 with 32 MSBs 0x00000000ddff65a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddff65a7
sw x3, 0(x2) # store x3 (0xddff65a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ddff65a7 from memory into f15
fnmadd.d f4, f1, f16, f15, dyn # perform operation
fnmadd.d f4, f1, f16, f15, rdn # perform operation
fnmadd.d f4, f1, f16, f15, rmm # perform operation
fnmadd.d f4, f1, f16, f15, rne # perform operation
fnmadd.d f4, f1, f16, f15, rtz # perform operation
fnmadd.d f4, f1, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f1, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x30, 0xc3499f16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x68db627a # load x3 with 32 MSBs 0x0000000068db627a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068db627a
sw x3, 0(x2) # store x3 (0x68db627a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000068db627a from memory into f5
fnmadd.d f30, f20, f18, f5, dyn # perform operation
fnmadd.d f30, f20, f18, f5, rdn # perform operation
fnmadd.d f30, f20, f18, f5, rmm # perform operation
fnmadd.d f30, f20, f18, f5, rne # perform operation
fnmadd.d f30, f20, f18, f5, rtz # perform operation
fnmadd.d f30, f20, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f20, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f20, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x16, 0x8400c11b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0xf4a8cde7 # load x3 with 32 MSBs 0x00000000f4a8cde7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4a8cde7
sw x3, 0(x2) # store x3 (0xf4a8cde7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f4a8cde7 from memory into f9
fnmadd.d f16, f4, f24, f9, dyn # perform operation
fnmadd.d f16, f4, f24, f9, rdn # perform operation
fnmadd.d f16, f4, f24, f9, rmm # perform operation
fnmadd.d f16, f4, f24, f9, rne # perform operation
fnmadd.d f16, f4, f24, f9, rtz # perform operation
fnmadd.d f16, f4, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f4, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x11, 0x7a3eda2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0xf6e0c79b # load x3 with 32 MSBs 0x00000000f6e0c79b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6e0c79b
sw x3, 0(x2) # store x3 (0xf6e0c79b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f6e0c79b from memory into f26
fnmadd.d f11, f16, f12, f26, dyn # perform operation
fnmadd.d f11, f16, f12, f26, rdn # perform operation
fnmadd.d f11, f16, f12, f26, rmm # perform operation
fnmadd.d f11, f16, f12, f26, rne # perform operation
fnmadd.d f11, f16, f12, f26, rtz # perform operation
fnmadd.d f11, f16, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x8, 0x743a4465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0xf448d18d # load x3 with 32 MSBs 0x00000000f448d18d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f448d18d
sw x3, 0(x2) # store x3 (0xf448d18d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f448d18d from memory into f23
fnmadd.d f8, f29, f18, f23, dyn # perform operation
fnmadd.d f8, f29, f18, f23, rdn # perform operation
fnmadd.d f8, f29, f18, f23, rmm # perform operation
fnmadd.d f8, f29, f18, f23, rne # perform operation
fnmadd.d f8, f29, f18, f23, rtz # perform operation
fnmadd.d f8, f29, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f29, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f29, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f29, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f29, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f29, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x20, 0xfdff0d67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x6b946899 # load x3 with 32 MSBs 0x000000006b946899
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b946899
sw x3, 0(x2) # store x3 (0x6b946899) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006b946899 from memory into f25
fnmadd.d f20, f5, f10, f25, dyn # perform operation
fnmadd.d f20, f5, f10, f25, rdn # perform operation
fnmadd.d f20, f5, f10, f25, rmm # perform operation
fnmadd.d f20, f5, f10, f25, rne # perform operation
fnmadd.d f20, f5, f10, f25, rtz # perform operation
fnmadd.d f20, f5, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f5, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f5, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f5, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f5, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f5, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x9, 0xda9645de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x5be89bcb # load x3 with 32 MSBs 0x000000005be89bcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005be89bcb
sw x3, 0(x2) # store x3 (0x5be89bcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000005be89bcb from memory into f28
fnmadd.d f9, f18, f7, f28, dyn # perform operation
fnmadd.d f9, f18, f7, f28, rdn # perform operation
fnmadd.d f9, f18, f7, f28, rmm # perform operation
fnmadd.d f9, f18, f7, f28, rne # perform operation
fnmadd.d f9, f18, f7, f28, rtz # perform operation
fnmadd.d f9, f18, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f18, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f18, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x28, 0x30f58f16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x6a018abc # load x3 with 32 MSBs 0x000000006a018abc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a018abc
sw x3, 0(x2) # store x3 (0x6a018abc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006a018abc from memory into f5
fnmadd.d f28, f7, f1, f5, dyn # perform operation
fnmadd.d f28, f7, f1, f5, rdn # perform operation
fnmadd.d f28, f7, f1, f5, rmm # perform operation
fnmadd.d f28, f7, f1, f5, rne # perform operation
fnmadd.d f28, f7, f1, f5, rtz # perform operation
fnmadd.d f28, f7, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x30, 0xf513752d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0x8c218768 # load x3 with 32 MSBs 0x000000008c218768
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c218768
sw x3, 0(x2) # store x3 (0x8c218768) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008c218768 from memory into f12
fnmadd.d f30, f13, f4, f12, dyn # perform operation
fnmadd.d f30, f13, f4, f12, rdn # perform operation
fnmadd.d f30, f13, f4, f12, rmm # perform operation
fnmadd.d f30, f13, f4, f12, rne # perform operation
fnmadd.d f30, f13, f4, f12, rtz # perform operation
fnmadd.d f30, f13, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f13, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x23, 0x4430ed7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x5d60d22b # load x3 with 32 MSBs 0x000000005d60d22b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d60d22b
sw x3, 0(x2) # store x3 (0x5d60d22b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000005d60d22b from memory into f28
fnmadd.d f23, f16, f3, f28, dyn # perform operation
fnmadd.d f23, f16, f3, f28, rdn # perform operation
fnmadd.d f23, f16, f3, f28, rmm # perform operation
fnmadd.d f23, f16, f3, f28, rne # perform operation
fnmadd.d f23, f16, f3, f28, rtz # perform operation
fnmadd.d f23, f16, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f16, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x26, 0x649fbfda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x9907dcdb # load x3 with 32 MSBs 0x000000009907dcdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009907dcdb
sw x3, 0(x2) # store x3 (0x9907dcdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009907dcdb from memory into f9
fnmadd.d f26, f10, f13, f9, dyn # perform operation
fnmadd.d f26, f10, f13, f9, rdn # perform operation
fnmadd.d f26, f10, f13, f9, rmm # perform operation
fnmadd.d f26, f10, f13, f9, rne # perform operation
fnmadd.d f26, f10, f13, f9, rtz # perform operation
fnmadd.d f26, f10, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f10, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x15, 0x889e33de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x74e6fd43 # load x3 with 32 MSBs 0x0000000074e6fd43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074e6fd43
sw x3, 0(x2) # store x3 (0x74e6fd43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000074e6fd43 from memory into f14
fnmadd.d f15, f21, f9, f14, dyn # perform operation
fnmadd.d f15, f21, f9, f14, rdn # perform operation
fnmadd.d f15, f21, f9, f14, rmm # perform operation
fnmadd.d f15, f21, f9, f14, rne # perform operation
fnmadd.d f15, f21, f9, f14, rtz # perform operation
fnmadd.d f15, f21, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f21, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f21, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f21, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f21, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f21, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x3, 0x684fc422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x34dec9ca # load x3 with 32 MSBs 0x0000000034dec9ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034dec9ca
sw x3, 0(x2) # store x3 (0x34dec9ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000034dec9ca from memory into f20
fnmadd.d f3, f29, f22, f20, dyn # perform operation
fnmadd.d f3, f29, f22, f20, rdn # perform operation
fnmadd.d f3, f29, f22, f20, rmm # perform operation
fnmadd.d f3, f29, f22, f20, rne # perform operation
fnmadd.d f3, f29, f22, f20, rtz # perform operation
fnmadd.d f3, f29, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f29, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x17, 0x06307ea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xf7c17a62 # load x3 with 32 MSBs 0x00000000f7c17a62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7c17a62
sw x3, 0(x2) # store x3 (0xf7c17a62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000f7c17a62 from memory into f22
fnmadd.d f17, f6, f2, f22, dyn # perform operation
fnmadd.d f17, f6, f2, f22, rdn # perform operation
fnmadd.d f17, f6, f2, f22, rmm # perform operation
fnmadd.d f17, f6, f2, f22, rne # perform operation
fnmadd.d f17, f6, f2, f22, rtz # perform operation
fnmadd.d f17, f6, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x6, 0x687d5c5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xf2ab376e # load x3 with 32 MSBs 0x00000000f2ab376e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2ab376e
sw x3, 0(x2) # store x3 (0xf2ab376e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f2ab376e from memory into f1
fnmadd.d f6, f13, f28, f1, dyn # perform operation
fnmadd.d f6, f13, f28, f1, rdn # perform operation
fnmadd.d f6, f13, f28, f1, rmm # perform operation
fnmadd.d f6, f13, f28, f1, rne # perform operation
fnmadd.d f6, f13, f28, f1, rtz # perform operation
fnmadd.d f6, f13, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f13, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f13, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x24, 0xcad46d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xb4e060c0 # load x3 with 32 MSBs 0x00000000b4e060c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4e060c0
sw x3, 0(x2) # store x3 (0xb4e060c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b4e060c0 from memory into f18
fnmadd.d f24, f6, f19, f18, dyn # perform operation
fnmadd.d f24, f6, f19, f18, rdn # perform operation
fnmadd.d f24, f6, f19, f18, rmm # perform operation
fnmadd.d f24, f6, f19, f18, rne # perform operation
fnmadd.d f24, f6, f19, f18, rtz # perform operation
fnmadd.d f24, f6, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f6, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x21, 0x0d12b016 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x4800dd09 # load x3 with 32 MSBs 0x000000004800dd09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004800dd09
sw x3, 0(x2) # store x3 (0x4800dd09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004800dd09 from memory into f27
fnmadd.d f21, f1, f12, f27, dyn # perform operation
fnmadd.d f21, f1, f12, f27, rdn # perform operation
fnmadd.d f21, f1, f12, f27, rmm # perform operation
fnmadd.d f21, f1, f12, f27, rne # perform operation
fnmadd.d f21, f1, f12, f27, rtz # perform operation
fnmadd.d f21, f1, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f1, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x30, 0x456124c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x375a3025 # load x3 with 32 MSBs 0x00000000375a3025
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000375a3025
sw x3, 0(x2) # store x3 (0x375a3025) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000375a3025 from memory into f13
fnmadd.d f30, f28, f20, f13, dyn # perform operation
fnmadd.d f30, f28, f20, f13, rdn # perform operation
fnmadd.d f30, f28, f20, f13, rmm # perform operation
fnmadd.d f30, f28, f20, f13, rne # perform operation
fnmadd.d f30, f28, f20, f13, rtz # perform operation
fnmadd.d f30, f28, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f28, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x24, 0x9c27c1c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x15de8b37 # load x3 with 32 MSBs 0x0000000015de8b37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015de8b37
sw x3, 0(x2) # store x3 (0x15de8b37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000015de8b37 from memory into f8
fnmadd.d f24, f9, f22, f8, dyn # perform operation
fnmadd.d f24, f9, f22, f8, rdn # perform operation
fnmadd.d f24, f9, f22, f8, rmm # perform operation
fnmadd.d f24, f9, f22, f8, rne # perform operation
fnmadd.d f24, f9, f22, f8, rtz # perform operation
fnmadd.d f24, f9, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f9, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x28, 0x87ef2733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0x154d0308 # load x3 with 32 MSBs 0x00000000154d0308
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000154d0308
sw x3, 0(x2) # store x3 (0x154d0308) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000154d0308 from memory into f19
fnmadd.d f28, f29, f9, f19, dyn # perform operation
fnmadd.d f28, f29, f9, f19, rdn # perform operation
fnmadd.d f28, f29, f9, f19, rmm # perform operation
fnmadd.d f28, f29, f9, f19, rne # perform operation
fnmadd.d f28, f29, f9, f19, rtz # perform operation
fnmadd.d f28, f29, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0x47fb310a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xc83d2257 # load x3 with 32 MSBs 0x00000000c83d2257
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c83d2257
sw x3, 0(x2) # store x3 (0xc83d2257) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c83d2257 from memory into f23
fnmadd.d f1, f12, f10, f23, dyn # perform operation
fnmadd.d f1, f12, f10, f23, rdn # perform operation
fnmadd.d f1, f12, f10, f23, rmm # perform operation
fnmadd.d f1, f12, f10, f23, rne # perform operation
fnmadd.d f1, f12, f10, f23, rtz # perform operation
fnmadd.d f1, f12, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f12, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x19, 0xb02e4a1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0xddf3c7fe # load x3 with 32 MSBs 0x00000000ddf3c7fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddf3c7fe
sw x3, 0(x2) # store x3 (0xddf3c7fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ddf3c7fe from memory into f3
fnmadd.d f19, f30, f8, f3, dyn # perform operation
fnmadd.d f19, f30, f8, f3, rdn # perform operation
fnmadd.d f19, f30, f8, f3, rmm # perform operation
fnmadd.d f19, f30, f8, f3, rne # perform operation
fnmadd.d f19, f30, f8, f3, rtz # perform operation
fnmadd.d f19, f30, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f30, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x17, 0xc3013924 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x4ae99474 # load x3 with 32 MSBs 0x000000004ae99474
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ae99474
sw x3, 0(x2) # store x3 (0x4ae99474) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004ae99474 from memory into f29
fnmadd.d f17, f12, f3, f29, dyn # perform operation
fnmadd.d f17, f12, f3, f29, rdn # perform operation
fnmadd.d f17, f12, f3, f29, rmm # perform operation
fnmadd.d f17, f12, f3, f29, rne # perform operation
fnmadd.d f17, f12, f3, f29, rtz # perform operation
fnmadd.d f17, f12, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f12, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f12, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f12, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f12, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f12, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x28, 0x5efd670e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0xe9a27416 # load x3 with 32 MSBs 0x00000000e9a27416
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9a27416
sw x3, 0(x2) # store x3 (0xe9a27416) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e9a27416 from memory into f22
fnmadd.d f28, f20, f12, f22, dyn # perform operation
fnmadd.d f28, f20, f12, f22, rdn # perform operation
fnmadd.d f28, f20, f12, f22, rmm # perform operation
fnmadd.d f28, f20, f12, f22, rne # perform operation
fnmadd.d f28, f20, f12, f22, rtz # perform operation
fnmadd.d f28, f20, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f20, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x11, 0x922a62a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0x66811fb8 # load x3 with 32 MSBs 0x0000000066811fb8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066811fb8
sw x3, 0(x2) # store x3 (0x66811fb8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000066811fb8 from memory into f21
fnmadd.d f11, f13, f10, f21, dyn # perform operation
fnmadd.d f11, f13, f10, f21, rdn # perform operation
fnmadd.d f11, f13, f10, f21, rmm # perform operation
fnmadd.d f11, f13, f10, f21, rne # perform operation
fnmadd.d f11, f13, f10, f21, rtz # perform operation
fnmadd.d f11, f13, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f13, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f13, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f13, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f13, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f13, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x6, 0xf7c5015b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x66a91b73 # load x3 with 32 MSBs 0x0000000066a91b73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066a91b73
sw x3, 0(x2) # store x3 (0x66a91b73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000066a91b73 from memory into f23
fnmadd.d f6, f8, f26, f23, dyn # perform operation
fnmadd.d f6, f8, f26, f23, rdn # perform operation
fnmadd.d f6, f8, f26, f23, rmm # perform operation
fnmadd.d f6, f8, f26, f23, rne # perform operation
fnmadd.d f6, f8, f26, f23, rtz # perform operation
fnmadd.d f6, f8, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x28, 0x598c876a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x8e5dfa60 # load x3 with 32 MSBs 0x000000008e5dfa60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e5dfa60
sw x3, 0(x2) # store x3 (0x8e5dfa60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008e5dfa60 from memory into f1
fnmadd.d f28, f31, f17, f1, dyn # perform operation
fnmadd.d f28, f31, f17, f1, rdn # perform operation
fnmadd.d f28, f31, f17, f1, rmm # perform operation
fnmadd.d f28, f31, f17, f1, rne # perform operation
fnmadd.d f28, f31, f17, f1, rtz # perform operation
fnmadd.d f28, f31, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f31, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x4, 0x649eb1af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x17f68a56 # load x3 with 32 MSBs 0x0000000017f68a56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017f68a56
sw x3, 0(x2) # store x3 (0x17f68a56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000017f68a56 from memory into f1
fnmadd.d f4, f13, f30, f1, dyn # perform operation
fnmadd.d f4, f13, f30, f1, rdn # perform operation
fnmadd.d f4, f13, f30, f1, rmm # perform operation
fnmadd.d f4, f13, f30, f1, rne # perform operation
fnmadd.d f4, f13, f30, f1, rtz # perform operation
fnmadd.d f4, f13, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f13, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x21, 0x63a6a5e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0xfcb42b6f # load x3 with 32 MSBs 0x00000000fcb42b6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcb42b6f
sw x3, 0(x2) # store x3 (0xfcb42b6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fcb42b6f from memory into f10
fnmadd.d f21, f25, f30, f10, dyn # perform operation
fnmadd.d f21, f25, f30, f10, rdn # perform operation
fnmadd.d f21, f25, f30, f10, rmm # perform operation
fnmadd.d f21, f25, f30, f10, rne # perform operation
fnmadd.d f21, f25, f30, f10, rtz # perform operation
fnmadd.d f21, f25, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f25, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f25, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f25, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f25, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f25, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x2, 0x82db41d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x41dedd28 # load x3 with 32 MSBs 0x0000000041dedd28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041dedd28
sw x3, 0(x2) # store x3 (0x41dedd28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000041dedd28 from memory into f19
fnmadd.d f2, f25, f10, f19, dyn # perform operation
fnmadd.d f2, f25, f10, f19, rdn # perform operation
fnmadd.d f2, f25, f10, f19, rmm # perform operation
fnmadd.d f2, f25, f10, f19, rne # perform operation
fnmadd.d f2, f25, f10, f19, rtz # perform operation
fnmadd.d f2, f25, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f25, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f25, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x6, 0x58631535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x0f1c6712 # load x3 with 32 MSBs 0x000000000f1c6712
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f1c6712
sw x3, 0(x2) # store x3 (0x0f1c6712) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000f1c6712 from memory into f16
fnmadd.d f6, f18, f26, f16, dyn # perform operation
fnmadd.d f6, f18, f26, f16, rdn # perform operation
fnmadd.d f6, f18, f26, f16, rmm # perform operation
fnmadd.d f6, f18, f26, f16, rne # perform operation
fnmadd.d f6, f18, f26, f16, rtz # perform operation
fnmadd.d f6, f18, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f18, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f18, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x6, 0xd507ddd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0xe20dca99 # load x3 with 32 MSBs 0x00000000e20dca99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e20dca99
sw x3, 0(x2) # store x3 (0xe20dca99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e20dca99 from memory into f3
fnmadd.d f6, f23, f7, f3, dyn # perform operation
fnmadd.d f6, f23, f7, f3, rdn # perform operation
fnmadd.d f6, f23, f7, f3, rmm # perform operation
fnmadd.d f6, f23, f7, f3, rne # perform operation
fnmadd.d f6, f23, f7, f3, rtz # perform operation
fnmadd.d f6, f23, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f23, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f23, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x3, 0x74f3a51d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0xdef7d381 # load x3 with 32 MSBs 0x00000000def7d381
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000def7d381
sw x3, 0(x2) # store x3 (0xdef7d381) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000def7d381 from memory into f22
fnmadd.d f3, f15, f10, f22, dyn # perform operation
fnmadd.d f3, f15, f10, f22, rdn # perform operation
fnmadd.d f3, f15, f10, f22, rmm # perform operation
fnmadd.d f3, f15, f10, f22, rne # perform operation
fnmadd.d f3, f15, f10, f22, rtz # perform operation
fnmadd.d f3, f15, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f15, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f15, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f15, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f15, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f15, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x31, 0x89a014f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x814d753f # load x3 with 32 MSBs 0x00000000814d753f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000814d753f
sw x3, 0(x2) # store x3 (0x814d753f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000814d753f from memory into f20
fnmadd.d f31, f2, f18, f20, dyn # perform operation
fnmadd.d f31, f2, f18, f20, rdn # perform operation
fnmadd.d f31, f2, f18, f20, rmm # perform operation
fnmadd.d f31, f2, f18, f20, rne # perform operation
fnmadd.d f31, f2, f18, f20, rtz # perform operation
fnmadd.d f31, f2, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f2, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f2, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f2, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f2, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f2, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x5, 0x90b94c70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x1cd8f724 # load x3 with 32 MSBs 0x000000001cd8f724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cd8f724
sw x3, 0(x2) # store x3 (0x1cd8f724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001cd8f724 from memory into f1
fnmadd.d f5, f3, f30, f1, dyn # perform operation
fnmadd.d f5, f3, f30, f1, rdn # perform operation
fnmadd.d f5, f3, f30, f1, rmm # perform operation
fnmadd.d f5, f3, f30, f1, rne # perform operation
fnmadd.d f5, f3, f30, f1, rtz # perform operation
fnmadd.d f5, f3, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f3, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f3, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x4, 0xbc443164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x0155e4a7 # load x3 with 32 MSBs 0x000000000155e4a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000155e4a7
sw x3, 0(x2) # store x3 (0x0155e4a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000155e4a7 from memory into f18
fnmadd.d f4, f17, f20, f18, dyn # perform operation
fnmadd.d f4, f17, f20, f18, rdn # perform operation
fnmadd.d f4, f17, f20, f18, rmm # perform operation
fnmadd.d f4, f17, f20, f18, rne # perform operation
fnmadd.d f4, f17, f20, f18, rtz # perform operation
fnmadd.d f4, f17, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f17, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f17, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x16, 0x141cca1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x5dc0a880 # load x3 with 32 MSBs 0x000000005dc0a880
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dc0a880
sw x3, 0(x2) # store x3 (0x5dc0a880) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005dc0a880 from memory into f18
fnmadd.d f16, f31, f9, f18, dyn # perform operation
fnmadd.d f16, f31, f9, f18, rdn # perform operation
fnmadd.d f16, f31, f9, f18, rmm # perform operation
fnmadd.d f16, f31, f9, f18, rne # perform operation
fnmadd.d f16, f31, f9, f18, rtz # perform operation
fnmadd.d f16, f31, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x28, 0x16845904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xb43a6385 # load x3 with 32 MSBs 0x00000000b43a6385
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b43a6385
sw x3, 0(x2) # store x3 (0xb43a6385) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b43a6385 from memory into f31
fnmadd.d f28, f11, f6, f31, dyn # perform operation
fnmadd.d f28, f11, f6, f31, rdn # perform operation
fnmadd.d f28, f11, f6, f31, rmm # perform operation
fnmadd.d f28, f11, f6, f31, rne # perform operation
fnmadd.d f28, f11, f6, f31, rtz # perform operation
fnmadd.d f28, f11, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f11, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f11, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f11, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f11, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f11, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x18, 0x93cd2d98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x3cdbc059 # load x3 with 32 MSBs 0x000000003cdbc059
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cdbc059
sw x3, 0(x2) # store x3 (0x3cdbc059) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003cdbc059 from memory into f8
fnmadd.d f18, f10, f24, f8, dyn # perform operation
fnmadd.d f18, f10, f24, f8, rdn # perform operation
fnmadd.d f18, f10, f24, f8, rmm # perform operation
fnmadd.d f18, f10, f24, f8, rne # perform operation
fnmadd.d f18, f10, f24, f8, rtz # perform operation
fnmadd.d f18, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f10, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x31, 0x91b26542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x2c6dcecb # load x3 with 32 MSBs 0x000000002c6dcecb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c6dcecb
sw x3, 0(x2) # store x3 (0x2c6dcecb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002c6dcecb from memory into f8
fnmadd.d f31, f18, f28, f8, dyn # perform operation
fnmadd.d f31, f18, f28, f8, rdn # perform operation
fnmadd.d f31, f18, f28, f8, rmm # perform operation
fnmadd.d f31, f18, f28, f8, rne # perform operation
fnmadd.d f31, f18, f28, f8, rtz # perform operation
fnmadd.d f31, f18, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f18, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x29, 0xab891fb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xe69f79c6 # load x3 with 32 MSBs 0x00000000e69f79c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e69f79c6
sw x3, 0(x2) # store x3 (0xe69f79c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e69f79c6 from memory into f18
fnmadd.d f29, f20, f12, f18, dyn # perform operation
fnmadd.d f29, f20, f12, f18, rdn # perform operation
fnmadd.d f29, f20, f12, f18, rmm # perform operation
fnmadd.d f29, f20, f12, f18, rne # perform operation
fnmadd.d f29, f20, f12, f18, rtz # perform operation
fnmadd.d f29, f20, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f20, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f20, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x12, 0xbd6c3549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x74fa1dd9 # load x3 with 32 MSBs 0x0000000074fa1dd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074fa1dd9
sw x3, 0(x2) # store x3 (0x74fa1dd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000074fa1dd9 from memory into f3
fnmadd.d f12, f20, f16, f3, dyn # perform operation
fnmadd.d f12, f20, f16, f3, rdn # perform operation
fnmadd.d f12, f20, f16, f3, rmm # perform operation
fnmadd.d f12, f20, f16, f3, rne # perform operation
fnmadd.d f12, f20, f16, f3, rtz # perform operation
fnmadd.d f12, f20, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f20, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x7, 0xf01a5623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x31519005 # load x3 with 32 MSBs 0x0000000031519005
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031519005
sw x3, 0(x2) # store x3 (0x31519005) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000031519005 from memory into f21
fnmadd.d f7, f27, f24, f21, dyn # perform operation
fnmadd.d f7, f27, f24, f21, rdn # perform operation
fnmadd.d f7, f27, f24, f21, rmm # perform operation
fnmadd.d f7, f27, f24, f21, rne # perform operation
fnmadd.d f7, f27, f24, f21, rtz # perform operation
fnmadd.d f7, f27, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f27, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f27, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f27, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f27, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f27, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x5, 0xe93549df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xa14d42e3 # load x3 with 32 MSBs 0x00000000a14d42e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a14d42e3
sw x3, 0(x2) # store x3 (0xa14d42e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a14d42e3 from memory into f4
fnmadd.d f5, f15, f25, f4, dyn # perform operation
fnmadd.d f5, f15, f25, f4, rdn # perform operation
fnmadd.d f5, f15, f25, f4, rmm # perform operation
fnmadd.d f5, f15, f25, f4, rne # perform operation
fnmadd.d f5, f15, f25, f4, rtz # perform operation
fnmadd.d f5, f15, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f15, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x21, 0x5e35ac43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x8b9ffa64 # load x3 with 32 MSBs 0x000000008b9ffa64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b9ffa64
sw x3, 0(x2) # store x3 (0x8b9ffa64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008b9ffa64 from memory into f11
fnmadd.d f21, f3, f1, f11, dyn # perform operation
fnmadd.d f21, f3, f1, f11, rdn # perform operation
fnmadd.d f21, f3, f1, f11, rmm # perform operation
fnmadd.d f21, f3, f1, f11, rne # perform operation
fnmadd.d f21, f3, f1, f11, rtz # perform operation
fnmadd.d f21, f3, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f3, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x23, 0x33979c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
li x3, 0xb21553c3 # load x3 with 32 MSBs 0x00000000b21553c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b21553c3
sw x3, 0(x2) # store x3 (0xb21553c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b21553c3 from memory into f3
fnmadd.d f23, f31, f2, f3, dyn # perform operation
fnmadd.d f23, f31, f2, f3, rdn # perform operation
fnmadd.d f23, f31, f2, f3, rmm # perform operation
fnmadd.d f23, f31, f2, f3, rne # perform operation
fnmadd.d f23, f31, f2, f3, rtz # perform operation
fnmadd.d f23, f31, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f31, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f31, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f31, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f31, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f31, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x17, 0x9c83d9d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0xe4922438 # load x3 with 32 MSBs 0x00000000e4922438
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4922438
sw x3, 0(x2) # store x3 (0xe4922438) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e4922438 from memory into f30
fnmadd.d f17, f19, f9, f30, dyn # perform operation
fnmadd.d f17, f19, f9, f30, rdn # perform operation
fnmadd.d f17, f19, f9, f30, rmm # perform operation
fnmadd.d f17, f19, f9, f30, rne # perform operation
fnmadd.d f17, f19, f9, f30, rtz # perform operation
fnmadd.d f17, f19, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f19, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x4, 0x360e467f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
li x3, 0x63d458da # load x3 with 32 MSBs 0x0000000063d458da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063d458da
sw x3, 0(x2) # store x3 (0x63d458da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000063d458da from memory into f2
fnmadd.d f4, f12, f10, f2, dyn # perform operation
fnmadd.d f4, f12, f10, f2, rdn # perform operation
fnmadd.d f4, f12, f10, f2, rmm # perform operation
fnmadd.d f4, f12, f10, f2, rne # perform operation
fnmadd.d f4, f12, f10, f2, rtz # perform operation
fnmadd.d f4, f12, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f12, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x22, 0x1e9a284a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xe9b930d5 # load x3 with 32 MSBs 0x00000000e9b930d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9b930d5
sw x3, 0(x2) # store x3 (0xe9b930d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e9b930d5 from memory into f29
fnmadd.d f22, f25, f4, f29, dyn # perform operation
fnmadd.d f22, f25, f4, f29, rdn # perform operation
fnmadd.d f22, f25, f4, f29, rmm # perform operation
fnmadd.d f22, f25, f4, f29, rne # perform operation
fnmadd.d f22, f25, f4, f29, rtz # perform operation
fnmadd.d f22, f25, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f25, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f25, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f25, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f25, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f25, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x17, 0xea3f00b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x37a94bdb # load x3 with 32 MSBs 0x0000000037a94bdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037a94bdb
sw x3, 0(x2) # store x3 (0x37a94bdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000037a94bdb from memory into f13
fnmadd.d f17, f24, f20, f13, dyn # perform operation
fnmadd.d f17, f24, f20, f13, rdn # perform operation
fnmadd.d f17, f24, f20, f13, rmm # perform operation
fnmadd.d f17, f24, f20, f13, rne # perform operation
fnmadd.d f17, f24, f20, f13, rtz # perform operation
fnmadd.d f17, f24, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x3, 0x32d6f914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0xe4340b63 # load x3 with 32 MSBs 0x00000000e4340b63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4340b63
sw x3, 0(x2) # store x3 (0xe4340b63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e4340b63 from memory into f2
fnmadd.d f3, f28, f17, f2, dyn # perform operation
fnmadd.d f3, f28, f17, f2, rdn # perform operation
fnmadd.d f3, f28, f17, f2, rmm # perform operation
fnmadd.d f3, f28, f17, f2, rne # perform operation
fnmadd.d f3, f28, f17, f2, rtz # perform operation
fnmadd.d f3, f28, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x22, 0x3315b779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x0c1e98dc # load x3 with 32 MSBs 0x000000000c1e98dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c1e98dc
sw x3, 0(x2) # store x3 (0x0c1e98dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000c1e98dc from memory into f27
fnmadd.d f22, f12, f7, f27, dyn # perform operation
fnmadd.d f22, f12, f7, f27, rdn # perform operation
fnmadd.d f22, f12, f7, f27, rmm # perform operation
fnmadd.d f22, f12, f7, f27, rne # perform operation
fnmadd.d f22, f12, f7, f27, rtz # perform operation
fnmadd.d f22, f12, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f12, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f12, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f12, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f12, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f12, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x5, 0xd6c9b665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x8a2c97e4 # load x3 with 32 MSBs 0x000000008a2c97e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a2c97e4
sw x3, 0(x2) # store x3 (0x8a2c97e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008a2c97e4 from memory into f23
fnmadd.d f5, f8, f31, f23, dyn # perform operation
fnmadd.d f5, f8, f31, f23, rdn # perform operation
fnmadd.d f5, f8, f31, f23, rmm # perform operation
fnmadd.d f5, f8, f31, f23, rne # perform operation
fnmadd.d f5, f8, f31, f23, rtz # perform operation
fnmadd.d f5, f8, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f8, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f8, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x22, 0x314c9141 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0xb1f6a27c # load x3 with 32 MSBs 0x00000000b1f6a27c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1f6a27c
sw x3, 0(x2) # store x3 (0xb1f6a27c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b1f6a27c from memory into f12
fnmadd.d f22, f18, f25, f12, dyn # perform operation
fnmadd.d f22, f18, f25, f12, rdn # perform operation
fnmadd.d f22, f18, f25, f12, rmm # perform operation
fnmadd.d f22, f18, f25, f12, rne # perform operation
fnmadd.d f22, f18, f25, f12, rtz # perform operation
fnmadd.d f22, f18, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f18, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x11, 0x3a0870a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x7f55f5e3 # load x3 with 32 MSBs 0x000000007f55f5e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f55f5e3
sw x3, 0(x2) # store x3 (0x7f55f5e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000007f55f5e3 from memory into f9
fnmadd.d f11, f24, f26, f9, dyn # perform operation
fnmadd.d f11, f24, f26, f9, rdn # perform operation
fnmadd.d f11, f24, f26, f9, rmm # perform operation
fnmadd.d f11, f24, f26, f9, rne # perform operation
fnmadd.d f11, f24, f26, f9, rtz # perform operation
fnmadd.d f11, f24, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f24, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x20, 0x2582c74f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x97963273 # load x3 with 32 MSBs 0x0000000097963273
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097963273
sw x3, 0(x2) # store x3 (0x97963273) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000097963273 from memory into f10
fnmadd.d f20, f28, f5, f10, dyn # perform operation
fnmadd.d f20, f28, f5, f10, rdn # perform operation
fnmadd.d f20, f28, f5, f10, rmm # perform operation
fnmadd.d f20, f28, f5, f10, rne # perform operation
fnmadd.d f20, f28, f5, f10, rtz # perform operation
fnmadd.d f20, f28, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f28, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f28, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f28, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f28, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f28, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x20, 0x801b3573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x4bf5d190 # load x3 with 32 MSBs 0x000000004bf5d190
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bf5d190
sw x3, 0(x2) # store x3 (0x4bf5d190) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004bf5d190 from memory into f19
fnmadd.d f20, f27, f9, f19, dyn # perform operation
fnmadd.d f20, f27, f9, f19, rdn # perform operation
fnmadd.d f20, f27, f9, f19, rmm # perform operation
fnmadd.d f20, f27, f9, f19, rne # perform operation
fnmadd.d f20, f27, f9, f19, rtz # perform operation
fnmadd.d f20, f27, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f27, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f27, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x20, 0xaf1e094d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xc0e91ccb # load x3 with 32 MSBs 0x00000000c0e91ccb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0e91ccb
sw x3, 0(x2) # store x3 (0xc0e91ccb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c0e91ccb from memory into f1
fnmadd.d f20, f21, f31, f1, dyn # perform operation
fnmadd.d f20, f21, f31, f1, rdn # perform operation
fnmadd.d f20, f21, f31, f1, rmm # perform operation
fnmadd.d f20, f21, f31, f1, rne # perform operation
fnmadd.d f20, f21, f31, f1, rtz # perform operation
fnmadd.d f20, f21, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f21, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f21, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f21, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f21, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f21, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x12, 0x0cec2130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x10520518 # load x3 with 32 MSBs 0x0000000010520518
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010520518
sw x3, 0(x2) # store x3 (0x10520518) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000010520518 from memory into f21
fnmadd.d f12, f18, f13, f21, dyn # perform operation
fnmadd.d f12, f18, f13, f21, rdn # perform operation
fnmadd.d f12, f18, f13, f21, rmm # perform operation
fnmadd.d f12, f18, f13, f21, rne # perform operation
fnmadd.d f12, f18, f13, f21, rtz # perform operation
fnmadd.d f12, f18, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x8, 0xd01cb91c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0xf53530b9 # load x3 with 32 MSBs 0x00000000f53530b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f53530b9
sw x3, 0(x2) # store x3 (0xf53530b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000f53530b9 from memory into f7
fnmadd.d f8, f2, f15, f7, dyn # perform operation
fnmadd.d f8, f2, f15, f7, rdn # perform operation
fnmadd.d f8, f2, f15, f7, rmm # perform operation
fnmadd.d f8, f2, f15, f7, rne # perform operation
fnmadd.d f8, f2, f15, f7, rtz # perform operation
fnmadd.d f8, f2, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f2, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x27, 0x937be210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x36d9ad50 # load x3 with 32 MSBs 0x0000000036d9ad50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000036d9ad50
sw x3, 0(x2) # store x3 (0x36d9ad50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000036d9ad50 from memory into f11
fnmadd.d f27, f17, f18, f11, dyn # perform operation
fnmadd.d f27, f17, f18, f11, rdn # perform operation
fnmadd.d f27, f17, f18, f11, rmm # perform operation
fnmadd.d f27, f17, f18, f11, rne # perform operation
fnmadd.d f27, f17, f18, f11, rtz # perform operation
fnmadd.d f27, f17, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f17, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f17, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f17, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f17, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f17, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x22, 0xbfc09887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0xe29911f9 # load x3 with 32 MSBs 0x00000000e29911f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e29911f9
sw x3, 0(x2) # store x3 (0xe29911f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e29911f9 from memory into f4
fnmadd.d f22, f7, f18, f4, dyn # perform operation
fnmadd.d f22, f7, f18, f4, rdn # perform operation
fnmadd.d f22, f7, f18, f4, rmm # perform operation
fnmadd.d f22, f7, f18, f4, rne # perform operation
fnmadd.d f22, f7, f18, f4, rtz # perform operation
fnmadd.d f22, f7, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x16, 0xcb53a303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0xafe7dd6c # load x3 with 32 MSBs 0x00000000afe7dd6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afe7dd6c
sw x3, 0(x2) # store x3 (0xafe7dd6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000afe7dd6c from memory into f22
fnmadd.d f16, f31, f25, f22, dyn # perform operation
fnmadd.d f16, f31, f25, f22, rdn # perform operation
fnmadd.d f16, f31, f25, f22, rmm # perform operation
fnmadd.d f16, f31, f25, f22, rne # perform operation
fnmadd.d f16, f31, f25, f22, rtz # perform operation
fnmadd.d f16, f31, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x23, 0x9c6ff565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x8cf0815f # load x3 with 32 MSBs 0x000000008cf0815f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008cf0815f
sw x3, 0(x2) # store x3 (0x8cf0815f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000008cf0815f from memory into f1
fnmadd.d f23, f29, f3, f1, dyn # perform operation
fnmadd.d f23, f29, f3, f1, rdn # perform operation
fnmadd.d f23, f29, f3, f1, rmm # perform operation
fnmadd.d f23, f29, f3, f1, rne # perform operation
fnmadd.d f23, f29, f3, f1, rtz # perform operation
fnmadd.d f23, f29, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f29, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f29, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x6, 0xe2d9f8d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x2565a1b0 # load x3 with 32 MSBs 0x000000002565a1b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002565a1b0
sw x3, 0(x2) # store x3 (0x2565a1b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002565a1b0 from memory into f26
fnmadd.d f6, f29, f17, f26, dyn # perform operation
fnmadd.d f6, f29, f17, f26, rdn # perform operation
fnmadd.d f6, f29, f17, f26, rmm # perform operation
fnmadd.d f6, f29, f17, f26, rne # perform operation
fnmadd.d f6, f29, f17, f26, rtz # perform operation
fnmadd.d f6, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x4, 0x2c626065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x772b6983 # load x3 with 32 MSBs 0x00000000772b6983
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000772b6983
sw x3, 0(x2) # store x3 (0x772b6983) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000772b6983 from memory into f26
fnmadd.d f4, f5, f3, f26, dyn # perform operation
fnmadd.d f4, f5, f3, f26, rdn # perform operation
fnmadd.d f4, f5, f3, f26, rmm # perform operation
fnmadd.d f4, f5, f3, f26, rne # perform operation
fnmadd.d f4, f5, f3, f26, rtz # perform operation
fnmadd.d f4, f5, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f5, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x12, 0x48d78628 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x5247c65f # load x3 with 32 MSBs 0x000000005247c65f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005247c65f
sw x3, 0(x2) # store x3 (0x5247c65f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000005247c65f from memory into f31
fnmadd.d f12, f7, f15, f31, dyn # perform operation
fnmadd.d f12, f7, f15, f31, rdn # perform operation
fnmadd.d f12, f7, f15, f31, rmm # perform operation
fnmadd.d f12, f7, f15, f31, rne # perform operation
fnmadd.d f12, f7, f15, f31, rtz # perform operation
fnmadd.d f12, f7, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x19, 0xf3c6967a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0xe699e3a6 # load x3 with 32 MSBs 0x00000000e699e3a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e699e3a6
sw x3, 0(x2) # store x3 (0xe699e3a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e699e3a6 from memory into f28
fnmadd.d f19, f9, f4, f28, dyn # perform operation
fnmadd.d f19, f9, f4, f28, rdn # perform operation
fnmadd.d f19, f9, f4, f28, rmm # perform operation
fnmadd.d f19, f9, f4, f28, rne # perform operation
fnmadd.d f19, f9, f4, f28, rtz # perform operation
fnmadd.d f19, f9, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f9, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f9, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f9, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f9, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f9, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x29, 0x6b019d45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xc6f66eab # load x3 with 32 MSBs 0x00000000c6f66eab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6f66eab
sw x3, 0(x2) # store x3 (0xc6f66eab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c6f66eab from memory into f17
fnmadd.d f29, f25, f20, f17, dyn # perform operation
fnmadd.d f29, f25, f20, f17, rdn # perform operation
fnmadd.d f29, f25, f20, f17, rmm # perform operation
fnmadd.d f29, f25, f20, f17, rne # perform operation
fnmadd.d f29, f25, f20, f17, rtz # perform operation
fnmadd.d f29, f25, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f25, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f25, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x31, 0x43c75c76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xd7376d33 # load x3 with 32 MSBs 0x00000000d7376d33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7376d33
sw x3, 0(x2) # store x3 (0xd7376d33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d7376d33 from memory into f24
fnmadd.d f31, f10, f16, f24, dyn # perform operation
fnmadd.d f31, f10, f16, f24, rdn # perform operation
fnmadd.d f31, f10, f16, f24, rmm # perform operation
fnmadd.d f31, f10, f16, f24, rne # perform operation
fnmadd.d f31, f10, f16, f24, rtz # perform operation
fnmadd.d f31, f10, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f10, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f10, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f10, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f10, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f10, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x14, 0x661a48ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x766fbd77 # load x3 with 32 MSBs 0x00000000766fbd77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000766fbd77
sw x3, 0(x2) # store x3 (0x766fbd77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000766fbd77 from memory into f7
fnmadd.d f14, f9, f30, f7, dyn # perform operation
fnmadd.d f14, f9, f30, f7, rdn # perform operation
fnmadd.d f14, f9, f30, f7, rmm # perform operation
fnmadd.d f14, f9, f30, f7, rne # perform operation
fnmadd.d f14, f9, f30, f7, rtz # perform operation
fnmadd.d f14, f9, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f9, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f9, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x12, 0xbb0dfb0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x2a90663f # load x3 with 32 MSBs 0x000000002a90663f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a90663f
sw x3, 0(x2) # store x3 (0x2a90663f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002a90663f from memory into f31
fnmadd.d f12, f10, f18, f31, dyn # perform operation
fnmadd.d f12, f10, f18, f31, rdn # perform operation
fnmadd.d f12, f10, f18, f31, rmm # perform operation
fnmadd.d f12, f10, f18, f31, rne # perform operation
fnmadd.d f12, f10, f18, f31, rtz # perform operation
fnmadd.d f12, f10, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f10, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f10, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x2, 0x15ae80f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0xf5b622e3 # load x3 with 32 MSBs 0x00000000f5b622e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5b622e3
sw x3, 0(x2) # store x3 (0xf5b622e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f5b622e3 from memory into f1
fnmadd.d f2, f4, f19, f1, dyn # perform operation
fnmadd.d f2, f4, f19, f1, rdn # perform operation
fnmadd.d f2, f4, f19, f1, rmm # perform operation
fnmadd.d f2, f4, f19, f1, rne # perform operation
fnmadd.d f2, f4, f19, f1, rtz # perform operation
fnmadd.d f2, f4, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f4, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x9, 0x6cb92ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x33a75c62 # load x3 with 32 MSBs 0x0000000033a75c62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033a75c62
sw x3, 0(x2) # store x3 (0x33a75c62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000033a75c62 from memory into f17
fnmadd.d f9, f28, f26, f17, dyn # perform operation
fnmadd.d f9, f28, f26, f17, rdn # perform operation
fnmadd.d f9, f28, f26, f17, rmm # perform operation
fnmadd.d f9, f28, f26, f17, rne # perform operation
fnmadd.d f9, f28, f26, f17, rtz # perform operation
fnmadd.d f9, f28, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f28, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f28, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x21, 0xd04f4a9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x8580e61f # load x3 with 32 MSBs 0x000000008580e61f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008580e61f
sw x3, 0(x2) # store x3 (0x8580e61f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008580e61f from memory into f22
fnmadd.d f21, f5, f26, f22, dyn # perform operation
fnmadd.d f21, f5, f26, f22, rdn # perform operation
fnmadd.d f21, f5, f26, f22, rmm # perform operation
fnmadd.d f21, f5, f26, f22, rne # perform operation
fnmadd.d f21, f5, f26, f22, rtz # perform operation
fnmadd.d f21, f5, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f5, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x28, 0x1bd6ab9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0xc91ab21e # load x3 with 32 MSBs 0x00000000c91ab21e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c91ab21e
sw x3, 0(x2) # store x3 (0xc91ab21e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c91ab21e from memory into f4
fnmadd.d f28, f3, f20, f4, dyn # perform operation
fnmadd.d f28, f3, f20, f4, rdn # perform operation
fnmadd.d f28, f3, f20, f4, rmm # perform operation
fnmadd.d f28, f3, f20, f4, rne # perform operation
fnmadd.d f28, f3, f20, f4, rtz # perform operation
fnmadd.d f28, f3, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f3, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x12, 0xafd735f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x65fe8238 # load x3 with 32 MSBs 0x0000000065fe8238
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065fe8238
sw x3, 0(x2) # store x3 (0x65fe8238) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000065fe8238 from memory into f2
fnmadd.d f12, f14, f24, f2, dyn # perform operation
fnmadd.d f12, f14, f24, f2, rdn # perform operation
fnmadd.d f12, f14, f24, f2, rmm # perform operation
fnmadd.d f12, f14, f24, f2, rne # perform operation
fnmadd.d f12, f14, f24, f2, rtz # perform operation
fnmadd.d f12, f14, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f14, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f14, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x19, 0xeb770cb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xcd5acd6b # load x3 with 32 MSBs 0x00000000cd5acd6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd5acd6b
sw x3, 0(x2) # store x3 (0xcd5acd6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000cd5acd6b from memory into f24
fnmadd.d f19, f18, f27, f24, dyn # perform operation
fnmadd.d f19, f18, f27, f24, rdn # perform operation
fnmadd.d f19, f18, f27, f24, rmm # perform operation
fnmadd.d f19, f18, f27, f24, rne # perform operation
fnmadd.d f19, f18, f27, f24, rtz # perform operation
fnmadd.d f19, f18, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f18, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f18, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f18, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f18, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f18, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x28, 0x6207e89a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0xbb71ead0 # load x3 with 32 MSBs 0x00000000bb71ead0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb71ead0
sw x3, 0(x2) # store x3 (0xbb71ead0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000bb71ead0 from memory into f18
fnmadd.d f28, f10, f3, f18, dyn # perform operation
fnmadd.d f28, f10, f3, f18, rdn # perform operation
fnmadd.d f28, f10, f3, f18, rmm # perform operation
fnmadd.d f28, f10, f3, f18, rne # perform operation
fnmadd.d f28, f10, f3, f18, rtz # perform operation
fnmadd.d f28, f10, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x19, 0x9006680c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0xf5cecbae # load x3 with 32 MSBs 0x00000000f5cecbae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5cecbae
sw x3, 0(x2) # store x3 (0xf5cecbae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000f5cecbae from memory into f16
fnmadd.d f19, f15, f13, f16, dyn # perform operation
fnmadd.d f19, f15, f13, f16, rdn # perform operation
fnmadd.d f19, f15, f13, f16, rmm # perform operation
fnmadd.d f19, f15, f13, f16, rne # perform operation
fnmadd.d f19, f15, f13, f16, rtz # perform operation
fnmadd.d f19, f15, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f15, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f15, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f15, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f15, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f15, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x11, 0x7cba2d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x9c532ae1 # load x3 with 32 MSBs 0x000000009c532ae1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c532ae1
sw x3, 0(x2) # store x3 (0x9c532ae1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009c532ae1 from memory into f6
fnmadd.d f11, f28, f10, f6, dyn # perform operation
fnmadd.d f11, f28, f10, f6, rdn # perform operation
fnmadd.d f11, f28, f10, f6, rmm # perform operation
fnmadd.d f11, f28, f10, f6, rne # perform operation
fnmadd.d f11, f28, f10, f6, rtz # perform operation
fnmadd.d f11, f28, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f28, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f28, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x18, 0x03d99569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x6a04ef1a # load x3 with 32 MSBs 0x000000006a04ef1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a04ef1a
sw x3, 0(x2) # store x3 (0x6a04ef1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006a04ef1a from memory into f9
fnmadd.d f18, f21, f24, f9, dyn # perform operation
fnmadd.d f18, f21, f24, f9, rdn # perform operation
fnmadd.d f18, f21, f24, f9, rmm # perform operation
fnmadd.d f18, f21, f24, f9, rne # perform operation
fnmadd.d f18, f21, f24, f9, rtz # perform operation
fnmadd.d f18, f21, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f21, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x20, 0xc5644a0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0xef01b56f # load x3 with 32 MSBs 0x00000000ef01b56f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef01b56f
sw x3, 0(x2) # store x3 (0xef01b56f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ef01b56f from memory into f17
fnmadd.d f20, f25, f29, f17, dyn # perform operation
fnmadd.d f20, f25, f29, f17, rdn # perform operation
fnmadd.d f20, f25, f29, f17, rmm # perform operation
fnmadd.d f20, f25, f29, f17, rne # perform operation
fnmadd.d f20, f25, f29, f17, rtz # perform operation
fnmadd.d f20, f25, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f25, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f25, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f25, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f25, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f25, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x7, 0x9f921d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0xd3febb52 # load x3 with 32 MSBs 0x00000000d3febb52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3febb52
sw x3, 0(x2) # store x3 (0xd3febb52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d3febb52 from memory into f29
fnmadd.d f7, f10, f14, f29, dyn # perform operation
fnmadd.d f7, f10, f14, f29, rdn # perform operation
fnmadd.d f7, f10, f14, f29, rmm # perform operation
fnmadd.d f7, f10, f14, f29, rne # perform operation
fnmadd.d f7, f10, f14, f29, rtz # perform operation
fnmadd.d f7, f10, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f10, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f10, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x29, 0x2bc8452c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0xd7800574 # load x3 with 32 MSBs 0x00000000d7800574
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7800574
sw x3, 0(x2) # store x3 (0xd7800574) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d7800574 from memory into f17
fnmadd.d f29, f26, f20, f17, dyn # perform operation
fnmadd.d f29, f26, f20, f17, rdn # perform operation
fnmadd.d f29, f26, f20, f17, rmm # perform operation
fnmadd.d f29, f26, f20, f17, rne # perform operation
fnmadd.d f29, f26, f20, f17, rtz # perform operation
fnmadd.d f29, f26, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x29, 0xf4efe32c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x8524fe66 # load x3 with 32 MSBs 0x000000008524fe66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008524fe66
sw x3, 0(x2) # store x3 (0x8524fe66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008524fe66 from memory into f17
fnmadd.d f29, f31, f21, f17, dyn # perform operation
fnmadd.d f29, f31, f21, f17, rdn # perform operation
fnmadd.d f29, f31, f21, f17, rmm # perform operation
fnmadd.d f29, f31, f21, f17, rne # perform operation
fnmadd.d f29, f31, f21, f17, rtz # perform operation
fnmadd.d f29, f31, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f31, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f31, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f31, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f31, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f31, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x28, 0xa76a6166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0xe1660e8d # load x3 with 32 MSBs 0x00000000e1660e8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1660e8d
sw x3, 0(x2) # store x3 (0xe1660e8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e1660e8d from memory into f15
fnmadd.d f28, f29, f13, f15, dyn # perform operation
fnmadd.d f28, f29, f13, f15, rdn # perform operation
fnmadd.d f28, f29, f13, f15, rmm # perform operation
fnmadd.d f28, f29, f13, f15, rne # perform operation
fnmadd.d f28, f29, f13, f15, rtz # perform operation
fnmadd.d f28, f29, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x28, 0xd7428a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0xb3fa85c8 # load x3 with 32 MSBs 0x00000000b3fa85c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3fa85c8
sw x3, 0(x2) # store x3 (0xb3fa85c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b3fa85c8 from memory into f11
fnmadd.d f28, f25, f4, f11, dyn # perform operation
fnmadd.d f28, f25, f4, f11, rdn # perform operation
fnmadd.d f28, f25, f4, f11, rmm # perform operation
fnmadd.d f28, f25, f4, f11, rne # perform operation
fnmadd.d f28, f25, f4, f11, rtz # perform operation
fnmadd.d f28, f25, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x15, 0x374bb1c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x1f9bb531 # load x3 with 32 MSBs 0x000000001f9bb531
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f9bb531
sw x3, 0(x2) # store x3 (0x1f9bb531) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001f9bb531 from memory into f2
fnmadd.d f15, f7, f27, f2, dyn # perform operation
fnmadd.d f15, f7, f27, f2, rdn # perform operation
fnmadd.d f15, f7, f27, f2, rmm # perform operation
fnmadd.d f15, f7, f27, f2, rne # perform operation
fnmadd.d f15, f7, f27, f2, rtz # perform operation
fnmadd.d f15, f7, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x26, 0x865e82b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x93b09bba # load x3 with 32 MSBs 0x0000000093b09bba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093b09bba
sw x3, 0(x2) # store x3 (0x93b09bba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000093b09bba from memory into f4
fnmadd.d f26, f27, f21, f4, dyn # perform operation
fnmadd.d f26, f27, f21, f4, rdn # perform operation
fnmadd.d f26, f27, f21, f4, rmm # perform operation
fnmadd.d f26, f27, f21, f4, rne # perform operation
fnmadd.d f26, f27, f21, f4, rtz # perform operation
fnmadd.d f26, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x10, 0xc67fc992 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x2a5526a9 # load x3 with 32 MSBs 0x000000002a5526a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a5526a9
sw x3, 0(x2) # store x3 (0x2a5526a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002a5526a9 from memory into f1
fnmadd.d f10, f18, f9, f1, dyn # perform operation
fnmadd.d f10, f18, f9, f1, rdn # perform operation
fnmadd.d f10, f18, f9, f1, rmm # perform operation
fnmadd.d f10, f18, f9, f1, rne # perform operation
fnmadd.d f10, f18, f9, f1, rtz # perform operation
fnmadd.d f10, f18, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f18, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x5, 0x4c1bd787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x26056919 # load x3 with 32 MSBs 0x0000000026056919
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026056919
sw x3, 0(x2) # store x3 (0x26056919) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000026056919 from memory into f15
fnmadd.d f5, f2, f31, f15, dyn # perform operation
fnmadd.d f5, f2, f31, f15, rdn # perform operation
fnmadd.d f5, f2, f31, f15, rmm # perform operation
fnmadd.d f5, f2, f31, f15, rne # perform operation
fnmadd.d f5, f2, f31, f15, rtz # perform operation
fnmadd.d f5, f2, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f2, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f2, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0x842b2ad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x1b20740c # load x3 with 32 MSBs 0x000000001b20740c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b20740c
sw x3, 0(x2) # store x3 (0x1b20740c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000001b20740c from memory into f11
fnmadd.d f28, f29, f14, f11, dyn # perform operation
fnmadd.d f28, f29, f14, f11, rdn # perform operation
fnmadd.d f28, f29, f14, f11, rmm # perform operation
fnmadd.d f28, f29, f14, f11, rne # perform operation
fnmadd.d f28, f29, f14, f11, rtz # perform operation
fnmadd.d f28, f29, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0x379d2c2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x75a9f2dc # load x3 with 32 MSBs 0x0000000075a9f2dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075a9f2dc
sw x3, 0(x2) # store x3 (0x75a9f2dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000075a9f2dc from memory into f1
fnmadd.d f22, f15, f24, f1, dyn # perform operation
fnmadd.d f22, f15, f24, f1, rdn # perform operation
fnmadd.d f22, f15, f24, f1, rmm # perform operation
fnmadd.d f22, f15, f24, f1, rne # perform operation
fnmadd.d f22, f15, f24, f1, rtz # perform operation
fnmadd.d f22, f15, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f15, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f15, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f15, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f15, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f15, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x6, 0xfa102aef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0xb3e2b25d # load x3 with 32 MSBs 0x00000000b3e2b25d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e2b25d
sw x3, 0(x2) # store x3 (0xb3e2b25d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b3e2b25d from memory into f7
fnmadd.d f6, f4, f12, f7, dyn # perform operation
fnmadd.d f6, f4, f12, f7, rdn # perform operation
fnmadd.d f6, f4, f12, f7, rmm # perform operation
fnmadd.d f6, f4, f12, f7, rne # perform operation
fnmadd.d f6, f4, f12, f7, rtz # perform operation
fnmadd.d f6, f4, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f4, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f4, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x13, 0x15019fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xa91d3b3a # load x3 with 32 MSBs 0x00000000a91d3b3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a91d3b3a
sw x3, 0(x2) # store x3 (0xa91d3b3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a91d3b3a from memory into f1
fnmadd.d f13, f15, f11, f1, dyn # perform operation
fnmadd.d f13, f15, f11, f1, rdn # perform operation
fnmadd.d f13, f15, f11, f1, rmm # perform operation
fnmadd.d f13, f15, f11, f1, rne # perform operation
fnmadd.d f13, f15, f11, f1, rtz # perform operation
fnmadd.d f13, f15, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f15, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x20, 0x3f09790e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0xb7e684b4 # load x3 with 32 MSBs 0x00000000b7e684b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7e684b4
sw x3, 0(x2) # store x3 (0xb7e684b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b7e684b4 from memory into f15
fnmadd.d f20, f26, f13, f15, dyn # perform operation
fnmadd.d f20, f26, f13, f15, rdn # perform operation
fnmadd.d f20, f26, f13, f15, rmm # perform operation
fnmadd.d f20, f26, f13, f15, rne # perform operation
fnmadd.d f20, f26, f13, f15, rtz # perform operation
fnmadd.d f20, f26, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f26, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f26, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f26, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f26, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f26, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x1c9a3f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xecf0bd2a # load x3 with 32 MSBs 0x00000000ecf0bd2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecf0bd2a
sw x3, 0(x2) # store x3 (0xecf0bd2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ecf0bd2a from memory into f23
fnmadd.d f21, f26, f6, f23, dyn # perform operation
fnmadd.d f21, f26, f6, f23, rdn # perform operation
fnmadd.d f21, f26, f6, f23, rmm # perform operation
fnmadd.d f21, f26, f6, f23, rne # perform operation
fnmadd.d f21, f26, f6, f23, rtz # perform operation
fnmadd.d f21, f26, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f26, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x23, 0x8076d454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
li x3, 0x3747199e # load x3 with 32 MSBs 0x000000003747199e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003747199e
sw x3, 0(x2) # store x3 (0x3747199e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003747199e from memory into f21
fnmadd.d f23, f12, f19, f21, dyn # perform operation
fnmadd.d f23, f12, f19, f21, rdn # perform operation
fnmadd.d f23, f12, f19, f21, rmm # perform operation
fnmadd.d f23, f12, f19, f21, rne # perform operation
fnmadd.d f23, f12, f19, f21, rtz # perform operation
fnmadd.d f23, f12, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x16, 0x3d5d4763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x273588bd # load x3 with 32 MSBs 0x00000000273588bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000273588bd
sw x3, 0(x2) # store x3 (0x273588bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000273588bd from memory into f8
fnmadd.d f16, f22, f29, f8, dyn # perform operation
fnmadd.d f16, f22, f29, f8, rdn # perform operation
fnmadd.d f16, f22, f29, f8, rmm # perform operation
fnmadd.d f16, f22, f29, f8, rne # perform operation
fnmadd.d f16, f22, f29, f8, rtz # perform operation
fnmadd.d f16, f22, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x8, 0xd928d3c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0x97996e39 # load x3 with 32 MSBs 0x0000000097996e39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097996e39
sw x3, 0(x2) # store x3 (0x97996e39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000097996e39 from memory into f9
fnmadd.d f8, f4, f3, f9, dyn # perform operation
fnmadd.d f8, f4, f3, f9, rdn # perform operation
fnmadd.d f8, f4, f3, f9, rmm # perform operation
fnmadd.d f8, f4, f3, f9, rne # perform operation
fnmadd.d f8, f4, f3, f9, rtz # perform operation
fnmadd.d f8, f4, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f4, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f4, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x14, 0xd9b70b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x5dd7ccc4 # load x3 with 32 MSBs 0x000000005dd7ccc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dd7ccc4
sw x3, 0(x2) # store x3 (0x5dd7ccc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005dd7ccc4 from memory into f21
fnmadd.d f14, f6, f12, f21, dyn # perform operation
fnmadd.d f14, f6, f12, f21, rdn # perform operation
fnmadd.d f14, f6, f12, f21, rmm # perform operation
fnmadd.d f14, f6, f12, f21, rne # perform operation
fnmadd.d f14, f6, f12, f21, rtz # perform operation
fnmadd.d f14, f6, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f6, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f6, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x13, 0x1f615b0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x3366b467 # load x3 with 32 MSBs 0x000000003366b467
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003366b467
sw x3, 0(x2) # store x3 (0x3366b467) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003366b467 from memory into f21
fnmadd.d f13, f25, f4, f21, dyn # perform operation
fnmadd.d f13, f25, f4, f21, rdn # perform operation
fnmadd.d f13, f25, f4, f21, rmm # perform operation
fnmadd.d f13, f25, f4, f21, rne # perform operation
fnmadd.d f13, f25, f4, f21, rtz # perform operation
fnmadd.d f13, f25, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f25, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f25, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f25, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f25, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f25, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x28, 0xf310aa74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0x1f0dd908 # load x3 with 32 MSBs 0x000000001f0dd908
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f0dd908
sw x3, 0(x2) # store x3 (0x1f0dd908) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001f0dd908 from memory into f2
fnmadd.d f28, f29, f13, f2, dyn # perform operation
fnmadd.d f28, f29, f13, f2, rdn # perform operation
fnmadd.d f28, f29, f13, f2, rmm # perform operation
fnmadd.d f28, f29, f13, f2, rne # perform operation
fnmadd.d f28, f29, f13, f2, rtz # perform operation
fnmadd.d f28, f29, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x31, 0x4ce714d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0xe8e21b39 # load x3 with 32 MSBs 0x00000000e8e21b39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8e21b39
sw x3, 0(x2) # store x3 (0xe8e21b39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e8e21b39 from memory into f27
fnmadd.d f31, f22, f17, f27, dyn # perform operation
fnmadd.d f31, f22, f17, f27, rdn # perform operation
fnmadd.d f31, f22, f17, f27, rmm # perform operation
fnmadd.d f31, f22, f17, f27, rne # perform operation
fnmadd.d f31, f22, f17, f27, rtz # perform operation
fnmadd.d f31, f22, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f22, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0xec6df3d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x791a17c8 # load x3 with 32 MSBs 0x00000000791a17c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000791a17c8
sw x3, 0(x2) # store x3 (0x791a17c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000791a17c8 from memory into f24
fnmadd.d f18, f15, f12, f24, dyn # perform operation
fnmadd.d f18, f15, f12, f24, rdn # perform operation
fnmadd.d f18, f15, f12, f24, rmm # perform operation
fnmadd.d f18, f15, f12, f24, rne # perform operation
fnmadd.d f18, f15, f12, f24, rtz # perform operation
fnmadd.d f18, f15, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f15, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f15, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x31, 0x16806859 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0xc1876560 # load x3 with 32 MSBs 0x00000000c1876560
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1876560
sw x3, 0(x2) # store x3 (0xc1876560) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c1876560 from memory into f4
fnmadd.d f31, f25, f8, f4, dyn # perform operation
fnmadd.d f31, f25, f8, f4, rdn # perform operation
fnmadd.d f31, f25, f8, f4, rmm # perform operation
fnmadd.d f31, f25, f8, f4, rne # perform operation
fnmadd.d f31, f25, f8, f4, rtz # perform operation
fnmadd.d f31, f25, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f25, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f25, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f25, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f25, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f25, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x19, 0xa11889a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0xcae93629 # load x3 with 32 MSBs 0x00000000cae93629
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cae93629
sw x3, 0(x2) # store x3 (0xcae93629) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000cae93629 from memory into f20
fnmadd.d f19, f24, f29, f20, dyn # perform operation
fnmadd.d f19, f24, f29, f20, rdn # perform operation
fnmadd.d f19, f24, f29, f20, rmm # perform operation
fnmadd.d f19, f24, f29, f20, rne # perform operation
fnmadd.d f19, f24, f29, f20, rtz # perform operation
fnmadd.d f19, f24, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f24, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x31, 0x90796bb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0xe2b83c69 # load x3 with 32 MSBs 0x00000000e2b83c69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2b83c69
sw x3, 0(x2) # store x3 (0xe2b83c69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e2b83c69 from memory into f12
fnmadd.d f31, f16, f23, f12, dyn # perform operation
fnmadd.d f31, f16, f23, f12, rdn # perform operation
fnmadd.d f31, f16, f23, f12, rmm # perform operation
fnmadd.d f31, f16, f23, f12, rne # perform operation
fnmadd.d f31, f16, f23, f12, rtz # perform operation
fnmadd.d f31, f16, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f16, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f16, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f16, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f16, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f16, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x16, 0xeb9a2376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x802917fb # load x3 with 32 MSBs 0x00000000802917fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000802917fb
sw x3, 0(x2) # store x3 (0x802917fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000802917fb from memory into f14
fnmadd.d f16, f25, f26, f14, dyn # perform operation
fnmadd.d f16, f25, f26, f14, rdn # perform operation
fnmadd.d f16, f25, f26, f14, rmm # perform operation
fnmadd.d f16, f25, f26, f14, rne # perform operation
fnmadd.d f16, f25, f26, f14, rtz # perform operation
fnmadd.d f16, f25, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f25, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x14, 0x39997292 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xfb6f749b # load x3 with 32 MSBs 0x00000000fb6f749b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb6f749b
sw x3, 0(x2) # store x3 (0xfb6f749b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000fb6f749b from memory into f28
fnmadd.d f14, f15, f23, f28, dyn # perform operation
fnmadd.d f14, f15, f23, f28, rdn # perform operation
fnmadd.d f14, f15, f23, f28, rmm # perform operation
fnmadd.d f14, f15, f23, f28, rne # perform operation
fnmadd.d f14, f15, f23, f28, rtz # perform operation
fnmadd.d f14, f15, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f15, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x2, 0x6ffa5844 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0xa5efc991 # load x3 with 32 MSBs 0x00000000a5efc991
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5efc991
sw x3, 0(x2) # store x3 (0xa5efc991) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a5efc991 from memory into f7
fnmadd.d f2, f1, f27, f7, dyn # perform operation
fnmadd.d f2, f1, f27, f7, rdn # perform operation
fnmadd.d f2, f1, f27, f7, rmm # perform operation
fnmadd.d f2, f1, f27, f7, rne # perform operation
fnmadd.d f2, f1, f27, f7, rtz # perform operation
fnmadd.d f2, f1, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f1, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f1, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f1, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f1, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f1, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x16, 0xf2db2973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x2d38894f # load x3 with 32 MSBs 0x000000002d38894f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d38894f
sw x3, 0(x2) # store x3 (0x2d38894f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002d38894f from memory into f13
fnmadd.d f16, f31, f10, f13, dyn # perform operation
fnmadd.d f16, f31, f10, f13, rdn # perform operation
fnmadd.d f16, f31, f10, f13, rmm # perform operation
fnmadd.d f16, f31, f10, f13, rne # perform operation
fnmadd.d f16, f31, f10, f13, rtz # perform operation
fnmadd.d f16, f31, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x31, 0xc6f82696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xd2534950 # load x3 with 32 MSBs 0x00000000d2534950
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2534950
sw x3, 0(x2) # store x3 (0xd2534950) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d2534950 from memory into f26
fnmadd.d f31, f20, f21, f26, dyn # perform operation
fnmadd.d f31, f20, f21, f26, rdn # perform operation
fnmadd.d f31, f20, f21, f26, rmm # perform operation
fnmadd.d f31, f20, f21, f26, rne # perform operation
fnmadd.d f31, f20, f21, f26, rtz # perform operation
fnmadd.d f31, f20, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f20, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x19, 0xb4c0cdff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x69840ce6 # load x3 with 32 MSBs 0x0000000069840ce6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069840ce6
sw x3, 0(x2) # store x3 (0x69840ce6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000069840ce6 from memory into f14
fnmadd.d f19, f4, f24, f14, dyn # perform operation
fnmadd.d f19, f4, f24, f14, rdn # perform operation
fnmadd.d f19, f4, f24, f14, rmm # perform operation
fnmadd.d f19, f4, f24, f14, rne # perform operation
fnmadd.d f19, f4, f24, f14, rtz # perform operation
fnmadd.d f19, f4, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f4, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f4, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f4, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f4, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f4, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x8, 0x24e418c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x02ce544f # load x3 with 32 MSBs 0x0000000002ce544f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002ce544f
sw x3, 0(x2) # store x3 (0x02ce544f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000002ce544f from memory into f2
fnmadd.d f8, f20, f17, f2, dyn # perform operation
fnmadd.d f8, f20, f17, f2, rdn # perform operation
fnmadd.d f8, f20, f17, f2, rmm # perform operation
fnmadd.d f8, f20, f17, f2, rne # perform operation
fnmadd.d f8, f20, f17, f2, rtz # perform operation
fnmadd.d f8, f20, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f20, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x25, 0x6350d3df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xe31911cd # load x3 with 32 MSBs 0x00000000e31911cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e31911cd
sw x3, 0(x2) # store x3 (0xe31911cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e31911cd from memory into f8
fnmadd.d f25, f6, f15, f8, dyn # perform operation
fnmadd.d f25, f6, f15, f8, rdn # perform operation
fnmadd.d f25, f6, f15, f8, rmm # perform operation
fnmadd.d f25, f6, f15, f8, rne # perform operation
fnmadd.d f25, f6, f15, f8, rtz # perform operation
fnmadd.d f25, f6, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x15, 0x8e6499ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0xa18ce2ed # load x3 with 32 MSBs 0x00000000a18ce2ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a18ce2ed
sw x3, 0(x2) # store x3 (0xa18ce2ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a18ce2ed from memory into f10
fnmadd.d f15, f25, f19, f10, dyn # perform operation
fnmadd.d f15, f25, f19, f10, rdn # perform operation
fnmadd.d f15, f25, f19, f10, rmm # perform operation
fnmadd.d f15, f25, f19, f10, rne # perform operation
fnmadd.d f15, f25, f19, f10, rtz # perform operation
fnmadd.d f15, f25, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f25, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f25, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x12, 0xc0cf896b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x57947c7e # load x3 with 32 MSBs 0x0000000057947c7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057947c7e
sw x3, 0(x2) # store x3 (0x57947c7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000057947c7e from memory into f31
fnmadd.d f12, f16, f30, f31, dyn # perform operation
fnmadd.d f12, f16, f30, f31, rdn # perform operation
fnmadd.d f12, f16, f30, f31, rmm # perform operation
fnmadd.d f12, f16, f30, f31, rne # perform operation
fnmadd.d f12, f16, f30, f31, rtz # perform operation
fnmadd.d f12, f16, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f16, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f16, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x5, 0x6a43e77f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x07b36e3b # load x3 with 32 MSBs 0x0000000007b36e3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007b36e3b
sw x3, 0(x2) # store x3 (0x07b36e3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000007b36e3b from memory into f25
fnmadd.d f5, f29, f23, f25, dyn # perform operation
fnmadd.d f5, f29, f23, f25, rdn # perform operation
fnmadd.d f5, f29, f23, f25, rmm # perform operation
fnmadd.d f5, f29, f23, f25, rne # perform operation
fnmadd.d f5, f29, f23, f25, rtz # perform operation
fnmadd.d f5, f29, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f29, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f29, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x29, 0x9b8fa034 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x4f51f280 # load x3 with 32 MSBs 0x000000004f51f280
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f51f280
sw x3, 0(x2) # store x3 (0x4f51f280) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004f51f280 from memory into f20
fnmadd.d f29, f15, f26, f20, dyn # perform operation
fnmadd.d f29, f15, f26, f20, rdn # perform operation
fnmadd.d f29, f15, f26, f20, rmm # perform operation
fnmadd.d f29, f15, f26, f20, rne # perform operation
fnmadd.d f29, f15, f26, f20, rtz # perform operation
fnmadd.d f29, f15, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f15, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x13, 0x744b1f3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0xe899bbc7 # load x3 with 32 MSBs 0x00000000e899bbc7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e899bbc7
sw x3, 0(x2) # store x3 (0xe899bbc7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e899bbc7 from memory into f26
fnmadd.d f13, f18, f20, f26, dyn # perform operation
fnmadd.d f13, f18, f20, f26, rdn # perform operation
fnmadd.d f13, f18, f20, f26, rmm # perform operation
fnmadd.d f13, f18, f20, f26, rne # perform operation
fnmadd.d f13, f18, f20, f26, rtz # perform operation
fnmadd.d f13, f18, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f18, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f18, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f18, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f18, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f18, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x2, 0x76236e56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0xe7e076fe # load x3 with 32 MSBs 0x00000000e7e076fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7e076fe
sw x3, 0(x2) # store x3 (0xe7e076fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e7e076fe from memory into f13
fnmadd.d f2, f5, f18, f13, dyn # perform operation
fnmadd.d f2, f5, f18, f13, rdn # perform operation
fnmadd.d f2, f5, f18, f13, rmm # perform operation
fnmadd.d f2, f5, f18, f13, rne # perform operation
fnmadd.d f2, f5, f18, f13, rtz # perform operation
fnmadd.d f2, f5, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f5, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f5, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x4, 0xdb10c287 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x939238b5 # load x3 with 32 MSBs 0x00000000939238b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000939238b5
sw x3, 0(x2) # store x3 (0x939238b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000939238b5 from memory into f20
fnmadd.d f4, f18, f22, f20, dyn # perform operation
fnmadd.d f4, f18, f22, f20, rdn # perform operation
fnmadd.d f4, f18, f22, f20, rmm # perform operation
fnmadd.d f4, f18, f22, f20, rne # perform operation
fnmadd.d f4, f18, f22, f20, rtz # perform operation
fnmadd.d f4, f18, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f18, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f18, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f18, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f18, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f18, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x18, 0xc4d88eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x29952b3d # load x3 with 32 MSBs 0x0000000029952b3d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029952b3d
sw x3, 0(x2) # store x3 (0x29952b3d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000029952b3d from memory into f2
fnmadd.d f18, f11, f12, f2, dyn # perform operation
fnmadd.d f18, f11, f12, f2, rdn # perform operation
fnmadd.d f18, f11, f12, f2, rmm # perform operation
fnmadd.d f18, f11, f12, f2, rne # perform operation
fnmadd.d f18, f11, f12, f2, rtz # perform operation
fnmadd.d f18, f11, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f11, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x4, 0x0bba46d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x8e41a450 # load x3 with 32 MSBs 0x000000008e41a450
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e41a450
sw x3, 0(x2) # store x3 (0x8e41a450) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000008e41a450 from memory into f26
fnmadd.d f4, f2, f25, f26, dyn # perform operation
fnmadd.d f4, f2, f25, f26, rdn # perform operation
fnmadd.d f4, f2, f25, f26, rmm # perform operation
fnmadd.d f4, f2, f25, f26, rne # perform operation
fnmadd.d f4, f2, f25, f26, rtz # perform operation
fnmadd.d f4, f2, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f2, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x8, 0x1b7d7272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x997dfea2 # load x3 with 32 MSBs 0x00000000997dfea2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000997dfea2
sw x3, 0(x2) # store x3 (0x997dfea2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000997dfea2 from memory into f5
fnmadd.d f8, f27, f4, f5, dyn # perform operation
fnmadd.d f8, f27, f4, f5, rdn # perform operation
fnmadd.d f8, f27, f4, f5, rmm # perform operation
fnmadd.d f8, f27, f4, f5, rne # perform operation
fnmadd.d f8, f27, f4, f5, rtz # perform operation
fnmadd.d f8, f27, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x14, 0x3a1957cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x0d2f90ad # load x3 with 32 MSBs 0x000000000d2f90ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d2f90ad
sw x3, 0(x2) # store x3 (0x0d2f90ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000d2f90ad from memory into f6
fnmadd.d f14, f25, f17, f6, dyn # perform operation
fnmadd.d f14, f25, f17, f6, rdn # perform operation
fnmadd.d f14, f25, f17, f6, rmm # perform operation
fnmadd.d f14, f25, f17, f6, rne # perform operation
fnmadd.d f14, f25, f17, f6, rtz # perform operation
fnmadd.d f14, f25, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f25, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f25, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x22, 0xa72f131a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
li x3, 0x456fc118 # load x3 with 32 MSBs 0x00000000456fc118
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000456fc118
sw x3, 0(x2) # store x3 (0x456fc118) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000456fc118 from memory into f28
fnmadd.d f22, f30, f20, f28, dyn # perform operation
fnmadd.d f22, f30, f20, f28, rdn # perform operation
fnmadd.d f22, f30, f20, f28, rmm # perform operation
fnmadd.d f22, f30, f20, f28, rne # perform operation
fnmadd.d f22, f30, f20, f28, rtz # perform operation
fnmadd.d f22, f30, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f30, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f30, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x20, 0xf3c015eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x7a3c5ab4 # load x3 with 32 MSBs 0x000000007a3c5ab4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a3c5ab4
sw x3, 0(x2) # store x3 (0x7a3c5ab4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007a3c5ab4 from memory into f13
fnmadd.d f20, f30, f23, f13, dyn # perform operation
fnmadd.d f20, f30, f23, f13, rdn # perform operation
fnmadd.d f20, f30, f23, f13, rmm # perform operation
fnmadd.d f20, f30, f23, f13, rne # perform operation
fnmadd.d f20, f30, f23, f13, rtz # perform operation
fnmadd.d f20, f30, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f30, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f30, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x1, 0xdf002414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x8686969b # load x3 with 32 MSBs 0x000000008686969b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008686969b
sw x3, 0(x2) # store x3 (0x8686969b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008686969b from memory into f2
fnmadd.d f1, f4, f22, f2, dyn # perform operation
fnmadd.d f1, f4, f22, f2, rdn # perform operation
fnmadd.d f1, f4, f22, f2, rmm # perform operation
fnmadd.d f1, f4, f22, f2, rne # perform operation
fnmadd.d f1, f4, f22, f2, rtz # perform operation
fnmadd.d f1, f4, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f4, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x4, 0x0f2912bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0x9e601446 # load x3 with 32 MSBs 0x000000009e601446
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e601446
sw x3, 0(x2) # store x3 (0x9e601446) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009e601446 from memory into f5
fnmadd.d f4, f23, f14, f5, dyn # perform operation
fnmadd.d f4, f23, f14, f5, rdn # perform operation
fnmadd.d f4, f23, f14, f5, rmm # perform operation
fnmadd.d f4, f23, f14, f5, rne # perform operation
fnmadd.d f4, f23, f14, f5, rtz # perform operation
fnmadd.d f4, f23, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f23, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f23, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f23, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f23, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f23, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x24, 0xfa36a63a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x4ae900d0 # load x3 with 32 MSBs 0x000000004ae900d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ae900d0
sw x3, 0(x2) # store x3 (0x4ae900d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004ae900d0 from memory into f29
fnmadd.d f24, f1, f8, f29, dyn # perform operation
fnmadd.d f24, f1, f8, f29, rdn # perform operation
fnmadd.d f24, f1, f8, f29, rmm # perform operation
fnmadd.d f24, f1, f8, f29, rne # perform operation
fnmadd.d f24, f1, f8, f29, rtz # perform operation
fnmadd.d f24, f1, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f1, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x20, 0x47670de4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x2ada4a8a # load x3 with 32 MSBs 0x000000002ada4a8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ada4a8a
sw x3, 0(x2) # store x3 (0x2ada4a8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002ada4a8a from memory into f17
fnmadd.d f20, f10, f21, f17, dyn # perform operation
fnmadd.d f20, f10, f21, f17, rdn # perform operation
fnmadd.d f20, f10, f21, f17, rmm # perform operation
fnmadd.d f20, f10, f21, f17, rne # perform operation
fnmadd.d f20, f10, f21, f17, rtz # perform operation
fnmadd.d f20, f10, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f10, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f10, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x14, 0xe227235a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0xea27fe57 # load x3 with 32 MSBs 0x00000000ea27fe57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea27fe57
sw x3, 0(x2) # store x3 (0xea27fe57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ea27fe57 from memory into f24
fnmadd.d f14, f7, f16, f24, dyn # perform operation
fnmadd.d f14, f7, f16, f24, rdn # perform operation
fnmadd.d f14, f7, f16, f24, rmm # perform operation
fnmadd.d f14, f7, f16, f24, rne # perform operation
fnmadd.d f14, f7, f16, f24, rtz # perform operation
fnmadd.d f14, f7, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f7, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x29, 0x46b3d1bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x60b03d03 # load x3 with 32 MSBs 0x0000000060b03d03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060b03d03
sw x3, 0(x2) # store x3 (0x60b03d03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000060b03d03 from memory into f17
fnmadd.d f29, f1, f28, f17, dyn # perform operation
fnmadd.d f29, f1, f28, f17, rdn # perform operation
fnmadd.d f29, f1, f28, f17, rmm # perform operation
fnmadd.d f29, f1, f28, f17, rne # perform operation
fnmadd.d f29, f1, f28, f17, rtz # perform operation
fnmadd.d f29, f1, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f1, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f1, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f1, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f1, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f1, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x26, 0xc419e53e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x0a52ae0d # load x3 with 32 MSBs 0x000000000a52ae0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a52ae0d
sw x3, 0(x2) # store x3 (0x0a52ae0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000a52ae0d from memory into f25
fnmadd.d f26, f5, f9, f25, dyn # perform operation
fnmadd.d f26, f5, f9, f25, rdn # perform operation
fnmadd.d f26, f5, f9, f25, rmm # perform operation
fnmadd.d f26, f5, f9, f25, rne # perform operation
fnmadd.d f26, f5, f9, f25, rtz # perform operation
fnmadd.d f26, f5, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f5, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f5, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f5, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f5, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f5, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x25, 0x29ac5e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x13940120 # load x3 with 32 MSBs 0x0000000013940120
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013940120
sw x3, 0(x2) # store x3 (0x13940120) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000013940120 from memory into f20
fnmadd.d f25, f9, f5, f20, dyn # perform operation
fnmadd.d f25, f9, f5, f20, rdn # perform operation
fnmadd.d f25, f9, f5, f20, rmm # perform operation
fnmadd.d f25, f9, f5, f20, rne # perform operation
fnmadd.d f25, f9, f5, f20, rtz # perform operation
fnmadd.d f25, f9, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f9, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f9, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f9, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f9, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f9, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x14, 0x004bdb39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x82d7133a # load x3 with 32 MSBs 0x0000000082d7133a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082d7133a
sw x3, 0(x2) # store x3 (0x82d7133a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000082d7133a from memory into f13
fnmadd.d f14, f21, f8, f13, dyn # perform operation
fnmadd.d f14, f21, f8, f13, rdn # perform operation
fnmadd.d f14, f21, f8, f13, rmm # perform operation
fnmadd.d f14, f21, f8, f13, rne # perform operation
fnmadd.d f14, f21, f8, f13, rtz # perform operation
fnmadd.d f14, f21, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f21, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f21, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f21, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f21, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f21, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x8, 0x2a3fc0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x5b3414a7 # load x3 with 32 MSBs 0x000000005b3414a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b3414a7
sw x3, 0(x2) # store x3 (0x5b3414a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005b3414a7 from memory into f29
fnmadd.d f8, f5, f31, f29, dyn # perform operation
fnmadd.d f8, f5, f31, f29, rdn # perform operation
fnmadd.d f8, f5, f31, f29, rmm # perform operation
fnmadd.d f8, f5, f31, f29, rne # perform operation
fnmadd.d f8, f5, f31, f29, rtz # perform operation
fnmadd.d f8, f5, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x31, 0x3b56a895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x2f4b24a1 # load x3 with 32 MSBs 0x000000002f4b24a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f4b24a1
sw x3, 0(x2) # store x3 (0x2f4b24a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002f4b24a1 from memory into f30
fnmadd.d f31, f27, f15, f30, dyn # perform operation
fnmadd.d f31, f27, f15, f30, rdn # perform operation
fnmadd.d f31, f27, f15, f30, rmm # perform operation
fnmadd.d f31, f27, f15, f30, rne # perform operation
fnmadd.d f31, f27, f15, f30, rtz # perform operation
fnmadd.d f31, f27, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f27, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f27, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x28, 0x8fc0b8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x6c0c7698 # load x3 with 32 MSBs 0x000000006c0c7698
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c0c7698
sw x3, 0(x2) # store x3 (0x6c0c7698) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000006c0c7698 from memory into f19
fnmadd.d f28, f13, f18, f19, dyn # perform operation
fnmadd.d f28, f13, f18, f19, rdn # perform operation
fnmadd.d f28, f13, f18, f19, rmm # perform operation
fnmadd.d f28, f13, f18, f19, rne # perform operation
fnmadd.d f28, f13, f18, f19, rtz # perform operation
fnmadd.d f28, f13, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f13, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f13, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f13, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f13, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f13, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x25, 0x57790a28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x3e7de14e # load x3 with 32 MSBs 0x000000003e7de14e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e7de14e
sw x3, 0(x2) # store x3 (0x3e7de14e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000003e7de14e from memory into f11
fnmadd.d f25, f29, f24, f11, dyn # perform operation
fnmadd.d f25, f29, f24, f11, rdn # perform operation
fnmadd.d f25, f29, f24, f11, rmm # perform operation
fnmadd.d f25, f29, f24, f11, rne # perform operation
fnmadd.d f25, f29, f24, f11, rtz # perform operation
fnmadd.d f25, f29, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f29, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x25, 0x5102f4ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0x1fae65bb # load x3 with 32 MSBs 0x000000001fae65bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fae65bb
sw x3, 0(x2) # store x3 (0x1fae65bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000001fae65bb from memory into f18
fnmadd.d f25, f1, f21, f18, dyn # perform operation
fnmadd.d f25, f1, f21, f18, rdn # perform operation
fnmadd.d f25, f1, f21, f18, rmm # perform operation
fnmadd.d f25, f1, f21, f18, rne # perform operation
fnmadd.d f25, f1, f21, f18, rtz # perform operation
fnmadd.d f25, f1, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f1, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0xe90527c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0xa6276c9c # load x3 with 32 MSBs 0x00000000a6276c9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6276c9c
sw x3, 0(x2) # store x3 (0xa6276c9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a6276c9c from memory into f2
fnmadd.d f1, f19, f25, f2, dyn # perform operation
fnmadd.d f1, f19, f25, f2, rdn # perform operation
fnmadd.d f1, f19, f25, f2, rmm # perform operation
fnmadd.d f1, f19, f25, f2, rne # perform operation
fnmadd.d f1, f19, f25, f2, rtz # perform operation
fnmadd.d f1, f19, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x568c98c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x101029ac # load x3 with 32 MSBs 0x00000000101029ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000101029ac
sw x3, 0(x2) # store x3 (0x101029ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000101029ac from memory into f6
fnmadd.d f29, f8, f23, f6, dyn # perform operation
fnmadd.d f29, f8, f23, f6, rdn # perform operation
fnmadd.d f29, f8, f23, f6, rmm # perform operation
fnmadd.d f29, f8, f23, f6, rne # perform operation
fnmadd.d f29, f8, f23, f6, rtz # perform operation
fnmadd.d f29, f8, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f8, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f8, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f8, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f8, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f8, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x24, 0xa6ab30f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x3cd02df1 # load x3 with 32 MSBs 0x000000003cd02df1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cd02df1
sw x3, 0(x2) # store x3 (0x3cd02df1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003cd02df1 from memory into f20
fnmadd.d f24, f3, f30, f20, dyn # perform operation
fnmadd.d f24, f3, f30, f20, rdn # perform operation
fnmadd.d f24, f3, f30, f20, rmm # perform operation
fnmadd.d f24, f3, f30, f20, rne # perform operation
fnmadd.d f24, f3, f30, f20, rtz # perform operation
fnmadd.d f24, f3, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f3, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f3, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f3, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f3, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f3, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x17, 0x44180519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0xaf06f24d # load x3 with 32 MSBs 0x00000000af06f24d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af06f24d
sw x3, 0(x2) # store x3 (0xaf06f24d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000af06f24d from memory into f20
fnmadd.d f17, f11, f1, f20, dyn # perform operation
fnmadd.d f17, f11, f1, f20, rdn # perform operation
fnmadd.d f17, f11, f1, f20, rmm # perform operation
fnmadd.d f17, f11, f1, f20, rne # perform operation
fnmadd.d f17, f11, f1, f20, rtz # perform operation
fnmadd.d f17, f11, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x8, 0xecf14479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xc8f2f549 # load x3 with 32 MSBs 0x00000000c8f2f549
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8f2f549
sw x3, 0(x2) # store x3 (0xc8f2f549) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c8f2f549 from memory into f2
fnmadd.d f8, f14, f7, f2, dyn # perform operation
fnmadd.d f8, f14, f7, f2, rdn # perform operation
fnmadd.d f8, f14, f7, f2, rmm # perform operation
fnmadd.d f8, f14, f7, f2, rne # perform operation
fnmadd.d f8, f14, f7, f2, rtz # perform operation
fnmadd.d f8, f14, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f14, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f14, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f14, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f14, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f14, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x23, 0x61983e0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x7a3bc7fb # load x3 with 32 MSBs 0x000000007a3bc7fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a3bc7fb
sw x3, 0(x2) # store x3 (0x7a3bc7fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007a3bc7fb from memory into f28
fnmadd.d f23, f22, f15, f28, dyn # perform operation
fnmadd.d f23, f22, f15, f28, rdn # perform operation
fnmadd.d f23, f22, f15, f28, rmm # perform operation
fnmadd.d f23, f22, f15, f28, rne # perform operation
fnmadd.d f23, f22, f15, f28, rtz # perform operation
fnmadd.d f23, f22, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f22, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x16, 0xfb81f20a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0xe833cc7a # load x3 with 32 MSBs 0x00000000e833cc7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e833cc7a
sw x3, 0(x2) # store x3 (0xe833cc7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e833cc7a from memory into f17
fnmadd.d f16, f18, f4, f17, dyn # perform operation
fnmadd.d f16, f18, f4, f17, rdn # perform operation
fnmadd.d f16, f18, f4, f17, rmm # perform operation
fnmadd.d f16, f18, f4, f17, rne # perform operation
fnmadd.d f16, f18, f4, f17, rtz # perform operation
fnmadd.d f16, f18, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f18, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f18, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x6, 0x2d1e588d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x7e24241f # load x3 with 32 MSBs 0x000000007e24241f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e24241f
sw x3, 0(x2) # store x3 (0x7e24241f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007e24241f from memory into f4
fnmadd.d f6, f16, f26, f4, dyn # perform operation
fnmadd.d f6, f16, f26, f4, rdn # perform operation
fnmadd.d f6, f16, f26, f4, rmm # perform operation
fnmadd.d f6, f16, f26, f4, rne # perform operation
fnmadd.d f6, f16, f26, f4, rtz # perform operation
fnmadd.d f6, f16, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x15, 0xc3c5a608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x7550bb5f # load x3 with 32 MSBs 0x000000007550bb5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007550bb5f
sw x3, 0(x2) # store x3 (0x7550bb5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007550bb5f from memory into f7
fnmadd.d f15, f8, f5, f7, dyn # perform operation
fnmadd.d f15, f8, f5, f7, rdn # perform operation
fnmadd.d f15, f8, f5, f7, rmm # perform operation
fnmadd.d f15, f8, f5, f7, rne # perform operation
fnmadd.d f15, f8, f5, f7, rtz # perform operation
fnmadd.d f15, f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f8, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x30, 0x89b5f4f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xbdb1d51c # load x3 with 32 MSBs 0x00000000bdb1d51c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdb1d51c
sw x3, 0(x2) # store x3 (0xbdb1d51c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bdb1d51c from memory into f10
fnmadd.d f30, f21, f7, f10, dyn # perform operation
fnmadd.d f30, f21, f7, f10, rdn # perform operation
fnmadd.d f30, f21, f7, f10, rmm # perform operation
fnmadd.d f30, f21, f7, f10, rne # perform operation
fnmadd.d f30, f21, f7, f10, rtz # perform operation
fnmadd.d f30, f21, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f21, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x13, 0x49b41cff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x9911be24 # load x3 with 32 MSBs 0x000000009911be24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009911be24
sw x3, 0(x2) # store x3 (0x9911be24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009911be24 from memory into f28
fnmadd.d f13, f14, f6, f28, dyn # perform operation
fnmadd.d f13, f14, f6, f28, rdn # perform operation
fnmadd.d f13, f14, f6, f28, rmm # perform operation
fnmadd.d f13, f14, f6, f28, rne # perform operation
fnmadd.d f13, f14, f6, f28, rtz # perform operation
fnmadd.d f13, f14, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f14, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f14, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f14, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f14, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f14, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x2, 0x7badb9ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xefa4027b # load x3 with 32 MSBs 0x00000000efa4027b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efa4027b
sw x3, 0(x2) # store x3 (0xefa4027b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000efa4027b from memory into f4
fnmadd.d f2, f11, f3, f4, dyn # perform operation
fnmadd.d f2, f11, f3, f4, rdn # perform operation
fnmadd.d f2, f11, f3, f4, rmm # perform operation
fnmadd.d f2, f11, f3, f4, rne # perform operation
fnmadd.d f2, f11, f3, f4, rtz # perform operation
fnmadd.d f2, f11, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f11, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f11, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f11, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f11, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f11, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x17, 0x99dfcc56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xbc990c72 # load x3 with 32 MSBs 0x00000000bc990c72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc990c72
sw x3, 0(x2) # store x3 (0xbc990c72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000bc990c72 from memory into f4
fnmadd.d f17, f15, f27, f4, dyn # perform operation
fnmadd.d f17, f15, f27, f4, rdn # perform operation
fnmadd.d f17, f15, f27, f4, rmm # perform operation
fnmadd.d f17, f15, f27, f4, rne # perform operation
fnmadd.d f17, f15, f27, f4, rtz # perform operation
fnmadd.d f17, f15, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f15, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f15, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x5, 0xb6e6861b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x527946f2 # load x3 with 32 MSBs 0x00000000527946f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000527946f2
sw x3, 0(x2) # store x3 (0x527946f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000527946f2 from memory into f4
fnmadd.d f5, f24, f8, f4, dyn # perform operation
fnmadd.d f5, f24, f8, f4, rdn # perform operation
fnmadd.d f5, f24, f8, f4, rmm # perform operation
fnmadd.d f5, f24, f8, f4, rne # perform operation
fnmadd.d f5, f24, f8, f4, rtz # perform operation
fnmadd.d f5, f24, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f24, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f24, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x13, 0x5b992b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xd60e79b6 # load x3 with 32 MSBs 0x00000000d60e79b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d60e79b6
sw x3, 0(x2) # store x3 (0xd60e79b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d60e79b6 from memory into f26
fnmadd.d f13, f27, f31, f26, dyn # perform operation
fnmadd.d f13, f27, f31, f26, rdn # perform operation
fnmadd.d f13, f27, f31, f26, rmm # perform operation
fnmadd.d f13, f27, f31, f26, rne # perform operation
fnmadd.d f13, f27, f31, f26, rtz # perform operation
fnmadd.d f13, f27, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f27, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f27, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f27, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f27, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f27, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x13, 0x657508b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x1f414def # load x3 with 32 MSBs 0x000000001f414def
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f414def
sw x3, 0(x2) # store x3 (0x1f414def) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000001f414def from memory into f24
fnmadd.d f13, f25, f5, f24, dyn # perform operation
fnmadd.d f13, f25, f5, f24, rdn # perform operation
fnmadd.d f13, f25, f5, f24, rmm # perform operation
fnmadd.d f13, f25, f5, f24, rne # perform operation
fnmadd.d f13, f25, f5, f24, rtz # perform operation
fnmadd.d f13, f25, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f25, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f25, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x12, 0x15098504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0xc1cd7457 # load x3 with 32 MSBs 0x00000000c1cd7457
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1cd7457
sw x3, 0(x2) # store x3 (0xc1cd7457) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c1cd7457 from memory into f20
fnmadd.d f12, f9, f11, f20, dyn # perform operation
fnmadd.d f12, f9, f11, f20, rdn # perform operation
fnmadd.d f12, f9, f11, f20, rmm # perform operation
fnmadd.d f12, f9, f11, f20, rne # perform operation
fnmadd.d f12, f9, f11, f20, rtz # perform operation
fnmadd.d f12, f9, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f9, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f9, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f9, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f9, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f9, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x18, 0x39f7ee91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x8cdde055 # load x3 with 32 MSBs 0x000000008cdde055
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008cdde055
sw x3, 0(x2) # store x3 (0x8cdde055) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008cdde055 from memory into f2
fnmadd.d f18, f28, f19, f2, dyn # perform operation
fnmadd.d f18, f28, f19, f2, rdn # perform operation
fnmadd.d f18, f28, f19, f2, rmm # perform operation
fnmadd.d f18, f28, f19, f2, rne # perform operation
fnmadd.d f18, f28, f19, f2, rtz # perform operation
fnmadd.d f18, f28, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f28, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x11, 0xbc8f74bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x2fc48a9a # load x3 with 32 MSBs 0x000000002fc48a9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002fc48a9a
sw x3, 0(x2) # store x3 (0x2fc48a9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002fc48a9a from memory into f31
fnmadd.d f11, f23, f24, f31, dyn # perform operation
fnmadd.d f11, f23, f24, f31, rdn # perform operation
fnmadd.d f11, f23, f24, f31, rmm # perform operation
fnmadd.d f11, f23, f24, f31, rne # perform operation
fnmadd.d f11, f23, f24, f31, rtz # perform operation
fnmadd.d f11, f23, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f23, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f23, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f23, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f23, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f23, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x8, 0x1e732c0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x8d8e699e # load x3 with 32 MSBs 0x000000008d8e699e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d8e699e
sw x3, 0(x2) # store x3 (0x8d8e699e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008d8e699e from memory into f12
fnmadd.d f8, f18, f21, f12, dyn # perform operation
fnmadd.d f8, f18, f21, f12, rdn # perform operation
fnmadd.d f8, f18, f21, f12, rmm # perform operation
fnmadd.d f8, f18, f21, f12, rne # perform operation
fnmadd.d f8, f18, f21, f12, rtz # perform operation
fnmadd.d f8, f18, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f18, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f18, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f18, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f18, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f18, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x23, 0xba68f415 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x857c1a3f # load x3 with 32 MSBs 0x00000000857c1a3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000857c1a3f
sw x3, 0(x2) # store x3 (0x857c1a3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000857c1a3f from memory into f14
fnmadd.d f23, f9, f19, f14, dyn # perform operation
fnmadd.d f23, f9, f19, f14, rdn # perform operation
fnmadd.d f23, f9, f19, f14, rmm # perform operation
fnmadd.d f23, f9, f19, f14, rne # perform operation
fnmadd.d f23, f9, f19, f14, rtz # perform operation
fnmadd.d f23, f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f9, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x17, 0xb6b19e17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xc6dadb08 # load x3 with 32 MSBs 0x00000000c6dadb08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6dadb08
sw x3, 0(x2) # store x3 (0xc6dadb08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c6dadb08 from memory into f28
fnmadd.d f17, f24, f3, f28, dyn # perform operation
fnmadd.d f17, f24, f3, f28, rdn # perform operation
fnmadd.d f17, f24, f3, f28, rmm # perform operation
fnmadd.d f17, f24, f3, f28, rne # perform operation
fnmadd.d f17, f24, f3, f28, rtz # perform operation
fnmadd.d f17, f24, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x15, 0x8cea513f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x809bf49a # load x3 with 32 MSBs 0x00000000809bf49a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000809bf49a
sw x3, 0(x2) # store x3 (0x809bf49a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000809bf49a from memory into f5
fnmadd.d f15, f19, f14, f5, dyn # perform operation
fnmadd.d f15, f19, f14, f5, rdn # perform operation
fnmadd.d f15, f19, f14, f5, rmm # perform operation
fnmadd.d f15, f19, f14, f5, rne # perform operation
fnmadd.d f15, f19, f14, f5, rtz # perform operation
fnmadd.d f15, f19, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f19, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f19, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f19, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f19, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f19, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x8, 0x53097c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x297ad773 # load x3 with 32 MSBs 0x00000000297ad773
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000297ad773
sw x3, 0(x2) # store x3 (0x297ad773) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000297ad773 from memory into f2
fnmadd.d f8, f21, f15, f2, dyn # perform operation
fnmadd.d f8, f21, f15, f2, rdn # perform operation
fnmadd.d f8, f21, f15, f2, rmm # perform operation
fnmadd.d f8, f21, f15, f2, rne # perform operation
fnmadd.d f8, f21, f15, f2, rtz # perform operation
fnmadd.d f8, f21, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f21, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x15, 0xb207953d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0xb372cf06 # load x3 with 32 MSBs 0x00000000b372cf06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b372cf06
sw x3, 0(x2) # store x3 (0xb372cf06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b372cf06 from memory into f30
fnmadd.d f15, f4, f27, f30, dyn # perform operation
fnmadd.d f15, f4, f27, f30, rdn # perform operation
fnmadd.d f15, f4, f27, f30, rmm # perform operation
fnmadd.d f15, f4, f27, f30, rne # perform operation
fnmadd.d f15, f4, f27, f30, rtz # perform operation
fnmadd.d f15, f4, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f4, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x5, 0x3b679da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x5a9194c7 # load x3 with 32 MSBs 0x000000005a9194c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a9194c7
sw x3, 0(x2) # store x3 (0x5a9194c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005a9194c7 from memory into f12
fnmadd.d f5, f26, f3, f12, dyn # perform operation
fnmadd.d f5, f26, f3, f12, rdn # perform operation
fnmadd.d f5, f26, f3, f12, rmm # perform operation
fnmadd.d f5, f26, f3, f12, rne # perform operation
fnmadd.d f5, f26, f3, f12, rtz # perform operation
fnmadd.d f5, f26, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f26, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x8, 0xa730e0ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0x2ca551d4 # load x3 with 32 MSBs 0x000000002ca551d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ca551d4
sw x3, 0(x2) # store x3 (0x2ca551d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002ca551d4 from memory into f12
fnmadd.d f8, f5, f1, f12, dyn # perform operation
fnmadd.d f8, f5, f1, f12, rdn # perform operation
fnmadd.d f8, f5, f1, f12, rmm # perform operation
fnmadd.d f8, f5, f1, f12, rne # perform operation
fnmadd.d f8, f5, f1, f12, rtz # perform operation
fnmadd.d f8, f5, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f5, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x11, 0x00662538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x805d0816 # load x3 with 32 MSBs 0x00000000805d0816
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000805d0816
sw x3, 0(x2) # store x3 (0x805d0816) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000805d0816 from memory into f31
fnmadd.d f11, f4, f18, f31, dyn # perform operation
fnmadd.d f11, f4, f18, f31, rdn # perform operation
fnmadd.d f11, f4, f18, f31, rmm # perform operation
fnmadd.d f11, f4, f18, f31, rne # perform operation
fnmadd.d f11, f4, f18, f31, rtz # perform operation
fnmadd.d f11, f4, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f4, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f4, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f4, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f4, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f4, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x5, 0x5ef4efff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xee90ce74 # load x3 with 32 MSBs 0x00000000ee90ce74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee90ce74
sw x3, 0(x2) # store x3 (0xee90ce74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ee90ce74 from memory into f27
fnmadd.d f5, f7, f31, f27, dyn # perform operation
fnmadd.d f5, f7, f31, f27, rdn # perform operation
fnmadd.d f5, f7, f31, f27, rmm # perform operation
fnmadd.d f5, f7, f31, f27, rne # perform operation
fnmadd.d f5, f7, f31, f27, rtz # perform operation
fnmadd.d f5, f7, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f7, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f7, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x4, 0x8335440b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
li x3, 0xaa730cc9 # load x3 with 32 MSBs 0x00000000aa730cc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa730cc9
sw x3, 0(x2) # store x3 (0xaa730cc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000aa730cc9 from memory into f16
fnmadd.d f4, f11, f15, f16, dyn # perform operation
fnmadd.d f4, f11, f15, f16, rdn # perform operation
fnmadd.d f4, f11, f15, f16, rmm # perform operation
fnmadd.d f4, f11, f15, f16, rne # perform operation
fnmadd.d f4, f11, f15, f16, rtz # perform operation
fnmadd.d f4, f11, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f11, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x5, 0x6f8dcd42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xe96b7a9e # load x3 with 32 MSBs 0x00000000e96b7a9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e96b7a9e
sw x3, 0(x2) # store x3 (0xe96b7a9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e96b7a9e from memory into f4
fnmadd.d f5, f29, f26, f4, dyn # perform operation
fnmadd.d f5, f29, f26, f4, rdn # perform operation
fnmadd.d f5, f29, f26, f4, rmm # perform operation
fnmadd.d f5, f29, f26, f4, rne # perform operation
fnmadd.d f5, f29, f26, f4, rtz # perform operation
fnmadd.d f5, f29, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f29, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x25, 0x9187b402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xb3e9346b # load x3 with 32 MSBs 0x00000000b3e9346b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e9346b
sw x3, 0(x2) # store x3 (0xb3e9346b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b3e9346b from memory into f12
fnmadd.d f25, f3, f6, f12, dyn # perform operation
fnmadd.d f25, f3, f6, f12, rdn # perform operation
fnmadd.d f25, f3, f6, f12, rmm # perform operation
fnmadd.d f25, f3, f6, f12, rne # perform operation
fnmadd.d f25, f3, f6, f12, rtz # perform operation
fnmadd.d f25, f3, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f3, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x11, 0x5e3b0ce6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x1243ff7b # load x3 with 32 MSBs 0x000000001243ff7b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001243ff7b
sw x3, 0(x2) # store x3 (0x1243ff7b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001243ff7b from memory into f31
fnmadd.d f11, f10, f16, f31, dyn # perform operation
fnmadd.d f11, f10, f16, f31, rdn # perform operation
fnmadd.d f11, f10, f16, f31, rmm # perform operation
fnmadd.d f11, f10, f16, f31, rne # perform operation
fnmadd.d f11, f10, f16, f31, rtz # perform operation
fnmadd.d f11, f10, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x11, 0x49593514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x510aeff4 # load x3 with 32 MSBs 0x00000000510aeff4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000510aeff4
sw x3, 0(x2) # store x3 (0x510aeff4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000510aeff4 from memory into f9
fnmadd.d f11, f16, f24, f9, dyn # perform operation
fnmadd.d f11, f16, f24, f9, rdn # perform operation
fnmadd.d f11, f16, f24, f9, rmm # perform operation
fnmadd.d f11, f16, f24, f9, rne # perform operation
fnmadd.d f11, f16, f24, f9, rtz # perform operation
fnmadd.d f11, f16, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x10, 0xae752775 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x8a4ec1ed # load x3 with 32 MSBs 0x000000008a4ec1ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a4ec1ed
sw x3, 0(x2) # store x3 (0x8a4ec1ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008a4ec1ed from memory into f2
fnmadd.d f10, f14, f16, f2, dyn # perform operation
fnmadd.d f10, f14, f16, f2, rdn # perform operation
fnmadd.d f10, f14, f16, f2, rmm # perform operation
fnmadd.d f10, f14, f16, f2, rne # perform operation
fnmadd.d f10, f14, f16, f2, rtz # perform operation
fnmadd.d f10, f14, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f14, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x19, 0x70edb124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xd0e6f267 # load x3 with 32 MSBs 0x00000000d0e6f267
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0e6f267
sw x3, 0(x2) # store x3 (0xd0e6f267) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d0e6f267 from memory into f14
fnmadd.d f19, f4, f29, f14, dyn # perform operation
fnmadd.d f19, f4, f29, f14, rdn # perform operation
fnmadd.d f19, f4, f29, f14, rmm # perform operation
fnmadd.d f19, f4, f29, f14, rne # perform operation
fnmadd.d f19, f4, f29, f14, rtz # perform operation
fnmadd.d f19, f4, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f4, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f4, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f4, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f4, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f4, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x10, 0x21c13aee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0x753091f2 # load x3 with 32 MSBs 0x00000000753091f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000753091f2
sw x3, 0(x2) # store x3 (0x753091f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000753091f2 from memory into f3
fnmadd.d f10, f4, f26, f3, dyn # perform operation
fnmadd.d f10, f4, f26, f3, rdn # perform operation
fnmadd.d f10, f4, f26, f3, rmm # perform operation
fnmadd.d f10, f4, f26, f3, rne # perform operation
fnmadd.d f10, f4, f26, f3, rtz # perform operation
fnmadd.d f10, f4, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f4, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f4, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x16, 0xe7225e08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xc1bc9c3c # load x3 with 32 MSBs 0x00000000c1bc9c3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1bc9c3c
sw x3, 0(x2) # store x3 (0xc1bc9c3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c1bc9c3c from memory into f6
fnmadd.d f16, f27, f15, f6, dyn # perform operation
fnmadd.d f16, f27, f15, f6, rdn # perform operation
fnmadd.d f16, f27, f15, f6, rmm # perform operation
fnmadd.d f16, f27, f15, f6, rne # perform operation
fnmadd.d f16, f27, f15, f6, rtz # perform operation
fnmadd.d f16, f27, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f27, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f27, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f27, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f27, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f27, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x8, 0xb0fd6f06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x97376502 # load x3 with 32 MSBs 0x0000000097376502
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097376502
sw x3, 0(x2) # store x3 (0x97376502) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000097376502 from memory into f6
fnmadd.d f8, f13, f26, f6, dyn # perform operation
fnmadd.d f8, f13, f26, f6, rdn # perform operation
fnmadd.d f8, f13, f26, f6, rmm # perform operation
fnmadd.d f8, f13, f26, f6, rne # perform operation
fnmadd.d f8, f13, f26, f6, rtz # perform operation
fnmadd.d f8, f13, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f13, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x13, 0x3808238e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x4e91126c # load x3 with 32 MSBs 0x000000004e91126c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e91126c
sw x3, 0(x2) # store x3 (0x4e91126c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004e91126c from memory into f24
fnmadd.d f13, f14, f27, f24, dyn # perform operation
fnmadd.d f13, f14, f27, f24, rdn # perform operation
fnmadd.d f13, f14, f27, f24, rmm # perform operation
fnmadd.d f13, f14, f27, f24, rne # perform operation
fnmadd.d f13, f14, f27, f24, rtz # perform operation
fnmadd.d f13, f14, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f14, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f14, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f14, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f14, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f14, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x25, 0xd98aa559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x74f5f97b # load x3 with 32 MSBs 0x0000000074f5f97b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074f5f97b
sw x3, 0(x2) # store x3 (0x74f5f97b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000074f5f97b from memory into f22
fnmadd.d f25, f8, f11, f22, dyn # perform operation
fnmadd.d f25, f8, f11, f22, rdn # perform operation
fnmadd.d f25, f8, f11, f22, rmm # perform operation
fnmadd.d f25, f8, f11, f22, rne # perform operation
fnmadd.d f25, f8, f11, f22, rtz # perform operation
fnmadd.d f25, f8, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f8, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f8, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x18, 0xfe5aa53a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x1263cbb5 # load x3 with 32 MSBs 0x000000001263cbb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001263cbb5
sw x3, 0(x2) # store x3 (0x1263cbb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001263cbb5 from memory into f4
fnmadd.d f18, f14, f20, f4, dyn # perform operation
fnmadd.d f18, f14, f20, f4, rdn # perform operation
fnmadd.d f18, f14, f20, f4, rmm # perform operation
fnmadd.d f18, f14, f20, f4, rne # perform operation
fnmadd.d f18, f14, f20, f4, rtz # perform operation
fnmadd.d f18, f14, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f14, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f14, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f14, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f14, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f14, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x9, 0x673d1441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x5837aba0 # load x3 with 32 MSBs 0x000000005837aba0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005837aba0
sw x3, 0(x2) # store x3 (0x5837aba0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005837aba0 from memory into f30
fnmadd.d f9, f2, f6, f30, dyn # perform operation
fnmadd.d f9, f2, f6, f30, rdn # perform operation
fnmadd.d f9, f2, f6, f30, rmm # perform operation
fnmadd.d f9, f2, f6, f30, rne # perform operation
fnmadd.d f9, f2, f6, f30, rtz # perform operation
fnmadd.d f9, f2, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f2, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x16, 0xc49983a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x5841b3d6 # load x3 with 32 MSBs 0x000000005841b3d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005841b3d6
sw x3, 0(x2) # store x3 (0x5841b3d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000005841b3d6 from memory into f28
fnmadd.d f16, f18, f9, f28, dyn # perform operation
fnmadd.d f16, f18, f9, f28, rdn # perform operation
fnmadd.d f16, f18, f9, f28, rmm # perform operation
fnmadd.d f16, f18, f9, f28, rne # perform operation
fnmadd.d f16, f18, f9, f28, rtz # perform operation
fnmadd.d f16, f18, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f18, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f18, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f18, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f18, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f18, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x7, 0xa3e0fe0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x3e72e95f # load x3 with 32 MSBs 0x000000003e72e95f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e72e95f
sw x3, 0(x2) # store x3 (0x3e72e95f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000003e72e95f from memory into f11
fnmadd.d f7, f9, f10, f11, dyn # perform operation
fnmadd.d f7, f9, f10, f11, rdn # perform operation
fnmadd.d f7, f9, f10, f11, rmm # perform operation
fnmadd.d f7, f9, f10, f11, rne # perform operation
fnmadd.d f7, f9, f10, f11, rtz # perform operation
fnmadd.d f7, f9, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f9, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f9, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x21, 0x27bb2243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x1b9b9254 # load x3 with 32 MSBs 0x000000001b9b9254
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b9b9254
sw x3, 0(x2) # store x3 (0x1b9b9254) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001b9b9254 from memory into f8
fnmadd.d f21, f5, f17, f8, dyn # perform operation
fnmadd.d f21, f5, f17, f8, rdn # perform operation
fnmadd.d f21, f5, f17, f8, rmm # perform operation
fnmadd.d f21, f5, f17, f8, rne # perform operation
fnmadd.d f21, f5, f17, f8, rtz # perform operation
fnmadd.d f21, f5, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f5, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f5, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f5, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f5, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f5, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x22, 0xac79d770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0xb3e9a8c3 # load x3 with 32 MSBs 0x00000000b3e9a8c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3e9a8c3
sw x3, 0(x2) # store x3 (0xb3e9a8c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b3e9a8c3 from memory into f23
fnmadd.d f22, f20, f24, f23, dyn # perform operation
fnmadd.d f22, f20, f24, f23, rdn # perform operation
fnmadd.d f22, f20, f24, f23, rmm # perform operation
fnmadd.d f22, f20, f24, f23, rne # perform operation
fnmadd.d f22, f20, f24, f23, rtz # perform operation
fnmadd.d f22, f20, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f20, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x2, 0x3545b624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x0405ee01 # load x3 with 32 MSBs 0x000000000405ee01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000405ee01
sw x3, 0(x2) # store x3 (0x0405ee01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000405ee01 from memory into f9
fnmadd.d f2, f4, f24, f9, dyn # perform operation
fnmadd.d f2, f4, f24, f9, rdn # perform operation
fnmadd.d f2, f4, f24, f9, rmm # perform operation
fnmadd.d f2, f4, f24, f9, rne # perform operation
fnmadd.d f2, f4, f24, f9, rtz # perform operation
fnmadd.d f2, f4, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f4, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f4, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x10, 0xf36165e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x5c167f79 # load x3 with 32 MSBs 0x000000005c167f79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c167f79
sw x3, 0(x2) # store x3 (0x5c167f79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005c167f79 from memory into f14
fnmadd.d f10, f5, f26, f14, dyn # perform operation
fnmadd.d f10, f5, f26, f14, rdn # perform operation
fnmadd.d f10, f5, f26, f14, rmm # perform operation
fnmadd.d f10, f5, f26, f14, rne # perform operation
fnmadd.d f10, f5, f26, f14, rtz # perform operation
fnmadd.d f10, f5, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f5, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x7, 0x24020a8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x691c0750 # load x3 with 32 MSBs 0x00000000691c0750
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000691c0750
sw x3, 0(x2) # store x3 (0x691c0750) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000691c0750 from memory into f11
fnmadd.d f7, f18, f13, f11, dyn # perform operation
fnmadd.d f7, f18, f13, f11, rdn # perform operation
fnmadd.d f7, f18, f13, f11, rmm # perform operation
fnmadd.d f7, f18, f13, f11, rne # perform operation
fnmadd.d f7, f18, f13, f11, rtz # perform operation
fnmadd.d f7, f18, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f18, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x21, 0xd6276632 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0xcfdf5745 # load x3 with 32 MSBs 0x00000000cfdf5745
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfdf5745
sw x3, 0(x2) # store x3 (0xcfdf5745) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cfdf5745 from memory into f14
fnmadd.d f21, f5, f26, f14, dyn # perform operation
fnmadd.d f21, f5, f26, f14, rdn # perform operation
fnmadd.d f21, f5, f26, f14, rmm # perform operation
fnmadd.d f21, f5, f26, f14, rne # perform operation
fnmadd.d f21, f5, f26, f14, rtz # perform operation
fnmadd.d f21, f5, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f5, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x27, 0xa259dcec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x24c8ccec # load x3 with 32 MSBs 0x0000000024c8ccec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024c8ccec
sw x3, 0(x2) # store x3 (0x24c8ccec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000024c8ccec from memory into f8
fnmadd.d f27, f26, f11, f8, dyn # perform operation
fnmadd.d f27, f26, f11, f8, rdn # perform operation
fnmadd.d f27, f26, f11, f8, rmm # perform operation
fnmadd.d f27, f26, f11, f8, rne # perform operation
fnmadd.d f27, f26, f11, f8, rtz # perform operation
fnmadd.d f27, f26, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x15, 0x171dbb15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xa36c5469 # load x3 with 32 MSBs 0x00000000a36c5469
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a36c5469
sw x3, 0(x2) # store x3 (0xa36c5469) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a36c5469 from memory into f26
fnmadd.d f15, f29, f16, f26, dyn # perform operation
fnmadd.d f15, f29, f16, f26, rdn # perform operation
fnmadd.d f15, f29, f16, f26, rmm # perform operation
fnmadd.d f15, f29, f16, f26, rne # perform operation
fnmadd.d f15, f29, f16, f26, rtz # perform operation
fnmadd.d f15, f29, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f29, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x15, 0xafcf91f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0x12144e7f # load x3 with 32 MSBs 0x0000000012144e7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012144e7f
sw x3, 0(x2) # store x3 (0x12144e7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000012144e7f from memory into f10
fnmadd.d f15, f26, f9, f10, dyn # perform operation
fnmadd.d f15, f26, f9, f10, rdn # perform operation
fnmadd.d f15, f26, f9, f10, rmm # perform operation
fnmadd.d f15, f26, f9, f10, rne # perform operation
fnmadd.d f15, f26, f9, f10, rtz # perform operation
fnmadd.d f15, f26, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f26, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f26, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x28, 0x5f1d3191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0xdff71c6b # load x3 with 32 MSBs 0x00000000dff71c6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dff71c6b
sw x3, 0(x2) # store x3 (0xdff71c6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000dff71c6b from memory into f29
fnmadd.d f28, f9, f5, f29, dyn # perform operation
fnmadd.d f28, f9, f5, f29, rdn # perform operation
fnmadd.d f28, f9, f5, f29, rmm # perform operation
fnmadd.d f28, f9, f5, f29, rne # perform operation
fnmadd.d f28, f9, f5, f29, rtz # perform operation
fnmadd.d f28, f9, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f9, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f9, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x3, 0x25e5c430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x508411a5 # load x3 with 32 MSBs 0x00000000508411a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000508411a5
sw x3, 0(x2) # store x3 (0x508411a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000508411a5 from memory into f2
fnmadd.d f3, f15, f21, f2, dyn # perform operation
fnmadd.d f3, f15, f21, f2, rdn # perform operation
fnmadd.d f3, f15, f21, f2, rmm # perform operation
fnmadd.d f3, f15, f21, f2, rne # perform operation
fnmadd.d f3, f15, f21, f2, rtz # perform operation
fnmadd.d f3, f15, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f15, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x1, 0x38354fd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x8ad7c3a7 # load x3 with 32 MSBs 0x000000008ad7c3a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ad7c3a7
sw x3, 0(x2) # store x3 (0x8ad7c3a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008ad7c3a7 from memory into f25
fnmadd.d f1, f15, f10, f25, dyn # perform operation
fnmadd.d f1, f15, f10, f25, rdn # perform operation
fnmadd.d f1, f15, f10, f25, rmm # perform operation
fnmadd.d f1, f15, f10, f25, rne # perform operation
fnmadd.d f1, f15, f10, f25, rtz # perform operation
fnmadd.d f1, f15, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x1, 0x2d56a8cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x0cc0ea13 # load x3 with 32 MSBs 0x000000000cc0ea13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cc0ea13
sw x3, 0(x2) # store x3 (0x0cc0ea13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000000cc0ea13 from memory into f23
fnmadd.d f1, f24, f6, f23, dyn # perform operation
fnmadd.d f1, f24, f6, f23, rdn # perform operation
fnmadd.d f1, f24, f6, f23, rmm # perform operation
fnmadd.d f1, f24, f6, f23, rne # perform operation
fnmadd.d f1, f24, f6, f23, rtz # perform operation
fnmadd.d f1, f24, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f24, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x4, 0x15b793ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x5f1f23ad # load x3 with 32 MSBs 0x000000005f1f23ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f1f23ad
sw x3, 0(x2) # store x3 (0x5f1f23ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005f1f23ad from memory into f26
fnmadd.d f4, f5, f9, f26, dyn # perform operation
fnmadd.d f4, f5, f9, f26, rdn # perform operation
fnmadd.d f4, f5, f9, f26, rmm # perform operation
fnmadd.d f4, f5, f9, f26, rne # perform operation
fnmadd.d f4, f5, f9, f26, rtz # perform operation
fnmadd.d f4, f5, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f5, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f5, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f5, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f5, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f5, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x12, 0xb88913f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x221b14ed # load x3 with 32 MSBs 0x00000000221b14ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000221b14ed
sw x3, 0(x2) # store x3 (0x221b14ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000221b14ed from memory into f10
fnmadd.d f12, f13, f23, f10, dyn # perform operation
fnmadd.d f12, f13, f23, f10, rdn # perform operation
fnmadd.d f12, f13, f23, f10, rmm # perform operation
fnmadd.d f12, f13, f23, f10, rne # perform operation
fnmadd.d f12, f13, f23, f10, rtz # perform operation
fnmadd.d f12, f13, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x9, 0xfe914aeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x50e27e2d # load x3 with 32 MSBs 0x0000000050e27e2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050e27e2d
sw x3, 0(x2) # store x3 (0x50e27e2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000050e27e2d from memory into f5
fnmadd.d f9, f31, f6, f5, dyn # perform operation
fnmadd.d f9, f31, f6, f5, rdn # perform operation
fnmadd.d f9, f31, f6, f5, rmm # perform operation
fnmadd.d f9, f31, f6, f5, rne # perform operation
fnmadd.d f9, f31, f6, f5, rtz # perform operation
fnmadd.d f9, f31, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f31, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f31, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x25, 0x8799901e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0xf02ca7c9 # load x3 with 32 MSBs 0x00000000f02ca7c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f02ca7c9
sw x3, 0(x2) # store x3 (0xf02ca7c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f02ca7c9 from memory into f11
fnmadd.d f25, f31, f6, f11, dyn # perform operation
fnmadd.d f25, f31, f6, f11, rdn # perform operation
fnmadd.d f25, f31, f6, f11, rmm # perform operation
fnmadd.d f25, f31, f6, f11, rne # perform operation
fnmadd.d f25, f31, f6, f11, rtz # perform operation
fnmadd.d f25, f31, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f31, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f31, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f31, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f31, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f31, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x16, 0x71b6152a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xb40d399b # load x3 with 32 MSBs 0x00000000b40d399b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b40d399b
sw x3, 0(x2) # store x3 (0xb40d399b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b40d399b from memory into f7
fnmadd.d f16, f3, f26, f7, dyn # perform operation
fnmadd.d f16, f3, f26, f7, rdn # perform operation
fnmadd.d f16, f3, f26, f7, rmm # perform operation
fnmadd.d f16, f3, f26, f7, rne # perform operation
fnmadd.d f16, f3, f26, f7, rtz # perform operation
fnmadd.d f16, f3, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f3, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x8, 0x9df330e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x9ae370cb # load x3 with 32 MSBs 0x000000009ae370cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ae370cb
sw x3, 0(x2) # store x3 (0x9ae370cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009ae370cb from memory into f18
fnmadd.d f8, f12, f30, f18, dyn # perform operation
fnmadd.d f8, f12, f30, f18, rdn # perform operation
fnmadd.d f8, f12, f30, f18, rmm # perform operation
fnmadd.d f8, f12, f30, f18, rne # perform operation
fnmadd.d f8, f12, f30, f18, rtz # perform operation
fnmadd.d f8, f12, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x21, 0xc2b16731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x09bfdaf7 # load x3 with 32 MSBs 0x0000000009bfdaf7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009bfdaf7
sw x3, 0(x2) # store x3 (0x09bfdaf7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000009bfdaf7 from memory into f14
fnmadd.d f21, f18, f26, f14, dyn # perform operation
fnmadd.d f21, f18, f26, f14, rdn # perform operation
fnmadd.d f21, f18, f26, f14, rmm # perform operation
fnmadd.d f21, f18, f26, f14, rne # perform operation
fnmadd.d f21, f18, f26, f14, rtz # perform operation
fnmadd.d f21, f18, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f18, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x5, 0x37043e11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xe0a69b0b # load x3 with 32 MSBs 0x00000000e0a69b0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0a69b0b
sw x3, 0(x2) # store x3 (0xe0a69b0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e0a69b0b from memory into f30
fnmadd.d f5, f27, f16, f30, dyn # perform operation
fnmadd.d f5, f27, f16, f30, rdn # perform operation
fnmadd.d f5, f27, f16, f30, rmm # perform operation
fnmadd.d f5, f27, f16, f30, rne # perform operation
fnmadd.d f5, f27, f16, f30, rtz # perform operation
fnmadd.d f5, f27, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f27, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x20, 0x96e2ce8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0xb9405c02 # load x3 with 32 MSBs 0x00000000b9405c02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9405c02
sw x3, 0(x2) # store x3 (0xb9405c02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b9405c02 from memory into f27
fnmadd.d f20, f22, f17, f27, dyn # perform operation
fnmadd.d f20, f22, f17, f27, rdn # perform operation
fnmadd.d f20, f22, f17, f27, rmm # perform operation
fnmadd.d f20, f22, f17, f27, rne # perform operation
fnmadd.d f20, f22, f17, f27, rtz # perform operation
fnmadd.d f20, f22, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f22, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x17, 0xf3740c50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x50e71684 # load x3 with 32 MSBs 0x0000000050e71684
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050e71684
sw x3, 0(x2) # store x3 (0x50e71684) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000050e71684 from memory into f30
fnmadd.d f17, f23, f31, f30, dyn # perform operation
fnmadd.d f17, f23, f31, f30, rdn # perform operation
fnmadd.d f17, f23, f31, f30, rmm # perform operation
fnmadd.d f17, f23, f31, f30, rne # perform operation
fnmadd.d f17, f23, f31, f30, rtz # perform operation
fnmadd.d f17, f23, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f23, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f23, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x26, 0x6736f1fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x7fa5d0fc # load x3 with 32 MSBs 0x000000007fa5d0fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fa5d0fc
sw x3, 0(x2) # store x3 (0x7fa5d0fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007fa5d0fc from memory into f10
fnmadd.d f26, f25, f17, f10, dyn # perform operation
fnmadd.d f26, f25, f17, f10, rdn # perform operation
fnmadd.d f26, f25, f17, f10, rmm # perform operation
fnmadd.d f26, f25, f17, f10, rne # perform operation
fnmadd.d f26, f25, f17, f10, rtz # perform operation
fnmadd.d f26, f25, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f25, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x9, 0x886fe3d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x4d94a366 # load x3 with 32 MSBs 0x000000004d94a366
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d94a366
sw x3, 0(x2) # store x3 (0x4d94a366) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004d94a366 from memory into f10
fnmadd.d f9, f16, f6, f10, dyn # perform operation
fnmadd.d f9, f16, f6, f10, rdn # perform operation
fnmadd.d f9, f16, f6, f10, rmm # perform operation
fnmadd.d f9, f16, f6, f10, rne # perform operation
fnmadd.d f9, f16, f6, f10, rtz # perform operation
fnmadd.d f9, f16, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f16, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x14, 0xb5be615f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xfa9a476c # load x3 with 32 MSBs 0x00000000fa9a476c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa9a476c
sw x3, 0(x2) # store x3 (0xfa9a476c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000fa9a476c from memory into f31
fnmadd.d f14, f26, f21, f31, dyn # perform operation
fnmadd.d f14, f26, f21, f31, rdn # perform operation
fnmadd.d f14, f26, f21, f31, rmm # perform operation
fnmadd.d f14, f26, f21, f31, rne # perform operation
fnmadd.d f14, f26, f21, f31, rtz # perform operation
fnmadd.d f14, f26, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f26, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f26, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f26, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f26, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f26, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x26, 0x34935db9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xb49cc984 # load x3 with 32 MSBs 0x00000000b49cc984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b49cc984
sw x3, 0(x2) # store x3 (0xb49cc984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000b49cc984 from memory into f17
fnmadd.d f26, f21, f2, f17, dyn # perform operation
fnmadd.d f26, f21, f2, f17, rdn # perform operation
fnmadd.d f26, f21, f2, f17, rmm # perform operation
fnmadd.d f26, f21, f2, f17, rne # perform operation
fnmadd.d f26, f21, f2, f17, rtz # perform operation
fnmadd.d f26, f21, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x1, 0x44b4304a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x80682abe # load x3 with 32 MSBs 0x0000000080682abe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080682abe
sw x3, 0(x2) # store x3 (0x80682abe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000080682abe from memory into f8
fnmadd.d f1, f10, f19, f8, dyn # perform operation
fnmadd.d f1, f10, f19, f8, rdn # perform operation
fnmadd.d f1, f10, f19, f8, rmm # perform operation
fnmadd.d f1, f10, f19, f8, rne # perform operation
fnmadd.d f1, f10, f19, f8, rtz # perform operation
fnmadd.d f1, f10, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f10, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f10, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x4, 0x4fc4c8b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x53ab8a0f # load x3 with 32 MSBs 0x0000000053ab8a0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053ab8a0f
sw x3, 0(x2) # store x3 (0x53ab8a0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000053ab8a0f from memory into f27
fnmadd.d f4, f8, f6, f27, dyn # perform operation
fnmadd.d f4, f8, f6, f27, rdn # perform operation
fnmadd.d f4, f8, f6, f27, rmm # perform operation
fnmadd.d f4, f8, f6, f27, rne # perform operation
fnmadd.d f4, f8, f6, f27, rtz # perform operation
fnmadd.d f4, f8, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f8, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x24, 0x7405208e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xfd81bce6 # load x3 with 32 MSBs 0x00000000fd81bce6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd81bce6
sw x3, 0(x2) # store x3 (0xfd81bce6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fd81bce6 from memory into f12
fnmadd.d f24, f26, f3, f12, dyn # perform operation
fnmadd.d f24, f26, f3, f12, rdn # perform operation
fnmadd.d f24, f26, f3, f12, rmm # perform operation
fnmadd.d f24, f26, f3, f12, rne # perform operation
fnmadd.d f24, f26, f3, f12, rtz # perform operation
fnmadd.d f24, f26, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f26, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x31, 0xe536f5c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0xbfc85876 # load x3 with 32 MSBs 0x00000000bfc85876
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfc85876
sw x3, 0(x2) # store x3 (0xbfc85876) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bfc85876 from memory into f8
fnmadd.d f31, f23, f1, f8, dyn # perform operation
fnmadd.d f31, f23, f1, f8, rdn # perform operation
fnmadd.d f31, f23, f1, f8, rmm # perform operation
fnmadd.d f31, f23, f1, f8, rne # perform operation
fnmadd.d f31, f23, f1, f8, rtz # perform operation
fnmadd.d f31, f23, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f23, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f23, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f23, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f23, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f23, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x16, 0x2f711d00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x4bfb07e9 # load x3 with 32 MSBs 0x000000004bfb07e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004bfb07e9
sw x3, 0(x2) # store x3 (0x4bfb07e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004bfb07e9 from memory into f9
fnmadd.d f16, f20, f31, f9, dyn # perform operation
fnmadd.d f16, f20, f31, f9, rdn # perform operation
fnmadd.d f16, f20, f31, f9, rmm # perform operation
fnmadd.d f16, f20, f31, f9, rne # perform operation
fnmadd.d f16, f20, f31, f9, rtz # perform operation
fnmadd.d f16, f20, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f20, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f20, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x22, 0x6e298a4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x52f44bc6 # load x3 with 32 MSBs 0x0000000052f44bc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052f44bc6
sw x3, 0(x2) # store x3 (0x52f44bc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000052f44bc6 from memory into f9
fnmadd.d f22, f27, f26, f9, dyn # perform operation
fnmadd.d f22, f27, f26, f9, rdn # perform operation
fnmadd.d f22, f27, f26, f9, rmm # perform operation
fnmadd.d f22, f27, f26, f9, rne # perform operation
fnmadd.d f22, f27, f26, f9, rtz # perform operation
fnmadd.d f22, f27, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f27, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f27, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x19, 0x79a28baa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0xaf644859 # load x3 with 32 MSBs 0x00000000af644859
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af644859
sw x3, 0(x2) # store x3 (0xaf644859) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000af644859 from memory into f10
fnmadd.d f19, f12, f6, f10, dyn # perform operation
fnmadd.d f19, f12, f6, f10, rdn # perform operation
fnmadd.d f19, f12, f6, f10, rmm # perform operation
fnmadd.d f19, f12, f6, f10, rne # perform operation
fnmadd.d f19, f12, f6, f10, rtz # perform operation
fnmadd.d f19, f12, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x18, 0x1839187a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x11f8f1c0 # load x3 with 32 MSBs 0x0000000011f8f1c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011f8f1c0
sw x3, 0(x2) # store x3 (0x11f8f1c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000011f8f1c0 from memory into f29
fnmadd.d f18, f22, f24, f29, dyn # perform operation
fnmadd.d f18, f22, f24, f29, rdn # perform operation
fnmadd.d f18, f22, f24, f29, rmm # perform operation
fnmadd.d f18, f22, f24, f29, rne # perform operation
fnmadd.d f18, f22, f24, f29, rtz # perform operation
fnmadd.d f18, f22, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f22, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f22, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f22, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f22, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f22, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x27, 0x01f8e751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x31843dc6 # load x3 with 32 MSBs 0x0000000031843dc6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031843dc6
sw x3, 0(x2) # store x3 (0x31843dc6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000031843dc6 from memory into f15
fnmadd.d f27, f19, f8, f15, dyn # perform operation
fnmadd.d f27, f19, f8, f15, rdn # perform operation
fnmadd.d f27, f19, f8, f15, rmm # perform operation
fnmadd.d f27, f19, f8, f15, rne # perform operation
fnmadd.d f27, f19, f8, f15, rtz # perform operation
fnmadd.d f27, f19, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f19, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x8, 0x60eac2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x21e0f72f # load x3 with 32 MSBs 0x0000000021e0f72f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021e0f72f
sw x3, 0(x2) # store x3 (0x21e0f72f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000021e0f72f from memory into f14
fnmadd.d f8, f23, f30, f14, dyn # perform operation
fnmadd.d f8, f23, f30, f14, rdn # perform operation
fnmadd.d f8, f23, f30, f14, rmm # perform operation
fnmadd.d f8, f23, f30, f14, rne # perform operation
fnmadd.d f8, f23, f30, f14, rtz # perform operation
fnmadd.d f8, f23, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f23, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f23, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f23, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f23, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f23, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x20, 0x73d24440 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x6384a4ce # load x3 with 32 MSBs 0x000000006384a4ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006384a4ce
sw x3, 0(x2) # store x3 (0x6384a4ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006384a4ce from memory into f3
fnmadd.d f20, f7, f22, f3, dyn # perform operation
fnmadd.d f20, f7, f22, f3, rdn # perform operation
fnmadd.d f20, f7, f22, f3, rmm # perform operation
fnmadd.d f20, f7, f22, f3, rne # perform operation
fnmadd.d f20, f7, f22, f3, rtz # perform operation
fnmadd.d f20, f7, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f7, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f7, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f7, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f7, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f7, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x22, 0x6a5f9420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x0f5ddebe # load x3 with 32 MSBs 0x000000000f5ddebe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f5ddebe
sw x3, 0(x2) # store x3 (0x0f5ddebe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000f5ddebe from memory into f11
fnmadd.d f22, f12, f21, f11, dyn # perform operation
fnmadd.d f22, f12, f21, f11, rdn # perform operation
fnmadd.d f22, f12, f21, f11, rmm # perform operation
fnmadd.d f22, f12, f21, f11, rne # perform operation
fnmadd.d f22, f12, f21, f11, rtz # perform operation
fnmadd.d f22, f12, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f12, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x7, 0xc8272042 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x89a08a14 # load x3 with 32 MSBs 0x0000000089a08a14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089a08a14
sw x3, 0(x2) # store x3 (0x89a08a14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000089a08a14 from memory into f25
fnmadd.d f7, f29, f18, f25, dyn # perform operation
fnmadd.d f7, f29, f18, f25, rdn # perform operation
fnmadd.d f7, f29, f18, f25, rmm # perform operation
fnmadd.d f7, f29, f18, f25, rne # perform operation
fnmadd.d f7, f29, f18, f25, rtz # perform operation
fnmadd.d f7, f29, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f29, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f29, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x6, 0x0177dc49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0xca806df0 # load x3 with 32 MSBs 0x00000000ca806df0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca806df0
sw x3, 0(x2) # store x3 (0xca806df0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ca806df0 from memory into f18
fnmadd.d f6, f17, f31, f18, dyn # perform operation
fnmadd.d f6, f17, f31, f18, rdn # perform operation
fnmadd.d f6, f17, f31, f18, rmm # perform operation
fnmadd.d f6, f17, f31, f18, rne # perform operation
fnmadd.d f6, f17, f31, f18, rtz # perform operation
fnmadd.d f6, f17, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f17, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f17, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x8, 0x76dabfcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0xfbece46e # load x3 with 32 MSBs 0x00000000fbece46e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbece46e
sw x3, 0(x2) # store x3 (0xfbece46e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000fbece46e from memory into f30
fnmadd.d f8, f29, f11, f30, dyn # perform operation
fnmadd.d f8, f29, f11, f30, rdn # perform operation
fnmadd.d f8, f29, f11, f30, rmm # perform operation
fnmadd.d f8, f29, f11, f30, rne # perform operation
fnmadd.d f8, f29, f11, f30, rtz # perform operation
fnmadd.d f8, f29, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f29, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f29, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f29, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f29, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f29, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x27, 0xa49b439f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0x6911a019 # load x3 with 32 MSBs 0x000000006911a019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006911a019
sw x3, 0(x2) # store x3 (0x6911a019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006911a019 from memory into f25
fnmadd.d f27, f20, f30, f25, dyn # perform operation
fnmadd.d f27, f20, f30, f25, rdn # perform operation
fnmadd.d f27, f20, f30, f25, rmm # perform operation
fnmadd.d f27, f20, f30, f25, rne # perform operation
fnmadd.d f27, f20, f30, f25, rtz # perform operation
fnmadd.d f27, f20, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f20, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x7, 0xeac9a1da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
li x3, 0xf191f4ea # load x3 with 32 MSBs 0x00000000f191f4ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f191f4ea
sw x3, 0(x2) # store x3 (0xf191f4ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f191f4ea from memory into f20
fnmadd.d f7, f9, f13, f20, dyn # perform operation
fnmadd.d f7, f9, f13, f20, rdn # perform operation
fnmadd.d f7, f9, f13, f20, rmm # perform operation
fnmadd.d f7, f9, f13, f20, rne # perform operation
fnmadd.d f7, f9, f13, f20, rtz # perform operation
fnmadd.d f7, f9, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f9, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x2, 0x8a52dcae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x4eaa7574 # load x3 with 32 MSBs 0x000000004eaa7574
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004eaa7574
sw x3, 0(x2) # store x3 (0x4eaa7574) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000004eaa7574 from memory into f25
fnmadd.d f2, f11, f16, f25, dyn # perform operation
fnmadd.d f2, f11, f16, f25, rdn # perform operation
fnmadd.d f2, f11, f16, f25, rmm # perform operation
fnmadd.d f2, f11, f16, f25, rne # perform operation
fnmadd.d f2, f11, f16, f25, rtz # perform operation
fnmadd.d f2, f11, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f11, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x13, 0x76a68c16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0xf74e0736 # load x3 with 32 MSBs 0x00000000f74e0736
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f74e0736
sw x3, 0(x2) # store x3 (0xf74e0736) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f74e0736 from memory into f31
fnmadd.d f13, f3, f9, f31, dyn # perform operation
fnmadd.d f13, f3, f9, f31, rdn # perform operation
fnmadd.d f13, f3, f9, f31, rmm # perform operation
fnmadd.d f13, f3, f9, f31, rne # perform operation
fnmadd.d f13, f3, f9, f31, rtz # perform operation
fnmadd.d f13, f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f3, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x31, 0xbcf961fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xe38500fe # load x3 with 32 MSBs 0x00000000e38500fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e38500fe
sw x3, 0(x2) # store x3 (0xe38500fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e38500fe from memory into f5
fnmadd.d f31, f28, f7, f5, dyn # perform operation
fnmadd.d f31, f28, f7, f5, rdn # perform operation
fnmadd.d f31, f28, f7, f5, rmm # perform operation
fnmadd.d f31, f28, f7, f5, rne # perform operation
fnmadd.d f31, f28, f7, f5, rtz # perform operation
fnmadd.d f31, f28, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f28, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x28, 0x4b761e15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x66352056 # load x3 with 32 MSBs 0x0000000066352056
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066352056
sw x3, 0(x2) # store x3 (0x66352056) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000066352056 from memory into f13
fnmadd.d f28, f9, f7, f13, dyn # perform operation
fnmadd.d f28, f9, f7, f13, rdn # perform operation
fnmadd.d f28, f9, f7, f13, rmm # perform operation
fnmadd.d f28, f9, f7, f13, rne # perform operation
fnmadd.d f28, f9, f7, f13, rtz # perform operation
fnmadd.d f28, f9, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f9, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f9, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f9, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f9, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f9, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x24, 0x7ebae053 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xa9620f4e # load x3 with 32 MSBs 0x00000000a9620f4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9620f4e
sw x3, 0(x2) # store x3 (0xa9620f4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000a9620f4e from memory into f1
fnmadd.d f24, f9, f31, f1, dyn # perform operation
fnmadd.d f24, f9, f31, f1, rdn # perform operation
fnmadd.d f24, f9, f31, f1, rmm # perform operation
fnmadd.d f24, f9, f31, f1, rne # perform operation
fnmadd.d f24, f9, f31, f1, rtz # perform operation
fnmadd.d f24, f9, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f9, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f9, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f9, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f9, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f9, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x18, 0x93be1d1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0xe438ed63 # load x3 with 32 MSBs 0x00000000e438ed63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e438ed63
sw x3, 0(x2) # store x3 (0xe438ed63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e438ed63 from memory into f19
fnmadd.d f18, f7, f1, f19, dyn # perform operation
fnmadd.d f18, f7, f1, f19, rdn # perform operation
fnmadd.d f18, f7, f1, f19, rmm # perform operation
fnmadd.d f18, f7, f1, f19, rne # perform operation
fnmadd.d f18, f7, f1, f19, rtz # perform operation
fnmadd.d f18, f7, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f7, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x7, 0x12c3920d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0xb53575a8 # load x3 with 32 MSBs 0x00000000b53575a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b53575a8
sw x3, 0(x2) # store x3 (0xb53575a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b53575a8 from memory into f28
fnmadd.d f7, f3, f29, f28, dyn # perform operation
fnmadd.d f7, f3, f29, f28, rdn # perform operation
fnmadd.d f7, f3, f29, f28, rmm # perform operation
fnmadd.d f7, f3, f29, f28, rne # perform operation
fnmadd.d f7, f3, f29, f28, rtz # perform operation
fnmadd.d f7, f3, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x7, 0xd767d508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x969246a0 # load x3 with 32 MSBs 0x00000000969246a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000969246a0
sw x3, 0(x2) # store x3 (0x969246a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000969246a0 from memory into f26
fnmadd.d f7, f20, f1, f26, dyn # perform operation
fnmadd.d f7, f20, f1, f26, rdn # perform operation
fnmadd.d f7, f20, f1, f26, rmm # perform operation
fnmadd.d f7, f20, f1, f26, rne # perform operation
fnmadd.d f7, f20, f1, f26, rtz # perform operation
fnmadd.d f7, f20, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f20, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x10, 0x8266e309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xf2316856 # load x3 with 32 MSBs 0x00000000f2316856
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2316856
sw x3, 0(x2) # store x3 (0xf2316856) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f2316856 from memory into f3
fnmadd.d f10, f1, f4, f3, dyn # perform operation
fnmadd.d f10, f1, f4, f3, rdn # perform operation
fnmadd.d f10, f1, f4, f3, rmm # perform operation
fnmadd.d f10, f1, f4, f3, rne # perform operation
fnmadd.d f10, f1, f4, f3, rtz # perform operation
fnmadd.d f10, f1, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f1, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f1, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x10, 0x39ca5006 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xf1b9c891 # load x3 with 32 MSBs 0x00000000f1b9c891
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1b9c891
sw x3, 0(x2) # store x3 (0xf1b9c891) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f1b9c891 from memory into f3
fnmadd.d f10, f23, f15, f3, dyn # perform operation
fnmadd.d f10, f23, f15, f3, rdn # perform operation
fnmadd.d f10, f23, f15, f3, rmm # perform operation
fnmadd.d f10, f23, f15, f3, rne # perform operation
fnmadd.d f10, f23, f15, f3, rtz # perform operation
fnmadd.d f10, f23, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f23, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f23, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x12, 0x99a81dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x168b813a # load x3 with 32 MSBs 0x00000000168b813a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000168b813a
sw x3, 0(x2) # store x3 (0x168b813a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000168b813a from memory into f8
fnmadd.d f12, f13, f6, f8, dyn # perform operation
fnmadd.d f12, f13, f6, f8, rdn # perform operation
fnmadd.d f12, f13, f6, f8, rmm # perform operation
fnmadd.d f12, f13, f6, f8, rne # perform operation
fnmadd.d f12, f13, f6, f8, rtz # perform operation
fnmadd.d f12, f13, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x17, 0xfc6d9441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0x19d548fc # load x3 with 32 MSBs 0x0000000019d548fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019d548fc
sw x3, 0(x2) # store x3 (0x19d548fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000019d548fc from memory into f29
fnmadd.d f17, f3, f26, f29, dyn # perform operation
fnmadd.d f17, f3, f26, f29, rdn # perform operation
fnmadd.d f17, f3, f26, f29, rmm # perform operation
fnmadd.d f17, f3, f26, f29, rne # perform operation
fnmadd.d f17, f3, f26, f29, rtz # perform operation
fnmadd.d f17, f3, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f3, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x23, 0x37709655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
li x3, 0x0db36ce7 # load x3 with 32 MSBs 0x000000000db36ce7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000db36ce7
sw x3, 0(x2) # store x3 (0x0db36ce7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000db36ce7 from memory into f16
fnmadd.d f23, f25, f4, f16, dyn # perform operation
fnmadd.d f23, f25, f4, f16, rdn # perform operation
fnmadd.d f23, f25, f4, f16, rmm # perform operation
fnmadd.d f23, f25, f4, f16, rne # perform operation
fnmadd.d f23, f25, f4, f16, rtz # perform operation
fnmadd.d f23, f25, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f25, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x12, 0x03414b81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xe4bc120b # load x3 with 32 MSBs 0x00000000e4bc120b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4bc120b
sw x3, 0(x2) # store x3 (0xe4bc120b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e4bc120b from memory into f18
fnmadd.d f12, f7, f30, f18, dyn # perform operation
fnmadd.d f12, f7, f30, f18, rdn # perform operation
fnmadd.d f12, f7, f30, f18, rmm # perform operation
fnmadd.d f12, f7, f30, f18, rne # perform operation
fnmadd.d f12, f7, f30, f18, rtz # perform operation
fnmadd.d f12, f7, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x5, 0x84bb5375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0xac8e2493 # load x3 with 32 MSBs 0x00000000ac8e2493
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac8e2493
sw x3, 0(x2) # store x3 (0xac8e2493) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ac8e2493 from memory into f10
fnmadd.d f5, f28, f23, f10, dyn # perform operation
fnmadd.d f5, f28, f23, f10, rdn # perform operation
fnmadd.d f5, f28, f23, f10, rmm # perform operation
fnmadd.d f5, f28, f23, f10, rne # perform operation
fnmadd.d f5, f28, f23, f10, rtz # perform operation
fnmadd.d f5, f28, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f28, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f28, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x15, 0x7260b8ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xd3f6bec4 # load x3 with 32 MSBs 0x00000000d3f6bec4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3f6bec4
sw x3, 0(x2) # store x3 (0xd3f6bec4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d3f6bec4 from memory into f25
fnmadd.d f15, f30, f12, f25, dyn # perform operation
fnmadd.d f15, f30, f12, f25, rdn # perform operation
fnmadd.d f15, f30, f12, f25, rmm # perform operation
fnmadd.d f15, f30, f12, f25, rne # perform operation
fnmadd.d f15, f30, f12, f25, rtz # perform operation
fnmadd.d f15, f30, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f30, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f30, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f30, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f30, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f30, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x26, 0x9e03537b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0xbf72fbb9 # load x3 with 32 MSBs 0x00000000bf72fbb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf72fbb9
sw x3, 0(x2) # store x3 (0xbf72fbb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bf72fbb9 from memory into f11
fnmadd.d f26, f29, f27, f11, dyn # perform operation
fnmadd.d f26, f29, f27, f11, rdn # perform operation
fnmadd.d f26, f29, f27, f11, rmm # perform operation
fnmadd.d f26, f29, f27, f11, rne # perform operation
fnmadd.d f26, f29, f27, f11, rtz # perform operation
fnmadd.d f26, f29, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f29, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f29, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xc213ae84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0x9babf0b8 # load x3 with 32 MSBs 0x000000009babf0b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009babf0b8
sw x3, 0(x2) # store x3 (0x9babf0b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009babf0b8 from memory into f5
fnmadd.d f17, f8, f3, f5, dyn # perform operation
fnmadd.d f17, f8, f3, f5, rdn # perform operation
fnmadd.d f17, f8, f3, f5, rmm # perform operation
fnmadd.d f17, f8, f3, f5, rne # perform operation
fnmadd.d f17, f8, f3, f5, rtz # perform operation
fnmadd.d f17, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x1, 0xbfad3373 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x7c4bcd9f # load x3 with 32 MSBs 0x000000007c4bcd9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c4bcd9f
sw x3, 0(x2) # store x3 (0x7c4bcd9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000007c4bcd9f from memory into f14
fnmadd.d f1, f19, f28, f14, dyn # perform operation
fnmadd.d f1, f19, f28, f14, rdn # perform operation
fnmadd.d f1, f19, f28, f14, rmm # perform operation
fnmadd.d f1, f19, f28, f14, rne # perform operation
fnmadd.d f1, f19, f28, f14, rtz # perform operation
fnmadd.d f1, f19, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x18, 0x5a6ac3af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x83071cd8 # load x3 with 32 MSBs 0x0000000083071cd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083071cd8
sw x3, 0(x2) # store x3 (0x83071cd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000083071cd8 from memory into f13
fnmadd.d f18, f28, f30, f13, dyn # perform operation
fnmadd.d f18, f28, f30, f13, rdn # perform operation
fnmadd.d f18, f28, f30, f13, rmm # perform operation
fnmadd.d f18, f28, f30, f13, rne # perform operation
fnmadd.d f18, f28, f30, f13, rtz # perform operation
fnmadd.d f18, f28, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f28, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f28, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f28, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f28, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f28, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x13, 0x4fc6a102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x4c56ae43 # load x3 with 32 MSBs 0x000000004c56ae43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c56ae43
sw x3, 0(x2) # store x3 (0x4c56ae43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004c56ae43 from memory into f21
fnmadd.d f13, f3, f22, f21, dyn # perform operation
fnmadd.d f13, f3, f22, f21, rdn # perform operation
fnmadd.d f13, f3, f22, f21, rmm # perform operation
fnmadd.d f13, f3, f22, f21, rne # perform operation
fnmadd.d f13, f3, f22, f21, rtz # perform operation
fnmadd.d f13, f3, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f3, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x24, 0xc9d4b900 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x018b9e33 # load x3 with 32 MSBs 0x00000000018b9e33
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000018b9e33
sw x3, 0(x2) # store x3 (0x018b9e33) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000018b9e33 from memory into f6
fnmadd.d f24, f31, f2, f6, dyn # perform operation
fnmadd.d f24, f31, f2, f6, rdn # perform operation
fnmadd.d f24, f31, f2, f6, rmm # perform operation
fnmadd.d f24, f31, f2, f6, rne # perform operation
fnmadd.d f24, f31, f2, f6, rtz # perform operation
fnmadd.d f24, f31, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f31, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x17, 0xc550de8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x983af4b7 # load x3 with 32 MSBs 0x00000000983af4b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000983af4b7
sw x3, 0(x2) # store x3 (0x983af4b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000983af4b7 from memory into f3
fnmadd.d f17, f6, f26, f3, dyn # perform operation
fnmadd.d f17, f6, f26, f3, rdn # perform operation
fnmadd.d f17, f6, f26, f3, rmm # perform operation
fnmadd.d f17, f6, f26, f3, rne # perform operation
fnmadd.d f17, f6, f26, f3, rtz # perform operation
fnmadd.d f17, f6, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x2, 0xd83b065e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x0ad4cc8e # load x3 with 32 MSBs 0x000000000ad4cc8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ad4cc8e
sw x3, 0(x2) # store x3 (0x0ad4cc8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000000ad4cc8e from memory into f19
fnmadd.d f2, f7, f10, f19, dyn # perform operation
fnmadd.d f2, f7, f10, f19, rdn # perform operation
fnmadd.d f2, f7, f10, f19, rmm # perform operation
fnmadd.d f2, f7, f10, f19, rne # perform operation
fnmadd.d f2, f7, f10, f19, rtz # perform operation
fnmadd.d f2, f7, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f7, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f7, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x13, 0xb8b1b1a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x6396c5f8 # load x3 with 32 MSBs 0x000000006396c5f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006396c5f8
sw x3, 0(x2) # store x3 (0x6396c5f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006396c5f8 from memory into f28
fnmadd.d f13, f19, f10, f28, dyn # perform operation
fnmadd.d f13, f19, f10, f28, rdn # perform operation
fnmadd.d f13, f19, f10, f28, rmm # perform operation
fnmadd.d f13, f19, f10, f28, rne # perform operation
fnmadd.d f13, f19, f10, f28, rtz # perform operation
fnmadd.d f13, f19, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x3, 0xc46d94d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x88988a9b # load x3 with 32 MSBs 0x0000000088988a9b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088988a9b
sw x3, 0(x2) # store x3 (0x88988a9b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000088988a9b from memory into f27
fnmadd.d f3, f15, f25, f27, dyn # perform operation
fnmadd.d f3, f15, f25, f27, rdn # perform operation
fnmadd.d f3, f15, f25, f27, rmm # perform operation
fnmadd.d f3, f15, f25, f27, rne # perform operation
fnmadd.d f3, f15, f25, f27, rtz # perform operation
fnmadd.d f3, f15, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f15, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f15, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x31, 0x77db4aa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xbffc2afc # load x3 with 32 MSBs 0x00000000bffc2afc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bffc2afc
sw x3, 0(x2) # store x3 (0xbffc2afc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bffc2afc from memory into f11
fnmadd.d f31, f20, f29, f11, dyn # perform operation
fnmadd.d f31, f20, f29, f11, rdn # perform operation
fnmadd.d f31, f20, f29, f11, rmm # perform operation
fnmadd.d f31, f20, f29, f11, rne # perform operation
fnmadd.d f31, f20, f29, f11, rtz # perform operation
fnmadd.d f31, f20, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f20, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f20, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f20, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f20, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f20, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x1, 0xebae19bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x6703725f # load x3 with 32 MSBs 0x000000006703725f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006703725f
sw x3, 0(x2) # store x3 (0x6703725f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006703725f from memory into f21
fnmadd.d f1, f22, f5, f21, dyn # perform operation
fnmadd.d f1, f22, f5, f21, rdn # perform operation
fnmadd.d f1, f22, f5, f21, rmm # perform operation
fnmadd.d f1, f22, f5, f21, rne # perform operation
fnmadd.d f1, f22, f5, f21, rtz # perform operation
fnmadd.d f1, f22, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f22, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x20, 0xbe00272b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xc89aa4c1 # load x3 with 32 MSBs 0x00000000c89aa4c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c89aa4c1
sw x3, 0(x2) # store x3 (0xc89aa4c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c89aa4c1 from memory into f17
fnmadd.d f20, f14, f5, f17, dyn # perform operation
fnmadd.d f20, f14, f5, f17, rdn # perform operation
fnmadd.d f20, f14, f5, f17, rmm # perform operation
fnmadd.d f20, f14, f5, f17, rne # perform operation
fnmadd.d f20, f14, f5, f17, rtz # perform operation
fnmadd.d f20, f14, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f14, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f14, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f14, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f14, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f14, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x6, 0x6f3746c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xb5638059 # load x3 with 32 MSBs 0x00000000b5638059
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5638059
sw x3, 0(x2) # store x3 (0xb5638059) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b5638059 from memory into f15
fnmadd.d f6, f5, f26, f15, dyn # perform operation
fnmadd.d f6, f5, f26, f15, rdn # perform operation
fnmadd.d f6, f5, f26, f15, rmm # perform operation
fnmadd.d f6, f5, f26, f15, rne # perform operation
fnmadd.d f6, f5, f26, f15, rtz # perform operation
fnmadd.d f6, f5, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f5, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f5, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x6, 0xb7ed3a27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x44506fcc # load x3 with 32 MSBs 0x0000000044506fcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044506fcc
sw x3, 0(x2) # store x3 (0x44506fcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000044506fcc from memory into f1
fnmadd.d f6, f8, f25, f1, dyn # perform operation
fnmadd.d f6, f8, f25, f1, rdn # perform operation
fnmadd.d f6, f8, f25, f1, rmm # perform operation
fnmadd.d f6, f8, f25, f1, rne # perform operation
fnmadd.d f6, f8, f25, f1, rtz # perform operation
fnmadd.d f6, f8, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f8, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x26, 0x3d7dc6e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xb5fba4d4 # load x3 with 32 MSBs 0x00000000b5fba4d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5fba4d4
sw x3, 0(x2) # store x3 (0xb5fba4d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b5fba4d4 from memory into f10
fnmadd.d f26, f19, f5, f10, dyn # perform operation
fnmadd.d f26, f19, f5, f10, rdn # perform operation
fnmadd.d f26, f19, f5, f10, rmm # perform operation
fnmadd.d f26, f19, f5, f10, rne # perform operation
fnmadd.d f26, f19, f5, f10, rtz # perform operation
fnmadd.d f26, f19, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f19, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f19, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x2, 0x18a40cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0x0954bc55 # load x3 with 32 MSBs 0x000000000954bc55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000954bc55
sw x3, 0(x2) # store x3 (0x0954bc55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000954bc55 from memory into f16
fnmadd.d f2, f21, f5, f16, dyn # perform operation
fnmadd.d f2, f21, f5, f16, rdn # perform operation
fnmadd.d f2, f21, f5, f16, rmm # perform operation
fnmadd.d f2, f21, f5, f16, rne # perform operation
fnmadd.d f2, f21, f5, f16, rtz # perform operation
fnmadd.d f2, f21, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x6, 0xb3e2c2fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x35881c79 # load x3 with 32 MSBs 0x0000000035881c79
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035881c79
sw x3, 0(x2) # store x3 (0x35881c79) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000035881c79 from memory into f2
fnmadd.d f6, f15, f11, f2, dyn # perform operation
fnmadd.d f6, f15, f11, f2, rdn # perform operation
fnmadd.d f6, f15, f11, f2, rmm # perform operation
fnmadd.d f6, f15, f11, f2, rne # perform operation
fnmadd.d f6, f15, f11, f2, rtz # perform operation
fnmadd.d f6, f15, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f15, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f15, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x24, 0x3e7f77e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0xd8ce2ee3 # load x3 with 32 MSBs 0x00000000d8ce2ee3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8ce2ee3
sw x3, 0(x2) # store x3 (0xd8ce2ee3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d8ce2ee3 from memory into f6
fnmadd.d f24, f13, f25, f6, dyn # perform operation
fnmadd.d f24, f13, f25, f6, rdn # perform operation
fnmadd.d f24, f13, f25, f6, rmm # perform operation
fnmadd.d f24, f13, f25, f6, rne # perform operation
fnmadd.d f24, f13, f25, f6, rtz # perform operation
fnmadd.d f24, f13, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f13, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x4, 0xb7ec8408 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x9c4bdf5d # load x3 with 32 MSBs 0x000000009c4bdf5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c4bdf5d
sw x3, 0(x2) # store x3 (0x9c4bdf5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009c4bdf5d from memory into f3
fnmadd.d f4, f5, f28, f3, dyn # perform operation
fnmadd.d f4, f5, f28, f3, rdn # perform operation
fnmadd.d f4, f5, f28, f3, rmm # perform operation
fnmadd.d f4, f5, f28, f3, rne # perform operation
fnmadd.d f4, f5, f28, f3, rtz # perform operation
fnmadd.d f4, f5, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f5, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x24, 0x477c4a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x6a686521 # load x3 with 32 MSBs 0x000000006a686521
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a686521
sw x3, 0(x2) # store x3 (0x6a686521) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006a686521 from memory into f5
fnmadd.d f24, f2, f3, f5, dyn # perform operation
fnmadd.d f24, f2, f3, f5, rdn # perform operation
fnmadd.d f24, f2, f3, f5, rmm # perform operation
fnmadd.d f24, f2, f3, f5, rne # perform operation
fnmadd.d f24, f2, f3, f5, rtz # perform operation
fnmadd.d f24, f2, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f2, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x15, 0x940e1815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x7ec7caba # load x3 with 32 MSBs 0x000000007ec7caba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ec7caba
sw x3, 0(x2) # store x3 (0x7ec7caba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007ec7caba from memory into f4
fnmadd.d f15, f11, f30, f4, dyn # perform operation
fnmadd.d f15, f11, f30, f4, rdn # perform operation
fnmadd.d f15, f11, f30, f4, rmm # perform operation
fnmadd.d f15, f11, f30, f4, rne # perform operation
fnmadd.d f15, f11, f30, f4, rtz # perform operation
fnmadd.d f15, f11, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f11, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x4, 0xa6f39f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x9f466170 # load x3 with 32 MSBs 0x000000009f466170
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f466170
sw x3, 0(x2) # store x3 (0x9f466170) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009f466170 from memory into f18
fnmadd.d f4, f25, f29, f18, dyn # perform operation
fnmadd.d f4, f25, f29, f18, rdn # perform operation
fnmadd.d f4, f25, f29, f18, rmm # perform operation
fnmadd.d f4, f25, f29, f18, rne # perform operation
fnmadd.d f4, f25, f29, f18, rtz # perform operation
fnmadd.d f4, f25, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f25, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f25, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x25, 0x92c2574c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xc0a86d47 # load x3 with 32 MSBs 0x00000000c0a86d47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0a86d47
sw x3, 0(x2) # store x3 (0xc0a86d47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c0a86d47 from memory into f21
fnmadd.d f25, f31, f12, f21, dyn # perform operation
fnmadd.d f25, f31, f12, f21, rdn # perform operation
fnmadd.d f25, f31, f12, f21, rmm # perform operation
fnmadd.d f25, f31, f12, f21, rne # perform operation
fnmadd.d f25, f31, f12, f21, rtz # perform operation
fnmadd.d f25, f31, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f31, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f31, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f31, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f31, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f31, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x26, 0xa3ba19ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x1e027ade # load x3 with 32 MSBs 0x000000001e027ade
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e027ade
sw x3, 0(x2) # store x3 (0x1e027ade) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001e027ade from memory into f30
fnmadd.d f26, f5, f14, f30, dyn # perform operation
fnmadd.d f26, f5, f14, f30, rdn # perform operation
fnmadd.d f26, f5, f14, f30, rmm # perform operation
fnmadd.d f26, f5, f14, f30, rne # perform operation
fnmadd.d f26, f5, f14, f30, rtz # perform operation
fnmadd.d f26, f5, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f5, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f5, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f5, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f5, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f5, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x27, 0xe1a2f128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0xdd433a19 # load x3 with 32 MSBs 0x00000000dd433a19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd433a19
sw x3, 0(x2) # store x3 (0xdd433a19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000dd433a19 from memory into f16
fnmadd.d f27, f11, f6, f16, dyn # perform operation
fnmadd.d f27, f11, f6, f16, rdn # perform operation
fnmadd.d f27, f11, f6, f16, rmm # perform operation
fnmadd.d f27, f11, f6, f16, rne # perform operation
fnmadd.d f27, f11, f6, f16, rtz # perform operation
fnmadd.d f27, f11, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f11, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f11, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x6, 0xe5e66ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x1a9c8fa0 # load x3 with 32 MSBs 0x000000001a9c8fa0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a9c8fa0
sw x3, 0(x2) # store x3 (0x1a9c8fa0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001a9c8fa0 from memory into f25
fnmadd.d f6, f15, f28, f25, dyn # perform operation
fnmadd.d f6, f15, f28, f25, rdn # perform operation
fnmadd.d f6, f15, f28, f25, rmm # perform operation
fnmadd.d f6, f15, f28, f25, rne # perform operation
fnmadd.d f6, f15, f28, f25, rtz # perform operation
fnmadd.d f6, f15, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f15, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f15, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x10, 0x470c3af7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0xfee8b0da # load x3 with 32 MSBs 0x00000000fee8b0da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fee8b0da
sw x3, 0(x2) # store x3 (0xfee8b0da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000fee8b0da from memory into f22
fnmadd.d f10, f8, f28, f22, dyn # perform operation
fnmadd.d f10, f8, f28, f22, rdn # perform operation
fnmadd.d f10, f8, f28, f22, rmm # perform operation
fnmadd.d f10, f8, f28, f22, rne # perform operation
fnmadd.d f10, f8, f28, f22, rtz # perform operation
fnmadd.d f10, f8, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x26, 0x60285c29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xfa1670d7 # load x3 with 32 MSBs 0x00000000fa1670d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa1670d7
sw x3, 0(x2) # store x3 (0xfa1670d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fa1670d7 from memory into f10
fnmadd.d f26, f13, f16, f10, dyn # perform operation
fnmadd.d f26, f13, f16, f10, rdn # perform operation
fnmadd.d f26, f13, f16, f10, rmm # perform operation
fnmadd.d f26, f13, f16, f10, rne # perform operation
fnmadd.d f26, f13, f16, f10, rtz # perform operation
fnmadd.d f26, f13, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f13, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x4, 0x27406e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x1108ca43 # load x3 with 32 MSBs 0x000000001108ca43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001108ca43
sw x3, 0(x2) # store x3 (0x1108ca43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001108ca43 from memory into f22
fnmadd.d f4, f26, f12, f22, dyn # perform operation
fnmadd.d f4, f26, f12, f22, rdn # perform operation
fnmadd.d f4, f26, f12, f22, rmm # perform operation
fnmadd.d f4, f26, f12, f22, rne # perform operation
fnmadd.d f4, f26, f12, f22, rtz # perform operation
fnmadd.d f4, f26, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f26, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x29, 0x2b334e55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0xc70e3138 # load x3 with 32 MSBs 0x00000000c70e3138
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c70e3138
sw x3, 0(x2) # store x3 (0xc70e3138) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c70e3138 from memory into f19
fnmadd.d f29, f13, f9, f19, dyn # perform operation
fnmadd.d f29, f13, f9, f19, rdn # perform operation
fnmadd.d f29, f13, f9, f19, rmm # perform operation
fnmadd.d f29, f13, f9, f19, rne # perform operation
fnmadd.d f29, f13, f9, f19, rtz # perform operation
fnmadd.d f29, f13, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f13, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f13, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x25, 0x8d3881bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xd5869c6f # load x3 with 32 MSBs 0x00000000d5869c6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5869c6f
sw x3, 0(x2) # store x3 (0xd5869c6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d5869c6f from memory into f30
fnmadd.d f25, f11, f1, f30, dyn # perform operation
fnmadd.d f25, f11, f1, f30, rdn # perform operation
fnmadd.d f25, f11, f1, f30, rmm # perform operation
fnmadd.d f25, f11, f1, f30, rne # perform operation
fnmadd.d f25, f11, f1, f30, rtz # perform operation
fnmadd.d f25, f11, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f11, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f11, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f11, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f11, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f11, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x30, 0x28016d11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x589655aa # load x3 with 32 MSBs 0x00000000589655aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000589655aa
sw x3, 0(x2) # store x3 (0x589655aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000589655aa from memory into f17
fnmadd.d f30, f29, f2, f17, dyn # perform operation
fnmadd.d f30, f29, f2, f17, rdn # perform operation
fnmadd.d f30, f29, f2, f17, rmm # perform operation
fnmadd.d f30, f29, f2, f17, rne # perform operation
fnmadd.d f30, f29, f2, f17, rtz # perform operation
fnmadd.d f30, f29, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f29, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f29, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f29, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f29, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f29, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x11, 0xc6938900 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x5a78b86b # load x3 with 32 MSBs 0x000000005a78b86b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a78b86b
sw x3, 0(x2) # store x3 (0x5a78b86b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000005a78b86b from memory into f20
fnmadd.d f11, f16, f14, f20, dyn # perform operation
fnmadd.d f11, f16, f14, f20, rdn # perform operation
fnmadd.d f11, f16, f14, f20, rmm # perform operation
fnmadd.d f11, f16, f14, f20, rne # perform operation
fnmadd.d f11, f16, f14, f20, rtz # perform operation
fnmadd.d f11, f16, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x26, 0x7b00b8e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0x6a06413c # load x3 with 32 MSBs 0x000000006a06413c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a06413c
sw x3, 0(x2) # store x3 (0x6a06413c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006a06413c from memory into f22
fnmadd.d f26, f16, f14, f22, dyn # perform operation
fnmadd.d f26, f16, f14, f22, rdn # perform operation
fnmadd.d f26, f16, f14, f22, rmm # perform operation
fnmadd.d f26, f16, f14, f22, rne # perform operation
fnmadd.d f26, f16, f14, f22, rtz # perform operation
fnmadd.d f26, f16, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f16, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f16, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f16, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f16, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f16, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x27, 0xd4269fb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x69204edc # load x3 with 32 MSBs 0x0000000069204edc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069204edc
sw x3, 0(x2) # store x3 (0x69204edc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000069204edc from memory into f11
fnmadd.d f27, f10, f22, f11, dyn # perform operation
fnmadd.d f27, f10, f22, f11, rdn # perform operation
fnmadd.d f27, f10, f22, f11, rmm # perform operation
fnmadd.d f27, f10, f22, f11, rne # perform operation
fnmadd.d f27, f10, f22, f11, rtz # perform operation
fnmadd.d f27, f10, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f10, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x29, 0x83ee3b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0xf3a1586e # load x3 with 32 MSBs 0x00000000f3a1586e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3a1586e
sw x3, 0(x2) # store x3 (0xf3a1586e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f3a1586e from memory into f21
fnmadd.d f29, f3, f2, f21, dyn # perform operation
fnmadd.d f29, f3, f2, f21, rdn # perform operation
fnmadd.d f29, f3, f2, f21, rmm # perform operation
fnmadd.d f29, f3, f2, f21, rne # perform operation
fnmadd.d f29, f3, f2, f21, rtz # perform operation
fnmadd.d f29, f3, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f3, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x11, 0x64145556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0xa8cfb3e6 # load x3 with 32 MSBs 0x00000000a8cfb3e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8cfb3e6
sw x3, 0(x2) # store x3 (0xa8cfb3e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a8cfb3e6 from memory into f31
fnmadd.d f11, f9, f29, f31, dyn # perform operation
fnmadd.d f11, f9, f29, f31, rdn # perform operation
fnmadd.d f11, f9, f29, f31, rmm # perform operation
fnmadd.d f11, f9, f29, f31, rne # perform operation
fnmadd.d f11, f9, f29, f31, rtz # perform operation
fnmadd.d f11, f9, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f9, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f9, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x17, 0x1d5e9717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0xa19a2fdc # load x3 with 32 MSBs 0x00000000a19a2fdc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a19a2fdc
sw x3, 0(x2) # store x3 (0xa19a2fdc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a19a2fdc from memory into f27
fnmadd.d f17, f26, f10, f27, dyn # perform operation
fnmadd.d f17, f26, f10, f27, rdn # perform operation
fnmadd.d f17, f26, f10, f27, rmm # perform operation
fnmadd.d f17, f26, f10, f27, rne # perform operation
fnmadd.d f17, f26, f10, f27, rtz # perform operation
fnmadd.d f17, f26, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f26, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x26, 0xcc3d1fd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
li x3, 0xf1bd64c7 # load x3 with 32 MSBs 0x00000000f1bd64c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1bd64c7
sw x3, 0(x2) # store x3 (0xf1bd64c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f1bd64c7 from memory into f11
fnmadd.d f26, f27, f15, f11, dyn # perform operation
fnmadd.d f26, f27, f15, f11, rdn # perform operation
fnmadd.d f26, f27, f15, f11, rmm # perform operation
fnmadd.d f26, f27, f15, f11, rne # perform operation
fnmadd.d f26, f27, f15, f11, rtz # perform operation
fnmadd.d f26, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f27, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x1, 0x74a5fe72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x8423edfd # load x3 with 32 MSBs 0x000000008423edfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008423edfd
sw x3, 0(x2) # store x3 (0x8423edfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008423edfd from memory into f16
fnmadd.d f1, f19, f29, f16, dyn # perform operation
fnmadd.d f1, f19, f29, f16, rdn # perform operation
fnmadd.d f1, f19, f29, f16, rmm # perform operation
fnmadd.d f1, f19, f29, f16, rne # perform operation
fnmadd.d f1, f19, f29, f16, rtz # perform operation
fnmadd.d f1, f19, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x8, 0x038f1754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x0b3bd473 # load x3 with 32 MSBs 0x000000000b3bd473
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b3bd473
sw x3, 0(x2) # store x3 (0x0b3bd473) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000000b3bd473 from memory into f24
fnmadd.d f8, f12, f14, f24, dyn # perform operation
fnmadd.d f8, f12, f14, f24, rdn # perform operation
fnmadd.d f8, f12, f14, f24, rmm # perform operation
fnmadd.d f8, f12, f14, f24, rne # perform operation
fnmadd.d f8, f12, f14, f24, rtz # perform operation
fnmadd.d f8, f12, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x6, 0x5fb3eb6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x0a3c0ec5 # load x3 with 32 MSBs 0x000000000a3c0ec5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a3c0ec5
sw x3, 0(x2) # store x3 (0x0a3c0ec5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000a3c0ec5 from memory into f31
fnmadd.d f6, f17, f23, f31, dyn # perform operation
fnmadd.d f6, f17, f23, f31, rdn # perform operation
fnmadd.d f6, f17, f23, f31, rmm # perform operation
fnmadd.d f6, f17, f23, f31, rne # perform operation
fnmadd.d f6, f17, f23, f31, rtz # perform operation
fnmadd.d f6, f17, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f17, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x11, 0x2145597f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xd99e5985 # load x3 with 32 MSBs 0x00000000d99e5985
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d99e5985
sw x3, 0(x2) # store x3 (0xd99e5985) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d99e5985 from memory into f12
fnmadd.d f11, f1, f27, f12, dyn # perform operation
fnmadd.d f11, f1, f27, f12, rdn # perform operation
fnmadd.d f11, f1, f27, f12, rmm # perform operation
fnmadd.d f11, f1, f27, f12, rne # perform operation
fnmadd.d f11, f1, f27, f12, rtz # perform operation
fnmadd.d f11, f1, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f1, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f1, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x7, 0x11b94d86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x3e1d4435 # load x3 with 32 MSBs 0x000000003e1d4435
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e1d4435
sw x3, 0(x2) # store x3 (0x3e1d4435) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003e1d4435 from memory into f5
fnmadd.d f7, f3, f4, f5, dyn # perform operation
fnmadd.d f7, f3, f4, f5, rdn # perform operation
fnmadd.d f7, f3, f4, f5, rmm # perform operation
fnmadd.d f7, f3, f4, f5, rne # perform operation
fnmadd.d f7, f3, f4, f5, rtz # perform operation
fnmadd.d f7, f3, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x31, 0x31216de8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x324771f7 # load x3 with 32 MSBs 0x00000000324771f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000324771f7
sw x3, 0(x2) # store x3 (0x324771f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000324771f7 from memory into f16
fnmadd.d f31, f10, f18, f16, dyn # perform operation
fnmadd.d f31, f10, f18, f16, rdn # perform operation
fnmadd.d f31, f10, f18, f16, rmm # perform operation
fnmadd.d f31, f10, f18, f16, rne # perform operation
fnmadd.d f31, f10, f18, f16, rtz # perform operation
fnmadd.d f31, f10, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f10, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f10, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x18, 0xb6f77830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x9b808262 # load x3 with 32 MSBs 0x000000009b808262
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b808262
sw x3, 0(x2) # store x3 (0x9b808262) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009b808262 from memory into f5
fnmadd.d f18, f29, f9, f5, dyn # perform operation
fnmadd.d f18, f29, f9, f5, rdn # perform operation
fnmadd.d f18, f29, f9, f5, rmm # perform operation
fnmadd.d f18, f29, f9, f5, rne # perform operation
fnmadd.d f18, f29, f9, f5, rtz # perform operation
fnmadd.d f18, f29, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x8, 0xa7b6021b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0xb1af548e # load x3 with 32 MSBs 0x00000000b1af548e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1af548e
sw x3, 0(x2) # store x3 (0xb1af548e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b1af548e from memory into f11
fnmadd.d f8, f22, f12, f11, dyn # perform operation
fnmadd.d f8, f22, f12, f11, rdn # perform operation
fnmadd.d f8, f22, f12, f11, rmm # perform operation
fnmadd.d f8, f22, f12, f11, rne # perform operation
fnmadd.d f8, f22, f12, f11, rtz # perform operation
fnmadd.d f8, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f22, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x5, 0x13ff6604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0xab1b4d3c # load x3 with 32 MSBs 0x00000000ab1b4d3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab1b4d3c
sw x3, 0(x2) # store x3 (0xab1b4d3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ab1b4d3c from memory into f24
fnmadd.d f5, f23, f1, f24, dyn # perform operation
fnmadd.d f5, f23, f1, f24, rdn # perform operation
fnmadd.d f5, f23, f1, f24, rmm # perform operation
fnmadd.d f5, f23, f1, f24, rne # perform operation
fnmadd.d f5, f23, f1, f24, rtz # perform operation
fnmadd.d f5, f23, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f23, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f23, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x30, 0xbd6fd822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xd261ffbf # load x3 with 32 MSBs 0x00000000d261ffbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d261ffbf
sw x3, 0(x2) # store x3 (0xd261ffbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d261ffbf from memory into f24
fnmadd.d f30, f9, f23, f24, dyn # perform operation
fnmadd.d f30, f9, f23, f24, rdn # perform operation
fnmadd.d f30, f9, f23, f24, rmm # perform operation
fnmadd.d f30, f9, f23, f24, rne # perform operation
fnmadd.d f30, f9, f23, f24, rtz # perform operation
fnmadd.d f30, f9, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f9, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f9, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x13, 0x6e2a05a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0xe73c83dd # load x3 with 32 MSBs 0x00000000e73c83dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e73c83dd
sw x3, 0(x2) # store x3 (0xe73c83dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e73c83dd from memory into f15
fnmadd.d f13, f19, f25, f15, dyn # perform operation
fnmadd.d f13, f19, f25, f15, rdn # perform operation
fnmadd.d f13, f19, f25, f15, rmm # perform operation
fnmadd.d f13, f19, f25, f15, rne # perform operation
fnmadd.d f13, f19, f25, f15, rtz # perform operation
fnmadd.d f13, f19, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x11, 0xc0a77065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0xfa06b3be # load x3 with 32 MSBs 0x00000000fa06b3be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa06b3be
sw x3, 0(x2) # store x3 (0xfa06b3be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000fa06b3be from memory into f31
fnmadd.d f11, f19, f25, f31, dyn # perform operation
fnmadd.d f11, f19, f25, f31, rdn # perform operation
fnmadd.d f11, f19, f25, f31, rmm # perform operation
fnmadd.d f11, f19, f25, f31, rne # perform operation
fnmadd.d f11, f19, f25, f31, rtz # perform operation
fnmadd.d f11, f19, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f19, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f19, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f19, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f19, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f19, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x2, 0x0014d920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xc7d02748 # load x3 with 32 MSBs 0x00000000c7d02748
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7d02748
sw x3, 0(x2) # store x3 (0xc7d02748) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c7d02748 from memory into f11
fnmadd.d f2, f19, f21, f11, dyn # perform operation
fnmadd.d f2, f19, f21, f11, rdn # perform operation
fnmadd.d f2, f19, f21, f11, rmm # perform operation
fnmadd.d f2, f19, f21, f11, rne # perform operation
fnmadd.d f2, f19, f21, f11, rtz # perform operation
fnmadd.d f2, f19, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x10, 0x0985c21c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x2be3db37 # load x3 with 32 MSBs 0x000000002be3db37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002be3db37
sw x3, 0(x2) # store x3 (0x2be3db37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002be3db37 from memory into f6
fnmadd.d f10, f3, f11, f6, dyn # perform operation
fnmadd.d f10, f3, f11, f6, rdn # perform operation
fnmadd.d f10, f3, f11, f6, rmm # perform operation
fnmadd.d f10, f3, f11, f6, rne # perform operation
fnmadd.d f10, f3, f11, f6, rtz # perform operation
fnmadd.d f10, f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f3, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x30, 0x4635170c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xf228b0a0 # load x3 with 32 MSBs 0x00000000f228b0a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f228b0a0
sw x3, 0(x2) # store x3 (0xf228b0a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f228b0a0 from memory into f11
fnmadd.d f30, f26, f2, f11, dyn # perform operation
fnmadd.d f30, f26, f2, f11, rdn # perform operation
fnmadd.d f30, f26, f2, f11, rmm # perform operation
fnmadd.d f30, f26, f2, f11, rne # perform operation
fnmadd.d f30, f26, f2, f11, rtz # perform operation
fnmadd.d f30, f26, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f26, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f26, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x23, 0x17f9310e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x2df0c484 # load x3 with 32 MSBs 0x000000002df0c484
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002df0c484
sw x3, 0(x2) # store x3 (0x2df0c484) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002df0c484 from memory into f26
fnmadd.d f23, f17, f31, f26, dyn # perform operation
fnmadd.d f23, f17, f31, f26, rdn # perform operation
fnmadd.d f23, f17, f31, f26, rmm # perform operation
fnmadd.d f23, f17, f31, f26, rne # perform operation
fnmadd.d f23, f17, f31, f26, rtz # perform operation
fnmadd.d f23, f17, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f17, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f17, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f17, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f17, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f17, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x2a60f92f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
li x3, 0xf135ea42 # load x3 with 32 MSBs 0x00000000f135ea42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f135ea42
sw x3, 0(x2) # store x3 (0xf135ea42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f135ea42 from memory into f5
fnmadd.d f17, f7, f9, f5, dyn # perform operation
fnmadd.d f17, f7, f9, f5, rdn # perform operation
fnmadd.d f17, f7, f9, f5, rmm # perform operation
fnmadd.d f17, f7, f9, f5, rne # perform operation
fnmadd.d f17, f7, f9, f5, rtz # perform operation
fnmadd.d f17, f7, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f7, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f7, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x11, 0xb08187cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x6fcecf5e # load x3 with 32 MSBs 0x000000006fcecf5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fcecf5e
sw x3, 0(x2) # store x3 (0x6fcecf5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006fcecf5e from memory into f20
fnmadd.d f11, f12, f27, f20, dyn # perform operation
fnmadd.d f11, f12, f27, f20, rdn # perform operation
fnmadd.d f11, f12, f27, f20, rmm # perform operation
fnmadd.d f11, f12, f27, f20, rne # perform operation
fnmadd.d f11, f12, f27, f20, rtz # perform operation
fnmadd.d f11, f12, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f12, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x15, 0x752b6895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x0753bcc3 # load x3 with 32 MSBs 0x000000000753bcc3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000753bcc3
sw x3, 0(x2) # store x3 (0x0753bcc3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000753bcc3 from memory into f11
fnmadd.d f15, f1, f28, f11, dyn # perform operation
fnmadd.d f15, f1, f28, f11, rdn # perform operation
fnmadd.d f15, f1, f28, f11, rmm # perform operation
fnmadd.d f15, f1, f28, f11, rne # perform operation
fnmadd.d f15, f1, f28, f11, rtz # perform operation
fnmadd.d f15, f1, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f1, f28, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x6, 0x916f3e93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x7fbe10f5 # load x3 with 32 MSBs 0x000000007fbe10f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fbe10f5
sw x3, 0(x2) # store x3 (0x7fbe10f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007fbe10f5 from memory into f24
fnmadd.d f6, f16, f18, f24, dyn # perform operation
fnmadd.d f6, f16, f18, f24, rdn # perform operation
fnmadd.d f6, f16, f18, f24, rmm # perform operation
fnmadd.d f6, f16, f18, f24, rne # perform operation
fnmadd.d f6, f16, f18, f24, rtz # perform operation
fnmadd.d f6, f16, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x9, 0xcccc0ebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x1ea2deba # load x3 with 32 MSBs 0x000000001ea2deba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ea2deba
sw x3, 0(x2) # store x3 (0x1ea2deba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001ea2deba from memory into f6
fnmadd.d f9, f22, f8, f6, dyn # perform operation
fnmadd.d f9, f22, f8, f6, rdn # perform operation
fnmadd.d f9, f22, f8, f6, rmm # perform operation
fnmadd.d f9, f22, f8, f6, rne # perform operation
fnmadd.d f9, f22, f8, f6, rtz # perform operation
fnmadd.d f9, f22, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f22, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f22, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f22, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f22, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f22, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x15, 0x3fefe767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0xb1ec0e3d # load x3 with 32 MSBs 0x00000000b1ec0e3d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1ec0e3d
sw x3, 0(x2) # store x3 (0xb1ec0e3d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b1ec0e3d from memory into f9
fnmadd.d f15, f29, f7, f9, dyn # perform operation
fnmadd.d f15, f29, f7, f9, rdn # perform operation
fnmadd.d f15, f29, f7, f9, rmm # perform operation
fnmadd.d f15, f29, f7, f9, rne # perform operation
fnmadd.d f15, f29, f7, f9, rtz # perform operation
fnmadd.d f15, f29, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f29, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x1, 0x428b26fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
li x3, 0xa04cda19 # load x3 with 32 MSBs 0x00000000a04cda19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a04cda19
sw x3, 0(x2) # store x3 (0xa04cda19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a04cda19 from memory into f5
fnmadd.d f1, f8, f19, f5, dyn # perform operation
fnmadd.d f1, f8, f19, f5, rdn # perform operation
fnmadd.d f1, f8, f19, f5, rmm # perform operation
fnmadd.d f1, f8, f19, f5, rne # perform operation
fnmadd.d f1, f8, f19, f5, rtz # perform operation
fnmadd.d f1, f8, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f8, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f8, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f8, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f8, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f8, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x20, 0x6f771191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x3561550f # load x3 with 32 MSBs 0x000000003561550f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003561550f
sw x3, 0(x2) # store x3 (0x3561550f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003561550f from memory into f8
fnmadd.d f20, f15, f29, f8, dyn # perform operation
fnmadd.d f20, f15, f29, f8, rdn # perform operation
fnmadd.d f20, f15, f29, f8, rmm # perform operation
fnmadd.d f20, f15, f29, f8, rne # perform operation
fnmadd.d f20, f15, f29, f8, rtz # perform operation
fnmadd.d f20, f15, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x43db42d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x47616821 # load x3 with 32 MSBs 0x0000000047616821
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047616821
sw x3, 0(x2) # store x3 (0x47616821) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000047616821 from memory into f11
fnmadd.d f18, f30, f1, f11, dyn # perform operation
fnmadd.d f18, f30, f1, f11, rdn # perform operation
fnmadd.d f18, f30, f1, f11, rmm # perform operation
fnmadd.d f18, f30, f1, f11, rne # perform operation
fnmadd.d f18, f30, f1, f11, rtz # perform operation
fnmadd.d f18, f30, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f30, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f30, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f30, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f30, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f30, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x27, 0x1d662a67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0xd22b7abe # load x3 with 32 MSBs 0x00000000d22b7abe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d22b7abe
sw x3, 0(x2) # store x3 (0xd22b7abe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d22b7abe from memory into f20
fnmadd.d f27, f28, f9, f20, dyn # perform operation
fnmadd.d f27, f28, f9, f20, rdn # perform operation
fnmadd.d f27, f28, f9, f20, rmm # perform operation
fnmadd.d f27, f28, f9, f20, rne # perform operation
fnmadd.d f27, f28, f9, f20, rtz # perform operation
fnmadd.d f27, f28, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f28, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x25, 0xe6f0d060 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
li x3, 0xe4b77e32 # load x3 with 32 MSBs 0x00000000e4b77e32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4b77e32
sw x3, 0(x2) # store x3 (0xe4b77e32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e4b77e32 from memory into f24
fnmadd.d f25, f7, f22, f24, dyn # perform operation
fnmadd.d f25, f7, f22, f24, rdn # perform operation
fnmadd.d f25, f7, f22, f24, rmm # perform operation
fnmadd.d f25, f7, f22, f24, rne # perform operation
fnmadd.d f25, f7, f22, f24, rtz # perform operation
fnmadd.d f25, f7, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f7, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f7, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x29, 0x26e6cb2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xa997567b # load x3 with 32 MSBs 0x00000000a997567b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a997567b
sw x3, 0(x2) # store x3 (0xa997567b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a997567b from memory into f23
fnmadd.d f29, f16, f15, f23, dyn # perform operation
fnmadd.d f29, f16, f15, f23, rdn # perform operation
fnmadd.d f29, f16, f15, f23, rmm # perform operation
fnmadd.d f29, f16, f15, f23, rne # perform operation
fnmadd.d f29, f16, f15, f23, rtz # perform operation
fnmadd.d f29, f16, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f16, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f16, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f16, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f16, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f16, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x30, 0x6d9952c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x584e6043 # load x3 with 32 MSBs 0x00000000584e6043
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000584e6043
sw x3, 0(x2) # store x3 (0x584e6043) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000584e6043 from memory into f3
fnmadd.d f30, f22, f13, f3, dyn # perform operation
fnmadd.d f30, f22, f13, f3, rdn # perform operation
fnmadd.d f30, f22, f13, f3, rmm # perform operation
fnmadd.d f30, f22, f13, f3, rne # perform operation
fnmadd.d f30, f22, f13, f3, rtz # perform operation
fnmadd.d f30, f22, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f22, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x10, 0xec130c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x6df505d5 # load x3 with 32 MSBs 0x000000006df505d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006df505d5
sw x3, 0(x2) # store x3 (0x6df505d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006df505d5 from memory into f8
fnmadd.d f10, f26, f31, f8, dyn # perform operation
fnmadd.d f10, f26, f31, f8, rdn # perform operation
fnmadd.d f10, f26, f31, f8, rmm # perform operation
fnmadd.d f10, f26, f31, f8, rne # perform operation
fnmadd.d f10, f26, f31, f8, rtz # perform operation
fnmadd.d f10, f26, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f26, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f26, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f26, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f26, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f26, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x7, 0xaa222eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0x1c759e32 # load x3 with 32 MSBs 0x000000001c759e32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c759e32
sw x3, 0(x2) # store x3 (0x1c759e32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001c759e32 from memory into f1
fnmadd.d f7, f8, f22, f1, dyn # perform operation
fnmadd.d f7, f8, f22, f1, rdn # perform operation
fnmadd.d f7, f8, f22, f1, rmm # perform operation
fnmadd.d f7, f8, f22, f1, rne # perform operation
fnmadd.d f7, f8, f22, f1, rtz # perform operation
fnmadd.d f7, f8, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f8, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f8, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f8, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f8, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f8, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x17, 0xcdf6d9de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0xdd4f8853 # load x3 with 32 MSBs 0x00000000dd4f8853
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd4f8853
sw x3, 0(x2) # store x3 (0xdd4f8853) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dd4f8853 from memory into f11
fnmadd.d f17, f16, f29, f11, dyn # perform operation
fnmadd.d f17, f16, f29, f11, rdn # perform operation
fnmadd.d f17, f16, f29, f11, rmm # perform operation
fnmadd.d f17, f16, f29, f11, rne # perform operation
fnmadd.d f17, f16, f29, f11, rtz # perform operation
fnmadd.d f17, f16, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f16, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x27, 0xcc1754b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x073efdfd # load x3 with 32 MSBs 0x00000000073efdfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000073efdfd
sw x3, 0(x2) # store x3 (0x073efdfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000073efdfd from memory into f5
fnmadd.d f27, f9, f1, f5, dyn # perform operation
fnmadd.d f27, f9, f1, f5, rdn # perform operation
fnmadd.d f27, f9, f1, f5, rmm # perform operation
fnmadd.d f27, f9, f1, f5, rne # perform operation
fnmadd.d f27, f9, f1, f5, rtz # perform operation
fnmadd.d f27, f9, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f9, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f9, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x11, 0x507a17f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0xf24311f2 # load x3 with 32 MSBs 0x00000000f24311f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f24311f2
sw x3, 0(x2) # store x3 (0xf24311f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f24311f2 from memory into f28
fnmadd.d f11, f31, f15, f28, dyn # perform operation
fnmadd.d f11, f31, f15, f28, rdn # perform operation
fnmadd.d f11, f31, f15, f28, rmm # perform operation
fnmadd.d f11, f31, f15, f28, rne # perform operation
fnmadd.d f11, f31, f15, f28, rtz # perform operation
fnmadd.d f11, f31, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f31, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x23, 0x1f5a1e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0xc66e2012 # load x3 with 32 MSBs 0x00000000c66e2012
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c66e2012
sw x3, 0(x2) # store x3 (0xc66e2012) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c66e2012 from memory into f9
fnmadd.d f23, f29, f31, f9, dyn # perform operation
fnmadd.d f23, f29, f31, f9, rdn # perform operation
fnmadd.d f23, f29, f31, f9, rmm # perform operation
fnmadd.d f23, f29, f31, f9, rne # perform operation
fnmadd.d f23, f29, f31, f9, rtz # perform operation
fnmadd.d f23, f29, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f29, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f29, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x20, 0x848c5656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xd756c569 # load x3 with 32 MSBs 0x00000000d756c569
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d756c569
sw x3, 0(x2) # store x3 (0xd756c569) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d756c569 from memory into f23
fnmadd.d f20, f24, f30, f23, dyn # perform operation
fnmadd.d f20, f24, f30, f23, rdn # perform operation
fnmadd.d f20, f24, f30, f23, rmm # perform operation
fnmadd.d f20, f24, f30, f23, rne # perform operation
fnmadd.d f20, f24, f30, f23, rtz # perform operation
fnmadd.d f20, f24, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f24, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f24, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f24, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f24, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f24, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x28, 0x85039e31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0xf674b80b # load x3 with 32 MSBs 0x00000000f674b80b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f674b80b
sw x3, 0(x2) # store x3 (0xf674b80b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f674b80b from memory into f14
fnmadd.d f28, f25, f1, f14, dyn # perform operation
fnmadd.d f28, f25, f1, f14, rdn # perform operation
fnmadd.d f28, f25, f1, f14, rmm # perform operation
fnmadd.d f28, f25, f1, f14, rne # perform operation
fnmadd.d f28, f25, f1, f14, rtz # perform operation
fnmadd.d f28, f25, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x4, 0x0f495f34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x05293f9a # load x3 with 32 MSBs 0x0000000005293f9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005293f9a
sw x3, 0(x2) # store x3 (0x05293f9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000005293f9a from memory into f17
fnmadd.d f4, f27, f28, f17, dyn # perform operation
fnmadd.d f4, f27, f28, f17, rdn # perform operation
fnmadd.d f4, f27, f28, f17, rmm # perform operation
fnmadd.d f4, f27, f28, f17, rne # perform operation
fnmadd.d f4, f27, f28, f17, rtz # perform operation
fnmadd.d f4, f27, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f27, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f27, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f27, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f27, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f27, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x3, 0x40c249d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x7d3a426c # load x3 with 32 MSBs 0x000000007d3a426c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d3a426c
sw x3, 0(x2) # store x3 (0x7d3a426c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007d3a426c from memory into f16
fnmadd.d f3, f27, f22, f16, dyn # perform operation
fnmadd.d f3, f27, f22, f16, rdn # perform operation
fnmadd.d f3, f27, f22, f16, rmm # perform operation
fnmadd.d f3, f27, f22, f16, rne # perform operation
fnmadd.d f3, f27, f22, f16, rtz # perform operation
fnmadd.d f3, f27, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f27, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f27, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f27, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f27, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f27, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x1, 0x4c8a6a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xc71659fa # load x3 with 32 MSBs 0x00000000c71659fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c71659fa
sw x3, 0(x2) # store x3 (0xc71659fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c71659fa from memory into f29
fnmadd.d f1, f8, f15, f29, dyn # perform operation
fnmadd.d f1, f8, f15, f29, rdn # perform operation
fnmadd.d f1, f8, f15, f29, rmm # perform operation
fnmadd.d f1, f8, f15, f29, rne # perform operation
fnmadd.d f1, f8, f15, f29, rtz # perform operation
fnmadd.d f1, f8, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f8, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f8, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x27, 0x3cf921e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0x0a4a632d # load x3 with 32 MSBs 0x000000000a4a632d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a4a632d
sw x3, 0(x2) # store x3 (0x0a4a632d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000a4a632d from memory into f5
fnmadd.d f27, f14, f2, f5, dyn # perform operation
fnmadd.d f27, f14, f2, f5, rdn # perform operation
fnmadd.d f27, f14, f2, f5, rmm # perform operation
fnmadd.d f27, f14, f2, f5, rne # perform operation
fnmadd.d f27, f14, f2, f5, rtz # perform operation
fnmadd.d f27, f14, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f14, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f14, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x21, 0x0c18c7fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x7df767f3 # load x3 with 32 MSBs 0x000000007df767f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007df767f3
sw x3, 0(x2) # store x3 (0x7df767f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000007df767f3 from memory into f2
fnmadd.d f21, f7, f4, f2, dyn # perform operation
fnmadd.d f21, f7, f4, f2, rdn # perform operation
fnmadd.d f21, f7, f4, f2, rmm # perform operation
fnmadd.d f21, f7, f4, f2, rne # perform operation
fnmadd.d f21, f7, f4, f2, rtz # perform operation
fnmadd.d f21, f7, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f7, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x8, 0xc11aba1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x8320c953 # load x3 with 32 MSBs 0x000000008320c953
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008320c953
sw x3, 0(x2) # store x3 (0x8320c953) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000008320c953 from memory into f13
fnmadd.d f8, f19, f14, f13, dyn # perform operation
fnmadd.d f8, f19, f14, f13, rdn # perform operation
fnmadd.d f8, f19, f14, f13, rmm # perform operation
fnmadd.d f8, f19, f14, f13, rne # perform operation
fnmadd.d f8, f19, f14, f13, rtz # perform operation
fnmadd.d f8, f19, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f19, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x30, 0x22ac3eff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x06588cd2 # load x3 with 32 MSBs 0x0000000006588cd2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006588cd2
sw x3, 0(x2) # store x3 (0x06588cd2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000006588cd2 from memory into f17
fnmadd.d f30, f28, f18, f17, dyn # perform operation
fnmadd.d f30, f28, f18, f17, rdn # perform operation
fnmadd.d f30, f28, f18, f17, rmm # perform operation
fnmadd.d f30, f28, f18, f17, rne # perform operation
fnmadd.d f30, f28, f18, f17, rtz # perform operation
fnmadd.d f30, f28, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f28, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x20, 0x16c8491e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x1d495e3e # load x3 with 32 MSBs 0x000000001d495e3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d495e3e
sw x3, 0(x2) # store x3 (0x1d495e3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000001d495e3e from memory into f11
fnmadd.d f20, f25, f19, f11, dyn # perform operation
fnmadd.d f20, f25, f19, f11, rdn # perform operation
fnmadd.d f20, f25, f19, f11, rmm # perform operation
fnmadd.d f20, f25, f19, f11, rne # perform operation
fnmadd.d f20, f25, f19, f11, rtz # perform operation
fnmadd.d f20, f25, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f25, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f25, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f25, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f25, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f25, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x21, 0x8972aff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x18dc89b3 # load x3 with 32 MSBs 0x0000000018dc89b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018dc89b3
sw x3, 0(x2) # store x3 (0x18dc89b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000018dc89b3 from memory into f17
fnmadd.d f21, f15, f5, f17, dyn # perform operation
fnmadd.d f21, f15, f5, f17, rdn # perform operation
fnmadd.d f21, f15, f5, f17, rmm # perform operation
fnmadd.d f21, f15, f5, f17, rne # perform operation
fnmadd.d f21, f15, f5, f17, rtz # perform operation
fnmadd.d f21, f15, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f15, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f15, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f15, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f15, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f15, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x29, 0x14d36beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0xe20f6085 # load x3 with 32 MSBs 0x00000000e20f6085
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e20f6085
sw x3, 0(x2) # store x3 (0xe20f6085) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e20f6085 from memory into f13
fnmadd.d f29, f20, f8, f13, dyn # perform operation
fnmadd.d f29, f20, f8, f13, rdn # perform operation
fnmadd.d f29, f20, f8, f13, rmm # perform operation
fnmadd.d f29, f20, f8, f13, rne # perform operation
fnmadd.d f29, f20, f8, f13, rtz # perform operation
fnmadd.d f29, f20, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f20, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f20, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x18, 0x96fd3d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x6807e7d1 # load x3 with 32 MSBs 0x000000006807e7d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006807e7d1
sw x3, 0(x2) # store x3 (0x6807e7d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006807e7d1 from memory into f4
fnmadd.d f18, f5, f8, f4, dyn # perform operation
fnmadd.d f18, f5, f8, f4, rdn # perform operation
fnmadd.d f18, f5, f8, f4, rmm # perform operation
fnmadd.d f18, f5, f8, f4, rne # perform operation
fnmadd.d f18, f5, f8, f4, rtz # perform operation
fnmadd.d f18, f5, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f5, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f5, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f5, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f5, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f5, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x3, 0xb488ba9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x431f242f # load x3 with 32 MSBs 0x00000000431f242f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000431f242f
sw x3, 0(x2) # store x3 (0x431f242f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000431f242f from memory into f16
fnmadd.d f3, f26, f5, f16, dyn # perform operation
fnmadd.d f3, f26, f5, f16, rdn # perform operation
fnmadd.d f3, f26, f5, f16, rmm # perform operation
fnmadd.d f3, f26, f5, f16, rne # perform operation
fnmadd.d f3, f26, f5, f16, rtz # perform operation
fnmadd.d f3, f26, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f26, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f26, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f26, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f26, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f26, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x8, 0x890c8275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x14b666bd # load x3 with 32 MSBs 0x0000000014b666bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014b666bd
sw x3, 0(x2) # store x3 (0x14b666bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000014b666bd from memory into f1
fnmadd.d f8, f16, f5, f1, dyn # perform operation
fnmadd.d f8, f16, f5, f1, rdn # perform operation
fnmadd.d f8, f16, f5, f1, rmm # perform operation
fnmadd.d f8, f16, f5, f1, rne # perform operation
fnmadd.d f8, f16, f5, f1, rtz # perform operation
fnmadd.d f8, f16, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f16, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f16, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f16, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f16, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f16, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0xb4c1a7af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x6a168a6f # load x3 with 32 MSBs 0x000000006a168a6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a168a6f
sw x3, 0(x2) # store x3 (0x6a168a6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000006a168a6f from memory into f23
fnmadd.d f18, f13, f30, f23, dyn # perform operation
fnmadd.d f18, f13, f30, f23, rdn # perform operation
fnmadd.d f18, f13, f30, f23, rmm # perform operation
fnmadd.d f18, f13, f30, f23, rne # perform operation
fnmadd.d f18, f13, f30, f23, rtz # perform operation
fnmadd.d f18, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f13, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x16, 0x629a466f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x2272dcde # load x3 with 32 MSBs 0x000000002272dcde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002272dcde
sw x3, 0(x2) # store x3 (0x2272dcde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002272dcde from memory into f29
fnmadd.d f16, f22, f1, f29, dyn # perform operation
fnmadd.d f16, f22, f1, f29, rdn # perform operation
fnmadd.d f16, f22, f1, f29, rmm # perform operation
fnmadd.d f16, f22, f1, f29, rne # perform operation
fnmadd.d f16, f22, f1, f29, rtz # perform operation
fnmadd.d f16, f22, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f22, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x30, 0x7c71aaed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0xefc34f93 # load x3 with 32 MSBs 0x00000000efc34f93
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efc34f93
sw x3, 0(x2) # store x3 (0xefc34f93) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000efc34f93 from memory into f18
fnmadd.d f30, f12, f11, f18, dyn # perform operation
fnmadd.d f30, f12, f11, f18, rdn # perform operation
fnmadd.d f30, f12, f11, f18, rmm # perform operation
fnmadd.d f30, f12, f11, f18, rne # perform operation
fnmadd.d f30, f12, f11, f18, rtz # perform operation
fnmadd.d f30, f12, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f12, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f12, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f12, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f12, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f12, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x15, 0xa498b4e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x23001ea1 # load x3 with 32 MSBs 0x0000000023001ea1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023001ea1
sw x3, 0(x2) # store x3 (0x23001ea1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000023001ea1 from memory into f30
fnmadd.d f15, f27, f24, f30, dyn # perform operation
fnmadd.d f15, f27, f24, f30, rdn # perform operation
fnmadd.d f15, f27, f24, f30, rmm # perform operation
fnmadd.d f15, f27, f24, f30, rne # perform operation
fnmadd.d f15, f27, f24, f30, rtz # perform operation
fnmadd.d f15, f27, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f27, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x16, 0x7e8ba849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x370dff04 # load x3 with 32 MSBs 0x00000000370dff04
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000370dff04
sw x3, 0(x2) # store x3 (0x370dff04) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000370dff04 from memory into f10
fnmadd.d f16, f29, f1, f10, dyn # perform operation
fnmadd.d f16, f29, f1, f10, rdn # perform operation
fnmadd.d f16, f29, f1, f10, rmm # perform operation
fnmadd.d f16, f29, f1, f10, rne # perform operation
fnmadd.d f16, f29, f1, f10, rtz # perform operation
fnmadd.d f16, f29, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f29, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f29, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f29, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f29, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f29, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x28, 0x4eb84f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0xae77c6b3 # load x3 with 32 MSBs 0x00000000ae77c6b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae77c6b3
sw x3, 0(x2) # store x3 (0xae77c6b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ae77c6b3 from memory into f21
fnmadd.d f28, f29, f9, f21, dyn # perform operation
fnmadd.d f28, f29, f9, f21, rdn # perform operation
fnmadd.d f28, f29, f9, f21, rmm # perform operation
fnmadd.d f28, f29, f9, f21, rne # perform operation
fnmadd.d f28, f29, f9, f21, rtz # perform operation
fnmadd.d f28, f29, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f29, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x1, 0x45eb3414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xea61c604 # load x3 with 32 MSBs 0x00000000ea61c604
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea61c604
sw x3, 0(x2) # store x3 (0xea61c604) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ea61c604 from memory into f14
fnmadd.d f1, f29, f16, f14, dyn # perform operation
fnmadd.d f1, f29, f16, f14, rdn # perform operation
fnmadd.d f1, f29, f16, f14, rmm # perform operation
fnmadd.d f1, f29, f16, f14, rne # perform operation
fnmadd.d f1, f29, f16, f14, rtz # perform operation
fnmadd.d f1, f29, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f29, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x1, 0xe41e052e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xceac88b5 # load x3 with 32 MSBs 0x00000000ceac88b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ceac88b5
sw x3, 0(x2) # store x3 (0xceac88b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ceac88b5 from memory into f26
fnmadd.d f1, f11, f18, f26, dyn # perform operation
fnmadd.d f1, f11, f18, f26, rdn # perform operation
fnmadd.d f1, f11, f18, f26, rmm # perform operation
fnmadd.d f1, f11, f18, f26, rne # perform operation
fnmadd.d f1, f11, f18, f26, rtz # perform operation
fnmadd.d f1, f11, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f11, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f11, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x25, 0x2f81048c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xb101b199 # load x3 with 32 MSBs 0x00000000b101b199
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b101b199
sw x3, 0(x2) # store x3 (0xb101b199) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b101b199 from memory into f10
fnmadd.d f25, f14, f7, f10, dyn # perform operation
fnmadd.d f25, f14, f7, f10, rdn # perform operation
fnmadd.d f25, f14, f7, f10, rmm # perform operation
fnmadd.d f25, f14, f7, f10, rne # perform operation
fnmadd.d f25, f14, f7, f10, rtz # perform operation
fnmadd.d f25, f14, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x10, 0x49d52112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x3133437e # load x3 with 32 MSBs 0x000000003133437e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003133437e
sw x3, 0(x2) # store x3 (0x3133437e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003133437e from memory into f12
fnmadd.d f10, f18, f25, f12, dyn # perform operation
fnmadd.d f10, f18, f25, f12, rdn # perform operation
fnmadd.d f10, f18, f25, f12, rmm # perform operation
fnmadd.d f10, f18, f25, f12, rne # perform operation
fnmadd.d f10, f18, f25, f12, rtz # perform operation
fnmadd.d f10, f18, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f18, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f18, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x19, 0x16746ab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x8438806f # load x3 with 32 MSBs 0x000000008438806f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008438806f
sw x3, 0(x2) # store x3 (0x8438806f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008438806f from memory into f12
fnmadd.d f19, f17, f2, f12, dyn # perform operation
fnmadd.d f19, f17, f2, f12, rdn # perform operation
fnmadd.d f19, f17, f2, f12, rmm # perform operation
fnmadd.d f19, f17, f2, f12, rne # perform operation
fnmadd.d f19, f17, f2, f12, rtz # perform operation
fnmadd.d f19, f17, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f17, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f17, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x775fb3b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x231b4555 # load x3 with 32 MSBs 0x00000000231b4555
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000231b4555
sw x3, 0(x2) # store x3 (0x231b4555) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000231b4555 from memory into f4
fnmadd.d f5, f8, f6, f4, dyn # perform operation
fnmadd.d f5, f8, f6, f4, rdn # perform operation
fnmadd.d f5, f8, f6, f4, rmm # perform operation
fnmadd.d f5, f8, f6, f4, rne # perform operation
fnmadd.d f5, f8, f6, f4, rtz # perform operation
fnmadd.d f5, f8, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f8, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f8, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f8, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f8, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f8, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x2, 0xbded1351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0xed276f26 # load x3 with 32 MSBs 0x00000000ed276f26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed276f26
sw x3, 0(x2) # store x3 (0xed276f26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ed276f26 from memory into f29
fnmadd.d f2, f13, f20, f29, dyn # perform operation
fnmadd.d f2, f13, f20, f29, rdn # perform operation
fnmadd.d f2, f13, f20, f29, rmm # perform operation
fnmadd.d f2, f13, f20, f29, rne # perform operation
fnmadd.d f2, f13, f20, f29, rtz # perform operation
fnmadd.d f2, f13, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x31, 0xc152fd57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x450dbf09 # load x3 with 32 MSBs 0x00000000450dbf09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000450dbf09
sw x3, 0(x2) # store x3 (0x450dbf09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000450dbf09 from memory into f23
fnmadd.d f31, f4, f30, f23, dyn # perform operation
fnmadd.d f31, f4, f30, f23, rdn # perform operation
fnmadd.d f31, f4, f30, f23, rmm # perform operation
fnmadd.d f31, f4, f30, f23, rne # perform operation
fnmadd.d f31, f4, f30, f23, rtz # perform operation
fnmadd.d f31, f4, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f4, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x8, 0x1675b00c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x110cca91 # load x3 with 32 MSBs 0x00000000110cca91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000110cca91
sw x3, 0(x2) # store x3 (0x110cca91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000110cca91 from memory into f12
fnmadd.d f8, f25, f7, f12, dyn # perform operation
fnmadd.d f8, f25, f7, f12, rdn # perform operation
fnmadd.d f8, f25, f7, f12, rmm # perform operation
fnmadd.d f8, f25, f7, f12, rne # perform operation
fnmadd.d f8, f25, f7, f12, rtz # perform operation
fnmadd.d f8, f25, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f25, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x15, 0x4bcfd858 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0xc7b9aa12 # load x3 with 32 MSBs 0x00000000c7b9aa12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7b9aa12
sw x3, 0(x2) # store x3 (0xc7b9aa12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c7b9aa12 from memory into f22
fnmadd.d f15, f7, f8, f22, dyn # perform operation
fnmadd.d f15, f7, f8, f22, rdn # perform operation
fnmadd.d f15, f7, f8, f22, rmm # perform operation
fnmadd.d f15, f7, f8, f22, rne # perform operation
fnmadd.d f15, f7, f8, f22, rtz # perform operation
fnmadd.d f15, f7, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x25, 0x4f303c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0xd348679c # load x3 with 32 MSBs 0x00000000d348679c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d348679c
sw x3, 0(x2) # store x3 (0xd348679c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d348679c from memory into f9
fnmadd.d f25, f24, f20, f9, dyn # perform operation
fnmadd.d f25, f24, f20, f9, rdn # perform operation
fnmadd.d f25, f24, f20, f9, rmm # perform operation
fnmadd.d f25, f24, f20, f9, rne # perform operation
fnmadd.d f25, f24, f20, f9, rtz # perform operation
fnmadd.d f25, f24, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f24, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f24, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x18, 0x75f91868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x93cf39bf # load x3 with 32 MSBs 0x0000000093cf39bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093cf39bf
sw x3, 0(x2) # store x3 (0x93cf39bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000093cf39bf from memory into f24
fnmadd.d f18, f15, f6, f24, dyn # perform operation
fnmadd.d f18, f15, f6, f24, rdn # perform operation
fnmadd.d f18, f15, f6, f24, rmm # perform operation
fnmadd.d f18, f15, f6, f24, rne # perform operation
fnmadd.d f18, f15, f6, f24, rtz # perform operation
fnmadd.d f18, f15, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f15, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f15, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x23, 0xb4818a4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x4ac915ca # load x3 with 32 MSBs 0x000000004ac915ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ac915ca
sw x3, 0(x2) # store x3 (0x4ac915ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004ac915ca from memory into f9
fnmadd.d f23, f13, f7, f9, dyn # perform operation
fnmadd.d f23, f13, f7, f9, rdn # perform operation
fnmadd.d f23, f13, f7, f9, rmm # perform operation
fnmadd.d f23, f13, f7, f9, rne # perform operation
fnmadd.d f23, f13, f7, f9, rtz # perform operation
fnmadd.d f23, f13, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f13, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f13, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x19, 0x9992908e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0xf09dbc6a # load x3 with 32 MSBs 0x00000000f09dbc6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f09dbc6a
sw x3, 0(x2) # store x3 (0xf09dbc6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f09dbc6a from memory into f3
fnmadd.d f19, f31, f11, f3, dyn # perform operation
fnmadd.d f19, f31, f11, f3, rdn # perform operation
fnmadd.d f19, f31, f11, f3, rmm # perform operation
fnmadd.d f19, f31, f11, f3, rne # perform operation
fnmadd.d f19, f31, f11, f3, rtz # perform operation
fnmadd.d f19, f31, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f31, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f31, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x26, 0xccf7bd4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x80260001 # load x3 with 32 MSBs 0x0000000080260001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080260001
sw x3, 0(x2) # store x3 (0x80260001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000080260001 from memory into f29
fnmadd.d f26, f21, f28, f29, dyn # perform operation
fnmadd.d f26, f21, f28, f29, rdn # perform operation
fnmadd.d f26, f21, f28, f29, rmm # perform operation
fnmadd.d f26, f21, f28, f29, rne # perform operation
fnmadd.d f26, f21, f28, f29, rtz # perform operation
fnmadd.d f26, f21, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x18, 0x9a167617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xff8142fe # load x3 with 32 MSBs 0x00000000ff8142fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff8142fe
sw x3, 0(x2) # store x3 (0xff8142fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ff8142fe from memory into f27
fnmadd.d f18, f2, f4, f27, dyn # perform operation
fnmadd.d f18, f2, f4, f27, rdn # perform operation
fnmadd.d f18, f2, f4, f27, rmm # perform operation
fnmadd.d f18, f2, f4, f27, rne # perform operation
fnmadd.d f18, f2, f4, f27, rtz # perform operation
fnmadd.d f18, f2, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f2, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f2, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x14, 0xadd6c5f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x693a40de # load x3 with 32 MSBs 0x00000000693a40de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000693a40de
sw x3, 0(x2) # store x3 (0x693a40de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000693a40de from memory into f26
fnmadd.d f14, f16, f8, f26, dyn # perform operation
fnmadd.d f14, f16, f8, f26, rdn # perform operation
fnmadd.d f14, f16, f8, f26, rmm # perform operation
fnmadd.d f14, f16, f8, f26, rne # perform operation
fnmadd.d f14, f16, f8, f26, rtz # perform operation
fnmadd.d f14, f16, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f16, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x11, 0xe3b737c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x11f75b0c # load x3 with 32 MSBs 0x0000000011f75b0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011f75b0c
sw x3, 0(x2) # store x3 (0x11f75b0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000011f75b0c from memory into f5
fnmadd.d f11, f2, f6, f5, dyn # perform operation
fnmadd.d f11, f2, f6, f5, rdn # perform operation
fnmadd.d f11, f2, f6, f5, rmm # perform operation
fnmadd.d f11, f2, f6, f5, rne # perform operation
fnmadd.d f11, f2, f6, f5, rtz # perform operation
fnmadd.d f11, f2, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f2, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x23, 0x0e61fde5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x027e14e4 # load x3 with 32 MSBs 0x00000000027e14e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000027e14e4
sw x3, 0(x2) # store x3 (0x027e14e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000027e14e4 from memory into f11
fnmadd.d f23, f20, f15, f11, dyn # perform operation
fnmadd.d f23, f20, f15, f11, rdn # perform operation
fnmadd.d f23, f20, f15, f11, rmm # perform operation
fnmadd.d f23, f20, f15, f11, rne # perform operation
fnmadd.d f23, f20, f15, f11, rtz # perform operation
fnmadd.d f23, f20, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f20, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x9, 0x9ed99e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x803b1891 # load x3 with 32 MSBs 0x00000000803b1891
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000803b1891
sw x3, 0(x2) # store x3 (0x803b1891) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000803b1891 from memory into f2
fnmadd.d f9, f27, f23, f2, dyn # perform operation
fnmadd.d f9, f27, f23, f2, rdn # perform operation
fnmadd.d f9, f27, f23, f2, rmm # perform operation
fnmadd.d f9, f27, f23, f2, rne # perform operation
fnmadd.d f9, f27, f23, f2, rtz # perform operation
fnmadd.d f9, f27, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f27, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f27, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x16, 0x055a7875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x9884a24e # load x3 with 32 MSBs 0x000000009884a24e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009884a24e
sw x3, 0(x2) # store x3 (0x9884a24e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009884a24e from memory into f20
fnmadd.d f16, f31, f3, f20, dyn # perform operation
fnmadd.d f16, f31, f3, f20, rdn # perform operation
fnmadd.d f16, f31, f3, f20, rmm # perform operation
fnmadd.d f16, f31, f3, f20, rne # perform operation
fnmadd.d f16, f31, f3, f20, rtz # perform operation
fnmadd.d f16, f31, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x11, 0xe60a31a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xb79bf9a1 # load x3 with 32 MSBs 0x00000000b79bf9a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b79bf9a1
sw x3, 0(x2) # store x3 (0xb79bf9a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b79bf9a1 from memory into f1
fnmadd.d f11, f8, f5, f1, dyn # perform operation
fnmadd.d f11, f8, f5, f1, rdn # perform operation
fnmadd.d f11, f8, f5, f1, rmm # perform operation
fnmadd.d f11, f8, f5, f1, rne # perform operation
fnmadd.d f11, f8, f5, f1, rtz # perform operation
fnmadd.d f11, f8, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f8, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f8, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x9, 0xfed33788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x259c2e2f # load x3 with 32 MSBs 0x00000000259c2e2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000259c2e2f
sw x3, 0(x2) # store x3 (0x259c2e2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000259c2e2f from memory into f6
fnmadd.d f9, f29, f20, f6, dyn # perform operation
fnmadd.d f9, f29, f20, f6, rdn # perform operation
fnmadd.d f9, f29, f20, f6, rmm # perform operation
fnmadd.d f9, f29, f20, f6, rne # perform operation
fnmadd.d f9, f29, f20, f6, rtz # perform operation
fnmadd.d f9, f29, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f29, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f29, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f29, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f29, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f29, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x2, 0x45386d72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0xcd14f517 # load x3 with 32 MSBs 0x00000000cd14f517
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd14f517
sw x3, 0(x2) # store x3 (0xcd14f517) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000cd14f517 from memory into f19
fnmadd.d f2, f3, f1, f19, dyn # perform operation
fnmadd.d f2, f3, f1, f19, rdn # perform operation
fnmadd.d f2, f3, f1, f19, rmm # perform operation
fnmadd.d f2, f3, f1, f19, rne # perform operation
fnmadd.d f2, f3, f1, f19, rtz # perform operation
fnmadd.d f2, f3, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f3, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f3, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f3, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f3, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f3, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x6, 0x79875201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xa1f2981b # load x3 with 32 MSBs 0x00000000a1f2981b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1f2981b
sw x3, 0(x2) # store x3 (0xa1f2981b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a1f2981b from memory into f23
fnmadd.d f6, f24, f27, f23, dyn # perform operation
fnmadd.d f6, f24, f27, f23, rdn # perform operation
fnmadd.d f6, f24, f27, f23, rmm # perform operation
fnmadd.d f6, f24, f27, f23, rne # perform operation
fnmadd.d f6, f24, f27, f23, rtz # perform operation
fnmadd.d f6, f24, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f24, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x5, 0x16ee8218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x6763acd5 # load x3 with 32 MSBs 0x000000006763acd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006763acd5
sw x3, 0(x2) # store x3 (0x6763acd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006763acd5 from memory into f22
fnmadd.d f5, f21, f23, f22, dyn # perform operation
fnmadd.d f5, f21, f23, f22, rdn # perform operation
fnmadd.d f5, f21, f23, f22, rmm # perform operation
fnmadd.d f5, f21, f23, f22, rne # perform operation
fnmadd.d f5, f21, f23, f22, rtz # perform operation
fnmadd.d f5, f21, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f21, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f21, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f21, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f21, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f21, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x30, 0x667d8256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xaf48751a # load x3 with 32 MSBs 0x00000000af48751a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af48751a
sw x3, 0(x2) # store x3 (0xaf48751a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000af48751a from memory into f23
fnmadd.d f30, f28, f24, f23, dyn # perform operation
fnmadd.d f30, f28, f24, f23, rdn # perform operation
fnmadd.d f30, f28, f24, f23, rmm # perform operation
fnmadd.d f30, f28, f24, f23, rne # perform operation
fnmadd.d f30, f28, f24, f23, rtz # perform operation
fnmadd.d f30, f28, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f28, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f28, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x28, 0xe21d8fb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x087b841a # load x3 with 32 MSBs 0x00000000087b841a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000087b841a
sw x3, 0(x2) # store x3 (0x087b841a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000087b841a from memory into f19
fnmadd.d f28, f13, f20, f19, dyn # perform operation
fnmadd.d f28, f13, f20, f19, rdn # perform operation
fnmadd.d f28, f13, f20, f19, rmm # perform operation
fnmadd.d f28, f13, f20, f19, rne # perform operation
fnmadd.d f28, f13, f20, f19, rtz # perform operation
fnmadd.d f28, f13, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f13, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f13, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f13, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f13, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f13, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x26, 0xad0c028e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
li x3, 0x2b6f1d21 # load x3 with 32 MSBs 0x000000002b6f1d21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b6f1d21
sw x3, 0(x2) # store x3 (0x2b6f1d21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000002b6f1d21 from memory into f23
fnmadd.d f26, f21, f4, f23, dyn # perform operation
fnmadd.d f26, f21, f4, f23, rdn # perform operation
fnmadd.d f26, f21, f4, f23, rmm # perform operation
fnmadd.d f26, f21, f4, f23, rne # perform operation
fnmadd.d f26, f21, f4, f23, rtz # perform operation
fnmadd.d f26, f21, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f21, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f21, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x8, 0x0de0bab9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x4aeed013 # load x3 with 32 MSBs 0x000000004aeed013
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004aeed013
sw x3, 0(x2) # store x3 (0x4aeed013) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004aeed013 from memory into f23
fnmadd.d f8, f18, f27, f23, dyn # perform operation
fnmadd.d f8, f18, f27, f23, rdn # perform operation
fnmadd.d f8, f18, f27, f23, rmm # perform operation
fnmadd.d f8, f18, f27, f23, rne # perform operation
fnmadd.d f8, f18, f27, f23, rtz # perform operation
fnmadd.d f8, f18, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f18, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f18, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f18, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f18, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f18, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x17, 0xc4ebd313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x59f946c5 # load x3 with 32 MSBs 0x0000000059f946c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059f946c5
sw x3, 0(x2) # store x3 (0x59f946c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000059f946c5 from memory into f18
fnmadd.d f17, f10, f31, f18, dyn # perform operation
fnmadd.d f17, f10, f31, f18, rdn # perform operation
fnmadd.d f17, f10, f31, f18, rmm # perform operation
fnmadd.d f17, f10, f31, f18, rne # perform operation
fnmadd.d f17, f10, f31, f18, rtz # perform operation
fnmadd.d f17, f10, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x6, 0x483c1670 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x213e3333 # load x3 with 32 MSBs 0x00000000213e3333
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000213e3333
sw x3, 0(x2) # store x3 (0x213e3333) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000213e3333 from memory into f8
fnmadd.d f6, f16, f28, f8, dyn # perform operation
fnmadd.d f6, f16, f28, f8, rdn # perform operation
fnmadd.d f6, f16, f28, f8, rmm # perform operation
fnmadd.d f6, f16, f28, f8, rne # perform operation
fnmadd.d f6, f16, f28, f8, rtz # perform operation
fnmadd.d f6, f16, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x10, 0xe3ed6687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0xf7ea956a # load x3 with 32 MSBs 0x00000000f7ea956a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7ea956a
sw x3, 0(x2) # store x3 (0xf7ea956a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f7ea956a from memory into f4
fnmadd.d f10, f9, f19, f4, dyn # perform operation
fnmadd.d f10, f9, f19, f4, rdn # perform operation
fnmadd.d f10, f9, f19, f4, rmm # perform operation
fnmadd.d f10, f9, f19, f4, rne # perform operation
fnmadd.d f10, f9, f19, f4, rtz # perform operation
fnmadd.d f10, f9, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f9, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f9, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f9, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f9, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f9, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x13, 0x060e0f34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x4e50d17e # load x3 with 32 MSBs 0x000000004e50d17e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e50d17e
sw x3, 0(x2) # store x3 (0x4e50d17e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004e50d17e from memory into f15
fnmadd.d f13, f28, f6, f15, dyn # perform operation
fnmadd.d f13, f28, f6, f15, rdn # perform operation
fnmadd.d f13, f28, f6, f15, rmm # perform operation
fnmadd.d f13, f28, f6, f15, rne # perform operation
fnmadd.d f13, f28, f6, f15, rtz # perform operation
fnmadd.d f13, f28, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f28, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f28, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f28, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f28, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f28, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x24, 0xa811bc99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xf5a9a95f # load x3 with 32 MSBs 0x00000000f5a9a95f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5a9a95f
sw x3, 0(x2) # store x3 (0xf5a9a95f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f5a9a95f from memory into f10
fnmadd.d f24, f14, f21, f10, dyn # perform operation
fnmadd.d f24, f14, f21, f10, rdn # perform operation
fnmadd.d f24, f14, f21, f10, rmm # perform operation
fnmadd.d f24, f14, f21, f10, rne # perform operation
fnmadd.d f24, f14, f21, f10, rtz # perform operation
fnmadd.d f24, f14, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f14, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f14, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f14, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f14, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f14, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x26, 0x1101b8cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x76477f7f # load x3 with 32 MSBs 0x0000000076477f7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076477f7f
sw x3, 0(x2) # store x3 (0x76477f7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000076477f7f from memory into f1
fnmadd.d f26, f6, f21, f1, dyn # perform operation
fnmadd.d f26, f6, f21, f1, rdn # perform operation
fnmadd.d f26, f6, f21, f1, rmm # perform operation
fnmadd.d f26, f6, f21, f1, rne # perform operation
fnmadd.d f26, f6, f21, f1, rtz # perform operation
fnmadd.d f26, f6, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f6, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x31, 0xa46694a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x30f185b7 # load x3 with 32 MSBs 0x0000000030f185b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030f185b7
sw x3, 0(x2) # store x3 (0x30f185b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000030f185b7 from memory into f16
fnmadd.d f31, f17, f11, f16, dyn # perform operation
fnmadd.d f31, f17, f11, f16, rdn # perform operation
fnmadd.d f31, f17, f11, f16, rmm # perform operation
fnmadd.d f31, f17, f11, f16, rne # perform operation
fnmadd.d f31, f17, f11, f16, rtz # perform operation
fnmadd.d f31, f17, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f17, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f17, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f17, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f17, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f17, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x12, 0x620dfb56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0xc53463c2 # load x3 with 32 MSBs 0x00000000c53463c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c53463c2
sw x3, 0(x2) # store x3 (0xc53463c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c53463c2 from memory into f23
fnmadd.d f12, f19, f10, f23, dyn # perform operation
fnmadd.d f12, f19, f10, f23, rdn # perform operation
fnmadd.d f12, f19, f10, f23, rmm # perform operation
fnmadd.d f12, f19, f10, f23, rne # perform operation
fnmadd.d f12, f19, f10, f23, rtz # perform operation
fnmadd.d f12, f19, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f19, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f19, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f19, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f19, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f19, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x26, 0xcd169c6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x62030aa3 # load x3 with 32 MSBs 0x0000000062030aa3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062030aa3
sw x3, 0(x2) # store x3 (0x62030aa3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000062030aa3 from memory into f16
fnmadd.d f26, f31, f15, f16, dyn # perform operation
fnmadd.d f26, f31, f15, f16, rdn # perform operation
fnmadd.d f26, f31, f15, f16, rmm # perform operation
fnmadd.d f26, f31, f15, f16, rne # perform operation
fnmadd.d f26, f31, f15, f16, rtz # perform operation
fnmadd.d f26, f31, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f31, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x27, 0x5cc3ff00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
li x3, 0x5b0b0ffd # load x3 with 32 MSBs 0x000000005b0b0ffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b0b0ffd
sw x3, 0(x2) # store x3 (0x5b0b0ffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005b0b0ffd from memory into f6
fnmadd.d f27, f25, f8, f6, dyn # perform operation
fnmadd.d f27, f25, f8, f6, rdn # perform operation
fnmadd.d f27, f25, f8, f6, rmm # perform operation
fnmadd.d f27, f25, f8, f6, rne # perform operation
fnmadd.d f27, f25, f8, f6, rtz # perform operation
fnmadd.d f27, f25, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f25, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x30, 0x7cfdc718 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x98e11e08 # load x3 with 32 MSBs 0x0000000098e11e08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098e11e08
sw x3, 0(x2) # store x3 (0x98e11e08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000098e11e08 from memory into f17
fnmadd.d f30, f13, f27, f17, dyn # perform operation
fnmadd.d f30, f13, f27, f17, rdn # perform operation
fnmadd.d f30, f13, f27, f17, rmm # perform operation
fnmadd.d f30, f13, f27, f17, rne # perform operation
fnmadd.d f30, f13, f27, f17, rtz # perform operation
fnmadd.d f30, f13, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f13, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x15, 0x03875ceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x4c561a20 # load x3 with 32 MSBs 0x000000004c561a20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c561a20
sw x3, 0(x2) # store x3 (0x4c561a20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004c561a20 from memory into f17
fnmadd.d f15, f11, f20, f17, dyn # perform operation
fnmadd.d f15, f11, f20, f17, rdn # perform operation
fnmadd.d f15, f11, f20, f17, rmm # perform operation
fnmadd.d f15, f11, f20, f17, rne # perform operation
fnmadd.d f15, f11, f20, f17, rtz # perform operation
fnmadd.d f15, f11, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f11, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x10, 0x23d3c07f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x8a5e5590 # load x3 with 32 MSBs 0x000000008a5e5590
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a5e5590
sw x3, 0(x2) # store x3 (0x8a5e5590) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008a5e5590 from memory into f11
fnmadd.d f10, f15, f2, f11, dyn # perform operation
fnmadd.d f10, f15, f2, f11, rdn # perform operation
fnmadd.d f10, f15, f2, f11, rmm # perform operation
fnmadd.d f10, f15, f2, f11, rne # perform operation
fnmadd.d f10, f15, f2, f11, rtz # perform operation
fnmadd.d f10, f15, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f15, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x2, 0x450e1fb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0xc7f02cd7 # load x3 with 32 MSBs 0x00000000c7f02cd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7f02cd7
sw x3, 0(x2) # store x3 (0xc7f02cd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c7f02cd7 from memory into f13
fnmadd.d f2, f23, f25, f13, dyn # perform operation
fnmadd.d f2, f23, f25, f13, rdn # perform operation
fnmadd.d f2, f23, f25, f13, rmm # perform operation
fnmadd.d f2, f23, f25, f13, rne # perform operation
fnmadd.d f2, f23, f25, f13, rtz # perform operation
fnmadd.d f2, f23, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f23, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x4, 0xc51b3b10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0xac36dfc4 # load x3 with 32 MSBs 0x00000000ac36dfc4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac36dfc4
sw x3, 0(x2) # store x3 (0xac36dfc4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ac36dfc4 from memory into f7
fnmadd.d f4, f11, f28, f7, dyn # perform operation
fnmadd.d f4, f11, f28, f7, rdn # perform operation
fnmadd.d f4, f11, f28, f7, rmm # perform operation
fnmadd.d f4, f11, f28, f7, rne # perform operation
fnmadd.d f4, f11, f28, f7, rtz # perform operation
fnmadd.d f4, f11, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f11, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x12, 0x11bbd436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
li x3, 0x540e8dee # load x3 with 32 MSBs 0x00000000540e8dee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000540e8dee
sw x3, 0(x2) # store x3 (0x540e8dee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000540e8dee from memory into f1
fnmadd.d f12, f18, f26, f1, dyn # perform operation
fnmadd.d f12, f18, f26, f1, rdn # perform operation
fnmadd.d f12, f18, f26, f1, rmm # perform operation
fnmadd.d f12, f18, f26, f1, rne # perform operation
fnmadd.d f12, f18, f26, f1, rtz # perform operation
fnmadd.d f12, f18, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x26, 0xa4964a36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xff228bcf # load x3 with 32 MSBs 0x00000000ff228bcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff228bcf
sw x3, 0(x2) # store x3 (0xff228bcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ff228bcf from memory into f2
fnmadd.d f26, f12, f30, f2, dyn # perform operation
fnmadd.d f26, f12, f30, f2, rdn # perform operation
fnmadd.d f26, f12, f30, f2, rmm # perform operation
fnmadd.d f26, f12, f30, f2, rne # perform operation
fnmadd.d f26, f12, f30, f2, rtz # perform operation
fnmadd.d f26, f12, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f12, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f12, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x7, 0x82e7ef3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x63bde604 # load x3 with 32 MSBs 0x0000000063bde604
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063bde604
sw x3, 0(x2) # store x3 (0x63bde604) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000063bde604 from memory into f11
fnmadd.d f7, f28, f6, f11, dyn # perform operation
fnmadd.d f7, f28, f6, f11, rdn # perform operation
fnmadd.d f7, f28, f6, f11, rmm # perform operation
fnmadd.d f7, f28, f6, f11, rne # perform operation
fnmadd.d f7, f28, f6, f11, rtz # perform operation
fnmadd.d f7, f28, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f28, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x3, 0x01c870fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x640fb6e1 # load x3 with 32 MSBs 0x00000000640fb6e1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000640fb6e1
sw x3, 0(x2) # store x3 (0x640fb6e1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000640fb6e1 from memory into f14
fnmadd.d f3, f16, f6, f14, dyn # perform operation
fnmadd.d f3, f16, f6, f14, rdn # perform operation
fnmadd.d f3, f16, f6, f14, rmm # perform operation
fnmadd.d f3, f16, f6, f14, rne # perform operation
fnmadd.d f3, f16, f6, f14, rtz # perform operation
fnmadd.d f3, f16, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x30, 0xe60e051d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xc5c73dcb # load x3 with 32 MSBs 0x00000000c5c73dcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5c73dcb
sw x3, 0(x2) # store x3 (0xc5c73dcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c5c73dcb from memory into f8
fnmadd.d f30, f15, f5, f8, dyn # perform operation
fnmadd.d f30, f15, f5, f8, rdn # perform operation
fnmadd.d f30, f15, f5, f8, rmm # perform operation
fnmadd.d f30, f15, f5, f8, rne # perform operation
fnmadd.d f30, f15, f5, f8, rtz # perform operation
fnmadd.d f30, f15, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f15, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x4, 0x982acd95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x3b53d3eb # load x3 with 32 MSBs 0x000000003b53d3eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b53d3eb
sw x3, 0(x2) # store x3 (0x3b53d3eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003b53d3eb from memory into f9
fnmadd.d f4, f19, f8, f9, dyn # perform operation
fnmadd.d f4, f19, f8, f9, rdn # perform operation
fnmadd.d f4, f19, f8, f9, rmm # perform operation
fnmadd.d f4, f19, f8, f9, rne # perform operation
fnmadd.d f4, f19, f8, f9, rtz # perform operation
fnmadd.d f4, f19, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f19, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x23, 0x8f6fc0fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x7acf10e3 # load x3 with 32 MSBs 0x000000007acf10e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007acf10e3
sw x3, 0(x2) # store x3 (0x7acf10e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007acf10e3 from memory into f21
fnmadd.d f23, f11, f27, f21, dyn # perform operation
fnmadd.d f23, f11, f27, f21, rdn # perform operation
fnmadd.d f23, f11, f27, f21, rmm # perform operation
fnmadd.d f23, f11, f27, f21, rne # perform operation
fnmadd.d f23, f11, f27, f21, rtz # perform operation
fnmadd.d f23, f11, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f11, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f11, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x17, 0xff1cf327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x6a55fbd0 # load x3 with 32 MSBs 0x000000006a55fbd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a55fbd0
sw x3, 0(x2) # store x3 (0x6a55fbd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006a55fbd0 from memory into f9
fnmadd.d f17, f16, f31, f9, dyn # perform operation
fnmadd.d f17, f16, f31, f9, rdn # perform operation
fnmadd.d f17, f16, f31, f9, rmm # perform operation
fnmadd.d f17, f16, f31, f9, rne # perform operation
fnmadd.d f17, f16, f31, f9, rtz # perform operation
fnmadd.d f17, f16, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f16, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f16, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x22, 0xb0357c02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x838fb57f # load x3 with 32 MSBs 0x00000000838fb57f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000838fb57f
sw x3, 0(x2) # store x3 (0x838fb57f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000838fb57f from memory into f14
fnmadd.d f22, f27, f18, f14, dyn # perform operation
fnmadd.d f22, f27, f18, f14, rdn # perform operation
fnmadd.d f22, f27, f18, f14, rmm # perform operation
fnmadd.d f22, f27, f18, f14, rne # perform operation
fnmadd.d f22, f27, f18, f14, rtz # perform operation
fnmadd.d f22, f27, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f27, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x29, 0x3d0d9016 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x267d2ef4 # load x3 with 32 MSBs 0x00000000267d2ef4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000267d2ef4
sw x3, 0(x2) # store x3 (0x267d2ef4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000267d2ef4 from memory into f8
fnmadd.d f29, f12, f16, f8, dyn # perform operation
fnmadd.d f29, f12, f16, f8, rdn # perform operation
fnmadd.d f29, f12, f16, f8, rmm # perform operation
fnmadd.d f29, f12, f16, f8, rne # perform operation
fnmadd.d f29, f12, f16, f8, rtz # perform operation
fnmadd.d f29, f12, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f12, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x25, 0xae3a6c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x50798de6 # load x3 with 32 MSBs 0x0000000050798de6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050798de6
sw x3, 0(x2) # store x3 (0x50798de6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000050798de6 from memory into f30
fnmadd.d f25, f5, f3, f30, dyn # perform operation
fnmadd.d f25, f5, f3, f30, rdn # perform operation
fnmadd.d f25, f5, f3, f30, rmm # perform operation
fnmadd.d f25, f5, f3, f30, rne # perform operation
fnmadd.d f25, f5, f3, f30, rtz # perform operation
fnmadd.d f25, f5, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f5, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f5, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f5, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f5, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f5, f3, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x15, 0x4a87f8ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xabc36466 # load x3 with 32 MSBs 0x00000000abc36466
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abc36466
sw x3, 0(x2) # store x3 (0xabc36466) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000abc36466 from memory into f10
fnmadd.d f15, f19, f11, f10, dyn # perform operation
fnmadd.d f15, f19, f11, f10, rdn # perform operation
fnmadd.d f15, f19, f11, f10, rmm # perform operation
fnmadd.d f15, f19, f11, f10, rne # perform operation
fnmadd.d f15, f19, f11, f10, rtz # perform operation
fnmadd.d f15, f19, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f19, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f19, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x16, 0x64a0fa81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x6bf4b473 # load x3 with 32 MSBs 0x000000006bf4b473
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006bf4b473
sw x3, 0(x2) # store x3 (0x6bf4b473) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000006bf4b473 from memory into f30
fnmadd.d f16, f19, f4, f30, dyn # perform operation
fnmadd.d f16, f19, f4, f30, rdn # perform operation
fnmadd.d f16, f19, f4, f30, rmm # perform operation
fnmadd.d f16, f19, f4, f30, rne # perform operation
fnmadd.d f16, f19, f4, f30, rtz # perform operation
fnmadd.d f16, f19, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f19, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f19, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f19, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f19, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f19, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x31, 0x9be9edbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x4b7ae749 # load x3 with 32 MSBs 0x000000004b7ae749
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b7ae749
sw x3, 0(x2) # store x3 (0x4b7ae749) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004b7ae749 from memory into f3
fnmadd.d f31, f12, f22, f3, dyn # perform operation
fnmadd.d f31, f12, f22, f3, rdn # perform operation
fnmadd.d f31, f12, f22, f3, rmm # perform operation
fnmadd.d f31, f12, f22, f3, rne # perform operation
fnmadd.d f31, f12, f22, f3, rtz # perform operation
fnmadd.d f31, f12, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x31, 0x81f444eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x64a8acab # load x3 with 32 MSBs 0x0000000064a8acab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064a8acab
sw x3, 0(x2) # store x3 (0x64a8acab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000064a8acab from memory into f17
fnmadd.d f31, f5, f30, f17, dyn # perform operation
fnmadd.d f31, f5, f30, f17, rdn # perform operation
fnmadd.d f31, f5, f30, f17, rmm # perform operation
fnmadd.d f31, f5, f30, f17, rne # perform operation
fnmadd.d f31, f5, f30, f17, rtz # perform operation
fnmadd.d f31, f5, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f5, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x31, 0x8d5321bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x4efbad9f # load x3 with 32 MSBs 0x000000004efbad9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004efbad9f
sw x3, 0(x2) # store x3 (0x4efbad9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004efbad9f from memory into f6
fnmadd.d f31, f12, f2, f6, dyn # perform operation
fnmadd.d f31, f12, f2, f6, rdn # perform operation
fnmadd.d f31, f12, f2, f6, rmm # perform operation
fnmadd.d f31, f12, f2, f6, rne # perform operation
fnmadd.d f31, f12, f2, f6, rtz # perform operation
fnmadd.d f31, f12, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x15, 0x30357f10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x1c731339 # load x3 with 32 MSBs 0x000000001c731339
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c731339
sw x3, 0(x2) # store x3 (0x1c731339) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001c731339 from memory into f28
fnmadd.d f15, f20, f2, f28, dyn # perform operation
fnmadd.d f15, f20, f2, f28, rdn # perform operation
fnmadd.d f15, f20, f2, f28, rmm # perform operation
fnmadd.d f15, f20, f2, f28, rne # perform operation
fnmadd.d f15, f20, f2, f28, rtz # perform operation
fnmadd.d f15, f20, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f20, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x22, 0xd99f8997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x6720a586 # load x3 with 32 MSBs 0x000000006720a586
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006720a586
sw x3, 0(x2) # store x3 (0x6720a586) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006720a586 from memory into f4
fnmadd.d f22, f18, f13, f4, dyn # perform operation
fnmadd.d f22, f18, f13, f4, rdn # perform operation
fnmadd.d f22, f18, f13, f4, rmm # perform operation
fnmadd.d f22, f18, f13, f4, rne # perform operation
fnmadd.d f22, f18, f13, f4, rtz # perform operation
fnmadd.d f22, f18, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f18, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f18, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x30, 0x1df3c288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0xd48c7892 # load x3 with 32 MSBs 0x00000000d48c7892
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d48c7892
sw x3, 0(x2) # store x3 (0xd48c7892) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d48c7892 from memory into f3
fnmadd.d f30, f31, f22, f3, dyn # perform operation
fnmadd.d f30, f31, f22, f3, rdn # perform operation
fnmadd.d f30, f31, f22, f3, rmm # perform operation
fnmadd.d f30, f31, f22, f3, rne # perform operation
fnmadd.d f30, f31, f22, f3, rtz # perform operation
fnmadd.d f30, f31, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f31, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f31, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x23, 0x6ad7574e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0x9b76f437 # load x3 with 32 MSBs 0x000000009b76f437
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b76f437
sw x3, 0(x2) # store x3 (0x9b76f437) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009b76f437 from memory into f15
fnmadd.d f23, f18, f20, f15, dyn # perform operation
fnmadd.d f23, f18, f20, f15, rdn # perform operation
fnmadd.d f23, f18, f20, f15, rmm # perform operation
fnmadd.d f23, f18, f20, f15, rne # perform operation
fnmadd.d f23, f18, f20, f15, rtz # perform operation
fnmadd.d f23, f18, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x4, 0xa2de18c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x1de51ec3 # load x3 with 32 MSBs 0x000000001de51ec3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001de51ec3
sw x3, 0(x2) # store x3 (0x1de51ec3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001de51ec3 from memory into f13
fnmadd.d f4, f20, f21, f13, dyn # perform operation
fnmadd.d f4, f20, f21, f13, rdn # perform operation
fnmadd.d f4, f20, f21, f13, rmm # perform operation
fnmadd.d f4, f20, f21, f13, rne # perform operation
fnmadd.d f4, f20, f21, f13, rtz # perform operation
fnmadd.d f4, f20, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x16, 0x3c3f27a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
li x3, 0x42cf9e3e # load x3 with 32 MSBs 0x0000000042cf9e3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042cf9e3e
sw x3, 0(x2) # store x3 (0x42cf9e3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000042cf9e3e from memory into f27
fnmadd.d f16, f20, f7, f27, dyn # perform operation
fnmadd.d f16, f20, f7, f27, rdn # perform operation
fnmadd.d f16, f20, f7, f27, rmm # perform operation
fnmadd.d f16, f20, f7, f27, rne # perform operation
fnmadd.d f16, f20, f7, f27, rtz # perform operation
fnmadd.d f16, f20, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f20, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f20, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f20, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f20, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f20, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x20, 0xc208a45f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0xe64a7e97 # load x3 with 32 MSBs 0x00000000e64a7e97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e64a7e97
sw x3, 0(x2) # store x3 (0xe64a7e97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e64a7e97 from memory into f16
fnmadd.d f20, f5, f30, f16, dyn # perform operation
fnmadd.d f20, f5, f30, f16, rdn # perform operation
fnmadd.d f20, f5, f30, f16, rmm # perform operation
fnmadd.d f20, f5, f30, f16, rne # perform operation
fnmadd.d f20, f5, f30, f16, rtz # perform operation
fnmadd.d f20, f5, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f5, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x8, 0xa8345a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0xd78d9005 # load x3 with 32 MSBs 0x00000000d78d9005
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d78d9005
sw x3, 0(x2) # store x3 (0xd78d9005) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d78d9005 from memory into f9
fnmadd.d f8, f30, f22, f9, dyn # perform operation
fnmadd.d f8, f30, f22, f9, rdn # perform operation
fnmadd.d f8, f30, f22, f9, rmm # perform operation
fnmadd.d f8, f30, f22, f9, rne # perform operation
fnmadd.d f8, f30, f22, f9, rtz # perform operation
fnmadd.d f8, f30, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f30, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f30, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f30, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f30, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f30, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x18, 0x4e201185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x88a631aa # load x3 with 32 MSBs 0x0000000088a631aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088a631aa
sw x3, 0(x2) # store x3 (0x88a631aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000088a631aa from memory into f20
fnmadd.d f18, f13, f28, f20, dyn # perform operation
fnmadd.d f18, f13, f28, f20, rdn # perform operation
fnmadd.d f18, f13, f28, f20, rmm # perform operation
fnmadd.d f18, f13, f28, f20, rne # perform operation
fnmadd.d f18, f13, f28, f20, rtz # perform operation
fnmadd.d f18, f13, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f13, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f13, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f13, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f13, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f13, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x20, 0xe45dc39e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x1ce522b9 # load x3 with 32 MSBs 0x000000001ce522b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ce522b9
sw x3, 0(x2) # store x3 (0x1ce522b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001ce522b9 from memory into f19
fnmadd.d f20, f11, f21, f19, dyn # perform operation
fnmadd.d f20, f11, f21, f19, rdn # perform operation
fnmadd.d f20, f11, f21, f19, rmm # perform operation
fnmadd.d f20, f11, f21, f19, rne # perform operation
fnmadd.d f20, f11, f21, f19, rtz # perform operation
fnmadd.d f20, f11, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f11, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f11, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f11, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f11, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f11, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x19, 0x2333455a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0x7297b736 # load x3 with 32 MSBs 0x000000007297b736
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007297b736
sw x3, 0(x2) # store x3 (0x7297b736) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007297b736 from memory into f5
fnmadd.d f19, f30, f16, f5, dyn # perform operation
fnmadd.d f19, f30, f16, f5, rdn # perform operation
fnmadd.d f19, f30, f16, f5, rmm # perform operation
fnmadd.d f19, f30, f16, f5, rne # perform operation
fnmadd.d f19, f30, f16, f5, rtz # perform operation
fnmadd.d f19, f30, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f30, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f30, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x10, 0xa3fb4860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x8157fc89 # load x3 with 32 MSBs 0x000000008157fc89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008157fc89
sw x3, 0(x2) # store x3 (0x8157fc89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008157fc89 from memory into f19
fnmadd.d f10, f15, f18, f19, dyn # perform operation
fnmadd.d f10, f15, f18, f19, rdn # perform operation
fnmadd.d f10, f15, f18, f19, rmm # perform operation
fnmadd.d f10, f15, f18, f19, rne # perform operation
fnmadd.d f10, f15, f18, f19, rtz # perform operation
fnmadd.d f10, f15, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f15, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x03cb4ac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
li x3, 0x45bd496a # load x3 with 32 MSBs 0x0000000045bd496a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045bd496a
sw x3, 0(x2) # store x3 (0x45bd496a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000045bd496a from memory into f14
fnmadd.d f29, f3, f28, f14, dyn # perform operation
fnmadd.d f29, f3, f28, f14, rdn # perform operation
fnmadd.d f29, f3, f28, f14, rmm # perform operation
fnmadd.d f29, f3, f28, f14, rne # perform operation
fnmadd.d f29, f3, f28, f14, rtz # perform operation
fnmadd.d f29, f3, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f3, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f3, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x12, 0x00f6ed9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0xca28300a # load x3 with 32 MSBs 0x00000000ca28300a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca28300a
sw x3, 0(x2) # store x3 (0xca28300a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ca28300a from memory into f18
fnmadd.d f12, f11, f28, f18, dyn # perform operation
fnmadd.d f12, f11, f28, f18, rdn # perform operation
fnmadd.d f12, f11, f28, f18, rmm # perform operation
fnmadd.d f12, f11, f28, f18, rne # perform operation
fnmadd.d f12, f11, f28, f18, rtz # perform operation
fnmadd.d f12, f11, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f11, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f11, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f11, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f11, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f11, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x7, 0xc880bcaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x6caaa1ab # load x3 with 32 MSBs 0x000000006caaa1ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006caaa1ab
sw x3, 0(x2) # store x3 (0x6caaa1ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006caaa1ab from memory into f24
fnmadd.d f7, f10, f28, f24, dyn # perform operation
fnmadd.d f7, f10, f28, f24, rdn # perform operation
fnmadd.d f7, f10, f28, f24, rmm # perform operation
fnmadd.d f7, f10, f28, f24, rne # perform operation
fnmadd.d f7, f10, f28, f24, rtz # perform operation
fnmadd.d f7, f10, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f10, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x24, 0xa1780b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0x2831542b # load x3 with 32 MSBs 0x000000002831542b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002831542b
sw x3, 0(x2) # store x3 (0x2831542b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002831542b from memory into f7
fnmadd.d f24, f29, f14, f7, dyn # perform operation
fnmadd.d f24, f29, f14, f7, rdn # perform operation
fnmadd.d f24, f29, f14, f7, rmm # perform operation
fnmadd.d f24, f29, f14, f7, rne # perform operation
fnmadd.d f24, f29, f14, f7, rtz # perform operation
fnmadd.d f24, f29, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f29, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x26, 0x7269bb08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x30369656 # load x3 with 32 MSBs 0x0000000030369656
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030369656
sw x3, 0(x2) # store x3 (0x30369656) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000030369656 from memory into f27
fnmadd.d f26, f1, f12, f27, dyn # perform operation
fnmadd.d f26, f1, f12, f27, rdn # perform operation
fnmadd.d f26, f1, f12, f27, rmm # perform operation
fnmadd.d f26, f1, f12, f27, rne # perform operation
fnmadd.d f26, f1, f12, f27, rtz # perform operation
fnmadd.d f26, f1, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f1, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x2, 0x860ebc07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x889d39d9 # load x3 with 32 MSBs 0x00000000889d39d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000889d39d9
sw x3, 0(x2) # store x3 (0x889d39d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000889d39d9 from memory into f31
fnmadd.d f2, f17, f10, f31, dyn # perform operation
fnmadd.d f2, f17, f10, f31, rdn # perform operation
fnmadd.d f2, f17, f10, f31, rmm # perform operation
fnmadd.d f2, f17, f10, f31, rne # perform operation
fnmadd.d f2, f17, f10, f31, rtz # perform operation
fnmadd.d f2, f17, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f17, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x30, 0xa2899916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0x7bb85301 # load x3 with 32 MSBs 0x000000007bb85301
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bb85301
sw x3, 0(x2) # store x3 (0x7bb85301) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007bb85301 from memory into f16
fnmadd.d f30, f20, f18, f16, dyn # perform operation
fnmadd.d f30, f20, f18, f16, rdn # perform operation
fnmadd.d f30, f20, f18, f16, rmm # perform operation
fnmadd.d f30, f20, f18, f16, rne # perform operation
fnmadd.d f30, f20, f18, f16, rtz # perform operation
fnmadd.d f30, f20, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f20, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x11, 0x484fc1bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x7784edc1 # load x3 with 32 MSBs 0x000000007784edc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007784edc1
sw x3, 0(x2) # store x3 (0x7784edc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007784edc1 from memory into f13
fnmadd.d f11, f6, f15, f13, dyn # perform operation
fnmadd.d f11, f6, f15, f13, rdn # perform operation
fnmadd.d f11, f6, f15, f13, rmm # perform operation
fnmadd.d f11, f6, f15, f13, rne # perform operation
fnmadd.d f11, f6, f15, f13, rtz # perform operation
fnmadd.d f11, f6, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f6, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x11, 0xe3530caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
li x3, 0xc33763bd # load x3 with 32 MSBs 0x00000000c33763bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c33763bd
sw x3, 0(x2) # store x3 (0xc33763bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c33763bd from memory into f20
fnmadd.d f11, f3, f4, f20, dyn # perform operation
fnmadd.d f11, f3, f4, f20, rdn # perform operation
fnmadd.d f11, f3, f4, f20, rmm # perform operation
fnmadd.d f11, f3, f4, f20, rne # perform operation
fnmadd.d f11, f3, f4, f20, rtz # perform operation
fnmadd.d f11, f3, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f3, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x27, 0xb5ba074e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x14781c73 # load x3 with 32 MSBs 0x0000000014781c73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014781c73
sw x3, 0(x2) # store x3 (0x14781c73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000014781c73 from memory into f10
fnmadd.d f27, f1, f16, f10, dyn # perform operation
fnmadd.d f27, f1, f16, f10, rdn # perform operation
fnmadd.d f27, f1, f16, f10, rmm # perform operation
fnmadd.d f27, f1, f16, f10, rne # perform operation
fnmadd.d f27, f1, f16, f10, rtz # perform operation
fnmadd.d f27, f1, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f1, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f1, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f1, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f1, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f1, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x23, 0x735eaa6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x18deda7e # load x3 with 32 MSBs 0x0000000018deda7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018deda7e
sw x3, 0(x2) # store x3 (0x18deda7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000018deda7e from memory into f8
fnmadd.d f23, f5, f29, f8, dyn # perform operation
fnmadd.d f23, f5, f29, f8, rdn # perform operation
fnmadd.d f23, f5, f29, f8, rmm # perform operation
fnmadd.d f23, f5, f29, f8, rne # perform operation
fnmadd.d f23, f5, f29, f8, rtz # perform operation
fnmadd.d f23, f5, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f5, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x28, 0x15d9063e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x07a0e641 # load x3 with 32 MSBs 0x0000000007a0e641
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007a0e641
sw x3, 0(x2) # store x3 (0x07a0e641) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000007a0e641 from memory into f21
fnmadd.d f28, f17, f7, f21, dyn # perform operation
fnmadd.d f28, f17, f7, f21, rdn # perform operation
fnmadd.d f28, f17, f7, f21, rmm # perform operation
fnmadd.d f28, f17, f7, f21, rne # perform operation
fnmadd.d f28, f17, f7, f21, rtz # perform operation
fnmadd.d f28, f17, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f17, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f17, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x19, 0x5f45cc06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0xfd25aa75 # load x3 with 32 MSBs 0x00000000fd25aa75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd25aa75
sw x3, 0(x2) # store x3 (0xfd25aa75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000fd25aa75 from memory into f21
fnmadd.d f19, f13, f31, f21, dyn # perform operation
fnmadd.d f19, f13, f31, f21, rdn # perform operation
fnmadd.d f19, f13, f31, f21, rmm # perform operation
fnmadd.d f19, f13, f31, f21, rne # perform operation
fnmadd.d f19, f13, f31, f21, rtz # perform operation
fnmadd.d f19, f13, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f13, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f13, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0xda948d9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x3722c172 # load x3 with 32 MSBs 0x000000003722c172
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003722c172
sw x3, 0(x2) # store x3 (0x3722c172) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003722c172 from memory into f6
fnmadd.d f13, f17, f4, f6, dyn # perform operation
fnmadd.d f13, f17, f4, f6, rdn # perform operation
fnmadd.d f13, f17, f4, f6, rmm # perform operation
fnmadd.d f13, f17, f4, f6, rne # perform operation
fnmadd.d f13, f17, f4, f6, rtz # perform operation
fnmadd.d f13, f17, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f17, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f17, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f17, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f17, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f17, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x30, 0x96c6ee85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xaa011028 # load x3 with 32 MSBs 0x00000000aa011028
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa011028
sw x3, 0(x2) # store x3 (0xaa011028) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000aa011028 from memory into f9
fnmadd.d f30, f31, f15, f9, dyn # perform operation
fnmadd.d f30, f31, f15, f9, rdn # perform operation
fnmadd.d f30, f31, f15, f9, rmm # perform operation
fnmadd.d f30, f31, f15, f9, rne # perform operation
fnmadd.d f30, f31, f15, f9, rtz # perform operation
fnmadd.d f30, f31, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f31, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f31, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x29, 0x1d384b67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0xc3bb933b # load x3 with 32 MSBs 0x00000000c3bb933b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3bb933b
sw x3, 0(x2) # store x3 (0xc3bb933b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c3bb933b from memory into f23
fnmadd.d f29, f21, f7, f23, dyn # perform operation
fnmadd.d f29, f21, f7, f23, rdn # perform operation
fnmadd.d f29, f21, f7, f23, rmm # perform operation
fnmadd.d f29, f21, f7, f23, rne # perform operation
fnmadd.d f29, f21, f7, f23, rtz # perform operation
fnmadd.d f29, f21, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f21, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f21, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x26, 0x974406e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x8fc5d8a8 # load x3 with 32 MSBs 0x000000008fc5d8a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008fc5d8a8
sw x3, 0(x2) # store x3 (0x8fc5d8a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008fc5d8a8 from memory into f2
fnmadd.d f26, f18, f10, f2, dyn # perform operation
fnmadd.d f26, f18, f10, f2, rdn # perform operation
fnmadd.d f26, f18, f10, f2, rmm # perform operation
fnmadd.d f26, f18, f10, f2, rne # perform operation
fnmadd.d f26, f18, f10, f2, rtz # perform operation
fnmadd.d f26, f18, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f18, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x1, 0x00bf0471 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0xf42cc23d # load x3 with 32 MSBs 0x00000000f42cc23d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f42cc23d
sw x3, 0(x2) # store x3 (0xf42cc23d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f42cc23d from memory into f4
fnmadd.d f1, f30, f19, f4, dyn # perform operation
fnmadd.d f1, f30, f19, f4, rdn # perform operation
fnmadd.d f1, f30, f19, f4, rmm # perform operation
fnmadd.d f1, f30, f19, f4, rne # perform operation
fnmadd.d f1, f30, f19, f4, rtz # perform operation
fnmadd.d f1, f30, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f30, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x17, 0x367013ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x299dda09 # load x3 with 32 MSBs 0x00000000299dda09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000299dda09
sw x3, 0(x2) # store x3 (0x299dda09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000299dda09 from memory into f10
fnmadd.d f17, f23, f12, f10, dyn # perform operation
fnmadd.d f17, f23, f12, f10, rdn # perform operation
fnmadd.d f17, f23, f12, f10, rmm # perform operation
fnmadd.d f17, f23, f12, f10, rne # perform operation
fnmadd.d f17, f23, f12, f10, rtz # perform operation
fnmadd.d f17, f23, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f23, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f23, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f23, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f23, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f23, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x16, 0x8fa3ad4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x299c42f2 # load x3 with 32 MSBs 0x00000000299c42f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000299c42f2
sw x3, 0(x2) # store x3 (0x299c42f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000299c42f2 from memory into f21
fnmadd.d f16, f30, f23, f21, dyn # perform operation
fnmadd.d f16, f30, f23, f21, rdn # perform operation
fnmadd.d f16, f30, f23, f21, rmm # perform operation
fnmadd.d f16, f30, f23, f21, rne # perform operation
fnmadd.d f16, f30, f23, f21, rtz # perform operation
fnmadd.d f16, f30, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f30, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x9, 0xe0fa7955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xe8e5e7a0 # load x3 with 32 MSBs 0x00000000e8e5e7a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8e5e7a0
sw x3, 0(x2) # store x3 (0xe8e5e7a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e8e5e7a0 from memory into f20
fnmadd.d f9, f5, f10, f20, dyn # perform operation
fnmadd.d f9, f5, f10, f20, rdn # perform operation
fnmadd.d f9, f5, f10, f20, rmm # perform operation
fnmadd.d f9, f5, f10, f20, rne # perform operation
fnmadd.d f9, f5, f10, f20, rtz # perform operation
fnmadd.d f9, f5, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f5, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f5, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f5, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f5, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f5, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x11, 0xbd29c2e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x3c4a8591 # load x3 with 32 MSBs 0x000000003c4a8591
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c4a8591
sw x3, 0(x2) # store x3 (0x3c4a8591) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003c4a8591 from memory into f26
fnmadd.d f11, f31, f24, f26, dyn # perform operation
fnmadd.d f11, f31, f24, f26, rdn # perform operation
fnmadd.d f11, f31, f24, f26, rmm # perform operation
fnmadd.d f11, f31, f24, f26, rne # perform operation
fnmadd.d f11, f31, f24, f26, rtz # perform operation
fnmadd.d f11, f31, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f31, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x11, 0x7ff04716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x7ae1853f # load x3 with 32 MSBs 0x000000007ae1853f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ae1853f
sw x3, 0(x2) # store x3 (0x7ae1853f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007ae1853f from memory into f31
fnmadd.d f11, f22, f19, f31, dyn # perform operation
fnmadd.d f11, f22, f19, f31, rdn # perform operation
fnmadd.d f11, f22, f19, f31, rmm # perform operation
fnmadd.d f11, f22, f19, f31, rne # perform operation
fnmadd.d f11, f22, f19, f31, rtz # perform operation
fnmadd.d f11, f22, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f22, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x12, 0x2fd93795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x0f8329c5 # load x3 with 32 MSBs 0x000000000f8329c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f8329c5
sw x3, 0(x2) # store x3 (0x0f8329c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000f8329c5 from memory into f11
fnmadd.d f12, f8, f3, f11, dyn # perform operation
fnmadd.d f12, f8, f3, f11, rdn # perform operation
fnmadd.d f12, f8, f3, f11, rmm # perform operation
fnmadd.d f12, f8, f3, f11, rne # perform operation
fnmadd.d f12, f8, f3, f11, rtz # perform operation
fnmadd.d f12, f8, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f8, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f8, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f8, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f8, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f8, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x22, 0x9cef86ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x2bfa3176 # load x3 with 32 MSBs 0x000000002bfa3176
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bfa3176
sw x3, 0(x2) # store x3 (0x2bfa3176) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002bfa3176 from memory into f5
fnmadd.d f22, f2, f28, f5, dyn # perform operation
fnmadd.d f22, f2, f28, f5, rdn # perform operation
fnmadd.d f22, f2, f28, f5, rmm # perform operation
fnmadd.d f22, f2, f28, f5, rne # perform operation
fnmadd.d f22, f2, f28, f5, rtz # perform operation
fnmadd.d f22, f2, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f2, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f2, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f2, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f2, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f2, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0x30785711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0xa9c91819 # load x3 with 32 MSBs 0x00000000a9c91819
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9c91819
sw x3, 0(x2) # store x3 (0xa9c91819) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a9c91819 from memory into f13
fnmadd.d f18, f29, f23, f13, dyn # perform operation
fnmadd.d f18, f29, f23, f13, rdn # perform operation
fnmadd.d f18, f29, f23, f13, rmm # perform operation
fnmadd.d f18, f29, f23, f13, rne # perform operation
fnmadd.d f18, f29, f23, f13, rtz # perform operation
fnmadd.d f18, f29, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x13, 0xf184ed45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x6ff66e13 # load x3 with 32 MSBs 0x000000006ff66e13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ff66e13
sw x3, 0(x2) # store x3 (0x6ff66e13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006ff66e13 from memory into f25
fnmadd.d f13, f31, f24, f25, dyn # perform operation
fnmadd.d f13, f31, f24, f25, rdn # perform operation
fnmadd.d f13, f31, f24, f25, rmm # perform operation
fnmadd.d f13, f31, f24, f25, rne # perform operation
fnmadd.d f13, f31, f24, f25, rtz # perform operation
fnmadd.d f13, f31, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f31, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f31, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x17, 0xf47f7d5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x991ef609 # load x3 with 32 MSBs 0x00000000991ef609
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000991ef609
sw x3, 0(x2) # store x3 (0x991ef609) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000991ef609 from memory into f28
fnmadd.d f17, f16, f19, f28, dyn # perform operation
fnmadd.d f17, f16, f19, f28, rdn # perform operation
fnmadd.d f17, f16, f19, f28, rmm # perform operation
fnmadd.d f17, f16, f19, f28, rne # perform operation
fnmadd.d f17, f16, f19, f28, rtz # perform operation
fnmadd.d f17, f16, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f16, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f16, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x19, 0x1a0eb124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xdeaab28f # load x3 with 32 MSBs 0x00000000deaab28f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000deaab28f
sw x3, 0(x2) # store x3 (0xdeaab28f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000deaab28f from memory into f5
fnmadd.d f19, f9, f2, f5, dyn # perform operation
fnmadd.d f19, f9, f2, f5, rdn # perform operation
fnmadd.d f19, f9, f2, f5, rmm # perform operation
fnmadd.d f19, f9, f2, f5, rne # perform operation
fnmadd.d f19, f9, f2, f5, rtz # perform operation
fnmadd.d f19, f9, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f9, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f9, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f9, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f9, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f9, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x1, 0x3ded49f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x3d45465b # load x3 with 32 MSBs 0x000000003d45465b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d45465b
sw x3, 0(x2) # store x3 (0x3d45465b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003d45465b from memory into f8
fnmadd.d f1, f31, f28, f8, dyn # perform operation
fnmadd.d f1, f31, f28, f8, rdn # perform operation
fnmadd.d f1, f31, f28, f8, rmm # perform operation
fnmadd.d f1, f31, f28, f8, rne # perform operation
fnmadd.d f1, f31, f28, f8, rtz # perform operation
fnmadd.d f1, f31, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f31, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f31, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x18, 0xcc8dc475 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0x0d1be131 # load x3 with 32 MSBs 0x000000000d1be131
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d1be131
sw x3, 0(x2) # store x3 (0x0d1be131) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000d1be131 from memory into f6
fnmadd.d f18, f30, f7, f6, dyn # perform operation
fnmadd.d f18, f30, f7, f6, rdn # perform operation
fnmadd.d f18, f30, f7, f6, rmm # perform operation
fnmadd.d f18, f30, f7, f6, rne # perform operation
fnmadd.d f18, f30, f7, f6, rtz # perform operation
fnmadd.d f18, f30, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f30, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f30, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x22, 0x04f782e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x5b97c4e7 # load x3 with 32 MSBs 0x000000005b97c4e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b97c4e7
sw x3, 0(x2) # store x3 (0x5b97c4e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005b97c4e7 from memory into f26
fnmadd.d f22, f25, f31, f26, dyn # perform operation
fnmadd.d f22, f25, f31, f26, rdn # perform operation
fnmadd.d f22, f25, f31, f26, rmm # perform operation
fnmadd.d f22, f25, f31, f26, rne # perform operation
fnmadd.d f22, f25, f31, f26, rtz # perform operation
fnmadd.d f22, f25, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f25, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x22, 0x34f4498b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x04f49a30 # load x3 with 32 MSBs 0x0000000004f49a30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004f49a30
sw x3, 0(x2) # store x3 (0x04f49a30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000004f49a30 from memory into f28
fnmadd.d f22, f12, f27, f28, dyn # perform operation
fnmadd.d f22, f12, f27, f28, rdn # perform operation
fnmadd.d f22, f12, f27, f28, rmm # perform operation
fnmadd.d f22, f12, f27, f28, rne # perform operation
fnmadd.d f22, f12, f27, f28, rtz # perform operation
fnmadd.d f22, f12, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f12, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f12, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x26, 0xc1c08d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0xb6e6e847 # load x3 with 32 MSBs 0x00000000b6e6e847
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6e6e847
sw x3, 0(x2) # store x3 (0xb6e6e847) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b6e6e847 from memory into f16
fnmadd.d f26, f20, f18, f16, dyn # perform operation
fnmadd.d f26, f20, f18, f16, rdn # perform operation
fnmadd.d f26, f20, f18, f16, rmm # perform operation
fnmadd.d f26, f20, f18, f16, rne # perform operation
fnmadd.d f26, f20, f18, f16, rtz # perform operation
fnmadd.d f26, f20, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f20, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x1, 0xdbfea34d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x1e9576d3 # load x3 with 32 MSBs 0x000000001e9576d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e9576d3
sw x3, 0(x2) # store x3 (0x1e9576d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001e9576d3 from memory into f20
fnmadd.d f1, f21, f7, f20, dyn # perform operation
fnmadd.d f1, f21, f7, f20, rdn # perform operation
fnmadd.d f1, f21, f7, f20, rmm # perform operation
fnmadd.d f1, f21, f7, f20, rne # perform operation
fnmadd.d f1, f21, f7, f20, rtz # perform operation
fnmadd.d f1, f21, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f21, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x17, 0xd16b3da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x6c50fdeb # load x3 with 32 MSBs 0x000000006c50fdeb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c50fdeb
sw x3, 0(x2) # store x3 (0x6c50fdeb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006c50fdeb from memory into f29
fnmadd.d f17, f1, f13, f29, dyn # perform operation
fnmadd.d f17, f1, f13, f29, rdn # perform operation
fnmadd.d f17, f1, f13, f29, rmm # perform operation
fnmadd.d f17, f1, f13, f29, rne # perform operation
fnmadd.d f17, f1, f13, f29, rtz # perform operation
fnmadd.d f17, f1, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f1, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f1, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x8, 0x26d8965a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x46d50db3 # load x3 with 32 MSBs 0x0000000046d50db3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046d50db3
sw x3, 0(x2) # store x3 (0x46d50db3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000046d50db3 from memory into f21
fnmadd.d f8, f17, f3, f21, dyn # perform operation
fnmadd.d f8, f17, f3, f21, rdn # perform operation
fnmadd.d f8, f17, f3, f21, rmm # perform operation
fnmadd.d f8, f17, f3, f21, rne # perform operation
fnmadd.d f8, f17, f3, f21, rtz # perform operation
fnmadd.d f8, f17, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f17, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f17, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x10, 0xe81503aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0xc19eea6e # load x3 with 32 MSBs 0x00000000c19eea6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c19eea6e
sw x3, 0(x2) # store x3 (0xc19eea6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c19eea6e from memory into f13
fnmadd.d f10, f30, f16, f13, dyn # perform operation
fnmadd.d f10, f30, f16, f13, rdn # perform operation
fnmadd.d f10, f30, f16, f13, rmm # perform operation
fnmadd.d f10, f30, f16, f13, rne # perform operation
fnmadd.d f10, f30, f16, f13, rtz # perform operation
fnmadd.d f10, f30, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f30, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f30, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f30, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f30, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f30, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x18, 0x8f38be74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x52bee135 # load x3 with 32 MSBs 0x0000000052bee135
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052bee135
sw x3, 0(x2) # store x3 (0x52bee135) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000052bee135 from memory into f4
fnmadd.d f18, f19, f20, f4, dyn # perform operation
fnmadd.d f18, f19, f20, f4, rdn # perform operation
fnmadd.d f18, f19, f20, f4, rmm # perform operation
fnmadd.d f18, f19, f20, f4, rne # perform operation
fnmadd.d f18, f19, f20, f4, rtz # perform operation
fnmadd.d f18, f19, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f19, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x1, 0x85321e0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0xdc1efcff # load x3 with 32 MSBs 0x00000000dc1efcff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc1efcff
sw x3, 0(x2) # store x3 (0xdc1efcff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000dc1efcff from memory into f3
fnmadd.d f1, f15, f2, f3, dyn # perform operation
fnmadd.d f1, f15, f2, f3, rdn # perform operation
fnmadd.d f1, f15, f2, f3, rmm # perform operation
fnmadd.d f1, f15, f2, f3, rne # perform operation
fnmadd.d f1, f15, f2, f3, rtz # perform operation
fnmadd.d f1, f15, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x13, 0xa5f595e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xaf4dea82 # load x3 with 32 MSBs 0x00000000af4dea82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af4dea82
sw x3, 0(x2) # store x3 (0xaf4dea82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000af4dea82 from memory into f6
fnmadd.d f13, f19, f21, f6, dyn # perform operation
fnmadd.d f13, f19, f21, f6, rdn # perform operation
fnmadd.d f13, f19, f21, f6, rmm # perform operation
fnmadd.d f13, f19, f21, f6, rne # perform operation
fnmadd.d f13, f19, f21, f6, rtz # perform operation
fnmadd.d f13, f19, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x7, 0xdd4745d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0xbc5e77ef # load x3 with 32 MSBs 0x00000000bc5e77ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc5e77ef
sw x3, 0(x2) # store x3 (0xbc5e77ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bc5e77ef from memory into f31
fnmadd.d f7, f22, f5, f31, dyn # perform operation
fnmadd.d f7, f22, f5, f31, rdn # perform operation
fnmadd.d f7, f22, f5, f31, rmm # perform operation
fnmadd.d f7, f22, f5, f31, rne # perform operation
fnmadd.d f7, f22, f5, f31, rtz # perform operation
fnmadd.d f7, f22, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f22, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x11, 0xddf3fe81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x9ad5e473 # load x3 with 32 MSBs 0x000000009ad5e473
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ad5e473
sw x3, 0(x2) # store x3 (0x9ad5e473) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009ad5e473 from memory into f29
fnmadd.d f11, f24, f15, f29, dyn # perform operation
fnmadd.d f11, f24, f15, f29, rdn # perform operation
fnmadd.d f11, f24, f15, f29, rmm # perform operation
fnmadd.d f11, f24, f15, f29, rne # perform operation
fnmadd.d f11, f24, f15, f29, rtz # perform operation
fnmadd.d f11, f24, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f24, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f24, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x16, 0xc483a82d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xc0cf2812 # load x3 with 32 MSBs 0x00000000c0cf2812
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0cf2812
sw x3, 0(x2) # store x3 (0xc0cf2812) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c0cf2812 from memory into f14
fnmadd.d f16, f20, f30, f14, dyn # perform operation
fnmadd.d f16, f20, f30, f14, rdn # perform operation
fnmadd.d f16, f20, f30, f14, rmm # perform operation
fnmadd.d f16, f20, f30, f14, rne # perform operation
fnmadd.d f16, f20, f30, f14, rtz # perform operation
fnmadd.d f16, f20, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f20, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f20, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f20, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f20, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f20, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x18, 0x091e7d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xac1ca311 # load x3 with 32 MSBs 0x00000000ac1ca311
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac1ca311
sw x3, 0(x2) # store x3 (0xac1ca311) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ac1ca311 from memory into f31
fnmadd.d f18, f26, f13, f31, dyn # perform operation
fnmadd.d f18, f26, f13, f31, rdn # perform operation
fnmadd.d f18, f26, f13, f31, rmm # perform operation
fnmadd.d f18, f26, f13, f31, rne # perform operation
fnmadd.d f18, f26, f13, f31, rtz # perform operation
fnmadd.d f18, f26, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f26, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f26, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f26, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f26, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f26, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x22, 0x0215fe9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0xa88ce9d1 # load x3 with 32 MSBs 0x00000000a88ce9d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a88ce9d1
sw x3, 0(x2) # store x3 (0xa88ce9d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a88ce9d1 from memory into f26
fnmadd.d f22, f27, f30, f26, dyn # perform operation
fnmadd.d f22, f27, f30, f26, rdn # perform operation
fnmadd.d f22, f27, f30, f26, rmm # perform operation
fnmadd.d f22, f27, f30, f26, rne # perform operation
fnmadd.d f22, f27, f30, f26, rtz # perform operation
fnmadd.d f22, f27, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f27, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x1, 0x3e77d18b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x867da5d2 # load x3 with 32 MSBs 0x00000000867da5d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000867da5d2
sw x3, 0(x2) # store x3 (0x867da5d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000867da5d2 from memory into f27
fnmadd.d f1, f13, f10, f27, dyn # perform operation
fnmadd.d f1, f13, f10, f27, rdn # perform operation
fnmadd.d f1, f13, f10, f27, rmm # perform operation
fnmadd.d f1, f13, f10, f27, rne # perform operation
fnmadd.d f1, f13, f10, f27, rtz # perform operation
fnmadd.d f1, f13, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f13, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x27, 0xba4d5f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xc6e47000 # load x3 with 32 MSBs 0x00000000c6e47000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6e47000
sw x3, 0(x2) # store x3 (0xc6e47000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c6e47000 from memory into f14
fnmadd.d f27, f16, f1, f14, dyn # perform operation
fnmadd.d f27, f16, f1, f14, rdn # perform operation
fnmadd.d f27, f16, f1, f14, rmm # perform operation
fnmadd.d f27, f16, f1, f14, rne # perform operation
fnmadd.d f27, f16, f1, f14, rtz # perform operation
fnmadd.d f27, f16, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f16, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f16, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x8, 0xce193185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xee43f0e4 # load x3 with 32 MSBs 0x00000000ee43f0e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee43f0e4
sw x3, 0(x2) # store x3 (0xee43f0e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ee43f0e4 from memory into f12
fnmadd.d f8, f19, f6, f12, dyn # perform operation
fnmadd.d f8, f19, f6, f12, rdn # perform operation
fnmadd.d f8, f19, f6, f12, rmm # perform operation
fnmadd.d f8, f19, f6, f12, rne # perform operation
fnmadd.d f8, f19, f6, f12, rtz # perform operation
fnmadd.d f8, f19, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f19, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f19, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x11, 0x9066aba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0xb94effde # load x3 with 32 MSBs 0x00000000b94effde
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b94effde
sw x3, 0(x2) # store x3 (0xb94effde) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b94effde from memory into f30
fnmadd.d f11, f24, f13, f30, dyn # perform operation
fnmadd.d f11, f24, f13, f30, rdn # perform operation
fnmadd.d f11, f24, f13, f30, rmm # perform operation
fnmadd.d f11, f24, f13, f30, rne # perform operation
fnmadd.d f11, f24, f13, f30, rtz # perform operation
fnmadd.d f11, f24, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f24, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x31, 0x66dd1602 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
li x3, 0xdbe79f3a # load x3 with 32 MSBs 0x00000000dbe79f3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbe79f3a
sw x3, 0(x2) # store x3 (0xdbe79f3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000dbe79f3a from memory into f22
fnmadd.d f31, f12, f15, f22, dyn # perform operation
fnmadd.d f31, f12, f15, f22, rdn # perform operation
fnmadd.d f31, f12, f15, f22, rmm # perform operation
fnmadd.d f31, f12, f15, f22, rne # perform operation
fnmadd.d f31, f12, f15, f22, rtz # perform operation
fnmadd.d f31, f12, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x28, 0xdca7a3e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x92d81ecb # load x3 with 32 MSBs 0x0000000092d81ecb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092d81ecb
sw x3, 0(x2) # store x3 (0x92d81ecb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000092d81ecb from memory into f6
fnmadd.d f28, f19, f5, f6, dyn # perform operation
fnmadd.d f28, f19, f5, f6, rdn # perform operation
fnmadd.d f28, f19, f5, f6, rmm # perform operation
fnmadd.d f28, f19, f5, f6, rne # perform operation
fnmadd.d f28, f19, f5, f6, rtz # perform operation
fnmadd.d f28, f19, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f19, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f19, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f19, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f19, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f19, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x14, 0xc23e8431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x652f0dcc # load x3 with 32 MSBs 0x00000000652f0dcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000652f0dcc
sw x3, 0(x2) # store x3 (0x652f0dcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000652f0dcc from memory into f7
fnmadd.d f14, f16, f26, f7, dyn # perform operation
fnmadd.d f14, f16, f26, f7, rdn # perform operation
fnmadd.d f14, f16, f26, f7, rmm # perform operation
fnmadd.d f14, f16, f26, f7, rne # perform operation
fnmadd.d f14, f16, f26, f7, rtz # perform operation
fnmadd.d f14, f16, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f16, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x4, 0x0e9ed796 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x5e54f638 # load x3 with 32 MSBs 0x000000005e54f638
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e54f638
sw x3, 0(x2) # store x3 (0x5e54f638) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005e54f638 from memory into f17
fnmadd.d f4, f5, f29, f17, dyn # perform operation
fnmadd.d f4, f5, f29, f17, rdn # perform operation
fnmadd.d f4, f5, f29, f17, rmm # perform operation
fnmadd.d f4, f5, f29, f17, rne # perform operation
fnmadd.d f4, f5, f29, f17, rtz # perform operation
fnmadd.d f4, f5, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f5, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x6, 0x84123e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x9d813db9 # load x3 with 32 MSBs 0x000000009d813db9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d813db9
sw x3, 0(x2) # store x3 (0x9d813db9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009d813db9 from memory into f17
fnmadd.d f6, f11, f29, f17, dyn # perform operation
fnmadd.d f6, f11, f29, f17, rdn # perform operation
fnmadd.d f6, f11, f29, f17, rmm # perform operation
fnmadd.d f6, f11, f29, f17, rne # perform operation
fnmadd.d f6, f11, f29, f17, rtz # perform operation
fnmadd.d f6, f11, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x23, 0x01062b1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x1108a797 # load x3 with 32 MSBs 0x000000001108a797
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001108a797
sw x3, 0(x2) # store x3 (0x1108a797) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001108a797 from memory into f14
fnmadd.d f23, f27, f9, f14, dyn # perform operation
fnmadd.d f23, f27, f9, f14, rdn # perform operation
fnmadd.d f23, f27, f9, f14, rmm # perform operation
fnmadd.d f23, f27, f9, f14, rne # perform operation
fnmadd.d f23, f27, f9, f14, rtz # perform operation
fnmadd.d f23, f27, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f27, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x21, 0x3b3b198d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x6fad96d2 # load x3 with 32 MSBs 0x000000006fad96d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fad96d2
sw x3, 0(x2) # store x3 (0x6fad96d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006fad96d2 from memory into f7
fnmadd.d f21, f2, f18, f7, dyn # perform operation
fnmadd.d f21, f2, f18, f7, rdn # perform operation
fnmadd.d f21, f2, f18, f7, rmm # perform operation
fnmadd.d f21, f2, f18, f7, rne # perform operation
fnmadd.d f21, f2, f18, f7, rtz # perform operation
fnmadd.d f21, f2, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f2, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f2, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f2, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f2, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f2, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x28, 0xb07da4ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0xbcf3c697 # load x3 with 32 MSBs 0x00000000bcf3c697
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcf3c697
sw x3, 0(x2) # store x3 (0xbcf3c697) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bcf3c697 from memory into f17
fnmadd.d f28, f18, f10, f17, dyn # perform operation
fnmadd.d f28, f18, f10, f17, rdn # perform operation
fnmadd.d f28, f18, f10, f17, rmm # perform operation
fnmadd.d f28, f18, f10, f17, rne # perform operation
fnmadd.d f28, f18, f10, f17, rtz # perform operation
fnmadd.d f28, f18, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f18, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x5, 0x031b863a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x15055567 # load x3 with 32 MSBs 0x0000000015055567
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015055567
sw x3, 0(x2) # store x3 (0x15055567) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000015055567 from memory into f3
fnmadd.d f5, f7, f8, f3, dyn # perform operation
fnmadd.d f5, f7, f8, f3, rdn # perform operation
fnmadd.d f5, f7, f8, f3, rmm # perform operation
fnmadd.d f5, f7, f8, f3, rne # perform operation
fnmadd.d f5, f7, f8, f3, rtz # perform operation
fnmadd.d f5, f7, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f7, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f7, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f7, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f7, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f7, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x5, 0x3b4ee6d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x47bad1cf # load x3 with 32 MSBs 0x0000000047bad1cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047bad1cf
sw x3, 0(x2) # store x3 (0x47bad1cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000047bad1cf from memory into f18
fnmadd.d f5, f1, f8, f18, dyn # perform operation
fnmadd.d f5, f1, f8, f18, rdn # perform operation
fnmadd.d f5, f1, f8, f18, rmm # perform operation
fnmadd.d f5, f1, f8, f18, rne # perform operation
fnmadd.d f5, f1, f8, f18, rtz # perform operation
fnmadd.d f5, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x10, 0xe3872bf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
li x3, 0x1efb1b9a # load x3 with 32 MSBs 0x000000001efb1b9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001efb1b9a
sw x3, 0(x2) # store x3 (0x1efb1b9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001efb1b9a from memory into f29
fnmadd.d f10, f7, f31, f29, dyn # perform operation
fnmadd.d f10, f7, f31, f29, rdn # perform operation
fnmadd.d f10, f7, f31, f29, rmm # perform operation
fnmadd.d f10, f7, f31, f29, rne # perform operation
fnmadd.d f10, f7, f31, f29, rtz # perform operation
fnmadd.d f10, f7, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f7, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x2, 0xac07050f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0xd1949f5c # load x3 with 32 MSBs 0x00000000d1949f5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1949f5c
sw x3, 0(x2) # store x3 (0xd1949f5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d1949f5c from memory into f23
fnmadd.d f2, f20, f5, f23, dyn # perform operation
fnmadd.d f2, f20, f5, f23, rdn # perform operation
fnmadd.d f2, f20, f5, f23, rmm # perform operation
fnmadd.d f2, f20, f5, f23, rne # perform operation
fnmadd.d f2, f20, f5, f23, rtz # perform operation
fnmadd.d f2, f20, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f20, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x19, 0xbd004093 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xe6c378db # load x3 with 32 MSBs 0x00000000e6c378db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6c378db
sw x3, 0(x2) # store x3 (0xe6c378db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e6c378db from memory into f16
fnmadd.d f19, f21, f12, f16, dyn # perform operation
fnmadd.d f19, f21, f12, f16, rdn # perform operation
fnmadd.d f19, f21, f12, f16, rmm # perform operation
fnmadd.d f19, f21, f12, f16, rne # perform operation
fnmadd.d f19, f21, f12, f16, rtz # perform operation
fnmadd.d f19, f21, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f21, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f21, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f21, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f21, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f21, f12, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x28, 0x3a802382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x13759f68 # load x3 with 32 MSBs 0x0000000013759f68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013759f68
sw x3, 0(x2) # store x3 (0x13759f68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000013759f68 from memory into f31
fnmadd.d f28, f15, f6, f31, dyn # perform operation
fnmadd.d f28, f15, f6, f31, rdn # perform operation
fnmadd.d f28, f15, f6, f31, rmm # perform operation
fnmadd.d f28, f15, f6, f31, rne # perform operation
fnmadd.d f28, f15, f6, f31, rtz # perform operation
fnmadd.d f28, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f15, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x24, 0xb4c18658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xeee7e63d # load x3 with 32 MSBs 0x00000000eee7e63d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eee7e63d
sw x3, 0(x2) # store x3 (0xeee7e63d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000eee7e63d from memory into f18
fnmadd.d f24, f8, f15, f18, dyn # perform operation
fnmadd.d f24, f8, f15, f18, rdn # perform operation
fnmadd.d f24, f8, f15, f18, rmm # perform operation
fnmadd.d f24, f8, f15, f18, rne # perform operation
fnmadd.d f24, f8, f15, f18, rtz # perform operation
fnmadd.d f24, f8, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f8, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f8, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f8, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f8, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f8, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x2, 0xe1a34b8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x7274b493 # load x3 with 32 MSBs 0x000000007274b493
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007274b493
sw x3, 0(x2) # store x3 (0x7274b493) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007274b493 from memory into f25
fnmadd.d f2, f19, f20, f25, dyn # perform operation
fnmadd.d f2, f19, f20, f25, rdn # perform operation
fnmadd.d f2, f19, f20, f25, rmm # perform operation
fnmadd.d f2, f19, f20, f25, rne # perform operation
fnmadd.d f2, f19, f20, f25, rtz # perform operation
fnmadd.d f2, f19, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x24, 0x80e78fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x49f52fcc # load x3 with 32 MSBs 0x0000000049f52fcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049f52fcc
sw x3, 0(x2) # store x3 (0x49f52fcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000049f52fcc from memory into f22
fnmadd.d f24, f7, f23, f22, dyn # perform operation
fnmadd.d f24, f7, f23, f22, rdn # perform operation
fnmadd.d f24, f7, f23, f22, rmm # perform operation
fnmadd.d f24, f7, f23, f22, rne # perform operation
fnmadd.d f24, f7, f23, f22, rtz # perform operation
fnmadd.d f24, f7, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f7, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f7, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x6, 0x956dcb13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0xe1e1936c # load x3 with 32 MSBs 0x00000000e1e1936c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1e1936c
sw x3, 0(x2) # store x3 (0xe1e1936c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e1e1936c from memory into f20
fnmadd.d f6, f7, f24, f20, dyn # perform operation
fnmadd.d f6, f7, f24, f20, rdn # perform operation
fnmadd.d f6, f7, f24, f20, rmm # perform operation
fnmadd.d f6, f7, f24, f20, rne # perform operation
fnmadd.d f6, f7, f24, f20, rtz # perform operation
fnmadd.d f6, f7, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f7, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f7, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f7, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f7, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f7, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x30, 0x1666cbae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0xf9db9fd8 # load x3 with 32 MSBs 0x00000000f9db9fd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9db9fd8
sw x3, 0(x2) # store x3 (0xf9db9fd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f9db9fd8 from memory into f5
fnmadd.d f30, f20, f21, f5, dyn # perform operation
fnmadd.d f30, f20, f21, f5, rdn # perform operation
fnmadd.d f30, f20, f21, f5, rmm # perform operation
fnmadd.d f30, f20, f21, f5, rne # perform operation
fnmadd.d f30, f20, f21, f5, rtz # perform operation
fnmadd.d f30, f20, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f20, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f20, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x19, 0x4e05da2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x6dae7b24 # load x3 with 32 MSBs 0x000000006dae7b24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006dae7b24
sw x3, 0(x2) # store x3 (0x6dae7b24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006dae7b24 from memory into f14
fnmadd.d f19, f8, f23, f14, dyn # perform operation
fnmadd.d f19, f8, f23, f14, rdn # perform operation
fnmadd.d f19, f8, f23, f14, rmm # perform operation
fnmadd.d f19, f8, f23, f14, rne # perform operation
fnmadd.d f19, f8, f23, f14, rtz # perform operation
fnmadd.d f19, f8, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x4, 0xc01351e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x5992f5c5 # load x3 with 32 MSBs 0x000000005992f5c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005992f5c5
sw x3, 0(x2) # store x3 (0x5992f5c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005992f5c5 from memory into f24
fnmadd.d f4, f7, f6, f24, dyn # perform operation
fnmadd.d f4, f7, f6, f24, rdn # perform operation
fnmadd.d f4, f7, f6, f24, rmm # perform operation
fnmadd.d f4, f7, f6, f24, rne # perform operation
fnmadd.d f4, f7, f6, f24, rtz # perform operation
fnmadd.d f4, f7, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f7, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f7, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x1, 0x5e2fc6f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xd7552c50 # load x3 with 32 MSBs 0x00000000d7552c50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7552c50
sw x3, 0(x2) # store x3 (0xd7552c50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d7552c50 from memory into f15
fnmadd.d f1, f21, f27, f15, dyn # perform operation
fnmadd.d f1, f21, f27, f15, rdn # perform operation
fnmadd.d f1, f21, f27, f15, rmm # perform operation
fnmadd.d f1, f21, f27, f15, rne # perform operation
fnmadd.d f1, f21, f27, f15, rtz # perform operation
fnmadd.d f1, f21, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f21, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x15, 0xef725111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x9d1ad6a7 # load x3 with 32 MSBs 0x000000009d1ad6a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d1ad6a7
sw x3, 0(x2) # store x3 (0x9d1ad6a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009d1ad6a7 from memory into f11
fnmadd.d f15, f25, f10, f11, dyn # perform operation
fnmadd.d f15, f25, f10, f11, rdn # perform operation
fnmadd.d f15, f25, f10, f11, rmm # perform operation
fnmadd.d f15, f25, f10, f11, rne # perform operation
fnmadd.d f15, f25, f10, f11, rtz # perform operation
fnmadd.d f15, f25, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f25, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f25, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f25, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f25, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f25, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x10, 0x9b2714f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x59d04a82 # load x3 with 32 MSBs 0x0000000059d04a82
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059d04a82
sw x3, 0(x2) # store x3 (0x59d04a82) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000059d04a82 from memory into f26
fnmadd.d f10, f31, f24, f26, dyn # perform operation
fnmadd.d f10, f31, f24, f26, rdn # perform operation
fnmadd.d f10, f31, f24, f26, rmm # perform operation
fnmadd.d f10, f31, f24, f26, rne # perform operation
fnmadd.d f10, f31, f24, f26, rtz # perform operation
fnmadd.d f10, f31, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f31, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x25, 0xb8a66723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x80041a73 # load x3 with 32 MSBs 0x0000000080041a73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080041a73
sw x3, 0(x2) # store x3 (0x80041a73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000080041a73 from memory into f21
fnmadd.d f25, f2, f19, f21, dyn # perform operation
fnmadd.d f25, f2, f19, f21, rdn # perform operation
fnmadd.d f25, f2, f19, f21, rmm # perform operation
fnmadd.d f25, f2, f19, f21, rne # perform operation
fnmadd.d f25, f2, f19, f21, rtz # perform operation
fnmadd.d f25, f2, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f2, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x14, 0xfc0bf6ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0xd23b2c77 # load x3 with 32 MSBs 0x00000000d23b2c77
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d23b2c77
sw x3, 0(x2) # store x3 (0xd23b2c77) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d23b2c77 from memory into f22
fnmadd.d f14, f21, f29, f22, dyn # perform operation
fnmadd.d f14, f21, f29, f22, rdn # perform operation
fnmadd.d f14, f21, f29, f22, rmm # perform operation
fnmadd.d f14, f21, f29, f22, rne # perform operation
fnmadd.d f14, f21, f29, f22, rtz # perform operation
fnmadd.d f14, f21, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f21, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x29, 0x3ee53c2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0xb5782d4e # load x3 with 32 MSBs 0x00000000b5782d4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5782d4e
sw x3, 0(x2) # store x3 (0xb5782d4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b5782d4e from memory into f22
fnmadd.d f29, f4, f18, f22, dyn # perform operation
fnmadd.d f29, f4, f18, f22, rdn # perform operation
fnmadd.d f29, f4, f18, f22, rmm # perform operation
fnmadd.d f29, f4, f18, f22, rne # perform operation
fnmadd.d f29, f4, f18, f22, rtz # perform operation
fnmadd.d f29, f4, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f4, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f4, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f4, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f4, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f4, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x23, 0x49677f92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x2e10c563 # load x3 with 32 MSBs 0x000000002e10c563
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e10c563
sw x3, 0(x2) # store x3 (0x2e10c563) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000002e10c563 from memory into f26
fnmadd.d f23, f19, f10, f26, dyn # perform operation
fnmadd.d f23, f19, f10, f26, rdn # perform operation
fnmadd.d f23, f19, f10, f26, rmm # perform operation
fnmadd.d f23, f19, f10, f26, rne # perform operation
fnmadd.d f23, f19, f10, f26, rtz # perform operation
fnmadd.d f23, f19, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x24, 0xe9862a82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xee4ad550 # load x3 with 32 MSBs 0x00000000ee4ad550
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee4ad550
sw x3, 0(x2) # store x3 (0xee4ad550) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ee4ad550 from memory into f10
fnmadd.d f24, f3, f11, f10, dyn # perform operation
fnmadd.d f24, f3, f11, f10, rdn # perform operation
fnmadd.d f24, f3, f11, f10, rmm # perform operation
fnmadd.d f24, f3, f11, f10, rne # perform operation
fnmadd.d f24, f3, f11, f10, rtz # perform operation
fnmadd.d f24, f3, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f3, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x6, 0x820f77b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x780d53c4 # load x3 with 32 MSBs 0x00000000780d53c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000780d53c4
sw x3, 0(x2) # store x3 (0x780d53c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000780d53c4 from memory into f7
fnmadd.d f6, f11, f28, f7, dyn # perform operation
fnmadd.d f6, f11, f28, f7, rdn # perform operation
fnmadd.d f6, f11, f28, f7, rmm # perform operation
fnmadd.d f6, f11, f28, f7, rne # perform operation
fnmadd.d f6, f11, f28, f7, rtz # perform operation
fnmadd.d f6, f11, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x29, 0xa1990206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0x2de1e064 # load x3 with 32 MSBs 0x000000002de1e064
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002de1e064
sw x3, 0(x2) # store x3 (0x2de1e064) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002de1e064 from memory into f22
fnmadd.d f29, f28, f15, f22, dyn # perform operation
fnmadd.d f29, f28, f15, f22, rdn # perform operation
fnmadd.d f29, f28, f15, f22, rmm # perform operation
fnmadd.d f29, f28, f15, f22, rne # perform operation
fnmadd.d f29, f28, f15, f22, rtz # perform operation
fnmadd.d f29, f28, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f28, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x30, 0x1e642f1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x4a603b2d # load x3 with 32 MSBs 0x000000004a603b2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a603b2d
sw x3, 0(x2) # store x3 (0x4a603b2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004a603b2d from memory into f31
fnmadd.d f30, f11, f24, f31, dyn # perform operation
fnmadd.d f30, f11, f24, f31, rdn # perform operation
fnmadd.d f30, f11, f24, f31, rmm # perform operation
fnmadd.d f30, f11, f24, f31, rne # perform operation
fnmadd.d f30, f11, f24, f31, rtz # perform operation
fnmadd.d f30, f11, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f11, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f11, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f11, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f11, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f11, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x17, 0x5c344a79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x9fb410ec # load x3 with 32 MSBs 0x000000009fb410ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fb410ec
sw x3, 0(x2) # store x3 (0x9fb410ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009fb410ec from memory into f22
fnmadd.d f17, f25, f21, f22, dyn # perform operation
fnmadd.d f17, f25, f21, f22, rdn # perform operation
fnmadd.d f17, f25, f21, f22, rmm # perform operation
fnmadd.d f17, f25, f21, f22, rne # perform operation
fnmadd.d f17, f25, f21, f22, rtz # perform operation
fnmadd.d f17, f25, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f25, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x19, 0xbdb4ed91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0xe04a7c1c # load x3 with 32 MSBs 0x00000000e04a7c1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e04a7c1c
sw x3, 0(x2) # store x3 (0xe04a7c1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000e04a7c1c from memory into f7
fnmadd.d f19, f23, f28, f7, dyn # perform operation
fnmadd.d f19, f23, f28, f7, rdn # perform operation
fnmadd.d f19, f23, f28, f7, rmm # perform operation
fnmadd.d f19, f23, f28, f7, rne # perform operation
fnmadd.d f19, f23, f28, f7, rtz # perform operation
fnmadd.d f19, f23, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f23, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x24, 0x52fac9fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0xf1442777 # load x3 with 32 MSBs 0x00000000f1442777
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1442777
sw x3, 0(x2) # store x3 (0xf1442777) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f1442777 from memory into f19
fnmadd.d f24, f21, f8, f19, dyn # perform operation
fnmadd.d f24, f21, f8, f19, rdn # perform operation
fnmadd.d f24, f21, f8, f19, rmm # perform operation
fnmadd.d f24, f21, f8, f19, rne # perform operation
fnmadd.d f24, f21, f8, f19, rtz # perform operation
fnmadd.d f24, f21, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f21, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f21, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x10, 0x8e070c21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0x2ce4ea65 # load x3 with 32 MSBs 0x000000002ce4ea65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ce4ea65
sw x3, 0(x2) # store x3 (0x2ce4ea65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002ce4ea65 from memory into f30
fnmadd.d f10, f6, f7, f30, dyn # perform operation
fnmadd.d f10, f6, f7, f30, rdn # perform operation
fnmadd.d f10, f6, f7, f30, rmm # perform operation
fnmadd.d f10, f6, f7, f30, rne # perform operation
fnmadd.d f10, f6, f7, f30, rtz # perform operation
fnmadd.d f10, f6, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f6, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x30, 0xa2cacece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x37f4622b # load x3 with 32 MSBs 0x0000000037f4622b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037f4622b
sw x3, 0(x2) # store x3 (0x37f4622b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000037f4622b from memory into f8
fnmadd.d f30, f3, f2, f8, dyn # perform operation
fnmadd.d f30, f3, f2, f8, rdn # perform operation
fnmadd.d f30, f3, f2, f8, rmm # perform operation
fnmadd.d f30, f3, f2, f8, rne # perform operation
fnmadd.d f30, f3, f2, f8, rtz # perform operation
fnmadd.d f30, f3, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f3, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x13, 0x71bb8dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0x5da3cc24 # load x3 with 32 MSBs 0x000000005da3cc24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005da3cc24
sw x3, 0(x2) # store x3 (0x5da3cc24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005da3cc24 from memory into f17
fnmadd.d f13, f5, f22, f17, dyn # perform operation
fnmadd.d f13, f5, f22, f17, rdn # perform operation
fnmadd.d f13, f5, f22, f17, rmm # perform operation
fnmadd.d f13, f5, f22, f17, rne # perform operation
fnmadd.d f13, f5, f22, f17, rtz # perform operation
fnmadd.d f13, f5, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f5, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x23, 0x0b1f2823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x47758035 # load x3 with 32 MSBs 0x0000000047758035
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047758035
sw x3, 0(x2) # store x3 (0x47758035) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000047758035 from memory into f25
fnmadd.d f23, f10, f31, f25, dyn # perform operation
fnmadd.d f23, f10, f31, f25, rdn # perform operation
fnmadd.d f23, f10, f31, f25, rmm # perform operation
fnmadd.d f23, f10, f31, f25, rne # perform operation
fnmadd.d f23, f10, f31, f25, rtz # perform operation
fnmadd.d f23, f10, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f10, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f10, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f10, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f10, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f10, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x14, 0x32680c2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0x517177d2 # load x3 with 32 MSBs 0x00000000517177d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000517177d2
sw x3, 0(x2) # store x3 (0x517177d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000517177d2 from memory into f7
fnmadd.d f14, f16, f28, f7, dyn # perform operation
fnmadd.d f14, f16, f28, f7, rdn # perform operation
fnmadd.d f14, f16, f28, f7, rmm # perform operation
fnmadd.d f14, f16, f28, f7, rne # perform operation
fnmadd.d f14, f16, f28, f7, rtz # perform operation
fnmadd.d f14, f16, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f16, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f16, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x13, 0x1b253b22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x772106be # load x3 with 32 MSBs 0x00000000772106be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000772106be
sw x3, 0(x2) # store x3 (0x772106be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000772106be from memory into f10
fnmadd.d f13, f22, f25, f10, dyn # perform operation
fnmadd.d f13, f22, f25, f10, rdn # perform operation
fnmadd.d f13, f22, f25, f10, rmm # perform operation
fnmadd.d f13, f22, f25, f10, rne # perform operation
fnmadd.d f13, f22, f25, f10, rtz # perform operation
fnmadd.d f13, f22, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f22, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x6, 0xe9b97365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x22ac01b6 # load x3 with 32 MSBs 0x0000000022ac01b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022ac01b6
sw x3, 0(x2) # store x3 (0x22ac01b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000022ac01b6 from memory into f3
fnmadd.d f6, f4, f2, f3, dyn # perform operation
fnmadd.d f6, f4, f2, f3, rdn # perform operation
fnmadd.d f6, f4, f2, f3, rmm # perform operation
fnmadd.d f6, f4, f2, f3, rne # perform operation
fnmadd.d f6, f4, f2, f3, rtz # perform operation
fnmadd.d f6, f4, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f4, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x30, 0x9414aa29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x4e91395f # load x3 with 32 MSBs 0x000000004e91395f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e91395f
sw x3, 0(x2) # store x3 (0x4e91395f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004e91395f from memory into f14
fnmadd.d f30, f19, f2, f14, dyn # perform operation
fnmadd.d f30, f19, f2, f14, rdn # perform operation
fnmadd.d f30, f19, f2, f14, rmm # perform operation
fnmadd.d f30, f19, f2, f14, rne # perform operation
fnmadd.d f30, f19, f2, f14, rtz # perform operation
fnmadd.d f30, f19, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f19, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f19, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x10, 0x7b9e2184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0xa6edc776 # load x3 with 32 MSBs 0x00000000a6edc776
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6edc776
sw x3, 0(x2) # store x3 (0xa6edc776) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a6edc776 from memory into f17
fnmadd.d f10, f14, f12, f17, dyn # perform operation
fnmadd.d f10, f14, f12, f17, rdn # perform operation
fnmadd.d f10, f14, f12, f17, rmm # perform operation
fnmadd.d f10, f14, f12, f17, rne # perform operation
fnmadd.d f10, f14, f12, f17, rtz # perform operation
fnmadd.d f10, f14, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f14, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x22, 0x7724c8ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x19eb4e97 # load x3 with 32 MSBs 0x0000000019eb4e97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019eb4e97
sw x3, 0(x2) # store x3 (0x19eb4e97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000019eb4e97 from memory into f1
fnmadd.d f22, f19, f30, f1, dyn # perform operation
fnmadd.d f22, f19, f30, f1, rdn # perform operation
fnmadd.d f22, f19, f30, f1, rmm # perform operation
fnmadd.d f22, f19, f30, f1, rne # perform operation
fnmadd.d f22, f19, f30, f1, rtz # perform operation
fnmadd.d f22, f19, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f19, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x27, 0xef5eb84b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x9e0d1ef0 # load x3 with 32 MSBs 0x000000009e0d1ef0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e0d1ef0
sw x3, 0(x2) # store x3 (0x9e0d1ef0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009e0d1ef0 from memory into f26
fnmadd.d f27, f15, f12, f26, dyn # perform operation
fnmadd.d f27, f15, f12, f26, rdn # perform operation
fnmadd.d f27, f15, f12, f26, rmm # perform operation
fnmadd.d f27, f15, f12, f26, rne # perform operation
fnmadd.d f27, f15, f12, f26, rtz # perform operation
fnmadd.d f27, f15, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f15, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x27, 0xf0db01e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x7b1d585f # load x3 with 32 MSBs 0x000000007b1d585f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b1d585f
sw x3, 0(x2) # store x3 (0x7b1d585f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007b1d585f from memory into f23
fnmadd.d f27, f26, f13, f23, dyn # perform operation
fnmadd.d f27, f26, f13, f23, rdn # perform operation
fnmadd.d f27, f26, f13, f23, rmm # perform operation
fnmadd.d f27, f26, f13, f23, rne # perform operation
fnmadd.d f27, f26, f13, f23, rtz # perform operation
fnmadd.d f27, f26, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x5, 0x4ec4b9a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0x95e4c6ff # load x3 with 32 MSBs 0x0000000095e4c6ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095e4c6ff
sw x3, 0(x2) # store x3 (0x95e4c6ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000095e4c6ff from memory into f4
fnmadd.d f5, f24, f13, f4, dyn # perform operation
fnmadd.d f5, f24, f13, f4, rdn # perform operation
fnmadd.d f5, f24, f13, f4, rmm # perform operation
fnmadd.d f5, f24, f13, f4, rne # perform operation
fnmadd.d f5, f24, f13, f4, rtz # perform operation
fnmadd.d f5, f24, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f24, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f24, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f24, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f24, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f24, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x17, 0xd60dce20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x28f842b5 # load x3 with 32 MSBs 0x0000000028f842b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028f842b5
sw x3, 0(x2) # store x3 (0x28f842b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000028f842b5 from memory into f9
fnmadd.d f17, f8, f7, f9, dyn # perform operation
fnmadd.d f17, f8, f7, f9, rdn # perform operation
fnmadd.d f17, f8, f7, f9, rmm # perform operation
fnmadd.d f17, f8, f7, f9, rne # perform operation
fnmadd.d f17, f8, f7, f9, rtz # perform operation
fnmadd.d f17, f8, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x9, 0xec742e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0xe3716512 # load x3 with 32 MSBs 0x00000000e3716512
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3716512
sw x3, 0(x2) # store x3 (0xe3716512) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e3716512 from memory into f14
fnmadd.d f9, f16, f15, f14, dyn # perform operation
fnmadd.d f9, f16, f15, f14, rdn # perform operation
fnmadd.d f9, f16, f15, f14, rmm # perform operation
fnmadd.d f9, f16, f15, f14, rne # perform operation
fnmadd.d f9, f16, f15, f14, rtz # perform operation
fnmadd.d f9, f16, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f16, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f16, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f16, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f16, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f16, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x16, 0xaf229032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x82ee8e00 # load x3 with 32 MSBs 0x0000000082ee8e00
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082ee8e00
sw x3, 0(x2) # store x3 (0x82ee8e00) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000082ee8e00 from memory into f29
fnmadd.d f16, f4, f11, f29, dyn # perform operation
fnmadd.d f16, f4, f11, f29, rdn # perform operation
fnmadd.d f16, f4, f11, f29, rmm # perform operation
fnmadd.d f16, f4, f11, f29, rne # perform operation
fnmadd.d f16, f4, f11, f29, rtz # perform operation
fnmadd.d f16, f4, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f4, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f4, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f4, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f4, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f4, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x7, 0x710a0dec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x842b88ac # load x3 with 32 MSBs 0x00000000842b88ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000842b88ac
sw x3, 0(x2) # store x3 (0x842b88ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000842b88ac from memory into f28
fnmadd.d f7, f13, f22, f28, dyn # perform operation
fnmadd.d f7, f13, f22, f28, rdn # perform operation
fnmadd.d f7, f13, f22, f28, rmm # perform operation
fnmadd.d f7, f13, f22, f28, rne # perform operation
fnmadd.d f7, f13, f22, f28, rtz # perform operation
fnmadd.d f7, f13, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f13, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f13, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x24, 0x004ce606 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x8bc897ef # load x3 with 32 MSBs 0x000000008bc897ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bc897ef
sw x3, 0(x2) # store x3 (0x8bc897ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008bc897ef from memory into f29
fnmadd.d f24, f23, f8, f29, dyn # perform operation
fnmadd.d f24, f23, f8, f29, rdn # perform operation
fnmadd.d f24, f23, f8, f29, rmm # perform operation
fnmadd.d f24, f23, f8, f29, rne # perform operation
fnmadd.d f24, f23, f8, f29, rtz # perform operation
fnmadd.d f24, f23, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f23, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x7, 0x1f6c21ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x5f9c17c6 # load x3 with 32 MSBs 0x000000005f9c17c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f9c17c6
sw x3, 0(x2) # store x3 (0x5f9c17c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000005f9c17c6 from memory into f31
fnmadd.d f7, f9, f26, f31, dyn # perform operation
fnmadd.d f7, f9, f26, f31, rdn # perform operation
fnmadd.d f7, f9, f26, f31, rmm # perform operation
fnmadd.d f7, f9, f26, f31, rne # perform operation
fnmadd.d f7, f9, f26, f31, rtz # perform operation
fnmadd.d f7, f9, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f9, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x26, 0xf7555d78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0xda5f4314 # load x3 with 32 MSBs 0x00000000da5f4314
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da5f4314
sw x3, 0(x2) # store x3 (0xda5f4314) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000da5f4314 from memory into f15
fnmadd.d f26, f25, f23, f15, dyn # perform operation
fnmadd.d f26, f25, f23, f15, rdn # perform operation
fnmadd.d f26, f25, f23, f15, rmm # perform operation
fnmadd.d f26, f25, f23, f15, rne # perform operation
fnmadd.d f26, f25, f23, f15, rtz # perform operation
fnmadd.d f26, f25, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f25, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f25, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f25, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f25, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f25, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x17, 0xaa0315d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x82892599 # load x3 with 32 MSBs 0x0000000082892599
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082892599
sw x3, 0(x2) # store x3 (0x82892599) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000082892599 from memory into f6
fnmadd.d f17, f2, f27, f6, dyn # perform operation
fnmadd.d f17, f2, f27, f6, rdn # perform operation
fnmadd.d f17, f2, f27, f6, rmm # perform operation
fnmadd.d f17, f2, f27, f6, rne # perform operation
fnmadd.d f17, f2, f27, f6, rtz # perform operation
fnmadd.d f17, f2, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f2, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x17, 0x692b4942 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x858a71ff # load x3 with 32 MSBs 0x00000000858a71ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000858a71ff
sw x3, 0(x2) # store x3 (0x858a71ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000858a71ff from memory into f15
fnmadd.d f17, f22, f2, f15, dyn # perform operation
fnmadd.d f17, f22, f2, f15, rdn # perform operation
fnmadd.d f17, f22, f2, f15, rmm # perform operation
fnmadd.d f17, f22, f2, f15, rne # perform operation
fnmadd.d f17, f22, f2, f15, rtz # perform operation
fnmadd.d f17, f22, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f22, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f22, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x12, 0xcc8ec3dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x6afb3a90 # load x3 with 32 MSBs 0x000000006afb3a90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006afb3a90
sw x3, 0(x2) # store x3 (0x6afb3a90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006afb3a90 from memory into f5
fnmadd.d f12, f18, f13, f5, dyn # perform operation
fnmadd.d f12, f18, f13, f5, rdn # perform operation
fnmadd.d f12, f18, f13, f5, rmm # perform operation
fnmadd.d f12, f18, f13, f5, rne # perform operation
fnmadd.d f12, f18, f13, f5, rtz # perform operation
fnmadd.d f12, f18, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x22, 0xe9b07abe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x8a6b7786 # load x3 with 32 MSBs 0x000000008a6b7786
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a6b7786
sw x3, 0(x2) # store x3 (0x8a6b7786) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000008a6b7786 from memory into f10
fnmadd.d f22, f5, f18, f10, dyn # perform operation
fnmadd.d f22, f5, f18, f10, rdn # perform operation
fnmadd.d f22, f5, f18, f10, rmm # perform operation
fnmadd.d f22, f5, f18, f10, rne # perform operation
fnmadd.d f22, f5, f18, f10, rtz # perform operation
fnmadd.d f22, f5, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f5, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f5, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x23, 0xa293bd7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
li x3, 0x501a4746 # load x3 with 32 MSBs 0x00000000501a4746
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000501a4746
sw x3, 0(x2) # store x3 (0x501a4746) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000501a4746 from memory into f13
fnmadd.d f23, f31, f27, f13, dyn # perform operation
fnmadd.d f23, f31, f27, f13, rdn # perform operation
fnmadd.d f23, f31, f27, f13, rmm # perform operation
fnmadd.d f23, f31, f27, f13, rne # perform operation
fnmadd.d f23, f31, f27, f13, rtz # perform operation
fnmadd.d f23, f31, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f31, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f31, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f31, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f31, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f31, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x29, 0xc723246c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0xecd71795 # load x3 with 32 MSBs 0x00000000ecd71795
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecd71795
sw x3, 0(x2) # store x3 (0xecd71795) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ecd71795 from memory into f11
fnmadd.d f29, f20, f27, f11, dyn # perform operation
fnmadd.d f29, f20, f27, f11, rdn # perform operation
fnmadd.d f29, f20, f27, f11, rmm # perform operation
fnmadd.d f29, f20, f27, f11, rne # perform operation
fnmadd.d f29, f20, f27, f11, rtz # perform operation
fnmadd.d f29, f20, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f20, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f20, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f20, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f20, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f20, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x20, 0xdc2a97ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x19bf3590 # load x3 with 32 MSBs 0x0000000019bf3590
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019bf3590
sw x3, 0(x2) # store x3 (0x19bf3590) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000019bf3590 from memory into f30
fnmadd.d f20, f7, f13, f30, dyn # perform operation
fnmadd.d f20, f7, f13, f30, rdn # perform operation
fnmadd.d f20, f7, f13, f30, rmm # perform operation
fnmadd.d f20, f7, f13, f30, rne # perform operation
fnmadd.d f20, f7, f13, f30, rtz # perform operation
fnmadd.d f20, f7, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f7, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x26, 0xc463f645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xe02d68de # load x3 with 32 MSBs 0x00000000e02d68de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e02d68de
sw x3, 0(x2) # store x3 (0xe02d68de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e02d68de from memory into f28
fnmadd.d f26, f7, f30, f28, dyn # perform operation
fnmadd.d f26, f7, f30, f28, rdn # perform operation
fnmadd.d f26, f7, f30, f28, rmm # perform operation
fnmadd.d f26, f7, f30, f28, rne # perform operation
fnmadd.d f26, f7, f30, f28, rtz # perform operation
fnmadd.d f26, f7, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f7, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x3, 0x28f02868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0xdba975c9 # load x3 with 32 MSBs 0x00000000dba975c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dba975c9
sw x3, 0(x2) # store x3 (0xdba975c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dba975c9 from memory into f6
fnmadd.d f3, f8, f29, f6, dyn # perform operation
fnmadd.d f3, f8, f29, f6, rdn # perform operation
fnmadd.d f3, f8, f29, f6, rmm # perform operation
fnmadd.d f3, f8, f29, f6, rne # perform operation
fnmadd.d f3, f8, f29, f6, rtz # perform operation
fnmadd.d f3, f8, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f8, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f8, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x16, 0x7336107d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x642d9ca6 # load x3 with 32 MSBs 0x00000000642d9ca6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000642d9ca6
sw x3, 0(x2) # store x3 (0x642d9ca6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000642d9ca6 from memory into f7
fnmadd.d f16, f14, f9, f7, dyn # perform operation
fnmadd.d f16, f14, f9, f7, rdn # perform operation
fnmadd.d f16, f14, f9, f7, rmm # perform operation
fnmadd.d f16, f14, f9, f7, rne # perform operation
fnmadd.d f16, f14, f9, f7, rtz # perform operation
fnmadd.d f16, f14, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f14, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f14, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f14, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f14, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f14, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x8, 0x5d3de3d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x72458ac3 # load x3 with 32 MSBs 0x0000000072458ac3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072458ac3
sw x3, 0(x2) # store x3 (0x72458ac3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000072458ac3 from memory into f23
fnmadd.d f8, f31, f19, f23, dyn # perform operation
fnmadd.d f8, f31, f19, f23, rdn # perform operation
fnmadd.d f8, f31, f19, f23, rmm # perform operation
fnmadd.d f8, f31, f19, f23, rne # perform operation
fnmadd.d f8, f31, f19, f23, rtz # perform operation
fnmadd.d f8, f31, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x4, 0x182d1812 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0xdc8b1e1b # load x3 with 32 MSBs 0x00000000dc8b1e1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc8b1e1b
sw x3, 0(x2) # store x3 (0xdc8b1e1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000dc8b1e1b from memory into f7
fnmadd.d f4, f9, f8, f7, dyn # perform operation
fnmadd.d f4, f9, f8, f7, rdn # perform operation
fnmadd.d f4, f9, f8, f7, rmm # perform operation
fnmadd.d f4, f9, f8, f7, rne # perform operation
fnmadd.d f4, f9, f8, f7, rtz # perform operation
fnmadd.d f4, f9, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f9, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x1, 0x37391d9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0x954c87fc # load x3 with 32 MSBs 0x00000000954c87fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000954c87fc
sw x3, 0(x2) # store x3 (0x954c87fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000954c87fc from memory into f13
fnmadd.d f1, f10, f12, f13, dyn # perform operation
fnmadd.d f1, f10, f12, f13, rdn # perform operation
fnmadd.d f1, f10, f12, f13, rmm # perform operation
fnmadd.d f1, f10, f12, f13, rne # perform operation
fnmadd.d f1, f10, f12, f13, rtz # perform operation
fnmadd.d f1, f10, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f10, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f10, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f10, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f10, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f10, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x24, 0x5adf365e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x0c7e2b98 # load x3 with 32 MSBs 0x000000000c7e2b98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c7e2b98
sw x3, 0(x2) # store x3 (0x0c7e2b98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000c7e2b98 from memory into f1
fnmadd.d f24, f13, f16, f1, dyn # perform operation
fnmadd.d f24, f13, f16, f1, rdn # perform operation
fnmadd.d f24, f13, f16, f1, rmm # perform operation
fnmadd.d f24, f13, f16, f1, rne # perform operation
fnmadd.d f24, f13, f16, f1, rtz # perform operation
fnmadd.d f24, f13, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f13, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x2, 0x4cd2b286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x5cf63a1a # load x3 with 32 MSBs 0x000000005cf63a1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005cf63a1a
sw x3, 0(x2) # store x3 (0x5cf63a1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005cf63a1a from memory into f30
fnmadd.d f2, f19, f21, f30, dyn # perform operation
fnmadd.d f2, f19, f21, f30, rdn # perform operation
fnmadd.d f2, f19, f21, f30, rmm # perform operation
fnmadd.d f2, f19, f21, f30, rne # perform operation
fnmadd.d f2, f19, f21, f30, rtz # perform operation
fnmadd.d f2, f19, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f19, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f19, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x5, 0x9092eaad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0xec24e4f7 # load x3 with 32 MSBs 0x00000000ec24e4f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec24e4f7
sw x3, 0(x2) # store x3 (0xec24e4f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ec24e4f7 from memory into f27
fnmadd.d f5, f10, f8, f27, dyn # perform operation
fnmadd.d f5, f10, f8, f27, rdn # perform operation
fnmadd.d f5, f10, f8, f27, rmm # perform operation
fnmadd.d f5, f10, f8, f27, rne # perform operation
fnmadd.d f5, f10, f8, f27, rtz # perform operation
fnmadd.d f5, f10, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f10, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f10, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x17, 0x6c5643bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x2c2d03b3 # load x3 with 32 MSBs 0x000000002c2d03b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c2d03b3
sw x3, 0(x2) # store x3 (0x2c2d03b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002c2d03b3 from memory into f11
fnmadd.d f17, f25, f22, f11, dyn # perform operation
fnmadd.d f17, f25, f22, f11, rdn # perform operation
fnmadd.d f17, f25, f22, f11, rmm # perform operation
fnmadd.d f17, f25, f22, f11, rne # perform operation
fnmadd.d f17, f25, f22, f11, rtz # perform operation
fnmadd.d f17, f25, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f25, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f25, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x30, 0x3398ace9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0xe2db2436 # load x3 with 32 MSBs 0x00000000e2db2436
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2db2436
sw x3, 0(x2) # store x3 (0xe2db2436) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e2db2436 from memory into f24
fnmadd.d f30, f6, f3, f24, dyn # perform operation
fnmadd.d f30, f6, f3, f24, rdn # perform operation
fnmadd.d f30, f6, f3, f24, rmm # perform operation
fnmadd.d f30, f6, f3, f24, rne # perform operation
fnmadd.d f30, f6, f3, f24, rtz # perform operation
fnmadd.d f30, f6, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f6, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f6, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x3, 0x671271e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xc6975bb6 # load x3 with 32 MSBs 0x00000000c6975bb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6975bb6
sw x3, 0(x2) # store x3 (0xc6975bb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c6975bb6 from memory into f24
fnmadd.d f3, f14, f18, f24, dyn # perform operation
fnmadd.d f3, f14, f18, f24, rdn # perform operation
fnmadd.d f3, f14, f18, f24, rmm # perform operation
fnmadd.d f3, f14, f18, f24, rne # perform operation
fnmadd.d f3, f14, f18, f24, rtz # perform operation
fnmadd.d f3, f14, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x6, 0x460c5c20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
li x3, 0x9e8b8c6e # load x3 with 32 MSBs 0x000000009e8b8c6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e8b8c6e
sw x3, 0(x2) # store x3 (0x9e8b8c6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009e8b8c6e from memory into f17
fnmadd.d f6, f9, f19, f17, dyn # perform operation
fnmadd.d f6, f9, f19, f17, rdn # perform operation
fnmadd.d f6, f9, f19, f17, rmm # perform operation
fnmadd.d f6, f9, f19, f17, rne # perform operation
fnmadd.d f6, f9, f19, f17, rtz # perform operation
fnmadd.d f6, f9, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f9, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x24, 0x79c16872 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xecbd66bb # load x3 with 32 MSBs 0x00000000ecbd66bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ecbd66bb
sw x3, 0(x2) # store x3 (0xecbd66bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ecbd66bb from memory into f5
fnmadd.d f24, f22, f21, f5, dyn # perform operation
fnmadd.d f24, f22, f21, f5, rdn # perform operation
fnmadd.d f24, f22, f21, f5, rmm # perform operation
fnmadd.d f24, f22, f21, f5, rne # perform operation
fnmadd.d f24, f22, f21, f5, rtz # perform operation
fnmadd.d f24, f22, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f22, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x24, 0x5e9dfa84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x42490fa4 # load x3 with 32 MSBs 0x0000000042490fa4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042490fa4
sw x3, 0(x2) # store x3 (0x42490fa4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000042490fa4 from memory into f19
fnmadd.d f24, f28, f5, f19, dyn # perform operation
fnmadd.d f24, f28, f5, f19, rdn # perform operation
fnmadd.d f24, f28, f5, f19, rmm # perform operation
fnmadd.d f24, f28, f5, f19, rne # perform operation
fnmadd.d f24, f28, f5, f19, rtz # perform operation
fnmadd.d f24, f28, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f28, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f28, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x22, 0xd7eea535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x6155ea12 # load x3 with 32 MSBs 0x000000006155ea12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006155ea12
sw x3, 0(x2) # store x3 (0x6155ea12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006155ea12 from memory into f21
fnmadd.d f22, f2, f1, f21, dyn # perform operation
fnmadd.d f22, f2, f1, f21, rdn # perform operation
fnmadd.d f22, f2, f1, f21, rmm # perform operation
fnmadd.d f22, f2, f1, f21, rne # perform operation
fnmadd.d f22, f2, f1, f21, rtz # perform operation
fnmadd.d f22, f2, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f2, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x30, 0x027b2646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0x4cb0fd0b # load x3 with 32 MSBs 0x000000004cb0fd0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cb0fd0b
sw x3, 0(x2) # store x3 (0x4cb0fd0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004cb0fd0b from memory into f23
fnmadd.d f30, f22, f2, f23, dyn # perform operation
fnmadd.d f30, f22, f2, f23, rdn # perform operation
fnmadd.d f30, f22, f2, f23, rmm # perform operation
fnmadd.d f30, f22, f2, f23, rne # perform operation
fnmadd.d f30, f22, f2, f23, rtz # perform operation
fnmadd.d f30, f22, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f22, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x31, 0xae10b7f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x2b6e5856 # load x3 with 32 MSBs 0x000000002b6e5856
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b6e5856
sw x3, 0(x2) # store x3 (0x2b6e5856) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002b6e5856 from memory into f1
fnmadd.d f31, f17, f11, f1, dyn # perform operation
fnmadd.d f31, f17, f11, f1, rdn # perform operation
fnmadd.d f31, f17, f11, f1, rmm # perform operation
fnmadd.d f31, f17, f11, f1, rne # perform operation
fnmadd.d f31, f17, f11, f1, rtz # perform operation
fnmadd.d f31, f17, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f17, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x24, 0x3b532210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0x2e12848d # load x3 with 32 MSBs 0x000000002e12848d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e12848d
sw x3, 0(x2) # store x3 (0x2e12848d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002e12848d from memory into f9
fnmadd.d f24, f10, f14, f9, dyn # perform operation
fnmadd.d f24, f10, f14, f9, rdn # perform operation
fnmadd.d f24, f10, f14, f9, rmm # perform operation
fnmadd.d f24, f10, f14, f9, rne # perform operation
fnmadd.d f24, f10, f14, f9, rtz # perform operation
fnmadd.d f24, f10, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f10, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x12, 0x7b01f228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xc9af70ec # load x3 with 32 MSBs 0x00000000c9af70ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9af70ec
sw x3, 0(x2) # store x3 (0xc9af70ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c9af70ec from memory into f13
fnmadd.d f12, f2, f6, f13, dyn # perform operation
fnmadd.d f12, f2, f6, f13, rdn # perform operation
fnmadd.d f12, f2, f6, f13, rmm # perform operation
fnmadd.d f12, f2, f6, f13, rne # perform operation
fnmadd.d f12, f2, f6, f13, rtz # perform operation
fnmadd.d f12, f2, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f2, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f2, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x16, 0xdd33cae7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
li x3, 0xb11a8d5e # load x3 with 32 MSBs 0x00000000b11a8d5e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b11a8d5e
sw x3, 0(x2) # store x3 (0xb11a8d5e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b11a8d5e from memory into f31
fnmadd.d f16, f18, f15, f31, dyn # perform operation
fnmadd.d f16, f18, f15, f31, rdn # perform operation
fnmadd.d f16, f18, f15, f31, rmm # perform operation
fnmadd.d f16, f18, f15, f31, rne # perform operation
fnmadd.d f16, f18, f15, f31, rtz # perform operation
fnmadd.d f16, f18, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f18, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x18, 0x73c9b39f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x105a0e9c # load x3 with 32 MSBs 0x00000000105a0e9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000105a0e9c
sw x3, 0(x2) # store x3 (0x105a0e9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000105a0e9c from memory into f13
fnmadd.d f18, f11, f23, f13, dyn # perform operation
fnmadd.d f18, f11, f23, f13, rdn # perform operation
fnmadd.d f18, f11, f23, f13, rmm # perform operation
fnmadd.d f18, f11, f23, f13, rne # perform operation
fnmadd.d f18, f11, f23, f13, rtz # perform operation
fnmadd.d f18, f11, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f11, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f11, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x8, 0xd75516f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x76c12656 # load x3 with 32 MSBs 0x0000000076c12656
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076c12656
sw x3, 0(x2) # store x3 (0x76c12656) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000076c12656 from memory into f23
fnmadd.d f8, f2, f6, f23, dyn # perform operation
fnmadd.d f8, f2, f6, f23, rdn # perform operation
fnmadd.d f8, f2, f6, f23, rmm # perform operation
fnmadd.d f8, f2, f6, f23, rne # perform operation
fnmadd.d f8, f2, f6, f23, rtz # perform operation
fnmadd.d f8, f2, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f2, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f2, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f2, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f2, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f2, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x3, 0x62b1ac25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x5689485a # load x3 with 32 MSBs 0x000000005689485a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005689485a
sw x3, 0(x2) # store x3 (0x5689485a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000005689485a from memory into f9
fnmadd.d f3, f16, f18, f9, dyn # perform operation
fnmadd.d f3, f16, f18, f9, rdn # perform operation
fnmadd.d f3, f16, f18, f9, rmm # perform operation
fnmadd.d f3, f16, f18, f9, rne # perform operation
fnmadd.d f3, f16, f18, f9, rtz # perform operation
fnmadd.d f3, f16, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x25, 0xa15aafda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x194ba19a # load x3 with 32 MSBs 0x00000000194ba19a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000194ba19a
sw x3, 0(x2) # store x3 (0x194ba19a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000194ba19a from memory into f27
fnmadd.d f25, f28, f1, f27, dyn # perform operation
fnmadd.d f25, f28, f1, f27, rdn # perform operation
fnmadd.d f25, f28, f1, f27, rmm # perform operation
fnmadd.d f25, f28, f1, f27, rne # perform operation
fnmadd.d f25, f28, f1, f27, rtz # perform operation
fnmadd.d f25, f28, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f28, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f28, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f28, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f28, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f28, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x9, 0x77341dea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x669b2a6d # load x3 with 32 MSBs 0x00000000669b2a6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000669b2a6d
sw x3, 0(x2) # store x3 (0x669b2a6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000669b2a6d from memory into f19
fnmadd.d f9, f11, f16, f19, dyn # perform operation
fnmadd.d f9, f11, f16, f19, rdn # perform operation
fnmadd.d f9, f11, f16, f19, rmm # perform operation
fnmadd.d f9, f11, f16, f19, rne # perform operation
fnmadd.d f9, f11, f16, f19, rtz # perform operation
fnmadd.d f9, f11, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f11, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x18, 0xc5001270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x03c97db6 # load x3 with 32 MSBs 0x0000000003c97db6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003c97db6
sw x3, 0(x2) # store x3 (0x03c97db6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000003c97db6 from memory into f11
fnmadd.d f18, f2, f5, f11, dyn # perform operation
fnmadd.d f18, f2, f5, f11, rdn # perform operation
fnmadd.d f18, f2, f5, f11, rmm # perform operation
fnmadd.d f18, f2, f5, f11, rne # perform operation
fnmadd.d f18, f2, f5, f11, rtz # perform operation
fnmadd.d f18, f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f2, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x11, 0xad21bed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0xb4ad2c63 # load x3 with 32 MSBs 0x00000000b4ad2c63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4ad2c63
sw x3, 0(x2) # store x3 (0xb4ad2c63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b4ad2c63 from memory into f8
fnmadd.d f11, f17, f3, f8, dyn # perform operation
fnmadd.d f11, f17, f3, f8, rdn # perform operation
fnmadd.d f11, f17, f3, f8, rmm # perform operation
fnmadd.d f11, f17, f3, f8, rne # perform operation
fnmadd.d f11, f17, f3, f8, rtz # perform operation
fnmadd.d f11, f17, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x17, 0x981c43c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x0440db8a # load x3 with 32 MSBs 0x000000000440db8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000440db8a
sw x3, 0(x2) # store x3 (0x0440db8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000440db8a from memory into f18
fnmadd.d f17, f3, f2, f18, dyn # perform operation
fnmadd.d f17, f3, f2, f18, rdn # perform operation
fnmadd.d f17, f3, f2, f18, rmm # perform operation
fnmadd.d f17, f3, f2, f18, rne # perform operation
fnmadd.d f17, f3, f2, f18, rtz # perform operation
fnmadd.d f17, f3, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f3, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f3, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x14, 0xd5d87df0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x3bba3ff8 # load x3 with 32 MSBs 0x000000003bba3ff8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bba3ff8
sw x3, 0(x2) # store x3 (0x3bba3ff8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000003bba3ff8 from memory into f29
fnmadd.d f14, f5, f22, f29, dyn # perform operation
fnmadd.d f14, f5, f22, f29, rdn # perform operation
fnmadd.d f14, f5, f22, f29, rmm # perform operation
fnmadd.d f14, f5, f22, f29, rne # perform operation
fnmadd.d f14, f5, f22, f29, rtz # perform operation
fnmadd.d f14, f5, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f5, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f5, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x27, 0xe108820d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0xba24d158 # load x3 with 32 MSBs 0x00000000ba24d158
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba24d158
sw x3, 0(x2) # store x3 (0xba24d158) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ba24d158 from memory into f28
fnmadd.d f27, f17, f26, f28, dyn # perform operation
fnmadd.d f27, f17, f26, f28, rdn # perform operation
fnmadd.d f27, f17, f26, f28, rmm # perform operation
fnmadd.d f27, f17, f26, f28, rne # perform operation
fnmadd.d f27, f17, f26, f28, rtz # perform operation
fnmadd.d f27, f17, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f17, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f17, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f17, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f17, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f17, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x18, 0x74b5b7c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0xc854db5b # load x3 with 32 MSBs 0x00000000c854db5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c854db5b
sw x3, 0(x2) # store x3 (0xc854db5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000c854db5b from memory into f5
fnmadd.d f18, f3, f11, f5, dyn # perform operation
fnmadd.d f18, f3, f11, f5, rdn # perform operation
fnmadd.d f18, f3, f11, f5, rmm # perform operation
fnmadd.d f18, f3, f11, f5, rne # perform operation
fnmadd.d f18, f3, f11, f5, rtz # perform operation
fnmadd.d f18, f3, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f3, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f3, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f3, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f3, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f3, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x14, 0x24a87eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xbbc29af4 # load x3 with 32 MSBs 0x00000000bbc29af4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbc29af4
sw x3, 0(x2) # store x3 (0xbbc29af4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000bbc29af4 from memory into f15
fnmadd.d f14, f11, f3, f15, dyn # perform operation
fnmadd.d f14, f11, f3, f15, rdn # perform operation
fnmadd.d f14, f11, f3, f15, rmm # perform operation
fnmadd.d f14, f11, f3, f15, rne # perform operation
fnmadd.d f14, f11, f3, f15, rtz # perform operation
fnmadd.d f14, f11, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f11, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f11, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x26, 0x10a056f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x440d328f # load x3 with 32 MSBs 0x00000000440d328f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000440d328f
sw x3, 0(x2) # store x3 (0x440d328f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000440d328f from memory into f28
fnmadd.d f26, f31, f22, f28, dyn # perform operation
fnmadd.d f26, f31, f22, f28, rdn # perform operation
fnmadd.d f26, f31, f22, f28, rmm # perform operation
fnmadd.d f26, f31, f22, f28, rne # perform operation
fnmadd.d f26, f31, f22, f28, rtz # perform operation
fnmadd.d f26, f31, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f31, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f31, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x31, 0xb1efbe21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x52f78e72 # load x3 with 32 MSBs 0x0000000052f78e72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052f78e72
sw x3, 0(x2) # store x3 (0x52f78e72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000052f78e72 from memory into f3
fnmadd.d f31, f30, f27, f3, dyn # perform operation
fnmadd.d f31, f30, f27, f3, rdn # perform operation
fnmadd.d f31, f30, f27, f3, rmm # perform operation
fnmadd.d f31, f30, f27, f3, rne # perform operation
fnmadd.d f31, f30, f27, f3, rtz # perform operation
fnmadd.d f31, f30, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f30, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f30, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f30, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f30, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f30, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x14, 0x80893b0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x703c7980 # load x3 with 32 MSBs 0x00000000703c7980
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000703c7980
sw x3, 0(x2) # store x3 (0x703c7980) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000703c7980 from memory into f6
fnmadd.d f14, f3, f7, f6, dyn # perform operation
fnmadd.d f14, f3, f7, f6, rdn # perform operation
fnmadd.d f14, f3, f7, f6, rmm # perform operation
fnmadd.d f14, f3, f7, f6, rne # perform operation
fnmadd.d f14, f3, f7, f6, rtz # perform operation
fnmadd.d f14, f3, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f3, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f3, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f3, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f3, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f3, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x27, 0xffd250f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0xb85ec52e # load x3 with 32 MSBs 0x00000000b85ec52e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b85ec52e
sw x3, 0(x2) # store x3 (0xb85ec52e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b85ec52e from memory into f6
fnmadd.d f27, f1, f25, f6, dyn # perform operation
fnmadd.d f27, f1, f25, f6, rdn # perform operation
fnmadd.d f27, f1, f25, f6, rmm # perform operation
fnmadd.d f27, f1, f25, f6, rne # perform operation
fnmadd.d f27, f1, f25, f6, rtz # perform operation
fnmadd.d f27, f1, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f1, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x14, 0x797dcf07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x200b6959 # load x3 with 32 MSBs 0x00000000200b6959
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000200b6959
sw x3, 0(x2) # store x3 (0x200b6959) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000200b6959 from memory into f17
fnmadd.d f14, f15, f23, f17, dyn # perform operation
fnmadd.d f14, f15, f23, f17, rdn # perform operation
fnmadd.d f14, f15, f23, f17, rmm # perform operation
fnmadd.d f14, f15, f23, f17, rne # perform operation
fnmadd.d f14, f15, f23, f17, rtz # perform operation
fnmadd.d f14, f15, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f15, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x4, 0x1eccc3f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0x7f27067b # load x3 with 32 MSBs 0x000000007f27067b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f27067b
sw x3, 0(x2) # store x3 (0x7f27067b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007f27067b from memory into f19
fnmadd.d f4, f22, f10, f19, dyn # perform operation
fnmadd.d f4, f22, f10, f19, rdn # perform operation
fnmadd.d f4, f22, f10, f19, rmm # perform operation
fnmadd.d f4, f22, f10, f19, rne # perform operation
fnmadd.d f4, f22, f10, f19, rtz # perform operation
fnmadd.d f4, f22, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f22, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f22, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x3, 0xc0498a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x2b3bfb8e # load x3 with 32 MSBs 0x000000002b3bfb8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b3bfb8e
sw x3, 0(x2) # store x3 (0x2b3bfb8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002b3bfb8e from memory into f12
fnmadd.d f3, f7, f1, f12, dyn # perform operation
fnmadd.d f3, f7, f1, f12, rdn # perform operation
fnmadd.d f3, f7, f1, f12, rmm # perform operation
fnmadd.d f3, f7, f1, f12, rne # perform operation
fnmadd.d f3, f7, f1, f12, rtz # perform operation
fnmadd.d f3, f7, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f7, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x27, 0x0d190990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x6b0a9ebf # load x3 with 32 MSBs 0x000000006b0a9ebf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b0a9ebf
sw x3, 0(x2) # store x3 (0x6b0a9ebf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006b0a9ebf from memory into f4
fnmadd.d f27, f2, f24, f4, dyn # perform operation
fnmadd.d f27, f2, f24, f4, rdn # perform operation
fnmadd.d f27, f2, f24, f4, rmm # perform operation
fnmadd.d f27, f2, f24, f4, rne # perform operation
fnmadd.d f27, f2, f24, f4, rtz # perform operation
fnmadd.d f27, f2, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f2, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x23, 0x9fad3b3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x883ff7c5 # load x3 with 32 MSBs 0x00000000883ff7c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000883ff7c5
sw x3, 0(x2) # store x3 (0x883ff7c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000883ff7c5 from memory into f29
fnmadd.d f23, f11, f12, f29, dyn # perform operation
fnmadd.d f23, f11, f12, f29, rdn # perform operation
fnmadd.d f23, f11, f12, f29, rmm # perform operation
fnmadd.d f23, f11, f12, f29, rne # perform operation
fnmadd.d f23, f11, f12, f29, rtz # perform operation
fnmadd.d f23, f11, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f11, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f11, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f11, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f11, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f11, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x17, 0x5a9fccbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0xc56f64e5 # load x3 with 32 MSBs 0x00000000c56f64e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c56f64e5
sw x3, 0(x2) # store x3 (0xc56f64e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c56f64e5 from memory into f23
fnmadd.d f17, f10, f8, f23, dyn # perform operation
fnmadd.d f17, f10, f8, f23, rdn # perform operation
fnmadd.d f17, f10, f8, f23, rmm # perform operation
fnmadd.d f17, f10, f8, f23, rne # perform operation
fnmadd.d f17, f10, f8, f23, rtz # perform operation
fnmadd.d f17, f10, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x23, 0xaf451d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x4971f865 # load x3 with 32 MSBs 0x000000004971f865
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004971f865
sw x3, 0(x2) # store x3 (0x4971f865) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004971f865 from memory into f4
fnmadd.d f23, f2, f26, f4, dyn # perform operation
fnmadd.d f23, f2, f26, f4, rdn # perform operation
fnmadd.d f23, f2, f26, f4, rmm # perform operation
fnmadd.d f23, f2, f26, f4, rne # perform operation
fnmadd.d f23, f2, f26, f4, rtz # perform operation
fnmadd.d f23, f2, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f2, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f2, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x15, 0xa2d7a51f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x4744c00d # load x3 with 32 MSBs 0x000000004744c00d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004744c00d
sw x3, 0(x2) # store x3 (0x4744c00d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004744c00d from memory into f3
fnmadd.d f15, f26, f18, f3, dyn # perform operation
fnmadd.d f15, f26, f18, f3, rdn # perform operation
fnmadd.d f15, f26, f18, f3, rmm # perform operation
fnmadd.d f15, f26, f18, f3, rne # perform operation
fnmadd.d f15, f26, f18, f3, rtz # perform operation
fnmadd.d f15, f26, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f26, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x7, 0x6241f301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
li x3, 0xc34596b3 # load x3 with 32 MSBs 0x00000000c34596b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c34596b3
sw x3, 0(x2) # store x3 (0xc34596b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c34596b3 from memory into f10
fnmadd.d f7, f22, f15, f10, dyn # perform operation
fnmadd.d f7, f22, f15, f10, rdn # perform operation
fnmadd.d f7, f22, f15, f10, rmm # perform operation
fnmadd.d f7, f22, f15, f10, rne # perform operation
fnmadd.d f7, f22, f15, f10, rtz # perform operation
fnmadd.d f7, f22, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f22, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f22, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x12, 0xa4c9a5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x3f22b323 # load x3 with 32 MSBs 0x000000003f22b323
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f22b323
sw x3, 0(x2) # store x3 (0x3f22b323) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003f22b323 from memory into f5
fnmadd.d f12, f7, f1, f5, dyn # perform operation
fnmadd.d f12, f7, f1, f5, rdn # perform operation
fnmadd.d f12, f7, f1, f5, rmm # perform operation
fnmadd.d f12, f7, f1, f5, rne # perform operation
fnmadd.d f12, f7, f1, f5, rtz # perform operation
fnmadd.d f12, f7, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x23, 0x4d0a16af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x80442831 # load x3 with 32 MSBs 0x0000000080442831
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080442831
sw x3, 0(x2) # store x3 (0x80442831) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000080442831 from memory into f6
fnmadd.d f23, f28, f17, f6, dyn # perform operation
fnmadd.d f23, f28, f17, f6, rdn # perform operation
fnmadd.d f23, f28, f17, f6, rmm # perform operation
fnmadd.d f23, f28, f17, f6, rne # perform operation
fnmadd.d f23, f28, f17, f6, rtz # perform operation
fnmadd.d f23, f28, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f28, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f28, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f28, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f28, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f28, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x26, 0xaf8c3875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x69c3d3e0 # load x3 with 32 MSBs 0x0000000069c3d3e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069c3d3e0
sw x3, 0(x2) # store x3 (0x69c3d3e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000069c3d3e0 from memory into f27
fnmadd.d f26, f1, f10, f27, dyn # perform operation
fnmadd.d f26, f1, f10, f27, rdn # perform operation
fnmadd.d f26, f1, f10, f27, rmm # perform operation
fnmadd.d f26, f1, f10, f27, rne # perform operation
fnmadd.d f26, f1, f10, f27, rtz # perform operation
fnmadd.d f26, f1, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f1, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x28, 0x67367092 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x8d7a8e98 # load x3 with 32 MSBs 0x000000008d7a8e98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d7a8e98
sw x3, 0(x2) # store x3 (0x8d7a8e98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008d7a8e98 from memory into f23
fnmadd.d f28, f1, f20, f23, dyn # perform operation
fnmadd.d f28, f1, f20, f23, rdn # perform operation
fnmadd.d f28, f1, f20, f23, rmm # perform operation
fnmadd.d f28, f1, f20, f23, rne # perform operation
fnmadd.d f28, f1, f20, f23, rtz # perform operation
fnmadd.d f28, f1, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f1, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f1, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x8, 0x99377e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x5c6493e6 # load x3 with 32 MSBs 0x000000005c6493e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c6493e6
sw x3, 0(x2) # store x3 (0x5c6493e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005c6493e6 from memory into f12
fnmadd.d f8, f27, f11, f12, dyn # perform operation
fnmadd.d f8, f27, f11, f12, rdn # perform operation
fnmadd.d f8, f27, f11, f12, rmm # perform operation
fnmadd.d f8, f27, f11, f12, rne # perform operation
fnmadd.d f8, f27, f11, f12, rtz # perform operation
fnmadd.d f8, f27, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x29, 0x23b71e06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x16277646 # load x3 with 32 MSBs 0x0000000016277646
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016277646
sw x3, 0(x2) # store x3 (0x16277646) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000016277646 from memory into f16
fnmadd.d f29, f21, f9, f16, dyn # perform operation
fnmadd.d f29, f21, f9, f16, rdn # perform operation
fnmadd.d f29, f21, f9, f16, rmm # perform operation
fnmadd.d f29, f21, f9, f16, rne # perform operation
fnmadd.d f29, f21, f9, f16, rtz # perform operation
fnmadd.d f29, f21, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f21, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x14, 0xa465e9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x6020d5f0 # load x3 with 32 MSBs 0x000000006020d5f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006020d5f0
sw x3, 0(x2) # store x3 (0x6020d5f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006020d5f0 from memory into f5
fnmadd.d f14, f23, f19, f5, dyn # perform operation
fnmadd.d f14, f23, f19, f5, rdn # perform operation
fnmadd.d f14, f23, f19, f5, rmm # perform operation
fnmadd.d f14, f23, f19, f5, rne # perform operation
fnmadd.d f14, f23, f19, f5, rtz # perform operation
fnmadd.d f14, f23, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f23, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x11, 0x35275208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x6c575621 # load x3 with 32 MSBs 0x000000006c575621
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c575621
sw x3, 0(x2) # store x3 (0x6c575621) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000006c575621 from memory into f10
fnmadd.d f11, f5, f23, f10, dyn # perform operation
fnmadd.d f11, f5, f23, f10, rdn # perform operation
fnmadd.d f11, f5, f23, f10, rmm # perform operation
fnmadd.d f11, f5, f23, f10, rne # perform operation
fnmadd.d f11, f5, f23, f10, rtz # perform operation
fnmadd.d f11, f5, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f5, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f5, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x23, 0x8e21f39b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0xa0328b62 # load x3 with 32 MSBs 0x00000000a0328b62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0328b62
sw x3, 0(x2) # store x3 (0xa0328b62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000a0328b62 from memory into f20
fnmadd.d f23, f21, f28, f20, dyn # perform operation
fnmadd.d f23, f21, f28, f20, rdn # perform operation
fnmadd.d f23, f21, f28, f20, rmm # perform operation
fnmadd.d f23, f21, f28, f20, rne # perform operation
fnmadd.d f23, f21, f28, f20, rtz # perform operation
fnmadd.d f23, f21, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f21, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x8, 0x011e8a3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x10a3d0d5 # load x3 with 32 MSBs 0x0000000010a3d0d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010a3d0d5
sw x3, 0(x2) # store x3 (0x10a3d0d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000010a3d0d5 from memory into f13
fnmadd.d f8, f29, f27, f13, dyn # perform operation
fnmadd.d f8, f29, f27, f13, rdn # perform operation
fnmadd.d f8, f29, f27, f13, rmm # perform operation
fnmadd.d f8, f29, f27, f13, rne # perform operation
fnmadd.d f8, f29, f27, f13, rtz # perform operation
fnmadd.d f8, f29, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f29, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x20, 0x5730ce2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0xac0b7089 # load x3 with 32 MSBs 0x00000000ac0b7089
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac0b7089
sw x3, 0(x2) # store x3 (0xac0b7089) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ac0b7089 from memory into f3
fnmadd.d f20, f6, f25, f3, dyn # perform operation
fnmadd.d f20, f6, f25, f3, rdn # perform operation
fnmadd.d f20, f6, f25, f3, rmm # perform operation
fnmadd.d f20, f6, f25, f3, rne # perform operation
fnmadd.d f20, f6, f25, f3, rtz # perform operation
fnmadd.d f20, f6, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f6, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f6, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f6, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f6, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f6, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x26, 0x440f5a7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x6e8b3da9 # load x3 with 32 MSBs 0x000000006e8b3da9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e8b3da9
sw x3, 0(x2) # store x3 (0x6e8b3da9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006e8b3da9 from memory into f13
fnmadd.d f26, f9, f31, f13, dyn # perform operation
fnmadd.d f26, f9, f31, f13, rdn # perform operation
fnmadd.d f26, f9, f31, f13, rmm # perform operation
fnmadd.d f26, f9, f31, f13, rne # perform operation
fnmadd.d f26, f9, f31, f13, rtz # perform operation
fnmadd.d f26, f9, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x22, 0x1939fe46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0xcdd9ebf6 # load x3 with 32 MSBs 0x00000000cdd9ebf6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdd9ebf6
sw x3, 0(x2) # store x3 (0xcdd9ebf6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cdd9ebf6 from memory into f14
fnmadd.d f22, f29, f8, f14, dyn # perform operation
fnmadd.d f22, f29, f8, f14, rdn # perform operation
fnmadd.d f22, f29, f8, f14, rmm # perform operation
fnmadd.d f22, f29, f8, f14, rne # perform operation
fnmadd.d f22, f29, f8, f14, rtz # perform operation
fnmadd.d f22, f29, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f29, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f29, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f29, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f29, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f29, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x6, 0xcbb62d50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x8929c13b # load x3 with 32 MSBs 0x000000008929c13b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008929c13b
sw x3, 0(x2) # store x3 (0x8929c13b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008929c13b from memory into f5
fnmadd.d f6, f11, f7, f5, dyn # perform operation
fnmadd.d f6, f11, f7, f5, rdn # perform operation
fnmadd.d f6, f11, f7, f5, rmm # perform operation
fnmadd.d f6, f11, f7, f5, rne # perform operation
fnmadd.d f6, f11, f7, f5, rtz # perform operation
fnmadd.d f6, f11, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x12, 0x977dbc26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
li x3, 0x109f2c27 # load x3 with 32 MSBs 0x00000000109f2c27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000109f2c27
sw x3, 0(x2) # store x3 (0x109f2c27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000109f2c27 from memory into f1
fnmadd.d f12, f8, f14, f1, dyn # perform operation
fnmadd.d f12, f8, f14, f1, rdn # perform operation
fnmadd.d f12, f8, f14, f1, rmm # perform operation
fnmadd.d f12, f8, f14, f1, rne # perform operation
fnmadd.d f12, f8, f14, f1, rtz # perform operation
fnmadd.d f12, f8, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f8, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f8, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f8, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f8, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f8, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x19, 0xa63d17e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0x74c36243 # load x3 with 32 MSBs 0x0000000074c36243
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074c36243
sw x3, 0(x2) # store x3 (0x74c36243) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000074c36243 from memory into f12
fnmadd.d f19, f6, f20, f12, dyn # perform operation
fnmadd.d f19, f6, f20, f12, rdn # perform operation
fnmadd.d f19, f6, f20, f12, rmm # perform operation
fnmadd.d f19, f6, f20, f12, rne # perform operation
fnmadd.d f19, f6, f20, f12, rtz # perform operation
fnmadd.d f19, f6, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f6, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f6, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x22, 0x2f6388b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x81510e9d # load x3 with 32 MSBs 0x0000000081510e9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081510e9d
sw x3, 0(x2) # store x3 (0x81510e9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000081510e9d from memory into f17
fnmadd.d f22, f8, f6, f17, dyn # perform operation
fnmadd.d f22, f8, f6, f17, rdn # perform operation
fnmadd.d f22, f8, f6, f17, rmm # perform operation
fnmadd.d f22, f8, f6, f17, rne # perform operation
fnmadd.d f22, f8, f6, f17, rtz # perform operation
fnmadd.d f22, f8, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f8, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x1, 0x5f569987 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0x711ebcf2 # load x3 with 32 MSBs 0x00000000711ebcf2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000711ebcf2
sw x3, 0(x2) # store x3 (0x711ebcf2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000711ebcf2 from memory into f27
fnmadd.d f1, f15, f6, f27, dyn # perform operation
fnmadd.d f1, f15, f6, f27, rdn # perform operation
fnmadd.d f1, f15, f6, f27, rmm # perform operation
fnmadd.d f1, f15, f6, f27, rne # perform operation
fnmadd.d f1, f15, f6, f27, rtz # perform operation
fnmadd.d f1, f15, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x17, 0xe3c89327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
li x3, 0x3d7cea9d # load x3 with 32 MSBs 0x000000003d7cea9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d7cea9d
sw x3, 0(x2) # store x3 (0x3d7cea9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003d7cea9d from memory into f10
fnmadd.d f17, f18, f23, f10, dyn # perform operation
fnmadd.d f17, f18, f23, f10, rdn # perform operation
fnmadd.d f17, f18, f23, f10, rmm # perform operation
fnmadd.d f17, f18, f23, f10, rne # perform operation
fnmadd.d f17, f18, f23, f10, rtz # perform operation
fnmadd.d f17, f18, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f18, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x7, 0x16b264bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0xdf3bab69 # load x3 with 32 MSBs 0x00000000df3bab69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df3bab69
sw x3, 0(x2) # store x3 (0xdf3bab69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000df3bab69 from memory into f26
fnmadd.d f7, f18, f23, f26, dyn # perform operation
fnmadd.d f7, f18, f23, f26, rdn # perform operation
fnmadd.d f7, f18, f23, f26, rmm # perform operation
fnmadd.d f7, f18, f23, f26, rne # perform operation
fnmadd.d f7, f18, f23, f26, rtz # perform operation
fnmadd.d f7, f18, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f18, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f18, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x5, 0xa3a9766a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x1cc357cc # load x3 with 32 MSBs 0x000000001cc357cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cc357cc
sw x3, 0(x2) # store x3 (0x1cc357cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000001cc357cc from memory into f16
fnmadd.d f5, f14, f27, f16, dyn # perform operation
fnmadd.d f5, f14, f27, f16, rdn # perform operation
fnmadd.d f5, f14, f27, f16, rmm # perform operation
fnmadd.d f5, f14, f27, f16, rne # perform operation
fnmadd.d f5, f14, f27, f16, rtz # perform operation
fnmadd.d f5, f14, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x24, 0x1fd6f188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x27f3df75 # load x3 with 32 MSBs 0x0000000027f3df75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027f3df75
sw x3, 0(x2) # store x3 (0x27f3df75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000027f3df75 from memory into f23
fnmadd.d f24, f5, f6, f23, dyn # perform operation
fnmadd.d f24, f5, f6, f23, rdn # perform operation
fnmadd.d f24, f5, f6, f23, rmm # perform operation
fnmadd.d f24, f5, f6, f23, rne # perform operation
fnmadd.d f24, f5, f6, f23, rtz # perform operation
fnmadd.d f24, f5, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x5, 0x478fce4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0x89ccf787 # load x3 with 32 MSBs 0x0000000089ccf787
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089ccf787
sw x3, 0(x2) # store x3 (0x89ccf787) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000089ccf787 from memory into f9
fnmadd.d f5, f26, f11, f9, dyn # perform operation
fnmadd.d f5, f26, f11, f9, rdn # perform operation
fnmadd.d f5, f26, f11, f9, rmm # perform operation
fnmadd.d f5, f26, f11, f9, rne # perform operation
fnmadd.d f5, f26, f11, f9, rtz # perform operation
fnmadd.d f5, f26, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f26, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f26, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f26, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f26, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f26, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x5, 0xdb738f99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x4c32c321 # load x3 with 32 MSBs 0x000000004c32c321
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c32c321
sw x3, 0(x2) # store x3 (0x4c32c321) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004c32c321 from memory into f11
fnmadd.d f5, f31, f4, f11, dyn # perform operation
fnmadd.d f5, f31, f4, f11, rdn # perform operation
fnmadd.d f5, f31, f4, f11, rmm # perform operation
fnmadd.d f5, f31, f4, f11, rne # perform operation
fnmadd.d f5, f31, f4, f11, rtz # perform operation
fnmadd.d f5, f31, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x23, 0xe1a2801e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xb3df2019 # load x3 with 32 MSBs 0x00000000b3df2019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3df2019
sw x3, 0(x2) # store x3 (0xb3df2019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b3df2019 from memory into f22
fnmadd.d f23, f18, f25, f22, dyn # perform operation
fnmadd.d f23, f18, f25, f22, rdn # perform operation
fnmadd.d f23, f18, f25, f22, rmm # perform operation
fnmadd.d f23, f18, f25, f22, rne # perform operation
fnmadd.d f23, f18, f25, f22, rtz # perform operation
fnmadd.d f23, f18, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x15, 0x8c89aa47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0x7f8b2139 # load x3 with 32 MSBs 0x000000007f8b2139
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f8b2139
sw x3, 0(x2) # store x3 (0x7f8b2139) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007f8b2139 from memory into f21
fnmadd.d f15, f22, f24, f21, dyn # perform operation
fnmadd.d f15, f22, f24, f21, rdn # perform operation
fnmadd.d f15, f22, f24, f21, rmm # perform operation
fnmadd.d f15, f22, f24, f21, rne # perform operation
fnmadd.d f15, f22, f24, f21, rtz # perform operation
fnmadd.d f15, f22, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f22, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f22, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x2, 0x256f50f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x18205813 # load x3 with 32 MSBs 0x0000000018205813
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018205813
sw x3, 0(x2) # store x3 (0x18205813) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000018205813 from memory into f15
fnmadd.d f2, f11, f12, f15, dyn # perform operation
fnmadd.d f2, f11, f12, f15, rdn # perform operation
fnmadd.d f2, f11, f12, f15, rmm # perform operation
fnmadd.d f2, f11, f12, f15, rne # perform operation
fnmadd.d f2, f11, f12, f15, rtz # perform operation
fnmadd.d f2, f11, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f11, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f11, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f11, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f11, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f11, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x29, 0x9a72593f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0xbc9947c1 # load x3 with 32 MSBs 0x00000000bc9947c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc9947c1
sw x3, 0(x2) # store x3 (0xbc9947c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000bc9947c1 from memory into f27
fnmadd.d f29, f23, f22, f27, dyn # perform operation
fnmadd.d f29, f23, f22, f27, rdn # perform operation
fnmadd.d f29, f23, f22, f27, rmm # perform operation
fnmadd.d f29, f23, f22, f27, rne # perform operation
fnmadd.d f29, f23, f22, f27, rtz # perform operation
fnmadd.d f29, f23, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f23, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f23, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x31, 0xd97e55b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
li x3, 0x5c623653 # load x3 with 32 MSBs 0x000000005c623653
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c623653
sw x3, 0(x2) # store x3 (0x5c623653) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005c623653 from memory into f13
fnmadd.d f31, f6, f10, f13, dyn # perform operation
fnmadd.d f31, f6, f10, f13, rdn # perform operation
fnmadd.d f31, f6, f10, f13, rmm # perform operation
fnmadd.d f31, f6, f10, f13, rne # perform operation
fnmadd.d f31, f6, f10, f13, rtz # perform operation
fnmadd.d f31, f6, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x25, 0x07a97a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xfe165553 # load x3 with 32 MSBs 0x00000000fe165553
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe165553
sw x3, 0(x2) # store x3 (0xfe165553) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fe165553 from memory into f8
fnmadd.d f25, f6, f24, f8, dyn # perform operation
fnmadd.d f25, f6, f24, f8, rdn # perform operation
fnmadd.d f25, f6, f24, f8, rmm # perform operation
fnmadd.d f25, f6, f24, f8, rne # perform operation
fnmadd.d f25, f6, f24, f8, rtz # perform operation
fnmadd.d f25, f6, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x29, 0x9811564c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xc08b7784 # load x3 with 32 MSBs 0x00000000c08b7784
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c08b7784
sw x3, 0(x2) # store x3 (0xc08b7784) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c08b7784 from memory into f25
fnmadd.d f29, f20, f6, f25, dyn # perform operation
fnmadd.d f29, f20, f6, f25, rdn # perform operation
fnmadd.d f29, f20, f6, f25, rmm # perform operation
fnmadd.d f29, f20, f6, f25, rne # perform operation
fnmadd.d f29, f20, f6, f25, rtz # perform operation
fnmadd.d f29, f20, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f20, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x16, 0xecd6c4d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0xbd222759 # load x3 with 32 MSBs 0x00000000bd222759
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd222759
sw x3, 0(x2) # store x3 (0xbd222759) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000bd222759 from memory into f20
fnmadd.d f16, f28, f29, f20, dyn # perform operation
fnmadd.d f16, f28, f29, f20, rdn # perform operation
fnmadd.d f16, f28, f29, f20, rmm # perform operation
fnmadd.d f16, f28, f29, f20, rne # perform operation
fnmadd.d f16, f28, f29, f20, rtz # perform operation
fnmadd.d f16, f28, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f28, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x19, 0x43480e5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0xf7924605 # load x3 with 32 MSBs 0x00000000f7924605
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7924605
sw x3, 0(x2) # store x3 (0xf7924605) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f7924605 from memory into f4
fnmadd.d f19, f26, f8, f4, dyn # perform operation
fnmadd.d f19, f26, f8, f4, rdn # perform operation
fnmadd.d f19, f26, f8, f4, rmm # perform operation
fnmadd.d f19, f26, f8, f4, rne # perform operation
fnmadd.d f19, f26, f8, f4, rtz # perform operation
fnmadd.d f19, f26, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f26, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f26, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f26, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f26, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f26, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x17, 0xd020af66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0x0513b70b # load x3 with 32 MSBs 0x000000000513b70b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000513b70b
sw x3, 0(x2) # store x3 (0x0513b70b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000513b70b from memory into f21
fnmadd.d f17, f8, f1, f21, dyn # perform operation
fnmadd.d f17, f8, f1, f21, rdn # perform operation
fnmadd.d f17, f8, f1, f21, rmm # perform operation
fnmadd.d f17, f8, f1, f21, rne # perform operation
fnmadd.d f17, f8, f1, f21, rtz # perform operation
fnmadd.d f17, f8, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f8, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x28, 0xfdac7ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x07d19e83 # load x3 with 32 MSBs 0x0000000007d19e83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007d19e83
sw x3, 0(x2) # store x3 (0x07d19e83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000007d19e83 from memory into f25
fnmadd.d f28, f22, f31, f25, dyn # perform operation
fnmadd.d f28, f22, f31, f25, rdn # perform operation
fnmadd.d f28, f22, f31, f25, rmm # perform operation
fnmadd.d f28, f22, f31, f25, rne # perform operation
fnmadd.d f28, f22, f31, f25, rtz # perform operation
fnmadd.d f28, f22, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f22, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x27, 0x6d9064a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xba323534 # load x3 with 32 MSBs 0x00000000ba323534
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba323534
sw x3, 0(x2) # store x3 (0xba323534) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ba323534 from memory into f7
fnmadd.d f27, f6, f2, f7, dyn # perform operation
fnmadd.d f27, f6, f2, f7, rdn # perform operation
fnmadd.d f27, f6, f2, f7, rmm # perform operation
fnmadd.d f27, f6, f2, f7, rne # perform operation
fnmadd.d f27, f6, f2, f7, rtz # perform operation
fnmadd.d f27, f6, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f6, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f6, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f6, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f6, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f6, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x27, 0xe439e680 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x79b13f95 # load x3 with 32 MSBs 0x0000000079b13f95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079b13f95
sw x3, 0(x2) # store x3 (0x79b13f95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000079b13f95 from memory into f28
fnmadd.d f27, f9, f2, f28, dyn # perform operation
fnmadd.d f27, f9, f2, f28, rdn # perform operation
fnmadd.d f27, f9, f2, f28, rmm # perform operation
fnmadd.d f27, f9, f2, f28, rne # perform operation
fnmadd.d f27, f9, f2, f28, rtz # perform operation
fnmadd.d f27, f9, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f9, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x12, 0xc1921a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x9081bf1e # load x3 with 32 MSBs 0x000000009081bf1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009081bf1e
sw x3, 0(x2) # store x3 (0x9081bf1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000009081bf1e from memory into f25
fnmadd.d f12, f14, f8, f25, dyn # perform operation
fnmadd.d f12, f14, f8, f25, rdn # perform operation
fnmadd.d f12, f14, f8, f25, rmm # perform operation
fnmadd.d f12, f14, f8, f25, rne # perform operation
fnmadd.d f12, f14, f8, f25, rtz # perform operation
fnmadd.d f12, f14, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f14, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f14, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x15, 0x34d22f4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x2a663667 # load x3 with 32 MSBs 0x000000002a663667
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a663667
sw x3, 0(x2) # store x3 (0x2a663667) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002a663667 from memory into f28
fnmadd.d f15, f31, f23, f28, dyn # perform operation
fnmadd.d f15, f31, f23, f28, rdn # perform operation
fnmadd.d f15, f31, f23, f28, rmm # perform operation
fnmadd.d f15, f31, f23, f28, rne # perform operation
fnmadd.d f15, f31, f23, f28, rtz # perform operation
fnmadd.d f15, f31, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f31, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f31, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x23, 0xdd8a2a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x84a8317e # load x3 with 32 MSBs 0x0000000084a8317e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084a8317e
sw x3, 0(x2) # store x3 (0x84a8317e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000084a8317e from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fnmadd.d f23, f10, f8, f21, dyn # perform operation
fnmadd.d f23, f10, f8, f21, rdn # perform operation
fnmadd.d f23, f10, f8, f21, rmm # perform operation
fnmadd.d f23, f10, f8, f21, rne # perform operation
fnmadd.d f23, f10, f8, f21, rtz # perform operation
fnmadd.d f23, f10, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f10, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f10, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000000)
li x16, 0xfa1e1a12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x7555c4b4 # load x3 with 32 MSBs 0x000000007555c4b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007555c4b4
sw x3, 0(x2) # store x3 (0x7555c4b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007555c4b4 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fnmadd.d f16, f20, f25, f12, dyn # perform operation
fnmadd.d f16, f20, f25, f12, rdn # perform operation
fnmadd.d f16, f20, f25, f12, rmm # perform operation
fnmadd.d f16, f20, f25, f12, rne # perform operation
fnmadd.d f16, f20, f25, f12, rtz # perform operation
fnmadd.d f16, f20, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f20, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f20, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff0000000000000)
li x23, 0x1a42836e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x87bc353a # load x3 with 32 MSBs 0x0000000087bc353a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087bc353a
sw x3, 0(x2) # store x3 (0x87bc353a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000087bc353a from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fnmadd.d f23, f29, f11, f26, dyn # perform operation
fnmadd.d f23, f29, f11, f26, rdn # perform operation
fnmadd.d f23, f29, f11, f26, rmm # perform operation
fnmadd.d f23, f29, f11, f26, rne # perform operation
fnmadd.d f23, f29, f11, f26, rtz # perform operation
fnmadd.d f23, f29, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f29, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f29, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff0000000000000)
li x3, 0x87386bb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x790c38c7 # load x3 with 32 MSBs 0x00000000790c38c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000790c38c7
sw x3, 0(x2) # store x3 (0x790c38c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000790c38c7 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fnmadd.d f3, f22, f28, f31, dyn # perform operation
fnmadd.d f3, f22, f28, f31, rdn # perform operation
fnmadd.d f3, f22, f28, f31, rmm # perform operation
fnmadd.d f3, f22, f28, f31, rne # perform operation
fnmadd.d f3, f22, f28, f31, rtz # perform operation
fnmadd.d f3, f22, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f22, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f22, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff8000000000000)
li x28, 0x729e7301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x0764d0d7 # load x3 with 32 MSBs 0x000000000764d0d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000764d0d7
sw x3, 0(x2) # store x3 (0x0764d0d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000764d0d7 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fnmadd.d f28, f11, f6, f14, dyn # perform operation
fnmadd.d f28, f11, f6, f14, rdn # perform operation
fnmadd.d f28, f11, f6, f14, rmm # perform operation
fnmadd.d f28, f11, f6, f14, rne # perform operation
fnmadd.d f28, f11, f6, f14, rtz # perform operation
fnmadd.d f28, f11, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f11, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbff8000000000000)
li x19, 0x8428ab7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
li x3, 0x4d1b5d60 # load x3 with 32 MSBs 0x000000004d1b5d60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d1b5d60
sw x3, 0(x2) # store x3 (0x4d1b5d60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004d1b5d60 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmadd.d f19, f13, f4, f12, dyn # perform operation
fnmadd.d f19, f13, f4, f12, rdn # perform operation
fnmadd.d f19, f13, f4, f12, rmm # perform operation
fnmadd.d f19, f13, f4, f12, rne # perform operation
fnmadd.d f19, f13, f4, f12, rtz # perform operation
fnmadd.d f19, f13, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f13, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f13, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000000000000000)
li x29, 0x941e1a1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xa49fcf7a # load x3 with 32 MSBs 0x00000000a49fcf7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a49fcf7a
sw x3, 0(x2) # store x3 (0xa49fcf7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a49fcf7a from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fnmadd.d f29, f26, f10, f6, dyn # perform operation
fnmadd.d f29, f26, f10, f6, rdn # perform operation
fnmadd.d f29, f26, f10, f6, rmm # perform operation
fnmadd.d f29, f26, f10, f6, rne # perform operation
fnmadd.d f29, f26, f10, f6, rtz # perform operation
fnmadd.d f29, f26, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000000000000000)
li x23, 0x46d401dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0x6b509a5a # load x3 with 32 MSBs 0x000000006b509a5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b509a5a
sw x3, 0(x2) # store x3 (0x6b509a5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006b509a5a from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fnmadd.d f23, f18, f25, f15, dyn # perform operation
fnmadd.d f23, f18, f25, f15, rdn # perform operation
fnmadd.d f23, f18, f25, f15, rmm # perform operation
fnmadd.d f23, f18, f25, f15, rne # perform operation
fnmadd.d f23, f18, f25, f15, rtz # perform operation
fnmadd.d f23, f18, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x10000000000000)
li x8, 0x1df5b972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x9f8bce7a # load x3 with 32 MSBs 0x000000009f8bce7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f8bce7a
sw x3, 0(x2) # store x3 (0x9f8bce7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000009f8bce7a from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fnmadd.d f8, f21, f25, f2, dyn # perform operation
fnmadd.d f8, f21, f25, f2, rdn # perform operation
fnmadd.d f8, f21, f25, f2, rmm # perform operation
fnmadd.d f8, f21, f25, f2, rne # perform operation
fnmadd.d f8, f21, f25, f2, rtz # perform operation
fnmadd.d f8, f21, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f21, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f21, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f21, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f21, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f21, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8010000000000000)
li x9, 0xb1a190a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0xa801de11 # load x3 with 32 MSBs 0x00000000a801de11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a801de11
sw x3, 0(x2) # store x3 (0xa801de11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a801de11 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fnmadd.d f9, f23, f26, f18, dyn # perform operation
fnmadd.d f9, f23, f26, f18, rdn # perform operation
fnmadd.d f9, f23, f26, f18, rmm # perform operation
fnmadd.d f9, f23, f26, f18, rne # perform operation
fnmadd.d f9, f23, f26, f18, rtz # perform operation
fnmadd.d f9, f23, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f23, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f23, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f23, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f23, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f23, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fefffffffffffff)
li x16, 0xdd8640d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0xb3c7f6ab # load x3 with 32 MSBs 0x00000000b3c7f6ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3c7f6ab
sw x3, 0(x2) # store x3 (0xb3c7f6ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b3c7f6ab from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmadd.d f16, f30, f5, f6, dyn # perform operation
fnmadd.d f16, f30, f5, f6, rdn # perform operation
fnmadd.d f16, f30, f5, f6, rmm # perform operation
fnmadd.d f16, f30, f5, f6, rne # perform operation
fnmadd.d f16, f30, f5, f6, rtz # perform operation
fnmadd.d f16, f30, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f30, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffefffffffffffff)
li x24, 0xa8cdee75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x8d440b72 # load x3 with 32 MSBs 0x000000008d440b72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d440b72
sw x3, 0(x2) # store x3 (0x8d440b72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008d440b72 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fnmadd.d f24, f20, f18, f13, dyn # perform operation
fnmadd.d f24, f20, f18, f13, rdn # perform operation
fnmadd.d f24, f20, f18, f13, rmm # perform operation
fnmadd.d f24, f20, f18, f13, rne # perform operation
fnmadd.d f24, f20, f18, f13, rtz # perform operation
fnmadd.d f24, f20, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f20, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfffffffffffff)
li x4, 0x98193003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x9ec304d5 # load x3 with 32 MSBs 0x000000009ec304d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ec304d5
sw x3, 0(x2) # store x3 (0x9ec304d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009ec304d5 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fnmadd.d f4, f30, f18, f11, dyn # perform operation
fnmadd.d f4, f30, f18, f11, rdn # perform operation
fnmadd.d f4, f30, f18, f11, rmm # perform operation
fnmadd.d f4, f30, f18, f11, rne # perform operation
fnmadd.d f4, f30, f18, f11, rtz # perform operation
fnmadd.d f4, f30, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f30, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800fffffffffffff)
li x11, 0x03f835af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
li x3, 0xffdc3ccc # load x3 with 32 MSBs 0x00000000ffdc3ccc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffdc3ccc
sw x3, 0(x2) # store x3 (0xffdc3ccc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ffdc3ccc from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fnmadd.d f11, f25, f3, f5, dyn # perform operation
fnmadd.d f11, f25, f3, f5, rdn # perform operation
fnmadd.d f11, f25, f3, f5, rmm # perform operation
fnmadd.d f11, f25, f3, f5, rne # perform operation
fnmadd.d f11, f25, f3, f5, rtz # perform operation
fnmadd.d f11, f25, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f25, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000)
li x4, 0xb5d4d8c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x565f5d39 # load x3 with 32 MSBs 0x00000000565f5d39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000565f5d39
sw x3, 0(x2) # store x3 (0x565f5d39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000565f5d39 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fnmadd.d f4, f3, f22, f7, dyn # perform operation
fnmadd.d f4, f3, f22, f7, rdn # perform operation
fnmadd.d f4, f3, f22, f7, rmm # perform operation
fnmadd.d f4, f3, f22, f7, rne # perform operation
fnmadd.d f4, f3, f22, f7, rtz # perform operation
fnmadd.d f4, f3, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f3, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8008000000000000)
li x24, 0x897e0c86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x920a61e4 # load x3 with 32 MSBs 0x00000000920a61e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000920a61e4
sw x3, 0(x2) # store x3 (0x920a61e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000920a61e4 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fnmadd.d f24, f7, f19, f8, dyn # perform operation
fnmadd.d f24, f7, f19, f8, rdn # perform operation
fnmadd.d f24, f7, f19, f8, rmm # perform operation
fnmadd.d f24, f7, f19, f8, rne # perform operation
fnmadd.d f24, f7, f19, f8, rtz # perform operation
fnmadd.d f24, f7, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f7, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f7, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x12, 0x9195cf76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0xf6ea4039 # load x3 with 32 MSBs 0x00000000f6ea4039
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6ea4039
sw x3, 0(x2) # store x3 (0xf6ea4039) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f6ea4039 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fnmadd.d f12, f9, f25, f28, dyn # perform operation
fnmadd.d f12, f9, f25, f28, rdn # perform operation
fnmadd.d f12, f9, f25, f28, rmm # perform operation
fnmadd.d f12, f9, f25, f28, rne # perform operation
fnmadd.d f12, f9, f25, f28, rtz # perform operation
fnmadd.d f12, f9, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f9, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f9, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000000000000001)
li x1, 0x86b1abc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
li x3, 0x73bc9cd6 # load x3 with 32 MSBs 0x0000000073bc9cd6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073bc9cd6
sw x3, 0(x2) # store x3 (0x73bc9cd6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000073bc9cd6 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmadd.d f1, f30, f28, f4, dyn # perform operation
fnmadd.d f1, f30, f28, f4, rdn # perform operation
fnmadd.d f1, f30, f28, f4, rmm # perform operation
fnmadd.d f1, f30, f28, f4, rne # perform operation
fnmadd.d f1, f30, f28, f4, rtz # perform operation
fnmadd.d f1, f30, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f30, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f30, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000000)
li x9, 0xb8d74c5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0xe9ba0432 # load x3 with 32 MSBs 0x00000000e9ba0432
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9ba0432
sw x3, 0(x2) # store x3 (0xe9ba0432) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e9ba0432 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmadd.d f9, f11, f15, f4, dyn # perform operation
fnmadd.d f9, f11, f15, f4, rdn # perform operation
fnmadd.d f9, f11, f15, f4, rmm # perform operation
fnmadd.d f9, f11, f15, f4, rne # perform operation
fnmadd.d f9, f11, f15, f4, rtz # perform operation
fnmadd.d f9, f11, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f11, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f11, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f11, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f11, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f11, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfff0000000000000)
li x29, 0x5ff2ae94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xb88f9160 # load x3 with 32 MSBs 0x00000000b88f9160
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b88f9160
sw x3, 0(x2) # store x3 (0xb88f9160) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b88f9160 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fnmadd.d f29, f8, f4, f30, dyn # perform operation
fnmadd.d f29, f8, f4, f30, rdn # perform operation
fnmadd.d f29, f8, f4, f30, rmm # perform operation
fnmadd.d f29, f8, f4, f30, rne # perform operation
fnmadd.d f29, f8, f4, f30, rtz # perform operation
fnmadd.d f29, f8, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f8, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f8, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff8000000000000)
li x14, 0x74268a2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
li x3, 0x1d4c5928 # load x3 with 32 MSBs 0x000000001d4c5928
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d4c5928
sw x3, 0(x2) # store x3 (0x1d4c5928) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001d4c5928 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fnmadd.d f14, f11, f2, f30, dyn # perform operation
fnmadd.d f14, f11, f2, f30, rdn # perform operation
fnmadd.d f14, f11, f2, f30, rmm # perform operation
fnmadd.d f14, f11, f2, f30, rne # perform operation
fnmadd.d f14, f11, f2, f30, rtz # perform operation
fnmadd.d f14, f11, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f11, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f11, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffffffffffff)
li x13, 0x41b358ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0xd43d4e85 # load x3 with 32 MSBs 0x00000000d43d4e85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d43d4e85
sw x3, 0(x2) # store x3 (0xd43d4e85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000d43d4e85 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fnmadd.d f13, f12, f30, f24, dyn # perform operation
fnmadd.d f13, f12, f30, f24, rdn # perform operation
fnmadd.d f13, f12, f30, f24, rmm # perform operation
fnmadd.d f13, f12, f30, f24, rne # perform operation
fnmadd.d f13, f12, f30, f24, rtz # perform operation
fnmadd.d f13, f12, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f12, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff0000000000001)
li x23, 0x926c6326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x9571c0a7 # load x3 with 32 MSBs 0x000000009571c0a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009571c0a7
sw x3, 0(x2) # store x3 (0x9571c0a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009571c0a7 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f23, f12, f3, f5, dyn # perform operation
fnmadd.d f23, f12, f3, f5, rdn # perform operation
fnmadd.d f23, f12, f3, f5, rmm # perform operation
fnmadd.d f23, f12, f3, f5, rne # perform operation
fnmadd.d f23, f12, f3, f5, rtz # perform operation
fnmadd.d f23, f12, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ff7ffffffffffff)
li x18, 0xd1b81ec9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x37b8ae14 # load x3 with 32 MSBs 0x0000000037b8ae14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037b8ae14
sw x3, 0(x2) # store x3 (0x37b8ae14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000037b8ae14 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fnmadd.d f18, f22, f27, f9, dyn # perform operation
fnmadd.d f18, f22, f27, f9, rdn # perform operation
fnmadd.d f18, f22, f27, f9, rmm # perform operation
fnmadd.d f18, f22, f27, f9, rne # perform operation
fnmadd.d f18, f22, f27, f9, rtz # perform operation
fnmadd.d f18, f22, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f22, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f22, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x5a392534a57711ad)
li x24, 0x9da6c365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
li x3, 0x7034a1c5 # load x3 with 32 MSBs 0x000000007034a1c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007034a1c5
sw x3, 0(x2) # store x3 (0x7034a1c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007034a1c5 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmadd.d f24, f23, f18, f14, dyn # perform operation
fnmadd.d f24, f23, f18, f14, rdn # perform operation
fnmadd.d f24, f23, f18, f14, rmm # perform operation
fnmadd.d f24, f23, f18, f14, rne # perform operation
fnmadd.d f24, f23, f18, f14, rtz # perform operation
fnmadd.d f24, f23, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f23, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f23, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xa6e895993737426c)
li x29, 0x44f843ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xdb50b081 # load x3 with 32 MSBs 0x00000000db50b081
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db50b081
sw x3, 0(x2) # store x3 (0xdb50b081) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000db50b081 from memory into f27
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmadd.d f29, f2, f27, f16, dyn # perform operation
fnmadd.d f29, f2, f27, f16, rdn # perform operation
fnmadd.d f29, f2, f27, f16, rmm # perform operation
fnmadd.d f29, f2, f27, f16, rne # perform operation
fnmadd.d f29, f2, f27, f16, rtz # perform operation
fnmadd.d f29, f2, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f2, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f2, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x0)
li x10, 0x1e3ae442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0xb11744a3 # load x3 with 32 MSBs 0x00000000b11744a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b11744a3
sw x3, 0(x2) # store x3 (0xb11744a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b11744a3 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fnmadd.d f10, f30, f2, f5, dyn # perform operation
fnmadd.d f10, f30, f2, f5, rdn # perform operation
fnmadd.d f10, f30, f2, f5, rmm # perform operation
fnmadd.d f10, f30, f2, f5, rne # perform operation
fnmadd.d f10, f30, f2, f5, rtz # perform operation
fnmadd.d f10, f30, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f30, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f30, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000000)
li x12, 0x571c372f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x59593082 # load x3 with 32 MSBs 0x0000000059593082
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059593082
sw x3, 0(x2) # store x3 (0x59593082) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000059593082 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fnmadd.d f12, f17, f2, f8, dyn # perform operation
fnmadd.d f12, f17, f2, f8, rdn # perform operation
fnmadd.d f12, f17, f2, f8, rmm # perform operation
fnmadd.d f12, f17, f2, f8, rne # perform operation
fnmadd.d f12, f17, f2, f8, rtz # perform operation
fnmadd.d f12, f17, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f17, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f17, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f17, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f17, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f17, f2, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff0000000000000)
li x2, 0x37be4a05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x6dd8328d # load x3 with 32 MSBs 0x000000006dd8328d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006dd8328d
sw x3, 0(x2) # store x3 (0x6dd8328d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006dd8328d from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmadd.d f2, f21, f12, f13, dyn # perform operation
fnmadd.d f2, f21, f12, f13, rdn # perform operation
fnmadd.d f2, f21, f12, f13, rmm # perform operation
fnmadd.d f2, f21, f12, f13, rne # perform operation
fnmadd.d f2, f21, f12, f13, rtz # perform operation
fnmadd.d f2, f21, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff0000000000000)
li x29, 0xb54b12a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x7892c4ca # load x3 with 32 MSBs 0x000000007892c4ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007892c4ca
sw x3, 0(x2) # store x3 (0x7892c4ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007892c4ca from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fnmadd.d f29, f26, f27, f30, dyn # perform operation
fnmadd.d f29, f26, f27, f30, rdn # perform operation
fnmadd.d f29, f26, f27, f30, rmm # perform operation
fnmadd.d f29, f26, f27, f30, rne # perform operation
fnmadd.d f29, f26, f27, f30, rtz # perform operation
fnmadd.d f29, f26, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x3ff8000000000000)
li x3, 0x6b64f9d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x1e8568e7 # load x3 with 32 MSBs 0x000000001e8568e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e8568e7
sw x3, 0(x2) # store x3 (0x1e8568e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001e8568e7 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fnmadd.d f3, f20, f22, f5, dyn # perform operation
fnmadd.d f3, f20, f22, f5, rdn # perform operation
fnmadd.d f3, f20, f22, f5, rmm # perform operation
fnmadd.d f3, f20, f22, f5, rne # perform operation
fnmadd.d f3, f20, f22, f5, rtz # perform operation
fnmadd.d f3, f20, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f20, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f20, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xbff8000000000000)
li x3, 0xa86a5c8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
li x3, 0xd5a5c5a6 # load x3 with 32 MSBs 0x00000000d5a5c5a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5a5c5a6
sw x3, 0(x2) # store x3 (0xd5a5c5a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d5a5c5a6 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fnmadd.d f3, f23, f13, f19, dyn # perform operation
fnmadd.d f3, f23, f13, f19, rdn # perform operation
fnmadd.d f3, f23, f13, f19, rmm # perform operation
fnmadd.d f3, f23, f13, f19, rne # perform operation
fnmadd.d f3, f23, f13, f19, rtz # perform operation
fnmadd.d f3, f23, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f23, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f23, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x4000000000000000)
li x6, 0x69f28040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0xb81c989a # load x3 with 32 MSBs 0x00000000b81c989a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b81c989a
sw x3, 0(x2) # store x3 (0xb81c989a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b81c989a from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fnmadd.d f6, f29, f16, f5, dyn # perform operation
fnmadd.d f6, f29, f16, f5, rdn # perform operation
fnmadd.d f6, f29, f16, f5, rmm # perform operation
fnmadd.d f6, f29, f16, f5, rne # perform operation
fnmadd.d f6, f29, f16, f5, rtz # perform operation
fnmadd.d f6, f29, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f29, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f29, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xc000000000000000)
li x1, 0x772fb29f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0x21e0a888 # load x3 with 32 MSBs 0x0000000021e0a888
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021e0a888
sw x3, 0(x2) # store x3 (0x21e0a888) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000021e0a888 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fnmadd.d f1, f21, f7, f16, dyn # perform operation
fnmadd.d f1, f21, f7, f16, rdn # perform operation
fnmadd.d f1, f21, f7, f16, rmm # perform operation
fnmadd.d f1, f21, f7, f16, rne # perform operation
fnmadd.d f1, f21, f7, f16, rtz # perform operation
fnmadd.d f1, f21, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f21, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x10000000000000)
li x4, 0xcdf7436f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0xe0746e9e # load x3 with 32 MSBs 0x00000000e0746e9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0746e9e
sw x3, 0(x2) # store x3 (0xe0746e9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e0746e9e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fnmadd.d f4, f16, f3, f10, dyn # perform operation
fnmadd.d f4, f16, f3, f10, rdn # perform operation
fnmadd.d f4, f16, f3, f10, rmm # perform operation
fnmadd.d f4, f16, f3, f10, rne # perform operation
fnmadd.d f4, f16, f3, f10, rtz # perform operation
fnmadd.d f4, f16, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f16, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f16, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f16, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f16, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f16, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8010000000000000)
li x5, 0x003acdb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x742f8836 # load x3 with 32 MSBs 0x00000000742f8836
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000742f8836
sw x3, 0(x2) # store x3 (0x742f8836) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000742f8836 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fnmadd.d f5, f3, f13, f28, dyn # perform operation
fnmadd.d f5, f3, f13, f28, rdn # perform operation
fnmadd.d f5, f3, f13, f28, rmm # perform operation
fnmadd.d f5, f3, f13, f28, rne # perform operation
fnmadd.d f5, f3, f13, f28, rtz # perform operation
fnmadd.d f5, f3, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f3, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f3, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f3, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f3, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f3, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fefffffffffffff)
li x14, 0x60eb1243 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0x1e49fa1d # load x3 with 32 MSBs 0x000000001e49fa1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e49fa1d
sw x3, 0(x2) # store x3 (0x1e49fa1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001e49fa1d from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fnmadd.d f14, f29, f15, f6, dyn # perform operation
fnmadd.d f14, f29, f15, f6, rdn # perform operation
fnmadd.d f14, f29, f15, f6, rmm # perform operation
fnmadd.d f14, f29, f15, f6, rne # perform operation
fnmadd.d f14, f29, f15, f6, rtz # perform operation
fnmadd.d f14, f29, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f29, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xffefffffffffffff)
li x11, 0x1f0bd04c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0xc5b14918 # load x3 with 32 MSBs 0x00000000c5b14918
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5b14918
sw x3, 0(x2) # store x3 (0xc5b14918) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c5b14918 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fnmadd.d f11, f22, f31, f28, dyn # perform operation
fnmadd.d f11, f22, f31, f28, rdn # perform operation
fnmadd.d f11, f22, f31, f28, rmm # perform operation
fnmadd.d f11, f22, f31, f28, rne # perform operation
fnmadd.d f11, f22, f31, f28, rtz # perform operation
fnmadd.d f11, f22, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f22, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f22, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f22, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f22, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f22, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfffffffffffff)
li x5, 0xd2928eb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x6632f9a7 # load x3 with 32 MSBs 0x000000006632f9a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006632f9a7
sw x3, 0(x2) # store x3 (0x6632f9a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006632f9a7 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fnmadd.d f5, f24, f13, f23, dyn # perform operation
fnmadd.d f5, f24, f13, f23, rdn # perform operation
fnmadd.d f5, f24, f13, f23, rmm # perform operation
fnmadd.d f5, f24, f13, f23, rne # perform operation
fnmadd.d f5, f24, f13, f23, rtz # perform operation
fnmadd.d f5, f24, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f24, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x800fffffffffffff)
li x10, 0x3d1a6c79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x67d564ef # load x3 with 32 MSBs 0x0000000067d564ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067d564ef
sw x3, 0(x2) # store x3 (0x67d564ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000067d564ef from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmadd.d f10, f4, f26, f17, dyn # perform operation
fnmadd.d f10, f4, f26, f17, rdn # perform operation
fnmadd.d f10, f4, f26, f17, rmm # perform operation
fnmadd.d f10, f4, f26, f17, rne # perform operation
fnmadd.d f10, f4, f26, f17, rtz # perform operation
fnmadd.d f10, f4, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f4, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000)
li x21, 0x5521bda4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xc59d6982 # load x3 with 32 MSBs 0x00000000c59d6982
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c59d6982
sw x3, 0(x2) # store x3 (0xc59d6982) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c59d6982 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fnmadd.d f21, f31, f12, f20, dyn # perform operation
fnmadd.d f21, f31, f12, f20, rdn # perform operation
fnmadd.d f21, f31, f12, f20, rmm # perform operation
fnmadd.d f21, f31, f12, f20, rne # perform operation
fnmadd.d f21, f31, f12, f20, rtz # perform operation
fnmadd.d f21, f31, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f31, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8008000000000000)
li x22, 0xf27df62f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xd7ca09bc # load x3 with 32 MSBs 0x00000000d7ca09bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7ca09bc
sw x3, 0(x2) # store x3 (0xd7ca09bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d7ca09bc from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fnmadd.d f22, f1, f25, f28, dyn # perform operation
fnmadd.d f22, f1, f25, f28, rdn # perform operation
fnmadd.d f22, f1, f25, f28, rmm # perform operation
fnmadd.d f22, f1, f25, f28, rne # perform operation
fnmadd.d f22, f1, f25, f28, rtz # perform operation
fnmadd.d f22, f1, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f1, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f1, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x1)
li x12, 0x7162fc4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
li x3, 0xa66a833c # load x3 with 32 MSBs 0x00000000a66a833c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a66a833c
sw x3, 0(x2) # store x3 (0xa66a833c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a66a833c from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fnmadd.d f12, f21, f31, f2, dyn # perform operation
fnmadd.d f12, f21, f31, f2, rdn # perform operation
fnmadd.d f12, f21, f31, f2, rmm # perform operation
fnmadd.d f12, f21, f31, f2, rne # perform operation
fnmadd.d f12, f21, f31, f2, rtz # perform operation
fnmadd.d f12, f21, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f21, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f21, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x8000000000000001)
li x29, 0x9a3f78d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x9140e2c1 # load x3 with 32 MSBs 0x000000009140e2c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009140e2c1
sw x3, 0(x2) # store x3 (0x9140e2c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009140e2c1 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fnmadd.d f29, f24, f11, f1, dyn # perform operation
fnmadd.d f29, f24, f11, f1, rdn # perform operation
fnmadd.d f29, f24, f11, f1, rmm # perform operation
fnmadd.d f29, f24, f11, f1, rne # perform operation
fnmadd.d f29, f24, f11, f1, rtz # perform operation
fnmadd.d f29, f24, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f24, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f24, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000000)
li x13, 0x013f9c89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
li x3, 0x76e8f6c9 # load x3 with 32 MSBs 0x0000000076e8f6c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076e8f6c9
sw x3, 0(x2) # store x3 (0x76e8f6c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000076e8f6c9 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fnmadd.d f13, f3, f31, f25, dyn # perform operation
fnmadd.d f13, f3, f31, f25, rdn # perform operation
fnmadd.d f13, f3, f31, f25, rmm # perform operation
fnmadd.d f13, f3, f31, f25, rne # perform operation
fnmadd.d f13, f3, f31, f25, rtz # perform operation
fnmadd.d f13, f3, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f3, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f3, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xfff0000000000000)
li x24, 0xed31915c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0xb606c38c # load x3 with 32 MSBs 0x00000000b606c38c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b606c38c
sw x3, 0(x2) # store x3 (0xb606c38c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b606c38c from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
fnmadd.d f24, f5, f21, f2, dyn # perform operation
fnmadd.d f24, f5, f21, f2, rdn # perform operation
fnmadd.d f24, f5, f21, f2, rmm # perform operation
fnmadd.d f24, f5, f21, f2, rne # perform operation
fnmadd.d f24, f5, f21, f2, rtz # perform operation
fnmadd.d f24, f5, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff8000000000000)
li x17, 0xa9ac27e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x997e2ba1 # load x3 with 32 MSBs 0x00000000997e2ba1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000997e2ba1
sw x3, 0(x2) # store x3 (0x997e2ba1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000997e2ba1 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
fnmadd.d f17, f4, f28, f29, dyn # perform operation
fnmadd.d f17, f4, f28, f29, rdn # perform operation
fnmadd.d f17, f4, f28, f29, rmm # perform operation
fnmadd.d f17, f4, f28, f29, rne # perform operation
fnmadd.d f17, f4, f28, f29, rtz # perform operation
fnmadd.d f17, f4, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f4, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f4, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f4, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f4, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f4, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7fffffffffffffff)
li x10, 0x92df1f1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x89181718 # load x3 with 32 MSBs 0x0000000089181718
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089181718
sw x3, 0(x2) # store x3 (0x89181718) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000089181718 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fnmadd.d f10, f19, f17, f8, dyn # perform operation
fnmadd.d f10, f19, f17, f8, rdn # perform operation
fnmadd.d f10, f19, f17, f8, rmm # perform operation
fnmadd.d f10, f19, f17, f8, rne # perform operation
fnmadd.d f10, f19, f17, f8, rtz # perform operation
fnmadd.d f10, f19, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f19, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff0000000000001)
li x12, 0x05309000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x178d906e # load x3 with 32 MSBs 0x00000000178d906e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000178d906e
sw x3, 0(x2) # store x3 (0x178d906e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000178d906e from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fnmadd.d f12, f26, f18, f25, dyn # perform operation
fnmadd.d f12, f26, f18, f25, rdn # perform operation
fnmadd.d f12, f26, f18, f25, rmm # perform operation
fnmadd.d f12, f26, f18, f25, rne # perform operation
fnmadd.d f12, f26, f18, f25, rtz # perform operation
fnmadd.d f12, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f26, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x7ff7ffffffffffff)
li x8, 0xcbd7e4ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0x506c7716 # load x3 with 32 MSBs 0x00000000506c7716
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000506c7716
sw x3, 0(x2) # store x3 (0x506c7716) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000506c7716 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f8, f27, f12, f25, dyn # perform operation
fnmadd.d f8, f27, f12, f25, rdn # perform operation
fnmadd.d f8, f27, f12, f25, rmm # perform operation
fnmadd.d f8, f27, f12, f25, rne # perform operation
fnmadd.d f8, f27, f12, f25, rtz # perform operation
fnmadd.d f8, f27, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f27, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f27, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0x5a392534a57711ad)
li x7, 0xadc9ae36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0xab0efa6e # load x3 with 32 MSBs 0x00000000ab0efa6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ab0efa6e
sw x3, 0(x2) # store x3 (0xab0efa6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000ab0efa6e from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fnmadd.d f7, f1, f20, f3, dyn # perform operation
fnmadd.d f7, f1, f20, f3, rdn # perform operation
fnmadd.d f7, f1, f20, f3, rmm # perform operation
fnmadd.d f7, f1, f20, f3, rne # perform operation
fnmadd.d f7, f1, f20, f3, rtz # perform operation
fnmadd.d f7, f1, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f1, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f1, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000000 fs3 = 0xa6e895993737426c)
li x29, 0x0bc1c590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x054ebb43 # load x3 with 32 MSBs 0x00000000054ebb43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000054ebb43
sw x3, 0(x2) # store x3 (0x054ebb43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000054ebb43 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fnmadd.d f29, f16, f24, f31, dyn # perform operation
fnmadd.d f29, f16, f24, f31, rdn # perform operation
fnmadd.d f29, f16, f24, f31, rmm # perform operation
fnmadd.d f29, f16, f24, f31, rne # perform operation
fnmadd.d f29, f16, f24, f31, rtz # perform operation
fnmadd.d f29, f16, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f16, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x0)
li x26, 0xfe4539bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x0363b289 # load x3 with 32 MSBs 0x000000000363b289
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000363b289
sw x3, 0(x2) # store x3 (0x0363b289) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000363b289 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmadd.d f26, f14, f4, f2, dyn # perform operation
fnmadd.d f26, f14, f4, f2, rdn # perform operation
fnmadd.d f26, f14, f4, f2, rmm # perform operation
fnmadd.d f26, f14, f4, f2, rne # perform operation
fnmadd.d f26, f14, f4, f2, rtz # perform operation
fnmadd.d f26, f14, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f14, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f14, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f14, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f14, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f14, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000000)
li x31, 0xf34d4873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x0433a451 # load x3 with 32 MSBs 0x000000000433a451
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000433a451
sw x3, 0(x2) # store x3 (0x0433a451) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000433a451 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
fnmadd.d f31, f12, f27, f19, dyn # perform operation
fnmadd.d f31, f12, f27, f19, rdn # perform operation
fnmadd.d f31, f12, f27, f19, rmm # perform operation
fnmadd.d f31, f12, f27, f19, rne # perform operation
fnmadd.d f31, f12, f27, f19, rtz # perform operation
fnmadd.d f31, f12, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f12, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff0000000000000)
li x25, 0x7ddf5681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xdabb9fbc # load x3 with 32 MSBs 0x00000000dabb9fbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dabb9fbc
sw x3, 0(x2) # store x3 (0xdabb9fbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000dabb9fbc from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fnmadd.d f25, f12, f14, f20, dyn # perform operation
fnmadd.d f25, f12, f14, f20, rdn # perform operation
fnmadd.d f25, f12, f14, f20, rmm # perform operation
fnmadd.d f25, f12, f14, f20, rne # perform operation
fnmadd.d f25, f12, f14, f20, rtz # perform operation
fnmadd.d f25, f12, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f12, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f12, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f12, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f12, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f12, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff0000000000000)
li x22, 0xf6560d62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0x77f63b6a # load x3 with 32 MSBs 0x0000000077f63b6a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077f63b6a
sw x3, 0(x2) # store x3 (0x77f63b6a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000077f63b6a from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fnmadd.d f22, f5, f4, f3, dyn # perform operation
fnmadd.d f22, f5, f4, f3, rdn # perform operation
fnmadd.d f22, f5, f4, f3, rmm # perform operation
fnmadd.d f22, f5, f4, f3, rne # perform operation
fnmadd.d f22, f5, f4, f3, rtz # perform operation
fnmadd.d f22, f5, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f5, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x3ff8000000000000)
li x2, 0x5ac534ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
li x3, 0xd7bbfda3 # load x3 with 32 MSBs 0x00000000d7bbfda3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7bbfda3
sw x3, 0(x2) # store x3 (0xd7bbfda3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d7bbfda3 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fnmadd.d f2, f26, f22, f23, dyn # perform operation
fnmadd.d f2, f26, f22, f23, rdn # perform operation
fnmadd.d f2, f26, f22, f23, rmm # perform operation
fnmadd.d f2, f26, f22, f23, rne # perform operation
fnmadd.d f2, f26, f22, f23, rtz # perform operation
fnmadd.d f2, f26, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f26, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f26, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xbff8000000000000)
li x13, 0x8eb186f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0xd1ccc7fc # load x3 with 32 MSBs 0x00000000d1ccc7fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1ccc7fc
sw x3, 0(x2) # store x3 (0xd1ccc7fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d1ccc7fc from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fnmadd.d f13, f1, f17, f19, dyn # perform operation
fnmadd.d f13, f1, f17, f19, rdn # perform operation
fnmadd.d f13, f1, f17, f19, rmm # perform operation
fnmadd.d f13, f1, f17, f19, rne # perform operation
fnmadd.d f13, f1, f17, f19, rtz # perform operation
fnmadd.d f13, f1, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f1, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f1, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f1, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f1, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f1, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x4000000000000000)
li x27, 0xd578531c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xaca8cc63 # load x3 with 32 MSBs 0x00000000aca8cc63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aca8cc63
sw x3, 0(x2) # store x3 (0xaca8cc63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000aca8cc63 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fnmadd.d f27, f5, f25, f11, dyn # perform operation
fnmadd.d f27, f5, f25, f11, rdn # perform operation
fnmadd.d f27, f5, f25, f11, rmm # perform operation
fnmadd.d f27, f5, f25, f11, rne # perform operation
fnmadd.d f27, f5, f25, f11, rtz # perform operation
fnmadd.d f27, f5, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f5, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f5, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xc000000000000000)
li x10, 0x708a87a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x9761825e # load x3 with 32 MSBs 0x000000009761825e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009761825e
sw x3, 0(x2) # store x3 (0x9761825e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009761825e from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fnmadd.d f10, f31, f2, f14, dyn # perform operation
fnmadd.d f10, f31, f2, f14, rdn # perform operation
fnmadd.d f10, f31, f2, f14, rmm # perform operation
fnmadd.d f10, f31, f2, f14, rne # perform operation
fnmadd.d f10, f31, f2, f14, rtz # perform operation
fnmadd.d f10, f31, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f31, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x10000000000000)
li x21, 0x94311dc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x69a8c8bc # load x3 with 32 MSBs 0x0000000069a8c8bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069a8c8bc
sw x3, 0(x2) # store x3 (0x69a8c8bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000069a8c8bc from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fnmadd.d f21, f15, f14, f2, dyn # perform operation
fnmadd.d f21, f15, f14, f2, rdn # perform operation
fnmadd.d f21, f15, f14, f2, rmm # perform operation
fnmadd.d f21, f15, f14, f2, rne # perform operation
fnmadd.d f21, f15, f14, f2, rtz # perform operation
fnmadd.d f21, f15, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f15, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f15, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f15, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f15, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f15, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8010000000000000)
li x13, 0xf5b2327f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xc55e5ffa # load x3 with 32 MSBs 0x00000000c55e5ffa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c55e5ffa
sw x3, 0(x2) # store x3 (0xc55e5ffa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c55e5ffa from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fnmadd.d f13, f5, f30, f8, dyn # perform operation
fnmadd.d f13, f5, f30, f8, rdn # perform operation
fnmadd.d f13, f5, f30, f8, rmm # perform operation
fnmadd.d f13, f5, f30, f8, rne # perform operation
fnmadd.d f13, f5, f30, f8, rtz # perform operation
fnmadd.d f13, f5, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f5, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fefffffffffffff)
li x25, 0xa6c5eaaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x497bb3f8 # load x3 with 32 MSBs 0x00000000497bb3f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000497bb3f8
sw x3, 0(x2) # store x3 (0x497bb3f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000497bb3f8 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fnmadd.d f25, f14, f10, f17, dyn # perform operation
fnmadd.d f25, f14, f10, f17, rdn # perform operation
fnmadd.d f25, f14, f10, f17, rmm # perform operation
fnmadd.d f25, f14, f10, f17, rne # perform operation
fnmadd.d f25, f14, f10, f17, rtz # perform operation
fnmadd.d f25, f14, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f14, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f14, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xffefffffffffffff)
li x17, 0xd9964e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xf29e9b45 # load x3 with 32 MSBs 0x00000000f29e9b45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f29e9b45
sw x3, 0(x2) # store x3 (0xf29e9b45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f29e9b45 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fnmadd.d f17, f5, f29, f15, dyn # perform operation
fnmadd.d f17, f5, f29, f15, rdn # perform operation
fnmadd.d f17, f5, f29, f15, rmm # perform operation
fnmadd.d f17, f5, f29, f15, rne # perform operation
fnmadd.d f17, f5, f29, f15, rtz # perform operation
fnmadd.d f17, f5, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f5, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfffffffffffff)
li x11, 0x31b47435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
li x3, 0xc7a347e4 # load x3 with 32 MSBs 0x00000000c7a347e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7a347e4
sw x3, 0(x2) # store x3 (0xc7a347e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c7a347e4 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fnmadd.d f11, f20, f30, f29, dyn # perform operation
fnmadd.d f11, f20, f30, f29, rdn # perform operation
fnmadd.d f11, f20, f30, f29, rmm # perform operation
fnmadd.d f11, f20, f30, f29, rne # perform operation
fnmadd.d f11, f20, f30, f29, rtz # perform operation
fnmadd.d f11, f20, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f20, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f20, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x800fffffffffffff)
li x8, 0xc1380e41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x8f4dde06 # load x3 with 32 MSBs 0x000000008f4dde06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f4dde06
sw x3, 0(x2) # store x3 (0x8f4dde06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008f4dde06 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fnmadd.d f8, f1, f2, f12, dyn # perform operation
fnmadd.d f8, f1, f2, f12, rdn # perform operation
fnmadd.d f8, f1, f2, f12, rmm # perform operation
fnmadd.d f8, f1, f2, f12, rne # perform operation
fnmadd.d f8, f1, f2, f12, rtz # perform operation
fnmadd.d f8, f1, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f1, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f1, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f1, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f1, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f1, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000)
li x1, 0xb4c16d61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xe9b692a1 # load x3 with 32 MSBs 0x00000000e9b692a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9b692a1
sw x3, 0(x2) # store x3 (0xe9b692a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e9b692a1 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fnmadd.d f1, f11, f23, f18, dyn # perform operation
fnmadd.d f1, f11, f23, f18, rdn # perform operation
fnmadd.d f1, f11, f23, f18, rmm # perform operation
fnmadd.d f1, f11, f23, f18, rne # perform operation
fnmadd.d f1, f11, f23, f18, rtz # perform operation
fnmadd.d f1, f11, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f11, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8008000000000000)
li x7, 0x16401d2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x28403a3b # load x3 with 32 MSBs 0x0000000028403a3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028403a3b
sw x3, 0(x2) # store x3 (0x28403a3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000028403a3b from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fnmadd.d f7, f27, f14, f30, dyn # perform operation
fnmadd.d f7, f27, f14, f30, rdn # perform operation
fnmadd.d f7, f27, f14, f30, rmm # perform operation
fnmadd.d f7, f27, f14, f30, rne # perform operation
fnmadd.d f7, f27, f14, f30, rtz # perform operation
fnmadd.d f7, f27, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f27, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f27, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x1)
li x8, 0x82bd34a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xa6bf2884 # load x3 with 32 MSBs 0x00000000a6bf2884
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6bf2884
sw x3, 0(x2) # store x3 (0xa6bf2884) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a6bf2884 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fnmadd.d f8, f11, f23, f6, dyn # perform operation
fnmadd.d f8, f11, f23, f6, rdn # perform operation
fnmadd.d f8, f11, f23, f6, rmm # perform operation
fnmadd.d f8, f11, f23, f6, rne # perform operation
fnmadd.d f8, f11, f23, f6, rtz # perform operation
fnmadd.d f8, f11, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f11, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f11, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f11, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f11, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f11, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x8000000000000001)
li x21, 0x2ceadfaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
li x3, 0xd6ccb3a5 # load x3 with 32 MSBs 0x00000000d6ccb3a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6ccb3a5
sw x3, 0(x2) # store x3 (0xd6ccb3a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d6ccb3a5 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fnmadd.d f21, f5, f11, f18, dyn # perform operation
fnmadd.d f21, f5, f11, f18, rdn # perform operation
fnmadd.d f21, f5, f11, f18, rmm # perform operation
fnmadd.d f21, f5, f11, f18, rne # perform operation
fnmadd.d f21, f5, f11, f18, rtz # perform operation
fnmadd.d f21, f5, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f5, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000000)
li x24, 0xc33e3ecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0xcc07ac51 # load x3 with 32 MSBs 0x00000000cc07ac51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc07ac51
sw x3, 0(x2) # store x3 (0xcc07ac51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000cc07ac51 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fnmadd.d f24, f19, f30, f2, dyn # perform operation
fnmadd.d f24, f19, f30, f2, rdn # perform operation
fnmadd.d f24, f19, f30, f2, rmm # perform operation
fnmadd.d f24, f19, f30, f2, rne # perform operation
fnmadd.d f24, f19, f30, f2, rtz # perform operation
fnmadd.d f24, f19, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f19, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xfff0000000000000)
li x2, 0x8b8f09b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x3fc9775c # load x3 with 32 MSBs 0x000000003fc9775c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fc9775c
sw x3, 0(x2) # store x3 (0x3fc9775c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003fc9775c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fnmadd.d f2, f14, f19, f22, dyn # perform operation
fnmadd.d f2, f14, f19, f22, rdn # perform operation
fnmadd.d f2, f14, f19, f22, rmm # perform operation
fnmadd.d f2, f14, f19, f22, rne # perform operation
fnmadd.d f2, f14, f19, f22, rtz # perform operation
fnmadd.d f2, f14, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f14, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff8000000000000)
li x15, 0xa3aec869 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x0d83d0c7 # load x3 with 32 MSBs 0x000000000d83d0c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d83d0c7
sw x3, 0(x2) # store x3 (0x0d83d0c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000d83d0c7 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fnmadd.d f15, f31, f5, f27, dyn # perform operation
fnmadd.d f15, f31, f5, f27, rdn # perform operation
fnmadd.d f15, f31, f5, f27, rmm # perform operation
fnmadd.d f15, f31, f5, f27, rne # perform operation
fnmadd.d f15, f31, f5, f27, rtz # perform operation
fnmadd.d f15, f31, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f31, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f31, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f31, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f31, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f31, f5, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7fffffffffffffff)
li x13, 0x6b0f9a9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xfc350984 # load x3 with 32 MSBs 0x00000000fc350984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc350984
sw x3, 0(x2) # store x3 (0xfc350984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000fc350984 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fnmadd.d f13, f28, f23, f6, dyn # perform operation
fnmadd.d f13, f28, f23, f6, rdn # perform operation
fnmadd.d f13, f28, f23, f6, rmm # perform operation
fnmadd.d f13, f28, f23, f6, rne # perform operation
fnmadd.d f13, f28, f23, f6, rtz # perform operation
fnmadd.d f13, f28, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f28, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f28, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff0000000000001)
li x24, 0xf1209e7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xd8d2450e # load x3 with 32 MSBs 0x00000000d8d2450e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8d2450e
sw x3, 0(x2) # store x3 (0xd8d2450e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d8d2450e from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fnmadd.d f24, f30, f8, f15, dyn # perform operation
fnmadd.d f24, f30, f8, f15, rdn # perform operation
fnmadd.d f24, f30, f8, f15, rmm # perform operation
fnmadd.d f24, f30, f8, f15, rne # perform operation
fnmadd.d f24, f30, f8, f15, rtz # perform operation
fnmadd.d f24, f30, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f30, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f30, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f30, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f30, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f30, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x6, 0x27f10eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x3ea8c670 # load x3 with 32 MSBs 0x000000003ea8c670
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ea8c670
sw x3, 0(x2) # store x3 (0x3ea8c670) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003ea8c670 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fnmadd.d f6, f15, f7, f13, dyn # perform operation
fnmadd.d f6, f15, f7, f13, rdn # perform operation
fnmadd.d f6, f15, f7, f13, rmm # perform operation
fnmadd.d f6, f15, f7, f13, rne # perform operation
fnmadd.d f6, f15, f7, f13, rtz # perform operation
fnmadd.d f6, f15, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f15, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0x5a392534a57711ad)
li x30, 0x4fd4fe70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xa9924c4c # load x3 with 32 MSBs 0x00000000a9924c4c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9924c4c
sw x3, 0(x2) # store x3 (0xa9924c4c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a9924c4c from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
fnmadd.d f30, f11, f25, f23, dyn # perform operation
fnmadd.d f30, f11, f25, f23, rdn # perform operation
fnmadd.d f30, f11, f25, f23, rmm # perform operation
fnmadd.d f30, f11, f25, f23, rne # perform operation
fnmadd.d f30, f11, f25, f23, rtz # perform operation
fnmadd.d f30, f11, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f11, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff0000000000000 fs3 = 0xa6e895993737426c)
li x11, 0x1322f101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x5094e380 # load x3 with 32 MSBs 0x000000005094e380
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005094e380
sw x3, 0(x2) # store x3 (0x5094e380) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005094e380 from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fnmadd.d f11, f23, f6, f9, dyn # perform operation
fnmadd.d f11, f23, f6, f9, rdn # perform operation
fnmadd.d f11, f23, f6, f9, rmm # perform operation
fnmadd.d f11, f23, f6, f9, rne # perform operation
fnmadd.d f11, f23, f6, f9, rtz # perform operation
fnmadd.d f11, f23, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f23, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f23, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x0)
li x2, 0xfef7d8fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x5a9fed26 # load x3 with 32 MSBs 0x000000005a9fed26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a9fed26
sw x3, 0(x2) # store x3 (0x5a9fed26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005a9fed26 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fnmadd.d f2, f21, f12, f8, dyn # perform operation
fnmadd.d f2, f21, f12, f8, rdn # perform operation
fnmadd.d f2, f21, f12, f8, rmm # perform operation
fnmadd.d f2, f21, f12, f8, rne # perform operation
fnmadd.d f2, f21, f12, f8, rtz # perform operation
fnmadd.d f2, f21, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000000)
li x7, 0xf417432c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x14da3034 # load x3 with 32 MSBs 0x0000000014da3034
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014da3034
sw x3, 0(x2) # store x3 (0x14da3034) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000014da3034 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fnmadd.d f7, f24, f28, f13, dyn # perform operation
fnmadd.d f7, f24, f28, f13, rdn # perform operation
fnmadd.d f7, f24, f28, f13, rmm # perform operation
fnmadd.d f7, f24, f28, f13, rne # perform operation
fnmadd.d f7, f24, f28, f13, rtz # perform operation
fnmadd.d f7, f24, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f24, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff0000000000000)
li x6, 0x8df3bdea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x257ab7fc # load x3 with 32 MSBs 0x00000000257ab7fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000257ab7fc
sw x3, 0(x2) # store x3 (0x257ab7fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000257ab7fc from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fnmadd.d f6, f20, f10, f18, dyn # perform operation
fnmadd.d f6, f20, f10, f18, rdn # perform operation
fnmadd.d f6, f20, f10, f18, rmm # perform operation
fnmadd.d f6, f20, f10, f18, rne # perform operation
fnmadd.d f6, f20, f10, f18, rtz # perform operation
fnmadd.d f6, f20, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f20, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff0000000000000)
li x6, 0x826f8d67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xaecb74fe # load x3 with 32 MSBs 0x00000000aecb74fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aecb74fe
sw x3, 0(x2) # store x3 (0xaecb74fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000aecb74fe from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fnmadd.d f6, f26, f28, f27, dyn # perform operation
fnmadd.d f6, f26, f28, f27, rdn # perform operation
fnmadd.d f6, f26, f28, f27, rmm # perform operation
fnmadd.d f6, f26, f28, f27, rne # perform operation
fnmadd.d f6, f26, f28, f27, rtz # perform operation
fnmadd.d f6, f26, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f26, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x3ff8000000000000)
li x29, 0xb9193d74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0xb6780d9f # load x3 with 32 MSBs 0x00000000b6780d9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6780d9f
sw x3, 0(x2) # store x3 (0xb6780d9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b6780d9f from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fnmadd.d f29, f15, f6, f25, dyn # perform operation
fnmadd.d f29, f15, f6, f25, rdn # perform operation
fnmadd.d f29, f15, f6, f25, rmm # perform operation
fnmadd.d f29, f15, f6, f25, rne # perform operation
fnmadd.d f29, f15, f6, f25, rtz # perform operation
fnmadd.d f29, f15, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f15, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xbff8000000000000)
li x11, 0x48eb9a7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xbee0ee76 # load x3 with 32 MSBs 0x00000000bee0ee76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bee0ee76
sw x3, 0(x2) # store x3 (0xbee0ee76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000bee0ee76 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fnmadd.d f11, f13, f6, f4, dyn # perform operation
fnmadd.d f11, f13, f6, f4, rdn # perform operation
fnmadd.d f11, f13, f6, f4, rmm # perform operation
fnmadd.d f11, f13, f6, f4, rne # perform operation
fnmadd.d f11, f13, f6, f4, rtz # perform operation
fnmadd.d f11, f13, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f13, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x4000000000000000)
li x31, 0x6fe1e955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
li x3, 0x4f4c6f10 # load x3 with 32 MSBs 0x000000004f4c6f10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f4c6f10
sw x3, 0(x2) # store x3 (0x4f4c6f10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004f4c6f10 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fnmadd.d f31, f2, f3, f14, dyn # perform operation
fnmadd.d f31, f2, f3, f14, rdn # perform operation
fnmadd.d f31, f2, f3, f14, rmm # perform operation
fnmadd.d f31, f2, f3, f14, rne # perform operation
fnmadd.d f31, f2, f3, f14, rtz # perform operation
fnmadd.d f31, f2, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f2, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f2, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f2, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f2, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f2, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xc000000000000000)
li x26, 0x15bbe5b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0xdcecb19c # load x3 with 32 MSBs 0x00000000dcecb19c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcecb19c
sw x3, 0(x2) # store x3 (0xdcecb19c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000dcecb19c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fnmadd.d f26, f22, f12, f27, dyn # perform operation
fnmadd.d f26, f22, f12, f27, rdn # perform operation
fnmadd.d f26, f22, f12, f27, rmm # perform operation
fnmadd.d f26, f22, f12, f27, rne # perform operation
fnmadd.d f26, f22, f12, f27, rtz # perform operation
fnmadd.d f26, f22, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f22, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f22, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f22, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f22, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f22, f12, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x10000000000000)
li x31, 0x5e9e94af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xba5fa860 # load x3 with 32 MSBs 0x00000000ba5fa860
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba5fa860
sw x3, 0(x2) # store x3 (0xba5fa860) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ba5fa860 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fnmadd.d f31, f10, f2, f24, dyn # perform operation
fnmadd.d f31, f10, f2, f24, rdn # perform operation
fnmadd.d f31, f10, f2, f24, rmm # perform operation
fnmadd.d f31, f10, f2, f24, rne # perform operation
fnmadd.d f31, f10, f2, f24, rtz # perform operation
fnmadd.d f31, f10, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f10, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f10, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f10, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f10, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f10, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8010000000000000)
li x12, 0x441d4686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0xd9e5da7a # load x3 with 32 MSBs 0x00000000d9e5da7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d9e5da7a
sw x3, 0(x2) # store x3 (0xd9e5da7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d9e5da7a from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fnmadd.d f12, f16, f14, f8, dyn # perform operation
fnmadd.d f12, f16, f14, f8, rdn # perform operation
fnmadd.d f12, f16, f14, f8, rmm # perform operation
fnmadd.d f12, f16, f14, f8, rne # perform operation
fnmadd.d f12, f16, f14, f8, rtz # perform operation
fnmadd.d f12, f16, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f16, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f16, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fefffffffffffff)
li x24, 0x83295697 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0xc90dd618 # load x3 with 32 MSBs 0x00000000c90dd618
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c90dd618
sw x3, 0(x2) # store x3 (0xc90dd618) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c90dd618 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fnmadd.d f24, f29, f15, f25, dyn # perform operation
fnmadd.d f24, f29, f15, f25, rdn # perform operation
fnmadd.d f24, f29, f15, f25, rmm # perform operation
fnmadd.d f24, f29, f15, f25, rne # perform operation
fnmadd.d f24, f29, f15, f25, rtz # perform operation
fnmadd.d f24, f29, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f29, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f29, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xffefffffffffffff)
li x19, 0x9d3b9cd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xc935fd5f # load x3 with 32 MSBs 0x00000000c935fd5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c935fd5f
sw x3, 0(x2) # store x3 (0xc935fd5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c935fd5f from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fnmadd.d f19, f12, f18, f4, dyn # perform operation
fnmadd.d f19, f12, f18, f4, rdn # perform operation
fnmadd.d f19, f12, f18, f4, rmm # perform operation
fnmadd.d f19, f12, f18, f4, rne # perform operation
fnmadd.d f19, f12, f18, f4, rtz # perform operation
fnmadd.d f19, f12, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfffffffffffff)
li x11, 0x4ab478b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x0a9e35be # load x3 with 32 MSBs 0x000000000a9e35be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a9e35be
sw x3, 0(x2) # store x3 (0x0a9e35be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000a9e35be from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fnmadd.d f11, f9, f20, f29, dyn # perform operation
fnmadd.d f11, f9, f20, f29, rdn # perform operation
fnmadd.d f11, f9, f20, f29, rmm # perform operation
fnmadd.d f11, f9, f20, f29, rne # perform operation
fnmadd.d f11, f9, f20, f29, rtz # perform operation
fnmadd.d f11, f9, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f9, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x800fffffffffffff)
li x30, 0xfd71b271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x1ea1097b # load x3 with 32 MSBs 0x000000001ea1097b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ea1097b
sw x3, 0(x2) # store x3 (0x1ea1097b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001ea1097b from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fnmadd.d f30, f15, f26, f5, dyn # perform operation
fnmadd.d f30, f15, f26, f5, rdn # perform operation
fnmadd.d f30, f15, f26, f5, rmm # perform operation
fnmadd.d f30, f15, f26, f5, rne # perform operation
fnmadd.d f30, f15, f26, f5, rtz # perform operation
fnmadd.d f30, f15, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f15, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f15, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f15, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f15, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f15, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000)
li x29, 0xa73efef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x6835fb07 # load x3 with 32 MSBs 0x000000006835fb07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006835fb07
sw x3, 0(x2) # store x3 (0x6835fb07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006835fb07 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fnmadd.d f29, f12, f24, f10, dyn # perform operation
fnmadd.d f29, f12, f24, f10, rdn # perform operation
fnmadd.d f29, f12, f24, f10, rmm # perform operation
fnmadd.d f29, f12, f24, f10, rne # perform operation
fnmadd.d f29, f12, f24, f10, rtz # perform operation
fnmadd.d f29, f12, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f12, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f12, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8008000000000000)
li x7, 0x91fee99c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0x30ec857d # load x3 with 32 MSBs 0x0000000030ec857d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030ec857d
sw x3, 0(x2) # store x3 (0x30ec857d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000030ec857d from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f7, f30, f4, f1, dyn # perform operation
fnmadd.d f7, f30, f4, f1, rdn # perform operation
fnmadd.d f7, f30, f4, f1, rmm # perform operation
fnmadd.d f7, f30, f4, f1, rne # perform operation
fnmadd.d f7, f30, f4, f1, rtz # perform operation
fnmadd.d f7, f30, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f30, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f30, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f30, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f30, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f30, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x1)
li x1, 0x1ff7cef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x0e209af8 # load x3 with 32 MSBs 0x000000000e209af8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e209af8
sw x3, 0(x2) # store x3 (0x0e209af8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000e209af8 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fnmadd.d f1, f3, f4, f20, dyn # perform operation
fnmadd.d f1, f3, f4, f20, rdn # perform operation
fnmadd.d f1, f3, f4, f20, rmm # perform operation
fnmadd.d f1, f3, f4, f20, rne # perform operation
fnmadd.d f1, f3, f4, f20, rtz # perform operation
fnmadd.d f1, f3, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f3, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f3, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x8000000000000001)
li x22, 0x4cd89a94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x44b0a252 # load x3 with 32 MSBs 0x0000000044b0a252
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044b0a252
sw x3, 0(x2) # store x3 (0x44b0a252) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000044b0a252 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fnmadd.d f22, f18, f3, f14, dyn # perform operation
fnmadd.d f22, f18, f3, f14, rdn # perform operation
fnmadd.d f22, f18, f3, f14, rmm # perform operation
fnmadd.d f22, f18, f3, f14, rne # perform operation
fnmadd.d f22, f18, f3, f14, rtz # perform operation
fnmadd.d f22, f18, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f18, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f18, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000000)
li x11, 0x06c1c345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
li x3, 0xfe9c29aa # load x3 with 32 MSBs 0x00000000fe9c29aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe9c29aa
sw x3, 0(x2) # store x3 (0xfe9c29aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000fe9c29aa from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fnmadd.d f11, f30, f7, f17, dyn # perform operation
fnmadd.d f11, f30, f7, f17, rdn # perform operation
fnmadd.d f11, f30, f7, f17, rmm # perform operation
fnmadd.d f11, f30, f7, f17, rne # perform operation
fnmadd.d f11, f30, f7, f17, rtz # perform operation
fnmadd.d f11, f30, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f30, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xfff0000000000000)
li x27, 0xe0953d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xee87bf58 # load x3 with 32 MSBs 0x00000000ee87bf58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee87bf58
sw x3, 0(x2) # store x3 (0xee87bf58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ee87bf58 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fnmadd.d f27, f26, f3, f18, dyn # perform operation
fnmadd.d f27, f26, f3, f18, rdn # perform operation
fnmadd.d f27, f26, f3, f18, rmm # perform operation
fnmadd.d f27, f26, f3, f18, rne # perform operation
fnmadd.d f27, f26, f3, f18, rtz # perform operation
fnmadd.d f27, f26, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff8000000000000)
li x13, 0xe26c7e5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0x13eab085 # load x3 with 32 MSBs 0x0000000013eab085
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013eab085
sw x3, 0(x2) # store x3 (0x13eab085) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000013eab085 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fnmadd.d f13, f1, f29, f26, dyn # perform operation
fnmadd.d f13, f1, f29, f26, rdn # perform operation
fnmadd.d f13, f1, f29, f26, rmm # perform operation
fnmadd.d f13, f1, f29, f26, rne # perform operation
fnmadd.d f13, f1, f29, f26, rtz # perform operation
fnmadd.d f13, f1, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f1, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f1, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7fffffffffffffff)
li x7, 0x5aeb5ae7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
li x3, 0x425410a5 # load x3 with 32 MSBs 0x00000000425410a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000425410a5
sw x3, 0(x2) # store x3 (0x425410a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000425410a5 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fnmadd.d f7, f20, f30, f18, dyn # perform operation
fnmadd.d f7, f20, f30, f18, rdn # perform operation
fnmadd.d f7, f20, f30, f18, rmm # perform operation
fnmadd.d f7, f20, f30, f18, rne # perform operation
fnmadd.d f7, f20, f30, f18, rtz # perform operation
fnmadd.d f7, f20, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f20, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff0000000000001)
li x8, 0xe50fc86e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xeb31c427 # load x3 with 32 MSBs 0x00000000eb31c427
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb31c427
sw x3, 0(x2) # store x3 (0xeb31c427) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000eb31c427 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fnmadd.d f8, f12, f21, f6, dyn # perform operation
fnmadd.d f8, f12, f21, f6, rdn # perform operation
fnmadd.d f8, f12, f21, f6, rmm # perform operation
fnmadd.d f8, f12, f21, f6, rne # perform operation
fnmadd.d f8, f12, f21, f6, rtz # perform operation
fnmadd.d f8, f12, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f12, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f12, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f12, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f12, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f12, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x19, 0x245fab94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x362f2980 # load x3 with 32 MSBs 0x00000000362f2980
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000362f2980
sw x3, 0(x2) # store x3 (0x362f2980) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000362f2980 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fnmadd.d f19, f5, f27, f20, dyn # perform operation
fnmadd.d f19, f5, f27, f20, rdn # perform operation
fnmadd.d f19, f5, f27, f20, rmm # perform operation
fnmadd.d f19, f5, f27, f20, rne # perform operation
fnmadd.d f19, f5, f27, f20, rtz # perform operation
fnmadd.d f19, f5, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f5, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0x5a392534a57711ad)
li x15, 0xe5b18eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0xce4241a5 # load x3 with 32 MSBs 0x00000000ce4241a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce4241a5
sw x3, 0(x2) # store x3 (0xce4241a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ce4241a5 from memory into f28
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fnmadd.d f15, f18, f28, f2, dyn # perform operation
fnmadd.d f15, f18, f28, f2, rdn # perform operation
fnmadd.d f15, f18, f28, f2, rmm # perform operation
fnmadd.d f15, f18, f28, f2, rne # perform operation
fnmadd.d f15, f18, f28, f2, rtz # perform operation
fnmadd.d f15, f18, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f18, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f18, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f18, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f18, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f18, f28, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff0000000000000 fs3 = 0xa6e895993737426c)
li x1, 0x1520c45c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x9b45985e # load x3 with 32 MSBs 0x000000009b45985e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b45985e
sw x3, 0(x2) # store x3 (0x9b45985e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009b45985e from memory into f22
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
fnmadd.d f1, f15, f22, f13, dyn # perform operation
fnmadd.d f1, f15, f22, f13, rdn # perform operation
fnmadd.d f1, f15, f22, f13, rmm # perform operation
fnmadd.d f1, f15, f22, f13, rne # perform operation
fnmadd.d f1, f15, f22, f13, rtz # perform operation
fnmadd.d f1, f15, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x0)
li x5, 0x37a92065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0xe8f7a805 # load x3 with 32 MSBs 0x00000000e8f7a805
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8f7a805
sw x3, 0(x2) # store x3 (0xe8f7a805) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e8f7a805 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fnmadd.d f5, f11, f3, f16, dyn # perform operation
fnmadd.d f5, f11, f3, f16, rdn # perform operation
fnmadd.d f5, f11, f3, f16, rmm # perform operation
fnmadd.d f5, f11, f3, f16, rne # perform operation
fnmadd.d f5, f11, f3, f16, rtz # perform operation
fnmadd.d f5, f11, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000000)
li x29, 0xef3e3faf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x197a7514 # load x3 with 32 MSBs 0x00000000197a7514
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000197a7514
sw x3, 0(x2) # store x3 (0x197a7514) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000197a7514 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
fnmadd.d f29, f3, f28, f11, dyn # perform operation
fnmadd.d f29, f3, f28, f11, rdn # perform operation
fnmadd.d f29, f3, f28, f11, rmm # perform operation
fnmadd.d f29, f3, f28, f11, rne # perform operation
fnmadd.d f29, f3, f28, f11, rtz # perform operation
fnmadd.d f29, f3, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f3, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff0000000000000)
li x23, 0xa607d355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xa0e80152 # load x3 with 32 MSBs 0x00000000a0e80152
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0e80152
sw x3, 0(x2) # store x3 (0xa0e80152) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a0e80152 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fnmadd.d f23, f27, f14, f13, dyn # perform operation
fnmadd.d f23, f27, f14, f13, rdn # perform operation
fnmadd.d f23, f27, f14, f13, rmm # perform operation
fnmadd.d f23, f27, f14, f13, rne # perform operation
fnmadd.d f23, f27, f14, f13, rtz # perform operation
fnmadd.d f23, f27, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f27, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff0000000000000)
li x13, 0xe92e5205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0xa1fa03a7 # load x3 with 32 MSBs 0x00000000a1fa03a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1fa03a7
sw x3, 0(x2) # store x3 (0xa1fa03a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a1fa03a7 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f13, f28, f21, f22, dyn # perform operation
fnmadd.d f13, f28, f21, f22, rdn # perform operation
fnmadd.d f13, f28, f21, f22, rmm # perform operation
fnmadd.d f13, f28, f21, f22, rne # perform operation
fnmadd.d f13, f28, f21, f22, rtz # perform operation
fnmadd.d f13, f28, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f28, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f28, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f28, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f28, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f28, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x3ff8000000000000)
li x1, 0xbdd8d2e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x49e3ae08 # load x3 with 32 MSBs 0x0000000049e3ae08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049e3ae08
sw x3, 0(x2) # store x3 (0x49e3ae08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000049e3ae08 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
fnmadd.d f1, f14, f7, f15, dyn # perform operation
fnmadd.d f1, f14, f7, f15, rdn # perform operation
fnmadd.d f1, f14, f7, f15, rmm # perform operation
fnmadd.d f1, f14, f7, f15, rne # perform operation
fnmadd.d f1, f14, f7, f15, rtz # perform operation
fnmadd.d f1, f14, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f14, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xbff8000000000000)
li x14, 0xd959b50a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0xbd67ddb5 # load x3 with 32 MSBs 0x00000000bd67ddb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd67ddb5
sw x3, 0(x2) # store x3 (0xbd67ddb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000bd67ddb5 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmadd.d f14, f22, f3, f26, dyn # perform operation
fnmadd.d f14, f22, f3, f26, rdn # perform operation
fnmadd.d f14, f22, f3, f26, rmm # perform operation
fnmadd.d f14, f22, f3, f26, rne # perform operation
fnmadd.d f14, f22, f3, f26, rtz # perform operation
fnmadd.d f14, f22, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f22, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f22, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f22, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f22, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f22, f3, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x4000000000000000)
li x28, 0xc7baf4a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0x61939e0c # load x3 with 32 MSBs 0x0000000061939e0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061939e0c
sw x3, 0(x2) # store x3 (0x61939e0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000061939e0c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fnmadd.d f28, f13, f6, f7, dyn # perform operation
fnmadd.d f28, f13, f6, f7, rdn # perform operation
fnmadd.d f28, f13, f6, f7, rmm # perform operation
fnmadd.d f28, f13, f6, f7, rne # perform operation
fnmadd.d f28, f13, f6, f7, rtz # perform operation
fnmadd.d f28, f13, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f13, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f13, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f13, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f13, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f13, f6, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xc000000000000000)
li x7, 0x4ff4cedb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x321549d5 # load x3 with 32 MSBs 0x00000000321549d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000321549d5
sw x3, 0(x2) # store x3 (0x321549d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000321549d5 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fnmadd.d f7, f28, f23, f2, dyn # perform operation
fnmadd.d f7, f28, f23, f2, rdn # perform operation
fnmadd.d f7, f28, f23, f2, rmm # perform operation
fnmadd.d f7, f28, f23, f2, rne # perform operation
fnmadd.d f7, f28, f23, f2, rtz # perform operation
fnmadd.d f7, f28, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f28, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f28, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f28, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f28, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f28, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x10000000000000)
li x27, 0xf203be30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x6cfb533f # load x3 with 32 MSBs 0x000000006cfb533f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cfb533f
sw x3, 0(x2) # store x3 (0x6cfb533f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000006cfb533f from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fnmadd.d f27, f9, f25, f31, dyn # perform operation
fnmadd.d f27, f9, f25, f31, rdn # perform operation
fnmadd.d f27, f9, f25, f31, rmm # perform operation
fnmadd.d f27, f9, f25, f31, rne # perform operation
fnmadd.d f27, f9, f25, f31, rtz # perform operation
fnmadd.d f27, f9, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f9, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f9, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8010000000000000)
li x3, 0x7dc7dbe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0xf717e2df # load x3 with 32 MSBs 0x00000000f717e2df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f717e2df
sw x3, 0(x2) # store x3 (0xf717e2df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000f717e2df from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fnmadd.d f3, f29, f24, f5, dyn # perform operation
fnmadd.d f3, f29, f24, f5, rdn # perform operation
fnmadd.d f3, f29, f24, f5, rmm # perform operation
fnmadd.d f3, f29, f24, f5, rne # perform operation
fnmadd.d f3, f29, f24, f5, rtz # perform operation
fnmadd.d f3, f29, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f29, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fefffffffffffff)
li x7, 0xe10b5d83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x16e9f061 # load x3 with 32 MSBs 0x0000000016e9f061
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016e9f061
sw x3, 0(x2) # store x3 (0x16e9f061) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000016e9f061 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fnmadd.d f7, f31, f14, f9, dyn # perform operation
fnmadd.d f7, f31, f14, f9, rdn # perform operation
fnmadd.d f7, f31, f14, f9, rmm # perform operation
fnmadd.d f7, f31, f14, f9, rne # perform operation
fnmadd.d f7, f31, f14, f9, rtz # perform operation
fnmadd.d f7, f31, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f31, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f31, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f31, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f31, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f31, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xffefffffffffffff)
li x11, 0xc9c1d5f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x3627a4c9 # load x3 with 32 MSBs 0x000000003627a4c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003627a4c9
sw x3, 0(x2) # store x3 (0x3627a4c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003627a4c9 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fnmadd.d f11, f28, f3, f9, dyn # perform operation
fnmadd.d f11, f28, f3, f9, rdn # perform operation
fnmadd.d f11, f28, f3, f9, rmm # perform operation
fnmadd.d f11, f28, f3, f9, rne # perform operation
fnmadd.d f11, f28, f3, f9, rtz # perform operation
fnmadd.d f11, f28, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f28, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfffffffffffff)
li x27, 0x1baaf5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x2b8799be # load x3 with 32 MSBs 0x000000002b8799be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b8799be
sw x3, 0(x2) # store x3 (0x2b8799be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002b8799be from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fnmadd.d f27, f3, f4, f18, dyn # perform operation
fnmadd.d f27, f3, f4, f18, rdn # perform operation
fnmadd.d f27, f3, f4, f18, rmm # perform operation
fnmadd.d f27, f3, f4, f18, rne # perform operation
fnmadd.d f27, f3, f4, f18, rtz # perform operation
fnmadd.d f27, f3, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f3, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x800fffffffffffff)
li x20, 0xb6a0f7c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x3a595937 # load x3 with 32 MSBs 0x000000003a595937
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a595937
sw x3, 0(x2) # store x3 (0x3a595937) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003a595937 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f20, f8, f26, f14, dyn # perform operation
fnmadd.d f20, f8, f26, f14, rdn # perform operation
fnmadd.d f20, f8, f26, f14, rmm # perform operation
fnmadd.d f20, f8, f26, f14, rne # perform operation
fnmadd.d f20, f8, f26, f14, rtz # perform operation
fnmadd.d f20, f8, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f8, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000)
li x14, 0x4cd4a8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xc8ed022e # load x3 with 32 MSBs 0x00000000c8ed022e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8ed022e
sw x3, 0(x2) # store x3 (0xc8ed022e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c8ed022e from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fnmadd.d f14, f27, f24, f11, dyn # perform operation
fnmadd.d f14, f27, f24, f11, rdn # perform operation
fnmadd.d f14, f27, f24, f11, rmm # perform operation
fnmadd.d f14, f27, f24, f11, rne # perform operation
fnmadd.d f14, f27, f24, f11, rtz # perform operation
fnmadd.d f14, f27, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f27, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f27, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8008000000000000)
li x19, 0xff4ba1a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x43ff1d28 # load x3 with 32 MSBs 0x0000000043ff1d28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043ff1d28
sw x3, 0(x2) # store x3 (0x43ff1d28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000043ff1d28 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fnmadd.d f19, f14, f4, f11, dyn # perform operation
fnmadd.d f19, f14, f4, f11, rdn # perform operation
fnmadd.d f19, f14, f4, f11, rmm # perform operation
fnmadd.d f19, f14, f4, f11, rne # perform operation
fnmadd.d f19, f14, f4, f11, rtz # perform operation
fnmadd.d f19, f14, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f14, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f14, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f14, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f14, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f14, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x1)
li x9, 0x7a2d0ee4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x1b12c0b2 # load x3 with 32 MSBs 0x000000001b12c0b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b12c0b2
sw x3, 0(x2) # store x3 (0x1b12c0b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001b12c0b2 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f9, f30, f13, f12, dyn # perform operation
fnmadd.d f9, f30, f13, f12, rdn # perform operation
fnmadd.d f9, f30, f13, f12, rmm # perform operation
fnmadd.d f9, f30, f13, f12, rne # perform operation
fnmadd.d f9, f30, f13, f12, rtz # perform operation
fnmadd.d f9, f30, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f30, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x8000000000000001)
li x9, 0xb6272f36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x589d4c89 # load x3 with 32 MSBs 0x00000000589d4c89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000589d4c89
sw x3, 0(x2) # store x3 (0x589d4c89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000589d4c89 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fnmadd.d f9, f22, f8, f28, dyn # perform operation
fnmadd.d f9, f22, f8, f28, rdn # perform operation
fnmadd.d f9, f22, f8, f28, rmm # perform operation
fnmadd.d f9, f22, f8, f28, rne # perform operation
fnmadd.d f9, f22, f8, f28, rtz # perform operation
fnmadd.d f9, f22, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f22, f8, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000000)
li x23, 0xeac2c955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
li x3, 0x64fc3bea # load x3 with 32 MSBs 0x0000000064fc3bea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064fc3bea
sw x3, 0(x2) # store x3 (0x64fc3bea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000064fc3bea from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fnmadd.d f23, f30, f11, f18, dyn # perform operation
fnmadd.d f23, f30, f11, f18, rdn # perform operation
fnmadd.d f23, f30, f11, f18, rmm # perform operation
fnmadd.d f23, f30, f11, f18, rne # perform operation
fnmadd.d f23, f30, f11, f18, rtz # perform operation
fnmadd.d f23, f30, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f30, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f30, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xfff0000000000000)
li x22, 0x9883a37f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x47277a0d # load x3 with 32 MSBs 0x0000000047277a0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047277a0d
sw x3, 0(x2) # store x3 (0x47277a0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000047277a0d from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fnmadd.d f22, f5, f24, f23, dyn # perform operation
fnmadd.d f22, f5, f24, f23, rdn # perform operation
fnmadd.d f22, f5, f24, f23, rmm # perform operation
fnmadd.d f22, f5, f24, f23, rne # perform operation
fnmadd.d f22, f5, f24, f23, rtz # perform operation
fnmadd.d f22, f5, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f5, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff8000000000000)
li x17, 0x356d751a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0x1467f60e # load x3 with 32 MSBs 0x000000001467f60e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001467f60e
sw x3, 0(x2) # store x3 (0x1467f60e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001467f60e from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fnmadd.d f17, f11, f20, f2, dyn # perform operation
fnmadd.d f17, f11, f20, f2, rdn # perform operation
fnmadd.d f17, f11, f20, f2, rmm # perform operation
fnmadd.d f17, f11, f20, f2, rne # perform operation
fnmadd.d f17, f11, f20, f2, rtz # perform operation
fnmadd.d f17, f11, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7fffffffffffffff)
li x7, 0xe15a1cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x9b8c40a6 # load x3 with 32 MSBs 0x000000009b8c40a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b8c40a6
sw x3, 0(x2) # store x3 (0x9b8c40a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009b8c40a6 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fnmadd.d f7, f2, f21, f30, dyn # perform operation
fnmadd.d f7, f2, f21, f30, rdn # perform operation
fnmadd.d f7, f2, f21, f30, rmm # perform operation
fnmadd.d f7, f2, f21, f30, rne # perform operation
fnmadd.d f7, f2, f21, f30, rtz # perform operation
fnmadd.d f7, f2, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f2, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f2, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff0000000000001)
li x30, 0x6b5fe1ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x4f27e78c # load x3 with 32 MSBs 0x000000004f27e78c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f27e78c
sw x3, 0(x2) # store x3 (0x4f27e78c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004f27e78c from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fnmadd.d f30, f21, f22, f9, dyn # perform operation
fnmadd.d f30, f21, f22, f9, rdn # perform operation
fnmadd.d f30, f21, f22, f9, rmm # perform operation
fnmadd.d f30, f21, f22, f9, rne # perform operation
fnmadd.d f30, f21, f22, f9, rtz # perform operation
fnmadd.d f30, f21, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f21, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x10, 0xe1d092fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x432ced31 # load x3 with 32 MSBs 0x00000000432ced31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000432ced31
sw x3, 0(x2) # store x3 (0x432ced31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000432ced31 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fnmadd.d f10, f2, f26, f30, dyn # perform operation
fnmadd.d f10, f2, f26, f30, rdn # perform operation
fnmadd.d f10, f2, f26, f30, rmm # perform operation
fnmadd.d f10, f2, f26, f30, rne # perform operation
fnmadd.d f10, f2, f26, f30, rtz # perform operation
fnmadd.d f10, f2, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f2, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f2, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f2, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f2, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f2, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0x5a392534a57711ad)
li x17, 0x8c9cf03c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x89c0b455 # load x3 with 32 MSBs 0x0000000089c0b455
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089c0b455
sw x3, 0(x2) # store x3 (0x89c0b455) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000089c0b455 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fnmadd.d f17, f23, f31, f1, dyn # perform operation
fnmadd.d f17, f23, f31, f1, rdn # perform operation
fnmadd.d f17, f23, f31, f1, rmm # perform operation
fnmadd.d f17, f23, f31, f1, rne # perform operation
fnmadd.d f17, f23, f31, f1, rtz # perform operation
fnmadd.d f17, f23, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f23, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff8000000000000 fs3 = 0xa6e895993737426c)
li x25, 0xccfd60ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0xd16b98f8 # load x3 with 32 MSBs 0x00000000d16b98f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d16b98f8
sw x3, 0(x2) # store x3 (0xd16b98f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d16b98f8 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
fnmadd.d f25, f21, f17, f18, dyn # perform operation
fnmadd.d f25, f21, f17, f18, rdn # perform operation
fnmadd.d f25, f21, f17, f18, rmm # perform operation
fnmadd.d f25, f21, f17, f18, rne # perform operation
fnmadd.d f25, f21, f17, f18, rtz # perform operation
fnmadd.d f25, f21, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f21, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f21, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f21, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f21, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f21, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x0)
li x5, 0x9b312912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0xc964109d # load x3 with 32 MSBs 0x00000000c964109d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c964109d
sw x3, 0(x2) # store x3 (0xc964109d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c964109d from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fnmadd.d f5, f17, f20, f15, dyn # perform operation
fnmadd.d f5, f17, f20, f15, rdn # perform operation
fnmadd.d f5, f17, f20, f15, rmm # perform operation
fnmadd.d f5, f17, f20, f15, rne # perform operation
fnmadd.d f5, f17, f20, f15, rtz # perform operation
fnmadd.d f5, f17, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f17, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f17, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f17, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f17, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f17, f20, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000000)
li x26, 0x555cec3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0xd1ffd034 # load x3 with 32 MSBs 0x00000000d1ffd034
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1ffd034
sw x3, 0(x2) # store x3 (0xd1ffd034) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d1ffd034 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fnmadd.d f26, f18, f21, f7, dyn # perform operation
fnmadd.d f26, f18, f21, f7, rdn # perform operation
fnmadd.d f26, f18, f21, f7, rmm # perform operation
fnmadd.d f26, f18, f21, f7, rne # perform operation
fnmadd.d f26, f18, f21, f7, rtz # perform operation
fnmadd.d f26, f18, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f18, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f18, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff0000000000000)
li x15, 0x1eb988df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0xa50e0c45 # load x3 with 32 MSBs 0x00000000a50e0c45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a50e0c45
sw x3, 0(x2) # store x3 (0xa50e0c45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a50e0c45 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fnmadd.d f15, f7, f8, f2, dyn # perform operation
fnmadd.d f15, f7, f8, f2, rdn # perform operation
fnmadd.d f15, f7, f8, f2, rmm # perform operation
fnmadd.d f15, f7, f8, f2, rne # perform operation
fnmadd.d f15, f7, f8, f2, rtz # perform operation
fnmadd.d f15, f7, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f7, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff0000000000000)
li x10, 0x1210d3ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x23a3c28e # load x3 with 32 MSBs 0x0000000023a3c28e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023a3c28e
sw x3, 0(x2) # store x3 (0x23a3c28e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000023a3c28e from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fnmadd.d f10, f21, f13, f30, dyn # perform operation
fnmadd.d f10, f21, f13, f30, rdn # perform operation
fnmadd.d f10, f21, f13, f30, rmm # perform operation
fnmadd.d f10, f21, f13, f30, rne # perform operation
fnmadd.d f10, f21, f13, f30, rtz # perform operation
fnmadd.d f10, f21, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f21, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f21, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x3ff8000000000000)
li x31, 0x4e6280fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x99d51230 # load x3 with 32 MSBs 0x0000000099d51230
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099d51230
sw x3, 0(x2) # store x3 (0x99d51230) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000099d51230 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fnmadd.d f31, f28, f8, f9, dyn # perform operation
fnmadd.d f31, f28, f8, f9, rdn # perform operation
fnmadd.d f31, f28, f8, f9, rmm # perform operation
fnmadd.d f31, f28, f8, f9, rne # perform operation
fnmadd.d f31, f28, f8, f9, rtz # perform operation
fnmadd.d f31, f28, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f28, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f28, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xbff8000000000000)
li x29, 0xb2acfae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x9b2499fd # load x3 with 32 MSBs 0x000000009b2499fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b2499fd
sw x3, 0(x2) # store x3 (0x9b2499fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009b2499fd from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fnmadd.d f29, f14, f30, f16, dyn # perform operation
fnmadd.d f29, f14, f30, f16, rdn # perform operation
fnmadd.d f29, f14, f30, f16, rmm # perform operation
fnmadd.d f29, f14, f30, f16, rne # perform operation
fnmadd.d f29, f14, f30, f16, rtz # perform operation
fnmadd.d f29, f14, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f14, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x4000000000000000)
li x4, 0x36fecd14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x4f0eb41e # load x3 with 32 MSBs 0x000000004f0eb41e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f0eb41e
sw x3, 0(x2) # store x3 (0x4f0eb41e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004f0eb41e from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fnmadd.d f4, f9, f28, f22, dyn # perform operation
fnmadd.d f4, f9, f28, f22, rdn # perform operation
fnmadd.d f4, f9, f28, f22, rmm # perform operation
fnmadd.d f4, f9, f28, f22, rne # perform operation
fnmadd.d f4, f9, f28, f22, rtz # perform operation
fnmadd.d f4, f9, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f9, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xc000000000000000)
li x28, 0x1e2a90a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0xc4c05fbe # load x3 with 32 MSBs 0x00000000c4c05fbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4c05fbe
sw x3, 0(x2) # store x3 (0xc4c05fbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c4c05fbe from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fnmadd.d f28, f20, f19, f8, dyn # perform operation
fnmadd.d f28, f20, f19, f8, rdn # perform operation
fnmadd.d f28, f20, f19, f8, rmm # perform operation
fnmadd.d f28, f20, f19, f8, rne # perform operation
fnmadd.d f28, f20, f19, f8, rtz # perform operation
fnmadd.d f28, f20, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f20, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x10000000000000)
li x31, 0xf18dab57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x6b367df5 # load x3 with 32 MSBs 0x000000006b367df5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b367df5
sw x3, 0(x2) # store x3 (0x6b367df5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006b367df5 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
fnmadd.d f31, f9, f14, f13, dyn # perform operation
fnmadd.d f31, f9, f14, f13, rdn # perform operation
fnmadd.d f31, f9, f14, f13, rmm # perform operation
fnmadd.d f31, f9, f14, f13, rne # perform operation
fnmadd.d f31, f9, f14, f13, rtz # perform operation
fnmadd.d f31, f9, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f9, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8010000000000000)
li x31, 0x212061b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x3b24484c # load x3 with 32 MSBs 0x000000003b24484c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b24484c
sw x3, 0(x2) # store x3 (0x3b24484c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003b24484c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fnmadd.d f31, f26, f6, f15, dyn # perform operation
fnmadd.d f31, f26, f6, f15, rdn # perform operation
fnmadd.d f31, f26, f6, f15, rmm # perform operation
fnmadd.d f31, f26, f6, f15, rne # perform operation
fnmadd.d f31, f26, f6, f15, rtz # perform operation
fnmadd.d f31, f26, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f26, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f26, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f26, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f26, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f26, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fefffffffffffff)
li x30, 0xd7e265a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xf205ecfa # load x3 with 32 MSBs 0x00000000f205ecfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f205ecfa
sw x3, 0(x2) # store x3 (0xf205ecfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f205ecfa from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmadd.d f30, f10, f6, f26, dyn # perform operation
fnmadd.d f30, f10, f6, f26, rdn # perform operation
fnmadd.d f30, f10, f6, f26, rmm # perform operation
fnmadd.d f30, f10, f6, f26, rne # perform operation
fnmadd.d f30, f10, f6, f26, rtz # perform operation
fnmadd.d f30, f10, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f10, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xffefffffffffffff)
li x18, 0xfabe59f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x60ff4222 # load x3 with 32 MSBs 0x0000000060ff4222
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060ff4222
sw x3, 0(x2) # store x3 (0x60ff4222) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000060ff4222 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fnmadd.d f18, f5, f14, f21, dyn # perform operation
fnmadd.d f18, f5, f14, f21, rdn # perform operation
fnmadd.d f18, f5, f14, f21, rmm # perform operation
fnmadd.d f18, f5, f14, f21, rne # perform operation
fnmadd.d f18, f5, f14, f21, rtz # perform operation
fnmadd.d f18, f5, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f5, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfffffffffffff)
li x18, 0x339ed96c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0x590c4c68 # load x3 with 32 MSBs 0x00000000590c4c68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000590c4c68
sw x3, 0(x2) # store x3 (0x590c4c68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000590c4c68 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fnmadd.d f18, f9, f22, f21, dyn # perform operation
fnmadd.d f18, f9, f22, f21, rdn # perform operation
fnmadd.d f18, f9, f22, f21, rmm # perform operation
fnmadd.d f18, f9, f22, f21, rne # perform operation
fnmadd.d f18, f9, f22, f21, rtz # perform operation
fnmadd.d f18, f9, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f9, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x800fffffffffffff)
li x19, 0xb61cb4ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0x9d1bb42b # load x3 with 32 MSBs 0x000000009d1bb42b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d1bb42b
sw x3, 0(x2) # store x3 (0x9d1bb42b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009d1bb42b from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
fnmadd.d f19, f26, f5, f8, dyn # perform operation
fnmadd.d f19, f26, f5, f8, rdn # perform operation
fnmadd.d f19, f26, f5, f8, rmm # perform operation
fnmadd.d f19, f26, f5, f8, rne # perform operation
fnmadd.d f19, f26, f5, f8, rtz # perform operation
fnmadd.d f19, f26, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f26, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f26, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000)
li x13, 0x94d01364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x082e42a7 # load x3 with 32 MSBs 0x00000000082e42a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000082e42a7
sw x3, 0(x2) # store x3 (0x082e42a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000082e42a7 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fnmadd.d f13, f20, f29, f6, dyn # perform operation
fnmadd.d f13, f20, f29, f6, rdn # perform operation
fnmadd.d f13, f20, f29, f6, rmm # perform operation
fnmadd.d f13, f20, f29, f6, rne # perform operation
fnmadd.d f13, f20, f29, f6, rtz # perform operation
fnmadd.d f13, f20, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f20, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8008000000000000)
li x30, 0xe931a298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x9c1f4bc0 # load x3 with 32 MSBs 0x000000009c1f4bc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009c1f4bc0
sw x3, 0(x2) # store x3 (0x9c1f4bc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009c1f4bc0 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fnmadd.d f30, f21, f12, f9, dyn # perform operation
fnmadd.d f30, f21, f12, f9, rdn # perform operation
fnmadd.d f30, f21, f12, f9, rmm # perform operation
fnmadd.d f30, f21, f12, f9, rne # perform operation
fnmadd.d f30, f21, f12, f9, rtz # perform operation
fnmadd.d f30, f21, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f21, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f21, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f21, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f21, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f21, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x1)
li x25, 0xc300686c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xe03d861d # load x3 with 32 MSBs 0x00000000e03d861d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e03d861d
sw x3, 0(x2) # store x3 (0xe03d861d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e03d861d from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fnmadd.d f25, f9, f30, f8, dyn # perform operation
fnmadd.d f25, f9, f30, f8, rdn # perform operation
fnmadd.d f25, f9, f30, f8, rmm # perform operation
fnmadd.d f25, f9, f30, f8, rne # perform operation
fnmadd.d f25, f9, f30, f8, rtz # perform operation
fnmadd.d f25, f9, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f9, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x8000000000000001)
li x15, 0xd1c7d8a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x3b333549 # load x3 with 32 MSBs 0x000000003b333549
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b333549
sw x3, 0(x2) # store x3 (0x3b333549) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003b333549 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fnmadd.d f15, f13, f8, f26, dyn # perform operation
fnmadd.d f15, f13, f8, f26, rdn # perform operation
fnmadd.d f15, f13, f8, f26, rmm # perform operation
fnmadd.d f15, f13, f8, f26, rne # perform operation
fnmadd.d f15, f13, f8, f26, rtz # perform operation
fnmadd.d f15, f13, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f13, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f13, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f13, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f13, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f13, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000000)
li x28, 0xffa12fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0xacbe0290 # load x3 with 32 MSBs 0x00000000acbe0290
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acbe0290
sw x3, 0(x2) # store x3 (0xacbe0290) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000acbe0290 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f28, f7, f1, f30, dyn # perform operation
fnmadd.d f28, f7, f1, f30, rdn # perform operation
fnmadd.d f28, f7, f1, f30, rmm # perform operation
fnmadd.d f28, f7, f1, f30, rne # perform operation
fnmadd.d f28, f7, f1, f30, rtz # perform operation
fnmadd.d f28, f7, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f7, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xfff0000000000000)
li x5, 0x211d3792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x1d0c580d # load x3 with 32 MSBs 0x000000001d0c580d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d0c580d
sw x3, 0(x2) # store x3 (0x1d0c580d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001d0c580d from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fnmadd.d f5, f1, f29, f12, dyn # perform operation
fnmadd.d f5, f1, f29, f12, rdn # perform operation
fnmadd.d f5, f1, f29, f12, rmm # perform operation
fnmadd.d f5, f1, f29, f12, rne # perform operation
fnmadd.d f5, f1, f29, f12, rtz # perform operation
fnmadd.d f5, f1, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff8000000000000)
li x17, 0x92800916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xf8db1e51 # load x3 with 32 MSBs 0x00000000f8db1e51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8db1e51
sw x3, 0(x2) # store x3 (0xf8db1e51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f8db1e51 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fnmadd.d f17, f9, f21, f6, dyn # perform operation
fnmadd.d f17, f9, f21, f6, rdn # perform operation
fnmadd.d f17, f9, f21, f6, rmm # perform operation
fnmadd.d f17, f9, f21, f6, rne # perform operation
fnmadd.d f17, f9, f21, f6, rtz # perform operation
fnmadd.d f17, f9, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7fffffffffffffff)
li x12, 0x203fb61d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0xfd86a757 # load x3 with 32 MSBs 0x00000000fd86a757
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd86a757
sw x3, 0(x2) # store x3 (0xfd86a757) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fd86a757 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fnmadd.d f12, f27, f1, f22, dyn # perform operation
fnmadd.d f12, f27, f1, f22, rdn # perform operation
fnmadd.d f12, f27, f1, f22, rmm # perform operation
fnmadd.d f12, f27, f1, f22, rne # perform operation
fnmadd.d f12, f27, f1, f22, rtz # perform operation
fnmadd.d f12, f27, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f27, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f27, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f27, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f27, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f27, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff0000000000001)
li x7, 0xb3f79499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x049b11a2 # load x3 with 32 MSBs 0x00000000049b11a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000049b11a2
sw x3, 0(x2) # store x3 (0x049b11a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000049b11a2 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fnmadd.d f7, f1, f5, f9, dyn # perform operation
fnmadd.d f7, f1, f5, f9, rdn # perform operation
fnmadd.d f7, f1, f5, f9, rmm # perform operation
fnmadd.d f7, f1, f5, f9, rne # perform operation
fnmadd.d f7, f1, f5, f9, rtz # perform operation
fnmadd.d f7, f1, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f1, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x22, 0xf7898fca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0xc3f4f9df # load x3 with 32 MSBs 0x00000000c3f4f9df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3f4f9df
sw x3, 0(x2) # store x3 (0xc3f4f9df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c3f4f9df from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fnmadd.d f22, f15, f17, f4, dyn # perform operation
fnmadd.d f22, f15, f17, f4, rdn # perform operation
fnmadd.d f22, f15, f17, f4, rmm # perform operation
fnmadd.d f22, f15, f17, f4, rne # perform operation
fnmadd.d f22, f15, f17, f4, rtz # perform operation
fnmadd.d f22, f15, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f15, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f15, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0x7c87b0d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0xd1a0b760 # load x3 with 32 MSBs 0x00000000d1a0b760
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1a0b760
sw x3, 0(x2) # store x3 (0xd1a0b760) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d1a0b760 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fnmadd.d f2, f14, f9, f28, dyn # perform operation
fnmadd.d f2, f14, f9, f28, rdn # perform operation
fnmadd.d f2, f14, f9, f28, rmm # perform operation
fnmadd.d f2, f14, f9, f28, rne # perform operation
fnmadd.d f2, f14, f9, f28, rtz # perform operation
fnmadd.d f2, f14, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f14, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f14, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f14, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f14, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f14, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbff8000000000000 fs3 = 0xa6e895993737426c)
li x7, 0x57512ef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x293da8b6 # load x3 with 32 MSBs 0x00000000293da8b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000293da8b6
sw x3, 0(x2) # store x3 (0x293da8b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000293da8b6 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fnmadd.d f7, f8, f11, f19, dyn # perform operation
fnmadd.d f7, f8, f11, f19, rdn # perform operation
fnmadd.d f7, f8, f11, f19, rmm # perform operation
fnmadd.d f7, f8, f11, f19, rne # perform operation
fnmadd.d f7, f8, f11, f19, rtz # perform operation
fnmadd.d f7, f8, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f8, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x0)
li x6, 0xcbeb0f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x689d17fc # load x3 with 32 MSBs 0x00000000689d17fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000689d17fc
sw x3, 0(x2) # store x3 (0x689d17fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000689d17fc from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fnmadd.d f6, f16, f12, f31, dyn # perform operation
fnmadd.d f6, f16, f12, f31, rdn # perform operation
fnmadd.d f6, f16, f12, f31, rmm # perform operation
fnmadd.d f6, f16, f12, f31, rne # perform operation
fnmadd.d f6, f16, f12, f31, rtz # perform operation
fnmadd.d f6, f16, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000000)
li x12, 0x5500fb54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x5716e7aa # load x3 with 32 MSBs 0x000000005716e7aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005716e7aa
sw x3, 0(x2) # store x3 (0x5716e7aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005716e7aa from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fnmadd.d f12, f25, f27, f1, dyn # perform operation
fnmadd.d f12, f25, f27, f1, rdn # perform operation
fnmadd.d f12, f25, f27, f1, rmm # perform operation
fnmadd.d f12, f25, f27, f1, rne # perform operation
fnmadd.d f12, f25, f27, f1, rtz # perform operation
fnmadd.d f12, f25, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f25, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f25, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f25, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f25, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f25, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff0000000000000)
li x3, 0x1e7116b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x19148775 # load x3 with 32 MSBs 0x0000000019148775
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019148775
sw x3, 0(x2) # store x3 (0x19148775) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000019148775 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fnmadd.d f3, f25, f10, f31, dyn # perform operation
fnmadd.d f3, f25, f10, f31, rdn # perform operation
fnmadd.d f3, f25, f10, f31, rmm # perform operation
fnmadd.d f3, f25, f10, f31, rne # perform operation
fnmadd.d f3, f25, f10, f31, rtz # perform operation
fnmadd.d f3, f25, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f25, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff0000000000000)
li x24, 0x68908fa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x162cceff # load x3 with 32 MSBs 0x00000000162cceff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000162cceff
sw x3, 0(x2) # store x3 (0x162cceff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000162cceff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fnmadd.d f24, f6, f17, f23, dyn # perform operation
fnmadd.d f24, f6, f17, f23, rdn # perform operation
fnmadd.d f24, f6, f17, f23, rmm # perform operation
fnmadd.d f24, f6, f17, f23, rne # perform operation
fnmadd.d f24, f6, f17, f23, rtz # perform operation
fnmadd.d f24, f6, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f6, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x3ff8000000000000)
li x3, 0xdb8c602e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x39ebfba6 # load x3 with 32 MSBs 0x0000000039ebfba6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039ebfba6
sw x3, 0(x2) # store x3 (0x39ebfba6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000039ebfba6 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fnmadd.d f3, f31, f12, f9, dyn # perform operation
fnmadd.d f3, f31, f12, f9, rdn # perform operation
fnmadd.d f3, f31, f12, f9, rmm # perform operation
fnmadd.d f3, f31, f12, f9, rne # perform operation
fnmadd.d f3, f31, f12, f9, rtz # perform operation
fnmadd.d f3, f31, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f31, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xbff8000000000000)
li x24, 0x05f41d67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x0c00b523 # load x3 with 32 MSBs 0x000000000c00b523
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c00b523
sw x3, 0(x2) # store x3 (0x0c00b523) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000c00b523 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fnmadd.d f24, f5, f11, f30, dyn # perform operation
fnmadd.d f24, f5, f11, f30, rdn # perform operation
fnmadd.d f24, f5, f11, f30, rmm # perform operation
fnmadd.d f24, f5, f11, f30, rne # perform operation
fnmadd.d f24, f5, f11, f30, rtz # perform operation
fnmadd.d f24, f5, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f5, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x4000000000000000)
li x19, 0xae036d4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0xd12bd8c0 # load x3 with 32 MSBs 0x00000000d12bd8c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d12bd8c0
sw x3, 0(x2) # store x3 (0xd12bd8c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d12bd8c0 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fnmadd.d f19, f29, f12, f6, dyn # perform operation
fnmadd.d f19, f29, f12, f6, rdn # perform operation
fnmadd.d f19, f29, f12, f6, rmm # perform operation
fnmadd.d f19, f29, f12, f6, rne # perform operation
fnmadd.d f19, f29, f12, f6, rtz # perform operation
fnmadd.d f19, f29, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f29, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f29, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f29, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f29, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f29, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xc000000000000000)
li x25, 0x553c55c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0x08ed6d1e # load x3 with 32 MSBs 0x0000000008ed6d1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008ed6d1e
sw x3, 0(x2) # store x3 (0x08ed6d1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000008ed6d1e from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fnmadd.d f25, f21, f2, f6, dyn # perform operation
fnmadd.d f25, f21, f2, f6, rdn # perform operation
fnmadd.d f25, f21, f2, f6, rmm # perform operation
fnmadd.d f25, f21, f2, f6, rne # perform operation
fnmadd.d f25, f21, f2, f6, rtz # perform operation
fnmadd.d f25, f21, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f21, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f21, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f21, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f21, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f21, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x10000000000000)
li x20, 0xd80c8f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xe2c66a1e # load x3 with 32 MSBs 0x00000000e2c66a1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2c66a1e
sw x3, 0(x2) # store x3 (0xe2c66a1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e2c66a1e from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fnmadd.d f20, f1, f24, f9, dyn # perform operation
fnmadd.d f20, f1, f24, f9, rdn # perform operation
fnmadd.d f20, f1, f24, f9, rmm # perform operation
fnmadd.d f20, f1, f24, f9, rne # perform operation
fnmadd.d f20, f1, f24, f9, rtz # perform operation
fnmadd.d f20, f1, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f1, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f1, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f1, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f1, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f1, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8010000000000000)
li x10, 0x22322533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xea6fe461 # load x3 with 32 MSBs 0x00000000ea6fe461
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea6fe461
sw x3, 0(x2) # store x3 (0xea6fe461) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ea6fe461 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fnmadd.d f10, f1, f29, f17, dyn # perform operation
fnmadd.d f10, f1, f29, f17, rdn # perform operation
fnmadd.d f10, f1, f29, f17, rmm # perform operation
fnmadd.d f10, f1, f29, f17, rne # perform operation
fnmadd.d f10, f1, f29, f17, rtz # perform operation
fnmadd.d f10, f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f1, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fefffffffffffff)
li x24, 0xe34aca68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0xb41db7ca # load x3 with 32 MSBs 0x00000000b41db7ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b41db7ca
sw x3, 0(x2) # store x3 (0xb41db7ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b41db7ca from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fnmadd.d f24, f28, f18, f29, dyn # perform operation
fnmadd.d f24, f28, f18, f29, rdn # perform operation
fnmadd.d f24, f28, f18, f29, rmm # perform operation
fnmadd.d f24, f28, f18, f29, rne # perform operation
fnmadd.d f24, f28, f18, f29, rtz # perform operation
fnmadd.d f24, f28, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f28, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xffefffffffffffff)
li x15, 0xa344e200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x03463944 # load x3 with 32 MSBs 0x0000000003463944
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003463944
sw x3, 0(x2) # store x3 (0x03463944) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000003463944 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fnmadd.d f15, f31, f13, f30, dyn # perform operation
fnmadd.d f15, f31, f13, f30, rdn # perform operation
fnmadd.d f15, f31, f13, f30, rmm # perform operation
fnmadd.d f15, f31, f13, f30, rne # perform operation
fnmadd.d f15, f31, f13, f30, rtz # perform operation
fnmadd.d f15, f31, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f31, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f31, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfffffffffffff)
li x7, 0xcb7309c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x112feb98 # load x3 with 32 MSBs 0x00000000112feb98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000112feb98
sw x3, 0(x2) # store x3 (0x112feb98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000112feb98 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fnmadd.d f7, f6, f19, f8, dyn # perform operation
fnmadd.d f7, f6, f19, f8, rdn # perform operation
fnmadd.d f7, f6, f19, f8, rmm # perform operation
fnmadd.d f7, f6, f19, f8, rne # perform operation
fnmadd.d f7, f6, f19, f8, rtz # perform operation
fnmadd.d f7, f6, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f6, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x800fffffffffffff)
li x17, 0xa6adbb98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0xb3b449ad # load x3 with 32 MSBs 0x00000000b3b449ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3b449ad
sw x3, 0(x2) # store x3 (0xb3b449ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b3b449ad from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fnmadd.d f17, f11, f23, f12, dyn # perform operation
fnmadd.d f17, f11, f23, f12, rdn # perform operation
fnmadd.d f17, f11, f23, f12, rmm # perform operation
fnmadd.d f17, f11, f23, f12, rne # perform operation
fnmadd.d f17, f11, f23, f12, rtz # perform operation
fnmadd.d f17, f11, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000)
li x7, 0x8c7eaf94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
li x3, 0xfcdaf907 # load x3 with 32 MSBs 0x00000000fcdaf907
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcdaf907
sw x3, 0(x2) # store x3 (0xfcdaf907) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000fcdaf907 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fnmadd.d f7, f15, f11, f19, dyn # perform operation
fnmadd.d f7, f15, f11, f19, rdn # perform operation
fnmadd.d f7, f15, f11, f19, rmm # perform operation
fnmadd.d f7, f15, f11, f19, rne # perform operation
fnmadd.d f7, f15, f11, f19, rtz # perform operation
fnmadd.d f7, f15, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f15, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8008000000000000)
li x13, 0xca699863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0x8b68eae2 # load x3 with 32 MSBs 0x000000008b68eae2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b68eae2
sw x3, 0(x2) # store x3 (0x8b68eae2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008b68eae2 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
fnmadd.d f13, f23, f17, f25, dyn # perform operation
fnmadd.d f13, f23, f17, f25, rdn # perform operation
fnmadd.d f13, f23, f17, f25, rmm # perform operation
fnmadd.d f13, f23, f17, f25, rne # perform operation
fnmadd.d f13, f23, f17, f25, rtz # perform operation
fnmadd.d f13, f23, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f23, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x1)
li x11, 0x8106875c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
li x3, 0xd61d3604 # load x3 with 32 MSBs 0x00000000d61d3604
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d61d3604
sw x3, 0(x2) # store x3 (0xd61d3604) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d61d3604 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fnmadd.d f11, f14, f13, f27, dyn # perform operation
fnmadd.d f11, f14, f13, f27, rdn # perform operation
fnmadd.d f11, f14, f13, f27, rmm # perform operation
fnmadd.d f11, f14, f13, f27, rne # perform operation
fnmadd.d f11, f14, f13, f27, rtz # perform operation
fnmadd.d f11, f14, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f14, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x8000000000000001)
li x3, 0x9d55a27e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x6cb945b7 # load x3 with 32 MSBs 0x000000006cb945b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006cb945b7
sw x3, 0(x2) # store x3 (0x6cb945b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000006cb945b7 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmadd.d f3, f17, f27, f6, dyn # perform operation
fnmadd.d f3, f17, f27, f6, rdn # perform operation
fnmadd.d f3, f17, f27, f6, rmm # perform operation
fnmadd.d f3, f17, f27, f6, rne # perform operation
fnmadd.d f3, f17, f27, f6, rtz # perform operation
fnmadd.d f3, f17, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f17, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f17, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000000)
li x31, 0x6125f0b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x69f1ed62 # load x3 with 32 MSBs 0x0000000069f1ed62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069f1ed62
sw x3, 0(x2) # store x3 (0x69f1ed62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000069f1ed62 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fnmadd.d f31, f24, f2, f20, dyn # perform operation
fnmadd.d f31, f24, f2, f20, rdn # perform operation
fnmadd.d f31, f24, f2, f20, rmm # perform operation
fnmadd.d f31, f24, f2, f20, rne # perform operation
fnmadd.d f31, f24, f2, f20, rtz # perform operation
fnmadd.d f31, f24, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xfff0000000000000)
li x5, 0x0c974341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x7ac0d0f7 # load x3 with 32 MSBs 0x000000007ac0d0f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ac0d0f7
sw x3, 0(x2) # store x3 (0x7ac0d0f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007ac0d0f7 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fnmadd.d f5, f12, f22, f30, dyn # perform operation
fnmadd.d f5, f12, f22, f30, rdn # perform operation
fnmadd.d f5, f12, f22, f30, rmm # perform operation
fnmadd.d f5, f12, f22, f30, rne # perform operation
fnmadd.d f5, f12, f22, f30, rtz # perform operation
fnmadd.d f5, f12, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f12, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f12, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f12, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f12, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f12, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff8000000000000)
li x8, 0x0767c364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x37227d31 # load x3 with 32 MSBs 0x0000000037227d31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037227d31
sw x3, 0(x2) # store x3 (0x37227d31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000037227d31 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fnmadd.d f8, f31, f12, f10, dyn # perform operation
fnmadd.d f8, f31, f12, f10, rdn # perform operation
fnmadd.d f8, f31, f12, f10, rmm # perform operation
fnmadd.d f8, f31, f12, f10, rne # perform operation
fnmadd.d f8, f31, f12, f10, rtz # perform operation
fnmadd.d f8, f31, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7fffffffffffffff)
li x31, 0xa8094db2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
li x3, 0xfc89c644 # load x3 with 32 MSBs 0x00000000fc89c644
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc89c644
sw x3, 0(x2) # store x3 (0xfc89c644) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fc89c644 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fnmadd.d f31, f23, f1, f22, dyn # perform operation
fnmadd.d f31, f23, f1, f22, rdn # perform operation
fnmadd.d f31, f23, f1, f22, rmm # perform operation
fnmadd.d f31, f23, f1, f22, rne # perform operation
fnmadd.d f31, f23, f1, f22, rtz # perform operation
fnmadd.d f31, f23, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f23, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff0000000000001)
li x7, 0x6e61292b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x738a00f5 # load x3 with 32 MSBs 0x00000000738a00f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000738a00f5
sw x3, 0(x2) # store x3 (0x738a00f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000738a00f5 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f7, f8, f3, f5, dyn # perform operation
fnmadd.d f7, f8, f3, f5, rdn # perform operation
fnmadd.d f7, f8, f3, f5, rmm # perform operation
fnmadd.d f7, f8, f3, f5, rne # perform operation
fnmadd.d f7, f8, f3, f5, rtz # perform operation
fnmadd.d f7, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f8, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x7ff7ffffffffffff)
li x3, 0x241cdcad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
li x3, 0x1191b144 # load x3 with 32 MSBs 0x000000001191b144
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001191b144
sw x3, 0(x2) # store x3 (0x1191b144) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001191b144 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f3, f11, f22, f25, dyn # perform operation
fnmadd.d f3, f11, f22, f25, rdn # perform operation
fnmadd.d f3, f11, f22, f25, rmm # perform operation
fnmadd.d f3, f11, f22, f25, rne # perform operation
fnmadd.d f3, f11, f22, f25, rtz # perform operation
fnmadd.d f3, f11, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f11, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f11, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0x95badeae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
li x3, 0xcb5bf014 # load x3 with 32 MSBs 0x00000000cb5bf014
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb5bf014
sw x3, 0(x2) # store x3 (0xcb5bf014) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000cb5bf014 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fnmadd.d f2, f21, f30, f11, dyn # perform operation
fnmadd.d f2, f21, f30, f11, rdn # perform operation
fnmadd.d f2, f21, f30, f11, rmm # perform operation
fnmadd.d f2, f21, f30, f11, rne # perform operation
fnmadd.d f2, f21, f30, f11, rtz # perform operation
fnmadd.d f2, f21, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f21, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f21, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f21, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f21, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f21, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000000000000000 fs3 = 0xa6e895993737426c)
li x21, 0x5159bac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x00dbb6ad # load x3 with 32 MSBs 0x0000000000dbb6ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000dbb6ad
sw x3, 0(x2) # store x3 (0x00dbb6ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000dbb6ad from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
fnmadd.d f21, f16, f25, f18, dyn # perform operation
fnmadd.d f21, f16, f25, f18, rdn # perform operation
fnmadd.d f21, f16, f25, f18, rmm # perform operation
fnmadd.d f21, f16, f25, f18, rne # perform operation
fnmadd.d f21, f16, f25, f18, rtz # perform operation
fnmadd.d f21, f16, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f16, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f16, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x0)
li x23, 0x5833def5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
li x3, 0x57925eaa # load x3 with 32 MSBs 0x0000000057925eaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057925eaa
sw x3, 0(x2) # store x3 (0x57925eaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000057925eaa from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fnmadd.d f23, f18, f13, f20, dyn # perform operation
fnmadd.d f23, f18, f13, f20, rdn # perform operation
fnmadd.d f23, f18, f13, f20, rmm # perform operation
fnmadd.d f23, f18, f13, f20, rne # perform operation
fnmadd.d f23, f18, f13, f20, rtz # perform operation
fnmadd.d f23, f18, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f18, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000000)
li x7, 0x9eb56f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x394a6593 # load x3 with 32 MSBs 0x00000000394a6593
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000394a6593
sw x3, 0(x2) # store x3 (0x394a6593) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000394a6593 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fnmadd.d f7, f1, f30, f9, dyn # perform operation
fnmadd.d f7, f1, f30, f9, rdn # perform operation
fnmadd.d f7, f1, f30, f9, rmm # perform operation
fnmadd.d f7, f1, f30, f9, rne # perform operation
fnmadd.d f7, f1, f30, f9, rtz # perform operation
fnmadd.d f7, f1, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f1, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f1, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f1, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f1, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f1, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff0000000000000)
li x6, 0xf0da37a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0xcfffa5f9 # load x3 with 32 MSBs 0x00000000cfffa5f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfffa5f9
sw x3, 0(x2) # store x3 (0xcfffa5f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000cfffa5f9 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
fnmadd.d f6, f31, f10, f22, dyn # perform operation
fnmadd.d f6, f31, f10, f22, rdn # perform operation
fnmadd.d f6, f31, f10, f22, rmm # perform operation
fnmadd.d f6, f31, f10, f22, rne # perform operation
fnmadd.d f6, f31, f10, f22, rtz # perform operation
fnmadd.d f6, f31, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f31, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f31, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff0000000000000)
li x3, 0x530cb673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x6564b151 # load x3 with 32 MSBs 0x000000006564b151
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006564b151
sw x3, 0(x2) # store x3 (0x6564b151) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006564b151 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fnmadd.d f3, f28, f20, f25, dyn # perform operation
fnmadd.d f3, f28, f20, f25, rdn # perform operation
fnmadd.d f3, f28, f20, f25, rmm # perform operation
fnmadd.d f3, f28, f20, f25, rne # perform operation
fnmadd.d f3, f28, f20, f25, rtz # perform operation
fnmadd.d f3, f28, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x3ff8000000000000)
li x16, 0xd76883f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0xe634b06c # load x3 with 32 MSBs 0x00000000e634b06c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e634b06c
sw x3, 0(x2) # store x3 (0xe634b06c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e634b06c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fnmadd.d f16, f31, f8, f21, dyn # perform operation
fnmadd.d f16, f31, f8, f21, rdn # perform operation
fnmadd.d f16, f31, f8, f21, rmm # perform operation
fnmadd.d f16, f31, f8, f21, rne # perform operation
fnmadd.d f16, f31, f8, f21, rtz # perform operation
fnmadd.d f16, f31, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xbff8000000000000)
li x24, 0x41c74090 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xfa3fdc3b # load x3 with 32 MSBs 0x00000000fa3fdc3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa3fdc3b
sw x3, 0(x2) # store x3 (0xfa3fdc3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000fa3fdc3b from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fnmadd.d f24, f15, f2, f9, dyn # perform operation
fnmadd.d f24, f15, f2, f9, rdn # perform operation
fnmadd.d f24, f15, f2, f9, rmm # perform operation
fnmadd.d f24, f15, f2, f9, rne # perform operation
fnmadd.d f24, f15, f2, f9, rtz # perform operation
fnmadd.d f24, f15, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f15, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f15, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x4000000000000000)
li x31, 0x97c1da87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0xd29813d0 # load x3 with 32 MSBs 0x00000000d29813d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d29813d0
sw x3, 0(x2) # store x3 (0xd29813d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d29813d0 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fnmadd.d f31, f24, f10, f17, dyn # perform operation
fnmadd.d f31, f24, f10, f17, rdn # perform operation
fnmadd.d f31, f24, f10, f17, rmm # perform operation
fnmadd.d f31, f24, f10, f17, rne # perform operation
fnmadd.d f31, f24, f10, f17, rtz # perform operation
fnmadd.d f31, f24, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f24, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f24, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xc000000000000000)
li x17, 0x38ab3127 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0x91280c6b # load x3 with 32 MSBs 0x0000000091280c6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091280c6b
sw x3, 0(x2) # store x3 (0x91280c6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000091280c6b from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fnmadd.d f17, f9, f11, f30, dyn # perform operation
fnmadd.d f17, f9, f11, f30, rdn # perform operation
fnmadd.d f17, f9, f11, f30, rmm # perform operation
fnmadd.d f17, f9, f11, f30, rne # perform operation
fnmadd.d f17, f9, f11, f30, rtz # perform operation
fnmadd.d f17, f9, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x10000000000000)
li x25, 0x94ef4e85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x6166eddf # load x3 with 32 MSBs 0x000000006166eddf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006166eddf
sw x3, 0(x2) # store x3 (0x6166eddf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000006166eddf from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fnmadd.d f25, f8, f22, f23, dyn # perform operation
fnmadd.d f25, f8, f22, f23, rdn # perform operation
fnmadd.d f25, f8, f22, f23, rmm # perform operation
fnmadd.d f25, f8, f22, f23, rne # perform operation
fnmadd.d f25, f8, f22, f23, rtz # perform operation
fnmadd.d f25, f8, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f8, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8010000000000000)
li x18, 0x908c0fc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0x69187aad # load x3 with 32 MSBs 0x0000000069187aad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000069187aad
sw x3, 0(x2) # store x3 (0x69187aad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000069187aad from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fnmadd.d f18, f24, f7, f14, dyn # perform operation
fnmadd.d f18, f24, f7, f14, rdn # perform operation
fnmadd.d f18, f24, f7, f14, rmm # perform operation
fnmadd.d f18, f24, f7, f14, rne # perform operation
fnmadd.d f18, f24, f7, f14, rtz # perform operation
fnmadd.d f18, f24, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f24, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f24, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f24, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f24, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f24, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fefffffffffffff)
li x17, 0x10e17981 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x413a5a43 # load x3 with 32 MSBs 0x00000000413a5a43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000413a5a43
sw x3, 0(x2) # store x3 (0x413a5a43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000413a5a43 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fnmadd.d f17, f11, f12, f21, dyn # perform operation
fnmadd.d f17, f11, f12, f21, rdn # perform operation
fnmadd.d f17, f11, f12, f21, rmm # perform operation
fnmadd.d f17, f11, f12, f21, rne # perform operation
fnmadd.d f17, f11, f12, f21, rtz # perform operation
fnmadd.d f17, f11, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xffefffffffffffff)
li x22, 0x4cf1e43c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x41af6a50 # load x3 with 32 MSBs 0x0000000041af6a50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041af6a50
sw x3, 0(x2) # store x3 (0x41af6a50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000041af6a50 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fnmadd.d f22, f12, f7, f11, dyn # perform operation
fnmadd.d f22, f12, f7, f11, rdn # perform operation
fnmadd.d f22, f12, f7, f11, rmm # perform operation
fnmadd.d f22, f12, f7, f11, rne # perform operation
fnmadd.d f22, f12, f7, f11, rtz # perform operation
fnmadd.d f22, f12, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f12, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfffffffffffff)
li x6, 0x76179acd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0xb49bbdc0 # load x3 with 32 MSBs 0x00000000b49bbdc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b49bbdc0
sw x3, 0(x2) # store x3 (0xb49bbdc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b49bbdc0 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fnmadd.d f6, f16, f23, f30, dyn # perform operation
fnmadd.d f6, f16, f23, f30, rdn # perform operation
fnmadd.d f6, f16, f23, f30, rmm # perform operation
fnmadd.d f6, f16, f23, f30, rne # perform operation
fnmadd.d f6, f16, f23, f30, rtz # perform operation
fnmadd.d f6, f16, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x800fffffffffffff)
li x9, 0x0fcd8442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0xd68305b9 # load x3 with 32 MSBs 0x00000000d68305b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d68305b9
sw x3, 0(x2) # store x3 (0xd68305b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d68305b9 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fnmadd.d f9, f22, f18, f29, dyn # perform operation
fnmadd.d f9, f22, f18, f29, rdn # perform operation
fnmadd.d f9, f22, f18, f29, rmm # perform operation
fnmadd.d f9, f22, f18, f29, rne # perform operation
fnmadd.d f9, f22, f18, f29, rtz # perform operation
fnmadd.d f9, f22, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f22, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f22, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000)
li x22, 0xc5b7e57e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xdc15cdfd # load x3 with 32 MSBs 0x00000000dc15cdfd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc15cdfd
sw x3, 0(x2) # store x3 (0xdc15cdfd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000dc15cdfd from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fnmadd.d f22, f15, f26, f9, dyn # perform operation
fnmadd.d f22, f15, f26, f9, rdn # perform operation
fnmadd.d f22, f15, f26, f9, rmm # perform operation
fnmadd.d f22, f15, f26, f9, rne # perform operation
fnmadd.d f22, f15, f26, f9, rtz # perform operation
fnmadd.d f22, f15, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f15, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f15, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8008000000000000)
li x23, 0xbd795f30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x4403db14 # load x3 with 32 MSBs 0x000000004403db14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004403db14
sw x3, 0(x2) # store x3 (0x4403db14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000004403db14 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fnmadd.d f23, f19, f26, f30, dyn # perform operation
fnmadd.d f23, f19, f26, f30, rdn # perform operation
fnmadd.d f23, f19, f26, f30, rmm # perform operation
fnmadd.d f23, f19, f26, f30, rne # perform operation
fnmadd.d f23, f19, f26, f30, rtz # perform operation
fnmadd.d f23, f19, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x1)
li x12, 0xee24966b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xb17f3a36 # load x3 with 32 MSBs 0x00000000b17f3a36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b17f3a36
sw x3, 0(x2) # store x3 (0xb17f3a36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b17f3a36 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fnmadd.d f12, f30, f26, f5, dyn # perform operation
fnmadd.d f12, f30, f26, f5, rdn # perform operation
fnmadd.d f12, f30, f26, f5, rmm # perform operation
fnmadd.d f12, f30, f26, f5, rne # perform operation
fnmadd.d f12, f30, f26, f5, rtz # perform operation
fnmadd.d f12, f30, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x8000000000000001)
li x11, 0xeb33b232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x7ef776dc # load x3 with 32 MSBs 0x000000007ef776dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ef776dc
sw x3, 0(x2) # store x3 (0x7ef776dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007ef776dc from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fnmadd.d f11, f16, f13, f25, dyn # perform operation
fnmadd.d f11, f16, f13, f25, rdn # perform operation
fnmadd.d f11, f16, f13, f25, rmm # perform operation
fnmadd.d f11, f16, f13, f25, rne # perform operation
fnmadd.d f11, f16, f13, f25, rtz # perform operation
fnmadd.d f11, f16, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f16, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f16, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000000)
li x15, 0x760f687d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x0bdcd4a3 # load x3 with 32 MSBs 0x000000000bdcd4a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bdcd4a3
sw x3, 0(x2) # store x3 (0x0bdcd4a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000000bdcd4a3 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fnmadd.d f15, f8, f6, f14, dyn # perform operation
fnmadd.d f15, f8, f6, f14, rdn # perform operation
fnmadd.d f15, f8, f6, f14, rmm # perform operation
fnmadd.d f15, f8, f6, f14, rne # perform operation
fnmadd.d f15, f8, f6, f14, rtz # perform operation
fnmadd.d f15, f8, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f8, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xfff0000000000000)
li x10, 0x9d9a8bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0xeff880e9 # load x3 with 32 MSBs 0x00000000eff880e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eff880e9
sw x3, 0(x2) # store x3 (0xeff880e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000eff880e9 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fnmadd.d f10, f3, f15, f7, dyn # perform operation
fnmadd.d f10, f3, f15, f7, rdn # perform operation
fnmadd.d f10, f3, f15, f7, rmm # perform operation
fnmadd.d f10, f3, f15, f7, rne # perform operation
fnmadd.d f10, f3, f15, f7, rtz # perform operation
fnmadd.d f10, f3, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f3, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff8000000000000)
li x1, 0xccd8b5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xe637e75e # load x3 with 32 MSBs 0x00000000e637e75e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e637e75e
sw x3, 0(x2) # store x3 (0xe637e75e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000e637e75e from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fnmadd.d f1, f6, f21, f27, dyn # perform operation
fnmadd.d f1, f6, f21, f27, rdn # perform operation
fnmadd.d f1, f6, f21, f27, rmm # perform operation
fnmadd.d f1, f6, f21, f27, rne # perform operation
fnmadd.d f1, f6, f21, f27, rtz # perform operation
fnmadd.d f1, f6, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f6, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7fffffffffffffff)
li x18, 0x3b55224c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
li x3, 0x64247a8c # load x3 with 32 MSBs 0x0000000064247a8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064247a8c
sw x3, 0(x2) # store x3 (0x64247a8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000064247a8c from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fnmadd.d f18, f31, f23, f27, dyn # perform operation
fnmadd.d f18, f31, f23, f27, rdn # perform operation
fnmadd.d f18, f31, f23, f27, rmm # perform operation
fnmadd.d f18, f31, f23, f27, rne # perform operation
fnmadd.d f18, f31, f23, f27, rtz # perform operation
fnmadd.d f18, f31, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f31, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff0000000000001)
li x15, 0x06e7b268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x828f6ea7 # load x3 with 32 MSBs 0x00000000828f6ea7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000828f6ea7
sw x3, 0(x2) # store x3 (0x828f6ea7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000828f6ea7 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fnmadd.d f15, f11, f16, f3, dyn # perform operation
fnmadd.d f15, f11, f16, f3, rdn # perform operation
fnmadd.d f15, f11, f16, f3, rmm # perform operation
fnmadd.d f15, f11, f16, f3, rne # perform operation
fnmadd.d f15, f11, f16, f3, rtz # perform operation
fnmadd.d f15, f11, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f11, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x7ff7ffffffffffff)
li x1, 0x7b7c0b7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
li x3, 0xb92d8843 # load x3 with 32 MSBs 0x00000000b92d8843
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b92d8843
sw x3, 0(x2) # store x3 (0xb92d8843) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b92d8843 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fnmadd.d f1, f24, f15, f2, dyn # perform operation
fnmadd.d f1, f24, f15, f2, rdn # perform operation
fnmadd.d f1, f24, f15, f2, rmm # perform operation
fnmadd.d f1, f24, f15, f2, rne # perform operation
fnmadd.d f1, f24, f15, f2, rtz # perform operation
fnmadd.d f1, f24, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f24, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0x5a392534a57711ad)
li x9, 0x392601dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x9eee85c9 # load x3 with 32 MSBs 0x000000009eee85c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009eee85c9
sw x3, 0(x2) # store x3 (0x9eee85c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009eee85c9 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fnmadd.d f9, f8, f18, f22, dyn # perform operation
fnmadd.d f9, f8, f18, f22, rdn # perform operation
fnmadd.d f9, f8, f18, f22, rmm # perform operation
fnmadd.d f9, f8, f18, f22, rne # perform operation
fnmadd.d f9, f8, f18, f22, rtz # perform operation
fnmadd.d f9, f8, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000000000000000 fs3 = 0xa6e895993737426c)
li x23, 0x90c55803 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x73ff2c68 # load x3 with 32 MSBs 0x0000000073ff2c68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073ff2c68
sw x3, 0(x2) # store x3 (0x73ff2c68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000073ff2c68 from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fnmadd.d f23, f4, f9, f20, dyn # perform operation
fnmadd.d f23, f4, f9, f20, rdn # perform operation
fnmadd.d f23, f4, f9, f20, rmm # perform operation
fnmadd.d f23, f4, f9, f20, rne # perform operation
fnmadd.d f23, f4, f9, f20, rtz # perform operation
fnmadd.d f23, f4, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f4, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f4, f9, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x0)
li x19, 0xb01e2f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
li x3, 0x3ab8758b # load x3 with 32 MSBs 0x000000003ab8758b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ab8758b
sw x3, 0(x2) # store x3 (0x3ab8758b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003ab8758b from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fnmadd.d f19, f12, f16, f6, dyn # perform operation
fnmadd.d f19, f12, f16, f6, rdn # perform operation
fnmadd.d f19, f12, f16, f6, rmm # perform operation
fnmadd.d f19, f12, f16, f6, rne # perform operation
fnmadd.d f19, f12, f16, f6, rtz # perform operation
fnmadd.d f19, f12, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f12, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000000)
li x9, 0xa0919084 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x498415af # load x3 with 32 MSBs 0x00000000498415af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000498415af
sw x3, 0(x2) # store x3 (0x498415af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000498415af from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fnmadd.d f9, f6, f21, f30, dyn # perform operation
fnmadd.d f9, f6, f21, f30, rdn # perform operation
fnmadd.d f9, f6, f21, f30, rmm # perform operation
fnmadd.d f9, f6, f21, f30, rne # perform operation
fnmadd.d f9, f6, f21, f30, rtz # perform operation
fnmadd.d f9, f6, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f6, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff0000000000000)
li x27, 0x5adc4c3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x2ea2a921 # load x3 with 32 MSBs 0x000000002ea2a921
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ea2a921
sw x3, 0(x2) # store x3 (0x2ea2a921) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002ea2a921 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fnmadd.d f27, f21, f8, f24, dyn # perform operation
fnmadd.d f27, f21, f8, f24, rdn # perform operation
fnmadd.d f27, f21, f8, f24, rmm # perform operation
fnmadd.d f27, f21, f8, f24, rne # perform operation
fnmadd.d f27, f21, f8, f24, rtz # perform operation
fnmadd.d f27, f21, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f21, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff0000000000000)
li x30, 0x80dcd1e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0xb50d453a # load x3 with 32 MSBs 0x00000000b50d453a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b50d453a
sw x3, 0(x2) # store x3 (0xb50d453a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b50d453a from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fnmadd.d f30, f31, f11, f14, dyn # perform operation
fnmadd.d f30, f31, f11, f14, rdn # perform operation
fnmadd.d f30, f31, f11, f14, rmm # perform operation
fnmadd.d f30, f31, f11, f14, rne # perform operation
fnmadd.d f30, f31, f11, f14, rtz # perform operation
fnmadd.d f30, f31, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f31, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f31, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x3ff8000000000000)
li x7, 0x4fec3755 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x3c25465e # load x3 with 32 MSBs 0x000000003c25465e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c25465e
sw x3, 0(x2) # store x3 (0x3c25465e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003c25465e from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fnmadd.d f7, f18, f25, f5, dyn # perform operation
fnmadd.d f7, f18, f25, f5, rdn # perform operation
fnmadd.d f7, f18, f25, f5, rmm # perform operation
fnmadd.d f7, f18, f25, f5, rne # perform operation
fnmadd.d f7, f18, f25, f5, rtz # perform operation
fnmadd.d f7, f18, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f18, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xbff8000000000000)
li x12, 0xc9f3a002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0x8388f297 # load x3 with 32 MSBs 0x000000008388f297
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008388f297
sw x3, 0(x2) # store x3 (0x8388f297) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008388f297 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fnmadd.d f12, f8, f31, f10, dyn # perform operation
fnmadd.d f12, f8, f31, f10, rdn # perform operation
fnmadd.d f12, f8, f31, f10, rmm # perform operation
fnmadd.d f12, f8, f31, f10, rne # perform operation
fnmadd.d f12, f8, f31, f10, rtz # perform operation
fnmadd.d f12, f8, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f8, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x4000000000000000)
li x19, 0xed746080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x32ca3dc0 # load x3 with 32 MSBs 0x0000000032ca3dc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032ca3dc0
sw x3, 0(x2) # store x3 (0x32ca3dc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000032ca3dc0 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fnmadd.d f19, f17, f8, f16, dyn # perform operation
fnmadd.d f19, f17, f8, f16, rdn # perform operation
fnmadd.d f19, f17, f8, f16, rmm # perform operation
fnmadd.d f19, f17, f8, f16, rne # perform operation
fnmadd.d f19, f17, f8, f16, rtz # perform operation
fnmadd.d f19, f17, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f17, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f17, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xc000000000000000)
li x31, 0xb714c2fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0xa22a0c85 # load x3 with 32 MSBs 0x00000000a22a0c85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a22a0c85
sw x3, 0(x2) # store x3 (0xa22a0c85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a22a0c85 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fnmadd.d f31, f26, f15, f30, dyn # perform operation
fnmadd.d f31, f26, f15, f30, rdn # perform operation
fnmadd.d f31, f26, f15, f30, rmm # perform operation
fnmadd.d f31, f26, f15, f30, rne # perform operation
fnmadd.d f31, f26, f15, f30, rtz # perform operation
fnmadd.d f31, f26, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f26, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f26, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x10000000000000)
li x28, 0xb427171f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0xe46cf1e0 # load x3 with 32 MSBs 0x00000000e46cf1e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e46cf1e0
sw x3, 0(x2) # store x3 (0xe46cf1e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e46cf1e0 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fnmadd.d f28, f3, f26, f19, dyn # perform operation
fnmadd.d f28, f3, f26, f19, rdn # perform operation
fnmadd.d f28, f3, f26, f19, rmm # perform operation
fnmadd.d f28, f3, f26, f19, rne # perform operation
fnmadd.d f28, f3, f26, f19, rtz # perform operation
fnmadd.d f28, f3, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f3, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f3, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8010000000000000)
li x4, 0xfd2b119b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x92fa0867 # load x3 with 32 MSBs 0x0000000092fa0867
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092fa0867
sw x3, 0(x2) # store x3 (0x92fa0867) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000092fa0867 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fnmadd.d f4, f26, f1, f22, dyn # perform operation
fnmadd.d f4, f26, f1, f22, rdn # perform operation
fnmadd.d f4, f26, f1, f22, rmm # perform operation
fnmadd.d f4, f26, f1, f22, rne # perform operation
fnmadd.d f4, f26, f1, f22, rtz # perform operation
fnmadd.d f4, f26, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f26, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f26, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fefffffffffffff)
li x22, 0xb25ee0df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x0d57d965 # load x3 with 32 MSBs 0x000000000d57d965
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d57d965
sw x3, 0(x2) # store x3 (0x0d57d965) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000d57d965 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fnmadd.d f22, f3, f21, f19, dyn # perform operation
fnmadd.d f22, f3, f21, f19, rdn # perform operation
fnmadd.d f22, f3, f21, f19, rmm # perform operation
fnmadd.d f22, f3, f21, f19, rne # perform operation
fnmadd.d f22, f3, f21, f19, rtz # perform operation
fnmadd.d f22, f3, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f3, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xffefffffffffffff)
li x24, 0x43ae731e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0x44f2a132 # load x3 with 32 MSBs 0x0000000044f2a132
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044f2a132
sw x3, 0(x2) # store x3 (0x44f2a132) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000044f2a132 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fnmadd.d f24, f17, f21, f22, dyn # perform operation
fnmadd.d f24, f17, f21, f22, rdn # perform operation
fnmadd.d f24, f17, f21, f22, rmm # perform operation
fnmadd.d f24, f17, f21, f22, rne # perform operation
fnmadd.d f24, f17, f21, f22, rtz # perform operation
fnmadd.d f24, f17, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f17, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfffffffffffff)
li x29, 0x2d20035b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0xa24873eb # load x3 with 32 MSBs 0x00000000a24873eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a24873eb
sw x3, 0(x2) # store x3 (0xa24873eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a24873eb from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmadd.d f29, f15, f27, f1, dyn # perform operation
fnmadd.d f29, f15, f27, f1, rdn # perform operation
fnmadd.d f29, f15, f27, f1, rmm # perform operation
fnmadd.d f29, f15, f27, f1, rne # perform operation
fnmadd.d f29, f15, f27, f1, rtz # perform operation
fnmadd.d f29, f15, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f15, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f15, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f15, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f15, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f15, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x800fffffffffffff)
li x27, 0x3383ca33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x2a8149a0 # load x3 with 32 MSBs 0x000000002a8149a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a8149a0
sw x3, 0(x2) # store x3 (0x2a8149a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000002a8149a0 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fnmadd.d f27, f26, f14, f24, dyn # perform operation
fnmadd.d f27, f26, f14, f24, rdn # perform operation
fnmadd.d f27, f26, f14, f24, rmm # perform operation
fnmadd.d f27, f26, f14, f24, rne # perform operation
fnmadd.d f27, f26, f14, f24, rtz # perform operation
fnmadd.d f27, f26, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000)
li x20, 0x867618b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0xcba699d2 # load x3 with 32 MSBs 0x00000000cba699d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cba699d2
sw x3, 0(x2) # store x3 (0xcba699d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000cba699d2 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fnmadd.d f20, f21, f27, f2, dyn # perform operation
fnmadd.d f20, f21, f27, f2, rdn # perform operation
fnmadd.d f20, f21, f27, f2, rmm # perform operation
fnmadd.d f20, f21, f27, f2, rne # perform operation
fnmadd.d f20, f21, f27, f2, rtz # perform operation
fnmadd.d f20, f21, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f21, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8008000000000000)
li x15, 0xbdac0391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x6e9c9aee # load x3 with 32 MSBs 0x000000006e9c9aee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e9c9aee
sw x3, 0(x2) # store x3 (0x6e9c9aee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006e9c9aee from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fnmadd.d f15, f1, f20, f12, dyn # perform operation
fnmadd.d f15, f1, f20, f12, rdn # perform operation
fnmadd.d f15, f1, f20, f12, rmm # perform operation
fnmadd.d f15, f1, f20, f12, rne # perform operation
fnmadd.d f15, f1, f20, f12, rtz # perform operation
fnmadd.d f15, f1, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f1, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f1, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x1)
li x25, 0x038d8c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0xd208cc2e # load x3 with 32 MSBs 0x00000000d208cc2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d208cc2e
sw x3, 0(x2) # store x3 (0xd208cc2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d208cc2e from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fnmadd.d f25, f7, f15, f13, dyn # perform operation
fnmadd.d f25, f7, f15, f13, rdn # perform operation
fnmadd.d f25, f7, f15, f13, rmm # perform operation
fnmadd.d f25, f7, f15, f13, rne # perform operation
fnmadd.d f25, f7, f15, f13, rtz # perform operation
fnmadd.d f25, f7, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f7, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f7, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f7, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f7, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f7, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x8000000000000001)
li x2, 0x1f024748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0xb76925f9 # load x3 with 32 MSBs 0x00000000b76925f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b76925f9
sw x3, 0(x2) # store x3 (0xb76925f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b76925f9 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
fnmadd.d f2, f13, f5, f4, dyn # perform operation
fnmadd.d f2, f13, f5, f4, rdn # perform operation
fnmadd.d f2, f13, f5, f4, rmm # perform operation
fnmadd.d f2, f13, f5, f4, rne # perform operation
fnmadd.d f2, f13, f5, f4, rtz # perform operation
fnmadd.d f2, f13, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000000)
li x29, 0x27b9e5b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xa6bea718 # load x3 with 32 MSBs 0x00000000a6bea718
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6bea718
sw x3, 0(x2) # store x3 (0xa6bea718) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a6bea718 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f29, f27, f24, f30, dyn # perform operation
fnmadd.d f29, f27, f24, f30, rdn # perform operation
fnmadd.d f29, f27, f24, f30, rmm # perform operation
fnmadd.d f29, f27, f24, f30, rne # perform operation
fnmadd.d f29, f27, f24, f30, rtz # perform operation
fnmadd.d f29, f27, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f27, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xfff0000000000000)
li x17, 0x1a5701ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0xb346115a # load x3 with 32 MSBs 0x00000000b346115a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b346115a
sw x3, 0(x2) # store x3 (0xb346115a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000b346115a from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fnmadd.d f17, f7, f19, f3, dyn # perform operation
fnmadd.d f17, f7, f19, f3, rdn # perform operation
fnmadd.d f17, f7, f19, f3, rmm # perform operation
fnmadd.d f17, f7, f19, f3, rne # perform operation
fnmadd.d f17, f7, f19, f3, rtz # perform operation
fnmadd.d f17, f7, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f7, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff8000000000000)
li x21, 0x1147cb1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x14d94f2e # load x3 with 32 MSBs 0x0000000014d94f2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014d94f2e
sw x3, 0(x2) # store x3 (0x14d94f2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000014d94f2e from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fnmadd.d f21, f14, f24, f23, dyn # perform operation
fnmadd.d f21, f14, f24, f23, rdn # perform operation
fnmadd.d f21, f14, f24, f23, rmm # perform operation
fnmadd.d f21, f14, f24, f23, rne # perform operation
fnmadd.d f21, f14, f24, f23, rtz # perform operation
fnmadd.d f21, f14, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f14, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f14, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f14, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f14, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f14, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7fffffffffffffff)
li x19, 0x3db013ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xa6d376e5 # load x3 with 32 MSBs 0x00000000a6d376e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6d376e5
sw x3, 0(x2) # store x3 (0xa6d376e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a6d376e5 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
fnmadd.d f19, f17, f2, f20, dyn # perform operation
fnmadd.d f19, f17, f2, f20, rdn # perform operation
fnmadd.d f19, f17, f2, f20, rmm # perform operation
fnmadd.d f19, f17, f2, f20, rne # perform operation
fnmadd.d f19, f17, f2, f20, rtz # perform operation
fnmadd.d f19, f17, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f17, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff0000000000001)
li x4, 0x2203dbbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0xd1751bed # load x3 with 32 MSBs 0x00000000d1751bed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1751bed
sw x3, 0(x2) # store x3 (0xd1751bed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d1751bed from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f4, f8, f14, f5, dyn # perform operation
fnmadd.d f4, f8, f14, f5, rdn # perform operation
fnmadd.d f4, f8, f14, f5, rmm # perform operation
fnmadd.d f4, f8, f14, f5, rne # perform operation
fnmadd.d f4, f8, f14, f5, rtz # perform operation
fnmadd.d f4, f8, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f8, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x7ff7ffffffffffff)
li x22, 0x10492220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0xd93d5b9d # load x3 with 32 MSBs 0x00000000d93d5b9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d93d5b9d
sw x3, 0(x2) # store x3 (0xd93d5b9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d93d5b9d from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f22, f16, f8, f25, dyn # perform operation
fnmadd.d f22, f16, f8, f25, rdn # perform operation
fnmadd.d f22, f16, f8, f25, rmm # perform operation
fnmadd.d f22, f16, f8, f25, rne # perform operation
fnmadd.d f22, f16, f8, f25, rtz # perform operation
fnmadd.d f22, f16, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f16, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f16, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0x5a392534a57711ad)
li x5, 0xee7e4d2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x3c206848 # load x3 with 32 MSBs 0x000000003c206848
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c206848
sw x3, 0(x2) # store x3 (0x3c206848) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003c206848 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fnmadd.d f5, f1, f26, f6, dyn # perform operation
fnmadd.d f5, f1, f26, f6, rdn # perform operation
fnmadd.d f5, f1, f26, f6, rmm # perform operation
fnmadd.d f5, f1, f26, f6, rne # perform operation
fnmadd.d f5, f1, f26, f6, rtz # perform operation
fnmadd.d f5, f1, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x10000000000000 fs3 = 0xa6e895993737426c)
li x16, 0x1869f779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0x308f14cf # load x3 with 32 MSBs 0x00000000308f14cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000308f14cf
sw x3, 0(x2) # store x3 (0x308f14cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000308f14cf from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
fnmadd.d f16, f5, f26, f18, dyn # perform operation
fnmadd.d f16, f5, f26, f18, rdn # perform operation
fnmadd.d f16, f5, f26, f18, rmm # perform operation
fnmadd.d f16, f5, f26, f18, rne # perform operation
fnmadd.d f16, f5, f26, f18, rtz # perform operation
fnmadd.d f16, f5, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f5, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x0)
li x6, 0x06f02e27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x4e6ffeae # load x3 with 32 MSBs 0x000000004e6ffeae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e6ffeae
sw x3, 0(x2) # store x3 (0x4e6ffeae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004e6ffeae from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fnmadd.d f6, f25, f24, f19, dyn # perform operation
fnmadd.d f6, f25, f24, f19, rdn # perform operation
fnmadd.d f6, f25, f24, f19, rmm # perform operation
fnmadd.d f6, f25, f24, f19, rne # perform operation
fnmadd.d f6, f25, f24, f19, rtz # perform operation
fnmadd.d f6, f25, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f25, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f25, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f25, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f25, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f25, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000000)
li x23, 0xa3b4ae30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x058c36e7 # load x3 with 32 MSBs 0x00000000058c36e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000058c36e7
sw x3, 0(x2) # store x3 (0x058c36e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000058c36e7 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fnmadd.d f23, f12, f26, f25, dyn # perform operation
fnmadd.d f23, f12, f26, f25, rdn # perform operation
fnmadd.d f23, f12, f26, f25, rmm # perform operation
fnmadd.d f23, f12, f26, f25, rne # perform operation
fnmadd.d f23, f12, f26, f25, rtz # perform operation
fnmadd.d f23, f12, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff0000000000000)
li x13, 0x17df8ab2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0xb0fb777c # load x3 with 32 MSBs 0x00000000b0fb777c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0fb777c
sw x3, 0(x2) # store x3 (0xb0fb777c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b0fb777c from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fnmadd.d f13, f1, f4, f30, dyn # perform operation
fnmadd.d f13, f1, f4, f30, rdn # perform operation
fnmadd.d f13, f1, f4, f30, rmm # perform operation
fnmadd.d f13, f1, f4, f30, rne # perform operation
fnmadd.d f13, f1, f4, f30, rtz # perform operation
fnmadd.d f13, f1, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f1, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff0000000000000)
li x30, 0x01bc354a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0xc0e2e9d7 # load x3 with 32 MSBs 0x00000000c0e2e9d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0e2e9d7
sw x3, 0(x2) # store x3 (0xc0e2e9d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c0e2e9d7 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fnmadd.d f30, f10, f13, f25, dyn # perform operation
fnmadd.d f30, f10, f13, f25, rdn # perform operation
fnmadd.d f30, f10, f13, f25, rmm # perform operation
fnmadd.d f30, f10, f13, f25, rne # perform operation
fnmadd.d f30, f10, f13, f25, rtz # perform operation
fnmadd.d f30, f10, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f10, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x3ff8000000000000)
li x20, 0x11793351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0xd50824df # load x3 with 32 MSBs 0x00000000d50824df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d50824df
sw x3, 0(x2) # store x3 (0xd50824df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d50824df from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fnmadd.d f20, f29, f7, f1, dyn # perform operation
fnmadd.d f20, f29, f7, f1, rdn # perform operation
fnmadd.d f20, f29, f7, f1, rmm # perform operation
fnmadd.d f20, f29, f7, f1, rne # perform operation
fnmadd.d f20, f29, f7, f1, rtz # perform operation
fnmadd.d f20, f29, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f29, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f29, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f29, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f29, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f29, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xbff8000000000000)
li x17, 0x436b5f60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0xcc4da388 # load x3 with 32 MSBs 0x00000000cc4da388
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc4da388
sw x3, 0(x2) # store x3 (0xcc4da388) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cc4da388 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fnmadd.d f17, f31, f25, f10, dyn # perform operation
fnmadd.d f17, f31, f25, f10, rdn # perform operation
fnmadd.d f17, f31, f25, f10, rmm # perform operation
fnmadd.d f17, f31, f25, f10, rne # perform operation
fnmadd.d f17, f31, f25, f10, rtz # perform operation
fnmadd.d f17, f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f31, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x4000000000000000)
li x18, 0x9ce0af60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
li x3, 0x88d4a8ef # load x3 with 32 MSBs 0x0000000088d4a8ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088d4a8ef
sw x3, 0(x2) # store x3 (0x88d4a8ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000088d4a8ef from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fnmadd.d f18, f12, f31, f20, dyn # perform operation
fnmadd.d f18, f12, f31, f20, rdn # perform operation
fnmadd.d f18, f12, f31, f20, rmm # perform operation
fnmadd.d f18, f12, f31, f20, rne # perform operation
fnmadd.d f18, f12, f31, f20, rtz # perform operation
fnmadd.d f18, f12, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f12, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f12, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f12, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f12, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f12, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xc000000000000000)
li x20, 0xfc1e597c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0xdf663f5a # load x3 with 32 MSBs 0x00000000df663f5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df663f5a
sw x3, 0(x2) # store x3 (0xdf663f5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000df663f5a from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fnmadd.d f20, f24, f16, f10, dyn # perform operation
fnmadd.d f20, f24, f16, f10, rdn # perform operation
fnmadd.d f20, f24, f16, f10, rmm # perform operation
fnmadd.d f20, f24, f16, f10, rne # perform operation
fnmadd.d f20, f24, f16, f10, rtz # perform operation
fnmadd.d f20, f24, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f24, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f24, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f24, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f24, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f24, f16, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x10000000000000)
li x1, 0x0507c3ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xa205c0d5 # load x3 with 32 MSBs 0x00000000a205c0d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a205c0d5
sw x3, 0(x2) # store x3 (0xa205c0d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a205c0d5 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fnmadd.d f1, f27, f13, f20, dyn # perform operation
fnmadd.d f1, f27, f13, f20, rdn # perform operation
fnmadd.d f1, f27, f13, f20, rmm # perform operation
fnmadd.d f1, f27, f13, f20, rne # perform operation
fnmadd.d f1, f27, f13, f20, rtz # perform operation
fnmadd.d f1, f27, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f27, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f27, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f27, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f27, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f27, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8010000000000000)
li x5, 0x9aafe6c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0xbeedcaaf # load x3 with 32 MSBs 0x00000000beedcaaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000beedcaaf
sw x3, 0(x2) # store x3 (0xbeedcaaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000beedcaaf from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
fnmadd.d f5, f22, f31, f12, dyn # perform operation
fnmadd.d f5, f22, f31, f12, rdn # perform operation
fnmadd.d f5, f22, f31, f12, rmm # perform operation
fnmadd.d f5, f22, f31, f12, rne # perform operation
fnmadd.d f5, f22, f31, f12, rtz # perform operation
fnmadd.d f5, f22, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f22, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fefffffffffffff)
li x29, 0xecba3d2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
li x3, 0xdca740a8 # load x3 with 32 MSBs 0x00000000dca740a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dca740a8
sw x3, 0(x2) # store x3 (0xdca740a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dca740a8 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fnmadd.d f29, f9, f13, f11, dyn # perform operation
fnmadd.d f29, f9, f13, f11, rdn # perform operation
fnmadd.d f29, f9, f13, f11, rmm # perform operation
fnmadd.d f29, f9, f13, f11, rne # perform operation
fnmadd.d f29, f9, f13, f11, rtz # perform operation
fnmadd.d f29, f9, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f9, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xffefffffffffffff)
li x16, 0xb72b376a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0xc56ce2e6 # load x3 with 32 MSBs 0x00000000c56ce2e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c56ce2e6
sw x3, 0(x2) # store x3 (0xc56ce2e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c56ce2e6 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fnmadd.d f16, f1, f26, f21, dyn # perform operation
fnmadd.d f16, f1, f26, f21, rdn # perform operation
fnmadd.d f16, f1, f26, f21, rmm # perform operation
fnmadd.d f16, f1, f26, f21, rne # perform operation
fnmadd.d f16, f1, f26, f21, rtz # perform operation
fnmadd.d f16, f1, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f1, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f1, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfffffffffffff)
li x17, 0x18090a61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0xe3b2e24c # load x3 with 32 MSBs 0x00000000e3b2e24c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e3b2e24c
sw x3, 0(x2) # store x3 (0xe3b2e24c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e3b2e24c from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fnmadd.d f17, f20, f22, f31, dyn # perform operation
fnmadd.d f17, f20, f22, f31, rdn # perform operation
fnmadd.d f17, f20, f22, f31, rmm # perform operation
fnmadd.d f17, f20, f22, f31, rne # perform operation
fnmadd.d f17, f20, f22, f31, rtz # perform operation
fnmadd.d f17, f20, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f20, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f20, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x800fffffffffffff)
li x20, 0x16bc83b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0x406cb8ba # load x3 with 32 MSBs 0x00000000406cb8ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000406cb8ba
sw x3, 0(x2) # store x3 (0x406cb8ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000406cb8ba from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fnmadd.d f20, f10, f24, f9, dyn # perform operation
fnmadd.d f20, f10, f24, f9, rdn # perform operation
fnmadd.d f20, f10, f24, f9, rmm # perform operation
fnmadd.d f20, f10, f24, f9, rne # perform operation
fnmadd.d f20, f10, f24, f9, rtz # perform operation
fnmadd.d f20, f10, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f10, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f10, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f10, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f10, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f10, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000)
li x17, 0x135ef491 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xe93eecf5 # load x3 with 32 MSBs 0x00000000e93eecf5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e93eecf5
sw x3, 0(x2) # store x3 (0xe93eecf5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e93eecf5 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fnmadd.d f17, f25, f8, f30, dyn # perform operation
fnmadd.d f17, f25, f8, f30, rdn # perform operation
fnmadd.d f17, f25, f8, f30, rmm # perform operation
fnmadd.d f17, f25, f8, f30, rne # perform operation
fnmadd.d f17, f25, f8, f30, rtz # perform operation
fnmadd.d f17, f25, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f25, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f25, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f25, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f25, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f25, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8008000000000000)
li x28, 0x627e11ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
li x3, 0xbdccd9c1 # load x3 with 32 MSBs 0x00000000bdccd9c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bdccd9c1
sw x3, 0(x2) # store x3 (0xbdccd9c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000bdccd9c1 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fnmadd.d f28, f16, f29, f26, dyn # perform operation
fnmadd.d f28, f16, f29, f26, rdn # perform operation
fnmadd.d f28, f16, f29, f26, rmm # perform operation
fnmadd.d f28, f16, f29, f26, rne # perform operation
fnmadd.d f28, f16, f29, f26, rtz # perform operation
fnmadd.d f28, f16, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f16, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f16, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f16, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f16, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f16, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x1)
li x11, 0x2725d07d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x137c66c4 # load x3 with 32 MSBs 0x00000000137c66c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000137c66c4
sw x3, 0(x2) # store x3 (0x137c66c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000137c66c4 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fnmadd.d f11, f31, f25, f8, dyn # perform operation
fnmadd.d f11, f31, f25, f8, rdn # perform operation
fnmadd.d f11, f31, f25, f8, rmm # perform operation
fnmadd.d f11, f31, f25, f8, rne # perform operation
fnmadd.d f11, f31, f25, f8, rtz # perform operation
fnmadd.d f11, f31, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f31, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f31, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f31, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f31, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f31, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x8000000000000001)
li x8, 0x241207a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x642bcb7f # load x3 with 32 MSBs 0x00000000642bcb7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000642bcb7f
sw x3, 0(x2) # store x3 (0x642bcb7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000642bcb7f from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fnmadd.d f8, f7, f12, f26, dyn # perform operation
fnmadd.d f8, f7, f12, f26, rdn # perform operation
fnmadd.d f8, f7, f12, f26, rmm # perform operation
fnmadd.d f8, f7, f12, f26, rne # perform operation
fnmadd.d f8, f7, f12, f26, rtz # perform operation
fnmadd.d f8, f7, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f7, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f7, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f7, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f7, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f7, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000000)
li x9, 0xdd823576 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0xe307f2d3 # load x3 with 32 MSBs 0x00000000e307f2d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e307f2d3
sw x3, 0(x2) # store x3 (0xe307f2d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e307f2d3 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fnmadd.d f9, f1, f26, f30, dyn # perform operation
fnmadd.d f9, f1, f26, f30, rdn # perform operation
fnmadd.d f9, f1, f26, f30, rmm # perform operation
fnmadd.d f9, f1, f26, f30, rne # perform operation
fnmadd.d f9, f1, f26, f30, rtz # perform operation
fnmadd.d f9, f1, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f1, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xfff0000000000000)
li x18, 0xf8362055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x2f33967f # load x3 with 32 MSBs 0x000000002f33967f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f33967f
sw x3, 0(x2) # store x3 (0x2f33967f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000002f33967f from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fnmadd.d f18, f29, f10, f9, dyn # perform operation
fnmadd.d f18, f29, f10, f9, rdn # perform operation
fnmadd.d f18, f29, f10, f9, rmm # perform operation
fnmadd.d f18, f29, f10, f9, rne # perform operation
fnmadd.d f18, f29, f10, f9, rtz # perform operation
fnmadd.d f18, f29, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff8000000000000)
li x27, 0x286c49a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x1b458a54 # load x3 with 32 MSBs 0x000000001b458a54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b458a54
sw x3, 0(x2) # store x3 (0x1b458a54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001b458a54 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fnmadd.d f27, f19, f4, f14, dyn # perform operation
fnmadd.d f27, f19, f4, f14, rdn # perform operation
fnmadd.d f27, f19, f4, f14, rmm # perform operation
fnmadd.d f27, f19, f4, f14, rne # perform operation
fnmadd.d f27, f19, f4, f14, rtz # perform operation
fnmadd.d f27, f19, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f19, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f19, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f19, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f19, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f19, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7fffffffffffffff)
li x2, 0xa03452bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xe2e73603 # load x3 with 32 MSBs 0x00000000e2e73603
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2e73603
sw x3, 0(x2) # store x3 (0xe2e73603) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e2e73603 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fnmadd.d f2, f25, f10, f9, dyn # perform operation
fnmadd.d f2, f25, f10, f9, rdn # perform operation
fnmadd.d f2, f25, f10, f9, rmm # perform operation
fnmadd.d f2, f25, f10, f9, rne # perform operation
fnmadd.d f2, f25, f10, f9, rtz # perform operation
fnmadd.d f2, f25, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f25, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff0000000000001)
li x8, 0x3e309b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0xa3b81e30 # load x3 with 32 MSBs 0x00000000a3b81e30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3b81e30
sw x3, 0(x2) # store x3 (0xa3b81e30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a3b81e30 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fnmadd.d f8, f13, f24, f23, dyn # perform operation
fnmadd.d f8, f13, f24, f23, rdn # perform operation
fnmadd.d f8, f13, f24, f23, rmm # perform operation
fnmadd.d f8, f13, f24, f23, rne # perform operation
fnmadd.d f8, f13, f24, f23, rtz # perform operation
fnmadd.d f8, f13, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f13, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f13, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f13, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f13, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f13, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x7ff7ffffffffffff)
li x21, 0x636aea4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x635017f0 # load x3 with 32 MSBs 0x00000000635017f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000635017f0
sw x3, 0(x2) # store x3 (0x635017f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000635017f0 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fnmadd.d f21, f20, f23, f16, dyn # perform operation
fnmadd.d f21, f20, f23, f16, rdn # perform operation
fnmadd.d f21, f20, f23, f16, rmm # perform operation
fnmadd.d f21, f20, f23, f16, rne # perform operation
fnmadd.d f21, f20, f23, f16, rtz # perform operation
fnmadd.d f21, f20, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f20, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0x5a392534a57711ad)
li x5, 0xc2a1095e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x3c9cec84 # load x3 with 32 MSBs 0x000000003c9cec84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c9cec84
sw x3, 0(x2) # store x3 (0x3c9cec84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003c9cec84 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fnmadd.d f5, f27, f23, f20, dyn # perform operation
fnmadd.d f5, f27, f23, f20, rdn # perform operation
fnmadd.d f5, f27, f23, f20, rmm # perform operation
fnmadd.d f5, f27, f23, f20, rne # perform operation
fnmadd.d f5, f27, f23, f20, rtz # perform operation
fnmadd.d f5, f27, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f27, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8010000000000000 fs3 = 0xa6e895993737426c)
li x15, 0x6b4d1897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x5431e095 # load x3 with 32 MSBs 0x000000005431e095
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005431e095
sw x3, 0(x2) # store x3 (0x5431e095) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005431e095 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fnmadd.d f15, f24, f7, f20, dyn # perform operation
fnmadd.d f15, f24, f7, f20, rdn # perform operation
fnmadd.d f15, f24, f7, f20, rmm # perform operation
fnmadd.d f15, f24, f7, f20, rne # perform operation
fnmadd.d f15, f24, f7, f20, rtz # perform operation
fnmadd.d f15, f24, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f24, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x0)
li x20, 0x337f270d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x2092d9ca # load x3 with 32 MSBs 0x000000002092d9ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002092d9ca
sw x3, 0(x2) # store x3 (0x2092d9ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002092d9ca from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
fnmadd.d f20, f7, f18, f25, dyn # perform operation
fnmadd.d f20, f7, f18, f25, rdn # perform operation
fnmadd.d f20, f7, f18, f25, rmm # perform operation
fnmadd.d f20, f7, f18, f25, rne # perform operation
fnmadd.d f20, f7, f18, f25, rtz # perform operation
fnmadd.d f20, f7, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f7, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f7, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000000)
li x25, 0xcca1a1cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00a11851 # load x3 with 32 MSBs 0x0000000000a11851
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000a11851
sw x3, 0(x2) # store x3 (0x00a11851) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000a11851 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
fnmadd.d f25, f23, f29, f3, dyn # perform operation
fnmadd.d f25, f23, f29, f3, rdn # perform operation
fnmadd.d f25, f23, f29, f3, rmm # perform operation
fnmadd.d f25, f23, f29, f3, rne # perform operation
fnmadd.d f25, f23, f29, f3, rtz # perform operation
fnmadd.d f25, f23, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f23, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f23, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff0000000000000)
li x18, 0x5f1f1b65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0xb3f3355b # load x3 with 32 MSBs 0x00000000b3f3355b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3f3355b
sw x3, 0(x2) # store x3 (0xb3f3355b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b3f3355b from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fnmadd.d f18, f14, f1, f8, dyn # perform operation
fnmadd.d f18, f14, f1, f8, rdn # perform operation
fnmadd.d f18, f14, f1, f8, rmm # perform operation
fnmadd.d f18, f14, f1, f8, rne # perform operation
fnmadd.d f18, f14, f1, f8, rtz # perform operation
fnmadd.d f18, f14, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f14, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff0000000000000)
li x14, 0xd91687e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xb173a2a7 # load x3 with 32 MSBs 0x00000000b173a2a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b173a2a7
sw x3, 0(x2) # store x3 (0xb173a2a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b173a2a7 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fnmadd.d f14, f5, f25, f9, dyn # perform operation
fnmadd.d f14, f5, f25, f9, rdn # perform operation
fnmadd.d f14, f5, f25, f9, rmm # perform operation
fnmadd.d f14, f5, f25, f9, rne # perform operation
fnmadd.d f14, f5, f25, f9, rtz # perform operation
fnmadd.d f14, f5, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f5, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f5, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f5, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f5, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f5, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x3ff8000000000000)
li x16, 0x18acf9d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0xcfdaf4f0 # load x3 with 32 MSBs 0x00000000cfdaf4f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfdaf4f0
sw x3, 0(x2) # store x3 (0xcfdaf4f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cfdaf4f0 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fnmadd.d f16, f24, f28, f12, dyn # perform operation
fnmadd.d f16, f24, f28, f12, rdn # perform operation
fnmadd.d f16, f24, f28, f12, rmm # perform operation
fnmadd.d f16, f24, f28, f12, rne # perform operation
fnmadd.d f16, f24, f28, f12, rtz # perform operation
fnmadd.d f16, f24, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f24, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f24, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f24, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f24, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f24, f28, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xbff8000000000000)
li x7, 0xb4fb404f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x101f0599 # load x3 with 32 MSBs 0x00000000101f0599
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000101f0599
sw x3, 0(x2) # store x3 (0x101f0599) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000101f0599 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmadd.d f7, f3, f1, f12, dyn # perform operation
fnmadd.d f7, f3, f1, f12, rdn # perform operation
fnmadd.d f7, f3, f1, f12, rmm # perform operation
fnmadd.d f7, f3, f1, f12, rne # perform operation
fnmadd.d f7, f3, f1, f12, rtz # perform operation
fnmadd.d f7, f3, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f3, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x4000000000000000)
li x12, 0x85104bd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x0e9d1b6c # load x3 with 32 MSBs 0x000000000e9d1b6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e9d1b6c
sw x3, 0(x2) # store x3 (0x0e9d1b6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000e9d1b6c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fnmadd.d f12, f18, f22, f14, dyn # perform operation
fnmadd.d f12, f18, f22, f14, rdn # perform operation
fnmadd.d f12, f18, f22, f14, rmm # perform operation
fnmadd.d f12, f18, f22, f14, rne # perform operation
fnmadd.d f12, f18, f22, f14, rtz # perform operation
fnmadd.d f12, f18, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xc000000000000000)
li x9, 0xbcab26f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x1526b972 # load x3 with 32 MSBs 0x000000001526b972
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001526b972
sw x3, 0(x2) # store x3 (0x1526b972) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001526b972 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fnmadd.d f9, f13, f12, f31, dyn # perform operation
fnmadd.d f9, f13, f12, f31, rdn # perform operation
fnmadd.d f9, f13, f12, f31, rmm # perform operation
fnmadd.d f9, f13, f12, f31, rne # perform operation
fnmadd.d f9, f13, f12, f31, rtz # perform operation
fnmadd.d f9, f13, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f13, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f13, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x10000000000000)
li x24, 0xec610baf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x3d920faa # load x3 with 32 MSBs 0x000000003d920faa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d920faa
sw x3, 0(x2) # store x3 (0x3d920faa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000003d920faa from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fnmadd.d f24, f26, f17, f18, dyn # perform operation
fnmadd.d f24, f26, f17, f18, rdn # perform operation
fnmadd.d f24, f26, f17, f18, rmm # perform operation
fnmadd.d f24, f26, f17, f18, rne # perform operation
fnmadd.d f24, f26, f17, f18, rtz # perform operation
fnmadd.d f24, f26, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f26, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f26, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f26, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f26, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f26, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8010000000000000)
li x6, 0x2326fafc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x49f819c2 # load x3 with 32 MSBs 0x0000000049f819c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049f819c2
sw x3, 0(x2) # store x3 (0x49f819c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000049f819c2 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fnmadd.d f6, f9, f4, f2, dyn # perform operation
fnmadd.d f6, f9, f4, f2, rdn # perform operation
fnmadd.d f6, f9, f4, f2, rmm # perform operation
fnmadd.d f6, f9, f4, f2, rne # perform operation
fnmadd.d f6, f9, f4, f2, rtz # perform operation
fnmadd.d f6, f9, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f9, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f9, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f9, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f9, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f9, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fefffffffffffff)
li x17, 0xc9000aac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x50af4c1f # load x3 with 32 MSBs 0x0000000050af4c1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050af4c1f
sw x3, 0(x2) # store x3 (0x50af4c1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000050af4c1f from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmadd.d f17, f10, f29, f26, dyn # perform operation
fnmadd.d f17, f10, f29, f26, rdn # perform operation
fnmadd.d f17, f10, f29, f26, rmm # perform operation
fnmadd.d f17, f10, f29, f26, rne # perform operation
fnmadd.d f17, f10, f29, f26, rtz # perform operation
fnmadd.d f17, f10, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xffefffffffffffff)
li x17, 0x401ff0df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
li x3, 0x5c65482a # load x3 with 32 MSBs 0x000000005c65482a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c65482a
sw x3, 0(x2) # store x3 (0x5c65482a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005c65482a from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fnmadd.d f17, f22, f25, f24, dyn # perform operation
fnmadd.d f17, f22, f25, f24, rdn # perform operation
fnmadd.d f17, f22, f25, f24, rmm # perform operation
fnmadd.d f17, f22, f25, f24, rne # perform operation
fnmadd.d f17, f22, f25, f24, rtz # perform operation
fnmadd.d f17, f22, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f22, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f22, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfffffffffffff)
li x11, 0x2a92cf47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x636e8710 # load x3 with 32 MSBs 0x00000000636e8710
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000636e8710
sw x3, 0(x2) # store x3 (0x636e8710) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000636e8710 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fnmadd.d f11, f17, f10, f25, dyn # perform operation
fnmadd.d f11, f17, f10, f25, rdn # perform operation
fnmadd.d f11, f17, f10, f25, rmm # perform operation
fnmadd.d f11, f17, f10, f25, rne # perform operation
fnmadd.d f11, f17, f10, f25, rtz # perform operation
fnmadd.d f11, f17, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f10, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x800fffffffffffff)
li x20, 0x870df228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0x9dbf23a9 # load x3 with 32 MSBs 0x000000009dbf23a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dbf23a9
sw x3, 0(x2) # store x3 (0x9dbf23a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009dbf23a9 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fnmadd.d f20, f28, f13, f9, dyn # perform operation
fnmadd.d f20, f28, f13, f9, rdn # perform operation
fnmadd.d f20, f28, f13, f9, rmm # perform operation
fnmadd.d f20, f28, f13, f9, rne # perform operation
fnmadd.d f20, f28, f13, f9, rtz # perform operation
fnmadd.d f20, f28, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f28, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f28, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000)
li x8, 0xe5ae716c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x2e6190d7 # load x3 with 32 MSBs 0x000000002e6190d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e6190d7
sw x3, 0(x2) # store x3 (0x2e6190d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000002e6190d7 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fnmadd.d f8, f4, f24, f27, dyn # perform operation
fnmadd.d f8, f4, f24, f27, rdn # perform operation
fnmadd.d f8, f4, f24, f27, rmm # perform operation
fnmadd.d f8, f4, f24, f27, rne # perform operation
fnmadd.d f8, f4, f24, f27, rtz # perform operation
fnmadd.d f8, f4, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f4, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f4, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f4, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f4, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f4, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8008000000000000)
li x25, 0x1c1f91b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0xf6a12223 # load x3 with 32 MSBs 0x00000000f6a12223
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6a12223
sw x3, 0(x2) # store x3 (0xf6a12223) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f6a12223 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fnmadd.d f25, f13, f23, f22, dyn # perform operation
fnmadd.d f25, f13, f23, f22, rdn # perform operation
fnmadd.d f25, f13, f23, f22, rmm # perform operation
fnmadd.d f25, f13, f23, f22, rne # perform operation
fnmadd.d f25, f13, f23, f22, rtz # perform operation
fnmadd.d f25, f13, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f13, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x1)
li x23, 0xe02fce74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x843d71d0 # load x3 with 32 MSBs 0x00000000843d71d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000843d71d0
sw x3, 0(x2) # store x3 (0x843d71d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000843d71d0 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fnmadd.d f23, f26, f19, f7, dyn # perform operation
fnmadd.d f23, f26, f19, f7, rdn # perform operation
fnmadd.d f23, f26, f19, f7, rmm # perform operation
fnmadd.d f23, f26, f19, f7, rne # perform operation
fnmadd.d f23, f26, f19, f7, rtz # perform operation
fnmadd.d f23, f26, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f26, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x8000000000000001)
li x22, 0xf44cee19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x7edb4bbd # load x3 with 32 MSBs 0x000000007edb4bbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007edb4bbd
sw x3, 0(x2) # store x3 (0x7edb4bbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000007edb4bbd from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fnmadd.d f22, f5, f15, f12, dyn # perform operation
fnmadd.d f22, f5, f15, f12, rdn # perform operation
fnmadd.d f22, f5, f15, f12, rmm # perform operation
fnmadd.d f22, f5, f15, f12, rne # perform operation
fnmadd.d f22, f5, f15, f12, rtz # perform operation
fnmadd.d f22, f5, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f5, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f5, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f5, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f5, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f5, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000000)
li x4, 0x9be05f5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0xda6cb134 # load x3 with 32 MSBs 0x00000000da6cb134
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da6cb134
sw x3, 0(x2) # store x3 (0xda6cb134) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000da6cb134 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fnmadd.d f4, f3, f28, f17, dyn # perform operation
fnmadd.d f4, f3, f28, f17, rdn # perform operation
fnmadd.d f4, f3, f28, f17, rmm # perform operation
fnmadd.d f4, f3, f28, f17, rne # perform operation
fnmadd.d f4, f3, f28, f17, rtz # perform operation
fnmadd.d f4, f3, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f3, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xfff0000000000000)
li x12, 0x3e44f81f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x9457b946 # load x3 with 32 MSBs 0x000000009457b946
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009457b946
sw x3, 0(x2) # store x3 (0x9457b946) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009457b946 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fnmadd.d f12, f2, f24, f11, dyn # perform operation
fnmadd.d f12, f2, f24, f11, rdn # perform operation
fnmadd.d f12, f2, f24, f11, rmm # perform operation
fnmadd.d f12, f2, f24, f11, rne # perform operation
fnmadd.d f12, f2, f24, f11, rtz # perform operation
fnmadd.d f12, f2, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f2, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f2, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff8000000000000)
li x28, 0xb89a91b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0x4e980d29 # load x3 with 32 MSBs 0x000000004e980d29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e980d29
sw x3, 0(x2) # store x3 (0x4e980d29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000004e980d29 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fnmadd.d f28, f9, f3, f8, dyn # perform operation
fnmadd.d f28, f9, f3, f8, rdn # perform operation
fnmadd.d f28, f9, f3, f8, rmm # perform operation
fnmadd.d f28, f9, f3, f8, rne # perform operation
fnmadd.d f28, f9, f3, f8, rtz # perform operation
fnmadd.d f28, f9, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f9, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f9, f3, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7fffffffffffffff)
li x19, 0x82e6270e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
li x3, 0xa07d83cc # load x3 with 32 MSBs 0x00000000a07d83cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a07d83cc
sw x3, 0(x2) # store x3 (0xa07d83cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000a07d83cc from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fnmadd.d f19, f9, f2, f18, dyn # perform operation
fnmadd.d f19, f9, f2, f18, rdn # perform operation
fnmadd.d f19, f9, f2, f18, rmm # perform operation
fnmadd.d f19, f9, f2, f18, rne # perform operation
fnmadd.d f19, f9, f2, f18, rtz # perform operation
fnmadd.d f19, f9, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f9, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f9, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f9, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f9, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f9, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff0000000000001)
li x13, 0x2b7e7dd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0xa7bf57ab # load x3 with 32 MSBs 0x00000000a7bf57ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7bf57ab
sw x3, 0(x2) # store x3 (0xa7bf57ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a7bf57ab from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fnmadd.d f13, f29, f9, f12, dyn # perform operation
fnmadd.d f13, f29, f9, f12, rdn # perform operation
fnmadd.d f13, f29, f9, f12, rmm # perform operation
fnmadd.d f13, f29, f9, f12, rne # perform operation
fnmadd.d f13, f29, f9, f12, rtz # perform operation
fnmadd.d f13, f29, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f29, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f29, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f29, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f29, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f29, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x13, 0xd0dc39c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
li x3, 0xa424e3fb # load x3 with 32 MSBs 0x00000000a424e3fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a424e3fb
sw x3, 0(x2) # store x3 (0xa424e3fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a424e3fb from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fnmadd.d f13, f24, f28, f19, dyn # perform operation
fnmadd.d f13, f24, f28, f19, rdn # perform operation
fnmadd.d f13, f24, f28, f19, rmm # perform operation
fnmadd.d f13, f24, f28, f19, rne # perform operation
fnmadd.d f13, f24, f28, f19, rtz # perform operation
fnmadd.d f13, f24, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f24, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0x5a392534a57711ad)
li x18, 0x49cfd41d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
li x3, 0x732dd672 # load x3 with 32 MSBs 0x00000000732dd672
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000732dd672
sw x3, 0(x2) # store x3 (0x732dd672) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000732dd672 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fnmadd.d f18, f15, f31, f8, dyn # perform operation
fnmadd.d f18, f15, f31, f8, rdn # perform operation
fnmadd.d f18, f15, f31, f8, rmm # perform operation
fnmadd.d f18, f15, f31, f8, rne # perform operation
fnmadd.d f18, f15, f31, f8, rtz # perform operation
fnmadd.d f18, f15, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f15, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f15, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f15, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f15, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f15, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fefffffffffffff fs3 = 0xa6e895993737426c)
li x14, 0x7bc27f3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0xaf407ec5 # load x3 with 32 MSBs 0x00000000af407ec5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af407ec5
sw x3, 0(x2) # store x3 (0xaf407ec5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000af407ec5 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmadd.d f14, f11, f25, f17, dyn # perform operation
fnmadd.d f14, f11, f25, f17, rdn # perform operation
fnmadd.d f14, f11, f25, f17, rmm # perform operation
fnmadd.d f14, f11, f25, f17, rne # perform operation
fnmadd.d f14, f11, f25, f17, rtz # perform operation
fnmadd.d f14, f11, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f11, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f11, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x0)
li x17, 0x5565e97b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xad019077 # load x3 with 32 MSBs 0x00000000ad019077
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad019077
sw x3, 0(x2) # store x3 (0xad019077) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000ad019077 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fnmadd.d f17, f11, f20, f5, dyn # perform operation
fnmadd.d f17, f11, f20, f5, rdn # perform operation
fnmadd.d f17, f11, f20, f5, rmm # perform operation
fnmadd.d f17, f11, f20, f5, rne # perform operation
fnmadd.d f17, f11, f20, f5, rtz # perform operation
fnmadd.d f17, f11, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f11, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f11, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f11, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f11, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f11, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000000)
li x11, 0x35166f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x5fd3e925 # load x3 with 32 MSBs 0x000000005fd3e925
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005fd3e925
sw x3, 0(x2) # store x3 (0x5fd3e925) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005fd3e925 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fnmadd.d f11, f17, f2, f28, dyn # perform operation
fnmadd.d f11, f17, f2, f28, rdn # perform operation
fnmadd.d f11, f17, f2, f28, rmm # perform operation
fnmadd.d f11, f17, f2, f28, rne # perform operation
fnmadd.d f11, f17, f2, f28, rtz # perform operation
fnmadd.d f11, f17, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff0000000000000)
li x11, 0x059be02c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0xf2708310 # load x3 with 32 MSBs 0x00000000f2708310
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2708310
sw x3, 0(x2) # store x3 (0xf2708310) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f2708310 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fnmadd.d f11, f4, f31, f30, dyn # perform operation
fnmadd.d f11, f4, f31, f30, rdn # perform operation
fnmadd.d f11, f4, f31, f30, rmm # perform operation
fnmadd.d f11, f4, f31, f30, rne # perform operation
fnmadd.d f11, f4, f31, f30, rtz # perform operation
fnmadd.d f11, f4, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f4, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f4, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f4, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f4, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f4, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff0000000000000)
li x10, 0x3264f19b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xa406ec1e # load x3 with 32 MSBs 0x00000000a406ec1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a406ec1e
sw x3, 0(x2) # store x3 (0xa406ec1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a406ec1e from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fnmadd.d f10, f26, f4, f18, dyn # perform operation
fnmadd.d f10, f26, f4, f18, rdn # perform operation
fnmadd.d f10, f26, f4, f18, rmm # perform operation
fnmadd.d f10, f26, f4, f18, rne # perform operation
fnmadd.d f10, f26, f4, f18, rtz # perform operation
fnmadd.d f10, f26, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f26, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f26, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x3ff8000000000000)
li x23, 0x0c842a78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x281e2814 # load x3 with 32 MSBs 0x00000000281e2814
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000281e2814
sw x3, 0(x2) # store x3 (0x281e2814) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000281e2814 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fnmadd.d f23, f16, f13, f7, dyn # perform operation
fnmadd.d f23, f16, f13, f7, rdn # perform operation
fnmadd.d f23, f16, f13, f7, rmm # perform operation
fnmadd.d f23, f16, f13, f7, rne # perform operation
fnmadd.d f23, f16, f13, f7, rtz # perform operation
fnmadd.d f23, f16, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f16, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xbff8000000000000)
li x28, 0x2601e9da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x28648b47 # load x3 with 32 MSBs 0x0000000028648b47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028648b47
sw x3, 0(x2) # store x3 (0x28648b47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000028648b47 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fnmadd.d f28, f22, f27, f20, dyn # perform operation
fnmadd.d f28, f22, f27, f20, rdn # perform operation
fnmadd.d f28, f22, f27, f20, rmm # perform operation
fnmadd.d f28, f22, f27, f20, rne # perform operation
fnmadd.d f28, f22, f27, f20, rtz # perform operation
fnmadd.d f28, f22, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f22, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x4000000000000000)
li x2, 0x530791d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x3eef4217 # load x3 with 32 MSBs 0x000000003eef4217
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003eef4217
sw x3, 0(x2) # store x3 (0x3eef4217) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003eef4217 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
fnmadd.d f2, f10, f18, f29, dyn # perform operation
fnmadd.d f2, f10, f18, f29, rdn # perform operation
fnmadd.d f2, f10, f18, f29, rmm # perform operation
fnmadd.d f2, f10, f18, f29, rne # perform operation
fnmadd.d f2, f10, f18, f29, rtz # perform operation
fnmadd.d f2, f10, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f10, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f10, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f10, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f10, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f10, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xc000000000000000)
li x21, 0x18b0fa54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0x627ef649 # load x3 with 32 MSBs 0x00000000627ef649
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000627ef649
sw x3, 0(x2) # store x3 (0x627ef649) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000627ef649 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fnmadd.d f21, f17, f9, f13, dyn # perform operation
fnmadd.d f21, f17, f9, f13, rdn # perform operation
fnmadd.d f21, f17, f9, f13, rmm # perform operation
fnmadd.d f21, f17, f9, f13, rne # perform operation
fnmadd.d f21, f17, f9, f13, rtz # perform operation
fnmadd.d f21, f17, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f17, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x10000000000000)
li x29, 0x74dc8afb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x8174ec8e # load x3 with 32 MSBs 0x000000008174ec8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008174ec8e
sw x3, 0(x2) # store x3 (0x8174ec8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000008174ec8e from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fnmadd.d f29, f12, f9, f24, dyn # perform operation
fnmadd.d f29, f12, f9, f24, rdn # perform operation
fnmadd.d f29, f12, f9, f24, rmm # perform operation
fnmadd.d f29, f12, f9, f24, rne # perform operation
fnmadd.d f29, f12, f9, f24, rtz # perform operation
fnmadd.d f29, f12, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f12, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8010000000000000)
li x1, 0x6be146cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0xc88ab274 # load x3 with 32 MSBs 0x00000000c88ab274
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c88ab274
sw x3, 0(x2) # store x3 (0xc88ab274) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000c88ab274 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fnmadd.d f1, f19, f10, f28, dyn # perform operation
fnmadd.d f1, f19, f10, f28, rdn # perform operation
fnmadd.d f1, f19, f10, f28, rmm # perform operation
fnmadd.d f1, f19, f10, f28, rne # perform operation
fnmadd.d f1, f19, f10, f28, rtz # perform operation
fnmadd.d f1, f19, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f19, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fefffffffffffff)
li x6, 0x188c22be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x4549a941 # load x3 with 32 MSBs 0x000000004549a941
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004549a941
sw x3, 0(x2) # store x3 (0x4549a941) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004549a941 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fnmadd.d f6, f29, f23, f13, dyn # perform operation
fnmadd.d f6, f29, f23, f13, rdn # perform operation
fnmadd.d f6, f29, f23, f13, rmm # perform operation
fnmadd.d f6, f29, f23, f13, rne # perform operation
fnmadd.d f6, f29, f23, f13, rtz # perform operation
fnmadd.d f6, f29, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f29, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f29, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xffefffffffffffff)
li x14, 0x42053ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x2879d3e6 # load x3 with 32 MSBs 0x000000002879d3e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002879d3e6
sw x3, 0(x2) # store x3 (0x2879d3e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002879d3e6 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fnmadd.d f14, f24, f16, f25, dyn # perform operation
fnmadd.d f14, f24, f16, f25, rdn # perform operation
fnmadd.d f14, f24, f16, f25, rmm # perform operation
fnmadd.d f14, f24, f16, f25, rne # perform operation
fnmadd.d f14, f24, f16, f25, rtz # perform operation
fnmadd.d f14, f24, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f24, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f24, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f24, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f24, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f24, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfffffffffffff)
li x9, 0x447e7726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0xda247380 # load x3 with 32 MSBs 0x00000000da247380
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000da247380
sw x3, 0(x2) # store x3 (0xda247380) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000da247380 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fnmadd.d f9, f7, f14, f1, dyn # perform operation
fnmadd.d f9, f7, f14, f1, rdn # perform operation
fnmadd.d f9, f7, f14, f1, rmm # perform operation
fnmadd.d f9, f7, f14, f1, rne # perform operation
fnmadd.d f9, f7, f14, f1, rtz # perform operation
fnmadd.d f9, f7, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f7, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f7, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x800fffffffffffff)
li x27, 0x8a954b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x5f9c186a # load x3 with 32 MSBs 0x000000005f9c186a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f9c186a
sw x3, 0(x2) # store x3 (0x5f9c186a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005f9c186a from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fnmadd.d f27, f26, f30, f31, dyn # perform operation
fnmadd.d f27, f26, f30, f31, rdn # perform operation
fnmadd.d f27, f26, f30, f31, rmm # perform operation
fnmadd.d f27, f26, f30, f31, rne # perform operation
fnmadd.d f27, f26, f30, f31, rtz # perform operation
fnmadd.d f27, f26, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000)
li x8, 0x0ac8a4f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xaeccae71 # load x3 with 32 MSBs 0x00000000aeccae71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeccae71
sw x3, 0(x2) # store x3 (0xaeccae71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000aeccae71 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fnmadd.d f8, f31, f5, f28, dyn # perform operation
fnmadd.d f8, f31, f5, f28, rdn # perform operation
fnmadd.d f8, f31, f5, f28, rmm # perform operation
fnmadd.d f8, f31, f5, f28, rne # perform operation
fnmadd.d f8, f31, f5, f28, rtz # perform operation
fnmadd.d f8, f31, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f31, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8008000000000000)
li x31, 0xe9be63b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0xdd32e97f # load x3 with 32 MSBs 0x00000000dd32e97f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd32e97f
sw x3, 0(x2) # store x3 (0xdd32e97f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000dd32e97f from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fnmadd.d f31, f18, f1, f28, dyn # perform operation
fnmadd.d f31, f18, f1, f28, rdn # perform operation
fnmadd.d f31, f18, f1, f28, rmm # perform operation
fnmadd.d f31, f18, f1, f28, rne # perform operation
fnmadd.d f31, f18, f1, f28, rtz # perform operation
fnmadd.d f31, f18, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f18, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f18, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f18, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f18, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f18, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x1)
li x6, 0xa0ae1260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
li x3, 0x2c23cfed # load x3 with 32 MSBs 0x000000002c23cfed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c23cfed
sw x3, 0(x2) # store x3 (0x2c23cfed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002c23cfed from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fnmadd.d f6, f22, f2, f29, dyn # perform operation
fnmadd.d f6, f22, f2, f29, rdn # perform operation
fnmadd.d f6, f22, f2, f29, rmm # perform operation
fnmadd.d f6, f22, f2, f29, rne # perform operation
fnmadd.d f6, f22, f2, f29, rtz # perform operation
fnmadd.d f6, f22, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f22, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x8000000000000001)
li x1, 0x4a89674f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x0945a770 # load x3 with 32 MSBs 0x000000000945a770
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000945a770
sw x3, 0(x2) # store x3 (0x0945a770) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000945a770 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fnmadd.d f1, f10, f26, f29, dyn # perform operation
fnmadd.d f1, f10, f26, f29, rdn # perform operation
fnmadd.d f1, f10, f26, f29, rmm # perform operation
fnmadd.d f1, f10, f26, f29, rne # perform operation
fnmadd.d f1, f10, f26, f29, rtz # perform operation
fnmadd.d f1, f10, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f10, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f10, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f10, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f10, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f10, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000000)
li x14, 0xe0f2e8ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x2d7437c2 # load x3 with 32 MSBs 0x000000002d7437c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d7437c2
sw x3, 0(x2) # store x3 (0x2d7437c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002d7437c2 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fnmadd.d f14, f4, f8, f21, dyn # perform operation
fnmadd.d f14, f4, f8, f21, rdn # perform operation
fnmadd.d f14, f4, f8, f21, rmm # perform operation
fnmadd.d f14, f4, f8, f21, rne # perform operation
fnmadd.d f14, f4, f8, f21, rtz # perform operation
fnmadd.d f14, f4, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f4, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f4, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f4, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f4, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f4, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xfff0000000000000)
li x8, 0xf36585ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
li x3, 0x9162346d # load x3 with 32 MSBs 0x000000009162346d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009162346d
sw x3, 0(x2) # store x3 (0x9162346d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009162346d from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fnmadd.d f8, f23, f13, f3, dyn # perform operation
fnmadd.d f8, f23, f13, f3, rdn # perform operation
fnmadd.d f8, f23, f13, f3, rmm # perform operation
fnmadd.d f8, f23, f13, f3, rne # perform operation
fnmadd.d f8, f23, f13, f3, rtz # perform operation
fnmadd.d f8, f23, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f23, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff8000000000000)
li x31, 0x347b6f95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x9fa4f099 # load x3 with 32 MSBs 0x000000009fa4f099
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fa4f099
sw x3, 0(x2) # store x3 (0x9fa4f099) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009fa4f099 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fnmadd.d f31, f1, f28, f21, dyn # perform operation
fnmadd.d f31, f1, f28, f21, rdn # perform operation
fnmadd.d f31, f1, f28, f21, rmm # perform operation
fnmadd.d f31, f1, f28, f21, rne # perform operation
fnmadd.d f31, f1, f28, f21, rtz # perform operation
fnmadd.d f31, f1, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f1, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7fffffffffffffff)
li x19, 0x49459906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0x09d30438 # load x3 with 32 MSBs 0x0000000009d30438
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009d30438
sw x3, 0(x2) # store x3 (0x09d30438) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000009d30438 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
fnmadd.d f19, f9, f3, f4, dyn # perform operation
fnmadd.d f19, f9, f3, f4, rdn # perform operation
fnmadd.d f19, f9, f3, f4, rmm # perform operation
fnmadd.d f19, f9, f3, f4, rne # perform operation
fnmadd.d f19, f9, f3, f4, rtz # perform operation
fnmadd.d f19, f9, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f9, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f9, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff0000000000001)
li x14, 0xdbf3d561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xc32bd7d8 # load x3 with 32 MSBs 0x00000000c32bd7d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c32bd7d8
sw x3, 0(x2) # store x3 (0xc32bd7d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c32bd7d8 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fnmadd.d f14, f31, f3, f6, dyn # perform operation
fnmadd.d f14, f31, f3, f6, rdn # perform operation
fnmadd.d f14, f31, f3, f6, rmm # perform operation
fnmadd.d f14, f31, f3, f6, rne # perform operation
fnmadd.d f14, f31, f3, f6, rtz # perform operation
fnmadd.d f14, f31, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f31, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x7ff7ffffffffffff)
li x26, 0x500ef187 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x547827c9 # load x3 with 32 MSBs 0x00000000547827c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000547827c9
sw x3, 0(x2) # store x3 (0x547827c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000547827c9 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fnmadd.d f26, f4, f18, f15, dyn # perform operation
fnmadd.d f26, f4, f18, f15, rdn # perform operation
fnmadd.d f26, f4, f18, f15, rmm # perform operation
fnmadd.d f26, f4, f18, f15, rne # perform operation
fnmadd.d f26, f4, f18, f15, rtz # perform operation
fnmadd.d f26, f4, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f4, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f4, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0x5a392534a57711ad)
li x30, 0x30aff936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x95433b9d # load x3 with 32 MSBs 0x0000000095433b9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095433b9d
sw x3, 0(x2) # store x3 (0x95433b9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000095433b9d from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fnmadd.d f30, f12, f14, f8, dyn # perform operation
fnmadd.d f30, f12, f14, f8, rdn # perform operation
fnmadd.d f30, f12, f14, f8, rmm # perform operation
fnmadd.d f30, f12, f14, f8, rne # perform operation
fnmadd.d f30, f12, f14, f8, rtz # perform operation
fnmadd.d f30, f12, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f12, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffefffffffffffff fs3 = 0xa6e895993737426c)
li x30, 0x0bdfcd80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x9b2396e4 # load x3 with 32 MSBs 0x000000009b2396e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b2396e4
sw x3, 0(x2) # store x3 (0x9b2396e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000009b2396e4 from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fnmadd.d f30, f12, f8, f29, dyn # perform operation
fnmadd.d f30, f12, f8, f29, rdn # perform operation
fnmadd.d f30, f12, f8, f29, rmm # perform operation
fnmadd.d f30, f12, f8, f29, rne # perform operation
fnmadd.d f30, f12, f8, f29, rtz # perform operation
fnmadd.d f30, f12, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f12, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x0)
li x17, 0x83bc2b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x67796683 # load x3 with 32 MSBs 0x0000000067796683
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067796683
sw x3, 0(x2) # store x3 (0x67796683) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000067796683 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fnmadd.d f17, f6, f4, f24, dyn # perform operation
fnmadd.d f17, f6, f4, f24, rdn # perform operation
fnmadd.d f17, f6, f4, f24, rmm # perform operation
fnmadd.d f17, f6, f4, f24, rne # perform operation
fnmadd.d f17, f6, f4, f24, rtz # perform operation
fnmadd.d f17, f6, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f6, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f6, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f6, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f6, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f6, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000000)
li x27, 0xc9f0db33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0xd6861113 # load x3 with 32 MSBs 0x00000000d6861113
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6861113
sw x3, 0(x2) # store x3 (0xd6861113) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d6861113 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fnmadd.d f27, f18, f9, f8, dyn # perform operation
fnmadd.d f27, f18, f9, f8, rdn # perform operation
fnmadd.d f27, f18, f9, f8, rmm # perform operation
fnmadd.d f27, f18, f9, f8, rne # perform operation
fnmadd.d f27, f18, f9, f8, rtz # perform operation
fnmadd.d f27, f18, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f18, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f18, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff0000000000000)
li x24, 0xbe6c64fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x744b39c0 # load x3 with 32 MSBs 0x00000000744b39c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000744b39c0
sw x3, 0(x2) # store x3 (0x744b39c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000744b39c0 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fnmadd.d f24, f29, f18, f12, dyn # perform operation
fnmadd.d f24, f29, f18, f12, rdn # perform operation
fnmadd.d f24, f29, f18, f12, rmm # perform operation
fnmadd.d f24, f29, f18, f12, rne # perform operation
fnmadd.d f24, f29, f18, f12, rtz # perform operation
fnmadd.d f24, f29, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f29, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff0000000000000)
li x16, 0xe9959aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x99685d8a # load x3 with 32 MSBs 0x0000000099685d8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099685d8a
sw x3, 0(x2) # store x3 (0x99685d8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000099685d8a from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fnmadd.d f16, f30, f13, f12, dyn # perform operation
fnmadd.d f16, f30, f13, f12, rdn # perform operation
fnmadd.d f16, f30, f13, f12, rmm # perform operation
fnmadd.d f16, f30, f13, f12, rne # perform operation
fnmadd.d f16, f30, f13, f12, rtz # perform operation
fnmadd.d f16, f30, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f30, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x3ff8000000000000)
li x18, 0x9c657310 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x20c7a7c1 # load x3 with 32 MSBs 0x0000000020c7a7c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020c7a7c1
sw x3, 0(x2) # store x3 (0x20c7a7c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000020c7a7c1 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fnmadd.d f18, f7, f11, f12, dyn # perform operation
fnmadd.d f18, f7, f11, f12, rdn # perform operation
fnmadd.d f18, f7, f11, f12, rmm # perform operation
fnmadd.d f18, f7, f11, f12, rne # perform operation
fnmadd.d f18, f7, f11, f12, rtz # perform operation
fnmadd.d f18, f7, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f7, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f7, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f7, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f7, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f7, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xbff8000000000000)
li x26, 0x9be50fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0x8537eded # load x3 with 32 MSBs 0x000000008537eded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008537eded
sw x3, 0(x2) # store x3 (0x8537eded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008537eded from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fnmadd.d f26, f8, f27, f29, dyn # perform operation
fnmadd.d f26, f8, f27, f29, rdn # perform operation
fnmadd.d f26, f8, f27, f29, rmm # perform operation
fnmadd.d f26, f8, f27, f29, rne # perform operation
fnmadd.d f26, f8, f27, f29, rtz # perform operation
fnmadd.d f26, f8, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f8, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x4000000000000000)
li x3, 0x8c4c5381 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xaf3b5618 # load x3 with 32 MSBs 0x00000000af3b5618
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af3b5618
sw x3, 0(x2) # store x3 (0xaf3b5618) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000af3b5618 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fnmadd.d f3, f16, f13, f7, dyn # perform operation
fnmadd.d f3, f16, f13, f7, rdn # perform operation
fnmadd.d f3, f16, f13, f7, rmm # perform operation
fnmadd.d f3, f16, f13, f7, rne # perform operation
fnmadd.d f3, f16, f13, f7, rtz # perform operation
fnmadd.d f3, f16, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f16, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f16, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xc000000000000000)
li x29, 0x6af81f1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xd860b9d4 # load x3 with 32 MSBs 0x00000000d860b9d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d860b9d4
sw x3, 0(x2) # store x3 (0xd860b9d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d860b9d4 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fnmadd.d f29, f30, f9, f27, dyn # perform operation
fnmadd.d f29, f30, f9, f27, rdn # perform operation
fnmadd.d f29, f30, f9, f27, rmm # perform operation
fnmadd.d f29, f30, f9, f27, rne # perform operation
fnmadd.d f29, f30, f9, f27, rtz # perform operation
fnmadd.d f29, f30, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f30, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f30, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x10000000000000)
li x9, 0x7b9df79c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x6615b2cd # load x3 with 32 MSBs 0x000000006615b2cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006615b2cd
sw x3, 0(x2) # store x3 (0x6615b2cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006615b2cd from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fnmadd.d f9, f10, f29, f20, dyn # perform operation
fnmadd.d f9, f10, f29, f20, rdn # perform operation
fnmadd.d f9, f10, f29, f20, rmm # perform operation
fnmadd.d f9, f10, f29, f20, rne # perform operation
fnmadd.d f9, f10, f29, f20, rtz # perform operation
fnmadd.d f9, f10, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f10, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f10, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8010000000000000)
li x23, 0xa60a3344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
li x3, 0x205cfb13 # load x3 with 32 MSBs 0x00000000205cfb13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000205cfb13
sw x3, 0(x2) # store x3 (0x205cfb13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000205cfb13 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fnmadd.d f23, f19, f16, f30, dyn # perform operation
fnmadd.d f23, f19, f16, f30, rdn # perform operation
fnmadd.d f23, f19, f16, f30, rmm # perform operation
fnmadd.d f23, f19, f16, f30, rne # perform operation
fnmadd.d f23, f19, f16, f30, rtz # perform operation
fnmadd.d f23, f19, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f19, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f19, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f19, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f19, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f19, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fefffffffffffff)
li x30, 0xedb890f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x7b3056d9 # load x3 with 32 MSBs 0x000000007b3056d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b3056d9
sw x3, 0(x2) # store x3 (0x7b3056d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007b3056d9 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fnmadd.d f30, f26, f28, f15, dyn # perform operation
fnmadd.d f30, f26, f28, f15, rdn # perform operation
fnmadd.d f30, f26, f28, f15, rmm # perform operation
fnmadd.d f30, f26, f28, f15, rne # perform operation
fnmadd.d f30, f26, f28, f15, rtz # perform operation
fnmadd.d f30, f26, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f26, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f26, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xffefffffffffffff)
li x16, 0x2b606032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
li x3, 0xd088e51f # load x3 with 32 MSBs 0x00000000d088e51f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d088e51f
sw x3, 0(x2) # store x3 (0xd088e51f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d088e51f from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fnmadd.d f16, f24, f21, f3, dyn # perform operation
fnmadd.d f16, f24, f21, f3, rdn # perform operation
fnmadd.d f16, f24, f21, f3, rmm # perform operation
fnmadd.d f16, f24, f21, f3, rne # perform operation
fnmadd.d f16, f24, f21, f3, rtz # perform operation
fnmadd.d f16, f24, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f24, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f24, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfffffffffffff)
li x17, 0x529f7aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xbbcb6ae4 # load x3 with 32 MSBs 0x00000000bbcb6ae4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbcb6ae4
sw x3, 0(x2) # store x3 (0xbbcb6ae4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bbcb6ae4 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fnmadd.d f17, f16, f30, f14, dyn # perform operation
fnmadd.d f17, f16, f30, f14, rdn # perform operation
fnmadd.d f17, f16, f30, f14, rmm # perform operation
fnmadd.d f17, f16, f30, f14, rne # perform operation
fnmadd.d f17, f16, f30, f14, rtz # perform operation
fnmadd.d f17, f16, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f16, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f16, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x800fffffffffffff)
li x28, 0x9d239cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x1fffd6de # load x3 with 32 MSBs 0x000000001fffd6de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fffd6de
sw x3, 0(x2) # store x3 (0x1fffd6de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000001fffd6de from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fnmadd.d f28, f3, f21, f7, dyn # perform operation
fnmadd.d f28, f3, f21, f7, rdn # perform operation
fnmadd.d f28, f3, f21, f7, rmm # perform operation
fnmadd.d f28, f3, f21, f7, rne # perform operation
fnmadd.d f28, f3, f21, f7, rtz # perform operation
fnmadd.d f28, f3, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f3, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000)
li x29, 0x843a0fff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0xdbbccae4 # load x3 with 32 MSBs 0x00000000dbbccae4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dbbccae4
sw x3, 0(x2) # store x3 (0xdbbccae4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000dbbccae4 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fnmadd.d f29, f26, f24, f22, dyn # perform operation
fnmadd.d f29, f26, f24, f22, rdn # perform operation
fnmadd.d f29, f26, f24, f22, rmm # perform operation
fnmadd.d f29, f26, f24, f22, rne # perform operation
fnmadd.d f29, f26, f24, f22, rtz # perform operation
fnmadd.d f29, f26, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f26, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f26, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f26, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f26, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f26, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8008000000000000)
li x5, 0xc272f34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x92d51d95 # load x3 with 32 MSBs 0x0000000092d51d95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092d51d95
sw x3, 0(x2) # store x3 (0x92d51d95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000092d51d95 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fnmadd.d f5, f3, f22, f21, dyn # perform operation
fnmadd.d f5, f3, f22, f21, rdn # perform operation
fnmadd.d f5, f3, f22, f21, rmm # perform operation
fnmadd.d f5, f3, f22, f21, rne # perform operation
fnmadd.d f5, f3, f22, f21, rtz # perform operation
fnmadd.d f5, f3, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f3, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f3, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x1)
li x3, 0x726916d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
li x3, 0x833e52b0 # load x3 with 32 MSBs 0x00000000833e52b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000833e52b0
sw x3, 0(x2) # store x3 (0x833e52b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000833e52b0 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fnmadd.d f3, f29, f19, f21, dyn # perform operation
fnmadd.d f3, f29, f19, f21, rdn # perform operation
fnmadd.d f3, f29, f19, f21, rmm # perform operation
fnmadd.d f3, f29, f19, f21, rne # perform operation
fnmadd.d f3, f29, f19, f21, rtz # perform operation
fnmadd.d f3, f29, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f29, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f29, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x8000000000000001)
li x5, 0xf66adb53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0xd047a8d0 # load x3 with 32 MSBs 0x00000000d047a8d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d047a8d0
sw x3, 0(x2) # store x3 (0xd047a8d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d047a8d0 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmadd.d f5, f1, f28, f22, dyn # perform operation
fnmadd.d f5, f1, f28, f22, rdn # perform operation
fnmadd.d f5, f1, f28, f22, rmm # perform operation
fnmadd.d f5, f1, f28, f22, rne # perform operation
fnmadd.d f5, f1, f28, f22, rtz # perform operation
fnmadd.d f5, f1, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000000)
li x11, 0x9a5a0f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0xdd91f48d # load x3 with 32 MSBs 0x00000000dd91f48d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd91f48d
sw x3, 0(x2) # store x3 (0xdd91f48d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000dd91f48d from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fnmadd.d f11, f5, f25, f13, dyn # perform operation
fnmadd.d f11, f5, f25, f13, rdn # perform operation
fnmadd.d f11, f5, f25, f13, rmm # perform operation
fnmadd.d f11, f5, f25, f13, rne # perform operation
fnmadd.d f11, f5, f25, f13, rtz # perform operation
fnmadd.d f11, f5, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f5, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f5, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f5, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f5, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f5, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xfff0000000000000)
li x19, 0x16e773dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0xa1a8a23e # load x3 with 32 MSBs 0x00000000a1a8a23e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1a8a23e
sw x3, 0(x2) # store x3 (0xa1a8a23e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a1a8a23e from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fnmadd.d f19, f14, f23, f6, dyn # perform operation
fnmadd.d f19, f14, f23, f6, rdn # perform operation
fnmadd.d f19, f14, f23, f6, rmm # perform operation
fnmadd.d f19, f14, f23, f6, rne # perform operation
fnmadd.d f19, f14, f23, f6, rtz # perform operation
fnmadd.d f19, f14, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f14, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f14, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff8000000000000)
li x1, 0x4d694e0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xada8e43e # load x3 with 32 MSBs 0x00000000ada8e43e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ada8e43e
sw x3, 0(x2) # store x3 (0xada8e43e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ada8e43e from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmadd.d f1, f8, f10, f24, dyn # perform operation
fnmadd.d f1, f8, f10, f24, rdn # perform operation
fnmadd.d f1, f8, f10, f24, rmm # perform operation
fnmadd.d f1, f8, f10, f24, rne # perform operation
fnmadd.d f1, f8, f10, f24, rtz # perform operation
fnmadd.d f1, f8, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f8, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7fffffffffffffff)
li x4, 0x1c176a82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x59246549 # load x3 with 32 MSBs 0x0000000059246549
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000059246549
sw x3, 0(x2) # store x3 (0x59246549) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000059246549 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fnmadd.d f4, f20, f8, f16, dyn # perform operation
fnmadd.d f4, f20, f8, f16, rdn # perform operation
fnmadd.d f4, f20, f8, f16, rmm # perform operation
fnmadd.d f4, f20, f8, f16, rne # perform operation
fnmadd.d f4, f20, f8, f16, rtz # perform operation
fnmadd.d f4, f20, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff0000000000001)
li x12, 0x3b174275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xac1de28a # load x3 with 32 MSBs 0x00000000ac1de28a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac1de28a
sw x3, 0(x2) # store x3 (0xac1de28a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ac1de28a from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fnmadd.d f12, f30, f27, f2, dyn # perform operation
fnmadd.d f12, f30, f27, f2, rdn # perform operation
fnmadd.d f12, f30, f27, f2, rmm # perform operation
fnmadd.d f12, f30, f27, f2, rne # perform operation
fnmadd.d f12, f30, f27, f2, rtz # perform operation
fnmadd.d f12, f30, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x7ff7ffffffffffff)
li x2, 0xe22d7f99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x4f7fb124 # load x3 with 32 MSBs 0x000000004f7fb124
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f7fb124
sw x3, 0(x2) # store x3 (0x4f7fb124) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004f7fb124 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fnmadd.d f2, f31, f7, f11, dyn # perform operation
fnmadd.d f2, f31, f7, f11, rdn # perform operation
fnmadd.d f2, f31, f7, f11, rmm # perform operation
fnmadd.d f2, f31, f7, f11, rne # perform operation
fnmadd.d f2, f31, f7, f11, rtz # perform operation
fnmadd.d f2, f31, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f31, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f31, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f31, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f31, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f31, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0x5a392534a57711ad)
li x1, 0x94cdf2dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x32a2e129 # load x3 with 32 MSBs 0x0000000032a2e129
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032a2e129
sw x3, 0(x2) # store x3 (0x32a2e129) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000032a2e129 from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fnmadd.d f1, f18, f19, f31, dyn # perform operation
fnmadd.d f1, f18, f19, f31, rdn # perform operation
fnmadd.d f1, f18, f19, f31, rmm # perform operation
fnmadd.d f1, f18, f19, f31, rne # perform operation
fnmadd.d f1, f18, f19, f31, rtz # perform operation
fnmadd.d f1, f18, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f18, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfffffffffffff fs3 = 0xa6e895993737426c)
li x3, 0x183e18f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0xdcefadbc # load x3 with 32 MSBs 0x00000000dcefadbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcefadbc
sw x3, 0(x2) # store x3 (0xdcefadbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000dcefadbc from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fnmadd.d f3, f2, f16, f9, dyn # perform operation
fnmadd.d f3, f2, f16, f9, rdn # perform operation
fnmadd.d f3, f2, f16, f9, rmm # perform operation
fnmadd.d f3, f2, f16, f9, rne # perform operation
fnmadd.d f3, f2, f16, f9, rtz # perform operation
fnmadd.d f3, f2, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x0)
li x5, 0x7c9e0cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
li x3, 0x611af9cb # load x3 with 32 MSBs 0x00000000611af9cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000611af9cb
sw x3, 0(x2) # store x3 (0x611af9cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000611af9cb from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fnmadd.d f5, f27, f7, f24, dyn # perform operation
fnmadd.d f5, f27, f7, f24, rdn # perform operation
fnmadd.d f5, f27, f7, f24, rmm # perform operation
fnmadd.d f5, f27, f7, f24, rne # perform operation
fnmadd.d f5, f27, f7, f24, rtz # perform operation
fnmadd.d f5, f27, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f27, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f27, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000000)
li x3, 0x340a6022 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0xd759151d # load x3 with 32 MSBs 0x00000000d759151d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d759151d
sw x3, 0(x2) # store x3 (0xd759151d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d759151d from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fnmadd.d f3, f14, f21, f20, dyn # perform operation
fnmadd.d f3, f14, f21, f20, rdn # perform operation
fnmadd.d f3, f14, f21, f20, rmm # perform operation
fnmadd.d f3, f14, f21, f20, rne # perform operation
fnmadd.d f3, f14, f21, f20, rtz # perform operation
fnmadd.d f3, f14, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff0000000000000)
li x22, 0x1c9e1ac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x372bd9cb # load x3 with 32 MSBs 0x00000000372bd9cb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000372bd9cb
sw x3, 0(x2) # store x3 (0x372bd9cb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000372bd9cb from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fnmadd.d f22, f17, f5, f1, dyn # perform operation
fnmadd.d f22, f17, f5, f1, rdn # perform operation
fnmadd.d f22, f17, f5, f1, rmm # perform operation
fnmadd.d f22, f17, f5, f1, rne # perform operation
fnmadd.d f22, f17, f5, f1, rtz # perform operation
fnmadd.d f22, f17, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f17, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff0000000000000)
li x19, 0x70fa1050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0xa988d1e9 # load x3 with 32 MSBs 0x00000000a988d1e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a988d1e9
sw x3, 0(x2) # store x3 (0xa988d1e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a988d1e9 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fnmadd.d f19, f11, f9, f16, dyn # perform operation
fnmadd.d f19, f11, f9, f16, rdn # perform operation
fnmadd.d f19, f11, f9, f16, rmm # perform operation
fnmadd.d f19, f11, f9, f16, rne # perform operation
fnmadd.d f19, f11, f9, f16, rtz # perform operation
fnmadd.d f19, f11, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f11, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f11, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f11, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f11, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f11, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x3ff8000000000000)
li x23, 0x4756ecfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
li x3, 0xa5592af5 # load x3 with 32 MSBs 0x00000000a5592af5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5592af5
sw x3, 0(x2) # store x3 (0xa5592af5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a5592af5 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fnmadd.d f23, f9, f15, f25, dyn # perform operation
fnmadd.d f23, f9, f15, f25, rdn # perform operation
fnmadd.d f23, f9, f15, f25, rmm # perform operation
fnmadd.d f23, f9, f15, f25, rne # perform operation
fnmadd.d f23, f9, f15, f25, rtz # perform operation
fnmadd.d f23, f9, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f9, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f9, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f9, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f9, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f9, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xbff8000000000000)
li x31, 0x8237a8c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x68b434c9 # load x3 with 32 MSBs 0x0000000068b434c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068b434c9
sw x3, 0(x2) # store x3 (0x68b434c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000068b434c9 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fnmadd.d f31, f19, f15, f13, dyn # perform operation
fnmadd.d f31, f19, f15, f13, rdn # perform operation
fnmadd.d f31, f19, f15, f13, rmm # perform operation
fnmadd.d f31, f19, f15, f13, rne # perform operation
fnmadd.d f31, f19, f15, f13, rtz # perform operation
fnmadd.d f31, f19, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f19, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f19, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x4000000000000000)
li x23, 0x3cb93775 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xafc6eccd # load x3 with 32 MSBs 0x00000000afc6eccd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afc6eccd
sw x3, 0(x2) # store x3 (0xafc6eccd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000afc6eccd from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fnmadd.d f23, f5, f29, f30, dyn # perform operation
fnmadd.d f23, f5, f29, f30, rdn # perform operation
fnmadd.d f23, f5, f29, f30, rmm # perform operation
fnmadd.d f23, f5, f29, f30, rne # perform operation
fnmadd.d f23, f5, f29, f30, rtz # perform operation
fnmadd.d f23, f5, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f5, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xc000000000000000)
li x13, 0x23393eb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x4ea467c6 # load x3 with 32 MSBs 0x000000004ea467c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ea467c6
sw x3, 0(x2) # store x3 (0x4ea467c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004ea467c6 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fnmadd.d f13, f4, f15, f5, dyn # perform operation
fnmadd.d f13, f4, f15, f5, rdn # perform operation
fnmadd.d f13, f4, f15, f5, rmm # perform operation
fnmadd.d f13, f4, f15, f5, rne # perform operation
fnmadd.d f13, f4, f15, f5, rtz # perform operation
fnmadd.d f13, f4, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f4, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f4, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f4, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f4, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f4, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x10000000000000)
li x7, 0x9b3dd5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0xafc672e3 # load x3 with 32 MSBs 0x00000000afc672e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afc672e3
sw x3, 0(x2) # store x3 (0xafc672e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000afc672e3 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fnmadd.d f7, f24, f9, f4, dyn # perform operation
fnmadd.d f7, f24, f9, f4, rdn # perform operation
fnmadd.d f7, f24, f9, f4, rmm # perform operation
fnmadd.d f7, f24, f9, f4, rne # perform operation
fnmadd.d f7, f24, f9, f4, rtz # perform operation
fnmadd.d f7, f24, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f24, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f24, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f24, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f24, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f24, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8010000000000000)
li x5, 0x592ce140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x8204b679 # load x3 with 32 MSBs 0x000000008204b679
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008204b679
sw x3, 0(x2) # store x3 (0x8204b679) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008204b679 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fnmadd.d f5, f1, f15, f13, dyn # perform operation
fnmadd.d f5, f1, f15, f13, rdn # perform operation
fnmadd.d f5, f1, f15, f13, rmm # perform operation
fnmadd.d f5, f1, f15, f13, rne # perform operation
fnmadd.d f5, f1, f15, f13, rtz # perform operation
fnmadd.d f5, f1, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f1, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f1, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fefffffffffffff)
li x23, 0xf2f000e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
li x3, 0xbf9c3584 # load x3 with 32 MSBs 0x00000000bf9c3584
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf9c3584
sw x3, 0(x2) # store x3 (0xbf9c3584) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bf9c3584 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fnmadd.d f23, f3, f22, f31, dyn # perform operation
fnmadd.d f23, f3, f22, f31, rdn # perform operation
fnmadd.d f23, f3, f22, f31, rmm # perform operation
fnmadd.d f23, f3, f22, f31, rne # perform operation
fnmadd.d f23, f3, f22, f31, rtz # perform operation
fnmadd.d f23, f3, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f3, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f3, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xffefffffffffffff)
li x20, 0xf9e0a5ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x692d66ab # load x3 with 32 MSBs 0x00000000692d66ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000692d66ab
sw x3, 0(x2) # store x3 (0x692d66ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000692d66ab from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fnmadd.d f20, f5, f17, f30, dyn # perform operation
fnmadd.d f20, f5, f17, f30, rdn # perform operation
fnmadd.d f20, f5, f17, f30, rmm # perform operation
fnmadd.d f20, f5, f17, f30, rne # perform operation
fnmadd.d f20, f5, f17, f30, rtz # perform operation
fnmadd.d f20, f5, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f5, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f5, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f5, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f5, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f5, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfffffffffffff)
li x8, 0xf373eecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
li x3, 0x25fd7390 # load x3 with 32 MSBs 0x0000000025fd7390
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025fd7390
sw x3, 0(x2) # store x3 (0x25fd7390) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000025fd7390 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fnmadd.d f8, f1, f31, f17, dyn # perform operation
fnmadd.d f8, f1, f31, f17, rdn # perform operation
fnmadd.d f8, f1, f31, f17, rmm # perform operation
fnmadd.d f8, f1, f31, f17, rne # perform operation
fnmadd.d f8, f1, f31, f17, rtz # perform operation
fnmadd.d f8, f1, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f1, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f1, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f1, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f1, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f1, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x800fffffffffffff)
li x26, 0xafd67fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
li x3, 0x7ab1cec3 # load x3 with 32 MSBs 0x000000007ab1cec3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ab1cec3
sw x3, 0(x2) # store x3 (0x7ab1cec3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007ab1cec3 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fnmadd.d f26, f30, f6, f16, dyn # perform operation
fnmadd.d f26, f30, f6, f16, rdn # perform operation
fnmadd.d f26, f30, f6, f16, rmm # perform operation
fnmadd.d f26, f30, f6, f16, rne # perform operation
fnmadd.d f26, f30, f6, f16, rtz # perform operation
fnmadd.d f26, f30, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f30, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f30, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000)
li x18, 0xc9da1de0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x544942ec # load x3 with 32 MSBs 0x00000000544942ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000544942ec
sw x3, 0(x2) # store x3 (0x544942ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000544942ec from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fnmadd.d f18, f6, f14, f21, dyn # perform operation
fnmadd.d f18, f6, f14, f21, rdn # perform operation
fnmadd.d f18, f6, f14, f21, rmm # perform operation
fnmadd.d f18, f6, f14, f21, rne # perform operation
fnmadd.d f18, f6, f14, f21, rtz # perform operation
fnmadd.d f18, f6, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f6, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8008000000000000)
li x25, 0x4b078ecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x53fff7bc # load x3 with 32 MSBs 0x0000000053fff7bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053fff7bc
sw x3, 0(x2) # store x3 (0x53fff7bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000053fff7bc from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fnmadd.d f25, f2, f5, f3, dyn # perform operation
fnmadd.d f25, f2, f5, f3, rdn # perform operation
fnmadd.d f25, f2, f5, f3, rmm # perform operation
fnmadd.d f25, f2, f5, f3, rne # perform operation
fnmadd.d f25, f2, f5, f3, rtz # perform operation
fnmadd.d f25, f2, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f2, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f2, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f2, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f2, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f2, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x1)
li x16, 0xe0fefc24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x8a6213f2 # load x3 with 32 MSBs 0x000000008a6213f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a6213f2
sw x3, 0(x2) # store x3 (0x8a6213f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008a6213f2 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fnmadd.d f16, f28, f17, f26, dyn # perform operation
fnmadd.d f16, f28, f17, f26, rdn # perform operation
fnmadd.d f16, f28, f17, f26, rmm # perform operation
fnmadd.d f16, f28, f17, f26, rne # perform operation
fnmadd.d f16, f28, f17, f26, rtz # perform operation
fnmadd.d f16, f28, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f28, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x8000000000000001)
li x11, 0x32ebdb23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0xa5559f31 # load x3 with 32 MSBs 0x00000000a5559f31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5559f31
sw x3, 0(x2) # store x3 (0xa5559f31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a5559f31 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fnmadd.d f11, f18, f13, f24, dyn # perform operation
fnmadd.d f11, f18, f13, f24, rdn # perform operation
fnmadd.d f11, f18, f13, f24, rmm # perform operation
fnmadd.d f11, f18, f13, f24, rne # perform operation
fnmadd.d f11, f18, f13, f24, rtz # perform operation
fnmadd.d f11, f18, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f18, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000000)
li x28, 0x5a088c6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x50e88360 # load x3 with 32 MSBs 0x0000000050e88360
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050e88360
sw x3, 0(x2) # store x3 (0x50e88360) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000050e88360 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fnmadd.d f28, f2, f14, f26, dyn # perform operation
fnmadd.d f28, f2, f14, f26, rdn # perform operation
fnmadd.d f28, f2, f14, f26, rmm # perform operation
fnmadd.d f28, f2, f14, f26, rne # perform operation
fnmadd.d f28, f2, f14, f26, rtz # perform operation
fnmadd.d f28, f2, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f2, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f2, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xfff0000000000000)
li x19, 0x200dba0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0xb7fc30a4 # load x3 with 32 MSBs 0x00000000b7fc30a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7fc30a4
sw x3, 0(x2) # store x3 (0xb7fc30a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b7fc30a4 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fnmadd.d f19, f8, f1, f12, dyn # perform operation
fnmadd.d f19, f8, f1, f12, rdn # perform operation
fnmadd.d f19, f8, f1, f12, rmm # perform operation
fnmadd.d f19, f8, f1, f12, rne # perform operation
fnmadd.d f19, f8, f1, f12, rtz # perform operation
fnmadd.d f19, f8, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff8000000000000)
li x14, 0x69f3e703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0xfecab5ca # load x3 with 32 MSBs 0x00000000fecab5ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fecab5ca
sw x3, 0(x2) # store x3 (0xfecab5ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000fecab5ca from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fnmadd.d f14, f18, f24, f4, dyn # perform operation
fnmadd.d f14, f18, f24, f4, rdn # perform operation
fnmadd.d f14, f18, f24, f4, rmm # perform operation
fnmadd.d f14, f18, f24, f4, rne # perform operation
fnmadd.d f14, f18, f24, f4, rtz # perform operation
fnmadd.d f14, f18, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f18, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f18, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f18, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f18, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f18, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7fffffffffffffff)
li x11, 0x6b25916c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x6be871fb # load x3 with 32 MSBs 0x000000006be871fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006be871fb
sw x3, 0(x2) # store x3 (0x6be871fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000006be871fb from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fnmadd.d f11, f17, f23, f19, dyn # perform operation
fnmadd.d f11, f17, f23, f19, rdn # perform operation
fnmadd.d f11, f17, f23, f19, rmm # perform operation
fnmadd.d f11, f17, f23, f19, rne # perform operation
fnmadd.d f11, f17, f23, f19, rtz # perform operation
fnmadd.d f11, f17, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f17, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f17, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f17, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f17, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f17, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff0000000000001)
li x19, 0xf54cc1b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x4946b026 # load x3 with 32 MSBs 0x000000004946b026
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004946b026
sw x3, 0(x2) # store x3 (0x4946b026) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004946b026 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fnmadd.d f19, f23, f21, f25, dyn # perform operation
fnmadd.d f19, f23, f21, f25, rdn # perform operation
fnmadd.d f19, f23, f21, f25, rmm # perform operation
fnmadd.d f19, f23, f21, f25, rne # perform operation
fnmadd.d f19, f23, f21, f25, rtz # perform operation
fnmadd.d f19, f23, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f23, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x7ff7ffffffffffff)
li x26, 0x0a2a3f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x9715612b # load x3 with 32 MSBs 0x000000009715612b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009715612b
sw x3, 0(x2) # store x3 (0x9715612b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009715612b from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fnmadd.d f26, f14, f20, f15, dyn # perform operation
fnmadd.d f26, f14, f20, f15, rdn # perform operation
fnmadd.d f26, f14, f20, f15, rmm # perform operation
fnmadd.d f26, f14, f20, f15, rne # perform operation
fnmadd.d f26, f14, f20, f15, rtz # perform operation
fnmadd.d f26, f14, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f14, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f14, f20, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0x5a392534a57711ad)
li x21, 0xbf8a5543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x0f8b64b3 # load x3 with 32 MSBs 0x000000000f8b64b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f8b64b3
sw x3, 0(x2) # store x3 (0x0f8b64b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000f8b64b3 from memory into f1
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fnmadd.d f21, f31, f1, f15, dyn # perform operation
fnmadd.d f21, f31, f1, f15, rdn # perform operation
fnmadd.d f21, f31, f1, f15, rmm # perform operation
fnmadd.d f21, f31, f1, f15, rne # perform operation
fnmadd.d f21, f31, f1, f15, rtz # perform operation
fnmadd.d f21, f31, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f31, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800fffffffffffff fs3 = 0xa6e895993737426c)
li x26, 0xb4fff1a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x4de4ef8e # load x3 with 32 MSBs 0x000000004de4ef8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004de4ef8e
sw x3, 0(x2) # store x3 (0x4de4ef8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004de4ef8e from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fnmadd.d f26, f2, f17, f11, dyn # perform operation
fnmadd.d f26, f2, f17, f11, rdn # perform operation
fnmadd.d f26, f2, f17, f11, rmm # perform operation
fnmadd.d f26, f2, f17, f11, rne # perform operation
fnmadd.d f26, f2, f17, f11, rtz # perform operation
fnmadd.d f26, f2, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f2, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x0)
li x16, 0xa3bdd930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x52ac7f6b # load x3 with 32 MSBs 0x0000000052ac7f6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052ac7f6b
sw x3, 0(x2) # store x3 (0x52ac7f6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000052ac7f6b from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmadd.d f16, f3, f17, f2, dyn # perform operation
fnmadd.d f16, f3, f17, f2, rdn # perform operation
fnmadd.d f16, f3, f17, f2, rmm # perform operation
fnmadd.d f16, f3, f17, f2, rne # perform operation
fnmadd.d f16, f3, f17, f2, rtz # perform operation
fnmadd.d f16, f3, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f3, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f3, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000000)
li x6, 0x344c434d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x2f03a6b7 # load x3 with 32 MSBs 0x000000002f03a6b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f03a6b7
sw x3, 0(x2) # store x3 (0x2f03a6b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002f03a6b7 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fnmadd.d f6, f12, f25, f27, dyn # perform operation
fnmadd.d f6, f12, f25, f27, rdn # perform operation
fnmadd.d f6, f12, f25, f27, rmm # perform operation
fnmadd.d f6, f12, f25, f27, rne # perform operation
fnmadd.d f6, f12, f25, f27, rtz # perform operation
fnmadd.d f6, f12, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f12, f25, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff0000000000000)
li x26, 0xead613c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xc9729cc8 # load x3 with 32 MSBs 0x00000000c9729cc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9729cc8
sw x3, 0(x2) # store x3 (0xc9729cc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c9729cc8 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fnmadd.d f26, f9, f18, f7, dyn # perform operation
fnmadd.d f26, f9, f18, f7, rdn # perform operation
fnmadd.d f26, f9, f18, f7, rmm # perform operation
fnmadd.d f26, f9, f18, f7, rne # perform operation
fnmadd.d f26, f9, f18, f7, rtz # perform operation
fnmadd.d f26, f9, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff0000000000000)
li x8, 0xca30cbb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x3d81684d # load x3 with 32 MSBs 0x000000003d81684d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d81684d
sw x3, 0(x2) # store x3 (0x3d81684d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000003d81684d from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fnmadd.d f8, f19, f6, f11, dyn # perform operation
fnmadd.d f8, f19, f6, f11, rdn # perform operation
fnmadd.d f8, f19, f6, f11, rmm # perform operation
fnmadd.d f8, f19, f6, f11, rne # perform operation
fnmadd.d f8, f19, f6, f11, rtz # perform operation
fnmadd.d f8, f19, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f19, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x3ff8000000000000)
li x13, 0x16ffd9e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xee264722 # load x3 with 32 MSBs 0x00000000ee264722
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee264722
sw x3, 0(x2) # store x3 (0xee264722) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ee264722 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmadd.d f13, f21, f14, f3, dyn # perform operation
fnmadd.d f13, f21, f14, f3, rdn # perform operation
fnmadd.d f13, f21, f14, f3, rmm # perform operation
fnmadd.d f13, f21, f14, f3, rne # perform operation
fnmadd.d f13, f21, f14, f3, rtz # perform operation
fnmadd.d f13, f21, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f21, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xbff8000000000000)
li x16, 0x7d24a1f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x14d3bc12 # load x3 with 32 MSBs 0x0000000014d3bc12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014d3bc12
sw x3, 0(x2) # store x3 (0x14d3bc12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000014d3bc12 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fnmadd.d f16, f27, f8, f14, dyn # perform operation
fnmadd.d f16, f27, f8, f14, rdn # perform operation
fnmadd.d f16, f27, f8, f14, rmm # perform operation
fnmadd.d f16, f27, f8, f14, rne # perform operation
fnmadd.d f16, f27, f8, f14, rtz # perform operation
fnmadd.d f16, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f27, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x4000000000000000)
li x19, 0xc5c98e60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0xfd9a2fdb # load x3 with 32 MSBs 0x00000000fd9a2fdb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd9a2fdb
sw x3, 0(x2) # store x3 (0xfd9a2fdb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000fd9a2fdb from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fnmadd.d f19, f14, f25, f20, dyn # perform operation
fnmadd.d f19, f14, f25, f20, rdn # perform operation
fnmadd.d f19, f14, f25, f20, rmm # perform operation
fnmadd.d f19, f14, f25, f20, rne # perform operation
fnmadd.d f19, f14, f25, f20, rtz # perform operation
fnmadd.d f19, f14, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f14, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xc000000000000000)
li x12, 0x23d8e32d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x8c859c9c # load x3 with 32 MSBs 0x000000008c859c9c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c859c9c
sw x3, 0(x2) # store x3 (0x8c859c9c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008c859c9c from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fnmadd.d f12, f20, f21, f18, dyn # perform operation
fnmadd.d f12, f20, f21, f18, rdn # perform operation
fnmadd.d f12, f20, f21, f18, rmm # perform operation
fnmadd.d f12, f20, f21, f18, rne # perform operation
fnmadd.d f12, f20, f21, f18, rtz # perform operation
fnmadd.d f12, f20, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f20, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f20, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x10000000000000)
li x2, 0x7a3bb2ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x0f86daad # load x3 with 32 MSBs 0x000000000f86daad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f86daad
sw x3, 0(x2) # store x3 (0x0f86daad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000f86daad from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fnmadd.d f2, f9, f12, f14, dyn # perform operation
fnmadd.d f2, f9, f12, f14, rdn # perform operation
fnmadd.d f2, f9, f12, f14, rmm # perform operation
fnmadd.d f2, f9, f12, f14, rne # perform operation
fnmadd.d f2, f9, f12, f14, rtz # perform operation
fnmadd.d f2, f9, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f9, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f9, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8010000000000000)
li x9, 0x4b195107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0xc6cd0cc3 # load x3 with 32 MSBs 0x00000000c6cd0cc3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6cd0cc3
sw x3, 0(x2) # store x3 (0xc6cd0cc3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c6cd0cc3 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fnmadd.d f9, f15, f23, f31, dyn # perform operation
fnmadd.d f9, f15, f23, f31, rdn # perform operation
fnmadd.d f9, f15, f23, f31, rmm # perform operation
fnmadd.d f9, f15, f23, f31, rne # perform operation
fnmadd.d f9, f15, f23, f31, rtz # perform operation
fnmadd.d f9, f15, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f15, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f15, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f15, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f15, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f15, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fefffffffffffff)
li x26, 0x30ef0dbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x83069c66 # load x3 with 32 MSBs 0x0000000083069c66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083069c66
sw x3, 0(x2) # store x3 (0x83069c66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000083069c66 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fnmadd.d f26, f15, f19, f7, dyn # perform operation
fnmadd.d f26, f15, f19, f7, rdn # perform operation
fnmadd.d f26, f15, f19, f7, rmm # perform operation
fnmadd.d f26, f15, f19, f7, rne # perform operation
fnmadd.d f26, f15, f19, f7, rtz # perform operation
fnmadd.d f26, f15, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f15, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xffefffffffffffff)
li x19, 0x217187ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x018fecfc # load x3 with 32 MSBs 0x00000000018fecfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000018fecfc
sw x3, 0(x2) # store x3 (0x018fecfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000018fecfc from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fnmadd.d f19, f22, f10, f2, dyn # perform operation
fnmadd.d f19, f22, f10, f2, rdn # perform operation
fnmadd.d f19, f22, f10, f2, rmm # perform operation
fnmadd.d f19, f22, f10, f2, rne # perform operation
fnmadd.d f19, f22, f10, f2, rtz # perform operation
fnmadd.d f19, f22, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f22, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f22, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f22, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f22, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f22, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfffffffffffff)
li x10, 0x44b20357 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x0b3594ac # load x3 with 32 MSBs 0x000000000b3594ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b3594ac
sw x3, 0(x2) # store x3 (0x0b3594ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000000b3594ac from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fnmadd.d f10, f2, f11, f23, dyn # perform operation
fnmadd.d f10, f2, f11, f23, rdn # perform operation
fnmadd.d f10, f2, f11, f23, rmm # perform operation
fnmadd.d f10, f2, f11, f23, rne # perform operation
fnmadd.d f10, f2, f11, f23, rtz # perform operation
fnmadd.d f10, f2, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f2, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x800fffffffffffff)
li x20, 0xc0171543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
li x3, 0x02905379 # load x3 with 32 MSBs 0x0000000002905379
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002905379
sw x3, 0(x2) # store x3 (0x02905379) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000002905379 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fnmadd.d f20, f26, f16, f5, dyn # perform operation
fnmadd.d f20, f26, f16, f5, rdn # perform operation
fnmadd.d f20, f26, f16, f5, rmm # perform operation
fnmadd.d f20, f26, f16, f5, rne # perform operation
fnmadd.d f20, f26, f16, f5, rtz # perform operation
fnmadd.d f20, f26, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f26, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000)
li x22, 0xc5b51f4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x7aed1dd0 # load x3 with 32 MSBs 0x000000007aed1dd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007aed1dd0
sw x3, 0(x2) # store x3 (0x7aed1dd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000007aed1dd0 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fnmadd.d f22, f10, f29, f23, dyn # perform operation
fnmadd.d f22, f10, f29, f23, rdn # perform operation
fnmadd.d f22, f10, f29, f23, rmm # perform operation
fnmadd.d f22, f10, f29, f23, rne # perform operation
fnmadd.d f22, f10, f29, f23, rtz # perform operation
fnmadd.d f22, f10, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f10, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f10, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f10, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f10, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f10, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8008000000000000)
li x6, 0x60014d05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xa04ed5fa # load x3 with 32 MSBs 0x00000000a04ed5fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a04ed5fa
sw x3, 0(x2) # store x3 (0xa04ed5fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a04ed5fa from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fnmadd.d f6, f9, f28, f24, dyn # perform operation
fnmadd.d f6, f9, f28, f24, rdn # perform operation
fnmadd.d f6, f9, f28, f24, rmm # perform operation
fnmadd.d f6, f9, f28, f24, rne # perform operation
fnmadd.d f6, f9, f28, f24, rtz # perform operation
fnmadd.d f6, f9, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f9, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f9, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x1)
li x21, 0x09f1765b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0x2311ca13 # load x3 with 32 MSBs 0x000000002311ca13
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002311ca13
sw x3, 0(x2) # store x3 (0x2311ca13) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002311ca13 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fnmadd.d f21, f19, f1, f12, dyn # perform operation
fnmadd.d f21, f19, f1, f12, rdn # perform operation
fnmadd.d f21, f19, f1, f12, rmm # perform operation
fnmadd.d f21, f19, f1, f12, rne # perform operation
fnmadd.d f21, f19, f1, f12, rtz # perform operation
fnmadd.d f21, f19, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f19, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f19, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f19, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f19, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f19, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x8000000000000001)
li x9, 0x5c24bbcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0xdddbae47 # load x3 with 32 MSBs 0x00000000dddbae47
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dddbae47
sw x3, 0(x2) # store x3 (0xdddbae47) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000dddbae47 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fnmadd.d f9, f19, f2, f6, dyn # perform operation
fnmadd.d f9, f19, f2, f6, rdn # perform operation
fnmadd.d f9, f19, f2, f6, rmm # perform operation
fnmadd.d f9, f19, f2, f6, rne # perform operation
fnmadd.d f9, f19, f2, f6, rtz # perform operation
fnmadd.d f9, f19, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f19, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f19, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000000)
li x26, 0xe408f9e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0xd32d41e8 # load x3 with 32 MSBs 0x00000000d32d41e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d32d41e8
sw x3, 0(x2) # store x3 (0xd32d41e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d32d41e8 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fnmadd.d f26, f9, f10, f5, dyn # perform operation
fnmadd.d f26, f9, f10, f5, rdn # perform operation
fnmadd.d f26, f9, f10, f5, rmm # perform operation
fnmadd.d f26, f9, f10, f5, rne # perform operation
fnmadd.d f26, f9, f10, f5, rtz # perform operation
fnmadd.d f26, f9, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f9, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xfff0000000000000)
li x11, 0xac20e3f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x06d01910 # load x3 with 32 MSBs 0x0000000006d01910
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006d01910
sw x3, 0(x2) # store x3 (0x06d01910) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000006d01910 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fnmadd.d f11, f15, f5, f12, dyn # perform operation
fnmadd.d f11, f15, f5, f12, rdn # perform operation
fnmadd.d f11, f15, f5, f12, rmm # perform operation
fnmadd.d f11, f15, f5, f12, rne # perform operation
fnmadd.d f11, f15, f5, f12, rtz # perform operation
fnmadd.d f11, f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f15, f5, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff8000000000000)
li x14, 0xb4d824fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x8be0a1f7 # load x3 with 32 MSBs 0x000000008be0a1f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008be0a1f7
sw x3, 0(x2) # store x3 (0x8be0a1f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008be0a1f7 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fnmadd.d f14, f25, f27, f30, dyn # perform operation
fnmadd.d f14, f25, f27, f30, rdn # perform operation
fnmadd.d f14, f25, f27, f30, rmm # perform operation
fnmadd.d f14, f25, f27, f30, rne # perform operation
fnmadd.d f14, f25, f27, f30, rtz # perform operation
fnmadd.d f14, f25, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f25, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f25, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7fffffffffffffff)
li x14, 0x42bb2ed6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x93185edf # load x3 with 32 MSBs 0x0000000093185edf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093185edf
sw x3, 0(x2) # store x3 (0x93185edf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000093185edf from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fnmadd.d f14, f20, f23, f30, dyn # perform operation
fnmadd.d f14, f20, f23, f30, rdn # perform operation
fnmadd.d f14, f20, f23, f30, rmm # perform operation
fnmadd.d f14, f20, f23, f30, rne # perform operation
fnmadd.d f14, f20, f23, f30, rtz # perform operation
fnmadd.d f14, f20, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f20, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f20, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff0000000000001)
li x19, 0xdd0b94a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x8f09c7d3 # load x3 with 32 MSBs 0x000000008f09c7d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f09c7d3
sw x3, 0(x2) # store x3 (0x8f09c7d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008f09c7d3 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fnmadd.d f19, f8, f25, f24, dyn # perform operation
fnmadd.d f19, f8, f25, f24, rdn # perform operation
fnmadd.d f19, f8, f25, f24, rmm # perform operation
fnmadd.d f19, f8, f25, f24, rne # perform operation
fnmadd.d f19, f8, f25, f24, rtz # perform operation
fnmadd.d f19, f8, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f8, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f8, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x7ff7ffffffffffff)
li x29, 0x97c57537 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0xeff97e7e # load x3 with 32 MSBs 0x00000000eff97e7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eff97e7e
sw x3, 0(x2) # store x3 (0xeff97e7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000eff97e7e from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f29, f12, f8, f25, dyn # perform operation
fnmadd.d f29, f12, f8, f25, rdn # perform operation
fnmadd.d f29, f12, f8, f25, rmm # perform operation
fnmadd.d f29, f12, f8, f25, rne # perform operation
fnmadd.d f29, f12, f8, f25, rtz # perform operation
fnmadd.d f29, f12, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f12, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f12, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f12, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f12, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f12, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0x5a392534a57711ad)
li x2, 0xb9239883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x63836855 # load x3 with 32 MSBs 0x0000000063836855
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063836855
sw x3, 0(x2) # store x3 (0x63836855) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000063836855 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fnmadd.d f2, f13, f15, f22, dyn # perform operation
fnmadd.d f2, f13, f15, f22, rdn # perform operation
fnmadd.d f2, f13, f15, f22, rmm # perform operation
fnmadd.d f2, f13, f15, f22, rne # perform operation
fnmadd.d f2, f13, f15, f22, rtz # perform operation
fnmadd.d f2, f13, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000 fs3 = 0xa6e895993737426c)
li x8, 0x994f17b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0xdf3a840e # load x3 with 32 MSBs 0x00000000df3a840e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df3a840e
sw x3, 0(x2) # store x3 (0xdf3a840e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000df3a840e from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fnmadd.d f8, f15, f26, f16, dyn # perform operation
fnmadd.d f8, f15, f26, f16, rdn # perform operation
fnmadd.d f8, f15, f26, f16, rmm # perform operation
fnmadd.d f8, f15, f26, f16, rne # perform operation
fnmadd.d f8, f15, f26, f16, rtz # perform operation
fnmadd.d f8, f15, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f15, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f15, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x0)
li x19, 0x56426402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x7ae34f07 # load x3 with 32 MSBs 0x000000007ae34f07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ae34f07
sw x3, 0(x2) # store x3 (0x7ae34f07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007ae34f07 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fnmadd.d f19, f9, f5, f15, dyn # perform operation
fnmadd.d f19, f9, f5, f15, rdn # perform operation
fnmadd.d f19, f9, f5, f15, rmm # perform operation
fnmadd.d f19, f9, f5, f15, rne # perform operation
fnmadd.d f19, f9, f5, f15, rtz # perform operation
fnmadd.d f19, f9, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f9, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f9, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f9, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f9, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f9, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000000)
li x23, 0x18d98312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0xf96f575c # load x3 with 32 MSBs 0x00000000f96f575c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f96f575c
sw x3, 0(x2) # store x3 (0xf96f575c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f96f575c from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fnmadd.d f23, f17, f26, f5, dyn # perform operation
fnmadd.d f23, f17, f26, f5, rdn # perform operation
fnmadd.d f23, f17, f26, f5, rmm # perform operation
fnmadd.d f23, f17, f26, f5, rne # perform operation
fnmadd.d f23, f17, f26, f5, rtz # perform operation
fnmadd.d f23, f17, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f17, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f17, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff0000000000000)
li x20, 0x59d4e0b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x278c6de8 # load x3 with 32 MSBs 0x00000000278c6de8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000278c6de8
sw x3, 0(x2) # store x3 (0x278c6de8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000278c6de8 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fnmadd.d f20, f15, f3, f11, dyn # perform operation
fnmadd.d f20, f15, f3, f11, rdn # perform operation
fnmadd.d f20, f15, f3, f11, rmm # perform operation
fnmadd.d f20, f15, f3, f11, rne # perform operation
fnmadd.d f20, f15, f3, f11, rtz # perform operation
fnmadd.d f20, f15, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff0000000000000)
li x10, 0x83e61fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x2c4d0290 # load x3 with 32 MSBs 0x000000002c4d0290
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c4d0290
sw x3, 0(x2) # store x3 (0x2c4d0290) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002c4d0290 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fnmadd.d f10, f25, f30, f17, dyn # perform operation
fnmadd.d f10, f25, f30, f17, rdn # perform operation
fnmadd.d f10, f25, f30, f17, rmm # perform operation
fnmadd.d f10, f25, f30, f17, rne # perform operation
fnmadd.d f10, f25, f30, f17, rtz # perform operation
fnmadd.d f10, f25, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f25, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f25, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x3ff8000000000000)
li x10, 0x82cce15e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x6ce1eb1d # load x3 with 32 MSBs 0x000000006ce1eb1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ce1eb1d
sw x3, 0(x2) # store x3 (0x6ce1eb1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006ce1eb1d from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fnmadd.d f10, f31, f18, f3, dyn # perform operation
fnmadd.d f10, f31, f18, f3, rdn # perform operation
fnmadd.d f10, f31, f18, f3, rmm # perform operation
fnmadd.d f10, f31, f18, f3, rne # perform operation
fnmadd.d f10, f31, f18, f3, rtz # perform operation
fnmadd.d f10, f31, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f31, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xbff8000000000000)
li x28, 0x7a2668dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
li x3, 0x855a797d # load x3 with 32 MSBs 0x00000000855a797d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000855a797d
sw x3, 0(x2) # store x3 (0x855a797d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000855a797d from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fnmadd.d f28, f6, f20, f11, dyn # perform operation
fnmadd.d f28, f6, f20, f11, rdn # perform operation
fnmadd.d f28, f6, f20, f11, rmm # perform operation
fnmadd.d f28, f6, f20, f11, rne # perform operation
fnmadd.d f28, f6, f20, f11, rtz # perform operation
fnmadd.d f28, f6, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f6, f20, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x4000000000000000)
li x8, 0x925adf01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x9f23b1b5 # load x3 with 32 MSBs 0x000000009f23b1b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f23b1b5
sw x3, 0(x2) # store x3 (0x9f23b1b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009f23b1b5 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fnmadd.d f8, f20, f12, f30, dyn # perform operation
fnmadd.d f8, f20, f12, f30, rdn # perform operation
fnmadd.d f8, f20, f12, f30, rmm # perform operation
fnmadd.d f8, f20, f12, f30, rne # perform operation
fnmadd.d f8, f20, f12, f30, rtz # perform operation
fnmadd.d f8, f20, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f20, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f20, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xc000000000000000)
li x5, 0xbc6dc00b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xec126f3a # load x3 with 32 MSBs 0x00000000ec126f3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec126f3a
sw x3, 0(x2) # store x3 (0xec126f3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ec126f3a from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fnmadd.d f5, f3, f6, f1, dyn # perform operation
fnmadd.d f5, f3, f6, f1, rdn # perform operation
fnmadd.d f5, f3, f6, f1, rmm # perform operation
fnmadd.d f5, f3, f6, f1, rne # perform operation
fnmadd.d f5, f3, f6, f1, rtz # perform operation
fnmadd.d f5, f3, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f3, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f3, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x10000000000000)
li x7, 0x1756b2a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x908584ea # load x3 with 32 MSBs 0x00000000908584ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000908584ea
sw x3, 0(x2) # store x3 (0x908584ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000908584ea from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fnmadd.d f7, f1, f20, f26, dyn # perform operation
fnmadd.d f7, f1, f20, f26, rdn # perform operation
fnmadd.d f7, f1, f20, f26, rmm # perform operation
fnmadd.d f7, f1, f20, f26, rne # perform operation
fnmadd.d f7, f1, f20, f26, rtz # perform operation
fnmadd.d f7, f1, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f1, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8010000000000000)
li x12, 0xe2055bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0xbd298bd7 # load x3 with 32 MSBs 0x00000000bd298bd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd298bd7
sw x3, 0(x2) # store x3 (0xbd298bd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bd298bd7 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
fnmadd.d f12, f15, f11, f7, dyn # perform operation
fnmadd.d f12, f15, f11, f7, rdn # perform operation
fnmadd.d f12, f15, f11, f7, rmm # perform operation
fnmadd.d f12, f15, f11, f7, rne # perform operation
fnmadd.d f12, f15, f11, f7, rtz # perform operation
fnmadd.d f12, f15, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f15, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f15, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f15, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f15, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f15, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fefffffffffffff)
li x11, 0xa9b9513b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0xd137e36a # load x3 with 32 MSBs 0x00000000d137e36a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d137e36a
sw x3, 0(x2) # store x3 (0xd137e36a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d137e36a from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fnmadd.d f11, f1, f25, f14, dyn # perform operation
fnmadd.d f11, f1, f25, f14, rdn # perform operation
fnmadd.d f11, f1, f25, f14, rmm # perform operation
fnmadd.d f11, f1, f25, f14, rne # perform operation
fnmadd.d f11, f1, f25, f14, rtz # perform operation
fnmadd.d f11, f1, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f1, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xffefffffffffffff)
li x21, 0xcf112075 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0xf684f71c # load x3 with 32 MSBs 0x00000000f684f71c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f684f71c
sw x3, 0(x2) # store x3 (0xf684f71c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f684f71c from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fnmadd.d f21, f8, f11, f26, dyn # perform operation
fnmadd.d f21, f8, f11, f26, rdn # perform operation
fnmadd.d f21, f8, f11, f26, rmm # perform operation
fnmadd.d f21, f8, f11, f26, rne # perform operation
fnmadd.d f21, f8, f11, f26, rtz # perform operation
fnmadd.d f21, f8, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfffffffffffff)
li x23, 0xd4f7ac04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x8d4ca3a9 # load x3 with 32 MSBs 0x000000008d4ca3a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d4ca3a9
sw x3, 0(x2) # store x3 (0x8d4ca3a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008d4ca3a9 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fnmadd.d f23, f15, f25, f4, dyn # perform operation
fnmadd.d f23, f15, f25, f4, rdn # perform operation
fnmadd.d f23, f15, f25, f4, rmm # perform operation
fnmadd.d f23, f15, f25, f4, rne # perform operation
fnmadd.d f23, f15, f25, f4, rtz # perform operation
fnmadd.d f23, f15, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f15, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f15, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x800fffffffffffff)
li x9, 0xc4392069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x2ee1ce0d # load x3 with 32 MSBs 0x000000002ee1ce0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ee1ce0d
sw x3, 0(x2) # store x3 (0x2ee1ce0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000002ee1ce0d from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fnmadd.d f9, f8, f20, f28, dyn # perform operation
fnmadd.d f9, f8, f20, f28, rdn # perform operation
fnmadd.d f9, f8, f20, f28, rmm # perform operation
fnmadd.d f9, f8, f20, f28, rne # perform operation
fnmadd.d f9, f8, f20, f28, rtz # perform operation
fnmadd.d f9, f8, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000)
li x5, 0x1a7d5d41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x2605ba1d # load x3 with 32 MSBs 0x000000002605ba1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002605ba1d
sw x3, 0(x2) # store x3 (0x2605ba1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002605ba1d from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fnmadd.d f5, f26, f19, f7, dyn # perform operation
fnmadd.d f5, f26, f19, f7, rdn # perform operation
fnmadd.d f5, f26, f19, f7, rmm # perform operation
fnmadd.d f5, f26, f19, f7, rne # perform operation
fnmadd.d f5, f26, f19, f7, rtz # perform operation
fnmadd.d f5, f26, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f26, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f26, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8008000000000000)
li x14, 0x3807d14f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x4c71725d # load x3 with 32 MSBs 0x000000004c71725d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c71725d
sw x3, 0(x2) # store x3 (0x4c71725d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004c71725d from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fnmadd.d f14, f4, f28, f31, dyn # perform operation
fnmadd.d f14, f4, f28, f31, rdn # perform operation
fnmadd.d f14, f4, f28, f31, rmm # perform operation
fnmadd.d f14, f4, f28, f31, rne # perform operation
fnmadd.d f14, f4, f28, f31, rtz # perform operation
fnmadd.d f14, f4, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f4, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f4, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f4, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f4, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f4, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x1)
li x12, 0xe85fafb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0x2b831dab # load x3 with 32 MSBs 0x000000002b831dab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b831dab
sw x3, 0(x2) # store x3 (0x2b831dab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002b831dab from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fnmadd.d f12, f21, f3, f27, dyn # perform operation
fnmadd.d f12, f21, f3, f27, rdn # perform operation
fnmadd.d f12, f21, f3, f27, rmm # perform operation
fnmadd.d f12, f21, f3, f27, rne # perform operation
fnmadd.d f12, f21, f3, f27, rtz # perform operation
fnmadd.d f12, f21, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f21, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x8000000000000001)
li x27, 0x36679722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0xba51ee62 # load x3 with 32 MSBs 0x00000000ba51ee62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba51ee62
sw x3, 0(x2) # store x3 (0xba51ee62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ba51ee62 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fnmadd.d f27, f9, f22, f17, dyn # perform operation
fnmadd.d f27, f9, f22, f17, rdn # perform operation
fnmadd.d f27, f9, f22, f17, rmm # perform operation
fnmadd.d f27, f9, f22, f17, rne # perform operation
fnmadd.d f27, f9, f22, f17, rtz # perform operation
fnmadd.d f27, f9, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f9, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000000)
li x14, 0x6da8f186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x4ccf8968 # load x3 with 32 MSBs 0x000000004ccf8968
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ccf8968
sw x3, 0(x2) # store x3 (0x4ccf8968) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004ccf8968 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fnmadd.d f14, f27, f16, f1, dyn # perform operation
fnmadd.d f14, f27, f16, f1, rdn # perform operation
fnmadd.d f14, f27, f16, f1, rmm # perform operation
fnmadd.d f14, f27, f16, f1, rne # perform operation
fnmadd.d f14, f27, f16, f1, rtz # perform operation
fnmadd.d f14, f27, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f27, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f27, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f27, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f27, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f27, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xfff0000000000000)
li x13, 0x50951a57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0xdac1d417 # load x3 with 32 MSBs 0x00000000dac1d417
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dac1d417
sw x3, 0(x2) # store x3 (0xdac1d417) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dac1d417 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fnmadd.d f13, f19, f11, f26, dyn # perform operation
fnmadd.d f13, f19, f11, f26, rdn # perform operation
fnmadd.d f13, f19, f11, f26, rmm # perform operation
fnmadd.d f13, f19, f11, f26, rne # perform operation
fnmadd.d f13, f19, f11, f26, rtz # perform operation
fnmadd.d f13, f19, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f19, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff8000000000000)
li x29, 0x25d5aabe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
li x3, 0xe29a6752 # load x3 with 32 MSBs 0x00000000e29a6752
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e29a6752
sw x3, 0(x2) # store x3 (0xe29a6752) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e29a6752 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
fnmadd.d f29, f28, f13, f7, dyn # perform operation
fnmadd.d f29, f28, f13, f7, rdn # perform operation
fnmadd.d f29, f28, f13, f7, rmm # perform operation
fnmadd.d f29, f28, f13, f7, rne # perform operation
fnmadd.d f29, f28, f13, f7, rtz # perform operation
fnmadd.d f29, f28, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f28, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7fffffffffffffff)
li x17, 0xd8add466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x4840b9a2 # load x3 with 32 MSBs 0x000000004840b9a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004840b9a2
sw x3, 0(x2) # store x3 (0x4840b9a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000004840b9a2 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fnmadd.d f17, f26, f7, f29, dyn # perform operation
fnmadd.d f17, f26, f7, f29, rdn # perform operation
fnmadd.d f17, f26, f7, f29, rmm # perform operation
fnmadd.d f17, f26, f7, f29, rne # perform operation
fnmadd.d f17, f26, f7, f29, rtz # perform operation
fnmadd.d f17, f26, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f26, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f26, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f26, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f26, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f26, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff0000000000001)
li x16, 0xe26ca119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0x95d0b717 # load x3 with 32 MSBs 0x0000000095d0b717
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095d0b717
sw x3, 0(x2) # store x3 (0x95d0b717) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000095d0b717 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fnmadd.d f16, f27, f18, f20, dyn # perform operation
fnmadd.d f16, f27, f18, f20, rdn # perform operation
fnmadd.d f16, f27, f18, f20, rmm # perform operation
fnmadd.d f16, f27, f18, f20, rne # perform operation
fnmadd.d f16, f27, f18, f20, rtz # perform operation
fnmadd.d f16, f27, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f27, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x7ff7ffffffffffff)
li x4, 0x6c8fce07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xe8459e37 # load x3 with 32 MSBs 0x00000000e8459e37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8459e37
sw x3, 0(x2) # store x3 (0xe8459e37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e8459e37 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fnmadd.d f4, f23, f18, f3, dyn # perform operation
fnmadd.d f4, f23, f18, f3, rdn # perform operation
fnmadd.d f4, f23, f18, f3, rmm # perform operation
fnmadd.d f4, f23, f18, f3, rne # perform operation
fnmadd.d f4, f23, f18, f3, rtz # perform operation
fnmadd.d f4, f23, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f23, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f23, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0x5a392534a57711ad)
li x11, 0xacfd4fa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
li x3, 0x6604bfa4 # load x3 with 32 MSBs 0x000000006604bfa4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006604bfa4
sw x3, 0(x2) # store x3 (0x6604bfa4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000006604bfa4 from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fnmadd.d f11, f8, f2, f24, dyn # perform operation
fnmadd.d f11, f8, f2, f24, rdn # perform operation
fnmadd.d f11, f8, f2, f24, rmm # perform operation
fnmadd.d f11, f8, f2, f24, rne # perform operation
fnmadd.d f11, f8, f2, f24, rtz # perform operation
fnmadd.d f11, f8, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f8, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f8, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f8, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f8, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f8, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8008000000000000 fs3 = 0xa6e895993737426c)
li x12, 0x207b5678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
li x3, 0xa3d9d60e # load x3 with 32 MSBs 0x00000000a3d9d60e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3d9d60e
sw x3, 0(x2) # store x3 (0xa3d9d60e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a3d9d60e from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fnmadd.d f12, f7, f25, f29, dyn # perform operation
fnmadd.d f12, f7, f25, f29, rdn # perform operation
fnmadd.d f12, f7, f25, f29, rmm # perform operation
fnmadd.d f12, f7, f25, f29, rne # perform operation
fnmadd.d f12, f7, f25, f29, rtz # perform operation
fnmadd.d f12, f7, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f7, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f7, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x10, 0x5282f547 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x56e2d62b # load x3 with 32 MSBs 0x0000000056e2d62b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056e2d62b
sw x3, 0(x2) # store x3 (0x56e2d62b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000056e2d62b from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fnmadd.d f10, f18, f21, f3, dyn # perform operation
fnmadd.d f10, f18, f21, f3, rdn # perform operation
fnmadd.d f10, f18, f21, f3, rmm # perform operation
fnmadd.d f10, f18, f21, f3, rne # perform operation
fnmadd.d f10, f18, f21, f3, rtz # perform operation
fnmadd.d f10, f18, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f18, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f18, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000000)
li x25, 0x47675a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xb9128af6 # load x3 with 32 MSBs 0x00000000b9128af6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9128af6
sw x3, 0(x2) # store x3 (0xb9128af6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b9128af6 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fnmadd.d f25, f2, f12, f10, dyn # perform operation
fnmadd.d f25, f2, f12, f10, rdn # perform operation
fnmadd.d f25, f2, f12, f10, rmm # perform operation
fnmadd.d f25, f2, f12, f10, rne # perform operation
fnmadd.d f25, f2, f12, f10, rtz # perform operation
fnmadd.d f25, f2, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f2, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f2, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff0000000000000)
li x5, 0x4cc4badf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x28142a59 # load x3 with 32 MSBs 0x0000000028142a59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028142a59
sw x3, 0(x2) # store x3 (0x28142a59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000028142a59 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fnmadd.d f5, f28, f19, f23, dyn # perform operation
fnmadd.d f5, f28, f19, f23, rdn # perform operation
fnmadd.d f5, f28, f19, f23, rmm # perform operation
fnmadd.d f5, f28, f19, f23, rne # perform operation
fnmadd.d f5, f28, f19, f23, rtz # perform operation
fnmadd.d f5, f28, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f28, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f28, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f28, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f28, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f28, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff0000000000000)
li x6, 0xab5da140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x78e4f7ef # load x3 with 32 MSBs 0x0000000078e4f7ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078e4f7ef
sw x3, 0(x2) # store x3 (0x78e4f7ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000078e4f7ef from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fnmadd.d f6, f25, f14, f22, dyn # perform operation
fnmadd.d f6, f25, f14, f22, rdn # perform operation
fnmadd.d f6, f25, f14, f22, rmm # perform operation
fnmadd.d f6, f25, f14, f22, rne # perform operation
fnmadd.d f6, f25, f14, f22, rtz # perform operation
fnmadd.d f6, f25, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f25, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f25, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f25, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f25, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f25, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff8000000000000)
li x1, 0x95832b7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x648f09fe # load x3 with 32 MSBs 0x00000000648f09fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000648f09fe
sw x3, 0(x2) # store x3 (0x648f09fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000648f09fe from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fnmadd.d f1, f5, f30, f6, dyn # perform operation
fnmadd.d f1, f5, f30, f6, rdn # perform operation
fnmadd.d f1, f5, f30, f6, rmm # perform operation
fnmadd.d f1, f5, f30, f6, rne # perform operation
fnmadd.d f1, f5, f30, f6, rtz # perform operation
fnmadd.d f1, f5, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f5, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f5, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f5, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f5, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f5, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbff8000000000000)
li x24, 0xaa4f3dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x8b0a1a15 # load x3 with 32 MSBs 0x000000008b0a1a15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b0a1a15
sw x3, 0(x2) # store x3 (0x8b0a1a15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008b0a1a15 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmadd.d f24, f20, f17, f26, dyn # perform operation
fnmadd.d f24, f20, f17, f26, rdn # perform operation
fnmadd.d f24, f20, f17, f26, rmm # perform operation
fnmadd.d f24, f20, f17, f26, rne # perform operation
fnmadd.d f24, f20, f17, f26, rtz # perform operation
fnmadd.d f24, f20, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f20, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000000000000000)
li x2, 0xe97e511d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x9351ffae # load x3 with 32 MSBs 0x000000009351ffae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009351ffae
sw x3, 0(x2) # store x3 (0x9351ffae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009351ffae from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fnmadd.d f2, f18, f5, f21, dyn # perform operation
fnmadd.d f2, f18, f5, f21, rdn # perform operation
fnmadd.d f2, f18, f5, f21, rmm # perform operation
fnmadd.d f2, f18, f5, f21, rne # perform operation
fnmadd.d f2, f18, f5, f21, rtz # perform operation
fnmadd.d f2, f18, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f18, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000000000000000)
li x21, 0x1c599832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xbebc112c # load x3 with 32 MSBs 0x00000000bebc112c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bebc112c
sw x3, 0(x2) # store x3 (0xbebc112c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000bebc112c from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fnmadd.d f21, f31, f16, f5, dyn # perform operation
fnmadd.d f21, f31, f16, f5, rdn # perform operation
fnmadd.d f21, f31, f16, f5, rmm # perform operation
fnmadd.d f21, f31, f16, f5, rne # perform operation
fnmadd.d f21, f31, f16, f5, rtz # perform operation
fnmadd.d f21, f31, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f31, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x10000000000000)
li x19, 0xa906eb5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x6caa30cc # load x3 with 32 MSBs 0x000000006caa30cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006caa30cc
sw x3, 0(x2) # store x3 (0x6caa30cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006caa30cc from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fnmadd.d f19, f25, f28, f4, dyn # perform operation
fnmadd.d f19, f25, f28, f4, rdn # perform operation
fnmadd.d f19, f25, f28, f4, rmm # perform operation
fnmadd.d f19, f25, f28, f4, rne # perform operation
fnmadd.d f19, f25, f28, f4, rtz # perform operation
fnmadd.d f19, f25, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f25, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f25, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8010000000000000)
li x25, 0xd899677d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x3007b124 # load x3 with 32 MSBs 0x000000003007b124
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003007b124
sw x3, 0(x2) # store x3 (0x3007b124) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003007b124 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fnmadd.d f25, f24, f30, f9, dyn # perform operation
fnmadd.d f25, f24, f30, f9, rdn # perform operation
fnmadd.d f25, f24, f30, f9, rmm # perform operation
fnmadd.d f25, f24, f30, f9, rne # perform operation
fnmadd.d f25, f24, f30, f9, rtz # perform operation
fnmadd.d f25, f24, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f24, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f24, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f24, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f24, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f24, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fefffffffffffff)
li x23, 0x18bf413a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x062465ab # load x3 with 32 MSBs 0x00000000062465ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000062465ab
sw x3, 0(x2) # store x3 (0x062465ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000062465ab from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fnmadd.d f23, f4, f12, f17, dyn # perform operation
fnmadd.d f23, f4, f12, f17, rdn # perform operation
fnmadd.d f23, f4, f12, f17, rmm # perform operation
fnmadd.d f23, f4, f12, f17, rne # perform operation
fnmadd.d f23, f4, f12, f17, rtz # perform operation
fnmadd.d f23, f4, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f4, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffefffffffffffff)
li x30, 0xb14b6282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x0535b558 # load x3 with 32 MSBs 0x000000000535b558
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000535b558
sw x3, 0(x2) # store x3 (0x0535b558) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000535b558 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fnmadd.d f30, f14, f31, f19, dyn # perform operation
fnmadd.d f30, f14, f31, f19, rdn # perform operation
fnmadd.d f30, f14, f31, f19, rmm # perform operation
fnmadd.d f30, f14, f31, f19, rne # perform operation
fnmadd.d f30, f14, f31, f19, rtz # perform operation
fnmadd.d f30, f14, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f14, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfffffffffffff)
li x18, 0x0b83024e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x1b3f1376 # load x3 with 32 MSBs 0x000000001b3f1376
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b3f1376
sw x3, 0(x2) # store x3 (0x1b3f1376) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001b3f1376 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fnmadd.d f18, f12, f14, f19, dyn # perform operation
fnmadd.d f18, f12, f14, f19, rdn # perform operation
fnmadd.d f18, f12, f14, f19, rmm # perform operation
fnmadd.d f18, f12, f14, f19, rne # perform operation
fnmadd.d f18, f12, f14, f19, rtz # perform operation
fnmadd.d f18, f12, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f12, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800fffffffffffff)
li x20, 0x2d9d331e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x0bc28165 # load x3 with 32 MSBs 0x000000000bc28165
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bc28165
sw x3, 0(x2) # store x3 (0x0bc28165) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000bc28165 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fnmadd.d f20, f23, f5, f4, dyn # perform operation
fnmadd.d f20, f23, f5, f4, rdn # perform operation
fnmadd.d f20, f23, f5, f4, rmm # perform operation
fnmadd.d f20, f23, f5, f4, rne # perform operation
fnmadd.d f20, f23, f5, f4, rtz # perform operation
fnmadd.d f20, f23, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f23, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000)
li x7, 0xfcb4a272 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0x9de5794e # load x3 with 32 MSBs 0x000000009de5794e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009de5794e
sw x3, 0(x2) # store x3 (0x9de5794e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000009de5794e from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fnmadd.d f7, f26, f2, f9, dyn # perform operation
fnmadd.d f7, f26, f2, f9, rdn # perform operation
fnmadd.d f7, f26, f2, f9, rmm # perform operation
fnmadd.d f7, f26, f2, f9, rne # perform operation
fnmadd.d f7, f26, f2, f9, rtz # perform operation
fnmadd.d f7, f26, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f26, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8008000000000000)
li x26, 0xb8dccacf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0xc70b985e # load x3 with 32 MSBs 0x00000000c70b985e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c70b985e
sw x3, 0(x2) # store x3 (0xc70b985e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c70b985e from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fnmadd.d f26, f18, f8, f9, dyn # perform operation
fnmadd.d f26, f18, f8, f9, rdn # perform operation
fnmadd.d f26, f18, f8, f9, rmm # perform operation
fnmadd.d f26, f18, f8, f9, rne # perform operation
fnmadd.d f26, f18, f8, f9, rtz # perform operation
fnmadd.d f26, f18, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f18, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f18, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x5, 0xcb2411db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0xe12fd9d8 # load x3 with 32 MSBs 0x00000000e12fd9d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e12fd9d8
sw x3, 0(x2) # store x3 (0xe12fd9d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e12fd9d8 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fnmadd.d f5, f14, f29, f6, dyn # perform operation
fnmadd.d f5, f14, f29, f6, rdn # perform operation
fnmadd.d f5, f14, f29, f6, rmm # perform operation
fnmadd.d f5, f14, f29, f6, rne # perform operation
fnmadd.d f5, f14, f29, f6, rtz # perform operation
fnmadd.d f5, f14, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000000000000001)
li x2, 0xadede2f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x11527156 # load x3 with 32 MSBs 0x0000000011527156
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011527156
sw x3, 0(x2) # store x3 (0x11527156) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000011527156 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fnmadd.d f2, f1, f20, f19, dyn # perform operation
fnmadd.d f2, f1, f20, f19, rdn # perform operation
fnmadd.d f2, f1, f20, f19, rmm # perform operation
fnmadd.d f2, f1, f20, f19, rne # perform operation
fnmadd.d f2, f1, f20, f19, rtz # perform operation
fnmadd.d f2, f1, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f1, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f1, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f1, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f1, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f1, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000000)
li x30, 0x9fe6d978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x724cf069 # load x3 with 32 MSBs 0x00000000724cf069
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000724cf069
sw x3, 0(x2) # store x3 (0x724cf069) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000724cf069 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fnmadd.d f30, f5, f29, f22, dyn # perform operation
fnmadd.d f30, f5, f29, f22, rdn # perform operation
fnmadd.d f30, f5, f29, f22, rmm # perform operation
fnmadd.d f30, f5, f29, f22, rne # perform operation
fnmadd.d f30, f5, f29, f22, rtz # perform operation
fnmadd.d f30, f5, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f5, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f5, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f5, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f5, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f5, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfff0000000000000)
li x26, 0x186234d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0xe0f29ee3 # load x3 with 32 MSBs 0x00000000e0f29ee3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0f29ee3
sw x3, 0(x2) # store x3 (0xe0f29ee3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e0f29ee3 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fnmadd.d f26, f8, f19, f20, dyn # perform operation
fnmadd.d f26, f8, f19, f20, rdn # perform operation
fnmadd.d f26, f8, f19, f20, rmm # perform operation
fnmadd.d f26, f8, f19, f20, rne # perform operation
fnmadd.d f26, f8, f19, f20, rtz # perform operation
fnmadd.d f26, f8, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f8, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff8000000000000)
li x22, 0xf8fe4f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0xd73a7ecc # load x3 with 32 MSBs 0x00000000d73a7ecc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d73a7ecc
sw x3, 0(x2) # store x3 (0xd73a7ecc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d73a7ecc from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fnmadd.d f22, f4, f20, f30, dyn # perform operation
fnmadd.d f22, f4, f20, f30, rdn # perform operation
fnmadd.d f22, f4, f20, f30, rmm # perform operation
fnmadd.d f22, f4, f20, f30, rne # perform operation
fnmadd.d f22, f4, f20, f30, rtz # perform operation
fnmadd.d f22, f4, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f4, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffffffffffff)
li x30, 0xd9bc199e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x04071438 # load x3 with 32 MSBs 0x0000000004071438
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000004071438
sw x3, 0(x2) # store x3 (0x04071438) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000004071438 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fnmadd.d f30, f23, f4, f15, dyn # perform operation
fnmadd.d f30, f23, f4, f15, rdn # perform operation
fnmadd.d f30, f23, f4, f15, rmm # perform operation
fnmadd.d f30, f23, f4, f15, rne # perform operation
fnmadd.d f30, f23, f4, f15, rtz # perform operation
fnmadd.d f30, f23, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f23, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f23, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff0000000000001)
li x30, 0x4334ef68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
li x3, 0x58599a10 # load x3 with 32 MSBs 0x0000000058599a10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058599a10
sw x3, 0(x2) # store x3 (0x58599a10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000058599a10 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fnmadd.d f30, f1, f3, f19, dyn # perform operation
fnmadd.d f30, f1, f3, f19, rdn # perform operation
fnmadd.d f30, f1, f3, f19, rmm # perform operation
fnmadd.d f30, f1, f3, f19, rne # perform operation
fnmadd.d f30, f1, f3, f19, rtz # perform operation
fnmadd.d f30, f1, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f1, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ff7ffffffffffff)
li x13, 0xcf3332b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x9965f3cf # load x3 with 32 MSBs 0x000000009965f3cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009965f3cf
sw x3, 0(x2) # store x3 (0x9965f3cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009965f3cf from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fnmadd.d f13, f10, f14, f23, dyn # perform operation
fnmadd.d f13, f10, f14, f23, rdn # perform operation
fnmadd.d f13, f10, f14, f23, rmm # perform operation
fnmadd.d f13, f10, f14, f23, rne # perform operation
fnmadd.d f13, f10, f14, f23, rtz # perform operation
fnmadd.d f13, f10, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f10, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f10, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x5a392534a57711ad)
li x29, 0xa2876720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x37a637cc # load x3 with 32 MSBs 0x0000000037a637cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037a637cc
sw x3, 0(x2) # store x3 (0x37a637cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000037a637cc from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fnmadd.d f29, f7, f9, f19, dyn # perform operation
fnmadd.d f29, f7, f9, f19, rdn # perform operation
fnmadd.d f29, f7, f9, f19, rmm # perform operation
fnmadd.d f29, f7, f9, f19, rne # perform operation
fnmadd.d f29, f7, f9, f19, rtz # perform operation
fnmadd.d f29, f7, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f7, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f7, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xa6e895993737426c)
li x27, 0x609b6cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xcc3b910a # load x3 with 32 MSBs 0x00000000cc3b910a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cc3b910a
sw x3, 0(x2) # store x3 (0xcc3b910a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cc3b910a from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fnmadd.d f27, f2, f29, f11, dyn # perform operation
fnmadd.d f27, f2, f29, f11, rdn # perform operation
fnmadd.d f27, f2, f29, f11, rmm # perform operation
fnmadd.d f27, f2, f29, f11, rne # perform operation
fnmadd.d f27, f2, f29, f11, rtz # perform operation
fnmadd.d f27, f2, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f2, f29, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x0)
li x1, 0x0fb7dea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x0f37b08f # load x3 with 32 MSBs 0x000000000f37b08f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f37b08f
sw x3, 0(x2) # store x3 (0x0f37b08f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000f37b08f from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fnmadd.d f1, f29, f17, f21, dyn # perform operation
fnmadd.d f1, f29, f17, f21, rdn # perform operation
fnmadd.d f1, f29, f17, f21, rmm # perform operation
fnmadd.d f1, f29, f17, f21, rne # perform operation
fnmadd.d f1, f29, f17, f21, rtz # perform operation
fnmadd.d f1, f29, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f29, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000000)
li x8, 0x1c4d4ad2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0xf5df7a17 # load x3 with 32 MSBs 0x00000000f5df7a17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5df7a17
sw x3, 0(x2) # store x3 (0xf5df7a17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f5df7a17 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fnmadd.d f8, f3, f31, f6, dyn # perform operation
fnmadd.d f8, f3, f31, f6, rdn # perform operation
fnmadd.d f8, f3, f31, f6, rmm # perform operation
fnmadd.d f8, f3, f31, f6, rne # perform operation
fnmadd.d f8, f3, f31, f6, rtz # perform operation
fnmadd.d f8, f3, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f3, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff0000000000000)
li x10, 0xc1eff145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x9bafe66f # load x3 with 32 MSBs 0x000000009bafe66f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bafe66f
sw x3, 0(x2) # store x3 (0x9bafe66f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000009bafe66f from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmadd.d f10, f29, f27, f6, dyn # perform operation
fnmadd.d f10, f29, f27, f6, rdn # perform operation
fnmadd.d f10, f29, f27, f6, rmm # perform operation
fnmadd.d f10, f29, f27, f6, rne # perform operation
fnmadd.d f10, f29, f27, f6, rtz # perform operation
fnmadd.d f10, f29, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff0000000000000)
li x7, 0xbc883f36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x81a6c5be # load x3 with 32 MSBs 0x0000000081a6c5be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081a6c5be
sw x3, 0(x2) # store x3 (0x81a6c5be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000081a6c5be from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fnmadd.d f7, f25, f28, f15, dyn # perform operation
fnmadd.d f7, f25, f28, f15, rdn # perform operation
fnmadd.d f7, f25, f28, f15, rmm # perform operation
fnmadd.d f7, f25, f28, f15, rne # perform operation
fnmadd.d f7, f25, f28, f15, rtz # perform operation
fnmadd.d f7, f25, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f25, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x3ff8000000000000)
li x9, 0xc9274a7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x3aeda701 # load x3 with 32 MSBs 0x000000003aeda701
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003aeda701
sw x3, 0(x2) # store x3 (0x3aeda701) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000003aeda701 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fnmadd.d f9, f7, f17, f14, dyn # perform operation
fnmadd.d f9, f7, f17, f14, rdn # perform operation
fnmadd.d f9, f7, f17, f14, rmm # perform operation
fnmadd.d f9, f7, f17, f14, rne # perform operation
fnmadd.d f9, f7, f17, f14, rtz # perform operation
fnmadd.d f9, f7, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f7, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f7, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xbff8000000000000)
li x4, 0x068ea669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
li x3, 0x126dab4e # load x3 with 32 MSBs 0x00000000126dab4e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000126dab4e
sw x3, 0(x2) # store x3 (0x126dab4e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000126dab4e from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
fnmadd.d f4, f17, f15, f25, dyn # perform operation
fnmadd.d f4, f17, f15, f25, rdn # perform operation
fnmadd.d f4, f17, f15, f25, rmm # perform operation
fnmadd.d f4, f17, f15, f25, rne # perform operation
fnmadd.d f4, f17, f15, f25, rtz # perform operation
fnmadd.d f4, f17, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f17, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f17, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x4000000000000000)
li x4, 0x4a61818c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xd184aece # load x3 with 32 MSBs 0x00000000d184aece
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d184aece
sw x3, 0(x2) # store x3 (0xd184aece) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d184aece from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fnmadd.d f4, f20, f31, f21, dyn # perform operation
fnmadd.d f4, f20, f31, f21, rdn # perform operation
fnmadd.d f4, f20, f31, f21, rmm # perform operation
fnmadd.d f4, f20, f31, f21, rne # perform operation
fnmadd.d f4, f20, f31, f21, rtz # perform operation
fnmadd.d f4, f20, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f20, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f20, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xc000000000000000)
li x29, 0xbdcc2546 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0xb53c627b # load x3 with 32 MSBs 0x00000000b53c627b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b53c627b
sw x3, 0(x2) # store x3 (0xb53c627b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b53c627b from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fnmadd.d f29, f31, f23, f15, dyn # perform operation
fnmadd.d f29, f31, f23, f15, rdn # perform operation
fnmadd.d f29, f31, f23, f15, rmm # perform operation
fnmadd.d f29, f31, f23, f15, rne # perform operation
fnmadd.d f29, f31, f23, f15, rtz # perform operation
fnmadd.d f29, f31, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f31, f23, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x10000000000000)
li x21, 0xab3883a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x9f62383c # load x3 with 32 MSBs 0x000000009f62383c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f62383c
sw x3, 0(x2) # store x3 (0x9f62383c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000009f62383c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fnmadd.d f21, f9, f19, f16, dyn # perform operation
fnmadd.d f21, f9, f19, f16, rdn # perform operation
fnmadd.d f21, f9, f19, f16, rmm # perform operation
fnmadd.d f21, f9, f19, f16, rne # perform operation
fnmadd.d f21, f9, f19, f16, rtz # perform operation
fnmadd.d f21, f9, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f9, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f9, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f9, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f9, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f9, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8010000000000000)
li x29, 0x176e6f10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x75fedd19 # load x3 with 32 MSBs 0x0000000075fedd19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075fedd19
sw x3, 0(x2) # store x3 (0x75fedd19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000075fedd19 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fnmadd.d f29, f10, f11, f15, dyn # perform operation
fnmadd.d f29, f10, f11, f15, rdn # perform operation
fnmadd.d f29, f10, f11, f15, rmm # perform operation
fnmadd.d f29, f10, f11, f15, rne # perform operation
fnmadd.d f29, f10, f11, f15, rtz # perform operation
fnmadd.d f29, f10, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f10, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fefffffffffffff)
li x3, 0x8363779c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x2445dfd3 # load x3 with 32 MSBs 0x000000002445dfd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002445dfd3
sw x3, 0(x2) # store x3 (0x2445dfd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002445dfd3 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fnmadd.d f3, f28, f25, f8, dyn # perform operation
fnmadd.d f3, f28, f25, f8, rdn # perform operation
fnmadd.d f3, f28, f25, f8, rmm # perform operation
fnmadd.d f3, f28, f25, f8, rne # perform operation
fnmadd.d f3, f28, f25, f8, rtz # perform operation
fnmadd.d f3, f28, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f28, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xffefffffffffffff)
li x19, 0x24e31a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x7bf1794c # load x3 with 32 MSBs 0x000000007bf1794c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007bf1794c
sw x3, 0(x2) # store x3 (0x7bf1794c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007bf1794c from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fnmadd.d f19, f29, f18, f11, dyn # perform operation
fnmadd.d f19, f29, f18, f11, rdn # perform operation
fnmadd.d f19, f29, f18, f11, rmm # perform operation
fnmadd.d f19, f29, f18, f11, rne # perform operation
fnmadd.d f19, f29, f18, f11, rtz # perform operation
fnmadd.d f19, f29, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f29, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfffffffffffff)
li x2, 0x2d347009 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0x5a24efa4 # load x3 with 32 MSBs 0x000000005a24efa4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a24efa4
sw x3, 0(x2) # store x3 (0x5a24efa4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005a24efa4 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fnmadd.d f2, f31, f30, f4, dyn # perform operation
fnmadd.d f2, f31, f30, f4, rdn # perform operation
fnmadd.d f2, f31, f30, f4, rmm # perform operation
fnmadd.d f2, f31, f30, f4, rne # perform operation
fnmadd.d f2, f31, f30, f4, rtz # perform operation
fnmadd.d f2, f31, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f31, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f31, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x800fffffffffffff)
li x28, 0xb4101a39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x20f78df8 # load x3 with 32 MSBs 0x0000000020f78df8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020f78df8
sw x3, 0(x2) # store x3 (0x20f78df8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000020f78df8 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fnmadd.d f28, f26, f20, f12, dyn # perform operation
fnmadd.d f28, f26, f20, f12, rdn # perform operation
fnmadd.d f28, f26, f20, f12, rmm # perform operation
fnmadd.d f28, f26, f20, f12, rne # perform operation
fnmadd.d f28, f26, f20, f12, rtz # perform operation
fnmadd.d f28, f26, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f26, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f26, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f26, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f26, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f26, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000)
li x20, 0x2f07aa7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xb59220bf # load x3 with 32 MSBs 0x00000000b59220bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b59220bf
sw x3, 0(x2) # store x3 (0xb59220bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b59220bf from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fnmadd.d f20, f6, f8, f5, dyn # perform operation
fnmadd.d f20, f6, f8, f5, rdn # perform operation
fnmadd.d f20, f6, f8, f5, rmm # perform operation
fnmadd.d f20, f6, f8, f5, rne # perform operation
fnmadd.d f20, f6, f8, f5, rtz # perform operation
fnmadd.d f20, f6, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f6, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8008000000000000)
li x31, 0x53d1587e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000001 from memory into f4
li x3, 0xedbd7c6b # load x3 with 32 MSBs 0x00000000edbd7c6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edbd7c6b
sw x3, 0(x2) # store x3 (0xedbd7c6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000edbd7c6b from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fnmadd.d f31, f4, f15, f28, dyn # perform operation
fnmadd.d f31, f4, f15, f28, rdn # perform operation
fnmadd.d f31, f4, f15, f28, rmm # perform operation
fnmadd.d f31, f4, f15, f28, rne # perform operation
fnmadd.d f31, f4, f15, f28, rtz # perform operation
fnmadd.d f31, f4, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f4, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f4, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f4, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f4, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f4, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x1)
li x17, 0x802ad212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x85c7c882 # load x3 with 32 MSBs 0x0000000085c7c882
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085c7c882
sw x3, 0(x2) # store x3 (0x85c7c882) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000085c7c882 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fnmadd.d f17, f9, f25, f5, dyn # perform operation
fnmadd.d f17, f9, f25, f5, rdn # perform operation
fnmadd.d f17, f9, f25, f5, rmm # perform operation
fnmadd.d f17, f9, f25, f5, rne # perform operation
fnmadd.d f17, f9, f25, f5, rtz # perform operation
fnmadd.d f17, f9, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f9, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f9, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f9, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f9, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f9, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x8000000000000001)
li x1, 0x1026ffb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x3aa9b0c8 # load x3 with 32 MSBs 0x000000003aa9b0c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003aa9b0c8
sw x3, 0(x2) # store x3 (0x3aa9b0c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003aa9b0c8 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fnmadd.d f1, f8, f18, f12, dyn # perform operation
fnmadd.d f1, f8, f18, f12, rdn # perform operation
fnmadd.d f1, f8, f18, f12, rmm # perform operation
fnmadd.d f1, f8, f18, f12, rne # perform operation
fnmadd.d f1, f8, f18, f12, rtz # perform operation
fnmadd.d f1, f8, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f8, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000000)
li x21, 0x1c8cb458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0x68157a02 # load x3 with 32 MSBs 0x0000000068157a02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068157a02
sw x3, 0(x2) # store x3 (0x68157a02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000068157a02 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fnmadd.d f21, f13, f25, f10, dyn # perform operation
fnmadd.d f21, f13, f25, f10, rdn # perform operation
fnmadd.d f21, f13, f25, f10, rmm # perform operation
fnmadd.d f21, f13, f25, f10, rne # perform operation
fnmadd.d f21, f13, f25, f10, rtz # perform operation
fnmadd.d f21, f13, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f13, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xfff0000000000000)
li x23, 0x5f2b27e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x2a5c09e0 # load x3 with 32 MSBs 0x000000002a5c09e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a5c09e0
sw x3, 0(x2) # store x3 (0x2a5c09e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002a5c09e0 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fnmadd.d f23, f20, f11, f16, dyn # perform operation
fnmadd.d f23, f20, f11, f16, rdn # perform operation
fnmadd.d f23, f20, f11, f16, rmm # perform operation
fnmadd.d f23, f20, f11, f16, rne # perform operation
fnmadd.d f23, f20, f11, f16, rtz # perform operation
fnmadd.d f23, f20, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f20, f11, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff8000000000000)
li x5, 0xa1cd0839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
li x3, 0x424dc7f3 # load x3 with 32 MSBs 0x00000000424dc7f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000424dc7f3
sw x3, 0(x2) # store x3 (0x424dc7f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000424dc7f3 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fnmadd.d f5, f21, f12, f10, dyn # perform operation
fnmadd.d f5, f21, f12, f10, rdn # perform operation
fnmadd.d f5, f21, f12, f10, rmm # perform operation
fnmadd.d f5, f21, f12, f10, rne # perform operation
fnmadd.d f5, f21, f12, f10, rtz # perform operation
fnmadd.d f5, f21, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f21, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f21, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7fffffffffffffff)
li x7, 0x89a22765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
li x3, 0xbe0e4ecc # load x3 with 32 MSBs 0x00000000be0e4ecc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000be0e4ecc
sw x3, 0(x2) # store x3 (0xbe0e4ecc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000be0e4ecc from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fnmadd.d f7, f31, f18, f11, dyn # perform operation
fnmadd.d f7, f31, f18, f11, rdn # perform operation
fnmadd.d f7, f31, f18, f11, rmm # perform operation
fnmadd.d f7, f31, f18, f11, rne # perform operation
fnmadd.d f7, f31, f18, f11, rtz # perform operation
fnmadd.d f7, f31, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f31, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f31, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f31, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f31, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f31, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff0000000000001)
li x12, 0x07942a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
li x3, 0x50213bfe # load x3 with 32 MSBs 0x0000000050213bfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050213bfe
sw x3, 0(x2) # store x3 (0x50213bfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000050213bfe from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f12, f11, f25, f5, dyn # perform operation
fnmadd.d f12, f11, f25, f5, rdn # perform operation
fnmadd.d f12, f11, f25, f5, rmm # perform operation
fnmadd.d f12, f11, f25, f5, rne # perform operation
fnmadd.d f12, f11, f25, f5, rtz # perform operation
fnmadd.d f12, f11, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f11, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f11, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x7ff7ffffffffffff)
li x26, 0xe5f0c263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x165fa057 # load x3 with 32 MSBs 0x00000000165fa057
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000165fa057
sw x3, 0(x2) # store x3 (0x165fa057) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000165fa057 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fnmadd.d f26, f23, f10, f4, dyn # perform operation
fnmadd.d f26, f23, f10, f4, rdn # perform operation
fnmadd.d f26, f23, f10, f4, rmm # perform operation
fnmadd.d f26, f23, f10, f4, rne # perform operation
fnmadd.d f26, f23, f10, f4, rtz # perform operation
fnmadd.d f26, f23, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f23, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f23, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f23, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f23, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f23, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0x5a392534a57711ad)
li x21, 0x12430a29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
li x3, 0xc9f94a2f # load x3 with 32 MSBs 0x00000000c9f94a2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9f94a2f
sw x3, 0(x2) # store x3 (0xc9f94a2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c9f94a2f from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fnmadd.d f21, f14, f22, f15, dyn # perform operation
fnmadd.d f21, f14, f22, f15, rdn # perform operation
fnmadd.d f21, f14, f22, f15, rmm # perform operation
fnmadd.d f21, f14, f22, f15, rne # perform operation
fnmadd.d f21, f14, f22, f15, rtz # perform operation
fnmadd.d f21, f14, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f14, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f14, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f14, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f14, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f14, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000000000000001 fs3 = 0xa6e895993737426c)
li x8, 0xc7c8d7fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x12a861d7 # load x3 with 32 MSBs 0x0000000012a861d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012a861d7
sw x3, 0(x2) # store x3 (0x12a861d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000012a861d7 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fnmadd.d f8, f7, f25, f22, dyn # perform operation
fnmadd.d f8, f7, f25, f22, rdn # perform operation
fnmadd.d f8, f7, f25, f22, rmm # perform operation
fnmadd.d f8, f7, f25, f22, rne # perform operation
fnmadd.d f8, f7, f25, f22, rtz # perform operation
fnmadd.d f8, f7, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f7, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f7, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f7, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f7, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f7, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x0)
li x27, 0x4b76080e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x597e96ee # load x3 with 32 MSBs 0x00000000597e96ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000597e96ee
sw x3, 0(x2) # store x3 (0x597e96ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000597e96ee from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmadd.d f27, f8, f20, f2, dyn # perform operation
fnmadd.d f27, f8, f20, f2, rdn # perform operation
fnmadd.d f27, f8, f20, f2, rmm # perform operation
fnmadd.d f27, f8, f20, f2, rne # perform operation
fnmadd.d f27, f8, f20, f2, rtz # perform operation
fnmadd.d f27, f8, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f8, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f8, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f8, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f8, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f8, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000000)
li x31, 0x887d7f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
li x3, 0xb534e8be # load x3 with 32 MSBs 0x00000000b534e8be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b534e8be
sw x3, 0(x2) # store x3 (0xb534e8be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b534e8be from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fnmadd.d f31, f29, f28, f2, dyn # perform operation
fnmadd.d f31, f29, f28, f2, rdn # perform operation
fnmadd.d f31, f29, f28, f2, rmm # perform operation
fnmadd.d f31, f29, f28, f2, rne # perform operation
fnmadd.d f31, f29, f28, f2, rtz # perform operation
fnmadd.d f31, f29, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f29, f28, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff0000000000000)
li x18, 0x17591d82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x1d661de1 # load x3 with 32 MSBs 0x000000001d661de1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d661de1
sw x3, 0(x2) # store x3 (0x1d661de1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001d661de1 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fnmadd.d f18, f27, f14, f4, dyn # perform operation
fnmadd.d f18, f27, f14, f4, rdn # perform operation
fnmadd.d f18, f27, f14, f4, rmm # perform operation
fnmadd.d f18, f27, f14, f4, rne # perform operation
fnmadd.d f18, f27, f14, f4, rtz # perform operation
fnmadd.d f18, f27, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f27, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff0000000000000)
li x10, 0x7b014c2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
li x3, 0xa686df5b # load x3 with 32 MSBs 0x00000000a686df5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a686df5b
sw x3, 0(x2) # store x3 (0xa686df5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000a686df5b from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fnmadd.d f10, f3, f12, f23, dyn # perform operation
fnmadd.d f10, f3, f12, f23, rdn # perform operation
fnmadd.d f10, f3, f12, f23, rmm # perform operation
fnmadd.d f10, f3, f12, f23, rne # perform operation
fnmadd.d f10, f3, f12, f23, rtz # perform operation
fnmadd.d f10, f3, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f3, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x3ff8000000000000)
li x6, 0xffafff13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xb8c911d4 # load x3 with 32 MSBs 0x00000000b8c911d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8c911d4
sw x3, 0(x2) # store x3 (0xb8c911d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b8c911d4 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fnmadd.d f6, f28, f4, f19, dyn # perform operation
fnmadd.d f6, f28, f4, f19, rdn # perform operation
fnmadd.d f6, f28, f4, f19, rmm # perform operation
fnmadd.d f6, f28, f4, f19, rne # perform operation
fnmadd.d f6, f28, f4, f19, rtz # perform operation
fnmadd.d f6, f28, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f28, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xbff8000000000000)
li x15, 0xdc8bec3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x35d74d50 # load x3 with 32 MSBs 0x0000000035d74d50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035d74d50
sw x3, 0(x2) # store x3 (0x35d74d50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000035d74d50 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
fnmadd.d f15, f21, f3, f2, dyn # perform operation
fnmadd.d f15, f21, f3, f2, rdn # perform operation
fnmadd.d f15, f21, f3, f2, rmm # perform operation
fnmadd.d f15, f21, f3, f2, rne # perform operation
fnmadd.d f15, f21, f3, f2, rtz # perform operation
fnmadd.d f15, f21, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f21, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f21, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f21, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f21, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f21, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x4000000000000000)
li x29, 0x0990e98c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x1281008b # load x3 with 32 MSBs 0x000000001281008b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001281008b
sw x3, 0(x2) # store x3 (0x1281008b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001281008b from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fnmadd.d f29, f18, f2, f11, dyn # perform operation
fnmadd.d f29, f18, f2, f11, rdn # perform operation
fnmadd.d f29, f18, f2, f11, rmm # perform operation
fnmadd.d f29, f18, f2, f11, rne # perform operation
fnmadd.d f29, f18, f2, f11, rtz # perform operation
fnmadd.d f29, f18, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f18, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f18, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f18, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f18, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f18, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xc000000000000000)
li x28, 0xcc2df1e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x5dda66e2 # load x3 with 32 MSBs 0x000000005dda66e2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005dda66e2
sw x3, 0(x2) # store x3 (0x5dda66e2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000005dda66e2 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fnmadd.d f28, f25, f3, f20, dyn # perform operation
fnmadd.d f28, f25, f3, f20, rdn # perform operation
fnmadd.d f28, f25, f3, f20, rmm # perform operation
fnmadd.d f28, f25, f3, f20, rne # perform operation
fnmadd.d f28, f25, f3, f20, rtz # perform operation
fnmadd.d f28, f25, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f25, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x10000000000000)
li x21, 0xcecfb79b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0xfea7ab52 # load x3 with 32 MSBs 0x00000000fea7ab52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fea7ab52
sw x3, 0(x2) # store x3 (0xfea7ab52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000fea7ab52 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fnmadd.d f21, f19, f30, f1, dyn # perform operation
fnmadd.d f21, f19, f30, f1, rdn # perform operation
fnmadd.d f21, f19, f30, f1, rmm # perform operation
fnmadd.d f21, f19, f30, f1, rne # perform operation
fnmadd.d f21, f19, f30, f1, rtz # perform operation
fnmadd.d f21, f19, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f19, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f19, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8010000000000000)
li x8, 0xbb2e5a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0xa579c4f8 # load x3 with 32 MSBs 0x00000000a579c4f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a579c4f8
sw x3, 0(x2) # store x3 (0xa579c4f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a579c4f8 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fnmadd.d f8, f21, f7, f3, dyn # perform operation
fnmadd.d f8, f21, f7, f3, rdn # perform operation
fnmadd.d f8, f21, f7, f3, rmm # perform operation
fnmadd.d f8, f21, f7, f3, rne # perform operation
fnmadd.d f8, f21, f7, f3, rtz # perform operation
fnmadd.d f8, f21, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f21, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fefffffffffffff)
li x3, 0xf5464d4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xdf68d142 # load x3 with 32 MSBs 0x00000000df68d142
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df68d142
sw x3, 0(x2) # store x3 (0xdf68d142) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000df68d142 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fnmadd.d f3, f9, f4, f12, dyn # perform operation
fnmadd.d f3, f9, f4, f12, rdn # perform operation
fnmadd.d f3, f9, f4, f12, rmm # perform operation
fnmadd.d f3, f9, f4, f12, rne # perform operation
fnmadd.d f3, f9, f4, f12, rtz # perform operation
fnmadd.d f3, f9, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f9, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xffefffffffffffff)
li x28, 0xe669f7fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0x0c944448 # load x3 with 32 MSBs 0x000000000c944448
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c944448
sw x3, 0(x2) # store x3 (0x0c944448) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000c944448 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fnmadd.d f28, f23, f20, f2, dyn # perform operation
fnmadd.d f28, f23, f20, f2, rdn # perform operation
fnmadd.d f28, f23, f20, f2, rmm # perform operation
fnmadd.d f28, f23, f20, f2, rne # perform operation
fnmadd.d f28, f23, f20, f2, rtz # perform operation
fnmadd.d f28, f23, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f23, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfffffffffffff)
li x19, 0x7e8ae0ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0xaab0ac2d # load x3 with 32 MSBs 0x00000000aab0ac2d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aab0ac2d
sw x3, 0(x2) # store x3 (0xaab0ac2d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000aab0ac2d from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fnmadd.d f19, f6, f2, f9, dyn # perform operation
fnmadd.d f19, f6, f2, f9, rdn # perform operation
fnmadd.d f19, f6, f2, f9, rmm # perform operation
fnmadd.d f19, f6, f2, f9, rne # perform operation
fnmadd.d f19, f6, f2, f9, rtz # perform operation
fnmadd.d f19, f6, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f6, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x800fffffffffffff)
li x17, 0x751e0d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x2147df55 # load x3 with 32 MSBs 0x000000002147df55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002147df55
sw x3, 0(x2) # store x3 (0x2147df55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002147df55 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fnmadd.d f17, f18, f28, f3, dyn # perform operation
fnmadd.d f17, f18, f28, f3, rdn # perform operation
fnmadd.d f17, f18, f28, f3, rmm # perform operation
fnmadd.d f17, f18, f28, f3, rne # perform operation
fnmadd.d f17, f18, f28, f3, rtz # perform operation
fnmadd.d f17, f18, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f18, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f18, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f18, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f18, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f18, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000)
li x7, 0x0bde8abe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0x84f2615b # load x3 with 32 MSBs 0x0000000084f2615b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084f2615b
sw x3, 0(x2) # store x3 (0x84f2615b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000084f2615b from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fnmadd.d f7, f2, f17, f29, dyn # perform operation
fnmadd.d f7, f2, f17, f29, rdn # perform operation
fnmadd.d f7, f2, f17, f29, rmm # perform operation
fnmadd.d f7, f2, f17, f29, rne # perform operation
fnmadd.d f7, f2, f17, f29, rtz # perform operation
fnmadd.d f7, f2, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f2, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f2, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f2, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f2, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f2, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8008000000000000)
li x17, 0xf2cab9e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0xb8694bae # load x3 with 32 MSBs 0x00000000b8694bae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8694bae
sw x3, 0(x2) # store x3 (0xb8694bae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b8694bae from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fnmadd.d f17, f28, f11, f15, dyn # perform operation
fnmadd.d f17, f28, f11, f15, rdn # perform operation
fnmadd.d f17, f28, f11, f15, rmm # perform operation
fnmadd.d f17, f28, f11, f15, rne # perform operation
fnmadd.d f17, f28, f11, f15, rtz # perform operation
fnmadd.d f17, f28, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f28, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x1)
li x28, 0x56783de3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0xff097c7d # load x3 with 32 MSBs 0x00000000ff097c7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff097c7d
sw x3, 0(x2) # store x3 (0xff097c7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ff097c7d from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fnmadd.d f28, f31, f14, f23, dyn # perform operation
fnmadd.d f28, f31, f14, f23, rdn # perform operation
fnmadd.d f28, f31, f14, f23, rmm # perform operation
fnmadd.d f28, f31, f14, f23, rne # perform operation
fnmadd.d f28, f31, f14, f23, rtz # perform operation
fnmadd.d f28, f31, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f31, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x8000000000000001)
li x2, 0xd6292d6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x02d08fc8 # load x3 with 32 MSBs 0x0000000002d08fc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002d08fc8
sw x3, 0(x2) # store x3 (0x02d08fc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000002d08fc8 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fnmadd.d f2, f25, f14, f19, dyn # perform operation
fnmadd.d f2, f25, f14, f19, rdn # perform operation
fnmadd.d f2, f25, f14, f19, rmm # perform operation
fnmadd.d f2, f25, f14, f19, rne # perform operation
fnmadd.d f2, f25, f14, f19, rtz # perform operation
fnmadd.d f2, f25, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f25, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f25, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f25, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f25, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f25, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000000)
li x25, 0xb07d64ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0xd0856c17 # load x3 with 32 MSBs 0x00000000d0856c17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0856c17
sw x3, 0(x2) # store x3 (0xd0856c17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d0856c17 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fnmadd.d f25, f31, f18, f2, dyn # perform operation
fnmadd.d f25, f31, f18, f2, rdn # perform operation
fnmadd.d f25, f31, f18, f2, rmm # perform operation
fnmadd.d f25, f31, f18, f2, rne # perform operation
fnmadd.d f25, f31, f18, f2, rtz # perform operation
fnmadd.d f25, f31, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f31, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f31, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f31, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f31, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f31, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xfff0000000000000)
li x21, 0xc9c4b7ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0xb2d47176 # load x3 with 32 MSBs 0x00000000b2d47176
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2d47176
sw x3, 0(x2) # store x3 (0xb2d47176) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000b2d47176 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fnmadd.d f21, f8, f26, f29, dyn # perform operation
fnmadd.d f21, f8, f26, f29, rdn # perform operation
fnmadd.d f21, f8, f26, f29, rmm # perform operation
fnmadd.d f21, f8, f26, f29, rne # perform operation
fnmadd.d f21, f8, f26, f29, rtz # perform operation
fnmadd.d f21, f8, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff8000000000000)
li x10, 0x14d7312d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0xba061c9e # load x3 with 32 MSBs 0x00000000ba061c9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba061c9e
sw x3, 0(x2) # store x3 (0xba061c9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ba061c9e from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fnmadd.d f10, f26, f19, f6, dyn # perform operation
fnmadd.d f10, f26, f19, f6, rdn # perform operation
fnmadd.d f10, f26, f19, f6, rmm # perform operation
fnmadd.d f10, f26, f19, f6, rne # perform operation
fnmadd.d f10, f26, f19, f6, rtz # perform operation
fnmadd.d f10, f26, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f26, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7fffffffffffffff)
li x12, 0x7647a19b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0xf4eaa28b # load x3 with 32 MSBs 0x00000000f4eaa28b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4eaa28b
sw x3, 0(x2) # store x3 (0xf4eaa28b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f4eaa28b from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fnmadd.d f12, f18, f28, f8, dyn # perform operation
fnmadd.d f12, f18, f28, f8, rdn # perform operation
fnmadd.d f12, f18, f28, f8, rmm # perform operation
fnmadd.d f12, f18, f28, f8, rne # perform operation
fnmadd.d f12, f18, f28, f8, rtz # perform operation
fnmadd.d f12, f18, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff0000000000001)
li x22, 0x431a38f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
li x3, 0x4d8d9f5b # load x3 with 32 MSBs 0x000000004d8d9f5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d8d9f5b
sw x3, 0(x2) # store x3 (0x4d8d9f5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004d8d9f5b from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fnmadd.d f22, f24, f17, f21, dyn # perform operation
fnmadd.d f22, f24, f17, f21, rdn # perform operation
fnmadd.d f22, f24, f17, f21, rmm # perform operation
fnmadd.d f22, f24, f17, f21, rne # perform operation
fnmadd.d f22, f24, f17, f21, rtz # perform operation
fnmadd.d f22, f24, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f24, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f24, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f24, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f24, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f24, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x8, 0xef6ff2f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0xac742432 # load x3 with 32 MSBs 0x00000000ac742432
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac742432
sw x3, 0(x2) # store x3 (0xac742432) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ac742432 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fnmadd.d f8, f2, f6, f11, dyn # perform operation
fnmadd.d f8, f2, f6, f11, rdn # perform operation
fnmadd.d f8, f2, f6, f11, rmm # perform operation
fnmadd.d f8, f2, f6, f11, rne # perform operation
fnmadd.d f8, f2, f6, f11, rtz # perform operation
fnmadd.d f8, f2, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f2, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f2, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0x5a392534a57711ad)
li x17, 0x14e2ec14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x84dc148e # load x3 with 32 MSBs 0x0000000084dc148e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084dc148e
sw x3, 0(x2) # store x3 (0x84dc148e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000084dc148e from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fnmadd.d f17, f10, f14, f31, dyn # perform operation
fnmadd.d f17, f10, f14, f31, rdn # perform operation
fnmadd.d f17, f10, f14, f31, rmm # perform operation
fnmadd.d f17, f10, f14, f31, rne # perform operation
fnmadd.d f17, f10, f14, f31, rtz # perform operation
fnmadd.d f17, f10, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f10, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000000 fs3 = 0xa6e895993737426c)
li x12, 0x22b6deb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x0bdd4fd5 # load x3 with 32 MSBs 0x000000000bdd4fd5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bdd4fd5
sw x3, 0(x2) # store x3 (0x0bdd4fd5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000bdd4fd5 from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fnmadd.d f12, f18, f10, f6, dyn # perform operation
fnmadd.d f12, f18, f10, f6, rdn # perform operation
fnmadd.d f12, f18, f10, f6, rmm # perform operation
fnmadd.d f12, f18, f10, f6, rne # perform operation
fnmadd.d f12, f18, f10, f6, rtz # perform operation
fnmadd.d f12, f18, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f18, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f18, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f18, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f18, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f18, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x0)
li x2, 0xa7201a6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x9d9f0989 # load x3 with 32 MSBs 0x000000009d9f0989
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d9f0989
sw x3, 0(x2) # store x3 (0x9d9f0989) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009d9f0989 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fnmadd.d f2, f13, f18, f8, dyn # perform operation
fnmadd.d f2, f13, f18, f8, rdn # perform operation
fnmadd.d f2, f13, f18, f8, rmm # perform operation
fnmadd.d f2, f13, f18, f8, rne # perform operation
fnmadd.d f2, f13, f18, f8, rtz # perform operation
fnmadd.d f2, f13, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f13, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000000)
li x14, 0x46563350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x340f27c0 # load x3 with 32 MSBs 0x00000000340f27c0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000340f27c0
sw x3, 0(x2) # store x3 (0x340f27c0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000340f27c0 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fnmadd.d f14, f11, f23, f28, dyn # perform operation
fnmadd.d f14, f11, f23, f28, rdn # perform operation
fnmadd.d f14, f11, f23, f28, rmm # perform operation
fnmadd.d f14, f11, f23, f28, rne # perform operation
fnmadd.d f14, f11, f23, f28, rtz # perform operation
fnmadd.d f14, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f11, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff0000000000000)
li x18, 0xb41ae554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0x915f442e # load x3 with 32 MSBs 0x00000000915f442e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000915f442e
sw x3, 0(x2) # store x3 (0x915f442e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000915f442e from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fnmadd.d f18, f27, f13, f29, dyn # perform operation
fnmadd.d f18, f27, f13, f29, rdn # perform operation
fnmadd.d f18, f27, f13, f29, rmm # perform operation
fnmadd.d f18, f27, f13, f29, rne # perform operation
fnmadd.d f18, f27, f13, f29, rtz # perform operation
fnmadd.d f18, f27, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f27, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff0000000000000)
li x14, 0x09ab457f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0x3726d433 # load x3 with 32 MSBs 0x000000003726d433
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003726d433
sw x3, 0(x2) # store x3 (0x3726d433) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003726d433 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fnmadd.d f14, f10, f9, f13, dyn # perform operation
fnmadd.d f14, f10, f9, f13, rdn # perform operation
fnmadd.d f14, f10, f9, f13, rmm # perform operation
fnmadd.d f14, f10, f9, f13, rne # perform operation
fnmadd.d f14, f10, f9, f13, rtz # perform operation
fnmadd.d f14, f10, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f10, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f10, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f10, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f10, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f10, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x3ff8000000000000)
li x7, 0x9968a163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x4e0e6bb5 # load x3 with 32 MSBs 0x000000004e0e6bb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e0e6bb5
sw x3, 0(x2) # store x3 (0x4e0e6bb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004e0e6bb5 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fnmadd.d f7, f13, f24, f30, dyn # perform operation
fnmadd.d f7, f13, f24, f30, rdn # perform operation
fnmadd.d f7, f13, f24, f30, rmm # perform operation
fnmadd.d f7, f13, f24, f30, rne # perform operation
fnmadd.d f7, f13, f24, f30, rtz # perform operation
fnmadd.d f7, f13, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f13, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f13, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f13, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f13, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f13, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xbff8000000000000)
li x26, 0x15cd154e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x21c2e775 # load x3 with 32 MSBs 0x0000000021c2e775
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021c2e775
sw x3, 0(x2) # store x3 (0x21c2e775) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000021c2e775 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fnmadd.d f26, f20, f29, f4, dyn # perform operation
fnmadd.d f26, f20, f29, f4, rdn # perform operation
fnmadd.d f26, f20, f29, f4, rmm # perform operation
fnmadd.d f26, f20, f29, f4, rne # perform operation
fnmadd.d f26, f20, f29, f4, rtz # perform operation
fnmadd.d f26, f20, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f20, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f20, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f20, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f20, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f20, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x4000000000000000)
li x9, 0x1e8665d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x4a60eb62 # load x3 with 32 MSBs 0x000000004a60eb62
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a60eb62
sw x3, 0(x2) # store x3 (0x4a60eb62) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004a60eb62 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fnmadd.d f9, f8, f13, f31, dyn # perform operation
fnmadd.d f9, f8, f13, f31, rdn # perform operation
fnmadd.d f9, f8, f13, f31, rmm # perform operation
fnmadd.d f9, f8, f13, f31, rne # perform operation
fnmadd.d f9, f8, f13, f31, rtz # perform operation
fnmadd.d f9, f8, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f8, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xc000000000000000)
li x19, 0x90439689 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x91b7dbe6 # load x3 with 32 MSBs 0x0000000091b7dbe6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091b7dbe6
sw x3, 0(x2) # store x3 (0x91b7dbe6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000091b7dbe6 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
fnmadd.d f19, f5, f17, f4, dyn # perform operation
fnmadd.d f19, f5, f17, f4, rdn # perform operation
fnmadd.d f19, f5, f17, f4, rmm # perform operation
fnmadd.d f19, f5, f17, f4, rne # perform operation
fnmadd.d f19, f5, f17, f4, rtz # perform operation
fnmadd.d f19, f5, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f5, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f5, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f5, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f5, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f5, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x10000000000000)
li x14, 0xaca59347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x8e77b2c3 # load x3 with 32 MSBs 0x000000008e77b2c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e77b2c3
sw x3, 0(x2) # store x3 (0x8e77b2c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008e77b2c3 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fnmadd.d f14, f2, f25, f31, dyn # perform operation
fnmadd.d f14, f2, f25, f31, rdn # perform operation
fnmadd.d f14, f2, f25, f31, rmm # perform operation
fnmadd.d f14, f2, f25, f31, rne # perform operation
fnmadd.d f14, f2, f25, f31, rtz # perform operation
fnmadd.d f14, f2, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f2, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8010000000000000)
li x4, 0x720653e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0xba16949e # load x3 with 32 MSBs 0x00000000ba16949e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ba16949e
sw x3, 0(x2) # store x3 (0xba16949e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000ba16949e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fnmadd.d f4, f26, f3, f10, dyn # perform operation
fnmadd.d f4, f26, f3, f10, rdn # perform operation
fnmadd.d f4, f26, f3, f10, rmm # perform operation
fnmadd.d f4, f26, f3, f10, rne # perform operation
fnmadd.d f4, f26, f3, f10, rtz # perform operation
fnmadd.d f4, f26, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f26, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fefffffffffffff)
li x28, 0xbda3f13a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x0b486f0e # load x3 with 32 MSBs 0x000000000b486f0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b486f0e
sw x3, 0(x2) # store x3 (0x0b486f0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000b486f0e from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fnmadd.d f28, f23, f9, f7, dyn # perform operation
fnmadd.d f28, f23, f9, f7, rdn # perform operation
fnmadd.d f28, f23, f9, f7, rmm # perform operation
fnmadd.d f28, f23, f9, f7, rne # perform operation
fnmadd.d f28, f23, f9, f7, rtz # perform operation
fnmadd.d f28, f23, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f23, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xffefffffffffffff)
li x18, 0x3389fe1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x23ec4046 # load x3 with 32 MSBs 0x0000000023ec4046
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023ec4046
sw x3, 0(x2) # store x3 (0x23ec4046) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000023ec4046 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fnmadd.d f18, f23, f21, f4, dyn # perform operation
fnmadd.d f18, f23, f21, f4, rdn # perform operation
fnmadd.d f18, f23, f21, f4, rmm # perform operation
fnmadd.d f18, f23, f21, f4, rne # perform operation
fnmadd.d f18, f23, f21, f4, rtz # perform operation
fnmadd.d f18, f23, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f23, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f23, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f23, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f23, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f23, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfffffffffffff)
li x6, 0xd1f349c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x66e23098 # load x3 with 32 MSBs 0x0000000066e23098
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066e23098
sw x3, 0(x2) # store x3 (0x66e23098) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000066e23098 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fnmadd.d f6, f17, f18, f19, dyn # perform operation
fnmadd.d f6, f17, f18, f19, rdn # perform operation
fnmadd.d f6, f17, f18, f19, rmm # perform operation
fnmadd.d f6, f17, f18, f19, rne # perform operation
fnmadd.d f6, f17, f18, f19, rtz # perform operation
fnmadd.d f6, f17, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f17, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f17, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f17, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f17, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f17, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x800fffffffffffff)
li x26, 0xe4a72aa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
li x3, 0xd54d0c91 # load x3 with 32 MSBs 0x00000000d54d0c91
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d54d0c91
sw x3, 0(x2) # store x3 (0xd54d0c91) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d54d0c91 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmadd.d f26, f27, f21, f17, dyn # perform operation
fnmadd.d f26, f27, f21, f17, rdn # perform operation
fnmadd.d f26, f27, f21, f17, rmm # perform operation
fnmadd.d f26, f27, f21, f17, rne # perform operation
fnmadd.d f26, f27, f21, f17, rtz # perform operation
fnmadd.d f26, f27, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f27, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f27, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f27, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f27, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f27, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000)
li x19, 0xe2c254ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xaa49bf78 # load x3 with 32 MSBs 0x00000000aa49bf78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa49bf78
sw x3, 0(x2) # store x3 (0xaa49bf78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000aa49bf78 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fnmadd.d f19, f10, f28, f22, dyn # perform operation
fnmadd.d f19, f10, f28, f22, rdn # perform operation
fnmadd.d f19, f10, f28, f22, rmm # perform operation
fnmadd.d f19, f10, f28, f22, rne # perform operation
fnmadd.d f19, f10, f28, f22, rtz # perform operation
fnmadd.d f19, f10, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f10, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8008000000000000)
li x12, 0xf69790cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
li x3, 0xf21d80d4 # load x3 with 32 MSBs 0x00000000f21d80d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f21d80d4
sw x3, 0(x2) # store x3 (0xf21d80d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f21d80d4 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
fnmadd.d f12, f30, f27, f16, dyn # perform operation
fnmadd.d f12, f30, f27, f16, rdn # perform operation
fnmadd.d f12, f30, f27, f16, rmm # perform operation
fnmadd.d f12, f30, f27, f16, rne # perform operation
fnmadd.d f12, f30, f27, f16, rtz # perform operation
fnmadd.d f12, f30, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f30, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x1)
li x20, 0x23082b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0x766eea58 # load x3 with 32 MSBs 0x00000000766eea58
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000766eea58
sw x3, 0(x2) # store x3 (0x766eea58) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000766eea58 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fnmadd.d f20, f18, f2, f16, dyn # perform operation
fnmadd.d f20, f18, f2, f16, rdn # perform operation
fnmadd.d f20, f18, f2, f16, rmm # perform operation
fnmadd.d f20, f18, f2, f16, rne # perform operation
fnmadd.d f20, f18, f2, f16, rtz # perform operation
fnmadd.d f20, f18, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f18, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f18, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x8000000000000001)
li x2, 0x1d6b8167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
li x3, 0xb71a663a # load x3 with 32 MSBs 0x00000000b71a663a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b71a663a
sw x3, 0(x2) # store x3 (0xb71a663a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b71a663a from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fnmadd.d f2, f18, f30, f23, dyn # perform operation
fnmadd.d f2, f18, f30, f23, rdn # perform operation
fnmadd.d f2, f18, f30, f23, rmm # perform operation
fnmadd.d f2, f18, f30, f23, rne # perform operation
fnmadd.d f2, f18, f30, f23, rtz # perform operation
fnmadd.d f2, f18, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f18, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000000)
li x1, 0x6b718108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0x5d7904dc # load x3 with 32 MSBs 0x000000005d7904dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d7904dc
sw x3, 0(x2) # store x3 (0x5d7904dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005d7904dc from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fnmadd.d f1, f28, f24, f29, dyn # perform operation
fnmadd.d f1, f28, f24, f29, rdn # perform operation
fnmadd.d f1, f28, f24, f29, rmm # perform operation
fnmadd.d f1, f28, f24, f29, rne # perform operation
fnmadd.d f1, f28, f24, f29, rtz # perform operation
fnmadd.d f1, f28, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f28, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f28, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xfff0000000000000)
li x3, 0x6e83a86c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x512f2877 # load x3 with 32 MSBs 0x00000000512f2877
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000512f2877
sw x3, 0(x2) # store x3 (0x512f2877) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000512f2877 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fnmadd.d f3, f2, f12, f23, dyn # perform operation
fnmadd.d f3, f2, f12, f23, rdn # perform operation
fnmadd.d f3, f2, f12, f23, rmm # perform operation
fnmadd.d f3, f2, f12, f23, rne # perform operation
fnmadd.d f3, f2, f12, f23, rtz # perform operation
fnmadd.d f3, f2, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff8000000000000)
li x5, 0xb971f9a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x7730962c # load x3 with 32 MSBs 0x000000007730962c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007730962c
sw x3, 0(x2) # store x3 (0x7730962c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000007730962c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fnmadd.d f5, f19, f22, f30, dyn # perform operation
fnmadd.d f5, f19, f22, f30, rdn # perform operation
fnmadd.d f5, f19, f22, f30, rmm # perform operation
fnmadd.d f5, f19, f22, f30, rne # perform operation
fnmadd.d f5, f19, f22, f30, rtz # perform operation
fnmadd.d f5, f19, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f19, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7fffffffffffffff)
li x10, 0x1ed2666e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x758ceb7f # load x3 with 32 MSBs 0x00000000758ceb7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000758ceb7f
sw x3, 0(x2) # store x3 (0x758ceb7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000758ceb7f from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fnmadd.d f10, f12, f6, f3, dyn # perform operation
fnmadd.d f10, f12, f6, f3, rdn # perform operation
fnmadd.d f10, f12, f6, f3, rmm # perform operation
fnmadd.d f10, f12, f6, f3, rne # perform operation
fnmadd.d f10, f12, f6, f3, rtz # perform operation
fnmadd.d f10, f12, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f12, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff0000000000001)
li x5, 0x8abaccaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
li x3, 0x3c818655 # load x3 with 32 MSBs 0x000000003c818655
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c818655
sw x3, 0(x2) # store x3 (0x3c818655) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003c818655 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
fnmadd.d f5, f20, f31, f7, dyn # perform operation
fnmadd.d f5, f20, f31, f7, rdn # perform operation
fnmadd.d f5, f20, f31, f7, rmm # perform operation
fnmadd.d f5, f20, f31, f7, rne # perform operation
fnmadd.d f5, f20, f31, f7, rtz # perform operation
fnmadd.d f5, f20, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f20, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f20, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x7ff7ffffffffffff)
li x27, 0xd27a765c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x2a8d864f # load x3 with 32 MSBs 0x000000002a8d864f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a8d864f
sw x3, 0(x2) # store x3 (0x2a8d864f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002a8d864f from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fnmadd.d f27, f15, f5, f18, dyn # perform operation
fnmadd.d f27, f15, f5, f18, rdn # perform operation
fnmadd.d f27, f15, f5, f18, rmm # perform operation
fnmadd.d f27, f15, f5, f18, rne # perform operation
fnmadd.d f27, f15, f5, f18, rtz # perform operation
fnmadd.d f27, f15, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f15, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f15, f5, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0x5a392534a57711ad)
li x6, 0xb9a37865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
li x3, 0x61b641c4 # load x3 with 32 MSBs 0x0000000061b641c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061b641c4
sw x3, 0(x2) # store x3 (0x61b641c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000061b641c4 from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fnmadd.d f6, f14, f25, f28, dyn # perform operation
fnmadd.d f6, f14, f25, f28, rdn # perform operation
fnmadd.d f6, f14, f25, f28, rmm # perform operation
fnmadd.d f6, f14, f25, f28, rne # perform operation
fnmadd.d f6, f14, f25, f28, rtz # perform operation
fnmadd.d f6, f14, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f14, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfff0000000000000 fs3 = 0xa6e895993737426c)
li x30, 0xa52d1366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x0dce5055 # load x3 with 32 MSBs 0x000000000dce5055
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000dce5055
sw x3, 0(x2) # store x3 (0x0dce5055) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000dce5055 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fnmadd.d f30, f1, f7, f2, dyn # perform operation
fnmadd.d f30, f1, f7, f2, rdn # perform operation
fnmadd.d f30, f1, f7, f2, rmm # perform operation
fnmadd.d f30, f1, f7, f2, rne # perform operation
fnmadd.d f30, f1, f7, f2, rtz # perform operation
fnmadd.d f30, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f1, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x0)
li x12, 0xaa244bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x4b2482d3 # load x3 with 32 MSBs 0x000000004b2482d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b2482d3
sw x3, 0(x2) # store x3 (0x4b2482d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004b2482d3 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fnmadd.d f12, f29, f23, f2, dyn # perform operation
fnmadd.d f12, f29, f23, f2, rdn # perform operation
fnmadd.d f12, f29, f23, f2, rmm # perform operation
fnmadd.d f12, f29, f23, f2, rne # perform operation
fnmadd.d f12, f29, f23, f2, rtz # perform operation
fnmadd.d f12, f29, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f29, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f29, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000000)
li x10, 0xa19d71a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x6153373d # load x3 with 32 MSBs 0x000000006153373d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006153373d
sw x3, 0(x2) # store x3 (0x6153373d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006153373d from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fnmadd.d f10, f2, f29, f14, dyn # perform operation
fnmadd.d f10, f2, f29, f14, rdn # perform operation
fnmadd.d f10, f2, f29, f14, rmm # perform operation
fnmadd.d f10, f2, f29, f14, rne # perform operation
fnmadd.d f10, f2, f29, f14, rtz # perform operation
fnmadd.d f10, f2, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f2, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f2, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f2, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f2, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f2, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff0000000000000)
li x21, 0x7a0edbec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x19fde9f4 # load x3 with 32 MSBs 0x0000000019fde9f4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000019fde9f4
sw x3, 0(x2) # store x3 (0x19fde9f4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000019fde9f4 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmadd.d f21, f8, f5, f6, dyn # perform operation
fnmadd.d f21, f8, f5, f6, rdn # perform operation
fnmadd.d f21, f8, f5, f6, rmm # perform operation
fnmadd.d f21, f8, f5, f6, rne # perform operation
fnmadd.d f21, f8, f5, f6, rtz # perform operation
fnmadd.d f21, f8, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff0000000000000)
li x11, 0xac3485c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0xbce80ca9 # load x3 with 32 MSBs 0x00000000bce80ca9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bce80ca9
sw x3, 0(x2) # store x3 (0xbce80ca9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000bce80ca9 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fnmadd.d f11, f10, f9, f3, dyn # perform operation
fnmadd.d f11, f10, f9, f3, rdn # perform operation
fnmadd.d f11, f10, f9, f3, rmm # perform operation
fnmadd.d f11, f10, f9, f3, rne # perform operation
fnmadd.d f11, f10, f9, f3, rtz # perform operation
fnmadd.d f11, f10, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x3ff8000000000000)
li x7, 0x089a1097 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x53dc4252 # load x3 with 32 MSBs 0x0000000053dc4252
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053dc4252
sw x3, 0(x2) # store x3 (0x53dc4252) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000053dc4252 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fnmadd.d f7, f23, f10, f6, dyn # perform operation
fnmadd.d f7, f23, f10, f6, rdn # perform operation
fnmadd.d f7, f23, f10, f6, rmm # perform operation
fnmadd.d f7, f23, f10, f6, rne # perform operation
fnmadd.d f7, f23, f10, f6, rtz # perform operation
fnmadd.d f7, f23, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f23, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f23, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xbff8000000000000)
li x21, 0xe2825d87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0xe5036c1f # load x3 with 32 MSBs 0x00000000e5036c1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5036c1f
sw x3, 0(x2) # store x3 (0xe5036c1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e5036c1f from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fnmadd.d f21, f10, f17, f20, dyn # perform operation
fnmadd.d f21, f10, f17, f20, rdn # perform operation
fnmadd.d f21, f10, f17, f20, rmm # perform operation
fnmadd.d f21, f10, f17, f20, rne # perform operation
fnmadd.d f21, f10, f17, f20, rtz # perform operation
fnmadd.d f21, f10, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f10, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x4000000000000000)
li x5, 0x557ff6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xddc45c6c # load x3 with 32 MSBs 0x00000000ddc45c6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddc45c6c
sw x3, 0(x2) # store x3 (0xddc45c6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ddc45c6c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fnmadd.d f5, f24, f6, f2, dyn # perform operation
fnmadd.d f5, f24, f6, f2, rdn # perform operation
fnmadd.d f5, f24, f6, f2, rmm # perform operation
fnmadd.d f5, f24, f6, f2, rne # perform operation
fnmadd.d f5, f24, f6, f2, rtz # perform operation
fnmadd.d f5, f24, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f24, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xc000000000000000)
li x11, 0xe6015a7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x5f4b7bb3 # load x3 with 32 MSBs 0x000000005f4b7bb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f4b7bb3
sw x3, 0(x2) # store x3 (0x5f4b7bb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005f4b7bb3 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fnmadd.d f11, f9, f29, f24, dyn # perform operation
fnmadd.d f11, f9, f29, f24, rdn # perform operation
fnmadd.d f11, f9, f29, f24, rmm # perform operation
fnmadd.d f11, f9, f29, f24, rne # perform operation
fnmadd.d f11, f9, f29, f24, rtz # perform operation
fnmadd.d f11, f9, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f9, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x10000000000000)
li x20, 0xaaaeb912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x285fb25d # load x3 with 32 MSBs 0x00000000285fb25d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000285fb25d
sw x3, 0(x2) # store x3 (0x285fb25d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000285fb25d from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fnmadd.d f20, f15, f7, f8, dyn # perform operation
fnmadd.d f20, f15, f7, f8, rdn # perform operation
fnmadd.d f20, f15, f7, f8, rmm # perform operation
fnmadd.d f20, f15, f7, f8, rne # perform operation
fnmadd.d f20, f15, f7, f8, rtz # perform operation
fnmadd.d f20, f15, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8010000000000000)
li x6, 0xbacc794f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x0d9d74c1 # load x3 with 32 MSBs 0x000000000d9d74c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d9d74c1
sw x3, 0(x2) # store x3 (0x0d9d74c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000d9d74c1 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fnmadd.d f6, f29, f1, f5, dyn # perform operation
fnmadd.d f6, f29, f1, f5, rdn # perform operation
fnmadd.d f6, f29, f1, f5, rmm # perform operation
fnmadd.d f6, f29, f1, f5, rne # perform operation
fnmadd.d f6, f29, f1, f5, rtz # perform operation
fnmadd.d f6, f29, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f29, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f29, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fefffffffffffff)
li x17, 0x4cacdbfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x872b8b60 # load x3 with 32 MSBs 0x00000000872b8b60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000872b8b60
sw x3, 0(x2) # store x3 (0x872b8b60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000872b8b60 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fnmadd.d f17, f24, f25, f30, dyn # perform operation
fnmadd.d f17, f24, f25, f30, rdn # perform operation
fnmadd.d f17, f24, f25, f30, rmm # perform operation
fnmadd.d f17, f24, f25, f30, rne # perform operation
fnmadd.d f17, f24, f25, f30, rtz # perform operation
fnmadd.d f17, f24, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f24, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f24, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f24, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f24, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f24, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xffefffffffffffff)
li x30, 0x8f502f6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x6677a5c7 # load x3 with 32 MSBs 0x000000006677a5c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006677a5c7
sw x3, 0(x2) # store x3 (0x6677a5c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006677a5c7 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fnmadd.d f30, f8, f31, f28, dyn # perform operation
fnmadd.d f30, f8, f31, f28, rdn # perform operation
fnmadd.d f30, f8, f31, f28, rmm # perform operation
fnmadd.d f30, f8, f31, f28, rne # perform operation
fnmadd.d f30, f8, f31, f28, rtz # perform operation
fnmadd.d f30, f8, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f8, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfffffffffffff)
li x5, 0x06ddf8fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x0d351e43 # load x3 with 32 MSBs 0x000000000d351e43
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d351e43
sw x3, 0(x2) # store x3 (0x0d351e43) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000d351e43 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fnmadd.d f5, f11, f18, f6, dyn # perform operation
fnmadd.d f5, f11, f18, f6, rdn # perform operation
fnmadd.d f5, f11, f18, f6, rmm # perform operation
fnmadd.d f5, f11, f18, f6, rne # perform operation
fnmadd.d f5, f11, f18, f6, rtz # perform operation
fnmadd.d f5, f11, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f11, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f11, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f11, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f11, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f11, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x800fffffffffffff)
li x1, 0xc189b990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0xb408f137 # load x3 with 32 MSBs 0x00000000b408f137
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b408f137
sw x3, 0(x2) # store x3 (0xb408f137) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b408f137 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fnmadd.d f1, f15, f21, f4, dyn # perform operation
fnmadd.d f1, f15, f21, f4, rdn # perform operation
fnmadd.d f1, f15, f21, f4, rmm # perform operation
fnmadd.d f1, f15, f21, f4, rne # perform operation
fnmadd.d f1, f15, f21, f4, rtz # perform operation
fnmadd.d f1, f15, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f15, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f15, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f15, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f15, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f15, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000)
li x8, 0x0d85fb19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x11101ec0 # load x3 with 32 MSBs 0x0000000011101ec0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011101ec0
sw x3, 0(x2) # store x3 (0x11101ec0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000011101ec0 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fnmadd.d f8, f29, f1, f11, dyn # perform operation
fnmadd.d f8, f29, f1, f11, rdn # perform operation
fnmadd.d f8, f29, f1, f11, rmm # perform operation
fnmadd.d f8, f29, f1, f11, rne # perform operation
fnmadd.d f8, f29, f1, f11, rtz # perform operation
fnmadd.d f8, f29, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f29, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f29, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f29, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f29, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f29, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8008000000000000)
li x21, 0x5f762d33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x3b707dda # load x3 with 32 MSBs 0x000000003b707dda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003b707dda
sw x3, 0(x2) # store x3 (0x3b707dda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000003b707dda from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fnmadd.d f21, f19, f17, f30, dyn # perform operation
fnmadd.d f21, f19, f17, f30, rdn # perform operation
fnmadd.d f21, f19, f17, f30, rmm # perform operation
fnmadd.d f21, f19, f17, f30, rne # perform operation
fnmadd.d f21, f19, f17, f30, rtz # perform operation
fnmadd.d f21, f19, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f19, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f19, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x1)
li x7, 0xb3375199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x57a4432a # load x3 with 32 MSBs 0x0000000057a4432a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057a4432a
sw x3, 0(x2) # store x3 (0x57a4432a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000057a4432a from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fnmadd.d f7, f13, f16, f31, dyn # perform operation
fnmadd.d f7, f13, f16, f31, rdn # perform operation
fnmadd.d f7, f13, f16, f31, rmm # perform operation
fnmadd.d f7, f13, f16, f31, rne # perform operation
fnmadd.d f7, f13, f16, f31, rtz # perform operation
fnmadd.d f7, f13, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f13, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x8000000000000001)
li x10, 0x97cbef92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x38b9ff97 # load x3 with 32 MSBs 0x0000000038b9ff97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038b9ff97
sw x3, 0(x2) # store x3 (0x38b9ff97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000038b9ff97 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fnmadd.d f10, f29, f12, f20, dyn # perform operation
fnmadd.d f10, f29, f12, f20, rdn # perform operation
fnmadd.d f10, f29, f12, f20, rmm # perform operation
fnmadd.d f10, f29, f12, f20, rne # perform operation
fnmadd.d f10, f29, f12, f20, rtz # perform operation
fnmadd.d f10, f29, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000000)
li x10, 0x55815136 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0xc1dfbe66 # load x3 with 32 MSBs 0x00000000c1dfbe66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1dfbe66
sw x3, 0(x2) # store x3 (0xc1dfbe66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c1dfbe66 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fnmadd.d f10, f24, f2, f20, dyn # perform operation
fnmadd.d f10, f24, f2, f20, rdn # perform operation
fnmadd.d f10, f24, f2, f20, rmm # perform operation
fnmadd.d f10, f24, f2, f20, rne # perform operation
fnmadd.d f10, f24, f2, f20, rtz # perform operation
fnmadd.d f10, f24, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f24, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f24, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xfff0000000000000)
li x18, 0x5b238ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
li x3, 0x3ed92cd4 # load x3 with 32 MSBs 0x000000003ed92cd4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ed92cd4
sw x3, 0(x2) # store x3 (0x3ed92cd4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000003ed92cd4 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fnmadd.d f18, f9, f1, f11, dyn # perform operation
fnmadd.d f18, f9, f1, f11, rdn # perform operation
fnmadd.d f18, f9, f1, f11, rmm # perform operation
fnmadd.d f18, f9, f1, f11, rne # perform operation
fnmadd.d f18, f9, f1, f11, rtz # perform operation
fnmadd.d f18, f9, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f9, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff8000000000000)
li x10, 0xe68cc36f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
li x3, 0xb55d3ed3 # load x3 with 32 MSBs 0x00000000b55d3ed3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b55d3ed3
sw x3, 0(x2) # store x3 (0xb55d3ed3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b55d3ed3 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fnmadd.d f10, f26, f6, f24, dyn # perform operation
fnmadd.d f10, f26, f6, f24, rdn # perform operation
fnmadd.d f10, f26, f6, f24, rmm # perform operation
fnmadd.d f10, f26, f6, f24, rne # perform operation
fnmadd.d f10, f26, f6, f24, rtz # perform operation
fnmadd.d f10, f26, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f26, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f26, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f26, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f26, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f26, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7fffffffffffffff)
li x5, 0x3ce88aad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x86cafc8a # load x3 with 32 MSBs 0x0000000086cafc8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086cafc8a
sw x3, 0(x2) # store x3 (0x86cafc8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000086cafc8a from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fnmadd.d f5, f31, f28, f30, dyn # perform operation
fnmadd.d f5, f31, f28, f30, rdn # perform operation
fnmadd.d f5, f31, f28, f30, rmm # perform operation
fnmadd.d f5, f31, f28, f30, rne # perform operation
fnmadd.d f5, f31, f28, f30, rtz # perform operation
fnmadd.d f5, f31, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f31, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f31, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff0000000000001)
li x7, 0x51ae74db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x888793c6 # load x3 with 32 MSBs 0x00000000888793c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000888793c6
sw x3, 0(x2) # store x3 (0x888793c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000888793c6 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fnmadd.d f7, f24, f5, f25, dyn # perform operation
fnmadd.d f7, f24, f5, f25, rdn # perform operation
fnmadd.d f7, f24, f5, f25, rmm # perform operation
fnmadd.d f7, f24, f5, f25, rne # perform operation
fnmadd.d f7, f24, f5, f25, rtz # perform operation
fnmadd.d f7, f24, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f24, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f24, f5, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x7ff7ffffffffffff)
li x18, 0xcfeaaf9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0xcd3b576b # load x3 with 32 MSBs 0x00000000cd3b576b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd3b576b
sw x3, 0(x2) # store x3 (0xcd3b576b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000cd3b576b from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fnmadd.d f18, f29, f13, f30, dyn # perform operation
fnmadd.d f18, f29, f13, f30, rdn # perform operation
fnmadd.d f18, f29, f13, f30, rmm # perform operation
fnmadd.d f18, f29, f13, f30, rne # perform operation
fnmadd.d f18, f29, f13, f30, rtz # perform operation
fnmadd.d f18, f29, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f29, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0x5a392534a57711ad)
li x31, 0x6ecce56f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xbd448d69 # load x3 with 32 MSBs 0x00000000bd448d69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd448d69
sw x3, 0(x2) # store x3 (0xbd448d69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bd448d69 from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fnmadd.d f31, f6, f22, f14, dyn # perform operation
fnmadd.d f31, f6, f22, f14, rdn # perform operation
fnmadd.d f31, f6, f22, f14, rmm # perform operation
fnmadd.d f31, f6, f22, f14, rne # perform operation
fnmadd.d f31, f6, f22, f14, rtz # perform operation
fnmadd.d f31, f6, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff8000000000000 fs3 = 0xa6e895993737426c)
li x4, 0x69dff178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x26a2d246 # load x3 with 32 MSBs 0x0000000026a2d246
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026a2d246
sw x3, 0(x2) # store x3 (0x26a2d246) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000026a2d246 from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fnmadd.d f4, f27, f28, f15, dyn # perform operation
fnmadd.d f4, f27, f28, f15, rdn # perform operation
fnmadd.d f4, f27, f28, f15, rmm # perform operation
fnmadd.d f4, f27, f28, f15, rne # perform operation
fnmadd.d f4, f27, f28, f15, rtz # perform operation
fnmadd.d f4, f27, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f27, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f27, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f27, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f27, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f27, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x0)
li x29, 0x8194db0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0xbc8a7ef9 # load x3 with 32 MSBs 0x00000000bc8a7ef9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bc8a7ef9
sw x3, 0(x2) # store x3 (0xbc8a7ef9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bc8a7ef9 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fnmadd.d f29, f15, f24, f14, dyn # perform operation
fnmadd.d f29, f15, f24, f14, rdn # perform operation
fnmadd.d f29, f15, f24, f14, rmm # perform operation
fnmadd.d f29, f15, f24, f14, rne # perform operation
fnmadd.d f29, f15, f24, f14, rtz # perform operation
fnmadd.d f29, f15, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f15, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000000)
li x10, 0x52043701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x0bc28790 # load x3 with 32 MSBs 0x000000000bc28790
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000bc28790
sw x3, 0(x2) # store x3 (0x0bc28790) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000000bc28790 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fnmadd.d f10, f8, f4, f25, dyn # perform operation
fnmadd.d f10, f8, f4, f25, rdn # perform operation
fnmadd.d f10, f8, f4, f25, rmm # perform operation
fnmadd.d f10, f8, f4, f25, rne # perform operation
fnmadd.d f10, f8, f4, f25, rtz # perform operation
fnmadd.d f10, f8, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff0000000000000)
li x20, 0x6acdd0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0xf0cd0bac # load x3 with 32 MSBs 0x00000000f0cd0bac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0cd0bac
sw x3, 0(x2) # store x3 (0xf0cd0bac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f0cd0bac from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fnmadd.d f20, f25, f9, f15, dyn # perform operation
fnmadd.d f20, f25, f9, f15, rdn # perform operation
fnmadd.d f20, f25, f9, f15, rmm # perform operation
fnmadd.d f20, f25, f9, f15, rne # perform operation
fnmadd.d f20, f25, f9, f15, rtz # perform operation
fnmadd.d f20, f25, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f25, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff0000000000000)
li x11, 0x758fc2b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x4da2b94f # load x3 with 32 MSBs 0x000000004da2b94f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004da2b94f
sw x3, 0(x2) # store x3 (0x4da2b94f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004da2b94f from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fnmadd.d f11, f6, f9, f14, dyn # perform operation
fnmadd.d f11, f6, f9, f14, rdn # perform operation
fnmadd.d f11, f6, f9, f14, rmm # perform operation
fnmadd.d f11, f6, f9, f14, rne # perform operation
fnmadd.d f11, f6, f9, f14, rtz # perform operation
fnmadd.d f11, f6, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f6, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f6, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x3ff8000000000000)
li x17, 0xf22aa240 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x956f701a # load x3 with 32 MSBs 0x00000000956f701a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000956f701a
sw x3, 0(x2) # store x3 (0x956f701a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000956f701a from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fnmadd.d f17, f12, f11, f27, dyn # perform operation
fnmadd.d f17, f12, f11, f27, rdn # perform operation
fnmadd.d f17, f12, f11, f27, rmm # perform operation
fnmadd.d f17, f12, f11, f27, rne # perform operation
fnmadd.d f17, f12, f11, f27, rtz # perform operation
fnmadd.d f17, f12, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f12, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f12, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f12, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f12, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f12, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xbff8000000000000)
li x3, 0x0af2dffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x49cfe0bb # load x3 with 32 MSBs 0x0000000049cfe0bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049cfe0bb
sw x3, 0(x2) # store x3 (0x49cfe0bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000049cfe0bb from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fnmadd.d f3, f6, f25, f24, dyn # perform operation
fnmadd.d f3, f6, f25, f24, rdn # perform operation
fnmadd.d f3, f6, f25, f24, rmm # perform operation
fnmadd.d f3, f6, f25, f24, rne # perform operation
fnmadd.d f3, f6, f25, f24, rtz # perform operation
fnmadd.d f3, f6, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f6, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x4000000000000000)
li x5, 0xf09a3b83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xdf72cb63 # load x3 with 32 MSBs 0x00000000df72cb63
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df72cb63
sw x3, 0(x2) # store x3 (0xdf72cb63) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000df72cb63 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fnmadd.d f5, f30, f20, f19, dyn # perform operation
fnmadd.d f5, f30, f20, f19, rdn # perform operation
fnmadd.d f5, f30, f20, f19, rmm # perform operation
fnmadd.d f5, f30, f20, f19, rne # perform operation
fnmadd.d f5, f30, f20, f19, rtz # perform operation
fnmadd.d f5, f30, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f30, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f30, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f30, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f30, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f30, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xc000000000000000)
li x15, 0xa59a647a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x140d2c66 # load x3 with 32 MSBs 0x00000000140d2c66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000140d2c66
sw x3, 0(x2) # store x3 (0x140d2c66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000140d2c66 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
fnmadd.d f15, f14, f13, f26, dyn # perform operation
fnmadd.d f15, f14, f13, f26, rdn # perform operation
fnmadd.d f15, f14, f13, f26, rmm # perform operation
fnmadd.d f15, f14, f13, f26, rne # perform operation
fnmadd.d f15, f14, f13, f26, rtz # perform operation
fnmadd.d f15, f14, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f14, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f14, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x10000000000000)
li x2, 0xf483c6e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x53738aaf # load x3 with 32 MSBs 0x0000000053738aaf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053738aaf
sw x3, 0(x2) # store x3 (0x53738aaf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000053738aaf from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fnmadd.d f2, f3, f9, f23, dyn # perform operation
fnmadd.d f2, f3, f9, f23, rdn # perform operation
fnmadd.d f2, f3, f9, f23, rmm # perform operation
fnmadd.d f2, f3, f9, f23, rne # perform operation
fnmadd.d f2, f3, f9, f23, rtz # perform operation
fnmadd.d f2, f3, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f3, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8010000000000000)
li x21, 0x00d78fd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
li x3, 0x201776db # load x3 with 32 MSBs 0x00000000201776db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000201776db
sw x3, 0(x2) # store x3 (0x201776db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000201776db from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fnmadd.d f21, f9, f24, f6, dyn # perform operation
fnmadd.d f21, f9, f24, f6, rdn # perform operation
fnmadd.d f21, f9, f24, f6, rmm # perform operation
fnmadd.d f21, f9, f24, f6, rne # perform operation
fnmadd.d f21, f9, f24, f6, rtz # perform operation
fnmadd.d f21, f9, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f9, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f9, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fefffffffffffff)
li x29, 0x376aa341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xf2fc4bca # load x3 with 32 MSBs 0x00000000f2fc4bca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2fc4bca
sw x3, 0(x2) # store x3 (0xf2fc4bca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f2fc4bca from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fnmadd.d f29, f11, f23, f16, dyn # perform operation
fnmadd.d f29, f11, f23, f16, rdn # perform operation
fnmadd.d f29, f11, f23, f16, rmm # perform operation
fnmadd.d f29, f11, f23, f16, rne # perform operation
fnmadd.d f29, f11, f23, f16, rtz # perform operation
fnmadd.d f29, f11, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f11, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xffefffffffffffff)
li x3, 0xa96608ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
li x3, 0xd8fab444 # load x3 with 32 MSBs 0x00000000d8fab444
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8fab444
sw x3, 0(x2) # store x3 (0xd8fab444) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d8fab444 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fnmadd.d f3, f20, f29, f23, dyn # perform operation
fnmadd.d f3, f20, f29, f23, rdn # perform operation
fnmadd.d f3, f20, f29, f23, rmm # perform operation
fnmadd.d f3, f20, f29, f23, rne # perform operation
fnmadd.d f3, f20, f29, f23, rtz # perform operation
fnmadd.d f3, f20, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f20, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f20, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f20, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f20, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f20, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfffffffffffff)
li x22, 0x0254fde7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x43d00c52 # load x3 with 32 MSBs 0x0000000043d00c52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043d00c52
sw x3, 0(x2) # store x3 (0x43d00c52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000043d00c52 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fnmadd.d f22, f16, f29, f19, dyn # perform operation
fnmadd.d f22, f16, f29, f19, rdn # perform operation
fnmadd.d f22, f16, f29, f19, rmm # perform operation
fnmadd.d f22, f16, f29, f19, rne # perform operation
fnmadd.d f22, f16, f29, f19, rtz # perform operation
fnmadd.d f22, f16, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f16, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f16, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f16, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f16, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f16, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x800fffffffffffff)
li x17, 0xac1f090d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xfa0b78dc # load x3 with 32 MSBs 0x00000000fa0b78dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa0b78dc
sw x3, 0(x2) # store x3 (0xfa0b78dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000fa0b78dc from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fnmadd.d f17, f12, f6, f27, dyn # perform operation
fnmadd.d f17, f12, f6, f27, rdn # perform operation
fnmadd.d f17, f12, f6, f27, rmm # perform operation
fnmadd.d f17, f12, f6, f27, rne # perform operation
fnmadd.d f17, f12, f6, f27, rtz # perform operation
fnmadd.d f17, f12, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f17, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f17, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f17, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f17, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f17, f12, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000)
li x22, 0xedc80fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x84f59cb1 # load x3 with 32 MSBs 0x0000000084f59cb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084f59cb1
sw x3, 0(x2) # store x3 (0x84f59cb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000084f59cb1 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fnmadd.d f22, f31, f30, f23, dyn # perform operation
fnmadd.d f22, f31, f30, f23, rdn # perform operation
fnmadd.d f22, f31, f30, f23, rmm # perform operation
fnmadd.d f22, f31, f30, f23, rne # perform operation
fnmadd.d f22, f31, f30, f23, rtz # perform operation
fnmadd.d f22, f31, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f31, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8008000000000000)
li x12, 0x0f753534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x5944e3a1 # load x3 with 32 MSBs 0x000000005944e3a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005944e3a1
sw x3, 0(x2) # store x3 (0x5944e3a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005944e3a1 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fnmadd.d f12, f19, f8, f1, dyn # perform operation
fnmadd.d f12, f19, f8, f1, rdn # perform operation
fnmadd.d f12, f19, f8, f1, rmm # perform operation
fnmadd.d f12, f19, f8, f1, rne # perform operation
fnmadd.d f12, f19, f8, f1, rtz # perform operation
fnmadd.d f12, f19, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f19, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f19, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x1)
li x27, 0x587d32d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x924a4543 # load x3 with 32 MSBs 0x00000000924a4543
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000924a4543
sw x3, 0(x2) # store x3 (0x924a4543) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000924a4543 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fnmadd.d f27, f26, f28, f20, dyn # perform operation
fnmadd.d f27, f26, f28, f20, rdn # perform operation
fnmadd.d f27, f26, f28, f20, rmm # perform operation
fnmadd.d f27, f26, f28, f20, rne # perform operation
fnmadd.d f27, f26, f28, f20, rtz # perform operation
fnmadd.d f27, f26, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f26, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x8000000000000001)
li x18, 0xb39e9361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0xa422fe53 # load x3 with 32 MSBs 0x00000000a422fe53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a422fe53
sw x3, 0(x2) # store x3 (0xa422fe53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a422fe53 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fnmadd.d f18, f21, f28, f13, dyn # perform operation
fnmadd.d f18, f21, f28, f13, rdn # perform operation
fnmadd.d f18, f21, f28, f13, rmm # perform operation
fnmadd.d f18, f21, f28, f13, rne # perform operation
fnmadd.d f18, f21, f28, f13, rtz # perform operation
fnmadd.d f18, f21, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f21, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f21, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000000)
li x10, 0x0872fa8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0xe6a783ef # load x3 with 32 MSBs 0x00000000e6a783ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6a783ef
sw x3, 0(x2) # store x3 (0xe6a783ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e6a783ef from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fnmadd.d f10, f12, f9, f31, dyn # perform operation
fnmadd.d f10, f12, f9, f31, rdn # perform operation
fnmadd.d f10, f12, f9, f31, rmm # perform operation
fnmadd.d f10, f12, f9, f31, rne # perform operation
fnmadd.d f10, f12, f9, f31, rtz # perform operation
fnmadd.d f10, f12, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f12, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xfff0000000000000)
li x18, 0xe0dc3b8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x90bc32d5 # load x3 with 32 MSBs 0x0000000090bc32d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090bc32d5
sw x3, 0(x2) # store x3 (0x90bc32d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000090bc32d5 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fnmadd.d f18, f24, f3, f19, dyn # perform operation
fnmadd.d f18, f24, f3, f19, rdn # perform operation
fnmadd.d f18, f24, f3, f19, rmm # perform operation
fnmadd.d f18, f24, f3, f19, rne # perform operation
fnmadd.d f18, f24, f3, f19, rtz # perform operation
fnmadd.d f18, f24, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f24, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff8000000000000)
li x31, 0x10fe827b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x89bff930 # load x3 with 32 MSBs 0x0000000089bff930
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089bff930
sw x3, 0(x2) # store x3 (0x89bff930) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000089bff930 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fnmadd.d f31, f6, f29, f13, dyn # perform operation
fnmadd.d f31, f6, f29, f13, rdn # perform operation
fnmadd.d f31, f6, f29, f13, rmm # perform operation
fnmadd.d f31, f6, f29, f13, rne # perform operation
fnmadd.d f31, f6, f29, f13, rtz # perform operation
fnmadd.d f31, f6, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f6, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f6, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f6, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f6, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f6, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7fffffffffffffff)
li x30, 0xd2f3f2c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x86e60516 # load x3 with 32 MSBs 0x0000000086e60516
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086e60516
sw x3, 0(x2) # store x3 (0x86e60516) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000086e60516 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fnmadd.d f30, f24, f13, f15, dyn # perform operation
fnmadd.d f30, f24, f13, f15, rdn # perform operation
fnmadd.d f30, f24, f13, f15, rmm # perform operation
fnmadd.d f30, f24, f13, f15, rne # perform operation
fnmadd.d f30, f24, f13, f15, rtz # perform operation
fnmadd.d f30, f24, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f24, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f24, f13, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff0000000000001)
li x18, 0xcf5a278c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x196b2b1b # load x3 with 32 MSBs 0x00000000196b2b1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000196b2b1b
sw x3, 0(x2) # store x3 (0x196b2b1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000196b2b1b from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fnmadd.d f18, f16, f14, f29, dyn # perform operation
fnmadd.d f18, f16, f14, f29, rdn # perform operation
fnmadd.d f18, f16, f14, f29, rmm # perform operation
fnmadd.d f18, f16, f14, f29, rne # perform operation
fnmadd.d f18, f16, f14, f29, rtz # perform operation
fnmadd.d f18, f16, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f16, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f16, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x7ff7ffffffffffff)
li x19, 0x86df45e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x35a884cf # load x3 with 32 MSBs 0x0000000035a884cf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035a884cf
sw x3, 0(x2) # store x3 (0x35a884cf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000035a884cf from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fnmadd.d f19, f22, f29, f2, dyn # perform operation
fnmadd.d f19, f22, f29, f2, rdn # perform operation
fnmadd.d f19, f22, f29, f2, rmm # perform operation
fnmadd.d f19, f22, f29, f2, rne # perform operation
fnmadd.d f19, f22, f29, f2, rtz # perform operation
fnmadd.d f19, f22, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f22, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f22, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0x5a392534a57711ad)
li x4, 0xfcc223ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0xc4f5c56b # load x3 with 32 MSBs 0x00000000c4f5c56b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4f5c56b
sw x3, 0(x2) # store x3 (0xc4f5c56b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c4f5c56b from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fnmadd.d f4, f5, f17, f29, dyn # perform operation
fnmadd.d f4, f5, f17, f29, rdn # perform operation
fnmadd.d f4, f5, f17, f29, rmm # perform operation
fnmadd.d f4, f5, f17, f29, rne # perform operation
fnmadd.d f4, f5, f17, f29, rtz # perform operation
fnmadd.d f4, f5, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f5, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f5, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f5, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f5, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f5, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffffffffffff fs3 = 0xa6e895993737426c)
li x3, 0x84cf8d94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0xb0ee2e5a # load x3 with 32 MSBs 0x00000000b0ee2e5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0ee2e5a
sw x3, 0(x2) # store x3 (0xb0ee2e5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000b0ee2e5a from memory into f4
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fnmadd.d f3, f14, f4, f1, dyn # perform operation
fnmadd.d f3, f14, f4, f1, rdn # perform operation
fnmadd.d f3, f14, f4, f1, rmm # perform operation
fnmadd.d f3, f14, f4, f1, rne # perform operation
fnmadd.d f3, f14, f4, f1, rtz # perform operation
fnmadd.d f3, f14, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f14, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f14, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f14, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f14, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f14, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x0)
li x30, 0x931c4734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x0c67ba25 # load x3 with 32 MSBs 0x000000000c67ba25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c67ba25
sw x3, 0(x2) # store x3 (0x0c67ba25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000c67ba25 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fnmadd.d f30, f11, f31, f28, dyn # perform operation
fnmadd.d f30, f11, f31, f28, rdn # perform operation
fnmadd.d f30, f11, f31, f28, rmm # perform operation
fnmadd.d f30, f11, f31, f28, rne # perform operation
fnmadd.d f30, f11, f31, f28, rtz # perform operation
fnmadd.d f30, f11, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f11, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f11, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f11, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f11, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f11, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000000)
li x5, 0x6f56b982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x76c5fdbb # load x3 with 32 MSBs 0x0000000076c5fdbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076c5fdbb
sw x3, 0(x2) # store x3 (0x76c5fdbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000076c5fdbb from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
fnmadd.d f5, f22, f3, f19, dyn # perform operation
fnmadd.d f5, f22, f3, f19, rdn # perform operation
fnmadd.d f5, f22, f3, f19, rmm # perform operation
fnmadd.d f5, f22, f3, f19, rne # perform operation
fnmadd.d f5, f22, f3, f19, rtz # perform operation
fnmadd.d f5, f22, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f22, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff0000000000000)
li x31, 0x2f3afd92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x1843ff78 # load x3 with 32 MSBs 0x000000001843ff78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001843ff78
sw x3, 0(x2) # store x3 (0x1843ff78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000001843ff78 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fnmadd.d f31, f26, f27, f6, dyn # perform operation
fnmadd.d f31, f26, f27, f6, rdn # perform operation
fnmadd.d f31, f26, f27, f6, rmm # perform operation
fnmadd.d f31, f26, f27, f6, rne # perform operation
fnmadd.d f31, f26, f27, f6, rtz # perform operation
fnmadd.d f31, f26, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f26, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff0000000000000)
li x30, 0x8b1c331b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x753acc0f # load x3 with 32 MSBs 0x00000000753acc0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000753acc0f
sw x3, 0(x2) # store x3 (0x753acc0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000753acc0f from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fnmadd.d f30, f25, f3, f26, dyn # perform operation
fnmadd.d f30, f25, f3, f26, rdn # perform operation
fnmadd.d f30, f25, f3, f26, rmm # perform operation
fnmadd.d f30, f25, f3, f26, rne # perform operation
fnmadd.d f30, f25, f3, f26, rtz # perform operation
fnmadd.d f30, f25, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f25, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f25, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f25, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f25, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f25, f3, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x3ff8000000000000)
li x23, 0xb73f55c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0xe2fe4a55 # load x3 with 32 MSBs 0x00000000e2fe4a55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e2fe4a55
sw x3, 0(x2) # store x3 (0xe2fe4a55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e2fe4a55 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fnmadd.d f23, f27, f13, f5, dyn # perform operation
fnmadd.d f23, f27, f13, f5, rdn # perform operation
fnmadd.d f23, f27, f13, f5, rmm # perform operation
fnmadd.d f23, f27, f13, f5, rne # perform operation
fnmadd.d f23, f27, f13, f5, rtz # perform operation
fnmadd.d f23, f27, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f27, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f27, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xbff8000000000000)
li x10, 0xe98a2f48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x01e71273 # load x3 with 32 MSBs 0x0000000001e71273
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001e71273
sw x3, 0(x2) # store x3 (0x01e71273) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000001e71273 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmadd.d f10, f11, f30, f12, dyn # perform operation
fnmadd.d f10, f11, f30, f12, rdn # perform operation
fnmadd.d f10, f11, f30, f12, rmm # perform operation
fnmadd.d f10, f11, f30, f12, rne # perform operation
fnmadd.d f10, f11, f30, f12, rtz # perform operation
fnmadd.d f10, f11, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f11, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f11, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f11, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f11, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f11, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x4000000000000000)
li x29, 0xd7fed377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x8409b693 # load x3 with 32 MSBs 0x000000008409b693
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008409b693
sw x3, 0(x2) # store x3 (0x8409b693) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008409b693 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fnmadd.d f29, f17, f15, f3, dyn # perform operation
fnmadd.d f29, f17, f15, f3, rdn # perform operation
fnmadd.d f29, f17, f15, f3, rmm # perform operation
fnmadd.d f29, f17, f15, f3, rne # perform operation
fnmadd.d f29, f17, f15, f3, rtz # perform operation
fnmadd.d f29, f17, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f17, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xc000000000000000)
li x23, 0x019e52d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0xd5ed3763 # load x3 with 32 MSBs 0x00000000d5ed3763
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5ed3763
sw x3, 0(x2) # store x3 (0xd5ed3763) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000d5ed3763 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fnmadd.d f23, f21, f19, f14, dyn # perform operation
fnmadd.d f23, f21, f19, f14, rdn # perform operation
fnmadd.d f23, f21, f19, f14, rmm # perform operation
fnmadd.d f23, f21, f19, f14, rne # perform operation
fnmadd.d f23, f21, f19, f14, rtz # perform operation
fnmadd.d f23, f21, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f21, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f21, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x10000000000000)
li x13, 0x7326a5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x45093cfb # load x3 with 32 MSBs 0x0000000045093cfb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045093cfb
sw x3, 0(x2) # store x3 (0x45093cfb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000045093cfb from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fnmadd.d f13, f31, f9, f24, dyn # perform operation
fnmadd.d f13, f31, f9, f24, rdn # perform operation
fnmadd.d f13, f31, f9, f24, rmm # perform operation
fnmadd.d f13, f31, f9, f24, rne # perform operation
fnmadd.d f13, f31, f9, f24, rtz # perform operation
fnmadd.d f13, f31, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f31, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f31, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f31, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f31, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f31, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8010000000000000)
li x20, 0xdd6029fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x35694ab6 # load x3 with 32 MSBs 0x0000000035694ab6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035694ab6
sw x3, 0(x2) # store x3 (0x35694ab6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000035694ab6 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fnmadd.d f20, f12, f27, f31, dyn # perform operation
fnmadd.d f20, f12, f27, f31, rdn # perform operation
fnmadd.d f20, f12, f27, f31, rmm # perform operation
fnmadd.d f20, f12, f27, f31, rne # perform operation
fnmadd.d f20, f12, f27, f31, rtz # perform operation
fnmadd.d f20, f12, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f12, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fefffffffffffff)
li x8, 0xcdd7368a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0xb6183f64 # load x3 with 32 MSBs 0x00000000b6183f64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b6183f64
sw x3, 0(x2) # store x3 (0xb6183f64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b6183f64 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fnmadd.d f8, f28, f7, f26, dyn # perform operation
fnmadd.d f8, f28, f7, f26, rdn # perform operation
fnmadd.d f8, f28, f7, f26, rmm # perform operation
fnmadd.d f8, f28, f7, f26, rne # perform operation
fnmadd.d f8, f28, f7, f26, rtz # perform operation
fnmadd.d f8, f28, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f28, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xffefffffffffffff)
li x22, 0x78dc2645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0xb34c2ce5 # load x3 with 32 MSBs 0x00000000b34c2ce5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b34c2ce5
sw x3, 0(x2) # store x3 (0xb34c2ce5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b34c2ce5 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fnmadd.d f22, f28, f13, f23, dyn # perform operation
fnmadd.d f22, f28, f13, f23, rdn # perform operation
fnmadd.d f22, f28, f13, f23, rmm # perform operation
fnmadd.d f22, f28, f13, f23, rne # perform operation
fnmadd.d f22, f28, f13, f23, rtz # perform operation
fnmadd.d f22, f28, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f28, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f28, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f28, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f28, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f28, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfffffffffffff)
li x19, 0xbf88a5e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x5e617f14 # load x3 with 32 MSBs 0x000000005e617f14
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e617f14
sw x3, 0(x2) # store x3 (0x5e617f14) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005e617f14 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fnmadd.d f19, f3, f24, f12, dyn # perform operation
fnmadd.d f19, f3, f24, f12, rdn # perform operation
fnmadd.d f19, f3, f24, f12, rmm # perform operation
fnmadd.d f19, f3, f24, f12, rne # perform operation
fnmadd.d f19, f3, f24, f12, rtz # perform operation
fnmadd.d f19, f3, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f19, f3, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f19, f3, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f19, f3, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f19, f3, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f19, f3, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x800fffffffffffff)
li x13, 0x74ebbf78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0xe7120bea # load x3 with 32 MSBs 0x00000000e7120bea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7120bea
sw x3, 0(x2) # store x3 (0xe7120bea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e7120bea from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fnmadd.d f13, f29, f9, f22, dyn # perform operation
fnmadd.d f13, f29, f9, f22, rdn # perform operation
fnmadd.d f13, f29, f9, f22, rmm # perform operation
fnmadd.d f13, f29, f9, f22, rne # perform operation
fnmadd.d f13, f29, f9, f22, rtz # perform operation
fnmadd.d f13, f29, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f29, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f29, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f29, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f29, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f29, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000)
li x18, 0x137cbc3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0xe12fe9f3 # load x3 with 32 MSBs 0x00000000e12fe9f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e12fe9f3
sw x3, 0(x2) # store x3 (0xe12fe9f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e12fe9f3 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fnmadd.d f18, f14, f5, f3, dyn # perform operation
fnmadd.d f18, f14, f5, f3, rdn # perform operation
fnmadd.d f18, f14, f5, f3, rmm # perform operation
fnmadd.d f18, f14, f5, f3, rne # perform operation
fnmadd.d f18, f14, f5, f3, rtz # perform operation
fnmadd.d f18, f14, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f14, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f14, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8008000000000000)
li x16, 0xad29f4dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
li x3, 0x9dda7246 # load x3 with 32 MSBs 0x000000009dda7246
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dda7246
sw x3, 0(x2) # store x3 (0x9dda7246) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009dda7246 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fnmadd.d f16, f31, f14, f19, dyn # perform operation
fnmadd.d f16, f31, f14, f19, rdn # perform operation
fnmadd.d f16, f31, f14, f19, rmm # perform operation
fnmadd.d f16, f31, f14, f19, rne # perform operation
fnmadd.d f16, f31, f14, f19, rtz # perform operation
fnmadd.d f16, f31, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f31, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x1)
li x3, 0x6e2adb0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0x5b2e8105 # load x3 with 32 MSBs 0x000000005b2e8105
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b2e8105
sw x3, 0(x2) # store x3 (0x5b2e8105) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005b2e8105 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fnmadd.d f3, f6, f18, f23, dyn # perform operation
fnmadd.d f3, f6, f18, f23, rdn # perform operation
fnmadd.d f3, f6, f18, f23, rmm # perform operation
fnmadd.d f3, f6, f18, f23, rne # perform operation
fnmadd.d f3, f6, f18, f23, rtz # perform operation
fnmadd.d f3, f6, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f6, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x8000000000000001)
li x15, 0xd986d5c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x1b779d54 # load x3 with 32 MSBs 0x000000001b779d54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b779d54
sw x3, 0(x2) # store x3 (0x1b779d54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001b779d54 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fnmadd.d f15, f17, f30, f8, dyn # perform operation
fnmadd.d f15, f17, f30, f8, rdn # perform operation
fnmadd.d f15, f17, f30, f8, rmm # perform operation
fnmadd.d f15, f17, f30, f8, rne # perform operation
fnmadd.d f15, f17, f30, f8, rtz # perform operation
fnmadd.d f15, f17, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f15, f17, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f15, f17, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f15, f17, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f15, f17, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f15, f17, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000000)
li x5, 0x96d94760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x66d8a429 # load x3 with 32 MSBs 0x0000000066d8a429
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000066d8a429
sw x3, 0(x2) # store x3 (0x66d8a429) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000066d8a429 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fnmadd.d f5, f14, f4, f10, dyn # perform operation
fnmadd.d f5, f14, f4, f10, rdn # perform operation
fnmadd.d f5, f14, f4, f10, rmm # perform operation
fnmadd.d f5, f14, f4, f10, rne # perform operation
fnmadd.d f5, f14, f4, f10, rtz # perform operation
fnmadd.d f5, f14, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f14, f4, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xfff0000000000000)
li x13, 0xade9d651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0xb0dbba7d # load x3 with 32 MSBs 0x00000000b0dbba7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0dbba7d
sw x3, 0(x2) # store x3 (0xb0dbba7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b0dbba7d from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fnmadd.d f13, f26, f21, f3, dyn # perform operation
fnmadd.d f13, f26, f21, f3, rdn # perform operation
fnmadd.d f13, f26, f21, f3, rmm # perform operation
fnmadd.d f13, f26, f21, f3, rne # perform operation
fnmadd.d f13, f26, f21, f3, rtz # perform operation
fnmadd.d f13, f26, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f26, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff8000000000000)
li x21, 0xfde2176b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x4669768a # load x3 with 32 MSBs 0x000000004669768a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004669768a
sw x3, 0(x2) # store x3 (0x4669768a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000004669768a from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
fnmadd.d f21, f7, f23, f25, dyn # perform operation
fnmadd.d f21, f7, f23, f25, rdn # perform operation
fnmadd.d f21, f7, f23, f25, rmm # perform operation
fnmadd.d f21, f7, f23, f25, rne # perform operation
fnmadd.d f21, f7, f23, f25, rtz # perform operation
fnmadd.d f21, f7, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f7, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f7, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f7, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f7, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f7, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7fffffffffffffff)
li x9, 0xde4745f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0x8b45818d # load x3 with 32 MSBs 0x000000008b45818d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b45818d
sw x3, 0(x2) # store x3 (0x8b45818d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008b45818d from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fnmadd.d f9, f3, f11, f24, dyn # perform operation
fnmadd.d f9, f3, f11, f24, rdn # perform operation
fnmadd.d f9, f3, f11, f24, rmm # perform operation
fnmadd.d f9, f3, f11, f24, rne # perform operation
fnmadd.d f9, f3, f11, f24, rtz # perform operation
fnmadd.d f9, f3, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f3, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff0000000000001)
li x12, 0x585cddf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
li x3, 0xdafd1ded # load x3 with 32 MSBs 0x00000000dafd1ded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dafd1ded
sw x3, 0(x2) # store x3 (0xdafd1ded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000dafd1ded from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fnmadd.d f12, f28, f20, f16, dyn # perform operation
fnmadd.d f12, f28, f20, f16, rdn # perform operation
fnmadd.d f12, f28, f20, f16, rmm # perform operation
fnmadd.d f12, f28, f20, f16, rne # perform operation
fnmadd.d f12, f28, f20, f16, rtz # perform operation
fnmadd.d f12, f28, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f28, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x7ff7ffffffffffff)
li x10, 0xf02ccff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0xd8e63c92 # load x3 with 32 MSBs 0x00000000d8e63c92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8e63c92
sw x3, 0(x2) # store x3 (0xd8e63c92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d8e63c92 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fnmadd.d f10, f8, f29, f25, dyn # perform operation
fnmadd.d f10, f8, f29, f25, rdn # perform operation
fnmadd.d f10, f8, f29, f25, rmm # perform operation
fnmadd.d f10, f8, f29, f25, rne # perform operation
fnmadd.d f10, f8, f29, f25, rtz # perform operation
fnmadd.d f10, f8, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f8, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f8, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f8, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f8, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f8, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0x5a392534a57711ad)
li x29, 0x19f17356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0xdc98cb70 # load x3 with 32 MSBs 0x00000000dc98cb70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc98cb70
sw x3, 0(x2) # store x3 (0xdc98cb70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dc98cb70 from memory into f13
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fnmadd.d f29, f25, f13, f2, dyn # perform operation
fnmadd.d f29, f25, f13, f2, rdn # perform operation
fnmadd.d f29, f25, f13, f2, rmm # perform operation
fnmadd.d f29, f25, f13, f2, rne # perform operation
fnmadd.d f29, f25, f13, f2, rtz # perform operation
fnmadd.d f29, f25, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f25, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f25, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f25, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f25, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f25, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff0000000000001 fs3 = 0xa6e895993737426c)
li x11, 0xb18ddad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x5e5fe72c # load x3 with 32 MSBs 0x000000005e5fe72c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e5fe72c
sw x3, 0(x2) # store x3 (0x5e5fe72c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005e5fe72c from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fnmadd.d f11, f12, f6, f21, dyn # perform operation
fnmadd.d f11, f12, f6, f21, rdn # perform operation
fnmadd.d f11, f12, f6, f21, rmm # perform operation
fnmadd.d f11, f12, f6, f21, rne # perform operation
fnmadd.d f11, f12, f6, f21, rtz # perform operation
fnmadd.d f11, f12, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f12, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f12, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x0)
li x6, 0x36c8c21a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0xdff8e382 # load x3 with 32 MSBs 0x00000000dff8e382
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dff8e382
sw x3, 0(x2) # store x3 (0xdff8e382) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000dff8e382 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fnmadd.d f6, f11, f23, f7, dyn # perform operation
fnmadd.d f6, f11, f23, f7, rdn # perform operation
fnmadd.d f6, f11, f23, f7, rmm # perform operation
fnmadd.d f6, f11, f23, f7, rne # perform operation
fnmadd.d f6, f11, f23, f7, rtz # perform operation
fnmadd.d f6, f11, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f11, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f11, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f11, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f11, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f11, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000000)
li x7, 0x302da062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
li x3, 0xb4d9b953 # load x3 with 32 MSBs 0x00000000b4d9b953
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b4d9b953
sw x3, 0(x2) # store x3 (0xb4d9b953) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b4d9b953 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fnmadd.d f7, f27, f8, f21, dyn # perform operation
fnmadd.d f7, f27, f8, f21, rdn # perform operation
fnmadd.d f7, f27, f8, f21, rmm # perform operation
fnmadd.d f7, f27, f8, f21, rne # perform operation
fnmadd.d f7, f27, f8, f21, rtz # perform operation
fnmadd.d f7, f27, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f27, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff0000000000000)
li x9, 0x4c0d7ee0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0xccf01ebb # load x3 with 32 MSBs 0x00000000ccf01ebb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ccf01ebb
sw x3, 0(x2) # store x3 (0xccf01ebb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ccf01ebb from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fnmadd.d f9, f2, f26, f15, dyn # perform operation
fnmadd.d f9, f2, f26, f15, rdn # perform operation
fnmadd.d f9, f2, f26, f15, rmm # perform operation
fnmadd.d f9, f2, f26, f15, rne # perform operation
fnmadd.d f9, f2, f26, f15, rtz # perform operation
fnmadd.d f9, f2, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f9, f2, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f9, f2, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f9, f2, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f9, f2, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f9, f2, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff0000000000000)
li x8, 0x070d49f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0xb7c1e690 # load x3 with 32 MSBs 0x00000000b7c1e690
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7c1e690
sw x3, 0(x2) # store x3 (0xb7c1e690) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000b7c1e690 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fnmadd.d f8, f15, f29, f24, dyn # perform operation
fnmadd.d f8, f15, f29, f24, rdn # perform operation
fnmadd.d f8, f15, f29, f24, rmm # perform operation
fnmadd.d f8, f15, f29, f24, rne # perform operation
fnmadd.d f8, f15, f29, f24, rtz # perform operation
fnmadd.d f8, f15, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f15, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f15, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f15, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f15, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f15, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x3ff8000000000000)
li x3, 0x3080cea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x43a4a385 # load x3 with 32 MSBs 0x0000000043a4a385
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000043a4a385
sw x3, 0(x2) # store x3 (0x43a4a385) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000043a4a385 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
fnmadd.d f3, f2, f17, f4, dyn # perform operation
fnmadd.d f3, f2, f17, f4, rdn # perform operation
fnmadd.d f3, f2, f17, f4, rmm # perform operation
fnmadd.d f3, f2, f17, f4, rne # perform operation
fnmadd.d f3, f2, f17, f4, rtz # perform operation
fnmadd.d f3, f2, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f2, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f2, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f2, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f2, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f2, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xbff8000000000000)
li x28, 0xb06f4ca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xdca937a0 # load x3 with 32 MSBs 0x00000000dca937a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dca937a0
sw x3, 0(x2) # store x3 (0xdca937a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dca937a0 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fnmadd.d f28, f10, f13, f26, dyn # perform operation
fnmadd.d f28, f10, f13, f26, rdn # perform operation
fnmadd.d f28, f10, f13, f26, rmm # perform operation
fnmadd.d f28, f10, f13, f26, rne # perform operation
fnmadd.d f28, f10, f13, f26, rtz # perform operation
fnmadd.d f28, f10, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f10, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x4000000000000000)
li x8, 0xf416ea62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x22ffcc0f # load x3 with 32 MSBs 0x0000000022ffcc0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022ffcc0f
sw x3, 0(x2) # store x3 (0x22ffcc0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000022ffcc0f from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fnmadd.d f8, f14, f21, f28, dyn # perform operation
fnmadd.d f8, f14, f21, f28, rdn # perform operation
fnmadd.d f8, f14, f21, f28, rmm # perform operation
fnmadd.d f8, f14, f21, f28, rne # perform operation
fnmadd.d f8, f14, f21, f28, rtz # perform operation
fnmadd.d f8, f14, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f14, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f14, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xc000000000000000)
li x21, 0x406697da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
li x3, 0x8835b029 # load x3 with 32 MSBs 0x000000008835b029
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008835b029
sw x3, 0(x2) # store x3 (0x8835b029) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000008835b029 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fnmadd.d f21, f8, f20, f16, dyn # perform operation
fnmadd.d f21, f8, f20, f16, rdn # perform operation
fnmadd.d f21, f8, f20, f16, rmm # perform operation
fnmadd.d f21, f8, f20, f16, rne # perform operation
fnmadd.d f21, f8, f20, f16, rtz # perform operation
fnmadd.d f21, f8, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f8, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f8, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x10000000000000)
li x11, 0xaa5b56c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x669ae884 # load x3 with 32 MSBs 0x00000000669ae884
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000669ae884
sw x3, 0(x2) # store x3 (0x669ae884) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000669ae884 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fnmadd.d f11, f15, f30, f12, dyn # perform operation
fnmadd.d f11, f15, f30, f12, rdn # perform operation
fnmadd.d f11, f15, f30, f12, rmm # perform operation
fnmadd.d f11, f15, f30, f12, rne # perform operation
fnmadd.d f11, f15, f30, f12, rtz # perform operation
fnmadd.d f11, f15, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f15, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f15, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8010000000000000)
li x8, 0x99342ab1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x86914973 # load x3 with 32 MSBs 0x0000000086914973
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086914973
sw x3, 0(x2) # store x3 (0x86914973) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000086914973 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fnmadd.d f8, f10, f17, f5, dyn # perform operation
fnmadd.d f8, f10, f17, f5, rdn # perform operation
fnmadd.d f8, f10, f17, f5, rmm # perform operation
fnmadd.d f8, f10, f17, f5, rne # perform operation
fnmadd.d f8, f10, f17, f5, rtz # perform operation
fnmadd.d f8, f10, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f10, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f10, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f10, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f10, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f10, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fefffffffffffff)
li x2, 0x681a9e8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x522b6435 # load x3 with 32 MSBs 0x00000000522b6435
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000522b6435
sw x3, 0(x2) # store x3 (0x522b6435) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000522b6435 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fnmadd.d f2, f26, f10, f21, dyn # perform operation
fnmadd.d f2, f26, f10, f21, rdn # perform operation
fnmadd.d f2, f26, f10, f21, rmm # perform operation
fnmadd.d f2, f26, f10, f21, rne # perform operation
fnmadd.d f2, f26, f10, f21, rtz # perform operation
fnmadd.d f2, f26, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f26, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xffefffffffffffff)
li x2, 0x47475f13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0xd386a885 # load x3 with 32 MSBs 0x00000000d386a885
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d386a885
sw x3, 0(x2) # store x3 (0xd386a885) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d386a885 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fnmadd.d f2, f24, f6, f14, dyn # perform operation
fnmadd.d f2, f24, f6, f14, rdn # perform operation
fnmadd.d f2, f24, f6, f14, rmm # perform operation
fnmadd.d f2, f24, f6, f14, rne # perform operation
fnmadd.d f2, f24, f6, f14, rtz # perform operation
fnmadd.d f2, f24, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f24, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f24, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f24, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f24, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f24, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfffffffffffff)
li x18, 0xc7aab623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0xe1883c09 # load x3 with 32 MSBs 0x00000000e1883c09
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1883c09
sw x3, 0(x2) # store x3 (0xe1883c09) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e1883c09 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fnmadd.d f18, f20, f1, f26, dyn # perform operation
fnmadd.d f18, f20, f1, f26, rdn # perform operation
fnmadd.d f18, f20, f1, f26, rmm # perform operation
fnmadd.d f18, f20, f1, f26, rne # perform operation
fnmadd.d f18, f20, f1, f26, rtz # perform operation
fnmadd.d f18, f20, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f20, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f20, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x800fffffffffffff)
li x27, 0x034df497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x0152ea57 # load x3 with 32 MSBs 0x000000000152ea57
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000152ea57
sw x3, 0(x2) # store x3 (0x0152ea57) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000000152ea57 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fnmadd.d f27, f14, f3, f17, dyn # perform operation
fnmadd.d f27, f14, f3, f17, rdn # perform operation
fnmadd.d f27, f14, f3, f17, rmm # perform operation
fnmadd.d f27, f14, f3, f17, rne # perform operation
fnmadd.d f27, f14, f3, f17, rtz # perform operation
fnmadd.d f27, f14, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f14, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f14, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f14, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f14, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f14, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000)
li x27, 0xd38bd27d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xe91e7bd0 # load x3 with 32 MSBs 0x00000000e91e7bd0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e91e7bd0
sw x3, 0(x2) # store x3 (0xe91e7bd0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e91e7bd0 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fnmadd.d f27, f12, f2, f15, dyn # perform operation
fnmadd.d f27, f12, f2, f15, rdn # perform operation
fnmadd.d f27, f12, f2, f15, rmm # perform operation
fnmadd.d f27, f12, f2, f15, rne # perform operation
fnmadd.d f27, f12, f2, f15, rtz # perform operation
fnmadd.d f27, f12, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f12, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f12, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8008000000000000)
li x5, 0xbd2d9792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0xbf6fe49f # load x3 with 32 MSBs 0x00000000bf6fe49f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf6fe49f
sw x3, 0(x2) # store x3 (0xbf6fe49f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bf6fe49f from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fnmadd.d f5, f7, f31, f21, dyn # perform operation
fnmadd.d f5, f7, f31, f21, rdn # perform operation
fnmadd.d f5, f7, f31, f21, rmm # perform operation
fnmadd.d f5, f7, f31, f21, rne # perform operation
fnmadd.d f5, f7, f31, f21, rtz # perform operation
fnmadd.d f5, f7, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f5, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f5, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f5, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f5, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f5, f7, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x1)
li x1, 0xc03d52e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x3e079cdf # load x3 with 32 MSBs 0x000000003e079cdf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e079cdf
sw x3, 0(x2) # store x3 (0x3e079cdf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000003e079cdf from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fnmadd.d f1, f11, f10, f14, dyn # perform operation
fnmadd.d f1, f11, f10, f14, rdn # perform operation
fnmadd.d f1, f11, f10, f14, rmm # perform operation
fnmadd.d f1, f11, f10, f14, rne # perform operation
fnmadd.d f1, f11, f10, f14, rtz # perform operation
fnmadd.d f1, f11, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f11, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f11, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f11, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f11, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f11, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x8000000000000001)
li x11, 0x39a7a18b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x9ef530c2 # load x3 with 32 MSBs 0x000000009ef530c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ef530c2
sw x3, 0(x2) # store x3 (0x9ef530c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000009ef530c2 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fnmadd.d f11, f10, f28, f26, dyn # perform operation
fnmadd.d f11, f10, f28, f26, rdn # perform operation
fnmadd.d f11, f10, f28, f26, rmm # perform operation
fnmadd.d f11, f10, f28, f26, rne # perform operation
fnmadd.d f11, f10, f28, f26, rtz # perform operation
fnmadd.d f11, f10, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f10, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000000)
li x4, 0x4d367dbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x491eeec7 # load x3 with 32 MSBs 0x00000000491eeec7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000491eeec7
sw x3, 0(x2) # store x3 (0x491eeec7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000491eeec7 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fnmadd.d f4, f22, f28, f3, dyn # perform operation
fnmadd.d f4, f22, f28, f3, rdn # perform operation
fnmadd.d f4, f22, f28, f3, rmm # perform operation
fnmadd.d f4, f22, f28, f3, rne # perform operation
fnmadd.d f4, f22, f28, f3, rtz # perform operation
fnmadd.d f4, f22, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f22, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f22, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xfff0000000000000)
li x31, 0x2528defd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0x2ca25a08 # load x3 with 32 MSBs 0x000000002ca25a08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ca25a08
sw x3, 0(x2) # store x3 (0x2ca25a08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002ca25a08 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fnmadd.d f31, f28, f8, f17, dyn # perform operation
fnmadd.d f31, f28, f8, f17, rdn # perform operation
fnmadd.d f31, f28, f8, f17, rmm # perform operation
fnmadd.d f31, f28, f8, f17, rne # perform operation
fnmadd.d f31, f28, f8, f17, rtz # perform operation
fnmadd.d f31, f28, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f28, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f28, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f28, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f28, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f28, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff8000000000000)
li x13, 0x4796844a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x7345b396 # load x3 with 32 MSBs 0x000000007345b396
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007345b396
sw x3, 0(x2) # store x3 (0x7345b396) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007345b396 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
fnmadd.d f13, f29, f19, f28, dyn # perform operation
fnmadd.d f13, f29, f19, f28, rdn # perform operation
fnmadd.d f13, f29, f19, f28, rmm # perform operation
fnmadd.d f13, f29, f19, f28, rne # perform operation
fnmadd.d f13, f29, f19, f28, rtz # perform operation
fnmadd.d f13, f29, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f29, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7fffffffffffffff)
li x23, 0x520b6883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xe9e15cbb # load x3 with 32 MSBs 0x00000000e9e15cbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9e15cbb
sw x3, 0(x2) # store x3 (0xe9e15cbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e9e15cbb from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fnmadd.d f23, f9, f3, f18, dyn # perform operation
fnmadd.d f23, f9, f3, f18, rdn # perform operation
fnmadd.d f23, f9, f3, f18, rmm # perform operation
fnmadd.d f23, f9, f3, f18, rne # perform operation
fnmadd.d f23, f9, f3, f18, rtz # perform operation
fnmadd.d f23, f9, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f9, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f9, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f9, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f9, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f9, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff0000000000001)
li x7, 0x18892ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xcaea59c4 # load x3 with 32 MSBs 0x00000000caea59c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000caea59c4
sw x3, 0(x2) # store x3 (0xcaea59c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000caea59c4 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fnmadd.d f7, f19, f13, f20, dyn # perform operation
fnmadd.d f7, f19, f13, f20, rdn # perform operation
fnmadd.d f7, f19, f13, f20, rmm # perform operation
fnmadd.d f7, f19, f13, f20, rne # perform operation
fnmadd.d f7, f19, f13, f20, rtz # perform operation
fnmadd.d f7, f19, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f19, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x7ff7ffffffffffff)
li x6, 0x1c71616e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0xe6b6cdf5 # load x3 with 32 MSBs 0x00000000e6b6cdf5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6b6cdf5
sw x3, 0(x2) # store x3 (0xe6b6cdf5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000e6b6cdf5 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fnmadd.d f6, f16, f22, f19, dyn # perform operation
fnmadd.d f6, f16, f22, f19, rdn # perform operation
fnmadd.d f6, f16, f22, f19, rmm # perform operation
fnmadd.d f6, f16, f22, f19, rne # perform operation
fnmadd.d f6, f16, f22, f19, rtz # perform operation
fnmadd.d f6, f16, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f16, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f16, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f16, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f16, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f16, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0x5a392534a57711ad)
li x20, 0xda9c03bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0xe53259bc # load x3 with 32 MSBs 0x00000000e53259bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e53259bc
sw x3, 0(x2) # store x3 (0xe53259bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000e53259bc from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fnmadd.d f20, f31, f3, f10, dyn # perform operation
fnmadd.d f20, f31, f3, f10, rdn # perform operation
fnmadd.d f20, f31, f3, f10, rmm # perform operation
fnmadd.d f20, f31, f3, f10, rne # perform operation
fnmadd.d f20, f31, f3, f10, rtz # perform operation
fnmadd.d f20, f31, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f31, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f31, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ff7ffffffffffff fs3 = 0xa6e895993737426c)
li x10, 0x25e4d777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x8f4e40ae # load x3 with 32 MSBs 0x000000008f4e40ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f4e40ae
sw x3, 0(x2) # store x3 (0x8f4e40ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008f4e40ae from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fnmadd.d f10, f29, f16, f17, dyn # perform operation
fnmadd.d f10, f29, f16, f17, rdn # perform operation
fnmadd.d f10, f29, f16, f17, rmm # perform operation
fnmadd.d f10, f29, f16, f17, rne # perform operation
fnmadd.d f10, f29, f16, f17, rtz # perform operation
fnmadd.d f10, f29, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f29, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f29, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x0)
li x25, 0xa3c3e5dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x2bf5bf5d # load x3 with 32 MSBs 0x000000002bf5bf5d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bf5bf5d
sw x3, 0(x2) # store x3 (0x2bf5bf5d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002bf5bf5d from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fnmadd.d f25, f8, f17, f27, dyn # perform operation
fnmadd.d f25, f8, f17, f27, rdn # perform operation
fnmadd.d f25, f8, f17, f27, rmm # perform operation
fnmadd.d f25, f8, f17, f27, rne # perform operation
fnmadd.d f25, f8, f17, f27, rtz # perform operation
fnmadd.d f25, f8, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f8, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f8, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000000)
li x24, 0x62f7970b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x13eabd45 # load x3 with 32 MSBs 0x0000000013eabd45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013eabd45
sw x3, 0(x2) # store x3 (0x13eabd45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000013eabd45 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fnmadd.d f24, f28, f15, f4, dyn # perform operation
fnmadd.d f24, f28, f15, f4, rdn # perform operation
fnmadd.d f24, f28, f15, f4, rmm # perform operation
fnmadd.d f24, f28, f15, f4, rne # perform operation
fnmadd.d f24, f28, f15, f4, rtz # perform operation
fnmadd.d f24, f28, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f28, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f28, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff0000000000000)
li x1, 0x125224c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x42f76f51 # load x3 with 32 MSBs 0x0000000042f76f51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042f76f51
sw x3, 0(x2) # store x3 (0x42f76f51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000042f76f51 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fnmadd.d f1, f24, f6, f11, dyn # perform operation
fnmadd.d f1, f24, f6, f11, rdn # perform operation
fnmadd.d f1, f24, f6, f11, rmm # perform operation
fnmadd.d f1, f24, f6, f11, rne # perform operation
fnmadd.d f1, f24, f6, f11, rtz # perform operation
fnmadd.d f1, f24, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f24, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff0000000000000)
li x26, 0x160b73e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x4f16a96c # load x3 with 32 MSBs 0x000000004f16a96c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f16a96c
sw x3, 0(x2) # store x3 (0x4f16a96c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004f16a96c from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fnmadd.d f26, f14, f8, f31, dyn # perform operation
fnmadd.d f26, f14, f8, f31, rdn # perform operation
fnmadd.d f26, f14, f8, f31, rmm # perform operation
fnmadd.d f26, f14, f8, f31, rne # perform operation
fnmadd.d f26, f14, f8, f31, rtz # perform operation
fnmadd.d f26, f14, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f14, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f14, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x3ff8000000000000)
li x7, 0x41c0ce0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0xbae5c9d9 # load x3 with 32 MSBs 0x00000000bae5c9d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bae5c9d9
sw x3, 0(x2) # store x3 (0xbae5c9d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000bae5c9d9 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
fnmadd.d f7, f2, f6, f15, dyn # perform operation
fnmadd.d f7, f2, f6, f15, rdn # perform operation
fnmadd.d f7, f2, f6, f15, rmm # perform operation
fnmadd.d f7, f2, f6, f15, rne # perform operation
fnmadd.d f7, f2, f6, f15, rtz # perform operation
fnmadd.d f7, f2, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f2, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f2, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xbff8000000000000)
li x20, 0xd256577c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x9f161a52 # load x3 with 32 MSBs 0x000000009f161a52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f161a52
sw x3, 0(x2) # store x3 (0x9f161a52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009f161a52 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fnmadd.d f20, f15, f26, f27, dyn # perform operation
fnmadd.d f20, f15, f26, f27, rdn # perform operation
fnmadd.d f20, f15, f26, f27, rmm # perform operation
fnmadd.d f20, f15, f26, f27, rne # perform operation
fnmadd.d f20, f15, f26, f27, rtz # perform operation
fnmadd.d f20, f15, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f15, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f15, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x4000000000000000)
li x31, 0x0a76c2b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xb2fde298 # load x3 with 32 MSBs 0x00000000b2fde298
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2fde298
sw x3, 0(x2) # store x3 (0xb2fde298) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b2fde298 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fnmadd.d f31, f1, f25, f7, dyn # perform operation
fnmadd.d f31, f1, f25, f7, rdn # perform operation
fnmadd.d f31, f1, f25, f7, rmm # perform operation
fnmadd.d f31, f1, f25, f7, rne # perform operation
fnmadd.d f31, f1, f25, f7, rtz # perform operation
fnmadd.d f31, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f1, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xc000000000000000)
li x23, 0xa6d29e52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0xbf7c7d53 # load x3 with 32 MSBs 0x00000000bf7c7d53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf7c7d53
sw x3, 0(x2) # store x3 (0xbf7c7d53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bf7c7d53 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
fnmadd.d f23, f14, f21, f7, dyn # perform operation
fnmadd.d f23, f14, f21, f7, rdn # perform operation
fnmadd.d f23, f14, f21, f7, rmm # perform operation
fnmadd.d f23, f14, f21, f7, rne # perform operation
fnmadd.d f23, f14, f21, f7, rtz # perform operation
fnmadd.d f23, f14, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f14, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x10000000000000)
li x4, 0x45d83d18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xb60d5b9d # load x3 with 32 MSBs 0x00000000b60d5b9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b60d5b9d
sw x3, 0(x2) # store x3 (0xb60d5b9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b60d5b9d from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fnmadd.d f4, f16, f12, f17, dyn # perform operation
fnmadd.d f4, f16, f12, f17, rdn # perform operation
fnmadd.d f4, f16, f12, f17, rmm # perform operation
fnmadd.d f4, f16, f12, f17, rne # perform operation
fnmadd.d f4, f16, f12, f17, rtz # perform operation
fnmadd.d f4, f16, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f16, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f16, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8010000000000000)
li x28, 0xfcfc0328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x09a40acd # load x3 with 32 MSBs 0x0000000009a40acd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000009a40acd
sw x3, 0(x2) # store x3 (0x09a40acd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000009a40acd from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fnmadd.d f28, f8, f22, f6, dyn # perform operation
fnmadd.d f28, f8, f22, f6, rdn # perform operation
fnmadd.d f28, f8, f22, f6, rmm # perform operation
fnmadd.d f28, f8, f22, f6, rne # perform operation
fnmadd.d f28, f8, f22, f6, rtz # perform operation
fnmadd.d f28, f8, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f8, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f8, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fefffffffffffff)
li x13, 0x5416f8d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x83c493f0 # load x3 with 32 MSBs 0x0000000083c493f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083c493f0
sw x3, 0(x2) # store x3 (0x83c493f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000083c493f0 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fnmadd.d f13, f21, f15, f12, dyn # perform operation
fnmadd.d f13, f21, f15, f12, rdn # perform operation
fnmadd.d f13, f21, f15, f12, rmm # perform operation
fnmadd.d f13, f21, f15, f12, rne # perform operation
fnmadd.d f13, f21, f15, f12, rtz # perform operation
fnmadd.d f13, f21, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f21, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xffefffffffffffff)
li x4, 0xe1099499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x41f3e755 # load x3 with 32 MSBs 0x0000000041f3e755
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041f3e755
sw x3, 0(x2) # store x3 (0x41f3e755) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000041f3e755 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fnmadd.d f4, f28, f21, f11, dyn # perform operation
fnmadd.d f4, f28, f21, f11, rdn # perform operation
fnmadd.d f4, f28, f21, f11, rmm # perform operation
fnmadd.d f4, f28, f21, f11, rne # perform operation
fnmadd.d f4, f28, f21, f11, rtz # perform operation
fnmadd.d f4, f28, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f4, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f4, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f4, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f4, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f4, f28, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfffffffffffff)
li x20, 0xa0b71cd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x5331b5ed # load x3 with 32 MSBs 0x000000005331b5ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005331b5ed
sw x3, 0(x2) # store x3 (0x5331b5ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005331b5ed from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fnmadd.d f20, f4, f29, f22, dyn # perform operation
fnmadd.d f20, f4, f29, f22, rdn # perform operation
fnmadd.d f20, f4, f29, f22, rmm # perform operation
fnmadd.d f20, f4, f29, f22, rne # perform operation
fnmadd.d f20, f4, f29, f22, rtz # perform operation
fnmadd.d f20, f4, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f4, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f4, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x800fffffffffffff)
li x25, 0x59b25b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0xce24dbcb # load x3 with 32 MSBs 0x00000000ce24dbcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce24dbcb
sw x3, 0(x2) # store x3 (0xce24dbcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ce24dbcb from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fnmadd.d f25, f6, f22, f14, dyn # perform operation
fnmadd.d f25, f6, f22, f14, rdn # perform operation
fnmadd.d f25, f6, f22, f14, rmm # perform operation
fnmadd.d f25, f6, f22, f14, rne # perform operation
fnmadd.d f25, f6, f22, f14, rtz # perform operation
fnmadd.d f25, f6, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f25, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f25, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f25, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f25, f6, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f25, f6, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000)
li x20, 0x57b302fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0xa740686e # load x3 with 32 MSBs 0x00000000a740686e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a740686e
sw x3, 0(x2) # store x3 (0xa740686e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a740686e from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fnmadd.d f20, f4, f3, f23, dyn # perform operation
fnmadd.d f20, f4, f3, f23, rdn # perform operation
fnmadd.d f20, f4, f3, f23, rmm # perform operation
fnmadd.d f20, f4, f3, f23, rne # perform operation
fnmadd.d f20, f4, f3, f23, rtz # perform operation
fnmadd.d f20, f4, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f4, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f4, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8008000000000000)
li x28, 0x53c48876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
li x3, 0x3961037b # load x3 with 32 MSBs 0x000000003961037b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003961037b
sw x3, 0(x2) # store x3 (0x3961037b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003961037b from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fnmadd.d f28, f11, f4, f27, dyn # perform operation
fnmadd.d f28, f11, f4, f27, rdn # perform operation
fnmadd.d f28, f11, f4, f27, rmm # perform operation
fnmadd.d f28, f11, f4, f27, rne # perform operation
fnmadd.d f28, f11, f4, f27, rtz # perform operation
fnmadd.d f28, f11, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f11, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f11, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x1)
li x13, 0xb502e9fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x7b1ecadb # load x3 with 32 MSBs 0x000000007b1ecadb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b1ecadb
sw x3, 0(x2) # store x3 (0x7b1ecadb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000007b1ecadb from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fnmadd.d f13, f1, f9, f23, dyn # perform operation
fnmadd.d f13, f1, f9, f23, rdn # perform operation
fnmadd.d f13, f1, f9, f23, rmm # perform operation
fnmadd.d f13, f1, f9, f23, rne # perform operation
fnmadd.d f13, f1, f9, f23, rtz # perform operation
fnmadd.d f13, f1, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f13, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f13, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f13, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f13, f1, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f13, f1, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x8000000000000001)
li x31, 0x849b0aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x6b77febc # load x3 with 32 MSBs 0x000000006b77febc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b77febc
sw x3, 0(x2) # store x3 (0x6b77febc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006b77febc from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fnmadd.d f31, f20, f7, f22, dyn # perform operation
fnmadd.d f31, f20, f7, f22, rdn # perform operation
fnmadd.d f31, f20, f7, f22, rmm # perform operation
fnmadd.d f31, f20, f7, f22, rne # perform operation
fnmadd.d f31, f20, f7, f22, rtz # perform operation
fnmadd.d f31, f20, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f31, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f31, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f31, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f31, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f31, f20, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000000)
li x12, 0x68683b90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x12deb8a5 # load x3 with 32 MSBs 0x0000000012deb8a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012deb8a5
sw x3, 0(x2) # store x3 (0x12deb8a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000012deb8a5 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fnmadd.d f12, f13, f20, f4, dyn # perform operation
fnmadd.d f12, f13, f20, f4, rdn # perform operation
fnmadd.d f12, f13, f20, f4, rmm # perform operation
fnmadd.d f12, f13, f20, f4, rne # perform operation
fnmadd.d f12, f13, f20, f4, rtz # perform operation
fnmadd.d f12, f13, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xfff0000000000000)
li x23, 0x1fd04759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x2c215445 # load x3 with 32 MSBs 0x000000002c215445
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c215445
sw x3, 0(x2) # store x3 (0x2c215445) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002c215445 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
fnmadd.d f23, f20, f7, f22, dyn # perform operation
fnmadd.d f23, f20, f7, f22, rdn # perform operation
fnmadd.d f23, f20, f7, f22, rmm # perform operation
fnmadd.d f23, f20, f7, f22, rne # perform operation
fnmadd.d f23, f20, f7, f22, rtz # perform operation
fnmadd.d f23, f20, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f20, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff8000000000000)
li x26, 0xd9660db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
li x3, 0x1cbb1d90 # load x3 with 32 MSBs 0x000000001cbb1d90
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cbb1d90
sw x3, 0(x2) # store x3 (0x1cbb1d90) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001cbb1d90 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fnmadd.d f26, f2, f1, f16, dyn # perform operation
fnmadd.d f26, f2, f1, f16, rdn # perform operation
fnmadd.d f26, f2, f1, f16, rmm # perform operation
fnmadd.d f26, f2, f1, f16, rne # perform operation
fnmadd.d f26, f2, f1, f16, rtz # perform operation
fnmadd.d f26, f2, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f26, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f26, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f26, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f26, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f26, f2, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7fffffffffffffff)
li x8, 0x2e5ae88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0xc591021c # load x3 with 32 MSBs 0x00000000c591021c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c591021c
sw x3, 0(x2) # store x3 (0xc591021c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c591021c from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fnmadd.d f8, f24, f14, f19, dyn # perform operation
fnmadd.d f8, f24, f14, f19, rdn # perform operation
fnmadd.d f8, f24, f14, f19, rmm # perform operation
fnmadd.d f8, f24, f14, f19, rne # perform operation
fnmadd.d f8, f24, f14, f19, rtz # perform operation
fnmadd.d f8, f24, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f8, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f8, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f8, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f8, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f8, f24, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff0000000000001)
li x10, 0xa3ac4cad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0xb21ffa68 # load x3 with 32 MSBs 0x00000000b21ffa68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b21ffa68
sw x3, 0(x2) # store x3 (0xb21ffa68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b21ffa68 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fnmadd.d f10, f17, f21, f5, dyn # perform operation
fnmadd.d f10, f17, f21, f5, rdn # perform operation
fnmadd.d f10, f17, f21, f5, rmm # perform operation
fnmadd.d f10, f17, f21, f5, rne # perform operation
fnmadd.d f10, f17, f21, f5, rtz # perform operation
fnmadd.d f10, f17, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f17, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x7ff7ffffffffffff)
li x21, 0xb729cb25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x99820711 # load x3 with 32 MSBs 0x0000000099820711
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099820711
sw x3, 0(x2) # store x3 (0x99820711) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000099820711 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fnmadd.d f21, f4, f7, f5, dyn # perform operation
fnmadd.d f21, f4, f7, f5, rdn # perform operation
fnmadd.d f21, f4, f7, f5, rmm # perform operation
fnmadd.d f21, f4, f7, f5, rne # perform operation
fnmadd.d f21, f4, f7, f5, rtz # perform operation
fnmadd.d f21, f4, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f4, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f4, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f4, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f4, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f4, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0x5a392534a57711ad)
li x16, 0xd153a920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xd866557a # load x3 with 32 MSBs 0x00000000d866557a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d866557a
sw x3, 0(x2) # store x3 (0xd866557a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000d866557a from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fnmadd.d f16, f9, f23, f8, dyn # perform operation
fnmadd.d f16, f9, f23, f8, rdn # perform operation
fnmadd.d f16, f9, f23, f8, rmm # perform operation
fnmadd.d f16, f9, f23, f8, rne # perform operation
fnmadd.d f16, f9, f23, f8, rtz # perform operation
fnmadd.d f16, f9, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f9, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x5a392534a57711ad fs3 = 0xa6e895993737426c)
li x12, 0xba5b0b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x2bc7f48e # load x3 with 32 MSBs 0x000000002bc7f48e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bc7f48e
sw x3, 0(x2) # store x3 (0x2bc7f48e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002bc7f48e from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fnmadd.d f12, f13, f25, f1, dyn # perform operation
fnmadd.d f12, f13, f25, f1, rdn # perform operation
fnmadd.d f12, f13, f25, f1, rmm # perform operation
fnmadd.d f12, f13, f25, f1, rne # perform operation
fnmadd.d f12, f13, f25, f1, rtz # perform operation
fnmadd.d f12, f13, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f13, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x0)
li x28, 0x3f6a54b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0xb1102e86 # load x3 with 32 MSBs 0x00000000b1102e86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b1102e86
sw x3, 0(x2) # store x3 (0xb1102e86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b1102e86 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fnmadd.d f28, f6, f24, f11, dyn # perform operation
fnmadd.d f28, f6, f24, f11, rdn # perform operation
fnmadd.d f28, f6, f24, f11, rmm # perform operation
fnmadd.d f28, f6, f24, f11, rne # perform operation
fnmadd.d f28, f6, f24, f11, rtz # perform operation
fnmadd.d f28, f6, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f6, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000000)
li x20, 0xa16227bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x304d8fda # load x3 with 32 MSBs 0x00000000304d8fda
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000304d8fda
sw x3, 0(x2) # store x3 (0x304d8fda) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000304d8fda from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fnmadd.d f20, f22, f19, f30, dyn # perform operation
fnmadd.d f20, f22, f19, f30, rdn # perform operation
fnmadd.d f20, f22, f19, f30, rmm # perform operation
fnmadd.d f20, f22, f19, f30, rne # perform operation
fnmadd.d f20, f22, f19, f30, rtz # perform operation
fnmadd.d f20, f22, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f22, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f22, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f22, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f22, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f22, f19, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff0000000000000)
li x21, 0x8a7c8d25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x6311933f # load x3 with 32 MSBs 0x000000006311933f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006311933f
sw x3, 0(x2) # store x3 (0x6311933f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006311933f from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fnmadd.d f21, f29, f8, f16, dyn # perform operation
fnmadd.d f21, f29, f8, f16, rdn # perform operation
fnmadd.d f21, f29, f8, f16, rmm # perform operation
fnmadd.d f21, f29, f8, f16, rne # perform operation
fnmadd.d f21, f29, f8, f16, rtz # perform operation
fnmadd.d f21, f29, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f29, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f29, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff0000000000000)
li x12, 0x79e08013 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
li x3, 0x3881b239 # load x3 with 32 MSBs 0x000000003881b239
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003881b239
sw x3, 0(x2) # store x3 (0x3881b239) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003881b239 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fnmadd.d f12, f1, f4, f8, dyn # perform operation
fnmadd.d f12, f1, f4, f8, rdn # perform operation
fnmadd.d f12, f1, f4, f8, rmm # perform operation
fnmadd.d f12, f1, f4, f8, rne # perform operation
fnmadd.d f12, f1, f4, f8, rtz # perform operation
fnmadd.d f12, f1, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f12, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f12, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f12, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f12, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f12, f1, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x3ff8000000000000)
li x27, 0x45c5a0e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0xd4ee72bd # load x3 with 32 MSBs 0x00000000d4ee72bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4ee72bd
sw x3, 0(x2) # store x3 (0xd4ee72bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d4ee72bd from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fnmadd.d f27, f25, f9, f30, dyn # perform operation
fnmadd.d f27, f25, f9, f30, rdn # perform operation
fnmadd.d f27, f25, f9, f30, rmm # perform operation
fnmadd.d f27, f25, f9, f30, rne # perform operation
fnmadd.d f27, f25, f9, f30, rtz # perform operation
fnmadd.d f27, f25, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f27, f25, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f27, f25, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f27, f25, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f27, f25, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f27, f25, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xbff8000000000000)
li x7, 0xff3edfa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0xef829bcb # load x3 with 32 MSBs 0x00000000ef829bcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef829bcb
sw x3, 0(x2) # store x3 (0xef829bcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ef829bcb from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fnmadd.d f7, f14, f15, f12, dyn # perform operation
fnmadd.d f7, f14, f15, f12, rdn # perform operation
fnmadd.d f7, f14, f15, f12, rmm # perform operation
fnmadd.d f7, f14, f15, f12, rne # perform operation
fnmadd.d f7, f14, f15, f12, rtz # perform operation
fnmadd.d f7, f14, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f14, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x4000000000000000)
li x1, 0x966f310b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x22a00d68 # load x3 with 32 MSBs 0x0000000022a00d68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022a00d68
sw x3, 0(x2) # store x3 (0x22a00d68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000022a00d68 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fnmadd.d f1, f17, f12, f24, dyn # perform operation
fnmadd.d f1, f17, f12, f24, rdn # perform operation
fnmadd.d f1, f17, f12, f24, rmm # perform operation
fnmadd.d f1, f17, f12, f24, rne # perform operation
fnmadd.d f1, f17, f12, f24, rtz # perform operation
fnmadd.d f1, f17, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f1, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f1, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f1, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f1, f17, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f1, f17, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xc000000000000000)
li x21, 0x0db635ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x12f59d56 # load x3 with 32 MSBs 0x0000000012f59d56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012f59d56
sw x3, 0(x2) # store x3 (0x12f59d56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000012f59d56 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fnmadd.d f21, f5, f14, f23, dyn # perform operation
fnmadd.d f21, f5, f14, f23, rdn # perform operation
fnmadd.d f21, f5, f14, f23, rmm # perform operation
fnmadd.d f21, f5, f14, f23, rne # perform operation
fnmadd.d f21, f5, f14, f23, rtz # perform operation
fnmadd.d f21, f5, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f21, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f21, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f21, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f21, f5, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f21, f5, f14, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x10000000000000)
li x2, 0x86bb36d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
li x3, 0x8e6d2579 # load x3 with 32 MSBs 0x000000008e6d2579
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e6d2579
sw x3, 0(x2) # store x3 (0x8e6d2579) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008e6d2579 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fnmadd.d f2, f11, f19, f5, dyn # perform operation
fnmadd.d f2, f11, f19, f5, rdn # perform operation
fnmadd.d f2, f11, f19, f5, rmm # perform operation
fnmadd.d f2, f11, f19, f5, rne # perform operation
fnmadd.d f2, f11, f19, f5, rtz # perform operation
fnmadd.d f2, f11, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f2, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f2, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f2, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f2, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f2, f11, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8010000000000000)
li x3, 0xe45d237a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x9fcc2787 # load x3 with 32 MSBs 0x000000009fcc2787
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fcc2787
sw x3, 0(x2) # store x3 (0x9fcc2787) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009fcc2787 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
fnmadd.d f3, f23, f10, f1, dyn # perform operation
fnmadd.d f3, f23, f10, f1, rdn # perform operation
fnmadd.d f3, f23, f10, f1, rmm # perform operation
fnmadd.d f3, f23, f10, f1, rne # perform operation
fnmadd.d f3, f23, f10, f1, rtz # perform operation
fnmadd.d f3, f23, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f23, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f23, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f23, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f23, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f23, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fefffffffffffff)
li x3, 0x7b92f6a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x6f0abdcb # load x3 with 32 MSBs 0x000000006f0abdcb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f0abdcb
sw x3, 0(x2) # store x3 (0x6f0abdcb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006f0abdcb from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fnmadd.d f3, f15, f29, f11, dyn # perform operation
fnmadd.d f3, f15, f29, f11, rdn # perform operation
fnmadd.d f3, f15, f29, f11, rmm # perform operation
fnmadd.d f3, f15, f29, f11, rne # perform operation
fnmadd.d f3, f15, f29, f11, rtz # perform operation
fnmadd.d f3, f15, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f3, f15, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f3, f15, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f3, f15, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f3, f15, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f3, f15, f29, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xffefffffffffffff)
li x16, 0xe11ba593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xa5a5563c # load x3 with 32 MSBs 0x00000000a5a5563c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5a5563c
sw x3, 0(x2) # store x3 (0xa5a5563c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a5a5563c from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fnmadd.d f16, f15, f30, f29, dyn # perform operation
fnmadd.d f16, f15, f30, f29, rdn # perform operation
fnmadd.d f16, f15, f30, f29, rmm # perform operation
fnmadd.d f16, f15, f30, f29, rne # perform operation
fnmadd.d f16, f15, f30, f29, rtz # perform operation
fnmadd.d f16, f15, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f16, f15, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f16, f15, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f16, f15, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f16, f15, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f16, f15, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfffffffffffff)
li x22, 0x9be5ee98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0x07a8d6be # load x3 with 32 MSBs 0x0000000007a8d6be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007a8d6be
sw x3, 0(x2) # store x3 (0x07a8d6be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000007a8d6be from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fnmadd.d f22, f7, f12, f18, dyn # perform operation
fnmadd.d f22, f7, f12, f18, rdn # perform operation
fnmadd.d f22, f7, f12, f18, rmm # perform operation
fnmadd.d f22, f7, f12, f18, rne # perform operation
fnmadd.d f22, f7, f12, f18, rtz # perform operation
fnmadd.d f22, f7, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f22, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f22, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f22, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f22, f7, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f22, f7, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x800fffffffffffff)
li x18, 0x99964f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xaf547f97 # load x3 with 32 MSBs 0x00000000af547f97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af547f97
sw x3, 0(x2) # store x3 (0xaf547f97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000af547f97 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fnmadd.d f18, f3, f28, f10, dyn # perform operation
fnmadd.d f18, f3, f28, f10, rdn # perform operation
fnmadd.d f18, f3, f28, f10, rmm # perform operation
fnmadd.d f18, f3, f28, f10, rne # perform operation
fnmadd.d f18, f3, f28, f10, rtz # perform operation
fnmadd.d f18, f3, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f18, f3, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000)
li x10, 0xac7de164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
li x3, 0x23498ad8 # load x3 with 32 MSBs 0x0000000023498ad8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000023498ad8
sw x3, 0(x2) # store x3 (0x23498ad8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000023498ad8 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fnmadd.d f10, f4, f29, f27, dyn # perform operation
fnmadd.d f10, f4, f29, f27, rdn # perform operation
fnmadd.d f10, f4, f29, f27, rmm # perform operation
fnmadd.d f10, f4, f29, f27, rne # perform operation
fnmadd.d f10, f4, f29, f27, rtz # perform operation
fnmadd.d f10, f4, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f10, f4, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f10, f4, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f10, f4, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f10, f4, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f10, f4, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8008000000000000)
li x11, 0x710a9da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0x2ce75ee8 # load x3 with 32 MSBs 0x000000002ce75ee8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ce75ee8
sw x3, 0(x2) # store x3 (0x2ce75ee8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002ce75ee8 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fnmadd.d f11, f21, f29, f27, dyn # perform operation
fnmadd.d f11, f21, f29, f27, rdn # perform operation
fnmadd.d f11, f21, f29, f27, rmm # perform operation
fnmadd.d f11, f21, f29, f27, rne # perform operation
fnmadd.d f11, f21, f29, f27, rtz # perform operation
fnmadd.d f11, f21, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f11, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f11, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f11, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f11, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f11, f21, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x1)
li x28, 0xd597107e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x20ef364b # load x3 with 32 MSBs 0x0000000020ef364b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020ef364b
sw x3, 0(x2) # store x3 (0x20ef364b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000020ef364b from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fnmadd.d f28, f14, f7, f31, dyn # perform operation
fnmadd.d f28, f14, f7, f31, rdn # perform operation
fnmadd.d f28, f14, f7, f31, rmm # perform operation
fnmadd.d f28, f14, f7, f31, rne # perform operation
fnmadd.d f28, f14, f7, f31, rtz # perform operation
fnmadd.d f28, f14, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f28, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f28, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f28, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f28, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f28, f14, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x8000000000000001)
li x7, 0x5d2228cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xc1a9b5c2 # load x3 with 32 MSBs 0x00000000c1a9b5c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1a9b5c2
sw x3, 0(x2) # store x3 (0xc1a9b5c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c1a9b5c2 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fnmadd.d f7, f21, f29, f16, dyn # perform operation
fnmadd.d f7, f21, f29, f16, rdn # perform operation
fnmadd.d f7, f21, f29, f16, rmm # perform operation
fnmadd.d f7, f21, f29, f16, rne # perform operation
fnmadd.d f7, f21, f29, f16, rtz # perform operation
fnmadd.d f7, f21, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f7, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f7, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f7, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f7, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f7, f21, f29, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000000)
li x20, 0xb2ce2b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0x778e196b # load x3 with 32 MSBs 0x00000000778e196b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000778e196b
sw x3, 0(x2) # store x3 (0x778e196b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000778e196b from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fnmadd.d f20, f26, f14, f9, dyn # perform operation
fnmadd.d f20, f26, f14, f9, rdn # perform operation
fnmadd.d f20, f26, f14, f9, rmm # perform operation
fnmadd.d f20, f26, f14, f9, rne # perform operation
fnmadd.d f20, f26, f14, f9, rtz # perform operation
fnmadd.d f20, f26, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f20, f26, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f20, f26, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f20, f26, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f20, f26, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f20, f26, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xfff0000000000000)
li x30, 0x77ef22ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x72a7beff # load x3 with 32 MSBs 0x0000000072a7beff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000072a7beff
sw x3, 0(x2) # store x3 (0x72a7beff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000072a7beff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fnmadd.d f30, f19, f2, f7, dyn # perform operation
fnmadd.d f30, f19, f2, f7, rdn # perform operation
fnmadd.d f30, f19, f2, f7, rmm # perform operation
fnmadd.d f30, f19, f2, f7, rne # perform operation
fnmadd.d f30, f19, f2, f7, rtz # perform operation
fnmadd.d f30, f19, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f19, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff8000000000000)
li x6, 0x87f9ce42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xee57bc6e # load x3 with 32 MSBs 0x00000000ee57bc6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee57bc6e
sw x3, 0(x2) # store x3 (0xee57bc6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ee57bc6e from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fnmadd.d f6, f15, f24, f19, dyn # perform operation
fnmadd.d f6, f15, f24, f19, rdn # perform operation
fnmadd.d f6, f15, f24, f19, rmm # perform operation
fnmadd.d f6, f15, f24, f19, rne # perform operation
fnmadd.d f6, f15, f24, f19, rtz # perform operation
fnmadd.d f6, f15, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f6, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f6, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f6, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f6, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f6, f15, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7fffffffffffffff)
li x30, 0x3de2e2ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xed87b634 # load x3 with 32 MSBs 0x00000000ed87b634
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed87b634
sw x3, 0(x2) # store x3 (0xed87b634) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ed87b634 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fnmadd.d f30, f21, f23, f12, dyn # perform operation
fnmadd.d f30, f21, f23, f12, rdn # perform operation
fnmadd.d f30, f21, f23, f12, rmm # perform operation
fnmadd.d f30, f21, f23, f12, rne # perform operation
fnmadd.d f30, f21, f23, f12, rtz # perform operation
fnmadd.d f30, f21, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f30, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f30, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f30, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f30, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f30, f21, f23, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff0000000000001)
li x14, 0xbf847884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x283ba8af # load x3 with 32 MSBs 0x00000000283ba8af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000283ba8af
sw x3, 0(x2) # store x3 (0x283ba8af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000283ba8af from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fnmadd.d f14, f27, f12, f21, dyn # perform operation
fnmadd.d f14, f27, f12, f21, rdn # perform operation
fnmadd.d f14, f27, f12, f21, rmm # perform operation
fnmadd.d f14, f27, f12, f21, rne # perform operation
fnmadd.d f14, f27, f12, f21, rtz # perform operation
fnmadd.d f14, f27, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f14, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f14, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f14, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f14, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f14, f27, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x7ff7ffffffffffff)
li x24, 0x3d7401af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x0156cf06 # load x3 with 32 MSBs 0x000000000156cf06
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000156cf06
sw x3, 0(x2) # store x3 (0x0156cf06) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000156cf06 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fnmadd.d f24, f25, f27, f11, dyn # perform operation
fnmadd.d f24, f25, f27, f11, rdn # perform operation
fnmadd.d f24, f25, f27, f11, rmm # perform operation
fnmadd.d f24, f25, f27, f11, rne # perform operation
fnmadd.d f24, f25, f27, f11, rtz # perform operation
fnmadd.d f24, f25, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f24, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f24, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f24, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f24, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f24, f25, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0x5a392534a57711ad)
li x23, 0x0abb0c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x8bd09891 # load x3 with 32 MSBs 0x000000008bd09891
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bd09891
sw x3, 0(x2) # store x3 (0x8bd09891) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008bd09891 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fnmadd.d f23, f12, f29, f10, dyn # perform operation
fnmadd.d f23, f12, f29, f10, rdn # perform operation
fnmadd.d f23, f12, f29, f10, rmm # perform operation
fnmadd.d f23, f12, f29, f10, rne # perform operation
fnmadd.d f23, f12, f29, f10, rtz # perform operation
fnmadd.d f23, f12, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f23, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f23, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f23, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f23, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f23, f12, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xa6e895993737426c fs3 = 0xa6e895993737426c)
li x29, 0xe1a1833e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
li x3, 0xc8b87f3c # load x3 with 32 MSBs 0x00000000c8b87f3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8b87f3c
sw x3, 0(x2) # store x3 (0xc8b87f3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c8b87f3c from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fnmadd.d f29, f3, f30, f5, dyn # perform operation
fnmadd.d f29, f3, f30, f5, rdn # perform operation
fnmadd.d f29, f3, f30, f5, rmm # perform operation
fnmadd.d f29, f3, f30, f5, rne # perform operation
fnmadd.d f29, f3, f30, f5, rtz # perform operation
fnmadd.d f29, f3, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.d f29, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.d f29, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.d f29, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.d f29, f3, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.d f29, f3, f30, f5 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xec452cca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31fe5431 # load x3 with 32 MSBs 0x0000000031fe5431
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031fe5431
sw x3, 0(x2) # store x3 (0x31fe5431) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000031fe5431 from memory into f30
li x3, 0xaef0e434 # load x3 with 32 MSBs 0x00000000aef0e434
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aef0e434
sw x3, 0(x2) # store x3 (0xaef0e434) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000aef0e434 from memory into f26
li x3, 0xb73549fe # load x3 with 32 MSBs 0x00000000b73549fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b73549fe
sw x3, 0(x2) # store x3 (0xb73549fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b73549fe from memory into f3
fnmadd.d f0, f30, f26, f3 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xe7cd5452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2120140 # load x3 with 32 MSBs 0x00000000b2120140
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2120140
sw x3, 0(x2) # store x3 (0xb2120140) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b2120140 from memory into f10
li x3, 0xf6c76743 # load x3 with 32 MSBs 0x00000000f6c76743
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6c76743
sw x3, 0(x2) # store x3 (0xf6c76743) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f6c76743 from memory into f4
li x3, 0x8f4802b7 # load x3 with 32 MSBs 0x000000008f4802b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f4802b7
sw x3, 0(x2) # store x3 (0x8f4802b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008f4802b7 from memory into f16
fnmadd.d f1, f10, f4, f16 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xbb4c97f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d5aeba8 # load x3 with 32 MSBs 0x000000006d5aeba8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d5aeba8
sw x3, 0(x2) # store x3 (0x6d5aeba8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000006d5aeba8 from memory into f23
li x3, 0x87d2243c # load x3 with 32 MSBs 0x0000000087d2243c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087d2243c
sw x3, 0(x2) # store x3 (0x87d2243c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000087d2243c from memory into f9
li x3, 0x218db413 # load x3 with 32 MSBs 0x00000000218db413
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000218db413
sw x3, 0(x2) # store x3 (0x218db413) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000218db413 from memory into f16
fnmadd.d f2, f23, f9, f16 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x4725c46f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd83522da # load x3 with 32 MSBs 0x00000000d83522da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d83522da
sw x3, 0(x2) # store x3 (0xd83522da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d83522da from memory into f6
li x3, 0x1219c8d6 # load x3 with 32 MSBs 0x000000001219c8d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001219c8d6
sw x3, 0(x2) # store x3 (0x1219c8d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001219c8d6 from memory into f22
li x3, 0xb8b90160 # load x3 with 32 MSBs 0x00000000b8b90160
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b8b90160
sw x3, 0(x2) # store x3 (0xb8b90160) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b8b90160 from memory into f15
fnmadd.d f3, f6, f22, f15 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x7bd3711c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6fe9a892 # load x3 with 32 MSBs 0x000000006fe9a892
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fe9a892
sw x3, 0(x2) # store x3 (0x6fe9a892) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006fe9a892 from memory into f7
li x3, 0x151e528c # load x3 with 32 MSBs 0x00000000151e528c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000151e528c
sw x3, 0(x2) # store x3 (0x151e528c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000151e528c from memory into f22
li x3, 0x38339fe8 # load x3 with 32 MSBs 0x0000000038339fe8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038339fe8
sw x3, 0(x2) # store x3 (0x38339fe8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000038339fe8 from memory into f18
fnmadd.d f4, f7, f22, f18 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xd3a8defa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3477cc1e # load x3 with 32 MSBs 0x000000003477cc1e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003477cc1e
sw x3, 0(x2) # store x3 (0x3477cc1e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000003477cc1e from memory into f24
li x3, 0xbfe05d11 # load x3 with 32 MSBs 0x00000000bfe05d11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfe05d11
sw x3, 0(x2) # store x3 (0xbfe05d11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000bfe05d11 from memory into f19
li x3, 0x760a8bc9 # load x3 with 32 MSBs 0x00000000760a8bc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000760a8bc9
sw x3, 0(x2) # store x3 (0x760a8bc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000760a8bc9 from memory into f23
fnmadd.d f5, f24, f19, f23 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x796c3bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d8cb9a1 # load x3 with 32 MSBs 0x000000009d8cb9a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d8cb9a1
sw x3, 0(x2) # store x3 (0x9d8cb9a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009d8cb9a1 from memory into f13
li x3, 0x714fff3f # load x3 with 32 MSBs 0x00000000714fff3f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000714fff3f
sw x3, 0(x2) # store x3 (0x714fff3f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000714fff3f from memory into f5
li x3, 0x7118f3ef # load x3 with 32 MSBs 0x000000007118f3ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007118f3ef
sw x3, 0(x2) # store x3 (0x7118f3ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000007118f3ef from memory into f18
fnmadd.d f6, f13, f5, f18 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x99c1d856 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa103a6e # load x3 with 32 MSBs 0x00000000fa103a6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa103a6e
sw x3, 0(x2) # store x3 (0xfa103a6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000fa103a6e from memory into f15
li x3, 0xff9c2e5a # load x3 with 32 MSBs 0x00000000ff9c2e5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff9c2e5a
sw x3, 0(x2) # store x3 (0xff9c2e5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ff9c2e5a from memory into f1
li x3, 0x29e5c4f5 # load x3 with 32 MSBs 0x0000000029e5c4f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029e5c4f5
sw x3, 0(x2) # store x3 (0x29e5c4f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000029e5c4f5 from memory into f23
fnmadd.d f7, f15, f1, f23 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xc607b81a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29cf515c # load x3 with 32 MSBs 0x0000000029cf515c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029cf515c
sw x3, 0(x2) # store x3 (0x29cf515c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000029cf515c from memory into f28
li x3, 0x1dcfe4a5 # load x3 with 32 MSBs 0x000000001dcfe4a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001dcfe4a5
sw x3, 0(x2) # store x3 (0x1dcfe4a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000001dcfe4a5 from memory into f23
li x3, 0x5d69cb46 # load x3 with 32 MSBs 0x000000005d69cb46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d69cb46
sw x3, 0(x2) # store x3 (0x5d69cb46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005d69cb46 from memory into f25
fnmadd.d f8, f28, f23, f25 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x475afd22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcbca859d # load x3 with 32 MSBs 0x00000000cbca859d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbca859d
sw x3, 0(x2) # store x3 (0xcbca859d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cbca859d from memory into f31
li x3, 0xa8ddb995 # load x3 with 32 MSBs 0x00000000a8ddb995
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8ddb995
sw x3, 0(x2) # store x3 (0xa8ddb995) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a8ddb995 from memory into f27
li x3, 0x0c3683a0 # load x3 with 32 MSBs 0x000000000c3683a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c3683a0
sw x3, 0(x2) # store x3 (0x0c3683a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000c3683a0 from memory into f25
fnmadd.d f9, f31, f27, f25 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x6182eef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd1e41e32 # load x3 with 32 MSBs 0x00000000d1e41e32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1e41e32
sw x3, 0(x2) # store x3 (0xd1e41e32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d1e41e32 from memory into f27
li x3, 0x6e2f8f01 # load x3 with 32 MSBs 0x000000006e2f8f01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e2f8f01
sw x3, 0(x2) # store x3 (0x6e2f8f01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006e2f8f01 from memory into f7
li x3, 0xb06688f0 # load x3 with 32 MSBs 0x00000000b06688f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b06688f0
sw x3, 0(x2) # store x3 (0xb06688f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000b06688f0 from memory into f9
fnmadd.d f10, f27, f7, f9 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xa7395a4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9a6930a # load x3 with 32 MSBs 0x00000000f9a6930a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f9a6930a
sw x3, 0(x2) # store x3 (0xf9a6930a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f9a6930a from memory into f28
li x3, 0x9e3336ee # load x3 with 32 MSBs 0x000000009e3336ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e3336ee
sw x3, 0(x2) # store x3 (0x9e3336ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009e3336ee from memory into f7
li x3, 0x8eb826ff # load x3 with 32 MSBs 0x000000008eb826ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008eb826ff
sw x3, 0(x2) # store x3 (0x8eb826ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008eb826ff from memory into f2
fnmadd.d f11, f28, f7, f2 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x17c2e84c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa266aff6 # load x3 with 32 MSBs 0x00000000a266aff6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a266aff6
sw x3, 0(x2) # store x3 (0xa266aff6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a266aff6 from memory into f13
li x3, 0xe23746c7 # load x3 with 32 MSBs 0x00000000e23746c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e23746c7
sw x3, 0(x2) # store x3 (0xe23746c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e23746c7 from memory into f9
li x3, 0x84cf2df9 # load x3 with 32 MSBs 0x0000000084cf2df9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084cf2df9
sw x3, 0(x2) # store x3 (0x84cf2df9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000084cf2df9 from memory into f15
fnmadd.d f12, f13, f9, f15 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x14320683 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ae0581b # load x3 with 32 MSBs 0x000000001ae0581b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ae0581b
sw x3, 0(x2) # store x3 (0x1ae0581b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001ae0581b from memory into f30
li x3, 0x40ea5ff0 # load x3 with 32 MSBs 0x0000000040ea5ff0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040ea5ff0
sw x3, 0(x2) # store x3 (0x40ea5ff0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000040ea5ff0 from memory into f3
li x3, 0x9ca05d15 # load x3 with 32 MSBs 0x000000009ca05d15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ca05d15
sw x3, 0(x2) # store x3 (0x9ca05d15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009ca05d15 from memory into f1
fnmadd.d f13, f30, f3, f1 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x3d6a9574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe95ca67d # load x3 with 32 MSBs 0x00000000e95ca67d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e95ca67d
sw x3, 0(x2) # store x3 (0xe95ca67d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e95ca67d from memory into f18
li x3, 0x88dcb058 # load x3 with 32 MSBs 0x0000000088dcb058
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000088dcb058
sw x3, 0(x2) # store x3 (0x88dcb058) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000088dcb058 from memory into f21
li x3, 0xd1a0f178 # load x3 with 32 MSBs 0x00000000d1a0f178
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1a0f178
sw x3, 0(x2) # store x3 (0xd1a0f178) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d1a0f178 from memory into f9
fnmadd.d f14, f18, f21, f9 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x04037293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a1ff222 # load x3 with 32 MSBs 0x000000000a1ff222
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a1ff222
sw x3, 0(x2) # store x3 (0x0a1ff222) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000a1ff222 from memory into f29
li x3, 0xe51f2e10 # load x3 with 32 MSBs 0x00000000e51f2e10
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e51f2e10
sw x3, 0(x2) # store x3 (0xe51f2e10) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e51f2e10 from memory into f28
li x3, 0xf127aded # load x3 with 32 MSBs 0x00000000f127aded
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f127aded
sw x3, 0(x2) # store x3 (0xf127aded) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000f127aded from memory into f24
fnmadd.d f15, f29, f28, f24 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0xc157f16e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06cf2d0c # load x3 with 32 MSBs 0x0000000006cf2d0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006cf2d0c
sw x3, 0(x2) # store x3 (0x06cf2d0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000006cf2d0c from memory into f31
li x3, 0x9908f5c5 # load x3 with 32 MSBs 0x000000009908f5c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009908f5c5
sw x3, 0(x2) # store x3 (0x9908f5c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009908f5c5 from memory into f23
li x3, 0x2ddac90e # load x3 with 32 MSBs 0x000000002ddac90e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ddac90e
sw x3, 0(x2) # store x3 (0x2ddac90e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002ddac90e from memory into f9
fnmadd.d f16, f31, f23, f9 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xadb844a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa380560b # load x3 with 32 MSBs 0x00000000a380560b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a380560b
sw x3, 0(x2) # store x3 (0xa380560b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a380560b from memory into f26
li x3, 0xdab27e84 # load x3 with 32 MSBs 0x00000000dab27e84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dab27e84
sw x3, 0(x2) # store x3 (0xdab27e84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000dab27e84 from memory into f7
li x3, 0x4aa826f8 # load x3 with 32 MSBs 0x000000004aa826f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004aa826f8
sw x3, 0(x2) # store x3 (0x4aa826f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004aa826f8 from memory into f14
fnmadd.d f17, f26, f7, f14 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0xcab9827b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76765a3e # load x3 with 32 MSBs 0x0000000076765a3e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076765a3e
sw x3, 0(x2) # store x3 (0x76765a3e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000076765a3e from memory into f24
li x3, 0x9320d509 # load x3 with 32 MSBs 0x000000009320d509
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009320d509
sw x3, 0(x2) # store x3 (0x9320d509) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009320d509 from memory into f6
li x3, 0x5c24b213 # load x3 with 32 MSBs 0x000000005c24b213
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c24b213
sw x3, 0(x2) # store x3 (0x5c24b213) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005c24b213 from memory into f17
fnmadd.d f18, f24, f6, f17 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x7991ad6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42791a75 # load x3 with 32 MSBs 0x0000000042791a75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042791a75
sw x3, 0(x2) # store x3 (0x42791a75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000042791a75 from memory into f26
li x3, 0x807368db # load x3 with 32 MSBs 0x00000000807368db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000807368db
sw x3, 0(x2) # store x3 (0x807368db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000807368db from memory into f24
li x3, 0x30e9d5a9 # load x3 with 32 MSBs 0x0000000030e9d5a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000030e9d5a9
sw x3, 0(x2) # store x3 (0x30e9d5a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000030e9d5a9 from memory into f21
fnmadd.d f19, f26, f24, f21 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x93ad5d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a0f858a # load x3 with 32 MSBs 0x000000007a0f858a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a0f858a
sw x3, 0(x2) # store x3 (0x7a0f858a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007a0f858a from memory into f25
li x3, 0x2a6cf8cd # load x3 with 32 MSBs 0x000000002a6cf8cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a6cf8cd
sw x3, 0(x2) # store x3 (0x2a6cf8cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002a6cf8cd from memory into f4
li x3, 0x14e008f0 # load x3 with 32 MSBs 0x0000000014e008f0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014e008f0
sw x3, 0(x2) # store x3 (0x14e008f0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000014e008f0 from memory into f22
fnmadd.d f20, f25, f4, f22 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x6fc2b0a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2cb28f2f # load x3 with 32 MSBs 0x000000002cb28f2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cb28f2f
sw x3, 0(x2) # store x3 (0x2cb28f2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002cb28f2f from memory into f7
li x3, 0xdea8fa6f # load x3 with 32 MSBs 0x00000000dea8fa6f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dea8fa6f
sw x3, 0(x2) # store x3 (0xdea8fa6f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000dea8fa6f from memory into f6
li x3, 0x10075cf9 # load x3 with 32 MSBs 0x0000000010075cf9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010075cf9
sw x3, 0(x2) # store x3 (0x10075cf9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000010075cf9 from memory into f15
fnmadd.d f21, f7, f6, f15 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x2332f78c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5ffd7ef # load x3 with 32 MSBs 0x00000000f5ffd7ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5ffd7ef
sw x3, 0(x2) # store x3 (0xf5ffd7ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f5ffd7ef from memory into f2
li x3, 0x49b07a32 # load x3 with 32 MSBs 0x0000000049b07a32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049b07a32
sw x3, 0(x2) # store x3 (0x49b07a32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000049b07a32 from memory into f22
li x3, 0x184068c6 # load x3 with 32 MSBs 0x00000000184068c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000184068c6
sw x3, 0(x2) # store x3 (0x184068c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000184068c6 from memory into f5
fnmadd.d f22, f2, f22, f5 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x11d0f9b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7838b08 # load x3 with 32 MSBs 0x00000000b7838b08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7838b08
sw x3, 0(x2) # store x3 (0xb7838b08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b7838b08 from memory into f5
li x3, 0x8734544f # load x3 with 32 MSBs 0x000000008734544f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008734544f
sw x3, 0(x2) # store x3 (0x8734544f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000008734544f from memory into f18
li x3, 0xe29be5e6 # load x3 with 32 MSBs 0x00000000e29be5e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e29be5e6
sw x3, 0(x2) # store x3 (0xe29be5e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e29be5e6 from memory into f10
fnmadd.d f23, f5, f18, f10 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x704ad94c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4af87581 # load x3 with 32 MSBs 0x000000004af87581
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004af87581
sw x3, 0(x2) # store x3 (0x4af87581) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004af87581 from memory into f16
li x3, 0xbcf6ea9e # load x3 with 32 MSBs 0x00000000bcf6ea9e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcf6ea9e
sw x3, 0(x2) # store x3 (0xbcf6ea9e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000bcf6ea9e from memory into f17
li x3, 0x3731f4c3 # load x3 with 32 MSBs 0x000000003731f4c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003731f4c3
sw x3, 0(x2) # store x3 (0x3731f4c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003731f4c3 from memory into f5
fnmadd.d f24, f16, f17, f5 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xcf86a777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4a90ea7 # load x3 with 32 MSBs 0x00000000c4a90ea7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4a90ea7
sw x3, 0(x2) # store x3 (0xc4a90ea7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000c4a90ea7 from memory into f26
li x3, 0x11b14f0d # load x3 with 32 MSBs 0x0000000011b14f0d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011b14f0d
sw x3, 0(x2) # store x3 (0x11b14f0d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000011b14f0d from memory into f6
li x3, 0xa32a71f2 # load x3 with 32 MSBs 0x00000000a32a71f2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a32a71f2
sw x3, 0(x2) # store x3 (0xa32a71f2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a32a71f2 from memory into f7
fnmadd.d f25, f26, f6, f7 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x6c8b2781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2582f18 # load x3 with 32 MSBs 0x00000000d2582f18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2582f18
sw x3, 0(x2) # store x3 (0xd2582f18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d2582f18 from memory into f24
li x3, 0x4fa97ce8 # load x3 with 32 MSBs 0x000000004fa97ce8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fa97ce8
sw x3, 0(x2) # store x3 (0x4fa97ce8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004fa97ce8 from memory into f18
li x3, 0x0c9f5c1c # load x3 with 32 MSBs 0x000000000c9f5c1c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c9f5c1c
sw x3, 0(x2) # store x3 (0x0c9f5c1c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000c9f5c1c from memory into f14
fnmadd.d f26, f24, f18, f14 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x4f7b96de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x244f4527 # load x3 with 32 MSBs 0x00000000244f4527
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000244f4527
sw x3, 0(x2) # store x3 (0x244f4527) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000244f4527 from memory into f30
li x3, 0x4915befa # load x3 with 32 MSBs 0x000000004915befa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004915befa
sw x3, 0(x2) # store x3 (0x4915befa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004915befa from memory into f29
li x3, 0x44f28e25 # load x3 with 32 MSBs 0x0000000044f28e25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044f28e25
sw x3, 0(x2) # store x3 (0x44f28e25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000044f28e25 from memory into f23
fnmadd.d f27, f30, f29, f23 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xf292e4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93606cb6 # load x3 with 32 MSBs 0x0000000093606cb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000093606cb6
sw x3, 0(x2) # store x3 (0x93606cb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000093606cb6 from memory into f8
li x3, 0x18c9eda8 # load x3 with 32 MSBs 0x0000000018c9eda8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018c9eda8
sw x3, 0(x2) # store x3 (0x18c9eda8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000018c9eda8 from memory into f21
li x3, 0x105fffc1 # load x3 with 32 MSBs 0x00000000105fffc1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000105fffc1
sw x3, 0(x2) # store x3 (0x105fffc1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000105fffc1 from memory into f6
fnmadd.d f28, f8, f21, f6 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x55c8b78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe893decc # load x3 with 32 MSBs 0x00000000e893decc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e893decc
sw x3, 0(x2) # store x3 (0xe893decc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e893decc from memory into f10
li x3, 0xcf2dfe1f # load x3 with 32 MSBs 0x00000000cf2dfe1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf2dfe1f
sw x3, 0(x2) # store x3 (0xcf2dfe1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cf2dfe1f from memory into f29
li x3, 0x3ae9e9af # load x3 with 32 MSBs 0x000000003ae9e9af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ae9e9af
sw x3, 0(x2) # store x3 (0x3ae9e9af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000003ae9e9af from memory into f2
fnmadd.d f29, f10, f29, f2 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xb62cad1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e563078 # load x3 with 32 MSBs 0x000000004e563078
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e563078
sw x3, 0(x2) # store x3 (0x4e563078) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004e563078 from memory into f17
li x3, 0x9af619b5 # load x3 with 32 MSBs 0x000000009af619b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009af619b5
sw x3, 0(x2) # store x3 (0x9af619b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009af619b5 from memory into f4
li x3, 0x8bf629d5 # load x3 with 32 MSBs 0x000000008bf629d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008bf629d5
sw x3, 0(x2) # store x3 (0x8bf629d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000008bf629d5 from memory into f10
fnmadd.d f30, f17, f4, f10 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xd7426171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x826530a1 # load x3 with 32 MSBs 0x00000000826530a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000826530a1
sw x3, 0(x2) # store x3 (0x826530a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000826530a1 from memory into f6
li x3, 0xd34e0d83 # load x3 with 32 MSBs 0x00000000d34e0d83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d34e0d83
sw x3, 0(x2) # store x3 (0xd34e0d83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000d34e0d83 from memory into f24
li x3, 0x55ed48ba # load x3 with 32 MSBs 0x0000000055ed48ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055ed48ba
sw x3, 0(x2) # store x3 (0x55ed48ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000055ed48ba from memory into f20
fnmadd.d f31, f6, f24, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x28, 0x782a60ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x975f2baf # load x3 with 32 MSBs 0x00000000975f2baf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000975f2baf
sw x3, 0(x2) # store x3 (0x975f2baf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000975f2baf from memory into f0
li x3, 0x9e21171f # load x3 with 32 MSBs 0x000000009e21171f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e21171f
sw x3, 0(x2) # store x3 (0x9e21171f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009e21171f from memory into f6
li x3, 0xc6ddbe68 # load x3 with 32 MSBs 0x00000000c6ddbe68
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6ddbe68
sw x3, 0(x2) # store x3 (0xc6ddbe68) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c6ddbe68 from memory into f9
fnmadd.d f28, f0, f6, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x29, 0xcf39d07b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7db6d4b # load x3 with 32 MSBs 0x00000000b7db6d4b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7db6d4b
sw x3, 0(x2) # store x3 (0xb7db6d4b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b7db6d4b from memory into f1
li x3, 0x50fa4c39 # load x3 with 32 MSBs 0x0000000050fa4c39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050fa4c39
sw x3, 0(x2) # store x3 (0x50fa4c39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000050fa4c39 from memory into f31
li x3, 0xaa36c896 # load x3 with 32 MSBs 0x00000000aa36c896
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa36c896
sw x3, 0(x2) # store x3 (0xaa36c896) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000aa36c896 from memory into f26
fnmadd.d f29, f1, f31, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x12, 0x68d389f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x655acc1f # load x3 with 32 MSBs 0x00000000655acc1f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000655acc1f
sw x3, 0(x2) # store x3 (0x655acc1f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000655acc1f from memory into f2
li x3, 0xf7be7cd7 # load x3 with 32 MSBs 0x00000000f7be7cd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7be7cd7
sw x3, 0(x2) # store x3 (0xf7be7cd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f7be7cd7 from memory into f6
li x3, 0x3cadcfc0 # load x3 with 32 MSBs 0x000000003cadcfc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cadcfc0
sw x3, 0(x2) # store x3 (0x3cadcfc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000003cadcfc0 from memory into f5
fnmadd.d f12, f2, f6, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x25, 0x12ec5ac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c3d2b27 # load x3 with 32 MSBs 0x000000008c3d2b27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c3d2b27
sw x3, 0(x2) # store x3 (0x8c3d2b27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008c3d2b27 from memory into f3
li x3, 0x0d6b03fe # load x3 with 32 MSBs 0x000000000d6b03fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000d6b03fe
sw x3, 0(x2) # store x3 (0x0d6b03fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000000d6b03fe from memory into f13
li x3, 0xcbffdf70 # load x3 with 32 MSBs 0x00000000cbffdf70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbffdf70
sw x3, 0(x2) # store x3 (0xcbffdf70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000cbffdf70 from memory into f11
fnmadd.d f25, f3, f13, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x20, 0x324a23f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x237e2a70 # load x3 with 32 MSBs 0x00000000237e2a70
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000237e2a70
sw x3, 0(x2) # store x3 (0x237e2a70) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000237e2a70 from memory into f4
li x3, 0x3e495108 # load x3 with 32 MSBs 0x000000003e495108
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e495108
sw x3, 0(x2) # store x3 (0x3e495108) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003e495108 from memory into f28
li x3, 0x600d71b7 # load x3 with 32 MSBs 0x00000000600d71b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000600d71b7
sw x3, 0(x2) # store x3 (0x600d71b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000600d71b7 from memory into f8
fnmadd.d f20, f4, f28, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x11, 0x6cd869f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58052098 # load x3 with 32 MSBs 0x0000000058052098
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058052098
sw x3, 0(x2) # store x3 (0x58052098) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000058052098 from memory into f5
li x3, 0xd5dc7816 # load x3 with 32 MSBs 0x00000000d5dc7816
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5dc7816
sw x3, 0(x2) # store x3 (0xd5dc7816) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d5dc7816 from memory into f31
li x3, 0xbb6f7d8e # load x3 with 32 MSBs 0x00000000bb6f7d8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb6f7d8e
sw x3, 0(x2) # store x3 (0xbb6f7d8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000bb6f7d8e from memory into f10
fnmadd.d f11, f5, f31, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x6, 0x7f3283ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b66f8b8 # load x3 with 32 MSBs 0x000000009b66f8b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b66f8b8
sw x3, 0(x2) # store x3 (0x9b66f8b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000009b66f8b8 from memory into f6
li x3, 0x814d8c38 # load x3 with 32 MSBs 0x00000000814d8c38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000814d8c38
sw x3, 0(x2) # store x3 (0x814d8c38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000814d8c38 from memory into f4
li x3, 0xe5025eee # load x3 with 32 MSBs 0x00000000e5025eee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5025eee
sw x3, 0(x2) # store x3 (0xe5025eee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e5025eee from memory into f27
fnmadd.d f6, f6, f4, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x16, 0x54f69b8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9220d657 # load x3 with 32 MSBs 0x000000009220d657
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009220d657
sw x3, 0(x2) # store x3 (0x9220d657) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009220d657 from memory into f7
li x3, 0x75f5e680 # load x3 with 32 MSBs 0x0000000075f5e680
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075f5e680
sw x3, 0(x2) # store x3 (0x75f5e680) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000075f5e680 from memory into f29
li x3, 0x957b248f # load x3 with 32 MSBs 0x00000000957b248f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000957b248f
sw x3, 0(x2) # store x3 (0x957b248f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000957b248f from memory into f26
fnmadd.d f16, f7, f29, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x16, 0x22ea024a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x159be13c # load x3 with 32 MSBs 0x00000000159be13c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000159be13c
sw x3, 0(x2) # store x3 (0x159be13c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000159be13c from memory into f8
li x3, 0x257176e9 # load x3 with 32 MSBs 0x00000000257176e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000257176e9
sw x3, 0(x2) # store x3 (0x257176e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000257176e9 from memory into f7
li x3, 0xb284d73d # load x3 with 32 MSBs 0x00000000b284d73d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b284d73d
sw x3, 0(x2) # store x3 (0xb284d73d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b284d73d from memory into f18
fnmadd.d f16, f8, f7, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x4, 0xb1de8d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6767092c # load x3 with 32 MSBs 0x000000006767092c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006767092c
sw x3, 0(x2) # store x3 (0x6767092c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006767092c from memory into f9
li x3, 0x8ca72d24 # load x3 with 32 MSBs 0x000000008ca72d24
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ca72d24
sw x3, 0(x2) # store x3 (0x8ca72d24) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008ca72d24 from memory into f19
li x3, 0xcdf132bb # load x3 with 32 MSBs 0x00000000cdf132bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdf132bb
sw x3, 0(x2) # store x3 (0xcdf132bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000cdf132bb from memory into f7
fnmadd.d f4, f9, f19, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x8, 0xf18fb26c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff8522e4 # load x3 with 32 MSBs 0x00000000ff8522e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff8522e4
sw x3, 0(x2) # store x3 (0xff8522e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ff8522e4 from memory into f10
li x3, 0x45ef0798 # load x3 with 32 MSBs 0x0000000045ef0798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045ef0798
sw x3, 0(x2) # store x3 (0x45ef0798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000045ef0798 from memory into f9
li x3, 0x42f09e78 # load x3 with 32 MSBs 0x0000000042f09e78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042f09e78
sw x3, 0(x2) # store x3 (0x42f09e78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000042f09e78 from memory into f31
fnmadd.d f8, f10, f9, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x15, 0x3d97554c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7eb7179a # load x3 with 32 MSBs 0x000000007eb7179a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007eb7179a
sw x3, 0(x2) # store x3 (0x7eb7179a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007eb7179a from memory into f11
li x3, 0x45e059c3 # load x3 with 32 MSBs 0x0000000045e059c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045e059c3
sw x3, 0(x2) # store x3 (0x45e059c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000045e059c3 from memory into f15
li x3, 0xa165d2e4 # load x3 with 32 MSBs 0x00000000a165d2e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a165d2e4
sw x3, 0(x2) # store x3 (0xa165d2e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a165d2e4 from memory into f4
fnmadd.d f15, f11, f15, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x14, 0xa46d5261 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfe6609fe # load x3 with 32 MSBs 0x00000000fe6609fe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe6609fe
sw x3, 0(x2) # store x3 (0xfe6609fe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fe6609fe from memory into f12
li x3, 0x2f73b458 # load x3 with 32 MSBs 0x000000002f73b458
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f73b458
sw x3, 0(x2) # store x3 (0x2f73b458) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002f73b458 from memory into f7
li x3, 0xd6687715 # load x3 with 32 MSBs 0x00000000d6687715
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6687715
sw x3, 0(x2) # store x3 (0xd6687715) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d6687715 from memory into f13
fnmadd.d f14, f12, f7, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x30, 0xe62c7864 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x186bd6b1 # load x3 with 32 MSBs 0x00000000186bd6b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000186bd6b1
sw x3, 0(x2) # store x3 (0x186bd6b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000186bd6b1 from memory into f13
li x3, 0x41072bd8 # load x3 with 32 MSBs 0x0000000041072bd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041072bd8
sw x3, 0(x2) # store x3 (0x41072bd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000041072bd8 from memory into f17
li x3, 0x121aae20 # load x3 with 32 MSBs 0x00000000121aae20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000121aae20
sw x3, 0(x2) # store x3 (0x121aae20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000121aae20 from memory into f6
fnmadd.d f30, f13, f17, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x29, 0x5ce2954f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03e4c922 # load x3 with 32 MSBs 0x0000000003e4c922
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003e4c922
sw x3, 0(x2) # store x3 (0x03e4c922) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000003e4c922 from memory into f14
li x3, 0xeb36950f # load x3 with 32 MSBs 0x00000000eb36950f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb36950f
sw x3, 0(x2) # store x3 (0xeb36950f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000eb36950f from memory into f26
li x3, 0x6e70b984 # load x3 with 32 MSBs 0x000000006e70b984
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e70b984
sw x3, 0(x2) # store x3 (0x6e70b984) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000006e70b984 from memory into f30
fnmadd.d f29, f14, f26, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x13, 0x99e543d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x397275ba # load x3 with 32 MSBs 0x00000000397275ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000397275ba
sw x3, 0(x2) # store x3 (0x397275ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000397275ba from memory into f15
li x3, 0xe7c8bd9a # load x3 with 32 MSBs 0x00000000e7c8bd9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7c8bd9a
sw x3, 0(x2) # store x3 (0xe7c8bd9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e7c8bd9a from memory into f8
li x3, 0x942e2e20 # load x3 with 32 MSBs 0x00000000942e2e20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000942e2e20
sw x3, 0(x2) # store x3 (0x942e2e20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000942e2e20 from memory into f7
fnmadd.d f13, f15, f8, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x27, 0x7643df61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a0061f5 # load x3 with 32 MSBs 0x000000007a0061f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a0061f5
sw x3, 0(x2) # store x3 (0x7a0061f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000007a0061f5 from memory into f16
li x3, 0x34f9759b # load x3 with 32 MSBs 0x0000000034f9759b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034f9759b
sw x3, 0(x2) # store x3 (0x34f9759b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000034f9759b from memory into f21
li x3, 0x40d8db1d # load x3 with 32 MSBs 0x0000000040d8db1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040d8db1d
sw x3, 0(x2) # store x3 (0x40d8db1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000040d8db1d from memory into f23
fnmadd.d f27, f16, f21, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x22, 0xbe194aae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad989509 # load x3 with 32 MSBs 0x00000000ad989509
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad989509
sw x3, 0(x2) # store x3 (0xad989509) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ad989509 from memory into f17
li x3, 0xe6fdcbf4 # load x3 with 32 MSBs 0x00000000e6fdcbf4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6fdcbf4
sw x3, 0(x2) # store x3 (0xe6fdcbf4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e6fdcbf4 from memory into f8
li x3, 0x761a4548 # load x3 with 32 MSBs 0x00000000761a4548
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000761a4548
sw x3, 0(x2) # store x3 (0x761a4548) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000761a4548 from memory into f3
fnmadd.d f22, f17, f8, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x8, 0x3c7400c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf03b1ae7 # load x3 with 32 MSBs 0x00000000f03b1ae7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f03b1ae7
sw x3, 0(x2) # store x3 (0xf03b1ae7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f03b1ae7 from memory into f18
li x3, 0x32462588 # load x3 with 32 MSBs 0x0000000032462588
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032462588
sw x3, 0(x2) # store x3 (0x32462588) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000032462588 from memory into f28
li x3, 0xcf938d65 # load x3 with 32 MSBs 0x00000000cf938d65
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf938d65
sw x3, 0(x2) # store x3 (0xcf938d65) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000cf938d65 from memory into f27
fnmadd.d f8, f18, f28, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x20, 0xbc8c4f4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaed2c211 # load x3 with 32 MSBs 0x00000000aed2c211
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aed2c211
sw x3, 0(x2) # store x3 (0xaed2c211) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000aed2c211 from memory into f19
li x3, 0xf5ee67a5 # load x3 with 32 MSBs 0x00000000f5ee67a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5ee67a5
sw x3, 0(x2) # store x3 (0xf5ee67a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f5ee67a5 from memory into f30
li x3, 0x61f49e15 # load x3 with 32 MSBs 0x0000000061f49e15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061f49e15
sw x3, 0(x2) # store x3 (0x61f49e15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000061f49e15 from memory into f1
fnmadd.d f20, f19, f30, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x7, 0x02cd88a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4c157b5 # load x3 with 32 MSBs 0x00000000c4c157b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4c157b5
sw x3, 0(x2) # store x3 (0xc4c157b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c4c157b5 from memory into f20
li x3, 0xf82b61d3 # load x3 with 32 MSBs 0x00000000f82b61d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f82b61d3
sw x3, 0(x2) # store x3 (0xf82b61d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f82b61d3 from memory into f18
li x3, 0x18bfa07c # load x3 with 32 MSBs 0x0000000018bfa07c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018bfa07c
sw x3, 0(x2) # store x3 (0x18bfa07c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000018bfa07c from memory into f27
fnmadd.d f7, f20, f18, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x27, 0x17b9526b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaca01bb1 # load x3 with 32 MSBs 0x00000000aca01bb1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aca01bb1
sw x3, 0(x2) # store x3 (0xaca01bb1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000aca01bb1 from memory into f21
li x3, 0x52de0d29 # load x3 with 32 MSBs 0x0000000052de0d29
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052de0d29
sw x3, 0(x2) # store x3 (0x52de0d29) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000052de0d29 from memory into f10
li x3, 0x24818ead # load x3 with 32 MSBs 0x0000000024818ead
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024818ead
sw x3, 0(x2) # store x3 (0x24818ead) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000024818ead from memory into f29
fnmadd.d f27, f21, f10, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x6, 0xad44ab65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb454eb5a # load x3 with 32 MSBs 0x00000000b454eb5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b454eb5a
sw x3, 0(x2) # store x3 (0xb454eb5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b454eb5a from memory into f22
li x3, 0x3321a2f7 # load x3 with 32 MSBs 0x000000003321a2f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003321a2f7
sw x3, 0(x2) # store x3 (0x3321a2f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003321a2f7 from memory into f3
li x3, 0xefa190ae # load x3 with 32 MSBs 0x00000000efa190ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efa190ae
sw x3, 0(x2) # store x3 (0xefa190ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000efa190ae from memory into f18
fnmadd.d f6, f22, f3, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x25, 0x122a29a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x943e75fb # load x3 with 32 MSBs 0x00000000943e75fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000943e75fb
sw x3, 0(x2) # store x3 (0x943e75fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000943e75fb from memory into f23
li x3, 0x0ff71a95 # load x3 with 32 MSBs 0x000000000ff71a95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ff71a95
sw x3, 0(x2) # store x3 (0x0ff71a95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000000ff71a95 from memory into f8
li x3, 0x7d32f3a2 # load x3 with 32 MSBs 0x000000007d32f3a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d32f3a2
sw x3, 0(x2) # store x3 (0x7d32f3a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000007d32f3a2 from memory into f24
fnmadd.d f25, f23, f8, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x14, 0xa2373742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4e96ab1 # load x3 with 32 MSBs 0x00000000c4e96ab1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4e96ab1
sw x3, 0(x2) # store x3 (0xc4e96ab1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c4e96ab1 from memory into f24
li x3, 0x851f3eee # load x3 with 32 MSBs 0x00000000851f3eee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000851f3eee
sw x3, 0(x2) # store x3 (0x851f3eee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000851f3eee from memory into f12
li x3, 0xe99f591b # load x3 with 32 MSBs 0x00000000e99f591b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e99f591b
sw x3, 0(x2) # store x3 (0xe99f591b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000e99f591b from memory into f15
fnmadd.d f14, f24, f12, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x13, 0x88add104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7adfd68e # load x3 with 32 MSBs 0x000000007adfd68e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007adfd68e
sw x3, 0(x2) # store x3 (0x7adfd68e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007adfd68e from memory into f25
li x3, 0xfad0b59e # load x3 with 32 MSBs 0x00000000fad0b59e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fad0b59e
sw x3, 0(x2) # store x3 (0xfad0b59e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000fad0b59e from memory into f26
li x3, 0x7c9b6209 # load x3 with 32 MSBs 0x000000007c9b6209
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007c9b6209
sw x3, 0(x2) # store x3 (0x7c9b6209) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007c9b6209 from memory into f23
fnmadd.d f13, f25, f26, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x5, 0x20b78450 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb55406e # load x3 with 32 MSBs 0x00000000eb55406e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb55406e
sw x3, 0(x2) # store x3 (0xeb55406e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000eb55406e from memory into f26
li x3, 0xfe843022 # load x3 with 32 MSBs 0x00000000fe843022
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe843022
sw x3, 0(x2) # store x3 (0xfe843022) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000fe843022 from memory into f8
li x3, 0x1bf407c2 # load x3 with 32 MSBs 0x000000001bf407c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bf407c2
sw x3, 0(x2) # store x3 (0x1bf407c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000001bf407c2 from memory into f24
fnmadd.d f5, f26, f8, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x15, 0xa665e986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70a07101 # load x3 with 32 MSBs 0x0000000070a07101
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070a07101
sw x3, 0(x2) # store x3 (0x70a07101) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000070a07101 from memory into f27
li x3, 0xb05db724 # load x3 with 32 MSBs 0x00000000b05db724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b05db724
sw x3, 0(x2) # store x3 (0xb05db724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b05db724 from memory into f6
li x3, 0x9e14ba37 # load x3 with 32 MSBs 0x000000009e14ba37
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e14ba37
sw x3, 0(x2) # store x3 (0x9e14ba37) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009e14ba37 from memory into f16
fnmadd.d f15, f27, f6, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x29, 0x5dafbc8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb14a5761 # load x3 with 32 MSBs 0x00000000b14a5761
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b14a5761
sw x3, 0(x2) # store x3 (0xb14a5761) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b14a5761 from memory into f28
li x3, 0x2d832ee0 # load x3 with 32 MSBs 0x000000002d832ee0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d832ee0
sw x3, 0(x2) # store x3 (0x2d832ee0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002d832ee0 from memory into f30
li x3, 0x9cce2439 # load x3 with 32 MSBs 0x000000009cce2439
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cce2439
sw x3, 0(x2) # store x3 (0x9cce2439) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009cce2439 from memory into f3
fnmadd.d f29, f28, f30, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x28, 0x151c0d52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd28ff708 # load x3 with 32 MSBs 0x00000000d28ff708
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d28ff708
sw x3, 0(x2) # store x3 (0xd28ff708) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d28ff708 from memory into f29
li x3, 0xae815476 # load x3 with 32 MSBs 0x00000000ae815476
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ae815476
sw x3, 0(x2) # store x3 (0xae815476) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000ae815476 from memory into f13
li x3, 0xd6187147 # load x3 with 32 MSBs 0x00000000d6187147
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d6187147
sw x3, 0(x2) # store x3 (0xd6187147) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d6187147 from memory into f31
fnmadd.d f28, f29, f13, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x22, 0xef7c23d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb60cbef4 # load x3 with 32 MSBs 0x00000000b60cbef4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b60cbef4
sw x3, 0(x2) # store x3 (0xb60cbef4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000b60cbef4 from memory into f30
li x3, 0xa002f6e7 # load x3 with 32 MSBs 0x00000000a002f6e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a002f6e7
sw x3, 0(x2) # store x3 (0xa002f6e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a002f6e7 from memory into f14
li x3, 0xa6b1ba15 # load x3 with 32 MSBs 0x00000000a6b1ba15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6b1ba15
sw x3, 0(x2) # store x3 (0xa6b1ba15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a6b1ba15 from memory into f18
fnmadd.d f22, f30, f14, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x9, 0x0f9e4f11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ed7195a # load x3 with 32 MSBs 0x000000007ed7195a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ed7195a
sw x3, 0(x2) # store x3 (0x7ed7195a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007ed7195a from memory into f31
li x3, 0x07ce4ba4 # load x3 with 32 MSBs 0x0000000007ce4ba4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007ce4ba4
sw x3, 0(x2) # store x3 (0x07ce4ba4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000007ce4ba4 from memory into f4
li x3, 0x5d7393bb # load x3 with 32 MSBs 0x000000005d7393bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d7393bb
sw x3, 0(x2) # store x3 (0x5d7393bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005d7393bb from memory into f13
fnmadd.d f9, f31, f4, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x3, 0x2a238255 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd892e5a9 # load x3 with 32 MSBs 0x00000000d892e5a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d892e5a9
sw x3, 0(x2) # store x3 (0xd892e5a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d892e5a9 from memory into f8
li x3, 0x5c7944e8 # load x3 with 32 MSBs 0x000000005c7944e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c7944e8
sw x3, 0(x2) # store x3 (0x5c7944e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000005c7944e8 from memory into f0
li x3, 0xd66a00a7 # load x3 with 32 MSBs 0x00000000d66a00a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d66a00a7
sw x3, 0(x2) # store x3 (0xd66a00a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d66a00a7 from memory into f22
fnmadd.d f3, f8, f0, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x17, 0xc5abd8f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x79522126 # load x3 with 32 MSBs 0x0000000079522126
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079522126
sw x3, 0(x2) # store x3 (0x79522126) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000079522126 from memory into f5
li x3, 0x7ada3491 # load x3 with 32 MSBs 0x000000007ada3491
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ada3491
sw x3, 0(x2) # store x3 (0x7ada3491) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007ada3491 from memory into f1
li x3, 0x8b97280d # load x3 with 32 MSBs 0x000000008b97280d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b97280d
sw x3, 0(x2) # store x3 (0x8b97280d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008b97280d from memory into f25
fnmadd.d f17, f5, f1, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x22, 0xb43b610a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc05e49a4 # load x3 with 32 MSBs 0x00000000c05e49a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c05e49a4
sw x3, 0(x2) # store x3 (0xc05e49a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c05e49a4 from memory into f29
li x3, 0x35e87d8d # load x3 with 32 MSBs 0x0000000035e87d8d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035e87d8d
sw x3, 0(x2) # store x3 (0x35e87d8d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000035e87d8d from memory into f2
li x3, 0xbf9ecd05 # load x3 with 32 MSBs 0x00000000bf9ecd05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf9ecd05
sw x3, 0(x2) # store x3 (0xbf9ecd05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000bf9ecd05 from memory into f14
fnmadd.d f22, f29, f2, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x6, 0xf9a4d0e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4cff45fc # load x3 with 32 MSBs 0x000000004cff45fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004cff45fc
sw x3, 0(x2) # store x3 (0x4cff45fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004cff45fc from memory into f22
li x3, 0x32cf6a86 # load x3 with 32 MSBs 0x0000000032cf6a86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032cf6a86
sw x3, 0(x2) # store x3 (0x32cf6a86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000032cf6a86 from memory into f3
li x3, 0xff86e726 # load x3 with 32 MSBs 0x00000000ff86e726
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff86e726
sw x3, 0(x2) # store x3 (0xff86e726) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ff86e726 from memory into f14
fnmadd.d f6, f22, f3, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x12, 0x98039bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x45c63d6e # load x3 with 32 MSBs 0x0000000045c63d6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045c63d6e
sw x3, 0(x2) # store x3 (0x45c63d6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000045c63d6e from memory into f13
li x3, 0x9edfbe73 # load x3 with 32 MSBs 0x000000009edfbe73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009edfbe73
sw x3, 0(x2) # store x3 (0x9edfbe73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009edfbe73 from memory into f4
li x3, 0x6f73f4be # load x3 with 32 MSBs 0x000000006f73f4be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f73f4be
sw x3, 0(x2) # store x3 (0x6f73f4be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000006f73f4be from memory into f6
fnmadd.d f12, f13, f4, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x12, 0xbadd9410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a6d7ad0 # load x3 with 32 MSBs 0x000000003a6d7ad0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a6d7ad0
sw x3, 0(x2) # store x3 (0x3a6d7ad0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003a6d7ad0 from memory into f21
li x3, 0x08968f75 # load x3 with 32 MSBs 0x0000000008968f75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008968f75
sw x3, 0(x2) # store x3 (0x08968f75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000008968f75 from memory into f5
li x3, 0x9359a323 # load x3 with 32 MSBs 0x000000009359a323
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009359a323
sw x3, 0(x2) # store x3 (0x9359a323) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009359a323 from memory into f13
fnmadd.d f12, f21, f5, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x1, 0x7249ee25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56ce2eea # load x3 with 32 MSBs 0x0000000056ce2eea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056ce2eea
sw x3, 0(x2) # store x3 (0x56ce2eea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000056ce2eea from memory into f24
li x3, 0x4565be26 # load x3 with 32 MSBs 0x000000004565be26
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004565be26
sw x3, 0(x2) # store x3 (0x4565be26) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004565be26 from memory into f6
li x3, 0xaa8f4d18 # load x3 with 32 MSBs 0x00000000aa8f4d18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa8f4d18
sw x3, 0(x2) # store x3 (0xaa8f4d18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000aa8f4d18 from memory into f11
fnmadd.d f1, f24, f6, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x30, 0x57d0b5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3045f95 # load x3 with 32 MSBs 0x00000000f3045f95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f3045f95
sw x3, 0(x2) # store x3 (0xf3045f95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f3045f95 from memory into f25
li x3, 0x610d9e11 # load x3 with 32 MSBs 0x00000000610d9e11
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000610d9e11
sw x3, 0(x2) # store x3 (0x610d9e11) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000610d9e11 from memory into f7
li x3, 0x6b80f4c9 # load x3 with 32 MSBs 0x000000006b80f4c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b80f4c9
sw x3, 0(x2) # store x3 (0x6b80f4c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006b80f4c9 from memory into f9
fnmadd.d f30, f25, f7, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x19, 0x84dfda59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x990fcbcd # load x3 with 32 MSBs 0x00000000990fcbcd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000990fcbcd
sw x3, 0(x2) # store x3 (0x990fcbcd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000990fcbcd from memory into f11
li x3, 0xbbd88f96 # load x3 with 32 MSBs 0x00000000bbd88f96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbd88f96
sw x3, 0(x2) # store x3 (0xbbd88f96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000bbd88f96 from memory into f8
li x3, 0x0603ca54 # load x3 with 32 MSBs 0x000000000603ca54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000603ca54
sw x3, 0(x2) # store x3 (0x0603ca54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000603ca54 from memory into f30
fnmadd.d f19, f11, f8, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x6, 0x62c36ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1eda4981 # load x3 with 32 MSBs 0x000000001eda4981
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001eda4981
sw x3, 0(x2) # store x3 (0x1eda4981) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000001eda4981 from memory into f23
li x3, 0xe4835dc8 # load x3 with 32 MSBs 0x00000000e4835dc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e4835dc8
sw x3, 0(x2) # store x3 (0xe4835dc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000e4835dc8 from memory into f9
li x3, 0x1f7ecee0 # load x3 with 32 MSBs 0x000000001f7ecee0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f7ecee0
sw x3, 0(x2) # store x3 (0x1f7ecee0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001f7ecee0 from memory into f31
fnmadd.d f6, f23, f9, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x31, 0x5e107dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97641173 # load x3 with 32 MSBs 0x0000000097641173
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097641173
sw x3, 0(x2) # store x3 (0x97641173) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000097641173 from memory into f19
li x3, 0x1b6707bb # load x3 with 32 MSBs 0x000000001b6707bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b6707bb
sw x3, 0(x2) # store x3 (0x1b6707bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001b6707bb from memory into f10
li x3, 0x6462cd35 # load x3 with 32 MSBs 0x000000006462cd35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006462cd35
sw x3, 0(x2) # store x3 (0x6462cd35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006462cd35 from memory into f16
fnmadd.d f31, f19, f10, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x10, 0x5dc973a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80082553 # load x3 with 32 MSBs 0x0000000080082553
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000080082553
sw x3, 0(x2) # store x3 (0x80082553) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000080082553 from memory into f24
li x3, 0xdf386eb3 # load x3 with 32 MSBs 0x00000000df386eb3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df386eb3
sw x3, 0(x2) # store x3 (0xdf386eb3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000df386eb3 from memory into f11
li x3, 0x6e9c66b9 # load x3 with 32 MSBs 0x000000006e9c66b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e9c66b9
sw x3, 0(x2) # store x3 (0x6e9c66b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006e9c66b9 from memory into f8
fnmadd.d f10, f24, f11, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x28, 0x4fa4197d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd9e3425 # load x3 with 32 MSBs 0x00000000bd9e3425
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd9e3425
sw x3, 0(x2) # store x3 (0xbd9e3425) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000bd9e3425 from memory into f28
li x3, 0x7ee91cfa # load x3 with 32 MSBs 0x000000007ee91cfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ee91cfa
sw x3, 0(x2) # store x3 (0x7ee91cfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007ee91cfa from memory into f12
li x3, 0x57f40985 # load x3 with 32 MSBs 0x0000000057f40985
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057f40985
sw x3, 0(x2) # store x3 (0x57f40985) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000057f40985 from memory into f30
fnmadd.d f28, f28, f12, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x1, 0x6da85c8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62c26242 # load x3 with 32 MSBs 0x0000000062c26242
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062c26242
sw x3, 0(x2) # store x3 (0x62c26242) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000062c26242 from memory into f29
li x3, 0xde826147 # load x3 with 32 MSBs 0x00000000de826147
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de826147
sw x3, 0(x2) # store x3 (0xde826147) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000de826147 from memory into f13
li x3, 0xaeefb9c8 # load x3 with 32 MSBs 0x00000000aeefb9c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeefb9c8
sw x3, 0(x2) # store x3 (0xaeefb9c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000aeefb9c8 from memory into f23
fnmadd.d f1, f29, f13, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x7, 0xe4e7ad2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6afd2388 # load x3 with 32 MSBs 0x000000006afd2388
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006afd2388
sw x3, 0(x2) # store x3 (0x6afd2388) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000006afd2388 from memory into f21
li x3, 0x38d846be # load x3 with 32 MSBs 0x0000000038d846be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038d846be
sw x3, 0(x2) # store x3 (0x38d846be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000038d846be from memory into f14
li x3, 0x98c612fa # load x3 with 32 MSBs 0x0000000098c612fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098c612fa
sw x3, 0(x2) # store x3 (0x98c612fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000098c612fa from memory into f3
fnmadd.d f7, f21, f14, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x2, 0xa468cd04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x554aface # load x3 with 32 MSBs 0x00000000554aface
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000554aface
sw x3, 0(x2) # store x3 (0x554aface) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000554aface from memory into f8
li x3, 0x79171e56 # load x3 with 32 MSBs 0x0000000079171e56
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000079171e56
sw x3, 0(x2) # store x3 (0x79171e56) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000079171e56 from memory into f15
li x3, 0xd84a984b # load x3 with 32 MSBs 0x00000000d84a984b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d84a984b
sw x3, 0(x2) # store x3 (0xd84a984b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d84a984b from memory into f21
fnmadd.d f2, f8, f15, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x8, 0x5d812db9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c37620e # load x3 with 32 MSBs 0x000000002c37620e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c37620e
sw x3, 0(x2) # store x3 (0x2c37620e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002c37620e from memory into f11
li x3, 0xe621052e # load x3 with 32 MSBs 0x00000000e621052e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e621052e
sw x3, 0(x2) # store x3 (0xe621052e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e621052e from memory into f16
li x3, 0x35fe683e # load x3 with 32 MSBs 0x0000000035fe683e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035fe683e
sw x3, 0(x2) # store x3 (0x35fe683e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000035fe683e from memory into f14
fnmadd.d f8, f11, f16, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x25, 0xdffe3270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c587615 # load x3 with 32 MSBs 0x000000003c587615
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c587615
sw x3, 0(x2) # store x3 (0x3c587615) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003c587615 from memory into f4
li x3, 0xd3053d7b # load x3 with 32 MSBs 0x00000000d3053d7b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d3053d7b
sw x3, 0(x2) # store x3 (0xd3053d7b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d3053d7b from memory into f17
li x3, 0xaa8d97f3 # load x3 with 32 MSBs 0x00000000aa8d97f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa8d97f3
sw x3, 0(x2) # store x3 (0xaa8d97f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000aa8d97f3 from memory into f9
fnmadd.d f25, f4, f17, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x20, 0x434a4436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2e35ab50 # load x3 with 32 MSBs 0x000000002e35ab50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e35ab50
sw x3, 0(x2) # store x3 (0x2e35ab50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002e35ab50 from memory into f21
li x3, 0xf03a6765 # load x3 with 32 MSBs 0x00000000f03a6765
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f03a6765
sw x3, 0(x2) # store x3 (0xf03a6765) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f03a6765 from memory into f18
li x3, 0x754cb1eb # load x3 with 32 MSBs 0x00000000754cb1eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000754cb1eb
sw x3, 0(x2) # store x3 (0x754cb1eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000754cb1eb from memory into f1
fnmadd.d f20, f21, f18, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x27, 0x22015d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x458dfa7d # load x3 with 32 MSBs 0x00000000458dfa7d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000458dfa7d
sw x3, 0(x2) # store x3 (0x458dfa7d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000458dfa7d from memory into f26
li x3, 0xe238b277 # load x3 with 32 MSBs 0x00000000e238b277
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e238b277
sw x3, 0(x2) # store x3 (0xe238b277) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e238b277 from memory into f19
li x3, 0x859c143e # load x3 with 32 MSBs 0x00000000859c143e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000859c143e
sw x3, 0(x2) # store x3 (0x859c143e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000859c143e from memory into f17
fnmadd.d f27, f26, f19, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x16, 0x4a689f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1d57974 # load x3 with 32 MSBs 0x00000000e1d57974
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e1d57974
sw x3, 0(x2) # store x3 (0xe1d57974) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e1d57974 from memory into f17
li x3, 0x1ba05189 # load x3 with 32 MSBs 0x000000001ba05189
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ba05189
sw x3, 0(x2) # store x3 (0x1ba05189) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001ba05189 from memory into f20
li x3, 0x807f04f9 # load x3 with 32 MSBs 0x00000000807f04f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000807f04f9
sw x3, 0(x2) # store x3 (0x807f04f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000807f04f9 from memory into f10
fnmadd.d f16, f17, f20, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x22, 0xd5bdffd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x33a759f9 # load x3 with 32 MSBs 0x0000000033a759f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000033a759f9
sw x3, 0(x2) # store x3 (0x33a759f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000033a759f9 from memory into f1
li x3, 0x20693764 # load x3 with 32 MSBs 0x0000000020693764
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020693764
sw x3, 0(x2) # store x3 (0x20693764) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000020693764 from memory into f21
li x3, 0x47501c7f # load x3 with 32 MSBs 0x0000000047501c7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047501c7f
sw x3, 0(x2) # store x3 (0x47501c7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000047501c7f from memory into f25
fnmadd.d f22, f1, f21, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x9, 0xc3bcd486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeaf8b6cc # load x3 with 32 MSBs 0x00000000eaf8b6cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eaf8b6cc
sw x3, 0(x2) # store x3 (0xeaf8b6cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000eaf8b6cc from memory into f28
li x3, 0x192fe7dc # load x3 with 32 MSBs 0x00000000192fe7dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000192fe7dc
sw x3, 0(x2) # store x3 (0x192fe7dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000192fe7dc from memory into f22
li x3, 0x0fb9d2c7 # load x3 with 32 MSBs 0x000000000fb9d2c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000fb9d2c7
sw x3, 0(x2) # store x3 (0x0fb9d2c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000000fb9d2c7 from memory into f7
fnmadd.d f9, f28, f22, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x20, 0xf77de648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x923e6569 # load x3 with 32 MSBs 0x00000000923e6569
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000923e6569
sw x3, 0(x2) # store x3 (0x923e6569) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000923e6569 from memory into f13
li x3, 0xf115b4fd # load x3 with 32 MSBs 0x00000000f115b4fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f115b4fd
sw x3, 0(x2) # store x3 (0xf115b4fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f115b4fd from memory into f23
li x3, 0x2400fdb0 # load x3 with 32 MSBs 0x000000002400fdb0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002400fdb0
sw x3, 0(x2) # store x3 (0x2400fdb0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002400fdb0 from memory into f25
fnmadd.d f20, f13, f23, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x15, 0xc0d98ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95e60a49 # load x3 with 32 MSBs 0x0000000095e60a49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095e60a49
sw x3, 0(x2) # store x3 (0x95e60a49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000095e60a49 from memory into f12
li x3, 0x97963527 # load x3 with 32 MSBs 0x0000000097963527
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097963527
sw x3, 0(x2) # store x3 (0x97963527) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000097963527 from memory into f24
li x3, 0x9488d167 # load x3 with 32 MSBs 0x000000009488d167
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009488d167
sw x3, 0(x2) # store x3 (0x9488d167) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009488d167 from memory into f26
fnmadd.d f15, f12, f24, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x30, 0x6f954c38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f62d9e8 # load x3 with 32 MSBs 0x000000002f62d9e8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f62d9e8
sw x3, 0(x2) # store x3 (0x2f62d9e8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002f62d9e8 from memory into f31
li x3, 0x7380bb48 # load x3 with 32 MSBs 0x000000007380bb48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007380bb48
sw x3, 0(x2) # store x3 (0x7380bb48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007380bb48 from memory into f25
li x3, 0x48207bc8 # load x3 with 32 MSBs 0x0000000048207bc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000048207bc8
sw x3, 0(x2) # store x3 (0x48207bc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000048207bc8 from memory into f1
fnmadd.d f30, f31, f25, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x7, 0x49d89131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde2c6b7f # load x3 with 32 MSBs 0x00000000de2c6b7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de2c6b7f
sw x3, 0(x2) # store x3 (0xde2c6b7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000de2c6b7f from memory into f9
li x3, 0xd5ebdb5c # load x3 with 32 MSBs 0x00000000d5ebdb5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d5ebdb5c
sw x3, 0(x2) # store x3 (0xd5ebdb5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d5ebdb5c from memory into f26
li x3, 0xf62fba40 # load x3 with 32 MSBs 0x00000000f62fba40
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f62fba40
sw x3, 0(x2) # store x3 (0xf62fba40) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f62fba40 from memory into f2
fnmadd.d f7, f9, f26, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x31, 0xfcc10494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe589f6db # load x3 with 32 MSBs 0x00000000e589f6db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e589f6db
sw x3, 0(x2) # store x3 (0xe589f6db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e589f6db from memory into f24
li x3, 0x120b71f3 # load x3 with 32 MSBs 0x00000000120b71f3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000120b71f3
sw x3, 0(x2) # store x3 (0x120b71f3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000120b71f3 from memory into f27
li x3, 0x4ba66484 # load x3 with 32 MSBs 0x000000004ba66484
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ba66484
sw x3, 0(x2) # store x3 (0x4ba66484) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004ba66484 from memory into f10
fnmadd.d f31, f24, f27, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x2, 0xd6e71427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x627b3e05 # load x3 with 32 MSBs 0x00000000627b3e05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000627b3e05
sw x3, 0(x2) # store x3 (0x627b3e05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000627b3e05 from memory into f1
li x3, 0x697dbc61 # load x3 with 32 MSBs 0x00000000697dbc61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000697dbc61
sw x3, 0(x2) # store x3 (0x697dbc61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000697dbc61 from memory into f28
li x3, 0x9854c582 # load x3 with 32 MSBs 0x000000009854c582
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009854c582
sw x3, 0(x2) # store x3 (0x9854c582) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009854c582 from memory into f10
fnmadd.d f2, f1, f28, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x21, 0x6d06ca6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0599e3d # load x3 with 32 MSBs 0x00000000d0599e3d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0599e3d
sw x3, 0(x2) # store x3 (0xd0599e3d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d0599e3d from memory into f11
li x3, 0x5b0a1316 # load x3 with 32 MSBs 0x000000005b0a1316
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b0a1316
sw x3, 0(x2) # store x3 (0x5b0a1316) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000005b0a1316 from memory into f29
li x3, 0xb0019ef1 # load x3 with 32 MSBs 0x00000000b0019ef1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0019ef1
sw x3, 0(x2) # store x3 (0xb0019ef1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b0019ef1 from memory into f12
fnmadd.d f21, f11, f29, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x29, 0x5a210532 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x311882d8 # load x3 with 32 MSBs 0x00000000311882d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000311882d8
sw x3, 0(x2) # store x3 (0x311882d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000311882d8 from memory into f8
li x3, 0xcbb8a2e4 # load x3 with 32 MSBs 0x00000000cbb8a2e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cbb8a2e4
sw x3, 0(x2) # store x3 (0xcbb8a2e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000cbb8a2e4 from memory into f30
li x3, 0xc9098e9f # load x3 with 32 MSBs 0x00000000c9098e9f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9098e9f
sw x3, 0(x2) # store x3 (0xc9098e9f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c9098e9f from memory into f14
fnmadd.d f29, f8, f30, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x12, 0xaea7af93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06fbf34e # load x3 with 32 MSBs 0x0000000006fbf34e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006fbf34e
sw x3, 0(x2) # store x3 (0x06fbf34e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000006fbf34e from memory into f24
li x3, 0x63755b51 # load x3 with 32 MSBs 0x0000000063755b51
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063755b51
sw x3, 0(x2) # store x3 (0x63755b51) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000063755b51 from memory into f31
li x3, 0xacc96abd # load x3 with 32 MSBs 0x00000000acc96abd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000acc96abd
sw x3, 0(x2) # store x3 (0xacc96abd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000acc96abd from memory into f13
fnmadd.d f12, f24, f31, f13 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
